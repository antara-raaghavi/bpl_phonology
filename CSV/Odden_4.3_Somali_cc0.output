[['daar', 'daarta', 'daaro', '', '', ''], ['ɡees', 'ɡeesta', 'ɡeeso', '', '', ''], ['laf', 'lafta', 'lafo', '', '', ''], ['luɡ', 'luɡta', 'luɣo', '', '', ''], ['naaɡ', 'naaɡta', 'naaɣo', '', '', ''], ['tib', 'tibta', 'tiβo', '', '', ''], ['sab', 'sabta', 'saβo', '', '', ''], ['bad', 'bada', 'baðo', '', '', ''], ['ʃid', 'ʃida', 'ʃiðo', '', '', ''], ['feeḍ', 'feeḍa', 'feeṛo', '', '', ''], ['ʕiir', 'ʕiirta', 'ʕiiro', '', '', ''], ['ʔul', 'ʔuʃa', 'ʔulo', '', '', ''], ['bil', 'biʃa', 'bilo', '', '', ''], ['meel', 'meeʃa', 'meelo', '', '', ''], ['kaliil', 'kaliiʃa', 'kaliilo', '', '', ''], ['najl', 'najʃa', 'najlo', '', '', ''], ['sun', 'sunta', 'sumo', '', '', ''], ['laan', 'laanta', 'laamo', '', '', ''], ['sin', 'sinta', 'simo', '', '', ''], ['dan', 'danta', 'dano', '', '', ''], ['daan', 'daanta', 'daano', '', '', ''], ['saan', 'saanta', 'saano', '', '', ''], ['niriɡ', 'niriɡta', 'nirɡo', '', '', ''], ['ɡaβaḍ', 'ɡaβaḍa', 'ɡabḍo', '', '', ''], ['hoɣol', 'hoɣoʃa', 'hoɡlo', '', '', ''], ['baɣal', 'baɣaʃa', 'baɡlo', '', '', ''], ['waħar', 'waħarta', 'waħaro', '', '', ''], ['irbad', 'irbada', 'irbaðo', '', '', ''], ['kefed', 'kefeda', 'kefeðo', '', '', ''], ['ʃilin', 'ʃilinta', 'ʃilino', '', '', ''], ['bohol', 'bohoʃa', 'boholo', '', '', ''], ['ʔaajad', 'ʔaajada', 'ʔaajaðo', '', '', ''], ['ɡaʕan', 'ɡaʕanta', 'ɡaʕmo', '', '', ''], ['ʔinan', 'ʔinanta', 'ʔinano', '', '', ''], ['', '', '', 'suɣaj', 'suɡtaj', 'suɡnaj'], ['', '', '', 'kaβaj', 'kabtaj', 'kabnaj'], ['', '', '', 'siðaj', 'sidaj', 'sidnaj'], ['', '', '', 'dilaj', 'diʃaj', 'dillaj'], ['', '', '', 'ɡanaj', 'ɡantaj', 'ɡannaj'], ['', '', '', 'tumaj', 'tuntaj', 'tunnaj'], ['', '', '', 'arɡaj', 'araɡtaj', 'araɡnaj'], ['', '', '', 'ɡudbaj', 'ɡuðubtaj', 'ɡuðubnaj'], ['', '', '', 'qoslaj', 'qosoʃaj', 'qosollaj'], ['', '', '', 'hadlaj', 'haðaʃaj', 'haðallaj']]
daar  >  ['d', 'a', 'a', 'r'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
daarta  >  ['d', 'a', 'a', 'r', 't', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
daaro  >  ['d', 'a', 'a', 'r', 'o'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
ɡees  >  ['g', 'e', 'e', 's'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
ɡeesta  >  ['g', 'e', 'e', 's', 't', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
ɡeeso  >  ['g', 'e', 'e', 's', 'o'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
laf  >  ['l', 'a', 'f'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
lafta  >  ['l', 'a', 'f', 't', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
lafo  >  ['l', 'a', 'f', 'o'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
luɡ  >  ['l', 'u', 'g'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
luɡta  >  ['l', 'u', 'g', 't', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
luɣo  >  ['l', 'u', 'O', 'o'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O'}
naaɡ  >  ['n', 'a', 'a', 'g'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O'}
naaɡta  >  ['n', 'a', 'a', 'g', 't', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O'}
naaɣo  >  ['n', 'a', 'a', 'O', 'o'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O'}
tib  >  ['t', 'i', 'b'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O'}
tibta  >  ['t', 'i', 'b', 't', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O'}
tiβo  >  ['t', 'i', 'X', 'o'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X'}
sab  >  ['s', 'a', 'b'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X'}
sabta  >  ['s', 'a', 'b', 't', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X'}
saβo  >  ['s', 'a', 'X', 'o'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X'}
bad  >  ['b', 'a', 'd'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X'}
bada  >  ['b', 'a', 'd', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X'}
baðo  >  ['b', 'a', 'Z', 'o'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z'}
ʃid  >  ['B', 'i', 'd'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z'}
ʃida  >  ['B', 'i', 'd', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z'}
ʃiðo  >  ['B', 'i', 'Z', 'o'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z'}
feeḍ  >  ['f', 'e', 'e', '1'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1'}
feeḍa  >  ['f', 'e', 'e', '1', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1'}
feeṛo  >  ['f', 'e', 'e', '2', 'o'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2'}
ʕiir  >  ['3', 'i', 'i', 'r'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3'}
ʕiirta  >  ['3', 'i', 'i', 'r', 't', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3'}
ʕiiro  >  ['3', 'i', 'i', 'r', 'o'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3'}
ʔul  >  ['4', 'u', 'l'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4'}
ʔuʃa  >  ['4', 'u', 'B', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4'}
ʔulo  >  ['4', 'u', 'l', 'o'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4'}
bil  >  ['b', 'i', 'l'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4'}
biʃa  >  ['b', 'i', 'B', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4'}
bilo  >  ['b', 'i', 'l', 'o'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4'}
meel  >  ['m', 'e', 'e', 'l'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4'}
meeʃa  >  ['m', 'e', 'e', 'B', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4'}
meelo  >  ['m', 'e', 'e', 'l', 'o'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4'}
kaliil  >  ['k', 'a', 'l', 'i', 'i', 'l'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4'}
kaliiʃa  >  ['k', 'a', 'l', 'i', 'i', 'B', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4'}
kaliilo  >  ['k', 'a', 'l', 'i', 'i', 'l', 'o'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4'}
najl  >  ['n', 'a', 'j', 'l'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4'}
najʃa  >  ['n', 'a', 'j', 'B', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4'}
najlo  >  ['n', 'a', 'j', 'l', 'o'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4'}
sun  >  ['s', 'u', 'n'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4'}
sunta  >  ['s', 'u', 'n', 't', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4'}
sumo  >  ['s', 'u', 'm', 'o'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4'}
laan  >  ['l', 'a', 'a', 'n'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4'}
laanta  >  ['l', 'a', 'a', 'n', 't', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4'}
laamo  >  ['l', 'a', 'a', 'm', 'o'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4'}
sin  >  ['s', 'i', 'n'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4'}
sinta  >  ['s', 'i', 'n', 't', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4'}
simo  >  ['s', 'i', 'm', 'o'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4'}
dan  >  ['d', 'a', 'n'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4'}
danta  >  ['d', 'a', 'n', 't', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4'}
dano  >  ['d', 'a', 'n', 'o'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4'}
daan  >  ['d', 'a', 'a', 'n'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4'}
daanta  >  ['d', 'a', 'a', 'n', 't', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4'}
daano  >  ['d', 'a', 'a', 'n', 'o'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4'}
saan  >  ['s', 'a', 'a', 'n'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4'}
saanta  >  ['s', 'a', 'a', 'n', 't', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4'}
saano  >  ['s', 'a', 'a', 'n', 'o'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4'}
niriɡ  >  ['n', 'i', 'r', 'i', 'g'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4'}
niriɡta  >  ['n', 'i', 'r', 'i', 'g', 't', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4'}
nirɡo  >  ['n', 'i', 'r', 'g', 'o'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4'}
ɡaβaḍ  >  ['g', 'a', 'X', 'a', '1'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4'}
ɡaβaḍa  >  ['g', 'a', 'X', 'a', '1', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4'}
ɡabḍo  >  ['g', 'a', 'b', '1', 'o'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4'}
hoɣol  >  ['h', 'o', 'O', 'o', 'l'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4'}
hoɣoʃa  >  ['h', 'o', 'O', 'o', 'B', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4'}
hoɡlo  >  ['h', 'o', 'g', 'l', 'o'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4'}
baɣal  >  ['b', 'a', 'O', 'a', 'l'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4'}
baɣaʃa  >  ['b', 'a', 'O', 'a', 'B', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4'}
baɡlo  >  ['b', 'a', 'g', 'l', 'o'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4'}
waħar  >  ['w', 'a', '5', 'a', 'r'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
waħarta  >  ['w', 'a', '5', 'a', 'r', 't', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
waħaro  >  ['w', 'a', '5', 'a', 'r', 'o'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
irbad  >  ['i', 'r', 'b', 'a', 'd'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
irbada  >  ['i', 'r', 'b', 'a', 'd', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
irbaðo  >  ['i', 'r', 'b', 'a', 'Z', 'o'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
kefed  >  ['k', 'e', 'f', 'e', 'd'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
kefeda  >  ['k', 'e', 'f', 'e', 'd', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
kefeðo  >  ['k', 'e', 'f', 'e', 'Z', 'o'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
ʃilin  >  ['B', 'i', 'l', 'i', 'n'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
ʃilinta  >  ['B', 'i', 'l', 'i', 'n', 't', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
ʃilino  >  ['B', 'i', 'l', 'i', 'n', 'o'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
bohol  >  ['b', 'o', 'h', 'o', 'l'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
bohoʃa  >  ['b', 'o', 'h', 'o', 'B', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
boholo  >  ['b', 'o', 'h', 'o', 'l', 'o'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
ʔaajad  >  ['4', 'a', 'a', 'j', 'a', 'd'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
ʔaajada  >  ['4', 'a', 'a', 'j', 'a', 'd', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
ʔaajaðo  >  ['4', 'a', 'a', 'j', 'a', 'Z', 'o'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
ɡaʕan  >  ['g', 'a', '3', 'a', 'n'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
ɡaʕanta  >  ['g', 'a', '3', 'a', 'n', 't', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
ɡaʕmo  >  ['g', 'a', '3', 'm', 'o'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
ʔinan  >  ['4', 'i', 'n', 'a', 'n'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
ʔinanta  >  ['4', 'i', 'n', 'a', 'n', 't', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
ʔinano  >  ['4', 'i', 'n', 'a', 'n', 'o'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
suɣaj  >  ['s', 'u', 'O', 'a', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
suɡtaj  >  ['s', 'u', 'g', 't', 'a', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
suɡnaj  >  ['s', 'u', 'g', 'n', 'a', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
kaβaj  >  ['k', 'a', 'X', 'a', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
kabtaj  >  ['k', 'a', 'b', 't', 'a', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
kabnaj  >  ['k', 'a', 'b', 'n', 'a', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
siðaj  >  ['s', 'i', 'Z', 'a', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
sidaj  >  ['s', 'i', 'd', 'a', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
sidnaj  >  ['s', 'i', 'd', 'n', 'a', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
dilaj  >  ['d', 'i', 'l', 'a', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
diʃaj  >  ['d', 'i', 'B', 'a', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
dillaj  >  ['d', 'i', 'l', 'l', 'a', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
ɡanaj  >  ['g', 'a', 'n', 'a', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
ɡantaj  >  ['g', 'a', 'n', 't', 'a', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
ɡannaj  >  ['g', 'a', 'n', 'n', 'a', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
tumaj  >  ['t', 'u', 'm', 'a', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
tuntaj  >  ['t', 'u', 'n', 't', 'a', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
tunnaj  >  ['t', 'u', 'n', 'n', 'a', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
arɡaj  >  ['a', 'r', 'g', 'a', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
araɡtaj  >  ['a', 'r', 'a', 'g', 't', 'a', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
araɡnaj  >  ['a', 'r', 'a', 'g', 'n', 'a', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
ɡudbaj  >  ['g', 'u', 'd', 'b', 'a', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
ɡuðubtaj  >  ['g', 'u', 'Z', 'u', 'b', 't', 'a', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
ɡuðubnaj  >  ['g', 'u', 'Z', 'u', 'b', 'n', 'a', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
qoslaj  >  ['q', 'o', 's', 'l', 'a', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
qosoʃaj  >  ['q', 'o', 's', 'o', 'B', 'a', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
qosollaj  >  ['q', 'o', 's', 'o', 'l', 'l', 'a', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
hadlaj  >  ['h', 'a', 'd', 'l', 'a', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
haðaʃaj  >  ['h', 'a', 'Z', 'a', 'B', 'a', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
haðallaj  >  ['h', 'a', 'Z', 'a', 'l', 'l', 'a', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɣ': 'O', 'β': 'X', 'ð': 'Z', 'ḍ': '1', 'ṛ': '2', 'ʕ': '3', 'ʔ': '4', 'ħ': '5'}
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun var30A () String)
(declare-fun var30B () String)
(declare-fun var30C () String)
(declare-fun var30D () String)
(declare-fun var30E () String)
(declare-fun var30F () String)
(declare-fun unch230A () String)
(declare-fun ch30A () String)
(declare-fun unch130A () String)
(declare-fun stem30 () String)
(declare-fun unch230B () String)
(declare-fun ch30B () String)
(declare-fun unch130B () String)
(declare-fun unch230C () String)
(declare-fun ch30C () String)
(declare-fun unch130C () String)
(declare-fun unch230D () String)
(declare-fun ch30D () String)
(declare-fun unch130D () String)
(declare-fun unch230E () String)
(declare-fun ch30E () String)
(declare-fun unch130E () String)
(declare-fun unch230F () String)
(declare-fun ch30F () String)
(declare-fun unch130F () String)
(declare-fun l30 () Int)
(declare-fun sc30A () Int)
(declare-fun sc30B () Int)
(declare-fun sc30C () Int)
(declare-fun sc30D () Int)
(declare-fun sc30E () Int)
(declare-fun sc30F () Int)
(declare-fun var31A () String)
(declare-fun var31B () String)
(declare-fun var31C () String)
(declare-fun var31D () String)
(declare-fun var31E () String)
(declare-fun var31F () String)
(declare-fun unch231A () String)
(declare-fun ch31A () String)
(declare-fun unch131A () String)
(declare-fun stem31 () String)
(declare-fun unch231B () String)
(declare-fun ch31B () String)
(declare-fun unch131B () String)
(declare-fun unch231C () String)
(declare-fun ch31C () String)
(declare-fun unch131C () String)
(declare-fun unch231D () String)
(declare-fun ch31D () String)
(declare-fun unch131D () String)
(declare-fun unch231E () String)
(declare-fun ch31E () String)
(declare-fun unch131E () String)
(declare-fun unch231F () String)
(declare-fun ch31F () String)
(declare-fun unch131F () String)
(declare-fun l31 () Int)
(declare-fun sc31A () Int)
(declare-fun sc31B () Int)
(declare-fun sc31C () Int)
(declare-fun sc31D () Int)
(declare-fun sc31E () Int)
(declare-fun sc31F () Int)
(declare-fun var32A () String)
(declare-fun var32B () String)
(declare-fun var32C () String)
(declare-fun var32D () String)
(declare-fun var32E () String)
(declare-fun var32F () String)
(declare-fun unch232A () String)
(declare-fun ch32A () String)
(declare-fun unch132A () String)
(declare-fun stem32 () String)
(declare-fun unch232B () String)
(declare-fun ch32B () String)
(declare-fun unch132B () String)
(declare-fun unch232C () String)
(declare-fun ch32C () String)
(declare-fun unch132C () String)
(declare-fun unch232D () String)
(declare-fun ch32D () String)
(declare-fun unch132D () String)
(declare-fun unch232E () String)
(declare-fun ch32E () String)
(declare-fun unch132E () String)
(declare-fun unch232F () String)
(declare-fun ch32F () String)
(declare-fun unch132F () String)
(declare-fun l32 () Int)
(declare-fun sc32A () Int)
(declare-fun sc32B () Int)
(declare-fun sc32C () Int)
(declare-fun sc32D () Int)
(declare-fun sc32E () Int)
(declare-fun sc32F () Int)
(declare-fun var33A () String)
(declare-fun var33B () String)
(declare-fun var33C () String)
(declare-fun var33D () String)
(declare-fun var33E () String)
(declare-fun var33F () String)
(declare-fun unch233A () String)
(declare-fun ch33A () String)
(declare-fun unch133A () String)
(declare-fun stem33 () String)
(declare-fun unch233B () String)
(declare-fun ch33B () String)
(declare-fun unch133B () String)
(declare-fun unch233C () String)
(declare-fun ch33C () String)
(declare-fun unch133C () String)
(declare-fun unch233D () String)
(declare-fun ch33D () String)
(declare-fun unch133D () String)
(declare-fun unch233E () String)
(declare-fun ch33E () String)
(declare-fun unch133E () String)
(declare-fun unch233F () String)
(declare-fun ch33F () String)
(declare-fun unch133F () String)
(declare-fun l33 () Int)
(declare-fun sc33A () Int)
(declare-fun sc33B () Int)
(declare-fun sc33C () Int)
(declare-fun sc33D () Int)
(declare-fun sc33E () Int)
(declare-fun sc33F () Int)
(declare-fun var34A () String)
(declare-fun var34B () String)
(declare-fun var34C () String)
(declare-fun var34D () String)
(declare-fun var34E () String)
(declare-fun var34F () String)
(declare-fun unch234A () String)
(declare-fun ch34A () String)
(declare-fun unch134A () String)
(declare-fun stem34 () String)
(declare-fun unch234B () String)
(declare-fun ch34B () String)
(declare-fun unch134B () String)
(declare-fun unch234C () String)
(declare-fun ch34C () String)
(declare-fun unch134C () String)
(declare-fun unch234D () String)
(declare-fun ch34D () String)
(declare-fun unch134D () String)
(declare-fun unch234E () String)
(declare-fun ch34E () String)
(declare-fun unch134E () String)
(declare-fun unch234F () String)
(declare-fun ch34F () String)
(declare-fun unch134F () String)
(declare-fun l34 () Int)
(declare-fun sc34A () Int)
(declare-fun sc34B () Int)
(declare-fun sc34C () Int)
(declare-fun sc34D () Int)
(declare-fun sc34E () Int)
(declare-fun sc34F () Int)
(declare-fun var35A () String)
(declare-fun var35B () String)
(declare-fun var35C () String)
(declare-fun var35D () String)
(declare-fun var35E () String)
(declare-fun var35F () String)
(declare-fun unch235A () String)
(declare-fun ch35A () String)
(declare-fun unch135A () String)
(declare-fun stem35 () String)
(declare-fun unch235B () String)
(declare-fun ch35B () String)
(declare-fun unch135B () String)
(declare-fun unch235C () String)
(declare-fun ch35C () String)
(declare-fun unch135C () String)
(declare-fun unch235D () String)
(declare-fun ch35D () String)
(declare-fun unch135D () String)
(declare-fun unch235E () String)
(declare-fun ch35E () String)
(declare-fun unch135E () String)
(declare-fun unch235F () String)
(declare-fun ch35F () String)
(declare-fun unch135F () String)
(declare-fun l35 () Int)
(declare-fun sc35A () Int)
(declare-fun sc35B () Int)
(declare-fun sc35C () Int)
(declare-fun sc35D () Int)
(declare-fun sc35E () Int)
(declare-fun sc35F () Int)
(declare-fun var36A () String)
(declare-fun var36B () String)
(declare-fun var36C () String)
(declare-fun var36D () String)
(declare-fun var36E () String)
(declare-fun var36F () String)
(declare-fun unch236A () String)
(declare-fun ch36A () String)
(declare-fun unch136A () String)
(declare-fun stem36 () String)
(declare-fun unch236B () String)
(declare-fun ch36B () String)
(declare-fun unch136B () String)
(declare-fun unch236C () String)
(declare-fun ch36C () String)
(declare-fun unch136C () String)
(declare-fun unch236D () String)
(declare-fun ch36D () String)
(declare-fun unch136D () String)
(declare-fun unch236E () String)
(declare-fun ch36E () String)
(declare-fun unch136E () String)
(declare-fun unch236F () String)
(declare-fun ch36F () String)
(declare-fun unch136F () String)
(declare-fun l36 () Int)
(declare-fun sc36A () Int)
(declare-fun sc36B () Int)
(declare-fun sc36C () Int)
(declare-fun sc36D () Int)
(declare-fun sc36E () Int)
(declare-fun sc36F () Int)
(declare-fun var37A () String)
(declare-fun var37B () String)
(declare-fun var37C () String)
(declare-fun var37D () String)
(declare-fun var37E () String)
(declare-fun var37F () String)
(declare-fun unch237A () String)
(declare-fun ch37A () String)
(declare-fun unch137A () String)
(declare-fun stem37 () String)
(declare-fun unch237B () String)
(declare-fun ch37B () String)
(declare-fun unch137B () String)
(declare-fun unch237C () String)
(declare-fun ch37C () String)
(declare-fun unch137C () String)
(declare-fun unch237D () String)
(declare-fun ch37D () String)
(declare-fun unch137D () String)
(declare-fun unch237E () String)
(declare-fun ch37E () String)
(declare-fun unch137E () String)
(declare-fun unch237F () String)
(declare-fun ch37F () String)
(declare-fun unch137F () String)
(declare-fun l37 () Int)
(declare-fun sc37A () Int)
(declare-fun sc37B () Int)
(declare-fun sc37C () Int)
(declare-fun sc37D () Int)
(declare-fun sc37E () Int)
(declare-fun sc37F () Int)
(declare-fun var38A () String)
(declare-fun var38B () String)
(declare-fun var38C () String)
(declare-fun var38D () String)
(declare-fun var38E () String)
(declare-fun var38F () String)
(declare-fun unch238A () String)
(declare-fun ch38A () String)
(declare-fun unch138A () String)
(declare-fun stem38 () String)
(declare-fun unch238B () String)
(declare-fun ch38B () String)
(declare-fun unch138B () String)
(declare-fun unch238C () String)
(declare-fun ch38C () String)
(declare-fun unch138C () String)
(declare-fun unch238D () String)
(declare-fun ch38D () String)
(declare-fun unch138D () String)
(declare-fun unch238E () String)
(declare-fun ch38E () String)
(declare-fun unch138E () String)
(declare-fun unch238F () String)
(declare-fun ch38F () String)
(declare-fun unch138F () String)
(declare-fun l38 () Int)
(declare-fun sc38A () Int)
(declare-fun sc38B () Int)
(declare-fun sc38C () Int)
(declare-fun sc38D () Int)
(declare-fun sc38E () Int)
(declare-fun sc38F () Int)
(declare-fun var39A () String)
(declare-fun var39B () String)
(declare-fun var39C () String)
(declare-fun var39D () String)
(declare-fun var39E () String)
(declare-fun var39F () String)
(declare-fun unch239A () String)
(declare-fun ch39A () String)
(declare-fun unch139A () String)
(declare-fun stem39 () String)
(declare-fun unch239B () String)
(declare-fun ch39B () String)
(declare-fun unch139B () String)
(declare-fun unch239C () String)
(declare-fun ch39C () String)
(declare-fun unch139C () String)
(declare-fun unch239D () String)
(declare-fun ch39D () String)
(declare-fun unch139D () String)
(declare-fun unch239E () String)
(declare-fun ch39E () String)
(declare-fun unch139E () String)
(declare-fun unch239F () String)
(declare-fun ch39F () String)
(declare-fun unch139F () String)
(declare-fun l39 () Int)
(declare-fun sc39A () Int)
(declare-fun sc39B () Int)
(declare-fun sc39C () Int)
(declare-fun sc39D () Int)
(declare-fun sc39E () Int)
(declare-fun sc39F () Int)
(declare-fun var40A () String)
(declare-fun var40B () String)
(declare-fun var40C () String)
(declare-fun var40D () String)
(declare-fun var40E () String)
(declare-fun var40F () String)
(declare-fun unch240A () String)
(declare-fun ch40A () String)
(declare-fun unch140A () String)
(declare-fun stem40 () String)
(declare-fun unch240B () String)
(declare-fun ch40B () String)
(declare-fun unch140B () String)
(declare-fun unch240C () String)
(declare-fun ch40C () String)
(declare-fun unch140C () String)
(declare-fun unch240D () String)
(declare-fun ch40D () String)
(declare-fun unch140D () String)
(declare-fun unch240E () String)
(declare-fun ch40E () String)
(declare-fun unch140E () String)
(declare-fun unch240F () String)
(declare-fun ch40F () String)
(declare-fun unch140F () String)
(declare-fun l40 () Int)
(declare-fun sc40A () Int)
(declare-fun sc40B () Int)
(declare-fun sc40C () Int)
(declare-fun sc40D () Int)
(declare-fun sc40E () Int)
(declare-fun sc40F () Int)
(declare-fun var41A () String)
(declare-fun var41B () String)
(declare-fun var41C () String)
(declare-fun var41D () String)
(declare-fun var41E () String)
(declare-fun var41F () String)
(declare-fun unch241A () String)
(declare-fun ch41A () String)
(declare-fun unch141A () String)
(declare-fun stem41 () String)
(declare-fun unch241B () String)
(declare-fun ch41B () String)
(declare-fun unch141B () String)
(declare-fun unch241C () String)
(declare-fun ch41C () String)
(declare-fun unch141C () String)
(declare-fun unch241D () String)
(declare-fun ch41D () String)
(declare-fun unch141D () String)
(declare-fun unch241E () String)
(declare-fun ch41E () String)
(declare-fun unch141E () String)
(declare-fun unch241F () String)
(declare-fun ch41F () String)
(declare-fun unch141F () String)
(declare-fun l41 () Int)
(declare-fun sc41A () Int)
(declare-fun sc41B () Int)
(declare-fun sc41C () Int)
(declare-fun sc41D () Int)
(declare-fun sc41E () Int)
(declare-fun sc41F () Int)
(declare-fun var42A () String)
(declare-fun var42B () String)
(declare-fun var42C () String)
(declare-fun var42D () String)
(declare-fun var42E () String)
(declare-fun var42F () String)
(declare-fun unch242A () String)
(declare-fun ch42A () String)
(declare-fun unch142A () String)
(declare-fun stem42 () String)
(declare-fun unch242B () String)
(declare-fun ch42B () String)
(declare-fun unch142B () String)
(declare-fun unch242C () String)
(declare-fun ch42C () String)
(declare-fun unch142C () String)
(declare-fun unch242D () String)
(declare-fun ch42D () String)
(declare-fun unch142D () String)
(declare-fun unch242E () String)
(declare-fun ch42E () String)
(declare-fun unch142E () String)
(declare-fun unch242F () String)
(declare-fun ch42F () String)
(declare-fun unch142F () String)
(declare-fun l42 () Int)
(declare-fun sc42A () Int)
(declare-fun sc42B () Int)
(declare-fun sc42C () Int)
(declare-fun sc42D () Int)
(declare-fun sc42E () Int)
(declare-fun sc42F () Int)
(declare-fun var43A () String)
(declare-fun var43B () String)
(declare-fun var43C () String)
(declare-fun var43D () String)
(declare-fun var43E () String)
(declare-fun var43F () String)
(declare-fun unch243A () String)
(declare-fun ch43A () String)
(declare-fun unch143A () String)
(declare-fun stem43 () String)
(declare-fun unch243B () String)
(declare-fun ch43B () String)
(declare-fun unch143B () String)
(declare-fun unch243C () String)
(declare-fun ch43C () String)
(declare-fun unch143C () String)
(declare-fun unch243D () String)
(declare-fun ch43D () String)
(declare-fun unch143D () String)
(declare-fun unch243E () String)
(declare-fun ch43E () String)
(declare-fun unch143E () String)
(declare-fun unch243F () String)
(declare-fun ch43F () String)
(declare-fun unch143F () String)
(declare-fun l43 () Int)
(declare-fun sc43A () Int)
(declare-fun sc43B () Int)
(declare-fun sc43C () Int)
(declare-fun sc43D () Int)
(declare-fun sc43E () Int)
(declare-fun sc43F () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= "daar" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "daarta" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "daaro" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= "gees" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "geesta" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "geeso" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= "laf" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "lafta" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "lafo" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= "lug" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "lugta" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "luOo" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= "naag" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "naagta" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "naaOo" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= "tib" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "tibta" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "tiXo" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= "sab" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "sabta" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "saXo" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= "bad" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "bada" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "baZo" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= "Bid" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "Bida" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "BiZo" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= "fee1" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "fee1a" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "fee2o" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= "3iir" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "3iirta" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "3iiro" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= "4ul" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "4uBa" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "4ulo" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= "bil" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "biBa" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "bilo" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= "meel" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "meeBa" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "meelo" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= "kaliil" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "kaliiBa" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "kaliilo" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= "najl" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "najBa" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "najlo" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= "sun" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "sunta" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "sumo" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= "laan" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "laanta" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "laamo" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= "sin" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "sinta" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "simo" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= "dan" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "danta" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "dano" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= "daan" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "daanta" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "daano" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= "saan" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "saanta" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "saano" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= "nirig" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "nirigta" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "nirgo" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= "gaXa1" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= "gaXa1a" (str.++ unch123B (str.++ var23B unch223B))))
(assert (= "gab1o" (str.++ unch123C (str.++ var23C unch223C))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= "hoOol" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= "hoOoBa" (str.++ unch124B (str.++ var24B unch224B))))
(assert (= "hoglo" (str.++ unch124C (str.++ var24C unch224C))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= "baOal" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= "baOaBa" (str.++ unch125B (str.++ var25B unch225B))))
(assert (= "baglo" (str.++ unch125C (str.++ var25C unch225C))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= "wa5ar" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= "wa5arta" (str.++ unch126B (str.++ var26B unch226B))))
(assert (= "wa5aro" (str.++ unch126C (str.++ var26C unch226C))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= "irbad" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= "irbada" (str.++ unch127B (str.++ var27B unch227B))))
(assert (= "irbaZo" (str.++ unch127C (str.++ var27C unch227C))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= "kefed" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= "kefeda" (str.++ unch128B (str.++ var28B unch228B))))
(assert (= "kefeZo" (str.++ unch128C (str.++ var28C unch228C))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= "Bilin" (str.++ unch129A (str.++ var29A unch229A))))
(assert (= "Bilinta" (str.++ unch129B (str.++ var29B unch229B))))
(assert (= "Bilino" (str.++ unch129C (str.++ var29C unch229C))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= (str.len var30A) 1))
(assert (<= (str.len var30B) 1))
(assert (<= (str.len var30C) 1))
(assert (<= (str.len var30D) 1))
(assert (<= (str.len var30E) 1))
(assert (<= (str.len var30F) 1))
(assert (= (str.++ preA (str.++ stem30 sufA)) (str.++ unch130A (str.++ ch30A unch230A))))
(assert (= (str.++ preB (str.++ stem30 sufB)) (str.++ unch130B (str.++ ch30B unch230B))))
(assert (= (str.++ preC (str.++ stem30 sufC)) (str.++ unch130C (str.++ ch30C unch230C))))
(assert (= (str.++ preD (str.++ stem30 sufD)) (str.++ unch130D (str.++ ch30D unch230D))))
(assert (= (str.++ preE (str.++ stem30 sufE)) (str.++ unch130E (str.++ ch30E unch230E))))
(assert (= (str.++ preF (str.++ stem30 sufF)) (str.++ unch130F (str.++ ch30F unch230F))))
(assert (= "bohol" (str.++ unch130A (str.++ var30A unch230A))))
(assert (= "bohoBa" (str.++ unch130B (str.++ var30B unch230B))))
(assert (= "boholo" (str.++ unch130C (str.++ var30C unch230C))))
(assert (= (str.len stem30) l30))
(assert (= (ite (= ch30A var30A) 0 1) sc30A))
(assert (= (ite (= ch30B var30B) 0 1) sc30B))
(assert (= (ite (= ch30C var30C) 0 1) sc30C))
(assert (= (ite (= ch30D var30D) 0 1) sc30D))
(assert (= (ite (= ch30E var30E) 0 1) sc30E))
(assert (= (ite (= ch30F var30F) 0 1) sc30F))
(assert (<= sc30A 1))
(assert (<= sc30B 1))
(assert (<= sc30C 1))
(assert (<= sc30D 1))
(assert (<= sc30E 1))
(assert (<= sc30F 1))
(assert (<= (str.len var31A) 1))
(assert (<= (str.len var31B) 1))
(assert (<= (str.len var31C) 1))
(assert (<= (str.len var31D) 1))
(assert (<= (str.len var31E) 1))
(assert (<= (str.len var31F) 1))
(assert (= (str.++ preA (str.++ stem31 sufA)) (str.++ unch131A (str.++ ch31A unch231A))))
(assert (= (str.++ preB (str.++ stem31 sufB)) (str.++ unch131B (str.++ ch31B unch231B))))
(assert (= (str.++ preC (str.++ stem31 sufC)) (str.++ unch131C (str.++ ch31C unch231C))))
(assert (= (str.++ preD (str.++ stem31 sufD)) (str.++ unch131D (str.++ ch31D unch231D))))
(assert (= (str.++ preE (str.++ stem31 sufE)) (str.++ unch131E (str.++ ch31E unch231E))))
(assert (= (str.++ preF (str.++ stem31 sufF)) (str.++ unch131F (str.++ ch31F unch231F))))
(assert (= "4aajad" (str.++ unch131A (str.++ var31A unch231A))))
(assert (= "4aajada" (str.++ unch131B (str.++ var31B unch231B))))
(assert (= "4aajaZo" (str.++ unch131C (str.++ var31C unch231C))))
(assert (= (str.len stem31) l31))
(assert (= (ite (= ch31A var31A) 0 1) sc31A))
(assert (= (ite (= ch31B var31B) 0 1) sc31B))
(assert (= (ite (= ch31C var31C) 0 1) sc31C))
(assert (= (ite (= ch31D var31D) 0 1) sc31D))
(assert (= (ite (= ch31E var31E) 0 1) sc31E))
(assert (= (ite (= ch31F var31F) 0 1) sc31F))
(assert (<= sc31A 1))
(assert (<= sc31B 1))
(assert (<= sc31C 1))
(assert (<= sc31D 1))
(assert (<= sc31E 1))
(assert (<= sc31F 1))
(assert (<= (str.len var32A) 1))
(assert (<= (str.len var32B) 1))
(assert (<= (str.len var32C) 1))
(assert (<= (str.len var32D) 1))
(assert (<= (str.len var32E) 1))
(assert (<= (str.len var32F) 1))
(assert (= (str.++ preA (str.++ stem32 sufA)) (str.++ unch132A (str.++ ch32A unch232A))))
(assert (= (str.++ preB (str.++ stem32 sufB)) (str.++ unch132B (str.++ ch32B unch232B))))
(assert (= (str.++ preC (str.++ stem32 sufC)) (str.++ unch132C (str.++ ch32C unch232C))))
(assert (= (str.++ preD (str.++ stem32 sufD)) (str.++ unch132D (str.++ ch32D unch232D))))
(assert (= (str.++ preE (str.++ stem32 sufE)) (str.++ unch132E (str.++ ch32E unch232E))))
(assert (= (str.++ preF (str.++ stem32 sufF)) (str.++ unch132F (str.++ ch32F unch232F))))
(assert (= "ga3an" (str.++ unch132A (str.++ var32A unch232A))))
(assert (= "ga3anta" (str.++ unch132B (str.++ var32B unch232B))))
(assert (= "ga3mo" (str.++ unch132C (str.++ var32C unch232C))))
(assert (= (str.len stem32) l32))
(assert (= (ite (= ch32A var32A) 0 1) sc32A))
(assert (= (ite (= ch32B var32B) 0 1) sc32B))
(assert (= (ite (= ch32C var32C) 0 1) sc32C))
(assert (= (ite (= ch32D var32D) 0 1) sc32D))
(assert (= (ite (= ch32E var32E) 0 1) sc32E))
(assert (= (ite (= ch32F var32F) 0 1) sc32F))
(assert (<= sc32A 1))
(assert (<= sc32B 1))
(assert (<= sc32C 1))
(assert (<= sc32D 1))
(assert (<= sc32E 1))
(assert (<= sc32F 1))
(assert (<= (str.len var33A) 1))
(assert (<= (str.len var33B) 1))
(assert (<= (str.len var33C) 1))
(assert (<= (str.len var33D) 1))
(assert (<= (str.len var33E) 1))
(assert (<= (str.len var33F) 1))
(assert (= (str.++ preA (str.++ stem33 sufA)) (str.++ unch133A (str.++ ch33A unch233A))))
(assert (= (str.++ preB (str.++ stem33 sufB)) (str.++ unch133B (str.++ ch33B unch233B))))
(assert (= (str.++ preC (str.++ stem33 sufC)) (str.++ unch133C (str.++ ch33C unch233C))))
(assert (= (str.++ preD (str.++ stem33 sufD)) (str.++ unch133D (str.++ ch33D unch233D))))
(assert (= (str.++ preE (str.++ stem33 sufE)) (str.++ unch133E (str.++ ch33E unch233E))))
(assert (= (str.++ preF (str.++ stem33 sufF)) (str.++ unch133F (str.++ ch33F unch233F))))
(assert (= "4inan" (str.++ unch133A (str.++ var33A unch233A))))
(assert (= "4inanta" (str.++ unch133B (str.++ var33B unch233B))))
(assert (= "4inano" (str.++ unch133C (str.++ var33C unch233C))))
(assert (= (str.len stem33) l33))
(assert (= (ite (= ch33A var33A) 0 1) sc33A))
(assert (= (ite (= ch33B var33B) 0 1) sc33B))
(assert (= (ite (= ch33C var33C) 0 1) sc33C))
(assert (= (ite (= ch33D var33D) 0 1) sc33D))
(assert (= (ite (= ch33E var33E) 0 1) sc33E))
(assert (= (ite (= ch33F var33F) 0 1) sc33F))
(assert (<= sc33A 1))
(assert (<= sc33B 1))
(assert (<= sc33C 1))
(assert (<= sc33D 1))
(assert (<= sc33E 1))
(assert (<= sc33F 1))
(assert (<= (str.len var34A) 1))
(assert (<= (str.len var34B) 1))
(assert (<= (str.len var34C) 1))
(assert (<= (str.len var34D) 1))
(assert (<= (str.len var34E) 1))
(assert (<= (str.len var34F) 1))
(assert (= (str.++ preA (str.++ stem34 sufA)) (str.++ unch134A (str.++ ch34A unch234A))))
(assert (= (str.++ preB (str.++ stem34 sufB)) (str.++ unch134B (str.++ ch34B unch234B))))
(assert (= (str.++ preC (str.++ stem34 sufC)) (str.++ unch134C (str.++ ch34C unch234C))))
(assert (= (str.++ preD (str.++ stem34 sufD)) (str.++ unch134D (str.++ ch34D unch234D))))
(assert (= (str.++ preE (str.++ stem34 sufE)) (str.++ unch134E (str.++ ch34E unch234E))))
(assert (= (str.++ preF (str.++ stem34 sufF)) (str.++ unch134F (str.++ ch34F unch234F))))
(assert (= "suOaj" (str.++ unch134D (str.++ var34D unch234D))))
(assert (= "sugtaj" (str.++ unch134E (str.++ var34E unch234E))))
(assert (= "sugnaj" (str.++ unch134F (str.++ var34F unch234F))))
(assert (= (str.len stem34) l34))
(assert (= (ite (= ch34A var34A) 0 1) sc34A))
(assert (= (ite (= ch34B var34B) 0 1) sc34B))
(assert (= (ite (= ch34C var34C) 0 1) sc34C))
(assert (= (ite (= ch34D var34D) 0 1) sc34D))
(assert (= (ite (= ch34E var34E) 0 1) sc34E))
(assert (= (ite (= ch34F var34F) 0 1) sc34F))
(assert (<= sc34A 1))
(assert (<= sc34B 1))
(assert (<= sc34C 1))
(assert (<= sc34D 1))
(assert (<= sc34E 1))
(assert (<= sc34F 1))
(assert (<= (str.len var35A) 1))
(assert (<= (str.len var35B) 1))
(assert (<= (str.len var35C) 1))
(assert (<= (str.len var35D) 1))
(assert (<= (str.len var35E) 1))
(assert (<= (str.len var35F) 1))
(assert (= (str.++ preA (str.++ stem35 sufA)) (str.++ unch135A (str.++ ch35A unch235A))))
(assert (= (str.++ preB (str.++ stem35 sufB)) (str.++ unch135B (str.++ ch35B unch235B))))
(assert (= (str.++ preC (str.++ stem35 sufC)) (str.++ unch135C (str.++ ch35C unch235C))))
(assert (= (str.++ preD (str.++ stem35 sufD)) (str.++ unch135D (str.++ ch35D unch235D))))
(assert (= (str.++ preE (str.++ stem35 sufE)) (str.++ unch135E (str.++ ch35E unch235E))))
(assert (= (str.++ preF (str.++ stem35 sufF)) (str.++ unch135F (str.++ ch35F unch235F))))
(assert (= "kaXaj" (str.++ unch135D (str.++ var35D unch235D))))
(assert (= "kabtaj" (str.++ unch135E (str.++ var35E unch235E))))
(assert (= "kabnaj" (str.++ unch135F (str.++ var35F unch235F))))
(assert (= (str.len stem35) l35))
(assert (= (ite (= ch35A var35A) 0 1) sc35A))
(assert (= (ite (= ch35B var35B) 0 1) sc35B))
(assert (= (ite (= ch35C var35C) 0 1) sc35C))
(assert (= (ite (= ch35D var35D) 0 1) sc35D))
(assert (= (ite (= ch35E var35E) 0 1) sc35E))
(assert (= (ite (= ch35F var35F) 0 1) sc35F))
(assert (<= sc35A 1))
(assert (<= sc35B 1))
(assert (<= sc35C 1))
(assert (<= sc35D 1))
(assert (<= sc35E 1))
(assert (<= sc35F 1))
(assert (<= (str.len var36A) 1))
(assert (<= (str.len var36B) 1))
(assert (<= (str.len var36C) 1))
(assert (<= (str.len var36D) 1))
(assert (<= (str.len var36E) 1))
(assert (<= (str.len var36F) 1))
(assert (= (str.++ preA (str.++ stem36 sufA)) (str.++ unch136A (str.++ ch36A unch236A))))
(assert (= (str.++ preB (str.++ stem36 sufB)) (str.++ unch136B (str.++ ch36B unch236B))))
(assert (= (str.++ preC (str.++ stem36 sufC)) (str.++ unch136C (str.++ ch36C unch236C))))
(assert (= (str.++ preD (str.++ stem36 sufD)) (str.++ unch136D (str.++ ch36D unch236D))))
(assert (= (str.++ preE (str.++ stem36 sufE)) (str.++ unch136E (str.++ ch36E unch236E))))
(assert (= (str.++ preF (str.++ stem36 sufF)) (str.++ unch136F (str.++ ch36F unch236F))))
(assert (= "siZaj" (str.++ unch136D (str.++ var36D unch236D))))
(assert (= "sidaj" (str.++ unch136E (str.++ var36E unch236E))))
(assert (= "sidnaj" (str.++ unch136F (str.++ var36F unch236F))))
(assert (= (str.len stem36) l36))
(assert (= (ite (= ch36A var36A) 0 1) sc36A))
(assert (= (ite (= ch36B var36B) 0 1) sc36B))
(assert (= (ite (= ch36C var36C) 0 1) sc36C))
(assert (= (ite (= ch36D var36D) 0 1) sc36D))
(assert (= (ite (= ch36E var36E) 0 1) sc36E))
(assert (= (ite (= ch36F var36F) 0 1) sc36F))
(assert (<= sc36A 1))
(assert (<= sc36B 1))
(assert (<= sc36C 1))
(assert (<= sc36D 1))
(assert (<= sc36E 1))
(assert (<= sc36F 1))
(assert (<= (str.len var37A) 1))
(assert (<= (str.len var37B) 1))
(assert (<= (str.len var37C) 1))
(assert (<= (str.len var37D) 1))
(assert (<= (str.len var37E) 1))
(assert (<= (str.len var37F) 1))
(assert (= (str.++ preA (str.++ stem37 sufA)) (str.++ unch137A (str.++ ch37A unch237A))))
(assert (= (str.++ preB (str.++ stem37 sufB)) (str.++ unch137B (str.++ ch37B unch237B))))
(assert (= (str.++ preC (str.++ stem37 sufC)) (str.++ unch137C (str.++ ch37C unch237C))))
(assert (= (str.++ preD (str.++ stem37 sufD)) (str.++ unch137D (str.++ ch37D unch237D))))
(assert (= (str.++ preE (str.++ stem37 sufE)) (str.++ unch137E (str.++ ch37E unch237E))))
(assert (= (str.++ preF (str.++ stem37 sufF)) (str.++ unch137F (str.++ ch37F unch237F))))
(assert (= "dilaj" (str.++ unch137D (str.++ var37D unch237D))))
(assert (= "diBaj" (str.++ unch137E (str.++ var37E unch237E))))
(assert (= "dillaj" (str.++ unch137F (str.++ var37F unch237F))))
(assert (= (str.len stem37) l37))
(assert (= (ite (= ch37A var37A) 0 1) sc37A))
(assert (= (ite (= ch37B var37B) 0 1) sc37B))
(assert (= (ite (= ch37C var37C) 0 1) sc37C))
(assert (= (ite (= ch37D var37D) 0 1) sc37D))
(assert (= (ite (= ch37E var37E) 0 1) sc37E))
(assert (= (ite (= ch37F var37F) 0 1) sc37F))
(assert (<= sc37A 1))
(assert (<= sc37B 1))
(assert (<= sc37C 1))
(assert (<= sc37D 1))
(assert (<= sc37E 1))
(assert (<= sc37F 1))
(assert (<= (str.len var38A) 1))
(assert (<= (str.len var38B) 1))
(assert (<= (str.len var38C) 1))
(assert (<= (str.len var38D) 1))
(assert (<= (str.len var38E) 1))
(assert (<= (str.len var38F) 1))
(assert (= (str.++ preA (str.++ stem38 sufA)) (str.++ unch138A (str.++ ch38A unch238A))))
(assert (= (str.++ preB (str.++ stem38 sufB)) (str.++ unch138B (str.++ ch38B unch238B))))
(assert (= (str.++ preC (str.++ stem38 sufC)) (str.++ unch138C (str.++ ch38C unch238C))))
(assert (= (str.++ preD (str.++ stem38 sufD)) (str.++ unch138D (str.++ ch38D unch238D))))
(assert (= (str.++ preE (str.++ stem38 sufE)) (str.++ unch138E (str.++ ch38E unch238E))))
(assert (= (str.++ preF (str.++ stem38 sufF)) (str.++ unch138F (str.++ ch38F unch238F))))
(assert (= "ganaj" (str.++ unch138D (str.++ var38D unch238D))))
(assert (= "gantaj" (str.++ unch138E (str.++ var38E unch238E))))
(assert (= "gannaj" (str.++ unch138F (str.++ var38F unch238F))))
(assert (= (str.len stem38) l38))
(assert (= (ite (= ch38A var38A) 0 1) sc38A))
(assert (= (ite (= ch38B var38B) 0 1) sc38B))
(assert (= (ite (= ch38C var38C) 0 1) sc38C))
(assert (= (ite (= ch38D var38D) 0 1) sc38D))
(assert (= (ite (= ch38E var38E) 0 1) sc38E))
(assert (= (ite (= ch38F var38F) 0 1) sc38F))
(assert (<= sc38A 1))
(assert (<= sc38B 1))
(assert (<= sc38C 1))
(assert (<= sc38D 1))
(assert (<= sc38E 1))
(assert (<= sc38F 1))
(assert (<= (str.len var39A) 1))
(assert (<= (str.len var39B) 1))
(assert (<= (str.len var39C) 1))
(assert (<= (str.len var39D) 1))
(assert (<= (str.len var39E) 1))
(assert (<= (str.len var39F) 1))
(assert (= (str.++ preA (str.++ stem39 sufA)) (str.++ unch139A (str.++ ch39A unch239A))))
(assert (= (str.++ preB (str.++ stem39 sufB)) (str.++ unch139B (str.++ ch39B unch239B))))
(assert (= (str.++ preC (str.++ stem39 sufC)) (str.++ unch139C (str.++ ch39C unch239C))))
(assert (= (str.++ preD (str.++ stem39 sufD)) (str.++ unch139D (str.++ ch39D unch239D))))
(assert (= (str.++ preE (str.++ stem39 sufE)) (str.++ unch139E (str.++ ch39E unch239E))))
(assert (= (str.++ preF (str.++ stem39 sufF)) (str.++ unch139F (str.++ ch39F unch239F))))
(assert (= "tumaj" (str.++ unch139D (str.++ var39D unch239D))))
(assert (= "tuntaj" (str.++ unch139E (str.++ var39E unch239E))))
(assert (= "tunnaj" (str.++ unch139F (str.++ var39F unch239F))))
(assert (= (str.len stem39) l39))
(assert (= (ite (= ch39A var39A) 0 1) sc39A))
(assert (= (ite (= ch39B var39B) 0 1) sc39B))
(assert (= (ite (= ch39C var39C) 0 1) sc39C))
(assert (= (ite (= ch39D var39D) 0 1) sc39D))
(assert (= (ite (= ch39E var39E) 0 1) sc39E))
(assert (= (ite (= ch39F var39F) 0 1) sc39F))
(assert (<= sc39A 1))
(assert (<= sc39B 1))
(assert (<= sc39C 1))
(assert (<= sc39D 1))
(assert (<= sc39E 1))
(assert (<= sc39F 1))
(assert (<= (str.len var40A) 1))
(assert (<= (str.len var40B) 1))
(assert (<= (str.len var40C) 1))
(assert (<= (str.len var40D) 1))
(assert (<= (str.len var40E) 1))
(assert (<= (str.len var40F) 1))
(assert (= (str.++ preA (str.++ stem40 sufA)) (str.++ unch140A (str.++ ch40A unch240A))))
(assert (= (str.++ preB (str.++ stem40 sufB)) (str.++ unch140B (str.++ ch40B unch240B))))
(assert (= (str.++ preC (str.++ stem40 sufC)) (str.++ unch140C (str.++ ch40C unch240C))))
(assert (= (str.++ preD (str.++ stem40 sufD)) (str.++ unch140D (str.++ ch40D unch240D))))
(assert (= (str.++ preE (str.++ stem40 sufE)) (str.++ unch140E (str.++ ch40E unch240E))))
(assert (= (str.++ preF (str.++ stem40 sufF)) (str.++ unch140F (str.++ ch40F unch240F))))
(assert (= "argaj" (str.++ unch140D (str.++ var40D unch240D))))
(assert (= "aragtaj" (str.++ unch140E (str.++ var40E unch240E))))
(assert (= "aragnaj" (str.++ unch140F (str.++ var40F unch240F))))
(assert (= (str.len stem40) l40))
(assert (= (ite (= ch40A var40A) 0 1) sc40A))
(assert (= (ite (= ch40B var40B) 0 1) sc40B))
(assert (= (ite (= ch40C var40C) 0 1) sc40C))
(assert (= (ite (= ch40D var40D) 0 1) sc40D))
(assert (= (ite (= ch40E var40E) 0 1) sc40E))
(assert (= (ite (= ch40F var40F) 0 1) sc40F))
(assert (<= sc40A 1))
(assert (<= sc40B 1))
(assert (<= sc40C 1))
(assert (<= sc40D 1))
(assert (<= sc40E 1))
(assert (<= sc40F 1))
(assert (<= (str.len var41A) 1))
(assert (<= (str.len var41B) 1))
(assert (<= (str.len var41C) 1))
(assert (<= (str.len var41D) 1))
(assert (<= (str.len var41E) 1))
(assert (<= (str.len var41F) 1))
(assert (= (str.++ preA (str.++ stem41 sufA)) (str.++ unch141A (str.++ ch41A unch241A))))
(assert (= (str.++ preB (str.++ stem41 sufB)) (str.++ unch141B (str.++ ch41B unch241B))))
(assert (= (str.++ preC (str.++ stem41 sufC)) (str.++ unch141C (str.++ ch41C unch241C))))
(assert (= (str.++ preD (str.++ stem41 sufD)) (str.++ unch141D (str.++ ch41D unch241D))))
(assert (= (str.++ preE (str.++ stem41 sufE)) (str.++ unch141E (str.++ ch41E unch241E))))
(assert (= (str.++ preF (str.++ stem41 sufF)) (str.++ unch141F (str.++ ch41F unch241F))))
(assert (= "gudbaj" (str.++ unch141D (str.++ var41D unch241D))))
(assert (= "guZubtaj" (str.++ unch141E (str.++ var41E unch241E))))
(assert (= "guZubnaj" (str.++ unch141F (str.++ var41F unch241F))))
(assert (= (str.len stem41) l41))
(assert (= (ite (= ch41A var41A) 0 1) sc41A))
(assert (= (ite (= ch41B var41B) 0 1) sc41B))
(assert (= (ite (= ch41C var41C) 0 1) sc41C))
(assert (= (ite (= ch41D var41D) 0 1) sc41D))
(assert (= (ite (= ch41E var41E) 0 1) sc41E))
(assert (= (ite (= ch41F var41F) 0 1) sc41F))
(assert (<= sc41A 1))
(assert (<= sc41B 1))
(assert (<= sc41C 1))
(assert (<= sc41D 1))
(assert (<= sc41E 1))
(assert (<= sc41F 1))
(assert (<= (str.len var42A) 1))
(assert (<= (str.len var42B) 1))
(assert (<= (str.len var42C) 1))
(assert (<= (str.len var42D) 1))
(assert (<= (str.len var42E) 1))
(assert (<= (str.len var42F) 1))
(assert (= (str.++ preA (str.++ stem42 sufA)) (str.++ unch142A (str.++ ch42A unch242A))))
(assert (= (str.++ preB (str.++ stem42 sufB)) (str.++ unch142B (str.++ ch42B unch242B))))
(assert (= (str.++ preC (str.++ stem42 sufC)) (str.++ unch142C (str.++ ch42C unch242C))))
(assert (= (str.++ preD (str.++ stem42 sufD)) (str.++ unch142D (str.++ ch42D unch242D))))
(assert (= (str.++ preE (str.++ stem42 sufE)) (str.++ unch142E (str.++ ch42E unch242E))))
(assert (= (str.++ preF (str.++ stem42 sufF)) (str.++ unch142F (str.++ ch42F unch242F))))
(assert (= "qoslaj" (str.++ unch142D (str.++ var42D unch242D))))
(assert (= "qosoBaj" (str.++ unch142E (str.++ var42E unch242E))))
(assert (= "qosollaj" (str.++ unch142F (str.++ var42F unch242F))))
(assert (= (str.len stem42) l42))
(assert (= (ite (= ch42A var42A) 0 1) sc42A))
(assert (= (ite (= ch42B var42B) 0 1) sc42B))
(assert (= (ite (= ch42C var42C) 0 1) sc42C))
(assert (= (ite (= ch42D var42D) 0 1) sc42D))
(assert (= (ite (= ch42E var42E) 0 1) sc42E))
(assert (= (ite (= ch42F var42F) 0 1) sc42F))
(assert (<= sc42A 1))
(assert (<= sc42B 1))
(assert (<= sc42C 1))
(assert (<= sc42D 1))
(assert (<= sc42E 1))
(assert (<= sc42F 1))
(assert (<= (str.len var43A) 1))
(assert (<= (str.len var43B) 1))
(assert (<= (str.len var43C) 1))
(assert (<= (str.len var43D) 1))
(assert (<= (str.len var43E) 1))
(assert (<= (str.len var43F) 1))
(assert (= (str.++ preA (str.++ stem43 sufA)) (str.++ unch143A (str.++ ch43A unch243A))))
(assert (= (str.++ preB (str.++ stem43 sufB)) (str.++ unch143B (str.++ ch43B unch243B))))
(assert (= (str.++ preC (str.++ stem43 sufC)) (str.++ unch143C (str.++ ch43C unch243C))))
(assert (= (str.++ preD (str.++ stem43 sufD)) (str.++ unch143D (str.++ ch43D unch243D))))
(assert (= (str.++ preE (str.++ stem43 sufE)) (str.++ unch143E (str.++ ch43E unch243E))))
(assert (= (str.++ preF (str.++ stem43 sufF)) (str.++ unch143F (str.++ ch43F unch243F))))
(assert (= "hadlaj" (str.++ unch143D (str.++ var43D unch243D))))
(assert (= "haZaBaj" (str.++ unch143E (str.++ var43E unch243E))))
(assert (= "haZallaj" (str.++ unch143F (str.++ var43F unch243F))))
(assert (= (str.len stem43) l43))
(assert (= (ite (= ch43A var43A) 0 1) sc43A))
(assert (= (ite (= ch43B var43B) 0 1) sc43B))
(assert (= (ite (= ch43C var43C) 0 1) sc43C))
(assert (= (ite (= ch43D var43D) 0 1) sc43D))
(assert (= (ite (= ch43E var43E) 0 1) sc43E))
(assert (= (ite (= ch43F var43F) 0 1) sc43F))
(assert (<= sc43A 1))
(assert (<= sc43B 1))
(assert (<= sc43C 1))
(assert (<= sc43D 1))
(assert (<= sc43E 1))
(assert (<= sc43F 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      0
      sc30A
      sc30B
      sc30C
      sc30D
      sc30E
      sc30F
      0
      sc31A
      sc31B
      sc31C
      sc31D
      sc31E
      sc31F
      0
      sc32A
      sc32B
      sc32C
      sc32D
      sc32E
      sc32F
      0
      sc33A
      sc33B
      sc33C
      sc33D
      sc33E
      sc33F
      0
      sc34A
      sc34B
      sc34C
      sc34D
      sc34E
      sc34F
      0
      sc35A
      sc35B
      sc35C
      sc35D
      sc35E
      sc35F
      0
      sc36A
      sc36B
      sc36C
      sc36D
      sc36E
      sc36F
      0
      sc37A
      sc37B
      sc37C
      sc37D
      sc37E
      sc37F
      0
      sc38A
      sc38B
      sc38C
      sc38D
      sc38E
      sc38F
      0
      sc39A
      sc39B
      sc39C
      sc39D
      sc39E
      sc39F
      0
      sc40A
      sc40B
      sc40C
      sc40D
      sc40E
      sc40F
      0
      sc41A
      sc41B
      sc41C
      sc41D
      sc41E
      sc41F
      0
      sc42A
      sc42B
      sc42C
      sc42D
      sc42E
      sc42F
      0
      sc43A
      sc43B
      sc43C
      sc43D
      sc43E
      sc43F)
   4))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A
      sc17A
      sc18A
      sc19A
      sc20A
      sc21A
      sc22A
      sc23A
      sc24A
      sc25A
      sc26A
      sc27A
      sc28A
      sc29A
      sc30A
      sc31A
      sc32A
      sc33A
      sc34A
      sc35A
      sc36A
      sc37A
      sc38A
      sc39A
      sc40A
      sc41A
      sc42A
      sc43A)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun var30A () String)
(declare-fun var30B () String)
(declare-fun var30C () String)
(declare-fun var30D () String)
(declare-fun var30E () String)
(declare-fun var30F () String)
(declare-fun unch230A () String)
(declare-fun ch30A () String)
(declare-fun unch130A () String)
(declare-fun stem30 () String)
(declare-fun unch230B () String)
(declare-fun ch30B () String)
(declare-fun unch130B () String)
(declare-fun unch230C () String)
(declare-fun ch30C () String)
(declare-fun unch130C () String)
(declare-fun unch230D () String)
(declare-fun ch30D () String)
(declare-fun unch130D () String)
(declare-fun unch230E () String)
(declare-fun ch30E () String)
(declare-fun unch130E () String)
(declare-fun unch230F () String)
(declare-fun ch30F () String)
(declare-fun unch130F () String)
(declare-fun l30 () Int)
(declare-fun sc30A () Int)
(declare-fun sc30B () Int)
(declare-fun sc30C () Int)
(declare-fun sc30D () Int)
(declare-fun sc30E () Int)
(declare-fun sc30F () Int)
(declare-fun var31A () String)
(declare-fun var31B () String)
(declare-fun var31C () String)
(declare-fun var31D () String)
(declare-fun var31E () String)
(declare-fun var31F () String)
(declare-fun unch231A () String)
(declare-fun ch31A () String)
(declare-fun unch131A () String)
(declare-fun stem31 () String)
(declare-fun unch231B () String)
(declare-fun ch31B () String)
(declare-fun unch131B () String)
(declare-fun unch231C () String)
(declare-fun ch31C () String)
(declare-fun unch131C () String)
(declare-fun unch231D () String)
(declare-fun ch31D () String)
(declare-fun unch131D () String)
(declare-fun unch231E () String)
(declare-fun ch31E () String)
(declare-fun unch131E () String)
(declare-fun unch231F () String)
(declare-fun ch31F () String)
(declare-fun unch131F () String)
(declare-fun l31 () Int)
(declare-fun sc31A () Int)
(declare-fun sc31B () Int)
(declare-fun sc31C () Int)
(declare-fun sc31D () Int)
(declare-fun sc31E () Int)
(declare-fun sc31F () Int)
(declare-fun var32A () String)
(declare-fun var32B () String)
(declare-fun var32C () String)
(declare-fun var32D () String)
(declare-fun var32E () String)
(declare-fun var32F () String)
(declare-fun unch232A () String)
(declare-fun ch32A () String)
(declare-fun unch132A () String)
(declare-fun stem32 () String)
(declare-fun unch232B () String)
(declare-fun ch32B () String)
(declare-fun unch132B () String)
(declare-fun unch232C () String)
(declare-fun ch32C () String)
(declare-fun unch132C () String)
(declare-fun unch232D () String)
(declare-fun ch32D () String)
(declare-fun unch132D () String)
(declare-fun unch232E () String)
(declare-fun ch32E () String)
(declare-fun unch132E () String)
(declare-fun unch232F () String)
(declare-fun ch32F () String)
(declare-fun unch132F () String)
(declare-fun l32 () Int)
(declare-fun sc32A () Int)
(declare-fun sc32B () Int)
(declare-fun sc32C () Int)
(declare-fun sc32D () Int)
(declare-fun sc32E () Int)
(declare-fun sc32F () Int)
(declare-fun var33A () String)
(declare-fun var33B () String)
(declare-fun var33C () String)
(declare-fun var33D () String)
(declare-fun var33E () String)
(declare-fun var33F () String)
(declare-fun unch233A () String)
(declare-fun ch33A () String)
(declare-fun unch133A () String)
(declare-fun stem33 () String)
(declare-fun unch233B () String)
(declare-fun ch33B () String)
(declare-fun unch133B () String)
(declare-fun unch233C () String)
(declare-fun ch33C () String)
(declare-fun unch133C () String)
(declare-fun unch233D () String)
(declare-fun ch33D () String)
(declare-fun unch133D () String)
(declare-fun unch233E () String)
(declare-fun ch33E () String)
(declare-fun unch133E () String)
(declare-fun unch233F () String)
(declare-fun ch33F () String)
(declare-fun unch133F () String)
(declare-fun l33 () Int)
(declare-fun sc33A () Int)
(declare-fun sc33B () Int)
(declare-fun sc33C () Int)
(declare-fun sc33D () Int)
(declare-fun sc33E () Int)
(declare-fun sc33F () Int)
(declare-fun var34A () String)
(declare-fun var34B () String)
(declare-fun var34C () String)
(declare-fun var34D () String)
(declare-fun var34E () String)
(declare-fun var34F () String)
(declare-fun unch234A () String)
(declare-fun ch34A () String)
(declare-fun unch134A () String)
(declare-fun stem34 () String)
(declare-fun unch234B () String)
(declare-fun ch34B () String)
(declare-fun unch134B () String)
(declare-fun unch234C () String)
(declare-fun ch34C () String)
(declare-fun unch134C () String)
(declare-fun unch234D () String)
(declare-fun ch34D () String)
(declare-fun unch134D () String)
(declare-fun unch234E () String)
(declare-fun ch34E () String)
(declare-fun unch134E () String)
(declare-fun unch234F () String)
(declare-fun ch34F () String)
(declare-fun unch134F () String)
(declare-fun l34 () Int)
(declare-fun sc34A () Int)
(declare-fun sc34B () Int)
(declare-fun sc34C () Int)
(declare-fun sc34D () Int)
(declare-fun sc34E () Int)
(declare-fun sc34F () Int)
(declare-fun var35A () String)
(declare-fun var35B () String)
(declare-fun var35C () String)
(declare-fun var35D () String)
(declare-fun var35E () String)
(declare-fun var35F () String)
(declare-fun unch235A () String)
(declare-fun ch35A () String)
(declare-fun unch135A () String)
(declare-fun stem35 () String)
(declare-fun unch235B () String)
(declare-fun ch35B () String)
(declare-fun unch135B () String)
(declare-fun unch235C () String)
(declare-fun ch35C () String)
(declare-fun unch135C () String)
(declare-fun unch235D () String)
(declare-fun ch35D () String)
(declare-fun unch135D () String)
(declare-fun unch235E () String)
(declare-fun ch35E () String)
(declare-fun unch135E () String)
(declare-fun unch235F () String)
(declare-fun ch35F () String)
(declare-fun unch135F () String)
(declare-fun l35 () Int)
(declare-fun sc35A () Int)
(declare-fun sc35B () Int)
(declare-fun sc35C () Int)
(declare-fun sc35D () Int)
(declare-fun sc35E () Int)
(declare-fun sc35F () Int)
(declare-fun var36A () String)
(declare-fun var36B () String)
(declare-fun var36C () String)
(declare-fun var36D () String)
(declare-fun var36E () String)
(declare-fun var36F () String)
(declare-fun unch236A () String)
(declare-fun ch36A () String)
(declare-fun unch136A () String)
(declare-fun stem36 () String)
(declare-fun unch236B () String)
(declare-fun ch36B () String)
(declare-fun unch136B () String)
(declare-fun unch236C () String)
(declare-fun ch36C () String)
(declare-fun unch136C () String)
(declare-fun unch236D () String)
(declare-fun ch36D () String)
(declare-fun unch136D () String)
(declare-fun unch236E () String)
(declare-fun ch36E () String)
(declare-fun unch136E () String)
(declare-fun unch236F () String)
(declare-fun ch36F () String)
(declare-fun unch136F () String)
(declare-fun l36 () Int)
(declare-fun sc36A () Int)
(declare-fun sc36B () Int)
(declare-fun sc36C () Int)
(declare-fun sc36D () Int)
(declare-fun sc36E () Int)
(declare-fun sc36F () Int)
(declare-fun var37A () String)
(declare-fun var37B () String)
(declare-fun var37C () String)
(declare-fun var37D () String)
(declare-fun var37E () String)
(declare-fun var37F () String)
(declare-fun unch237A () String)
(declare-fun ch37A () String)
(declare-fun unch137A () String)
(declare-fun stem37 () String)
(declare-fun unch237B () String)
(declare-fun ch37B () String)
(declare-fun unch137B () String)
(declare-fun unch237C () String)
(declare-fun ch37C () String)
(declare-fun unch137C () String)
(declare-fun unch237D () String)
(declare-fun ch37D () String)
(declare-fun unch137D () String)
(declare-fun unch237E () String)
(declare-fun ch37E () String)
(declare-fun unch137E () String)
(declare-fun unch237F () String)
(declare-fun ch37F () String)
(declare-fun unch137F () String)
(declare-fun l37 () Int)
(declare-fun sc37A () Int)
(declare-fun sc37B () Int)
(declare-fun sc37C () Int)
(declare-fun sc37D () Int)
(declare-fun sc37E () Int)
(declare-fun sc37F () Int)
(declare-fun var38A () String)
(declare-fun var38B () String)
(declare-fun var38C () String)
(declare-fun var38D () String)
(declare-fun var38E () String)
(declare-fun var38F () String)
(declare-fun unch238A () String)
(declare-fun ch38A () String)
(declare-fun unch138A () String)
(declare-fun stem38 () String)
(declare-fun unch238B () String)
(declare-fun ch38B () String)
(declare-fun unch138B () String)
(declare-fun unch238C () String)
(declare-fun ch38C () String)
(declare-fun unch138C () String)
(declare-fun unch238D () String)
(declare-fun ch38D () String)
(declare-fun unch138D () String)
(declare-fun unch238E () String)
(declare-fun ch38E () String)
(declare-fun unch138E () String)
(declare-fun unch238F () String)
(declare-fun ch38F () String)
(declare-fun unch138F () String)
(declare-fun l38 () Int)
(declare-fun sc38A () Int)
(declare-fun sc38B () Int)
(declare-fun sc38C () Int)
(declare-fun sc38D () Int)
(declare-fun sc38E () Int)
(declare-fun sc38F () Int)
(declare-fun var39A () String)
(declare-fun var39B () String)
(declare-fun var39C () String)
(declare-fun var39D () String)
(declare-fun var39E () String)
(declare-fun var39F () String)
(declare-fun unch239A () String)
(declare-fun ch39A () String)
(declare-fun unch139A () String)
(declare-fun stem39 () String)
(declare-fun unch239B () String)
(declare-fun ch39B () String)
(declare-fun unch139B () String)
(declare-fun unch239C () String)
(declare-fun ch39C () String)
(declare-fun unch139C () String)
(declare-fun unch239D () String)
(declare-fun ch39D () String)
(declare-fun unch139D () String)
(declare-fun unch239E () String)
(declare-fun ch39E () String)
(declare-fun unch139E () String)
(declare-fun unch239F () String)
(declare-fun ch39F () String)
(declare-fun unch139F () String)
(declare-fun l39 () Int)
(declare-fun sc39A () Int)
(declare-fun sc39B () Int)
(declare-fun sc39C () Int)
(declare-fun sc39D () Int)
(declare-fun sc39E () Int)
(declare-fun sc39F () Int)
(declare-fun var40A () String)
(declare-fun var40B () String)
(declare-fun var40C () String)
(declare-fun var40D () String)
(declare-fun var40E () String)
(declare-fun var40F () String)
(declare-fun unch240A () String)
(declare-fun ch40A () String)
(declare-fun unch140A () String)
(declare-fun stem40 () String)
(declare-fun unch240B () String)
(declare-fun ch40B () String)
(declare-fun unch140B () String)
(declare-fun unch240C () String)
(declare-fun ch40C () String)
(declare-fun unch140C () String)
(declare-fun unch240D () String)
(declare-fun ch40D () String)
(declare-fun unch140D () String)
(declare-fun unch240E () String)
(declare-fun ch40E () String)
(declare-fun unch140E () String)
(declare-fun unch240F () String)
(declare-fun ch40F () String)
(declare-fun unch140F () String)
(declare-fun l40 () Int)
(declare-fun sc40A () Int)
(declare-fun sc40B () Int)
(declare-fun sc40C () Int)
(declare-fun sc40D () Int)
(declare-fun sc40E () Int)
(declare-fun sc40F () Int)
(declare-fun var41A () String)
(declare-fun var41B () String)
(declare-fun var41C () String)
(declare-fun var41D () String)
(declare-fun var41E () String)
(declare-fun var41F () String)
(declare-fun unch241A () String)
(declare-fun ch41A () String)
(declare-fun unch141A () String)
(declare-fun stem41 () String)
(declare-fun unch241B () String)
(declare-fun ch41B () String)
(declare-fun unch141B () String)
(declare-fun unch241C () String)
(declare-fun ch41C () String)
(declare-fun unch141C () String)
(declare-fun unch241D () String)
(declare-fun ch41D () String)
(declare-fun unch141D () String)
(declare-fun unch241E () String)
(declare-fun ch41E () String)
(declare-fun unch141E () String)
(declare-fun unch241F () String)
(declare-fun ch41F () String)
(declare-fun unch141F () String)
(declare-fun l41 () Int)
(declare-fun sc41A () Int)
(declare-fun sc41B () Int)
(declare-fun sc41C () Int)
(declare-fun sc41D () Int)
(declare-fun sc41E () Int)
(declare-fun sc41F () Int)
(declare-fun var42A () String)
(declare-fun var42B () String)
(declare-fun var42C () String)
(declare-fun var42D () String)
(declare-fun var42E () String)
(declare-fun var42F () String)
(declare-fun unch242A () String)
(declare-fun ch42A () String)
(declare-fun unch142A () String)
(declare-fun stem42 () String)
(declare-fun unch242B () String)
(declare-fun ch42B () String)
(declare-fun unch142B () String)
(declare-fun unch242C () String)
(declare-fun ch42C () String)
(declare-fun unch142C () String)
(declare-fun unch242D () String)
(declare-fun ch42D () String)
(declare-fun unch142D () String)
(declare-fun unch242E () String)
(declare-fun ch42E () String)
(declare-fun unch142E () String)
(declare-fun unch242F () String)
(declare-fun ch42F () String)
(declare-fun unch142F () String)
(declare-fun l42 () Int)
(declare-fun sc42A () Int)
(declare-fun sc42B () Int)
(declare-fun sc42C () Int)
(declare-fun sc42D () Int)
(declare-fun sc42E () Int)
(declare-fun sc42F () Int)
(declare-fun var43A () String)
(declare-fun var43B () String)
(declare-fun var43C () String)
(declare-fun var43D () String)
(declare-fun var43E () String)
(declare-fun var43F () String)
(declare-fun unch243A () String)
(declare-fun ch43A () String)
(declare-fun unch143A () String)
(declare-fun stem43 () String)
(declare-fun unch243B () String)
(declare-fun ch43B () String)
(declare-fun unch143B () String)
(declare-fun unch243C () String)
(declare-fun ch43C () String)
(declare-fun unch143C () String)
(declare-fun unch243D () String)
(declare-fun ch43D () String)
(declare-fun unch143D () String)
(declare-fun unch243E () String)
(declare-fun ch43E () String)
(declare-fun unch143E () String)
(declare-fun unch243F () String)
(declare-fun ch43F () String)
(declare-fun unch143F () String)
(declare-fun l43 () Int)
(declare-fun sc43A () Int)
(declare-fun sc43B () Int)
(declare-fun sc43C () Int)
(declare-fun sc43D () Int)
(declare-fun sc43E () Int)
(declare-fun sc43F () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= "daar" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "daarta" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "daaro" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= "gees" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "geesta" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "geeso" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= "laf" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "lafta" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "lafo" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= "lug" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "lugta" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "luOo" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= "naag" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "naagta" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "naaOo" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= "tib" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "tibta" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "tiXo" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= "sab" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "sabta" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "saXo" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= "bad" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "bada" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "baZo" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= "Bid" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "Bida" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "BiZo" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= "fee1" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "fee1a" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "fee2o" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= "3iir" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "3iirta" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "3iiro" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= "4ul" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "4uBa" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "4ulo" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= "bil" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "biBa" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "bilo" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= "meel" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "meeBa" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "meelo" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= "kaliil" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "kaliiBa" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "kaliilo" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= "najl" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "najBa" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "najlo" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= "sun" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "sunta" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "sumo" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= "laan" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "laanta" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "laamo" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= "sin" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "sinta" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "simo" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= "dan" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "danta" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "dano" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= "daan" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "daanta" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "daano" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= "saan" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "saanta" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "saano" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= "nirig" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "nirigta" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "nirgo" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= "gaXa1" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= "gaXa1a" (str.++ unch123B (str.++ var23B unch223B))))
(assert (= "gab1o" (str.++ unch123C (str.++ var23C unch223C))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= "hoOol" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= "hoOoBa" (str.++ unch124B (str.++ var24B unch224B))))
(assert (= "hoglo" (str.++ unch124C (str.++ var24C unch224C))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= "baOal" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= "baOaBa" (str.++ unch125B (str.++ var25B unch225B))))
(assert (= "baglo" (str.++ unch125C (str.++ var25C unch225C))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= "wa5ar" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= "wa5arta" (str.++ unch126B (str.++ var26B unch226B))))
(assert (= "wa5aro" (str.++ unch126C (str.++ var26C unch226C))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= "irbad" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= "irbada" (str.++ unch127B (str.++ var27B unch227B))))
(assert (= "irbaZo" (str.++ unch127C (str.++ var27C unch227C))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= "kefed" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= "kefeda" (str.++ unch128B (str.++ var28B unch228B))))
(assert (= "kefeZo" (str.++ unch128C (str.++ var28C unch228C))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= "Bilin" (str.++ unch129A (str.++ var29A unch229A))))
(assert (= "Bilinta" (str.++ unch129B (str.++ var29B unch229B))))
(assert (= "Bilino" (str.++ unch129C (str.++ var29C unch229C))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= (str.len var30A) 1))
(assert (<= (str.len var30B) 1))
(assert (<= (str.len var30C) 1))
(assert (<= (str.len var30D) 1))
(assert (<= (str.len var30E) 1))
(assert (<= (str.len var30F) 1))
(assert (= (str.++ preA (str.++ stem30 sufA)) (str.++ unch130A (str.++ ch30A unch230A))))
(assert (= (str.++ preB (str.++ stem30 sufB)) (str.++ unch130B (str.++ ch30B unch230B))))
(assert (= (str.++ preC (str.++ stem30 sufC)) (str.++ unch130C (str.++ ch30C unch230C))))
(assert (= (str.++ preD (str.++ stem30 sufD)) (str.++ unch130D (str.++ ch30D unch230D))))
(assert (= (str.++ preE (str.++ stem30 sufE)) (str.++ unch130E (str.++ ch30E unch230E))))
(assert (= (str.++ preF (str.++ stem30 sufF)) (str.++ unch130F (str.++ ch30F unch230F))))
(assert (= "bohol" (str.++ unch130A (str.++ var30A unch230A))))
(assert (= "bohoBa" (str.++ unch130B (str.++ var30B unch230B))))
(assert (= "boholo" (str.++ unch130C (str.++ var30C unch230C))))
(assert (= (str.len stem30) l30))
(assert (= (ite (= ch30A var30A) 0 1) sc30A))
(assert (= (ite (= ch30B var30B) 0 1) sc30B))
(assert (= (ite (= ch30C var30C) 0 1) sc30C))
(assert (= (ite (= ch30D var30D) 0 1) sc30D))
(assert (= (ite (= ch30E var30E) 0 1) sc30E))
(assert (= (ite (= ch30F var30F) 0 1) sc30F))
(assert (<= sc30A 1))
(assert (<= sc30B 1))
(assert (<= sc30C 1))
(assert (<= sc30D 1))
(assert (<= sc30E 1))
(assert (<= sc30F 1))
(assert (<= (str.len var31A) 1))
(assert (<= (str.len var31B) 1))
(assert (<= (str.len var31C) 1))
(assert (<= (str.len var31D) 1))
(assert (<= (str.len var31E) 1))
(assert (<= (str.len var31F) 1))
(assert (= (str.++ preA (str.++ stem31 sufA)) (str.++ unch131A (str.++ ch31A unch231A))))
(assert (= (str.++ preB (str.++ stem31 sufB)) (str.++ unch131B (str.++ ch31B unch231B))))
(assert (= (str.++ preC (str.++ stem31 sufC)) (str.++ unch131C (str.++ ch31C unch231C))))
(assert (= (str.++ preD (str.++ stem31 sufD)) (str.++ unch131D (str.++ ch31D unch231D))))
(assert (= (str.++ preE (str.++ stem31 sufE)) (str.++ unch131E (str.++ ch31E unch231E))))
(assert (= (str.++ preF (str.++ stem31 sufF)) (str.++ unch131F (str.++ ch31F unch231F))))
(assert (= "4aajad" (str.++ unch131A (str.++ var31A unch231A))))
(assert (= "4aajada" (str.++ unch131B (str.++ var31B unch231B))))
(assert (= "4aajaZo" (str.++ unch131C (str.++ var31C unch231C))))
(assert (= (str.len stem31) l31))
(assert (= (ite (= ch31A var31A) 0 1) sc31A))
(assert (= (ite (= ch31B var31B) 0 1) sc31B))
(assert (= (ite (= ch31C var31C) 0 1) sc31C))
(assert (= (ite (= ch31D var31D) 0 1) sc31D))
(assert (= (ite (= ch31E var31E) 0 1) sc31E))
(assert (= (ite (= ch31F var31F) 0 1) sc31F))
(assert (<= sc31A 1))
(assert (<= sc31B 1))
(assert (<= sc31C 1))
(assert (<= sc31D 1))
(assert (<= sc31E 1))
(assert (<= sc31F 1))
(assert (<= (str.len var32A) 1))
(assert (<= (str.len var32B) 1))
(assert (<= (str.len var32C) 1))
(assert (<= (str.len var32D) 1))
(assert (<= (str.len var32E) 1))
(assert (<= (str.len var32F) 1))
(assert (= (str.++ preA (str.++ stem32 sufA)) (str.++ unch132A (str.++ ch32A unch232A))))
(assert (= (str.++ preB (str.++ stem32 sufB)) (str.++ unch132B (str.++ ch32B unch232B))))
(assert (= (str.++ preC (str.++ stem32 sufC)) (str.++ unch132C (str.++ ch32C unch232C))))
(assert (= (str.++ preD (str.++ stem32 sufD)) (str.++ unch132D (str.++ ch32D unch232D))))
(assert (= (str.++ preE (str.++ stem32 sufE)) (str.++ unch132E (str.++ ch32E unch232E))))
(assert (= (str.++ preF (str.++ stem32 sufF)) (str.++ unch132F (str.++ ch32F unch232F))))
(assert (= "ga3an" (str.++ unch132A (str.++ var32A unch232A))))
(assert (= "ga3anta" (str.++ unch132B (str.++ var32B unch232B))))
(assert (= "ga3mo" (str.++ unch132C (str.++ var32C unch232C))))
(assert (= (str.len stem32) l32))
(assert (= (ite (= ch32A var32A) 0 1) sc32A))
(assert (= (ite (= ch32B var32B) 0 1) sc32B))
(assert (= (ite (= ch32C var32C) 0 1) sc32C))
(assert (= (ite (= ch32D var32D) 0 1) sc32D))
(assert (= (ite (= ch32E var32E) 0 1) sc32E))
(assert (= (ite (= ch32F var32F) 0 1) sc32F))
(assert (<= sc32A 1))
(assert (<= sc32B 1))
(assert (<= sc32C 1))
(assert (<= sc32D 1))
(assert (<= sc32E 1))
(assert (<= sc32F 1))
(assert (<= (str.len var33A) 1))
(assert (<= (str.len var33B) 1))
(assert (<= (str.len var33C) 1))
(assert (<= (str.len var33D) 1))
(assert (<= (str.len var33E) 1))
(assert (<= (str.len var33F) 1))
(assert (= (str.++ preA (str.++ stem33 sufA)) (str.++ unch133A (str.++ ch33A unch233A))))
(assert (= (str.++ preB (str.++ stem33 sufB)) (str.++ unch133B (str.++ ch33B unch233B))))
(assert (= (str.++ preC (str.++ stem33 sufC)) (str.++ unch133C (str.++ ch33C unch233C))))
(assert (= (str.++ preD (str.++ stem33 sufD)) (str.++ unch133D (str.++ ch33D unch233D))))
(assert (= (str.++ preE (str.++ stem33 sufE)) (str.++ unch133E (str.++ ch33E unch233E))))
(assert (= (str.++ preF (str.++ stem33 sufF)) (str.++ unch133F (str.++ ch33F unch233F))))
(assert (= "4inan" (str.++ unch133A (str.++ var33A unch233A))))
(assert (= "4inanta" (str.++ unch133B (str.++ var33B unch233B))))
(assert (= "4inano" (str.++ unch133C (str.++ var33C unch233C))))
(assert (= (str.len stem33) l33))
(assert (= (ite (= ch33A var33A) 0 1) sc33A))
(assert (= (ite (= ch33B var33B) 0 1) sc33B))
(assert (= (ite (= ch33C var33C) 0 1) sc33C))
(assert (= (ite (= ch33D var33D) 0 1) sc33D))
(assert (= (ite (= ch33E var33E) 0 1) sc33E))
(assert (= (ite (= ch33F var33F) 0 1) sc33F))
(assert (<= sc33A 1))
(assert (<= sc33B 1))
(assert (<= sc33C 1))
(assert (<= sc33D 1))
(assert (<= sc33E 1))
(assert (<= sc33F 1))
(assert (<= (str.len var34A) 1))
(assert (<= (str.len var34B) 1))
(assert (<= (str.len var34C) 1))
(assert (<= (str.len var34D) 1))
(assert (<= (str.len var34E) 1))
(assert (<= (str.len var34F) 1))
(assert (= (str.++ preA (str.++ stem34 sufA)) (str.++ unch134A (str.++ ch34A unch234A))))
(assert (= (str.++ preB (str.++ stem34 sufB)) (str.++ unch134B (str.++ ch34B unch234B))))
(assert (= (str.++ preC (str.++ stem34 sufC)) (str.++ unch134C (str.++ ch34C unch234C))))
(assert (= (str.++ preD (str.++ stem34 sufD)) (str.++ unch134D (str.++ ch34D unch234D))))
(assert (= (str.++ preE (str.++ stem34 sufE)) (str.++ unch134E (str.++ ch34E unch234E))))
(assert (= (str.++ preF (str.++ stem34 sufF)) (str.++ unch134F (str.++ ch34F unch234F))))
(assert (= "suOaj" (str.++ unch134D (str.++ var34D unch234D))))
(assert (= "sugtaj" (str.++ unch134E (str.++ var34E unch234E))))
(assert (= "sugnaj" (str.++ unch134F (str.++ var34F unch234F))))
(assert (= (str.len stem34) l34))
(assert (= (ite (= ch34A var34A) 0 1) sc34A))
(assert (= (ite (= ch34B var34B) 0 1) sc34B))
(assert (= (ite (= ch34C var34C) 0 1) sc34C))
(assert (= (ite (= ch34D var34D) 0 1) sc34D))
(assert (= (ite (= ch34E var34E) 0 1) sc34E))
(assert (= (ite (= ch34F var34F) 0 1) sc34F))
(assert (<= sc34A 1))
(assert (<= sc34B 1))
(assert (<= sc34C 1))
(assert (<= sc34D 1))
(assert (<= sc34E 1))
(assert (<= sc34F 1))
(assert (<= (str.len var35A) 1))
(assert (<= (str.len var35B) 1))
(assert (<= (str.len var35C) 1))
(assert (<= (str.len var35D) 1))
(assert (<= (str.len var35E) 1))
(assert (<= (str.len var35F) 1))
(assert (= (str.++ preA (str.++ stem35 sufA)) (str.++ unch135A (str.++ ch35A unch235A))))
(assert (= (str.++ preB (str.++ stem35 sufB)) (str.++ unch135B (str.++ ch35B unch235B))))
(assert (= (str.++ preC (str.++ stem35 sufC)) (str.++ unch135C (str.++ ch35C unch235C))))
(assert (= (str.++ preD (str.++ stem35 sufD)) (str.++ unch135D (str.++ ch35D unch235D))))
(assert (= (str.++ preE (str.++ stem35 sufE)) (str.++ unch135E (str.++ ch35E unch235E))))
(assert (= (str.++ preF (str.++ stem35 sufF)) (str.++ unch135F (str.++ ch35F unch235F))))
(assert (= "kaXaj" (str.++ unch135D (str.++ var35D unch235D))))
(assert (= "kabtaj" (str.++ unch135E (str.++ var35E unch235E))))
(assert (= "kabnaj" (str.++ unch135F (str.++ var35F unch235F))))
(assert (= (str.len stem35) l35))
(assert (= (ite (= ch35A var35A) 0 1) sc35A))
(assert (= (ite (= ch35B var35B) 0 1) sc35B))
(assert (= (ite (= ch35C var35C) 0 1) sc35C))
(assert (= (ite (= ch35D var35D) 0 1) sc35D))
(assert (= (ite (= ch35E var35E) 0 1) sc35E))
(assert (= (ite (= ch35F var35F) 0 1) sc35F))
(assert (<= sc35A 1))
(assert (<= sc35B 1))
(assert (<= sc35C 1))
(assert (<= sc35D 1))
(assert (<= sc35E 1))
(assert (<= sc35F 1))
(assert (<= (str.len var36A) 1))
(assert (<= (str.len var36B) 1))
(assert (<= (str.len var36C) 1))
(assert (<= (str.len var36D) 1))
(assert (<= (str.len var36E) 1))
(assert (<= (str.len var36F) 1))
(assert (= (str.++ preA (str.++ stem36 sufA)) (str.++ unch136A (str.++ ch36A unch236A))))
(assert (= (str.++ preB (str.++ stem36 sufB)) (str.++ unch136B (str.++ ch36B unch236B))))
(assert (= (str.++ preC (str.++ stem36 sufC)) (str.++ unch136C (str.++ ch36C unch236C))))
(assert (= (str.++ preD (str.++ stem36 sufD)) (str.++ unch136D (str.++ ch36D unch236D))))
(assert (= (str.++ preE (str.++ stem36 sufE)) (str.++ unch136E (str.++ ch36E unch236E))))
(assert (= (str.++ preF (str.++ stem36 sufF)) (str.++ unch136F (str.++ ch36F unch236F))))
(assert (= "siZaj" (str.++ unch136D (str.++ var36D unch236D))))
(assert (= "sidaj" (str.++ unch136E (str.++ var36E unch236E))))
(assert (= "sidnaj" (str.++ unch136F (str.++ var36F unch236F))))
(assert (= (str.len stem36) l36))
(assert (= (ite (= ch36A var36A) 0 1) sc36A))
(assert (= (ite (= ch36B var36B) 0 1) sc36B))
(assert (= (ite (= ch36C var36C) 0 1) sc36C))
(assert (= (ite (= ch36D var36D) 0 1) sc36D))
(assert (= (ite (= ch36E var36E) 0 1) sc36E))
(assert (= (ite (= ch36F var36F) 0 1) sc36F))
(assert (<= sc36A 1))
(assert (<= sc36B 1))
(assert (<= sc36C 1))
(assert (<= sc36D 1))
(assert (<= sc36E 1))
(assert (<= sc36F 1))
(assert (<= (str.len var37A) 1))
(assert (<= (str.len var37B) 1))
(assert (<= (str.len var37C) 1))
(assert (<= (str.len var37D) 1))
(assert (<= (str.len var37E) 1))
(assert (<= (str.len var37F) 1))
(assert (= (str.++ preA (str.++ stem37 sufA)) (str.++ unch137A (str.++ ch37A unch237A))))
(assert (= (str.++ preB (str.++ stem37 sufB)) (str.++ unch137B (str.++ ch37B unch237B))))
(assert (= (str.++ preC (str.++ stem37 sufC)) (str.++ unch137C (str.++ ch37C unch237C))))
(assert (= (str.++ preD (str.++ stem37 sufD)) (str.++ unch137D (str.++ ch37D unch237D))))
(assert (= (str.++ preE (str.++ stem37 sufE)) (str.++ unch137E (str.++ ch37E unch237E))))
(assert (= (str.++ preF (str.++ stem37 sufF)) (str.++ unch137F (str.++ ch37F unch237F))))
(assert (= "dilaj" (str.++ unch137D (str.++ var37D unch237D))))
(assert (= "diBaj" (str.++ unch137E (str.++ var37E unch237E))))
(assert (= "dillaj" (str.++ unch137F (str.++ var37F unch237F))))
(assert (= (str.len stem37) l37))
(assert (= (ite (= ch37A var37A) 0 1) sc37A))
(assert (= (ite (= ch37B var37B) 0 1) sc37B))
(assert (= (ite (= ch37C var37C) 0 1) sc37C))
(assert (= (ite (= ch37D var37D) 0 1) sc37D))
(assert (= (ite (= ch37E var37E) 0 1) sc37E))
(assert (= (ite (= ch37F var37F) 0 1) sc37F))
(assert (<= sc37A 1))
(assert (<= sc37B 1))
(assert (<= sc37C 1))
(assert (<= sc37D 1))
(assert (<= sc37E 1))
(assert (<= sc37F 1))
(assert (<= (str.len var38A) 1))
(assert (<= (str.len var38B) 1))
(assert (<= (str.len var38C) 1))
(assert (<= (str.len var38D) 1))
(assert (<= (str.len var38E) 1))
(assert (<= (str.len var38F) 1))
(assert (= (str.++ preA (str.++ stem38 sufA)) (str.++ unch138A (str.++ ch38A unch238A))))
(assert (= (str.++ preB (str.++ stem38 sufB)) (str.++ unch138B (str.++ ch38B unch238B))))
(assert (= (str.++ preC (str.++ stem38 sufC)) (str.++ unch138C (str.++ ch38C unch238C))))
(assert (= (str.++ preD (str.++ stem38 sufD)) (str.++ unch138D (str.++ ch38D unch238D))))
(assert (= (str.++ preE (str.++ stem38 sufE)) (str.++ unch138E (str.++ ch38E unch238E))))
(assert (= (str.++ preF (str.++ stem38 sufF)) (str.++ unch138F (str.++ ch38F unch238F))))
(assert (= "ganaj" (str.++ unch138D (str.++ var38D unch238D))))
(assert (= "gantaj" (str.++ unch138E (str.++ var38E unch238E))))
(assert (= "gannaj" (str.++ unch138F (str.++ var38F unch238F))))
(assert (= (str.len stem38) l38))
(assert (= (ite (= ch38A var38A) 0 1) sc38A))
(assert (= (ite (= ch38B var38B) 0 1) sc38B))
(assert (= (ite (= ch38C var38C) 0 1) sc38C))
(assert (= (ite (= ch38D var38D) 0 1) sc38D))
(assert (= (ite (= ch38E var38E) 0 1) sc38E))
(assert (= (ite (= ch38F var38F) 0 1) sc38F))
(assert (<= sc38A 1))
(assert (<= sc38B 1))
(assert (<= sc38C 1))
(assert (<= sc38D 1))
(assert (<= sc38E 1))
(assert (<= sc38F 1))
(assert (<= (str.len var39A) 1))
(assert (<= (str.len var39B) 1))
(assert (<= (str.len var39C) 1))
(assert (<= (str.len var39D) 1))
(assert (<= (str.len var39E) 1))
(assert (<= (str.len var39F) 1))
(assert (= (str.++ preA (str.++ stem39 sufA)) (str.++ unch139A (str.++ ch39A unch239A))))
(assert (= (str.++ preB (str.++ stem39 sufB)) (str.++ unch139B (str.++ ch39B unch239B))))
(assert (= (str.++ preC (str.++ stem39 sufC)) (str.++ unch139C (str.++ ch39C unch239C))))
(assert (= (str.++ preD (str.++ stem39 sufD)) (str.++ unch139D (str.++ ch39D unch239D))))
(assert (= (str.++ preE (str.++ stem39 sufE)) (str.++ unch139E (str.++ ch39E unch239E))))
(assert (= (str.++ preF (str.++ stem39 sufF)) (str.++ unch139F (str.++ ch39F unch239F))))
(assert (= "tumaj" (str.++ unch139D (str.++ var39D unch239D))))
(assert (= "tuntaj" (str.++ unch139E (str.++ var39E unch239E))))
(assert (= "tunnaj" (str.++ unch139F (str.++ var39F unch239F))))
(assert (= (str.len stem39) l39))
(assert (= (ite (= ch39A var39A) 0 1) sc39A))
(assert (= (ite (= ch39B var39B) 0 1) sc39B))
(assert (= (ite (= ch39C var39C) 0 1) sc39C))
(assert (= (ite (= ch39D var39D) 0 1) sc39D))
(assert (= (ite (= ch39E var39E) 0 1) sc39E))
(assert (= (ite (= ch39F var39F) 0 1) sc39F))
(assert (<= sc39A 1))
(assert (<= sc39B 1))
(assert (<= sc39C 1))
(assert (<= sc39D 1))
(assert (<= sc39E 1))
(assert (<= sc39F 1))
(assert (<= (str.len var40A) 1))
(assert (<= (str.len var40B) 1))
(assert (<= (str.len var40C) 1))
(assert (<= (str.len var40D) 1))
(assert (<= (str.len var40E) 1))
(assert (<= (str.len var40F) 1))
(assert (= (str.++ preA (str.++ stem40 sufA)) (str.++ unch140A (str.++ ch40A unch240A))))
(assert (= (str.++ preB (str.++ stem40 sufB)) (str.++ unch140B (str.++ ch40B unch240B))))
(assert (= (str.++ preC (str.++ stem40 sufC)) (str.++ unch140C (str.++ ch40C unch240C))))
(assert (= (str.++ preD (str.++ stem40 sufD)) (str.++ unch140D (str.++ ch40D unch240D))))
(assert (= (str.++ preE (str.++ stem40 sufE)) (str.++ unch140E (str.++ ch40E unch240E))))
(assert (= (str.++ preF (str.++ stem40 sufF)) (str.++ unch140F (str.++ ch40F unch240F))))
(assert (= "argaj" (str.++ unch140D (str.++ var40D unch240D))))
(assert (= "aragtaj" (str.++ unch140E (str.++ var40E unch240E))))
(assert (= "aragnaj" (str.++ unch140F (str.++ var40F unch240F))))
(assert (= (str.len stem40) l40))
(assert (= (ite (= ch40A var40A) 0 1) sc40A))
(assert (= (ite (= ch40B var40B) 0 1) sc40B))
(assert (= (ite (= ch40C var40C) 0 1) sc40C))
(assert (= (ite (= ch40D var40D) 0 1) sc40D))
(assert (= (ite (= ch40E var40E) 0 1) sc40E))
(assert (= (ite (= ch40F var40F) 0 1) sc40F))
(assert (<= sc40A 1))
(assert (<= sc40B 1))
(assert (<= sc40C 1))
(assert (<= sc40D 1))
(assert (<= sc40E 1))
(assert (<= sc40F 1))
(assert (<= (str.len var41A) 1))
(assert (<= (str.len var41B) 1))
(assert (<= (str.len var41C) 1))
(assert (<= (str.len var41D) 1))
(assert (<= (str.len var41E) 1))
(assert (<= (str.len var41F) 1))
(assert (= (str.++ preA (str.++ stem41 sufA)) (str.++ unch141A (str.++ ch41A unch241A))))
(assert (= (str.++ preB (str.++ stem41 sufB)) (str.++ unch141B (str.++ ch41B unch241B))))
(assert (= (str.++ preC (str.++ stem41 sufC)) (str.++ unch141C (str.++ ch41C unch241C))))
(assert (= (str.++ preD (str.++ stem41 sufD)) (str.++ unch141D (str.++ ch41D unch241D))))
(assert (= (str.++ preE (str.++ stem41 sufE)) (str.++ unch141E (str.++ ch41E unch241E))))
(assert (= (str.++ preF (str.++ stem41 sufF)) (str.++ unch141F (str.++ ch41F unch241F))))
(assert (= "gudbaj" (str.++ unch141D (str.++ var41D unch241D))))
(assert (= "guZubtaj" (str.++ unch141E (str.++ var41E unch241E))))
(assert (= "guZubnaj" (str.++ unch141F (str.++ var41F unch241F))))
(assert (= (str.len stem41) l41))
(assert (= (ite (= ch41A var41A) 0 1) sc41A))
(assert (= (ite (= ch41B var41B) 0 1) sc41B))
(assert (= (ite (= ch41C var41C) 0 1) sc41C))
(assert (= (ite (= ch41D var41D) 0 1) sc41D))
(assert (= (ite (= ch41E var41E) 0 1) sc41E))
(assert (= (ite (= ch41F var41F) 0 1) sc41F))
(assert (<= sc41A 1))
(assert (<= sc41B 1))
(assert (<= sc41C 1))
(assert (<= sc41D 1))
(assert (<= sc41E 1))
(assert (<= sc41F 1))
(assert (<= (str.len var42A) 1))
(assert (<= (str.len var42B) 1))
(assert (<= (str.len var42C) 1))
(assert (<= (str.len var42D) 1))
(assert (<= (str.len var42E) 1))
(assert (<= (str.len var42F) 1))
(assert (= (str.++ preA (str.++ stem42 sufA)) (str.++ unch142A (str.++ ch42A unch242A))))
(assert (= (str.++ preB (str.++ stem42 sufB)) (str.++ unch142B (str.++ ch42B unch242B))))
(assert (= (str.++ preC (str.++ stem42 sufC)) (str.++ unch142C (str.++ ch42C unch242C))))
(assert (= (str.++ preD (str.++ stem42 sufD)) (str.++ unch142D (str.++ ch42D unch242D))))
(assert (= (str.++ preE (str.++ stem42 sufE)) (str.++ unch142E (str.++ ch42E unch242E))))
(assert (= (str.++ preF (str.++ stem42 sufF)) (str.++ unch142F (str.++ ch42F unch242F))))
(assert (= "qoslaj" (str.++ unch142D (str.++ var42D unch242D))))
(assert (= "qosoBaj" (str.++ unch142E (str.++ var42E unch242E))))
(assert (= "qosollaj" (str.++ unch142F (str.++ var42F unch242F))))
(assert (= (str.len stem42) l42))
(assert (= (ite (= ch42A var42A) 0 1) sc42A))
(assert (= (ite (= ch42B var42B) 0 1) sc42B))
(assert (= (ite (= ch42C var42C) 0 1) sc42C))
(assert (= (ite (= ch42D var42D) 0 1) sc42D))
(assert (= (ite (= ch42E var42E) 0 1) sc42E))
(assert (= (ite (= ch42F var42F) 0 1) sc42F))
(assert (<= sc42A 1))
(assert (<= sc42B 1))
(assert (<= sc42C 1))
(assert (<= sc42D 1))
(assert (<= sc42E 1))
(assert (<= sc42F 1))
(assert (<= (str.len var43A) 1))
(assert (<= (str.len var43B) 1))
(assert (<= (str.len var43C) 1))
(assert (<= (str.len var43D) 1))
(assert (<= (str.len var43E) 1))
(assert (<= (str.len var43F) 1))
(assert (= (str.++ preA (str.++ stem43 sufA)) (str.++ unch143A (str.++ ch43A unch243A))))
(assert (= (str.++ preB (str.++ stem43 sufB)) (str.++ unch143B (str.++ ch43B unch243B))))
(assert (= (str.++ preC (str.++ stem43 sufC)) (str.++ unch143C (str.++ ch43C unch243C))))
(assert (= (str.++ preD (str.++ stem43 sufD)) (str.++ unch143D (str.++ ch43D unch243D))))
(assert (= (str.++ preE (str.++ stem43 sufE)) (str.++ unch143E (str.++ ch43E unch243E))))
(assert (= (str.++ preF (str.++ stem43 sufF)) (str.++ unch143F (str.++ ch43F unch243F))))
(assert (= "hadlaj" (str.++ unch143D (str.++ var43D unch243D))))
(assert (= "haZaBaj" (str.++ unch143E (str.++ var43E unch243E))))
(assert (= "haZallaj" (str.++ unch143F (str.++ var43F unch243F))))
(assert (= (str.len stem43) l43))
(assert (= (ite (= ch43A var43A) 0 1) sc43A))
(assert (= (ite (= ch43B var43B) 0 1) sc43B))
(assert (= (ite (= ch43C var43C) 0 1) sc43C))
(assert (= (ite (= ch43D var43D) 0 1) sc43D))
(assert (= (ite (= ch43E var43E) 0 1) sc43E))
(assert (= (ite (= ch43F var43F) 0 1) sc43F))
(assert (<= sc43A 1))
(assert (<= sc43B 1))
(assert (<= sc43C 1))
(assert (<= sc43D 1))
(assert (<= sc43E 1))
(assert (<= sc43F 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      0
      sc30A
      sc30B
      sc30C
      sc30D
      sc30E
      sc30F
      0
      sc31A
      sc31B
      sc31C
      sc31D
      sc31E
      sc31F
      0
      sc32A
      sc32B
      sc32C
      sc32D
      sc32E
      sc32F
      0
      sc33A
      sc33B
      sc33C
      sc33D
      sc33E
      sc33F
      0
      sc34A
      sc34B
      sc34C
      sc34D
      sc34E
      sc34F
      0
      sc35A
      sc35B
      sc35C
      sc35D
      sc35E
      sc35F
      0
      sc36A
      sc36B
      sc36C
      sc36D
      sc36E
      sc36F
      0
      sc37A
      sc37B
      sc37C
      sc37D
      sc37E
      sc37F
      0
      sc38A
      sc38B
      sc38C
      sc38D
      sc38E
      sc38F
      0
      sc39A
      sc39B
      sc39C
      sc39D
      sc39E
      sc39F
      0
      sc40A
      sc40B
      sc40C
      sc40D
      sc40E
      sc40F
      0
      sc41A
      sc41B
      sc41C
      sc41D
      sc41E
      sc41F
      0
      sc42A
      sc42B
      sc42C
      sc42D
      sc42E
      sc42F
      0
      sc43A
      sc43B
      sc43C
      sc43D
      sc43E
      sc43F)
   4))
(assert (= (+ 0
      sc0B
      sc1B
      sc2B
      sc3B
      sc4B
      sc5B
      sc6B
      sc7B
      sc8B
      sc9B
      sc10B
      sc11B
      sc12B
      sc13B
      sc14B
      sc15B
      sc16B
      sc17B
      sc18B
      sc19B
      sc20B
      sc21B
      sc22B
      sc23B
      sc24B
      sc25B
      sc26B
      sc27B
      sc28B
      sc29B
      sc30B
      sc31B
      sc32B
      sc33B
      sc34B
      sc35B
      sc36B
      sc37B
      sc38B
      sc39B
      sc40B
      sc41B
      sc42B
      sc43B)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun var30A () String)
(declare-fun var30B () String)
(declare-fun var30C () String)
(declare-fun var30D () String)
(declare-fun var30E () String)
(declare-fun var30F () String)
(declare-fun unch230A () String)
(declare-fun ch30A () String)
(declare-fun unch130A () String)
(declare-fun stem30 () String)
(declare-fun unch230B () String)
(declare-fun ch30B () String)
(declare-fun unch130B () String)
(declare-fun unch230C () String)
(declare-fun ch30C () String)
(declare-fun unch130C () String)
(declare-fun unch230D () String)
(declare-fun ch30D () String)
(declare-fun unch130D () String)
(declare-fun unch230E () String)
(declare-fun ch30E () String)
(declare-fun unch130E () String)
(declare-fun unch230F () String)
(declare-fun ch30F () String)
(declare-fun unch130F () String)
(declare-fun l30 () Int)
(declare-fun sc30A () Int)
(declare-fun sc30B () Int)
(declare-fun sc30C () Int)
(declare-fun sc30D () Int)
(declare-fun sc30E () Int)
(declare-fun sc30F () Int)
(declare-fun var31A () String)
(declare-fun var31B () String)
(declare-fun var31C () String)
(declare-fun var31D () String)
(declare-fun var31E () String)
(declare-fun var31F () String)
(declare-fun unch231A () String)
(declare-fun ch31A () String)
(declare-fun unch131A () String)
(declare-fun stem31 () String)
(declare-fun unch231B () String)
(declare-fun ch31B () String)
(declare-fun unch131B () String)
(declare-fun unch231C () String)
(declare-fun ch31C () String)
(declare-fun unch131C () String)
(declare-fun unch231D () String)
(declare-fun ch31D () String)
(declare-fun unch131D () String)
(declare-fun unch231E () String)
(declare-fun ch31E () String)
(declare-fun unch131E () String)
(declare-fun unch231F () String)
(declare-fun ch31F () String)
(declare-fun unch131F () String)
(declare-fun l31 () Int)
(declare-fun sc31A () Int)
(declare-fun sc31B () Int)
(declare-fun sc31C () Int)
(declare-fun sc31D () Int)
(declare-fun sc31E () Int)
(declare-fun sc31F () Int)
(declare-fun var32A () String)
(declare-fun var32B () String)
(declare-fun var32C () String)
(declare-fun var32D () String)
(declare-fun var32E () String)
(declare-fun var32F () String)
(declare-fun unch232A () String)
(declare-fun ch32A () String)
(declare-fun unch132A () String)
(declare-fun stem32 () String)
(declare-fun unch232B () String)
(declare-fun ch32B () String)
(declare-fun unch132B () String)
(declare-fun unch232C () String)
(declare-fun ch32C () String)
(declare-fun unch132C () String)
(declare-fun unch232D () String)
(declare-fun ch32D () String)
(declare-fun unch132D () String)
(declare-fun unch232E () String)
(declare-fun ch32E () String)
(declare-fun unch132E () String)
(declare-fun unch232F () String)
(declare-fun ch32F () String)
(declare-fun unch132F () String)
(declare-fun l32 () Int)
(declare-fun sc32A () Int)
(declare-fun sc32B () Int)
(declare-fun sc32C () Int)
(declare-fun sc32D () Int)
(declare-fun sc32E () Int)
(declare-fun sc32F () Int)
(declare-fun var33A () String)
(declare-fun var33B () String)
(declare-fun var33C () String)
(declare-fun var33D () String)
(declare-fun var33E () String)
(declare-fun var33F () String)
(declare-fun unch233A () String)
(declare-fun ch33A () String)
(declare-fun unch133A () String)
(declare-fun stem33 () String)
(declare-fun unch233B () String)
(declare-fun ch33B () String)
(declare-fun unch133B () String)
(declare-fun unch233C () String)
(declare-fun ch33C () String)
(declare-fun unch133C () String)
(declare-fun unch233D () String)
(declare-fun ch33D () String)
(declare-fun unch133D () String)
(declare-fun unch233E () String)
(declare-fun ch33E () String)
(declare-fun unch133E () String)
(declare-fun unch233F () String)
(declare-fun ch33F () String)
(declare-fun unch133F () String)
(declare-fun l33 () Int)
(declare-fun sc33A () Int)
(declare-fun sc33B () Int)
(declare-fun sc33C () Int)
(declare-fun sc33D () Int)
(declare-fun sc33E () Int)
(declare-fun sc33F () Int)
(declare-fun var34A () String)
(declare-fun var34B () String)
(declare-fun var34C () String)
(declare-fun var34D () String)
(declare-fun var34E () String)
(declare-fun var34F () String)
(declare-fun unch234A () String)
(declare-fun ch34A () String)
(declare-fun unch134A () String)
(declare-fun stem34 () String)
(declare-fun unch234B () String)
(declare-fun ch34B () String)
(declare-fun unch134B () String)
(declare-fun unch234C () String)
(declare-fun ch34C () String)
(declare-fun unch134C () String)
(declare-fun unch234D () String)
(declare-fun ch34D () String)
(declare-fun unch134D () String)
(declare-fun unch234E () String)
(declare-fun ch34E () String)
(declare-fun unch134E () String)
(declare-fun unch234F () String)
(declare-fun ch34F () String)
(declare-fun unch134F () String)
(declare-fun l34 () Int)
(declare-fun sc34A () Int)
(declare-fun sc34B () Int)
(declare-fun sc34C () Int)
(declare-fun sc34D () Int)
(declare-fun sc34E () Int)
(declare-fun sc34F () Int)
(declare-fun var35A () String)
(declare-fun var35B () String)
(declare-fun var35C () String)
(declare-fun var35D () String)
(declare-fun var35E () String)
(declare-fun var35F () String)
(declare-fun unch235A () String)
(declare-fun ch35A () String)
(declare-fun unch135A () String)
(declare-fun stem35 () String)
(declare-fun unch235B () String)
(declare-fun ch35B () String)
(declare-fun unch135B () String)
(declare-fun unch235C () String)
(declare-fun ch35C () String)
(declare-fun unch135C () String)
(declare-fun unch235D () String)
(declare-fun ch35D () String)
(declare-fun unch135D () String)
(declare-fun unch235E () String)
(declare-fun ch35E () String)
(declare-fun unch135E () String)
(declare-fun unch235F () String)
(declare-fun ch35F () String)
(declare-fun unch135F () String)
(declare-fun l35 () Int)
(declare-fun sc35A () Int)
(declare-fun sc35B () Int)
(declare-fun sc35C () Int)
(declare-fun sc35D () Int)
(declare-fun sc35E () Int)
(declare-fun sc35F () Int)
(declare-fun var36A () String)
(declare-fun var36B () String)
(declare-fun var36C () String)
(declare-fun var36D () String)
(declare-fun var36E () String)
(declare-fun var36F () String)
(declare-fun unch236A () String)
(declare-fun ch36A () String)
(declare-fun unch136A () String)
(declare-fun stem36 () String)
(declare-fun unch236B () String)
(declare-fun ch36B () String)
(declare-fun unch136B () String)
(declare-fun unch236C () String)
(declare-fun ch36C () String)
(declare-fun unch136C () String)
(declare-fun unch236D () String)
(declare-fun ch36D () String)
(declare-fun unch136D () String)
(declare-fun unch236E () String)
(declare-fun ch36E () String)
(declare-fun unch136E () String)
(declare-fun unch236F () String)
(declare-fun ch36F () String)
(declare-fun unch136F () String)
(declare-fun l36 () Int)
(declare-fun sc36A () Int)
(declare-fun sc36B () Int)
(declare-fun sc36C () Int)
(declare-fun sc36D () Int)
(declare-fun sc36E () Int)
(declare-fun sc36F () Int)
(declare-fun var37A () String)
(declare-fun var37B () String)
(declare-fun var37C () String)
(declare-fun var37D () String)
(declare-fun var37E () String)
(declare-fun var37F () String)
(declare-fun unch237A () String)
(declare-fun ch37A () String)
(declare-fun unch137A () String)
(declare-fun stem37 () String)
(declare-fun unch237B () String)
(declare-fun ch37B () String)
(declare-fun unch137B () String)
(declare-fun unch237C () String)
(declare-fun ch37C () String)
(declare-fun unch137C () String)
(declare-fun unch237D () String)
(declare-fun ch37D () String)
(declare-fun unch137D () String)
(declare-fun unch237E () String)
(declare-fun ch37E () String)
(declare-fun unch137E () String)
(declare-fun unch237F () String)
(declare-fun ch37F () String)
(declare-fun unch137F () String)
(declare-fun l37 () Int)
(declare-fun sc37A () Int)
(declare-fun sc37B () Int)
(declare-fun sc37C () Int)
(declare-fun sc37D () Int)
(declare-fun sc37E () Int)
(declare-fun sc37F () Int)
(declare-fun var38A () String)
(declare-fun var38B () String)
(declare-fun var38C () String)
(declare-fun var38D () String)
(declare-fun var38E () String)
(declare-fun var38F () String)
(declare-fun unch238A () String)
(declare-fun ch38A () String)
(declare-fun unch138A () String)
(declare-fun stem38 () String)
(declare-fun unch238B () String)
(declare-fun ch38B () String)
(declare-fun unch138B () String)
(declare-fun unch238C () String)
(declare-fun ch38C () String)
(declare-fun unch138C () String)
(declare-fun unch238D () String)
(declare-fun ch38D () String)
(declare-fun unch138D () String)
(declare-fun unch238E () String)
(declare-fun ch38E () String)
(declare-fun unch138E () String)
(declare-fun unch238F () String)
(declare-fun ch38F () String)
(declare-fun unch138F () String)
(declare-fun l38 () Int)
(declare-fun sc38A () Int)
(declare-fun sc38B () Int)
(declare-fun sc38C () Int)
(declare-fun sc38D () Int)
(declare-fun sc38E () Int)
(declare-fun sc38F () Int)
(declare-fun var39A () String)
(declare-fun var39B () String)
(declare-fun var39C () String)
(declare-fun var39D () String)
(declare-fun var39E () String)
(declare-fun var39F () String)
(declare-fun unch239A () String)
(declare-fun ch39A () String)
(declare-fun unch139A () String)
(declare-fun stem39 () String)
(declare-fun unch239B () String)
(declare-fun ch39B () String)
(declare-fun unch139B () String)
(declare-fun unch239C () String)
(declare-fun ch39C () String)
(declare-fun unch139C () String)
(declare-fun unch239D () String)
(declare-fun ch39D () String)
(declare-fun unch139D () String)
(declare-fun unch239E () String)
(declare-fun ch39E () String)
(declare-fun unch139E () String)
(declare-fun unch239F () String)
(declare-fun ch39F () String)
(declare-fun unch139F () String)
(declare-fun l39 () Int)
(declare-fun sc39A () Int)
(declare-fun sc39B () Int)
(declare-fun sc39C () Int)
(declare-fun sc39D () Int)
(declare-fun sc39E () Int)
(declare-fun sc39F () Int)
(declare-fun var40A () String)
(declare-fun var40B () String)
(declare-fun var40C () String)
(declare-fun var40D () String)
(declare-fun var40E () String)
(declare-fun var40F () String)
(declare-fun unch240A () String)
(declare-fun ch40A () String)
(declare-fun unch140A () String)
(declare-fun stem40 () String)
(declare-fun unch240B () String)
(declare-fun ch40B () String)
(declare-fun unch140B () String)
(declare-fun unch240C () String)
(declare-fun ch40C () String)
(declare-fun unch140C () String)
(declare-fun unch240D () String)
(declare-fun ch40D () String)
(declare-fun unch140D () String)
(declare-fun unch240E () String)
(declare-fun ch40E () String)
(declare-fun unch140E () String)
(declare-fun unch240F () String)
(declare-fun ch40F () String)
(declare-fun unch140F () String)
(declare-fun l40 () Int)
(declare-fun sc40A () Int)
(declare-fun sc40B () Int)
(declare-fun sc40C () Int)
(declare-fun sc40D () Int)
(declare-fun sc40E () Int)
(declare-fun sc40F () Int)
(declare-fun var41A () String)
(declare-fun var41B () String)
(declare-fun var41C () String)
(declare-fun var41D () String)
(declare-fun var41E () String)
(declare-fun var41F () String)
(declare-fun unch241A () String)
(declare-fun ch41A () String)
(declare-fun unch141A () String)
(declare-fun stem41 () String)
(declare-fun unch241B () String)
(declare-fun ch41B () String)
(declare-fun unch141B () String)
(declare-fun unch241C () String)
(declare-fun ch41C () String)
(declare-fun unch141C () String)
(declare-fun unch241D () String)
(declare-fun ch41D () String)
(declare-fun unch141D () String)
(declare-fun unch241E () String)
(declare-fun ch41E () String)
(declare-fun unch141E () String)
(declare-fun unch241F () String)
(declare-fun ch41F () String)
(declare-fun unch141F () String)
(declare-fun l41 () Int)
(declare-fun sc41A () Int)
(declare-fun sc41B () Int)
(declare-fun sc41C () Int)
(declare-fun sc41D () Int)
(declare-fun sc41E () Int)
(declare-fun sc41F () Int)
(declare-fun var42A () String)
(declare-fun var42B () String)
(declare-fun var42C () String)
(declare-fun var42D () String)
(declare-fun var42E () String)
(declare-fun var42F () String)
(declare-fun unch242A () String)
(declare-fun ch42A () String)
(declare-fun unch142A () String)
(declare-fun stem42 () String)
(declare-fun unch242B () String)
(declare-fun ch42B () String)
(declare-fun unch142B () String)
(declare-fun unch242C () String)
(declare-fun ch42C () String)
(declare-fun unch142C () String)
(declare-fun unch242D () String)
(declare-fun ch42D () String)
(declare-fun unch142D () String)
(declare-fun unch242E () String)
(declare-fun ch42E () String)
(declare-fun unch142E () String)
(declare-fun unch242F () String)
(declare-fun ch42F () String)
(declare-fun unch142F () String)
(declare-fun l42 () Int)
(declare-fun sc42A () Int)
(declare-fun sc42B () Int)
(declare-fun sc42C () Int)
(declare-fun sc42D () Int)
(declare-fun sc42E () Int)
(declare-fun sc42F () Int)
(declare-fun var43A () String)
(declare-fun var43B () String)
(declare-fun var43C () String)
(declare-fun var43D () String)
(declare-fun var43E () String)
(declare-fun var43F () String)
(declare-fun unch243A () String)
(declare-fun ch43A () String)
(declare-fun unch143A () String)
(declare-fun stem43 () String)
(declare-fun unch243B () String)
(declare-fun ch43B () String)
(declare-fun unch143B () String)
(declare-fun unch243C () String)
(declare-fun ch43C () String)
(declare-fun unch143C () String)
(declare-fun unch243D () String)
(declare-fun ch43D () String)
(declare-fun unch143D () String)
(declare-fun unch243E () String)
(declare-fun ch43E () String)
(declare-fun unch143E () String)
(declare-fun unch243F () String)
(declare-fun ch43F () String)
(declare-fun unch143F () String)
(declare-fun l43 () Int)
(declare-fun sc43A () Int)
(declare-fun sc43B () Int)
(declare-fun sc43C () Int)
(declare-fun sc43D () Int)
(declare-fun sc43E () Int)
(declare-fun sc43F () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= "daar" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "daarta" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "daaro" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= "gees" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "geesta" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "geeso" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= "laf" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "lafta" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "lafo" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= "lug" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "lugta" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "luOo" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= "naag" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "naagta" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "naaOo" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= "tib" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "tibta" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "tiXo" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= "sab" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "sabta" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "saXo" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= "bad" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "bada" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "baZo" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= "Bid" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "Bida" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "BiZo" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= "fee1" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "fee1a" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "fee2o" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= "3iir" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "3iirta" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "3iiro" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= "4ul" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "4uBa" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "4ulo" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= "bil" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "biBa" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "bilo" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= "meel" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "meeBa" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "meelo" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= "kaliil" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "kaliiBa" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "kaliilo" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= "najl" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "najBa" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "najlo" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= "sun" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "sunta" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "sumo" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= "laan" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "laanta" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "laamo" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= "sin" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "sinta" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "simo" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= "dan" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "danta" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "dano" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= "daan" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "daanta" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "daano" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= "saan" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "saanta" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "saano" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= "nirig" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "nirigta" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "nirgo" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= "gaXa1" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= "gaXa1a" (str.++ unch123B (str.++ var23B unch223B))))
(assert (= "gab1o" (str.++ unch123C (str.++ var23C unch223C))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= "hoOol" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= "hoOoBa" (str.++ unch124B (str.++ var24B unch224B))))
(assert (= "hoglo" (str.++ unch124C (str.++ var24C unch224C))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= "baOal" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= "baOaBa" (str.++ unch125B (str.++ var25B unch225B))))
(assert (= "baglo" (str.++ unch125C (str.++ var25C unch225C))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= "wa5ar" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= "wa5arta" (str.++ unch126B (str.++ var26B unch226B))))
(assert (= "wa5aro" (str.++ unch126C (str.++ var26C unch226C))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= "irbad" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= "irbada" (str.++ unch127B (str.++ var27B unch227B))))
(assert (= "irbaZo" (str.++ unch127C (str.++ var27C unch227C))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= "kefed" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= "kefeda" (str.++ unch128B (str.++ var28B unch228B))))
(assert (= "kefeZo" (str.++ unch128C (str.++ var28C unch228C))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= "Bilin" (str.++ unch129A (str.++ var29A unch229A))))
(assert (= "Bilinta" (str.++ unch129B (str.++ var29B unch229B))))
(assert (= "Bilino" (str.++ unch129C (str.++ var29C unch229C))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= (str.len var30A) 1))
(assert (<= (str.len var30B) 1))
(assert (<= (str.len var30C) 1))
(assert (<= (str.len var30D) 1))
(assert (<= (str.len var30E) 1))
(assert (<= (str.len var30F) 1))
(assert (= (str.++ preA (str.++ stem30 sufA)) (str.++ unch130A (str.++ ch30A unch230A))))
(assert (= (str.++ preB (str.++ stem30 sufB)) (str.++ unch130B (str.++ ch30B unch230B))))
(assert (= (str.++ preC (str.++ stem30 sufC)) (str.++ unch130C (str.++ ch30C unch230C))))
(assert (= (str.++ preD (str.++ stem30 sufD)) (str.++ unch130D (str.++ ch30D unch230D))))
(assert (= (str.++ preE (str.++ stem30 sufE)) (str.++ unch130E (str.++ ch30E unch230E))))
(assert (= (str.++ preF (str.++ stem30 sufF)) (str.++ unch130F (str.++ ch30F unch230F))))
(assert (= "bohol" (str.++ unch130A (str.++ var30A unch230A))))
(assert (= "bohoBa" (str.++ unch130B (str.++ var30B unch230B))))
(assert (= "boholo" (str.++ unch130C (str.++ var30C unch230C))))
(assert (= (str.len stem30) l30))
(assert (= (ite (= ch30A var30A) 0 1) sc30A))
(assert (= (ite (= ch30B var30B) 0 1) sc30B))
(assert (= (ite (= ch30C var30C) 0 1) sc30C))
(assert (= (ite (= ch30D var30D) 0 1) sc30D))
(assert (= (ite (= ch30E var30E) 0 1) sc30E))
(assert (= (ite (= ch30F var30F) 0 1) sc30F))
(assert (<= sc30A 1))
(assert (<= sc30B 1))
(assert (<= sc30C 1))
(assert (<= sc30D 1))
(assert (<= sc30E 1))
(assert (<= sc30F 1))
(assert (<= (str.len var31A) 1))
(assert (<= (str.len var31B) 1))
(assert (<= (str.len var31C) 1))
(assert (<= (str.len var31D) 1))
(assert (<= (str.len var31E) 1))
(assert (<= (str.len var31F) 1))
(assert (= (str.++ preA (str.++ stem31 sufA)) (str.++ unch131A (str.++ ch31A unch231A))))
(assert (= (str.++ preB (str.++ stem31 sufB)) (str.++ unch131B (str.++ ch31B unch231B))))
(assert (= (str.++ preC (str.++ stem31 sufC)) (str.++ unch131C (str.++ ch31C unch231C))))
(assert (= (str.++ preD (str.++ stem31 sufD)) (str.++ unch131D (str.++ ch31D unch231D))))
(assert (= (str.++ preE (str.++ stem31 sufE)) (str.++ unch131E (str.++ ch31E unch231E))))
(assert (= (str.++ preF (str.++ stem31 sufF)) (str.++ unch131F (str.++ ch31F unch231F))))
(assert (= "4aajad" (str.++ unch131A (str.++ var31A unch231A))))
(assert (= "4aajada" (str.++ unch131B (str.++ var31B unch231B))))
(assert (= "4aajaZo" (str.++ unch131C (str.++ var31C unch231C))))
(assert (= (str.len stem31) l31))
(assert (= (ite (= ch31A var31A) 0 1) sc31A))
(assert (= (ite (= ch31B var31B) 0 1) sc31B))
(assert (= (ite (= ch31C var31C) 0 1) sc31C))
(assert (= (ite (= ch31D var31D) 0 1) sc31D))
(assert (= (ite (= ch31E var31E) 0 1) sc31E))
(assert (= (ite (= ch31F var31F) 0 1) sc31F))
(assert (<= sc31A 1))
(assert (<= sc31B 1))
(assert (<= sc31C 1))
(assert (<= sc31D 1))
(assert (<= sc31E 1))
(assert (<= sc31F 1))
(assert (<= (str.len var32A) 1))
(assert (<= (str.len var32B) 1))
(assert (<= (str.len var32C) 1))
(assert (<= (str.len var32D) 1))
(assert (<= (str.len var32E) 1))
(assert (<= (str.len var32F) 1))
(assert (= (str.++ preA (str.++ stem32 sufA)) (str.++ unch132A (str.++ ch32A unch232A))))
(assert (= (str.++ preB (str.++ stem32 sufB)) (str.++ unch132B (str.++ ch32B unch232B))))
(assert (= (str.++ preC (str.++ stem32 sufC)) (str.++ unch132C (str.++ ch32C unch232C))))
(assert (= (str.++ preD (str.++ stem32 sufD)) (str.++ unch132D (str.++ ch32D unch232D))))
(assert (= (str.++ preE (str.++ stem32 sufE)) (str.++ unch132E (str.++ ch32E unch232E))))
(assert (= (str.++ preF (str.++ stem32 sufF)) (str.++ unch132F (str.++ ch32F unch232F))))
(assert (= "ga3an" (str.++ unch132A (str.++ var32A unch232A))))
(assert (= "ga3anta" (str.++ unch132B (str.++ var32B unch232B))))
(assert (= "ga3mo" (str.++ unch132C (str.++ var32C unch232C))))
(assert (= (str.len stem32) l32))
(assert (= (ite (= ch32A var32A) 0 1) sc32A))
(assert (= (ite (= ch32B var32B) 0 1) sc32B))
(assert (= (ite (= ch32C var32C) 0 1) sc32C))
(assert (= (ite (= ch32D var32D) 0 1) sc32D))
(assert (= (ite (= ch32E var32E) 0 1) sc32E))
(assert (= (ite (= ch32F var32F) 0 1) sc32F))
(assert (<= sc32A 1))
(assert (<= sc32B 1))
(assert (<= sc32C 1))
(assert (<= sc32D 1))
(assert (<= sc32E 1))
(assert (<= sc32F 1))
(assert (<= (str.len var33A) 1))
(assert (<= (str.len var33B) 1))
(assert (<= (str.len var33C) 1))
(assert (<= (str.len var33D) 1))
(assert (<= (str.len var33E) 1))
(assert (<= (str.len var33F) 1))
(assert (= (str.++ preA (str.++ stem33 sufA)) (str.++ unch133A (str.++ ch33A unch233A))))
(assert (= (str.++ preB (str.++ stem33 sufB)) (str.++ unch133B (str.++ ch33B unch233B))))
(assert (= (str.++ preC (str.++ stem33 sufC)) (str.++ unch133C (str.++ ch33C unch233C))))
(assert (= (str.++ preD (str.++ stem33 sufD)) (str.++ unch133D (str.++ ch33D unch233D))))
(assert (= (str.++ preE (str.++ stem33 sufE)) (str.++ unch133E (str.++ ch33E unch233E))))
(assert (= (str.++ preF (str.++ stem33 sufF)) (str.++ unch133F (str.++ ch33F unch233F))))
(assert (= "4inan" (str.++ unch133A (str.++ var33A unch233A))))
(assert (= "4inanta" (str.++ unch133B (str.++ var33B unch233B))))
(assert (= "4inano" (str.++ unch133C (str.++ var33C unch233C))))
(assert (= (str.len stem33) l33))
(assert (= (ite (= ch33A var33A) 0 1) sc33A))
(assert (= (ite (= ch33B var33B) 0 1) sc33B))
(assert (= (ite (= ch33C var33C) 0 1) sc33C))
(assert (= (ite (= ch33D var33D) 0 1) sc33D))
(assert (= (ite (= ch33E var33E) 0 1) sc33E))
(assert (= (ite (= ch33F var33F) 0 1) sc33F))
(assert (<= sc33A 1))
(assert (<= sc33B 1))
(assert (<= sc33C 1))
(assert (<= sc33D 1))
(assert (<= sc33E 1))
(assert (<= sc33F 1))
(assert (<= (str.len var34A) 1))
(assert (<= (str.len var34B) 1))
(assert (<= (str.len var34C) 1))
(assert (<= (str.len var34D) 1))
(assert (<= (str.len var34E) 1))
(assert (<= (str.len var34F) 1))
(assert (= (str.++ preA (str.++ stem34 sufA)) (str.++ unch134A (str.++ ch34A unch234A))))
(assert (= (str.++ preB (str.++ stem34 sufB)) (str.++ unch134B (str.++ ch34B unch234B))))
(assert (= (str.++ preC (str.++ stem34 sufC)) (str.++ unch134C (str.++ ch34C unch234C))))
(assert (= (str.++ preD (str.++ stem34 sufD)) (str.++ unch134D (str.++ ch34D unch234D))))
(assert (= (str.++ preE (str.++ stem34 sufE)) (str.++ unch134E (str.++ ch34E unch234E))))
(assert (= (str.++ preF (str.++ stem34 sufF)) (str.++ unch134F (str.++ ch34F unch234F))))
(assert (= "suOaj" (str.++ unch134D (str.++ var34D unch234D))))
(assert (= "sugtaj" (str.++ unch134E (str.++ var34E unch234E))))
(assert (= "sugnaj" (str.++ unch134F (str.++ var34F unch234F))))
(assert (= (str.len stem34) l34))
(assert (= (ite (= ch34A var34A) 0 1) sc34A))
(assert (= (ite (= ch34B var34B) 0 1) sc34B))
(assert (= (ite (= ch34C var34C) 0 1) sc34C))
(assert (= (ite (= ch34D var34D) 0 1) sc34D))
(assert (= (ite (= ch34E var34E) 0 1) sc34E))
(assert (= (ite (= ch34F var34F) 0 1) sc34F))
(assert (<= sc34A 1))
(assert (<= sc34B 1))
(assert (<= sc34C 1))
(assert (<= sc34D 1))
(assert (<= sc34E 1))
(assert (<= sc34F 1))
(assert (<= (str.len var35A) 1))
(assert (<= (str.len var35B) 1))
(assert (<= (str.len var35C) 1))
(assert (<= (str.len var35D) 1))
(assert (<= (str.len var35E) 1))
(assert (<= (str.len var35F) 1))
(assert (= (str.++ preA (str.++ stem35 sufA)) (str.++ unch135A (str.++ ch35A unch235A))))
(assert (= (str.++ preB (str.++ stem35 sufB)) (str.++ unch135B (str.++ ch35B unch235B))))
(assert (= (str.++ preC (str.++ stem35 sufC)) (str.++ unch135C (str.++ ch35C unch235C))))
(assert (= (str.++ preD (str.++ stem35 sufD)) (str.++ unch135D (str.++ ch35D unch235D))))
(assert (= (str.++ preE (str.++ stem35 sufE)) (str.++ unch135E (str.++ ch35E unch235E))))
(assert (= (str.++ preF (str.++ stem35 sufF)) (str.++ unch135F (str.++ ch35F unch235F))))
(assert (= "kaXaj" (str.++ unch135D (str.++ var35D unch235D))))
(assert (= "kabtaj" (str.++ unch135E (str.++ var35E unch235E))))
(assert (= "kabnaj" (str.++ unch135F (str.++ var35F unch235F))))
(assert (= (str.len stem35) l35))
(assert (= (ite (= ch35A var35A) 0 1) sc35A))
(assert (= (ite (= ch35B var35B) 0 1) sc35B))
(assert (= (ite (= ch35C var35C) 0 1) sc35C))
(assert (= (ite (= ch35D var35D) 0 1) sc35D))
(assert (= (ite (= ch35E var35E) 0 1) sc35E))
(assert (= (ite (= ch35F var35F) 0 1) sc35F))
(assert (<= sc35A 1))
(assert (<= sc35B 1))
(assert (<= sc35C 1))
(assert (<= sc35D 1))
(assert (<= sc35E 1))
(assert (<= sc35F 1))
(assert (<= (str.len var36A) 1))
(assert (<= (str.len var36B) 1))
(assert (<= (str.len var36C) 1))
(assert (<= (str.len var36D) 1))
(assert (<= (str.len var36E) 1))
(assert (<= (str.len var36F) 1))
(assert (= (str.++ preA (str.++ stem36 sufA)) (str.++ unch136A (str.++ ch36A unch236A))))
(assert (= (str.++ preB (str.++ stem36 sufB)) (str.++ unch136B (str.++ ch36B unch236B))))
(assert (= (str.++ preC (str.++ stem36 sufC)) (str.++ unch136C (str.++ ch36C unch236C))))
(assert (= (str.++ preD (str.++ stem36 sufD)) (str.++ unch136D (str.++ ch36D unch236D))))
(assert (= (str.++ preE (str.++ stem36 sufE)) (str.++ unch136E (str.++ ch36E unch236E))))
(assert (= (str.++ preF (str.++ stem36 sufF)) (str.++ unch136F (str.++ ch36F unch236F))))
(assert (= "siZaj" (str.++ unch136D (str.++ var36D unch236D))))
(assert (= "sidaj" (str.++ unch136E (str.++ var36E unch236E))))
(assert (= "sidnaj" (str.++ unch136F (str.++ var36F unch236F))))
(assert (= (str.len stem36) l36))
(assert (= (ite (= ch36A var36A) 0 1) sc36A))
(assert (= (ite (= ch36B var36B) 0 1) sc36B))
(assert (= (ite (= ch36C var36C) 0 1) sc36C))
(assert (= (ite (= ch36D var36D) 0 1) sc36D))
(assert (= (ite (= ch36E var36E) 0 1) sc36E))
(assert (= (ite (= ch36F var36F) 0 1) sc36F))
(assert (<= sc36A 1))
(assert (<= sc36B 1))
(assert (<= sc36C 1))
(assert (<= sc36D 1))
(assert (<= sc36E 1))
(assert (<= sc36F 1))
(assert (<= (str.len var37A) 1))
(assert (<= (str.len var37B) 1))
(assert (<= (str.len var37C) 1))
(assert (<= (str.len var37D) 1))
(assert (<= (str.len var37E) 1))
(assert (<= (str.len var37F) 1))
(assert (= (str.++ preA (str.++ stem37 sufA)) (str.++ unch137A (str.++ ch37A unch237A))))
(assert (= (str.++ preB (str.++ stem37 sufB)) (str.++ unch137B (str.++ ch37B unch237B))))
(assert (= (str.++ preC (str.++ stem37 sufC)) (str.++ unch137C (str.++ ch37C unch237C))))
(assert (= (str.++ preD (str.++ stem37 sufD)) (str.++ unch137D (str.++ ch37D unch237D))))
(assert (= (str.++ preE (str.++ stem37 sufE)) (str.++ unch137E (str.++ ch37E unch237E))))
(assert (= (str.++ preF (str.++ stem37 sufF)) (str.++ unch137F (str.++ ch37F unch237F))))
(assert (= "dilaj" (str.++ unch137D (str.++ var37D unch237D))))
(assert (= "diBaj" (str.++ unch137E (str.++ var37E unch237E))))
(assert (= "dillaj" (str.++ unch137F (str.++ var37F unch237F))))
(assert (= (str.len stem37) l37))
(assert (= (ite (= ch37A var37A) 0 1) sc37A))
(assert (= (ite (= ch37B var37B) 0 1) sc37B))
(assert (= (ite (= ch37C var37C) 0 1) sc37C))
(assert (= (ite (= ch37D var37D) 0 1) sc37D))
(assert (= (ite (= ch37E var37E) 0 1) sc37E))
(assert (= (ite (= ch37F var37F) 0 1) sc37F))
(assert (<= sc37A 1))
(assert (<= sc37B 1))
(assert (<= sc37C 1))
(assert (<= sc37D 1))
(assert (<= sc37E 1))
(assert (<= sc37F 1))
(assert (<= (str.len var38A) 1))
(assert (<= (str.len var38B) 1))
(assert (<= (str.len var38C) 1))
(assert (<= (str.len var38D) 1))
(assert (<= (str.len var38E) 1))
(assert (<= (str.len var38F) 1))
(assert (= (str.++ preA (str.++ stem38 sufA)) (str.++ unch138A (str.++ ch38A unch238A))))
(assert (= (str.++ preB (str.++ stem38 sufB)) (str.++ unch138B (str.++ ch38B unch238B))))
(assert (= (str.++ preC (str.++ stem38 sufC)) (str.++ unch138C (str.++ ch38C unch238C))))
(assert (= (str.++ preD (str.++ stem38 sufD)) (str.++ unch138D (str.++ ch38D unch238D))))
(assert (= (str.++ preE (str.++ stem38 sufE)) (str.++ unch138E (str.++ ch38E unch238E))))
(assert (= (str.++ preF (str.++ stem38 sufF)) (str.++ unch138F (str.++ ch38F unch238F))))
(assert (= "ganaj" (str.++ unch138D (str.++ var38D unch238D))))
(assert (= "gantaj" (str.++ unch138E (str.++ var38E unch238E))))
(assert (= "gannaj" (str.++ unch138F (str.++ var38F unch238F))))
(assert (= (str.len stem38) l38))
(assert (= (ite (= ch38A var38A) 0 1) sc38A))
(assert (= (ite (= ch38B var38B) 0 1) sc38B))
(assert (= (ite (= ch38C var38C) 0 1) sc38C))
(assert (= (ite (= ch38D var38D) 0 1) sc38D))
(assert (= (ite (= ch38E var38E) 0 1) sc38E))
(assert (= (ite (= ch38F var38F) 0 1) sc38F))
(assert (<= sc38A 1))
(assert (<= sc38B 1))
(assert (<= sc38C 1))
(assert (<= sc38D 1))
(assert (<= sc38E 1))
(assert (<= sc38F 1))
(assert (<= (str.len var39A) 1))
(assert (<= (str.len var39B) 1))
(assert (<= (str.len var39C) 1))
(assert (<= (str.len var39D) 1))
(assert (<= (str.len var39E) 1))
(assert (<= (str.len var39F) 1))
(assert (= (str.++ preA (str.++ stem39 sufA)) (str.++ unch139A (str.++ ch39A unch239A))))
(assert (= (str.++ preB (str.++ stem39 sufB)) (str.++ unch139B (str.++ ch39B unch239B))))
(assert (= (str.++ preC (str.++ stem39 sufC)) (str.++ unch139C (str.++ ch39C unch239C))))
(assert (= (str.++ preD (str.++ stem39 sufD)) (str.++ unch139D (str.++ ch39D unch239D))))
(assert (= (str.++ preE (str.++ stem39 sufE)) (str.++ unch139E (str.++ ch39E unch239E))))
(assert (= (str.++ preF (str.++ stem39 sufF)) (str.++ unch139F (str.++ ch39F unch239F))))
(assert (= "tumaj" (str.++ unch139D (str.++ var39D unch239D))))
(assert (= "tuntaj" (str.++ unch139E (str.++ var39E unch239E))))
(assert (= "tunnaj" (str.++ unch139F (str.++ var39F unch239F))))
(assert (= (str.len stem39) l39))
(assert (= (ite (= ch39A var39A) 0 1) sc39A))
(assert (= (ite (= ch39B var39B) 0 1) sc39B))
(assert (= (ite (= ch39C var39C) 0 1) sc39C))
(assert (= (ite (= ch39D var39D) 0 1) sc39D))
(assert (= (ite (= ch39E var39E) 0 1) sc39E))
(assert (= (ite (= ch39F var39F) 0 1) sc39F))
(assert (<= sc39A 1))
(assert (<= sc39B 1))
(assert (<= sc39C 1))
(assert (<= sc39D 1))
(assert (<= sc39E 1))
(assert (<= sc39F 1))
(assert (<= (str.len var40A) 1))
(assert (<= (str.len var40B) 1))
(assert (<= (str.len var40C) 1))
(assert (<= (str.len var40D) 1))
(assert (<= (str.len var40E) 1))
(assert (<= (str.len var40F) 1))
(assert (= (str.++ preA (str.++ stem40 sufA)) (str.++ unch140A (str.++ ch40A unch240A))))
(assert (= (str.++ preB (str.++ stem40 sufB)) (str.++ unch140B (str.++ ch40B unch240B))))
(assert (= (str.++ preC (str.++ stem40 sufC)) (str.++ unch140C (str.++ ch40C unch240C))))
(assert (= (str.++ preD (str.++ stem40 sufD)) (str.++ unch140D (str.++ ch40D unch240D))))
(assert (= (str.++ preE (str.++ stem40 sufE)) (str.++ unch140E (str.++ ch40E unch240E))))
(assert (= (str.++ preF (str.++ stem40 sufF)) (str.++ unch140F (str.++ ch40F unch240F))))
(assert (= "argaj" (str.++ unch140D (str.++ var40D unch240D))))
(assert (= "aragtaj" (str.++ unch140E (str.++ var40E unch240E))))
(assert (= "aragnaj" (str.++ unch140F (str.++ var40F unch240F))))
(assert (= (str.len stem40) l40))
(assert (= (ite (= ch40A var40A) 0 1) sc40A))
(assert (= (ite (= ch40B var40B) 0 1) sc40B))
(assert (= (ite (= ch40C var40C) 0 1) sc40C))
(assert (= (ite (= ch40D var40D) 0 1) sc40D))
(assert (= (ite (= ch40E var40E) 0 1) sc40E))
(assert (= (ite (= ch40F var40F) 0 1) sc40F))
(assert (<= sc40A 1))
(assert (<= sc40B 1))
(assert (<= sc40C 1))
(assert (<= sc40D 1))
(assert (<= sc40E 1))
(assert (<= sc40F 1))
(assert (<= (str.len var41A) 1))
(assert (<= (str.len var41B) 1))
(assert (<= (str.len var41C) 1))
(assert (<= (str.len var41D) 1))
(assert (<= (str.len var41E) 1))
(assert (<= (str.len var41F) 1))
(assert (= (str.++ preA (str.++ stem41 sufA)) (str.++ unch141A (str.++ ch41A unch241A))))
(assert (= (str.++ preB (str.++ stem41 sufB)) (str.++ unch141B (str.++ ch41B unch241B))))
(assert (= (str.++ preC (str.++ stem41 sufC)) (str.++ unch141C (str.++ ch41C unch241C))))
(assert (= (str.++ preD (str.++ stem41 sufD)) (str.++ unch141D (str.++ ch41D unch241D))))
(assert (= (str.++ preE (str.++ stem41 sufE)) (str.++ unch141E (str.++ ch41E unch241E))))
(assert (= (str.++ preF (str.++ stem41 sufF)) (str.++ unch141F (str.++ ch41F unch241F))))
(assert (= "gudbaj" (str.++ unch141D (str.++ var41D unch241D))))
(assert (= "guZubtaj" (str.++ unch141E (str.++ var41E unch241E))))
(assert (= "guZubnaj" (str.++ unch141F (str.++ var41F unch241F))))
(assert (= (str.len stem41) l41))
(assert (= (ite (= ch41A var41A) 0 1) sc41A))
(assert (= (ite (= ch41B var41B) 0 1) sc41B))
(assert (= (ite (= ch41C var41C) 0 1) sc41C))
(assert (= (ite (= ch41D var41D) 0 1) sc41D))
(assert (= (ite (= ch41E var41E) 0 1) sc41E))
(assert (= (ite (= ch41F var41F) 0 1) sc41F))
(assert (<= sc41A 1))
(assert (<= sc41B 1))
(assert (<= sc41C 1))
(assert (<= sc41D 1))
(assert (<= sc41E 1))
(assert (<= sc41F 1))
(assert (<= (str.len var42A) 1))
(assert (<= (str.len var42B) 1))
(assert (<= (str.len var42C) 1))
(assert (<= (str.len var42D) 1))
(assert (<= (str.len var42E) 1))
(assert (<= (str.len var42F) 1))
(assert (= (str.++ preA (str.++ stem42 sufA)) (str.++ unch142A (str.++ ch42A unch242A))))
(assert (= (str.++ preB (str.++ stem42 sufB)) (str.++ unch142B (str.++ ch42B unch242B))))
(assert (= (str.++ preC (str.++ stem42 sufC)) (str.++ unch142C (str.++ ch42C unch242C))))
(assert (= (str.++ preD (str.++ stem42 sufD)) (str.++ unch142D (str.++ ch42D unch242D))))
(assert (= (str.++ preE (str.++ stem42 sufE)) (str.++ unch142E (str.++ ch42E unch242E))))
(assert (= (str.++ preF (str.++ stem42 sufF)) (str.++ unch142F (str.++ ch42F unch242F))))
(assert (= "qoslaj" (str.++ unch142D (str.++ var42D unch242D))))
(assert (= "qosoBaj" (str.++ unch142E (str.++ var42E unch242E))))
(assert (= "qosollaj" (str.++ unch142F (str.++ var42F unch242F))))
(assert (= (str.len stem42) l42))
(assert (= (ite (= ch42A var42A) 0 1) sc42A))
(assert (= (ite (= ch42B var42B) 0 1) sc42B))
(assert (= (ite (= ch42C var42C) 0 1) sc42C))
(assert (= (ite (= ch42D var42D) 0 1) sc42D))
(assert (= (ite (= ch42E var42E) 0 1) sc42E))
(assert (= (ite (= ch42F var42F) 0 1) sc42F))
(assert (<= sc42A 1))
(assert (<= sc42B 1))
(assert (<= sc42C 1))
(assert (<= sc42D 1))
(assert (<= sc42E 1))
(assert (<= sc42F 1))
(assert (<= (str.len var43A) 1))
(assert (<= (str.len var43B) 1))
(assert (<= (str.len var43C) 1))
(assert (<= (str.len var43D) 1))
(assert (<= (str.len var43E) 1))
(assert (<= (str.len var43F) 1))
(assert (= (str.++ preA (str.++ stem43 sufA)) (str.++ unch143A (str.++ ch43A unch243A))))
(assert (= (str.++ preB (str.++ stem43 sufB)) (str.++ unch143B (str.++ ch43B unch243B))))
(assert (= (str.++ preC (str.++ stem43 sufC)) (str.++ unch143C (str.++ ch43C unch243C))))
(assert (= (str.++ preD (str.++ stem43 sufD)) (str.++ unch143D (str.++ ch43D unch243D))))
(assert (= (str.++ preE (str.++ stem43 sufE)) (str.++ unch143E (str.++ ch43E unch243E))))
(assert (= (str.++ preF (str.++ stem43 sufF)) (str.++ unch143F (str.++ ch43F unch243F))))
(assert (= "hadlaj" (str.++ unch143D (str.++ var43D unch243D))))
(assert (= "haZaBaj" (str.++ unch143E (str.++ var43E unch243E))))
(assert (= "haZallaj" (str.++ unch143F (str.++ var43F unch243F))))
(assert (= (str.len stem43) l43))
(assert (= (ite (= ch43A var43A) 0 1) sc43A))
(assert (= (ite (= ch43B var43B) 0 1) sc43B))
(assert (= (ite (= ch43C var43C) 0 1) sc43C))
(assert (= (ite (= ch43D var43D) 0 1) sc43D))
(assert (= (ite (= ch43E var43E) 0 1) sc43E))
(assert (= (ite (= ch43F var43F) 0 1) sc43F))
(assert (<= sc43A 1))
(assert (<= sc43B 1))
(assert (<= sc43C 1))
(assert (<= sc43D 1))
(assert (<= sc43E 1))
(assert (<= sc43F 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      0
      sc30A
      sc30B
      sc30C
      sc30D
      sc30E
      sc30F
      0
      sc31A
      sc31B
      sc31C
      sc31D
      sc31E
      sc31F
      0
      sc32A
      sc32B
      sc32C
      sc32D
      sc32E
      sc32F
      0
      sc33A
      sc33B
      sc33C
      sc33D
      sc33E
      sc33F
      0
      sc34A
      sc34B
      sc34C
      sc34D
      sc34E
      sc34F
      0
      sc35A
      sc35B
      sc35C
      sc35D
      sc35E
      sc35F
      0
      sc36A
      sc36B
      sc36C
      sc36D
      sc36E
      sc36F
      0
      sc37A
      sc37B
      sc37C
      sc37D
      sc37E
      sc37F
      0
      sc38A
      sc38B
      sc38C
      sc38D
      sc38E
      sc38F
      0
      sc39A
      sc39B
      sc39C
      sc39D
      sc39E
      sc39F
      0
      sc40A
      sc40B
      sc40C
      sc40D
      sc40E
      sc40F
      0
      sc41A
      sc41B
      sc41C
      sc41D
      sc41E
      sc41F
      0
      sc42A
      sc42B
      sc42C
      sc42D
      sc42E
      sc42F
      0
      sc43A
      sc43B
      sc43C
      sc43D
      sc43E
      sc43F)
   4))
(assert (= (+ 0
      sc0C
      sc1C
      sc2C
      sc3C
      sc4C
      sc5C
      sc6C
      sc7C
      sc8C
      sc9C
      sc10C
      sc11C
      sc12C
      sc13C
      sc14C
      sc15C
      sc16C
      sc17C
      sc18C
      sc19C
      sc20C
      sc21C
      sc22C
      sc23C
      sc24C
      sc25C
      sc26C
      sc27C
      sc28C
      sc29C
      sc30C
      sc31C
      sc32C
      sc33C
      sc34C
      sc35C
      sc36C
      sc37C
      sc38C
      sc39C
      sc40C
      sc41C
      sc42C
      sc43C)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun var30A () String)
(declare-fun var30B () String)
(declare-fun var30C () String)
(declare-fun var30D () String)
(declare-fun var30E () String)
(declare-fun var30F () String)
(declare-fun unch230A () String)
(declare-fun ch30A () String)
(declare-fun unch130A () String)
(declare-fun stem30 () String)
(declare-fun unch230B () String)
(declare-fun ch30B () String)
(declare-fun unch130B () String)
(declare-fun unch230C () String)
(declare-fun ch30C () String)
(declare-fun unch130C () String)
(declare-fun unch230D () String)
(declare-fun ch30D () String)
(declare-fun unch130D () String)
(declare-fun unch230E () String)
(declare-fun ch30E () String)
(declare-fun unch130E () String)
(declare-fun unch230F () String)
(declare-fun ch30F () String)
(declare-fun unch130F () String)
(declare-fun l30 () Int)
(declare-fun sc30A () Int)
(declare-fun sc30B () Int)
(declare-fun sc30C () Int)
(declare-fun sc30D () Int)
(declare-fun sc30E () Int)
(declare-fun sc30F () Int)
(declare-fun var31A () String)
(declare-fun var31B () String)
(declare-fun var31C () String)
(declare-fun var31D () String)
(declare-fun var31E () String)
(declare-fun var31F () String)
(declare-fun unch231A () String)
(declare-fun ch31A () String)
(declare-fun unch131A () String)
(declare-fun stem31 () String)
(declare-fun unch231B () String)
(declare-fun ch31B () String)
(declare-fun unch131B () String)
(declare-fun unch231C () String)
(declare-fun ch31C () String)
(declare-fun unch131C () String)
(declare-fun unch231D () String)
(declare-fun ch31D () String)
(declare-fun unch131D () String)
(declare-fun unch231E () String)
(declare-fun ch31E () String)
(declare-fun unch131E () String)
(declare-fun unch231F () String)
(declare-fun ch31F () String)
(declare-fun unch131F () String)
(declare-fun l31 () Int)
(declare-fun sc31A () Int)
(declare-fun sc31B () Int)
(declare-fun sc31C () Int)
(declare-fun sc31D () Int)
(declare-fun sc31E () Int)
(declare-fun sc31F () Int)
(declare-fun var32A () String)
(declare-fun var32B () String)
(declare-fun var32C () String)
(declare-fun var32D () String)
(declare-fun var32E () String)
(declare-fun var32F () String)
(declare-fun unch232A () String)
(declare-fun ch32A () String)
(declare-fun unch132A () String)
(declare-fun stem32 () String)
(declare-fun unch232B () String)
(declare-fun ch32B () String)
(declare-fun unch132B () String)
(declare-fun unch232C () String)
(declare-fun ch32C () String)
(declare-fun unch132C () String)
(declare-fun unch232D () String)
(declare-fun ch32D () String)
(declare-fun unch132D () String)
(declare-fun unch232E () String)
(declare-fun ch32E () String)
(declare-fun unch132E () String)
(declare-fun unch232F () String)
(declare-fun ch32F () String)
(declare-fun unch132F () String)
(declare-fun l32 () Int)
(declare-fun sc32A () Int)
(declare-fun sc32B () Int)
(declare-fun sc32C () Int)
(declare-fun sc32D () Int)
(declare-fun sc32E () Int)
(declare-fun sc32F () Int)
(declare-fun var33A () String)
(declare-fun var33B () String)
(declare-fun var33C () String)
(declare-fun var33D () String)
(declare-fun var33E () String)
(declare-fun var33F () String)
(declare-fun unch233A () String)
(declare-fun ch33A () String)
(declare-fun unch133A () String)
(declare-fun stem33 () String)
(declare-fun unch233B () String)
(declare-fun ch33B () String)
(declare-fun unch133B () String)
(declare-fun unch233C () String)
(declare-fun ch33C () String)
(declare-fun unch133C () String)
(declare-fun unch233D () String)
(declare-fun ch33D () String)
(declare-fun unch133D () String)
(declare-fun unch233E () String)
(declare-fun ch33E () String)
(declare-fun unch133E () String)
(declare-fun unch233F () String)
(declare-fun ch33F () String)
(declare-fun unch133F () String)
(declare-fun l33 () Int)
(declare-fun sc33A () Int)
(declare-fun sc33B () Int)
(declare-fun sc33C () Int)
(declare-fun sc33D () Int)
(declare-fun sc33E () Int)
(declare-fun sc33F () Int)
(declare-fun var34A () String)
(declare-fun var34B () String)
(declare-fun var34C () String)
(declare-fun var34D () String)
(declare-fun var34E () String)
(declare-fun var34F () String)
(declare-fun unch234A () String)
(declare-fun ch34A () String)
(declare-fun unch134A () String)
(declare-fun stem34 () String)
(declare-fun unch234B () String)
(declare-fun ch34B () String)
(declare-fun unch134B () String)
(declare-fun unch234C () String)
(declare-fun ch34C () String)
(declare-fun unch134C () String)
(declare-fun unch234D () String)
(declare-fun ch34D () String)
(declare-fun unch134D () String)
(declare-fun unch234E () String)
(declare-fun ch34E () String)
(declare-fun unch134E () String)
(declare-fun unch234F () String)
(declare-fun ch34F () String)
(declare-fun unch134F () String)
(declare-fun l34 () Int)
(declare-fun sc34A () Int)
(declare-fun sc34B () Int)
(declare-fun sc34C () Int)
(declare-fun sc34D () Int)
(declare-fun sc34E () Int)
(declare-fun sc34F () Int)
(declare-fun var35A () String)
(declare-fun var35B () String)
(declare-fun var35C () String)
(declare-fun var35D () String)
(declare-fun var35E () String)
(declare-fun var35F () String)
(declare-fun unch235A () String)
(declare-fun ch35A () String)
(declare-fun unch135A () String)
(declare-fun stem35 () String)
(declare-fun unch235B () String)
(declare-fun ch35B () String)
(declare-fun unch135B () String)
(declare-fun unch235C () String)
(declare-fun ch35C () String)
(declare-fun unch135C () String)
(declare-fun unch235D () String)
(declare-fun ch35D () String)
(declare-fun unch135D () String)
(declare-fun unch235E () String)
(declare-fun ch35E () String)
(declare-fun unch135E () String)
(declare-fun unch235F () String)
(declare-fun ch35F () String)
(declare-fun unch135F () String)
(declare-fun l35 () Int)
(declare-fun sc35A () Int)
(declare-fun sc35B () Int)
(declare-fun sc35C () Int)
(declare-fun sc35D () Int)
(declare-fun sc35E () Int)
(declare-fun sc35F () Int)
(declare-fun var36A () String)
(declare-fun var36B () String)
(declare-fun var36C () String)
(declare-fun var36D () String)
(declare-fun var36E () String)
(declare-fun var36F () String)
(declare-fun unch236A () String)
(declare-fun ch36A () String)
(declare-fun unch136A () String)
(declare-fun stem36 () String)
(declare-fun unch236B () String)
(declare-fun ch36B () String)
(declare-fun unch136B () String)
(declare-fun unch236C () String)
(declare-fun ch36C () String)
(declare-fun unch136C () String)
(declare-fun unch236D () String)
(declare-fun ch36D () String)
(declare-fun unch136D () String)
(declare-fun unch236E () String)
(declare-fun ch36E () String)
(declare-fun unch136E () String)
(declare-fun unch236F () String)
(declare-fun ch36F () String)
(declare-fun unch136F () String)
(declare-fun l36 () Int)
(declare-fun sc36A () Int)
(declare-fun sc36B () Int)
(declare-fun sc36C () Int)
(declare-fun sc36D () Int)
(declare-fun sc36E () Int)
(declare-fun sc36F () Int)
(declare-fun var37A () String)
(declare-fun var37B () String)
(declare-fun var37C () String)
(declare-fun var37D () String)
(declare-fun var37E () String)
(declare-fun var37F () String)
(declare-fun unch237A () String)
(declare-fun ch37A () String)
(declare-fun unch137A () String)
(declare-fun stem37 () String)
(declare-fun unch237B () String)
(declare-fun ch37B () String)
(declare-fun unch137B () String)
(declare-fun unch237C () String)
(declare-fun ch37C () String)
(declare-fun unch137C () String)
(declare-fun unch237D () String)
(declare-fun ch37D () String)
(declare-fun unch137D () String)
(declare-fun unch237E () String)
(declare-fun ch37E () String)
(declare-fun unch137E () String)
(declare-fun unch237F () String)
(declare-fun ch37F () String)
(declare-fun unch137F () String)
(declare-fun l37 () Int)
(declare-fun sc37A () Int)
(declare-fun sc37B () Int)
(declare-fun sc37C () Int)
(declare-fun sc37D () Int)
(declare-fun sc37E () Int)
(declare-fun sc37F () Int)
(declare-fun var38A () String)
(declare-fun var38B () String)
(declare-fun var38C () String)
(declare-fun var38D () String)
(declare-fun var38E () String)
(declare-fun var38F () String)
(declare-fun unch238A () String)
(declare-fun ch38A () String)
(declare-fun unch138A () String)
(declare-fun stem38 () String)
(declare-fun unch238B () String)
(declare-fun ch38B () String)
(declare-fun unch138B () String)
(declare-fun unch238C () String)
(declare-fun ch38C () String)
(declare-fun unch138C () String)
(declare-fun unch238D () String)
(declare-fun ch38D () String)
(declare-fun unch138D () String)
(declare-fun unch238E () String)
(declare-fun ch38E () String)
(declare-fun unch138E () String)
(declare-fun unch238F () String)
(declare-fun ch38F () String)
(declare-fun unch138F () String)
(declare-fun l38 () Int)
(declare-fun sc38A () Int)
(declare-fun sc38B () Int)
(declare-fun sc38C () Int)
(declare-fun sc38D () Int)
(declare-fun sc38E () Int)
(declare-fun sc38F () Int)
(declare-fun var39A () String)
(declare-fun var39B () String)
(declare-fun var39C () String)
(declare-fun var39D () String)
(declare-fun var39E () String)
(declare-fun var39F () String)
(declare-fun unch239A () String)
(declare-fun ch39A () String)
(declare-fun unch139A () String)
(declare-fun stem39 () String)
(declare-fun unch239B () String)
(declare-fun ch39B () String)
(declare-fun unch139B () String)
(declare-fun unch239C () String)
(declare-fun ch39C () String)
(declare-fun unch139C () String)
(declare-fun unch239D () String)
(declare-fun ch39D () String)
(declare-fun unch139D () String)
(declare-fun unch239E () String)
(declare-fun ch39E () String)
(declare-fun unch139E () String)
(declare-fun unch239F () String)
(declare-fun ch39F () String)
(declare-fun unch139F () String)
(declare-fun l39 () Int)
(declare-fun sc39A () Int)
(declare-fun sc39B () Int)
(declare-fun sc39C () Int)
(declare-fun sc39D () Int)
(declare-fun sc39E () Int)
(declare-fun sc39F () Int)
(declare-fun var40A () String)
(declare-fun var40B () String)
(declare-fun var40C () String)
(declare-fun var40D () String)
(declare-fun var40E () String)
(declare-fun var40F () String)
(declare-fun unch240A () String)
(declare-fun ch40A () String)
(declare-fun unch140A () String)
(declare-fun stem40 () String)
(declare-fun unch240B () String)
(declare-fun ch40B () String)
(declare-fun unch140B () String)
(declare-fun unch240C () String)
(declare-fun ch40C () String)
(declare-fun unch140C () String)
(declare-fun unch240D () String)
(declare-fun ch40D () String)
(declare-fun unch140D () String)
(declare-fun unch240E () String)
(declare-fun ch40E () String)
(declare-fun unch140E () String)
(declare-fun unch240F () String)
(declare-fun ch40F () String)
(declare-fun unch140F () String)
(declare-fun l40 () Int)
(declare-fun sc40A () Int)
(declare-fun sc40B () Int)
(declare-fun sc40C () Int)
(declare-fun sc40D () Int)
(declare-fun sc40E () Int)
(declare-fun sc40F () Int)
(declare-fun var41A () String)
(declare-fun var41B () String)
(declare-fun var41C () String)
(declare-fun var41D () String)
(declare-fun var41E () String)
(declare-fun var41F () String)
(declare-fun unch241A () String)
(declare-fun ch41A () String)
(declare-fun unch141A () String)
(declare-fun stem41 () String)
(declare-fun unch241B () String)
(declare-fun ch41B () String)
(declare-fun unch141B () String)
(declare-fun unch241C () String)
(declare-fun ch41C () String)
(declare-fun unch141C () String)
(declare-fun unch241D () String)
(declare-fun ch41D () String)
(declare-fun unch141D () String)
(declare-fun unch241E () String)
(declare-fun ch41E () String)
(declare-fun unch141E () String)
(declare-fun unch241F () String)
(declare-fun ch41F () String)
(declare-fun unch141F () String)
(declare-fun l41 () Int)
(declare-fun sc41A () Int)
(declare-fun sc41B () Int)
(declare-fun sc41C () Int)
(declare-fun sc41D () Int)
(declare-fun sc41E () Int)
(declare-fun sc41F () Int)
(declare-fun var42A () String)
(declare-fun var42B () String)
(declare-fun var42C () String)
(declare-fun var42D () String)
(declare-fun var42E () String)
(declare-fun var42F () String)
(declare-fun unch242A () String)
(declare-fun ch42A () String)
(declare-fun unch142A () String)
(declare-fun stem42 () String)
(declare-fun unch242B () String)
(declare-fun ch42B () String)
(declare-fun unch142B () String)
(declare-fun unch242C () String)
(declare-fun ch42C () String)
(declare-fun unch142C () String)
(declare-fun unch242D () String)
(declare-fun ch42D () String)
(declare-fun unch142D () String)
(declare-fun unch242E () String)
(declare-fun ch42E () String)
(declare-fun unch142E () String)
(declare-fun unch242F () String)
(declare-fun ch42F () String)
(declare-fun unch142F () String)
(declare-fun l42 () Int)
(declare-fun sc42A () Int)
(declare-fun sc42B () Int)
(declare-fun sc42C () Int)
(declare-fun sc42D () Int)
(declare-fun sc42E () Int)
(declare-fun sc42F () Int)
(declare-fun var43A () String)
(declare-fun var43B () String)
(declare-fun var43C () String)
(declare-fun var43D () String)
(declare-fun var43E () String)
(declare-fun var43F () String)
(declare-fun unch243A () String)
(declare-fun ch43A () String)
(declare-fun unch143A () String)
(declare-fun stem43 () String)
(declare-fun unch243B () String)
(declare-fun ch43B () String)
(declare-fun unch143B () String)
(declare-fun unch243C () String)
(declare-fun ch43C () String)
(declare-fun unch143C () String)
(declare-fun unch243D () String)
(declare-fun ch43D () String)
(declare-fun unch143D () String)
(declare-fun unch243E () String)
(declare-fun ch43E () String)
(declare-fun unch143E () String)
(declare-fun unch243F () String)
(declare-fun ch43F () String)
(declare-fun unch143F () String)
(declare-fun l43 () Int)
(declare-fun sc43A () Int)
(declare-fun sc43B () Int)
(declare-fun sc43C () Int)
(declare-fun sc43D () Int)
(declare-fun sc43E () Int)
(declare-fun sc43F () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= "daar" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "daarta" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "daaro" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= "gees" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "geesta" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "geeso" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= "laf" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "lafta" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "lafo" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= "lug" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "lugta" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "luOo" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= "naag" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "naagta" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "naaOo" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= "tib" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "tibta" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "tiXo" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= "sab" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "sabta" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "saXo" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= "bad" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "bada" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "baZo" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= "Bid" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "Bida" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "BiZo" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= "fee1" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "fee1a" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "fee2o" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= "3iir" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "3iirta" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "3iiro" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= "4ul" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "4uBa" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "4ulo" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= "bil" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "biBa" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "bilo" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= "meel" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "meeBa" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "meelo" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= "kaliil" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "kaliiBa" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "kaliilo" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= "najl" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "najBa" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "najlo" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= "sun" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "sunta" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "sumo" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= "laan" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "laanta" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "laamo" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= "sin" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "sinta" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "simo" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= "dan" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "danta" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "dano" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= "daan" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "daanta" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "daano" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= "saan" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "saanta" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "saano" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= "nirig" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "nirigta" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "nirgo" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= "gaXa1" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= "gaXa1a" (str.++ unch123B (str.++ var23B unch223B))))
(assert (= "gab1o" (str.++ unch123C (str.++ var23C unch223C))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= "hoOol" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= "hoOoBa" (str.++ unch124B (str.++ var24B unch224B))))
(assert (= "hoglo" (str.++ unch124C (str.++ var24C unch224C))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= "baOal" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= "baOaBa" (str.++ unch125B (str.++ var25B unch225B))))
(assert (= "baglo" (str.++ unch125C (str.++ var25C unch225C))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= "wa5ar" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= "wa5arta" (str.++ unch126B (str.++ var26B unch226B))))
(assert (= "wa5aro" (str.++ unch126C (str.++ var26C unch226C))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= "irbad" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= "irbada" (str.++ unch127B (str.++ var27B unch227B))))
(assert (= "irbaZo" (str.++ unch127C (str.++ var27C unch227C))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= "kefed" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= "kefeda" (str.++ unch128B (str.++ var28B unch228B))))
(assert (= "kefeZo" (str.++ unch128C (str.++ var28C unch228C))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= "Bilin" (str.++ unch129A (str.++ var29A unch229A))))
(assert (= "Bilinta" (str.++ unch129B (str.++ var29B unch229B))))
(assert (= "Bilino" (str.++ unch129C (str.++ var29C unch229C))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= (str.len var30A) 1))
(assert (<= (str.len var30B) 1))
(assert (<= (str.len var30C) 1))
(assert (<= (str.len var30D) 1))
(assert (<= (str.len var30E) 1))
(assert (<= (str.len var30F) 1))
(assert (= (str.++ preA (str.++ stem30 sufA)) (str.++ unch130A (str.++ ch30A unch230A))))
(assert (= (str.++ preB (str.++ stem30 sufB)) (str.++ unch130B (str.++ ch30B unch230B))))
(assert (= (str.++ preC (str.++ stem30 sufC)) (str.++ unch130C (str.++ ch30C unch230C))))
(assert (= (str.++ preD (str.++ stem30 sufD)) (str.++ unch130D (str.++ ch30D unch230D))))
(assert (= (str.++ preE (str.++ stem30 sufE)) (str.++ unch130E (str.++ ch30E unch230E))))
(assert (= (str.++ preF (str.++ stem30 sufF)) (str.++ unch130F (str.++ ch30F unch230F))))
(assert (= "bohol" (str.++ unch130A (str.++ var30A unch230A))))
(assert (= "bohoBa" (str.++ unch130B (str.++ var30B unch230B))))
(assert (= "boholo" (str.++ unch130C (str.++ var30C unch230C))))
(assert (= (str.len stem30) l30))
(assert (= (ite (= ch30A var30A) 0 1) sc30A))
(assert (= (ite (= ch30B var30B) 0 1) sc30B))
(assert (= (ite (= ch30C var30C) 0 1) sc30C))
(assert (= (ite (= ch30D var30D) 0 1) sc30D))
(assert (= (ite (= ch30E var30E) 0 1) sc30E))
(assert (= (ite (= ch30F var30F) 0 1) sc30F))
(assert (<= sc30A 1))
(assert (<= sc30B 1))
(assert (<= sc30C 1))
(assert (<= sc30D 1))
(assert (<= sc30E 1))
(assert (<= sc30F 1))
(assert (<= (str.len var31A) 1))
(assert (<= (str.len var31B) 1))
(assert (<= (str.len var31C) 1))
(assert (<= (str.len var31D) 1))
(assert (<= (str.len var31E) 1))
(assert (<= (str.len var31F) 1))
(assert (= (str.++ preA (str.++ stem31 sufA)) (str.++ unch131A (str.++ ch31A unch231A))))
(assert (= (str.++ preB (str.++ stem31 sufB)) (str.++ unch131B (str.++ ch31B unch231B))))
(assert (= (str.++ preC (str.++ stem31 sufC)) (str.++ unch131C (str.++ ch31C unch231C))))
(assert (= (str.++ preD (str.++ stem31 sufD)) (str.++ unch131D (str.++ ch31D unch231D))))
(assert (= (str.++ preE (str.++ stem31 sufE)) (str.++ unch131E (str.++ ch31E unch231E))))
(assert (= (str.++ preF (str.++ stem31 sufF)) (str.++ unch131F (str.++ ch31F unch231F))))
(assert (= "4aajad" (str.++ unch131A (str.++ var31A unch231A))))
(assert (= "4aajada" (str.++ unch131B (str.++ var31B unch231B))))
(assert (= "4aajaZo" (str.++ unch131C (str.++ var31C unch231C))))
(assert (= (str.len stem31) l31))
(assert (= (ite (= ch31A var31A) 0 1) sc31A))
(assert (= (ite (= ch31B var31B) 0 1) sc31B))
(assert (= (ite (= ch31C var31C) 0 1) sc31C))
(assert (= (ite (= ch31D var31D) 0 1) sc31D))
(assert (= (ite (= ch31E var31E) 0 1) sc31E))
(assert (= (ite (= ch31F var31F) 0 1) sc31F))
(assert (<= sc31A 1))
(assert (<= sc31B 1))
(assert (<= sc31C 1))
(assert (<= sc31D 1))
(assert (<= sc31E 1))
(assert (<= sc31F 1))
(assert (<= (str.len var32A) 1))
(assert (<= (str.len var32B) 1))
(assert (<= (str.len var32C) 1))
(assert (<= (str.len var32D) 1))
(assert (<= (str.len var32E) 1))
(assert (<= (str.len var32F) 1))
(assert (= (str.++ preA (str.++ stem32 sufA)) (str.++ unch132A (str.++ ch32A unch232A))))
(assert (= (str.++ preB (str.++ stem32 sufB)) (str.++ unch132B (str.++ ch32B unch232B))))
(assert (= (str.++ preC (str.++ stem32 sufC)) (str.++ unch132C (str.++ ch32C unch232C))))
(assert (= (str.++ preD (str.++ stem32 sufD)) (str.++ unch132D (str.++ ch32D unch232D))))
(assert (= (str.++ preE (str.++ stem32 sufE)) (str.++ unch132E (str.++ ch32E unch232E))))
(assert (= (str.++ preF (str.++ stem32 sufF)) (str.++ unch132F (str.++ ch32F unch232F))))
(assert (= "ga3an" (str.++ unch132A (str.++ var32A unch232A))))
(assert (= "ga3anta" (str.++ unch132B (str.++ var32B unch232B))))
(assert (= "ga3mo" (str.++ unch132C (str.++ var32C unch232C))))
(assert (= (str.len stem32) l32))
(assert (= (ite (= ch32A var32A) 0 1) sc32A))
(assert (= (ite (= ch32B var32B) 0 1) sc32B))
(assert (= (ite (= ch32C var32C) 0 1) sc32C))
(assert (= (ite (= ch32D var32D) 0 1) sc32D))
(assert (= (ite (= ch32E var32E) 0 1) sc32E))
(assert (= (ite (= ch32F var32F) 0 1) sc32F))
(assert (<= sc32A 1))
(assert (<= sc32B 1))
(assert (<= sc32C 1))
(assert (<= sc32D 1))
(assert (<= sc32E 1))
(assert (<= sc32F 1))
(assert (<= (str.len var33A) 1))
(assert (<= (str.len var33B) 1))
(assert (<= (str.len var33C) 1))
(assert (<= (str.len var33D) 1))
(assert (<= (str.len var33E) 1))
(assert (<= (str.len var33F) 1))
(assert (= (str.++ preA (str.++ stem33 sufA)) (str.++ unch133A (str.++ ch33A unch233A))))
(assert (= (str.++ preB (str.++ stem33 sufB)) (str.++ unch133B (str.++ ch33B unch233B))))
(assert (= (str.++ preC (str.++ stem33 sufC)) (str.++ unch133C (str.++ ch33C unch233C))))
(assert (= (str.++ preD (str.++ stem33 sufD)) (str.++ unch133D (str.++ ch33D unch233D))))
(assert (= (str.++ preE (str.++ stem33 sufE)) (str.++ unch133E (str.++ ch33E unch233E))))
(assert (= (str.++ preF (str.++ stem33 sufF)) (str.++ unch133F (str.++ ch33F unch233F))))
(assert (= "4inan" (str.++ unch133A (str.++ var33A unch233A))))
(assert (= "4inanta" (str.++ unch133B (str.++ var33B unch233B))))
(assert (= "4inano" (str.++ unch133C (str.++ var33C unch233C))))
(assert (= (str.len stem33) l33))
(assert (= (ite (= ch33A var33A) 0 1) sc33A))
(assert (= (ite (= ch33B var33B) 0 1) sc33B))
(assert (= (ite (= ch33C var33C) 0 1) sc33C))
(assert (= (ite (= ch33D var33D) 0 1) sc33D))
(assert (= (ite (= ch33E var33E) 0 1) sc33E))
(assert (= (ite (= ch33F var33F) 0 1) sc33F))
(assert (<= sc33A 1))
(assert (<= sc33B 1))
(assert (<= sc33C 1))
(assert (<= sc33D 1))
(assert (<= sc33E 1))
(assert (<= sc33F 1))
(assert (<= (str.len var34A) 1))
(assert (<= (str.len var34B) 1))
(assert (<= (str.len var34C) 1))
(assert (<= (str.len var34D) 1))
(assert (<= (str.len var34E) 1))
(assert (<= (str.len var34F) 1))
(assert (= (str.++ preA (str.++ stem34 sufA)) (str.++ unch134A (str.++ ch34A unch234A))))
(assert (= (str.++ preB (str.++ stem34 sufB)) (str.++ unch134B (str.++ ch34B unch234B))))
(assert (= (str.++ preC (str.++ stem34 sufC)) (str.++ unch134C (str.++ ch34C unch234C))))
(assert (= (str.++ preD (str.++ stem34 sufD)) (str.++ unch134D (str.++ ch34D unch234D))))
(assert (= (str.++ preE (str.++ stem34 sufE)) (str.++ unch134E (str.++ ch34E unch234E))))
(assert (= (str.++ preF (str.++ stem34 sufF)) (str.++ unch134F (str.++ ch34F unch234F))))
(assert (= "suOaj" (str.++ unch134D (str.++ var34D unch234D))))
(assert (= "sugtaj" (str.++ unch134E (str.++ var34E unch234E))))
(assert (= "sugnaj" (str.++ unch134F (str.++ var34F unch234F))))
(assert (= (str.len stem34) l34))
(assert (= (ite (= ch34A var34A) 0 1) sc34A))
(assert (= (ite (= ch34B var34B) 0 1) sc34B))
(assert (= (ite (= ch34C var34C) 0 1) sc34C))
(assert (= (ite (= ch34D var34D) 0 1) sc34D))
(assert (= (ite (= ch34E var34E) 0 1) sc34E))
(assert (= (ite (= ch34F var34F) 0 1) sc34F))
(assert (<= sc34A 1))
(assert (<= sc34B 1))
(assert (<= sc34C 1))
(assert (<= sc34D 1))
(assert (<= sc34E 1))
(assert (<= sc34F 1))
(assert (<= (str.len var35A) 1))
(assert (<= (str.len var35B) 1))
(assert (<= (str.len var35C) 1))
(assert (<= (str.len var35D) 1))
(assert (<= (str.len var35E) 1))
(assert (<= (str.len var35F) 1))
(assert (= (str.++ preA (str.++ stem35 sufA)) (str.++ unch135A (str.++ ch35A unch235A))))
(assert (= (str.++ preB (str.++ stem35 sufB)) (str.++ unch135B (str.++ ch35B unch235B))))
(assert (= (str.++ preC (str.++ stem35 sufC)) (str.++ unch135C (str.++ ch35C unch235C))))
(assert (= (str.++ preD (str.++ stem35 sufD)) (str.++ unch135D (str.++ ch35D unch235D))))
(assert (= (str.++ preE (str.++ stem35 sufE)) (str.++ unch135E (str.++ ch35E unch235E))))
(assert (= (str.++ preF (str.++ stem35 sufF)) (str.++ unch135F (str.++ ch35F unch235F))))
(assert (= "kaXaj" (str.++ unch135D (str.++ var35D unch235D))))
(assert (= "kabtaj" (str.++ unch135E (str.++ var35E unch235E))))
(assert (= "kabnaj" (str.++ unch135F (str.++ var35F unch235F))))
(assert (= (str.len stem35) l35))
(assert (= (ite (= ch35A var35A) 0 1) sc35A))
(assert (= (ite (= ch35B var35B) 0 1) sc35B))
(assert (= (ite (= ch35C var35C) 0 1) sc35C))
(assert (= (ite (= ch35D var35D) 0 1) sc35D))
(assert (= (ite (= ch35E var35E) 0 1) sc35E))
(assert (= (ite (= ch35F var35F) 0 1) sc35F))
(assert (<= sc35A 1))
(assert (<= sc35B 1))
(assert (<= sc35C 1))
(assert (<= sc35D 1))
(assert (<= sc35E 1))
(assert (<= sc35F 1))
(assert (<= (str.len var36A) 1))
(assert (<= (str.len var36B) 1))
(assert (<= (str.len var36C) 1))
(assert (<= (str.len var36D) 1))
(assert (<= (str.len var36E) 1))
(assert (<= (str.len var36F) 1))
(assert (= (str.++ preA (str.++ stem36 sufA)) (str.++ unch136A (str.++ ch36A unch236A))))
(assert (= (str.++ preB (str.++ stem36 sufB)) (str.++ unch136B (str.++ ch36B unch236B))))
(assert (= (str.++ preC (str.++ stem36 sufC)) (str.++ unch136C (str.++ ch36C unch236C))))
(assert (= (str.++ preD (str.++ stem36 sufD)) (str.++ unch136D (str.++ ch36D unch236D))))
(assert (= (str.++ preE (str.++ stem36 sufE)) (str.++ unch136E (str.++ ch36E unch236E))))
(assert (= (str.++ preF (str.++ stem36 sufF)) (str.++ unch136F (str.++ ch36F unch236F))))
(assert (= "siZaj" (str.++ unch136D (str.++ var36D unch236D))))
(assert (= "sidaj" (str.++ unch136E (str.++ var36E unch236E))))
(assert (= "sidnaj" (str.++ unch136F (str.++ var36F unch236F))))
(assert (= (str.len stem36) l36))
(assert (= (ite (= ch36A var36A) 0 1) sc36A))
(assert (= (ite (= ch36B var36B) 0 1) sc36B))
(assert (= (ite (= ch36C var36C) 0 1) sc36C))
(assert (= (ite (= ch36D var36D) 0 1) sc36D))
(assert (= (ite (= ch36E var36E) 0 1) sc36E))
(assert (= (ite (= ch36F var36F) 0 1) sc36F))
(assert (<= sc36A 1))
(assert (<= sc36B 1))
(assert (<= sc36C 1))
(assert (<= sc36D 1))
(assert (<= sc36E 1))
(assert (<= sc36F 1))
(assert (<= (str.len var37A) 1))
(assert (<= (str.len var37B) 1))
(assert (<= (str.len var37C) 1))
(assert (<= (str.len var37D) 1))
(assert (<= (str.len var37E) 1))
(assert (<= (str.len var37F) 1))
(assert (= (str.++ preA (str.++ stem37 sufA)) (str.++ unch137A (str.++ ch37A unch237A))))
(assert (= (str.++ preB (str.++ stem37 sufB)) (str.++ unch137B (str.++ ch37B unch237B))))
(assert (= (str.++ preC (str.++ stem37 sufC)) (str.++ unch137C (str.++ ch37C unch237C))))
(assert (= (str.++ preD (str.++ stem37 sufD)) (str.++ unch137D (str.++ ch37D unch237D))))
(assert (= (str.++ preE (str.++ stem37 sufE)) (str.++ unch137E (str.++ ch37E unch237E))))
(assert (= (str.++ preF (str.++ stem37 sufF)) (str.++ unch137F (str.++ ch37F unch237F))))
(assert (= "dilaj" (str.++ unch137D (str.++ var37D unch237D))))
(assert (= "diBaj" (str.++ unch137E (str.++ var37E unch237E))))
(assert (= "dillaj" (str.++ unch137F (str.++ var37F unch237F))))
(assert (= (str.len stem37) l37))
(assert (= (ite (= ch37A var37A) 0 1) sc37A))
(assert (= (ite (= ch37B var37B) 0 1) sc37B))
(assert (= (ite (= ch37C var37C) 0 1) sc37C))
(assert (= (ite (= ch37D var37D) 0 1) sc37D))
(assert (= (ite (= ch37E var37E) 0 1) sc37E))
(assert (= (ite (= ch37F var37F) 0 1) sc37F))
(assert (<= sc37A 1))
(assert (<= sc37B 1))
(assert (<= sc37C 1))
(assert (<= sc37D 1))
(assert (<= sc37E 1))
(assert (<= sc37F 1))
(assert (<= (str.len var38A) 1))
(assert (<= (str.len var38B) 1))
(assert (<= (str.len var38C) 1))
(assert (<= (str.len var38D) 1))
(assert (<= (str.len var38E) 1))
(assert (<= (str.len var38F) 1))
(assert (= (str.++ preA (str.++ stem38 sufA)) (str.++ unch138A (str.++ ch38A unch238A))))
(assert (= (str.++ preB (str.++ stem38 sufB)) (str.++ unch138B (str.++ ch38B unch238B))))
(assert (= (str.++ preC (str.++ stem38 sufC)) (str.++ unch138C (str.++ ch38C unch238C))))
(assert (= (str.++ preD (str.++ stem38 sufD)) (str.++ unch138D (str.++ ch38D unch238D))))
(assert (= (str.++ preE (str.++ stem38 sufE)) (str.++ unch138E (str.++ ch38E unch238E))))
(assert (= (str.++ preF (str.++ stem38 sufF)) (str.++ unch138F (str.++ ch38F unch238F))))
(assert (= "ganaj" (str.++ unch138D (str.++ var38D unch238D))))
(assert (= "gantaj" (str.++ unch138E (str.++ var38E unch238E))))
(assert (= "gannaj" (str.++ unch138F (str.++ var38F unch238F))))
(assert (= (str.len stem38) l38))
(assert (= (ite (= ch38A var38A) 0 1) sc38A))
(assert (= (ite (= ch38B var38B) 0 1) sc38B))
(assert (= (ite (= ch38C var38C) 0 1) sc38C))
(assert (= (ite (= ch38D var38D) 0 1) sc38D))
(assert (= (ite (= ch38E var38E) 0 1) sc38E))
(assert (= (ite (= ch38F var38F) 0 1) sc38F))
(assert (<= sc38A 1))
(assert (<= sc38B 1))
(assert (<= sc38C 1))
(assert (<= sc38D 1))
(assert (<= sc38E 1))
(assert (<= sc38F 1))
(assert (<= (str.len var39A) 1))
(assert (<= (str.len var39B) 1))
(assert (<= (str.len var39C) 1))
(assert (<= (str.len var39D) 1))
(assert (<= (str.len var39E) 1))
(assert (<= (str.len var39F) 1))
(assert (= (str.++ preA (str.++ stem39 sufA)) (str.++ unch139A (str.++ ch39A unch239A))))
(assert (= (str.++ preB (str.++ stem39 sufB)) (str.++ unch139B (str.++ ch39B unch239B))))
(assert (= (str.++ preC (str.++ stem39 sufC)) (str.++ unch139C (str.++ ch39C unch239C))))
(assert (= (str.++ preD (str.++ stem39 sufD)) (str.++ unch139D (str.++ ch39D unch239D))))
(assert (= (str.++ preE (str.++ stem39 sufE)) (str.++ unch139E (str.++ ch39E unch239E))))
(assert (= (str.++ preF (str.++ stem39 sufF)) (str.++ unch139F (str.++ ch39F unch239F))))
(assert (= "tumaj" (str.++ unch139D (str.++ var39D unch239D))))
(assert (= "tuntaj" (str.++ unch139E (str.++ var39E unch239E))))
(assert (= "tunnaj" (str.++ unch139F (str.++ var39F unch239F))))
(assert (= (str.len stem39) l39))
(assert (= (ite (= ch39A var39A) 0 1) sc39A))
(assert (= (ite (= ch39B var39B) 0 1) sc39B))
(assert (= (ite (= ch39C var39C) 0 1) sc39C))
(assert (= (ite (= ch39D var39D) 0 1) sc39D))
(assert (= (ite (= ch39E var39E) 0 1) sc39E))
(assert (= (ite (= ch39F var39F) 0 1) sc39F))
(assert (<= sc39A 1))
(assert (<= sc39B 1))
(assert (<= sc39C 1))
(assert (<= sc39D 1))
(assert (<= sc39E 1))
(assert (<= sc39F 1))
(assert (<= (str.len var40A) 1))
(assert (<= (str.len var40B) 1))
(assert (<= (str.len var40C) 1))
(assert (<= (str.len var40D) 1))
(assert (<= (str.len var40E) 1))
(assert (<= (str.len var40F) 1))
(assert (= (str.++ preA (str.++ stem40 sufA)) (str.++ unch140A (str.++ ch40A unch240A))))
(assert (= (str.++ preB (str.++ stem40 sufB)) (str.++ unch140B (str.++ ch40B unch240B))))
(assert (= (str.++ preC (str.++ stem40 sufC)) (str.++ unch140C (str.++ ch40C unch240C))))
(assert (= (str.++ preD (str.++ stem40 sufD)) (str.++ unch140D (str.++ ch40D unch240D))))
(assert (= (str.++ preE (str.++ stem40 sufE)) (str.++ unch140E (str.++ ch40E unch240E))))
(assert (= (str.++ preF (str.++ stem40 sufF)) (str.++ unch140F (str.++ ch40F unch240F))))
(assert (= "argaj" (str.++ unch140D (str.++ var40D unch240D))))
(assert (= "aragtaj" (str.++ unch140E (str.++ var40E unch240E))))
(assert (= "aragnaj" (str.++ unch140F (str.++ var40F unch240F))))
(assert (= (str.len stem40) l40))
(assert (= (ite (= ch40A var40A) 0 1) sc40A))
(assert (= (ite (= ch40B var40B) 0 1) sc40B))
(assert (= (ite (= ch40C var40C) 0 1) sc40C))
(assert (= (ite (= ch40D var40D) 0 1) sc40D))
(assert (= (ite (= ch40E var40E) 0 1) sc40E))
(assert (= (ite (= ch40F var40F) 0 1) sc40F))
(assert (<= sc40A 1))
(assert (<= sc40B 1))
(assert (<= sc40C 1))
(assert (<= sc40D 1))
(assert (<= sc40E 1))
(assert (<= sc40F 1))
(assert (<= (str.len var41A) 1))
(assert (<= (str.len var41B) 1))
(assert (<= (str.len var41C) 1))
(assert (<= (str.len var41D) 1))
(assert (<= (str.len var41E) 1))
(assert (<= (str.len var41F) 1))
(assert (= (str.++ preA (str.++ stem41 sufA)) (str.++ unch141A (str.++ ch41A unch241A))))
(assert (= (str.++ preB (str.++ stem41 sufB)) (str.++ unch141B (str.++ ch41B unch241B))))
(assert (= (str.++ preC (str.++ stem41 sufC)) (str.++ unch141C (str.++ ch41C unch241C))))
(assert (= (str.++ preD (str.++ stem41 sufD)) (str.++ unch141D (str.++ ch41D unch241D))))
(assert (= (str.++ preE (str.++ stem41 sufE)) (str.++ unch141E (str.++ ch41E unch241E))))
(assert (= (str.++ preF (str.++ stem41 sufF)) (str.++ unch141F (str.++ ch41F unch241F))))
(assert (= "gudbaj" (str.++ unch141D (str.++ var41D unch241D))))
(assert (= "guZubtaj" (str.++ unch141E (str.++ var41E unch241E))))
(assert (= "guZubnaj" (str.++ unch141F (str.++ var41F unch241F))))
(assert (= (str.len stem41) l41))
(assert (= (ite (= ch41A var41A) 0 1) sc41A))
(assert (= (ite (= ch41B var41B) 0 1) sc41B))
(assert (= (ite (= ch41C var41C) 0 1) sc41C))
(assert (= (ite (= ch41D var41D) 0 1) sc41D))
(assert (= (ite (= ch41E var41E) 0 1) sc41E))
(assert (= (ite (= ch41F var41F) 0 1) sc41F))
(assert (<= sc41A 1))
(assert (<= sc41B 1))
(assert (<= sc41C 1))
(assert (<= sc41D 1))
(assert (<= sc41E 1))
(assert (<= sc41F 1))
(assert (<= (str.len var42A) 1))
(assert (<= (str.len var42B) 1))
(assert (<= (str.len var42C) 1))
(assert (<= (str.len var42D) 1))
(assert (<= (str.len var42E) 1))
(assert (<= (str.len var42F) 1))
(assert (= (str.++ preA (str.++ stem42 sufA)) (str.++ unch142A (str.++ ch42A unch242A))))
(assert (= (str.++ preB (str.++ stem42 sufB)) (str.++ unch142B (str.++ ch42B unch242B))))
(assert (= (str.++ preC (str.++ stem42 sufC)) (str.++ unch142C (str.++ ch42C unch242C))))
(assert (= (str.++ preD (str.++ stem42 sufD)) (str.++ unch142D (str.++ ch42D unch242D))))
(assert (= (str.++ preE (str.++ stem42 sufE)) (str.++ unch142E (str.++ ch42E unch242E))))
(assert (= (str.++ preF (str.++ stem42 sufF)) (str.++ unch142F (str.++ ch42F unch242F))))
(assert (= "qoslaj" (str.++ unch142D (str.++ var42D unch242D))))
(assert (= "qosoBaj" (str.++ unch142E (str.++ var42E unch242E))))
(assert (= "qosollaj" (str.++ unch142F (str.++ var42F unch242F))))
(assert (= (str.len stem42) l42))
(assert (= (ite (= ch42A var42A) 0 1) sc42A))
(assert (= (ite (= ch42B var42B) 0 1) sc42B))
(assert (= (ite (= ch42C var42C) 0 1) sc42C))
(assert (= (ite (= ch42D var42D) 0 1) sc42D))
(assert (= (ite (= ch42E var42E) 0 1) sc42E))
(assert (= (ite (= ch42F var42F) 0 1) sc42F))
(assert (<= sc42A 1))
(assert (<= sc42B 1))
(assert (<= sc42C 1))
(assert (<= sc42D 1))
(assert (<= sc42E 1))
(assert (<= sc42F 1))
(assert (<= (str.len var43A) 1))
(assert (<= (str.len var43B) 1))
(assert (<= (str.len var43C) 1))
(assert (<= (str.len var43D) 1))
(assert (<= (str.len var43E) 1))
(assert (<= (str.len var43F) 1))
(assert (= (str.++ preA (str.++ stem43 sufA)) (str.++ unch143A (str.++ ch43A unch243A))))
(assert (= (str.++ preB (str.++ stem43 sufB)) (str.++ unch143B (str.++ ch43B unch243B))))
(assert (= (str.++ preC (str.++ stem43 sufC)) (str.++ unch143C (str.++ ch43C unch243C))))
(assert (= (str.++ preD (str.++ stem43 sufD)) (str.++ unch143D (str.++ ch43D unch243D))))
(assert (= (str.++ preE (str.++ stem43 sufE)) (str.++ unch143E (str.++ ch43E unch243E))))
(assert (= (str.++ preF (str.++ stem43 sufF)) (str.++ unch143F (str.++ ch43F unch243F))))
(assert (= "hadlaj" (str.++ unch143D (str.++ var43D unch243D))))
(assert (= "haZaBaj" (str.++ unch143E (str.++ var43E unch243E))))
(assert (= "haZallaj" (str.++ unch143F (str.++ var43F unch243F))))
(assert (= (str.len stem43) l43))
(assert (= (ite (= ch43A var43A) 0 1) sc43A))
(assert (= (ite (= ch43B var43B) 0 1) sc43B))
(assert (= (ite (= ch43C var43C) 0 1) sc43C))
(assert (= (ite (= ch43D var43D) 0 1) sc43D))
(assert (= (ite (= ch43E var43E) 0 1) sc43E))
(assert (= (ite (= ch43F var43F) 0 1) sc43F))
(assert (<= sc43A 1))
(assert (<= sc43B 1))
(assert (<= sc43C 1))
(assert (<= sc43D 1))
(assert (<= sc43E 1))
(assert (<= sc43F 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      0
      sc30A
      sc30B
      sc30C
      sc30D
      sc30E
      sc30F
      0
      sc31A
      sc31B
      sc31C
      sc31D
      sc31E
      sc31F
      0
      sc32A
      sc32B
      sc32C
      sc32D
      sc32E
      sc32F
      0
      sc33A
      sc33B
      sc33C
      sc33D
      sc33E
      sc33F
      0
      sc34A
      sc34B
      sc34C
      sc34D
      sc34E
      sc34F
      0
      sc35A
      sc35B
      sc35C
      sc35D
      sc35E
      sc35F
      0
      sc36A
      sc36B
      sc36C
      sc36D
      sc36E
      sc36F
      0
      sc37A
      sc37B
      sc37C
      sc37D
      sc37E
      sc37F
      0
      sc38A
      sc38B
      sc38C
      sc38D
      sc38E
      sc38F
      0
      sc39A
      sc39B
      sc39C
      sc39D
      sc39E
      sc39F
      0
      sc40A
      sc40B
      sc40C
      sc40D
      sc40E
      sc40F
      0
      sc41A
      sc41B
      sc41C
      sc41D
      sc41E
      sc41F
      0
      sc42A
      sc42B
      sc42C
      sc42D
      sc42E
      sc42F
      0
      sc43A
      sc43B
      sc43C
      sc43D
      sc43E
      sc43F)
   4))
(assert (= (+ 0
      sc0D
      sc1D
      sc2D
      sc3D
      sc4D
      sc5D
      sc6D
      sc7D
      sc8D
      sc9D
      sc10D
      sc11D
      sc12D
      sc13D
      sc14D
      sc15D
      sc16D
      sc17D
      sc18D
      sc19D
      sc20D
      sc21D
      sc22D
      sc23D
      sc24D
      sc25D
      sc26D
      sc27D
      sc28D
      sc29D
      sc30D
      sc31D
      sc32D
      sc33D
      sc34D
      sc35D
      sc36D
      sc37D
      sc38D
      sc39D
      sc40D
      sc41D
      sc42D
      sc43D)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun var30A () String)
(declare-fun var30B () String)
(declare-fun var30C () String)
(declare-fun var30D () String)
(declare-fun var30E () String)
(declare-fun var30F () String)
(declare-fun unch230A () String)
(declare-fun ch30A () String)
(declare-fun unch130A () String)
(declare-fun stem30 () String)
(declare-fun unch230B () String)
(declare-fun ch30B () String)
(declare-fun unch130B () String)
(declare-fun unch230C () String)
(declare-fun ch30C () String)
(declare-fun unch130C () String)
(declare-fun unch230D () String)
(declare-fun ch30D () String)
(declare-fun unch130D () String)
(declare-fun unch230E () String)
(declare-fun ch30E () String)
(declare-fun unch130E () String)
(declare-fun unch230F () String)
(declare-fun ch30F () String)
(declare-fun unch130F () String)
(declare-fun l30 () Int)
(declare-fun sc30A () Int)
(declare-fun sc30B () Int)
(declare-fun sc30C () Int)
(declare-fun sc30D () Int)
(declare-fun sc30E () Int)
(declare-fun sc30F () Int)
(declare-fun var31A () String)
(declare-fun var31B () String)
(declare-fun var31C () String)
(declare-fun var31D () String)
(declare-fun var31E () String)
(declare-fun var31F () String)
(declare-fun unch231A () String)
(declare-fun ch31A () String)
(declare-fun unch131A () String)
(declare-fun stem31 () String)
(declare-fun unch231B () String)
(declare-fun ch31B () String)
(declare-fun unch131B () String)
(declare-fun unch231C () String)
(declare-fun ch31C () String)
(declare-fun unch131C () String)
(declare-fun unch231D () String)
(declare-fun ch31D () String)
(declare-fun unch131D () String)
(declare-fun unch231E () String)
(declare-fun ch31E () String)
(declare-fun unch131E () String)
(declare-fun unch231F () String)
(declare-fun ch31F () String)
(declare-fun unch131F () String)
(declare-fun l31 () Int)
(declare-fun sc31A () Int)
(declare-fun sc31B () Int)
(declare-fun sc31C () Int)
(declare-fun sc31D () Int)
(declare-fun sc31E () Int)
(declare-fun sc31F () Int)
(declare-fun var32A () String)
(declare-fun var32B () String)
(declare-fun var32C () String)
(declare-fun var32D () String)
(declare-fun var32E () String)
(declare-fun var32F () String)
(declare-fun unch232A () String)
(declare-fun ch32A () String)
(declare-fun unch132A () String)
(declare-fun stem32 () String)
(declare-fun unch232B () String)
(declare-fun ch32B () String)
(declare-fun unch132B () String)
(declare-fun unch232C () String)
(declare-fun ch32C () String)
(declare-fun unch132C () String)
(declare-fun unch232D () String)
(declare-fun ch32D () String)
(declare-fun unch132D () String)
(declare-fun unch232E () String)
(declare-fun ch32E () String)
(declare-fun unch132E () String)
(declare-fun unch232F () String)
(declare-fun ch32F () String)
(declare-fun unch132F () String)
(declare-fun l32 () Int)
(declare-fun sc32A () Int)
(declare-fun sc32B () Int)
(declare-fun sc32C () Int)
(declare-fun sc32D () Int)
(declare-fun sc32E () Int)
(declare-fun sc32F () Int)
(declare-fun var33A () String)
(declare-fun var33B () String)
(declare-fun var33C () String)
(declare-fun var33D () String)
(declare-fun var33E () String)
(declare-fun var33F () String)
(declare-fun unch233A () String)
(declare-fun ch33A () String)
(declare-fun unch133A () String)
(declare-fun stem33 () String)
(declare-fun unch233B () String)
(declare-fun ch33B () String)
(declare-fun unch133B () String)
(declare-fun unch233C () String)
(declare-fun ch33C () String)
(declare-fun unch133C () String)
(declare-fun unch233D () String)
(declare-fun ch33D () String)
(declare-fun unch133D () String)
(declare-fun unch233E () String)
(declare-fun ch33E () String)
(declare-fun unch133E () String)
(declare-fun unch233F () String)
(declare-fun ch33F () String)
(declare-fun unch133F () String)
(declare-fun l33 () Int)
(declare-fun sc33A () Int)
(declare-fun sc33B () Int)
(declare-fun sc33C () Int)
(declare-fun sc33D () Int)
(declare-fun sc33E () Int)
(declare-fun sc33F () Int)
(declare-fun var34A () String)
(declare-fun var34B () String)
(declare-fun var34C () String)
(declare-fun var34D () String)
(declare-fun var34E () String)
(declare-fun var34F () String)
(declare-fun unch234A () String)
(declare-fun ch34A () String)
(declare-fun unch134A () String)
(declare-fun stem34 () String)
(declare-fun unch234B () String)
(declare-fun ch34B () String)
(declare-fun unch134B () String)
(declare-fun unch234C () String)
(declare-fun ch34C () String)
(declare-fun unch134C () String)
(declare-fun unch234D () String)
(declare-fun ch34D () String)
(declare-fun unch134D () String)
(declare-fun unch234E () String)
(declare-fun ch34E () String)
(declare-fun unch134E () String)
(declare-fun unch234F () String)
(declare-fun ch34F () String)
(declare-fun unch134F () String)
(declare-fun l34 () Int)
(declare-fun sc34A () Int)
(declare-fun sc34B () Int)
(declare-fun sc34C () Int)
(declare-fun sc34D () Int)
(declare-fun sc34E () Int)
(declare-fun sc34F () Int)
(declare-fun var35A () String)
(declare-fun var35B () String)
(declare-fun var35C () String)
(declare-fun var35D () String)
(declare-fun var35E () String)
(declare-fun var35F () String)
(declare-fun unch235A () String)
(declare-fun ch35A () String)
(declare-fun unch135A () String)
(declare-fun stem35 () String)
(declare-fun unch235B () String)
(declare-fun ch35B () String)
(declare-fun unch135B () String)
(declare-fun unch235C () String)
(declare-fun ch35C () String)
(declare-fun unch135C () String)
(declare-fun unch235D () String)
(declare-fun ch35D () String)
(declare-fun unch135D () String)
(declare-fun unch235E () String)
(declare-fun ch35E () String)
(declare-fun unch135E () String)
(declare-fun unch235F () String)
(declare-fun ch35F () String)
(declare-fun unch135F () String)
(declare-fun l35 () Int)
(declare-fun sc35A () Int)
(declare-fun sc35B () Int)
(declare-fun sc35C () Int)
(declare-fun sc35D () Int)
(declare-fun sc35E () Int)
(declare-fun sc35F () Int)
(declare-fun var36A () String)
(declare-fun var36B () String)
(declare-fun var36C () String)
(declare-fun var36D () String)
(declare-fun var36E () String)
(declare-fun var36F () String)
(declare-fun unch236A () String)
(declare-fun ch36A () String)
(declare-fun unch136A () String)
(declare-fun stem36 () String)
(declare-fun unch236B () String)
(declare-fun ch36B () String)
(declare-fun unch136B () String)
(declare-fun unch236C () String)
(declare-fun ch36C () String)
(declare-fun unch136C () String)
(declare-fun unch236D () String)
(declare-fun ch36D () String)
(declare-fun unch136D () String)
(declare-fun unch236E () String)
(declare-fun ch36E () String)
(declare-fun unch136E () String)
(declare-fun unch236F () String)
(declare-fun ch36F () String)
(declare-fun unch136F () String)
(declare-fun l36 () Int)
(declare-fun sc36A () Int)
(declare-fun sc36B () Int)
(declare-fun sc36C () Int)
(declare-fun sc36D () Int)
(declare-fun sc36E () Int)
(declare-fun sc36F () Int)
(declare-fun var37A () String)
(declare-fun var37B () String)
(declare-fun var37C () String)
(declare-fun var37D () String)
(declare-fun var37E () String)
(declare-fun var37F () String)
(declare-fun unch237A () String)
(declare-fun ch37A () String)
(declare-fun unch137A () String)
(declare-fun stem37 () String)
(declare-fun unch237B () String)
(declare-fun ch37B () String)
(declare-fun unch137B () String)
(declare-fun unch237C () String)
(declare-fun ch37C () String)
(declare-fun unch137C () String)
(declare-fun unch237D () String)
(declare-fun ch37D () String)
(declare-fun unch137D () String)
(declare-fun unch237E () String)
(declare-fun ch37E () String)
(declare-fun unch137E () String)
(declare-fun unch237F () String)
(declare-fun ch37F () String)
(declare-fun unch137F () String)
(declare-fun l37 () Int)
(declare-fun sc37A () Int)
(declare-fun sc37B () Int)
(declare-fun sc37C () Int)
(declare-fun sc37D () Int)
(declare-fun sc37E () Int)
(declare-fun sc37F () Int)
(declare-fun var38A () String)
(declare-fun var38B () String)
(declare-fun var38C () String)
(declare-fun var38D () String)
(declare-fun var38E () String)
(declare-fun var38F () String)
(declare-fun unch238A () String)
(declare-fun ch38A () String)
(declare-fun unch138A () String)
(declare-fun stem38 () String)
(declare-fun unch238B () String)
(declare-fun ch38B () String)
(declare-fun unch138B () String)
(declare-fun unch238C () String)
(declare-fun ch38C () String)
(declare-fun unch138C () String)
(declare-fun unch238D () String)
(declare-fun ch38D () String)
(declare-fun unch138D () String)
(declare-fun unch238E () String)
(declare-fun ch38E () String)
(declare-fun unch138E () String)
(declare-fun unch238F () String)
(declare-fun ch38F () String)
(declare-fun unch138F () String)
(declare-fun l38 () Int)
(declare-fun sc38A () Int)
(declare-fun sc38B () Int)
(declare-fun sc38C () Int)
(declare-fun sc38D () Int)
(declare-fun sc38E () Int)
(declare-fun sc38F () Int)
(declare-fun var39A () String)
(declare-fun var39B () String)
(declare-fun var39C () String)
(declare-fun var39D () String)
(declare-fun var39E () String)
(declare-fun var39F () String)
(declare-fun unch239A () String)
(declare-fun ch39A () String)
(declare-fun unch139A () String)
(declare-fun stem39 () String)
(declare-fun unch239B () String)
(declare-fun ch39B () String)
(declare-fun unch139B () String)
(declare-fun unch239C () String)
(declare-fun ch39C () String)
(declare-fun unch139C () String)
(declare-fun unch239D () String)
(declare-fun ch39D () String)
(declare-fun unch139D () String)
(declare-fun unch239E () String)
(declare-fun ch39E () String)
(declare-fun unch139E () String)
(declare-fun unch239F () String)
(declare-fun ch39F () String)
(declare-fun unch139F () String)
(declare-fun l39 () Int)
(declare-fun sc39A () Int)
(declare-fun sc39B () Int)
(declare-fun sc39C () Int)
(declare-fun sc39D () Int)
(declare-fun sc39E () Int)
(declare-fun sc39F () Int)
(declare-fun var40A () String)
(declare-fun var40B () String)
(declare-fun var40C () String)
(declare-fun var40D () String)
(declare-fun var40E () String)
(declare-fun var40F () String)
(declare-fun unch240A () String)
(declare-fun ch40A () String)
(declare-fun unch140A () String)
(declare-fun stem40 () String)
(declare-fun unch240B () String)
(declare-fun ch40B () String)
(declare-fun unch140B () String)
(declare-fun unch240C () String)
(declare-fun ch40C () String)
(declare-fun unch140C () String)
(declare-fun unch240D () String)
(declare-fun ch40D () String)
(declare-fun unch140D () String)
(declare-fun unch240E () String)
(declare-fun ch40E () String)
(declare-fun unch140E () String)
(declare-fun unch240F () String)
(declare-fun ch40F () String)
(declare-fun unch140F () String)
(declare-fun l40 () Int)
(declare-fun sc40A () Int)
(declare-fun sc40B () Int)
(declare-fun sc40C () Int)
(declare-fun sc40D () Int)
(declare-fun sc40E () Int)
(declare-fun sc40F () Int)
(declare-fun var41A () String)
(declare-fun var41B () String)
(declare-fun var41C () String)
(declare-fun var41D () String)
(declare-fun var41E () String)
(declare-fun var41F () String)
(declare-fun unch241A () String)
(declare-fun ch41A () String)
(declare-fun unch141A () String)
(declare-fun stem41 () String)
(declare-fun unch241B () String)
(declare-fun ch41B () String)
(declare-fun unch141B () String)
(declare-fun unch241C () String)
(declare-fun ch41C () String)
(declare-fun unch141C () String)
(declare-fun unch241D () String)
(declare-fun ch41D () String)
(declare-fun unch141D () String)
(declare-fun unch241E () String)
(declare-fun ch41E () String)
(declare-fun unch141E () String)
(declare-fun unch241F () String)
(declare-fun ch41F () String)
(declare-fun unch141F () String)
(declare-fun l41 () Int)
(declare-fun sc41A () Int)
(declare-fun sc41B () Int)
(declare-fun sc41C () Int)
(declare-fun sc41D () Int)
(declare-fun sc41E () Int)
(declare-fun sc41F () Int)
(declare-fun var42A () String)
(declare-fun var42B () String)
(declare-fun var42C () String)
(declare-fun var42D () String)
(declare-fun var42E () String)
(declare-fun var42F () String)
(declare-fun unch242A () String)
(declare-fun ch42A () String)
(declare-fun unch142A () String)
(declare-fun stem42 () String)
(declare-fun unch242B () String)
(declare-fun ch42B () String)
(declare-fun unch142B () String)
(declare-fun unch242C () String)
(declare-fun ch42C () String)
(declare-fun unch142C () String)
(declare-fun unch242D () String)
(declare-fun ch42D () String)
(declare-fun unch142D () String)
(declare-fun unch242E () String)
(declare-fun ch42E () String)
(declare-fun unch142E () String)
(declare-fun unch242F () String)
(declare-fun ch42F () String)
(declare-fun unch142F () String)
(declare-fun l42 () Int)
(declare-fun sc42A () Int)
(declare-fun sc42B () Int)
(declare-fun sc42C () Int)
(declare-fun sc42D () Int)
(declare-fun sc42E () Int)
(declare-fun sc42F () Int)
(declare-fun var43A () String)
(declare-fun var43B () String)
(declare-fun var43C () String)
(declare-fun var43D () String)
(declare-fun var43E () String)
(declare-fun var43F () String)
(declare-fun unch243A () String)
(declare-fun ch43A () String)
(declare-fun unch143A () String)
(declare-fun stem43 () String)
(declare-fun unch243B () String)
(declare-fun ch43B () String)
(declare-fun unch143B () String)
(declare-fun unch243C () String)
(declare-fun ch43C () String)
(declare-fun unch143C () String)
(declare-fun unch243D () String)
(declare-fun ch43D () String)
(declare-fun unch143D () String)
(declare-fun unch243E () String)
(declare-fun ch43E () String)
(declare-fun unch143E () String)
(declare-fun unch243F () String)
(declare-fun ch43F () String)
(declare-fun unch143F () String)
(declare-fun l43 () Int)
(declare-fun sc43A () Int)
(declare-fun sc43B () Int)
(declare-fun sc43C () Int)
(declare-fun sc43D () Int)
(declare-fun sc43E () Int)
(declare-fun sc43F () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= "daar" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "daarta" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "daaro" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= "gees" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "geesta" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "geeso" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= "laf" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "lafta" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "lafo" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= "lug" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "lugta" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "luOo" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= "naag" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "naagta" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "naaOo" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= "tib" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "tibta" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "tiXo" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= "sab" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "sabta" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "saXo" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= "bad" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "bada" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "baZo" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= "Bid" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "Bida" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "BiZo" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= "fee1" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "fee1a" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "fee2o" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= "3iir" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "3iirta" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "3iiro" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= "4ul" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "4uBa" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "4ulo" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= "bil" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "biBa" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "bilo" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= "meel" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "meeBa" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "meelo" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= "kaliil" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "kaliiBa" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "kaliilo" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= "najl" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "najBa" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "najlo" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= "sun" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "sunta" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "sumo" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= "laan" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "laanta" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "laamo" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= "sin" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "sinta" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "simo" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= "dan" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "danta" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "dano" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= "daan" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "daanta" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "daano" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= "saan" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "saanta" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "saano" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= "nirig" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "nirigta" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "nirgo" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= "gaXa1" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= "gaXa1a" (str.++ unch123B (str.++ var23B unch223B))))
(assert (= "gab1o" (str.++ unch123C (str.++ var23C unch223C))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= "hoOol" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= "hoOoBa" (str.++ unch124B (str.++ var24B unch224B))))
(assert (= "hoglo" (str.++ unch124C (str.++ var24C unch224C))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= "baOal" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= "baOaBa" (str.++ unch125B (str.++ var25B unch225B))))
(assert (= "baglo" (str.++ unch125C (str.++ var25C unch225C))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= "wa5ar" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= "wa5arta" (str.++ unch126B (str.++ var26B unch226B))))
(assert (= "wa5aro" (str.++ unch126C (str.++ var26C unch226C))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= "irbad" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= "irbada" (str.++ unch127B (str.++ var27B unch227B))))
(assert (= "irbaZo" (str.++ unch127C (str.++ var27C unch227C))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= "kefed" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= "kefeda" (str.++ unch128B (str.++ var28B unch228B))))
(assert (= "kefeZo" (str.++ unch128C (str.++ var28C unch228C))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= "Bilin" (str.++ unch129A (str.++ var29A unch229A))))
(assert (= "Bilinta" (str.++ unch129B (str.++ var29B unch229B))))
(assert (= "Bilino" (str.++ unch129C (str.++ var29C unch229C))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= (str.len var30A) 1))
(assert (<= (str.len var30B) 1))
(assert (<= (str.len var30C) 1))
(assert (<= (str.len var30D) 1))
(assert (<= (str.len var30E) 1))
(assert (<= (str.len var30F) 1))
(assert (= (str.++ preA (str.++ stem30 sufA)) (str.++ unch130A (str.++ ch30A unch230A))))
(assert (= (str.++ preB (str.++ stem30 sufB)) (str.++ unch130B (str.++ ch30B unch230B))))
(assert (= (str.++ preC (str.++ stem30 sufC)) (str.++ unch130C (str.++ ch30C unch230C))))
(assert (= (str.++ preD (str.++ stem30 sufD)) (str.++ unch130D (str.++ ch30D unch230D))))
(assert (= (str.++ preE (str.++ stem30 sufE)) (str.++ unch130E (str.++ ch30E unch230E))))
(assert (= (str.++ preF (str.++ stem30 sufF)) (str.++ unch130F (str.++ ch30F unch230F))))
(assert (= "bohol" (str.++ unch130A (str.++ var30A unch230A))))
(assert (= "bohoBa" (str.++ unch130B (str.++ var30B unch230B))))
(assert (= "boholo" (str.++ unch130C (str.++ var30C unch230C))))
(assert (= (str.len stem30) l30))
(assert (= (ite (= ch30A var30A) 0 1) sc30A))
(assert (= (ite (= ch30B var30B) 0 1) sc30B))
(assert (= (ite (= ch30C var30C) 0 1) sc30C))
(assert (= (ite (= ch30D var30D) 0 1) sc30D))
(assert (= (ite (= ch30E var30E) 0 1) sc30E))
(assert (= (ite (= ch30F var30F) 0 1) sc30F))
(assert (<= sc30A 1))
(assert (<= sc30B 1))
(assert (<= sc30C 1))
(assert (<= sc30D 1))
(assert (<= sc30E 1))
(assert (<= sc30F 1))
(assert (<= (str.len var31A) 1))
(assert (<= (str.len var31B) 1))
(assert (<= (str.len var31C) 1))
(assert (<= (str.len var31D) 1))
(assert (<= (str.len var31E) 1))
(assert (<= (str.len var31F) 1))
(assert (= (str.++ preA (str.++ stem31 sufA)) (str.++ unch131A (str.++ ch31A unch231A))))
(assert (= (str.++ preB (str.++ stem31 sufB)) (str.++ unch131B (str.++ ch31B unch231B))))
(assert (= (str.++ preC (str.++ stem31 sufC)) (str.++ unch131C (str.++ ch31C unch231C))))
(assert (= (str.++ preD (str.++ stem31 sufD)) (str.++ unch131D (str.++ ch31D unch231D))))
(assert (= (str.++ preE (str.++ stem31 sufE)) (str.++ unch131E (str.++ ch31E unch231E))))
(assert (= (str.++ preF (str.++ stem31 sufF)) (str.++ unch131F (str.++ ch31F unch231F))))
(assert (= "4aajad" (str.++ unch131A (str.++ var31A unch231A))))
(assert (= "4aajada" (str.++ unch131B (str.++ var31B unch231B))))
(assert (= "4aajaZo" (str.++ unch131C (str.++ var31C unch231C))))
(assert (= (str.len stem31) l31))
(assert (= (ite (= ch31A var31A) 0 1) sc31A))
(assert (= (ite (= ch31B var31B) 0 1) sc31B))
(assert (= (ite (= ch31C var31C) 0 1) sc31C))
(assert (= (ite (= ch31D var31D) 0 1) sc31D))
(assert (= (ite (= ch31E var31E) 0 1) sc31E))
(assert (= (ite (= ch31F var31F) 0 1) sc31F))
(assert (<= sc31A 1))
(assert (<= sc31B 1))
(assert (<= sc31C 1))
(assert (<= sc31D 1))
(assert (<= sc31E 1))
(assert (<= sc31F 1))
(assert (<= (str.len var32A) 1))
(assert (<= (str.len var32B) 1))
(assert (<= (str.len var32C) 1))
(assert (<= (str.len var32D) 1))
(assert (<= (str.len var32E) 1))
(assert (<= (str.len var32F) 1))
(assert (= (str.++ preA (str.++ stem32 sufA)) (str.++ unch132A (str.++ ch32A unch232A))))
(assert (= (str.++ preB (str.++ stem32 sufB)) (str.++ unch132B (str.++ ch32B unch232B))))
(assert (= (str.++ preC (str.++ stem32 sufC)) (str.++ unch132C (str.++ ch32C unch232C))))
(assert (= (str.++ preD (str.++ stem32 sufD)) (str.++ unch132D (str.++ ch32D unch232D))))
(assert (= (str.++ preE (str.++ stem32 sufE)) (str.++ unch132E (str.++ ch32E unch232E))))
(assert (= (str.++ preF (str.++ stem32 sufF)) (str.++ unch132F (str.++ ch32F unch232F))))
(assert (= "ga3an" (str.++ unch132A (str.++ var32A unch232A))))
(assert (= "ga3anta" (str.++ unch132B (str.++ var32B unch232B))))
(assert (= "ga3mo" (str.++ unch132C (str.++ var32C unch232C))))
(assert (= (str.len stem32) l32))
(assert (= (ite (= ch32A var32A) 0 1) sc32A))
(assert (= (ite (= ch32B var32B) 0 1) sc32B))
(assert (= (ite (= ch32C var32C) 0 1) sc32C))
(assert (= (ite (= ch32D var32D) 0 1) sc32D))
(assert (= (ite (= ch32E var32E) 0 1) sc32E))
(assert (= (ite (= ch32F var32F) 0 1) sc32F))
(assert (<= sc32A 1))
(assert (<= sc32B 1))
(assert (<= sc32C 1))
(assert (<= sc32D 1))
(assert (<= sc32E 1))
(assert (<= sc32F 1))
(assert (<= (str.len var33A) 1))
(assert (<= (str.len var33B) 1))
(assert (<= (str.len var33C) 1))
(assert (<= (str.len var33D) 1))
(assert (<= (str.len var33E) 1))
(assert (<= (str.len var33F) 1))
(assert (= (str.++ preA (str.++ stem33 sufA)) (str.++ unch133A (str.++ ch33A unch233A))))
(assert (= (str.++ preB (str.++ stem33 sufB)) (str.++ unch133B (str.++ ch33B unch233B))))
(assert (= (str.++ preC (str.++ stem33 sufC)) (str.++ unch133C (str.++ ch33C unch233C))))
(assert (= (str.++ preD (str.++ stem33 sufD)) (str.++ unch133D (str.++ ch33D unch233D))))
(assert (= (str.++ preE (str.++ stem33 sufE)) (str.++ unch133E (str.++ ch33E unch233E))))
(assert (= (str.++ preF (str.++ stem33 sufF)) (str.++ unch133F (str.++ ch33F unch233F))))
(assert (= "4inan" (str.++ unch133A (str.++ var33A unch233A))))
(assert (= "4inanta" (str.++ unch133B (str.++ var33B unch233B))))
(assert (= "4inano" (str.++ unch133C (str.++ var33C unch233C))))
(assert (= (str.len stem33) l33))
(assert (= (ite (= ch33A var33A) 0 1) sc33A))
(assert (= (ite (= ch33B var33B) 0 1) sc33B))
(assert (= (ite (= ch33C var33C) 0 1) sc33C))
(assert (= (ite (= ch33D var33D) 0 1) sc33D))
(assert (= (ite (= ch33E var33E) 0 1) sc33E))
(assert (= (ite (= ch33F var33F) 0 1) sc33F))
(assert (<= sc33A 1))
(assert (<= sc33B 1))
(assert (<= sc33C 1))
(assert (<= sc33D 1))
(assert (<= sc33E 1))
(assert (<= sc33F 1))
(assert (<= (str.len var34A) 1))
(assert (<= (str.len var34B) 1))
(assert (<= (str.len var34C) 1))
(assert (<= (str.len var34D) 1))
(assert (<= (str.len var34E) 1))
(assert (<= (str.len var34F) 1))
(assert (= (str.++ preA (str.++ stem34 sufA)) (str.++ unch134A (str.++ ch34A unch234A))))
(assert (= (str.++ preB (str.++ stem34 sufB)) (str.++ unch134B (str.++ ch34B unch234B))))
(assert (= (str.++ preC (str.++ stem34 sufC)) (str.++ unch134C (str.++ ch34C unch234C))))
(assert (= (str.++ preD (str.++ stem34 sufD)) (str.++ unch134D (str.++ ch34D unch234D))))
(assert (= (str.++ preE (str.++ stem34 sufE)) (str.++ unch134E (str.++ ch34E unch234E))))
(assert (= (str.++ preF (str.++ stem34 sufF)) (str.++ unch134F (str.++ ch34F unch234F))))
(assert (= "suOaj" (str.++ unch134D (str.++ var34D unch234D))))
(assert (= "sugtaj" (str.++ unch134E (str.++ var34E unch234E))))
(assert (= "sugnaj" (str.++ unch134F (str.++ var34F unch234F))))
(assert (= (str.len stem34) l34))
(assert (= (ite (= ch34A var34A) 0 1) sc34A))
(assert (= (ite (= ch34B var34B) 0 1) sc34B))
(assert (= (ite (= ch34C var34C) 0 1) sc34C))
(assert (= (ite (= ch34D var34D) 0 1) sc34D))
(assert (= (ite (= ch34E var34E) 0 1) sc34E))
(assert (= (ite (= ch34F var34F) 0 1) sc34F))
(assert (<= sc34A 1))
(assert (<= sc34B 1))
(assert (<= sc34C 1))
(assert (<= sc34D 1))
(assert (<= sc34E 1))
(assert (<= sc34F 1))
(assert (<= (str.len var35A) 1))
(assert (<= (str.len var35B) 1))
(assert (<= (str.len var35C) 1))
(assert (<= (str.len var35D) 1))
(assert (<= (str.len var35E) 1))
(assert (<= (str.len var35F) 1))
(assert (= (str.++ preA (str.++ stem35 sufA)) (str.++ unch135A (str.++ ch35A unch235A))))
(assert (= (str.++ preB (str.++ stem35 sufB)) (str.++ unch135B (str.++ ch35B unch235B))))
(assert (= (str.++ preC (str.++ stem35 sufC)) (str.++ unch135C (str.++ ch35C unch235C))))
(assert (= (str.++ preD (str.++ stem35 sufD)) (str.++ unch135D (str.++ ch35D unch235D))))
(assert (= (str.++ preE (str.++ stem35 sufE)) (str.++ unch135E (str.++ ch35E unch235E))))
(assert (= (str.++ preF (str.++ stem35 sufF)) (str.++ unch135F (str.++ ch35F unch235F))))
(assert (= "kaXaj" (str.++ unch135D (str.++ var35D unch235D))))
(assert (= "kabtaj" (str.++ unch135E (str.++ var35E unch235E))))
(assert (= "kabnaj" (str.++ unch135F (str.++ var35F unch235F))))
(assert (= (str.len stem35) l35))
(assert (= (ite (= ch35A var35A) 0 1) sc35A))
(assert (= (ite (= ch35B var35B) 0 1) sc35B))
(assert (= (ite (= ch35C var35C) 0 1) sc35C))
(assert (= (ite (= ch35D var35D) 0 1) sc35D))
(assert (= (ite (= ch35E var35E) 0 1) sc35E))
(assert (= (ite (= ch35F var35F) 0 1) sc35F))
(assert (<= sc35A 1))
(assert (<= sc35B 1))
(assert (<= sc35C 1))
(assert (<= sc35D 1))
(assert (<= sc35E 1))
(assert (<= sc35F 1))
(assert (<= (str.len var36A) 1))
(assert (<= (str.len var36B) 1))
(assert (<= (str.len var36C) 1))
(assert (<= (str.len var36D) 1))
(assert (<= (str.len var36E) 1))
(assert (<= (str.len var36F) 1))
(assert (= (str.++ preA (str.++ stem36 sufA)) (str.++ unch136A (str.++ ch36A unch236A))))
(assert (= (str.++ preB (str.++ stem36 sufB)) (str.++ unch136B (str.++ ch36B unch236B))))
(assert (= (str.++ preC (str.++ stem36 sufC)) (str.++ unch136C (str.++ ch36C unch236C))))
(assert (= (str.++ preD (str.++ stem36 sufD)) (str.++ unch136D (str.++ ch36D unch236D))))
(assert (= (str.++ preE (str.++ stem36 sufE)) (str.++ unch136E (str.++ ch36E unch236E))))
(assert (= (str.++ preF (str.++ stem36 sufF)) (str.++ unch136F (str.++ ch36F unch236F))))
(assert (= "siZaj" (str.++ unch136D (str.++ var36D unch236D))))
(assert (= "sidaj" (str.++ unch136E (str.++ var36E unch236E))))
(assert (= "sidnaj" (str.++ unch136F (str.++ var36F unch236F))))
(assert (= (str.len stem36) l36))
(assert (= (ite (= ch36A var36A) 0 1) sc36A))
(assert (= (ite (= ch36B var36B) 0 1) sc36B))
(assert (= (ite (= ch36C var36C) 0 1) sc36C))
(assert (= (ite (= ch36D var36D) 0 1) sc36D))
(assert (= (ite (= ch36E var36E) 0 1) sc36E))
(assert (= (ite (= ch36F var36F) 0 1) sc36F))
(assert (<= sc36A 1))
(assert (<= sc36B 1))
(assert (<= sc36C 1))
(assert (<= sc36D 1))
(assert (<= sc36E 1))
(assert (<= sc36F 1))
(assert (<= (str.len var37A) 1))
(assert (<= (str.len var37B) 1))
(assert (<= (str.len var37C) 1))
(assert (<= (str.len var37D) 1))
(assert (<= (str.len var37E) 1))
(assert (<= (str.len var37F) 1))
(assert (= (str.++ preA (str.++ stem37 sufA)) (str.++ unch137A (str.++ ch37A unch237A))))
(assert (= (str.++ preB (str.++ stem37 sufB)) (str.++ unch137B (str.++ ch37B unch237B))))
(assert (= (str.++ preC (str.++ stem37 sufC)) (str.++ unch137C (str.++ ch37C unch237C))))
(assert (= (str.++ preD (str.++ stem37 sufD)) (str.++ unch137D (str.++ ch37D unch237D))))
(assert (= (str.++ preE (str.++ stem37 sufE)) (str.++ unch137E (str.++ ch37E unch237E))))
(assert (= (str.++ preF (str.++ stem37 sufF)) (str.++ unch137F (str.++ ch37F unch237F))))
(assert (= "dilaj" (str.++ unch137D (str.++ var37D unch237D))))
(assert (= "diBaj" (str.++ unch137E (str.++ var37E unch237E))))
(assert (= "dillaj" (str.++ unch137F (str.++ var37F unch237F))))
(assert (= (str.len stem37) l37))
(assert (= (ite (= ch37A var37A) 0 1) sc37A))
(assert (= (ite (= ch37B var37B) 0 1) sc37B))
(assert (= (ite (= ch37C var37C) 0 1) sc37C))
(assert (= (ite (= ch37D var37D) 0 1) sc37D))
(assert (= (ite (= ch37E var37E) 0 1) sc37E))
(assert (= (ite (= ch37F var37F) 0 1) sc37F))
(assert (<= sc37A 1))
(assert (<= sc37B 1))
(assert (<= sc37C 1))
(assert (<= sc37D 1))
(assert (<= sc37E 1))
(assert (<= sc37F 1))
(assert (<= (str.len var38A) 1))
(assert (<= (str.len var38B) 1))
(assert (<= (str.len var38C) 1))
(assert (<= (str.len var38D) 1))
(assert (<= (str.len var38E) 1))
(assert (<= (str.len var38F) 1))
(assert (= (str.++ preA (str.++ stem38 sufA)) (str.++ unch138A (str.++ ch38A unch238A))))
(assert (= (str.++ preB (str.++ stem38 sufB)) (str.++ unch138B (str.++ ch38B unch238B))))
(assert (= (str.++ preC (str.++ stem38 sufC)) (str.++ unch138C (str.++ ch38C unch238C))))
(assert (= (str.++ preD (str.++ stem38 sufD)) (str.++ unch138D (str.++ ch38D unch238D))))
(assert (= (str.++ preE (str.++ stem38 sufE)) (str.++ unch138E (str.++ ch38E unch238E))))
(assert (= (str.++ preF (str.++ stem38 sufF)) (str.++ unch138F (str.++ ch38F unch238F))))
(assert (= "ganaj" (str.++ unch138D (str.++ var38D unch238D))))
(assert (= "gantaj" (str.++ unch138E (str.++ var38E unch238E))))
(assert (= "gannaj" (str.++ unch138F (str.++ var38F unch238F))))
(assert (= (str.len stem38) l38))
(assert (= (ite (= ch38A var38A) 0 1) sc38A))
(assert (= (ite (= ch38B var38B) 0 1) sc38B))
(assert (= (ite (= ch38C var38C) 0 1) sc38C))
(assert (= (ite (= ch38D var38D) 0 1) sc38D))
(assert (= (ite (= ch38E var38E) 0 1) sc38E))
(assert (= (ite (= ch38F var38F) 0 1) sc38F))
(assert (<= sc38A 1))
(assert (<= sc38B 1))
(assert (<= sc38C 1))
(assert (<= sc38D 1))
(assert (<= sc38E 1))
(assert (<= sc38F 1))
(assert (<= (str.len var39A) 1))
(assert (<= (str.len var39B) 1))
(assert (<= (str.len var39C) 1))
(assert (<= (str.len var39D) 1))
(assert (<= (str.len var39E) 1))
(assert (<= (str.len var39F) 1))
(assert (= (str.++ preA (str.++ stem39 sufA)) (str.++ unch139A (str.++ ch39A unch239A))))
(assert (= (str.++ preB (str.++ stem39 sufB)) (str.++ unch139B (str.++ ch39B unch239B))))
(assert (= (str.++ preC (str.++ stem39 sufC)) (str.++ unch139C (str.++ ch39C unch239C))))
(assert (= (str.++ preD (str.++ stem39 sufD)) (str.++ unch139D (str.++ ch39D unch239D))))
(assert (= (str.++ preE (str.++ stem39 sufE)) (str.++ unch139E (str.++ ch39E unch239E))))
(assert (= (str.++ preF (str.++ stem39 sufF)) (str.++ unch139F (str.++ ch39F unch239F))))
(assert (= "tumaj" (str.++ unch139D (str.++ var39D unch239D))))
(assert (= "tuntaj" (str.++ unch139E (str.++ var39E unch239E))))
(assert (= "tunnaj" (str.++ unch139F (str.++ var39F unch239F))))
(assert (= (str.len stem39) l39))
(assert (= (ite (= ch39A var39A) 0 1) sc39A))
(assert (= (ite (= ch39B var39B) 0 1) sc39B))
(assert (= (ite (= ch39C var39C) 0 1) sc39C))
(assert (= (ite (= ch39D var39D) 0 1) sc39D))
(assert (= (ite (= ch39E var39E) 0 1) sc39E))
(assert (= (ite (= ch39F var39F) 0 1) sc39F))
(assert (<= sc39A 1))
(assert (<= sc39B 1))
(assert (<= sc39C 1))
(assert (<= sc39D 1))
(assert (<= sc39E 1))
(assert (<= sc39F 1))
(assert (<= (str.len var40A) 1))
(assert (<= (str.len var40B) 1))
(assert (<= (str.len var40C) 1))
(assert (<= (str.len var40D) 1))
(assert (<= (str.len var40E) 1))
(assert (<= (str.len var40F) 1))
(assert (= (str.++ preA (str.++ stem40 sufA)) (str.++ unch140A (str.++ ch40A unch240A))))
(assert (= (str.++ preB (str.++ stem40 sufB)) (str.++ unch140B (str.++ ch40B unch240B))))
(assert (= (str.++ preC (str.++ stem40 sufC)) (str.++ unch140C (str.++ ch40C unch240C))))
(assert (= (str.++ preD (str.++ stem40 sufD)) (str.++ unch140D (str.++ ch40D unch240D))))
(assert (= (str.++ preE (str.++ stem40 sufE)) (str.++ unch140E (str.++ ch40E unch240E))))
(assert (= (str.++ preF (str.++ stem40 sufF)) (str.++ unch140F (str.++ ch40F unch240F))))
(assert (= "argaj" (str.++ unch140D (str.++ var40D unch240D))))
(assert (= "aragtaj" (str.++ unch140E (str.++ var40E unch240E))))
(assert (= "aragnaj" (str.++ unch140F (str.++ var40F unch240F))))
(assert (= (str.len stem40) l40))
(assert (= (ite (= ch40A var40A) 0 1) sc40A))
(assert (= (ite (= ch40B var40B) 0 1) sc40B))
(assert (= (ite (= ch40C var40C) 0 1) sc40C))
(assert (= (ite (= ch40D var40D) 0 1) sc40D))
(assert (= (ite (= ch40E var40E) 0 1) sc40E))
(assert (= (ite (= ch40F var40F) 0 1) sc40F))
(assert (<= sc40A 1))
(assert (<= sc40B 1))
(assert (<= sc40C 1))
(assert (<= sc40D 1))
(assert (<= sc40E 1))
(assert (<= sc40F 1))
(assert (<= (str.len var41A) 1))
(assert (<= (str.len var41B) 1))
(assert (<= (str.len var41C) 1))
(assert (<= (str.len var41D) 1))
(assert (<= (str.len var41E) 1))
(assert (<= (str.len var41F) 1))
(assert (= (str.++ preA (str.++ stem41 sufA)) (str.++ unch141A (str.++ ch41A unch241A))))
(assert (= (str.++ preB (str.++ stem41 sufB)) (str.++ unch141B (str.++ ch41B unch241B))))
(assert (= (str.++ preC (str.++ stem41 sufC)) (str.++ unch141C (str.++ ch41C unch241C))))
(assert (= (str.++ preD (str.++ stem41 sufD)) (str.++ unch141D (str.++ ch41D unch241D))))
(assert (= (str.++ preE (str.++ stem41 sufE)) (str.++ unch141E (str.++ ch41E unch241E))))
(assert (= (str.++ preF (str.++ stem41 sufF)) (str.++ unch141F (str.++ ch41F unch241F))))
(assert (= "gudbaj" (str.++ unch141D (str.++ var41D unch241D))))
(assert (= "guZubtaj" (str.++ unch141E (str.++ var41E unch241E))))
(assert (= "guZubnaj" (str.++ unch141F (str.++ var41F unch241F))))
(assert (= (str.len stem41) l41))
(assert (= (ite (= ch41A var41A) 0 1) sc41A))
(assert (= (ite (= ch41B var41B) 0 1) sc41B))
(assert (= (ite (= ch41C var41C) 0 1) sc41C))
(assert (= (ite (= ch41D var41D) 0 1) sc41D))
(assert (= (ite (= ch41E var41E) 0 1) sc41E))
(assert (= (ite (= ch41F var41F) 0 1) sc41F))
(assert (<= sc41A 1))
(assert (<= sc41B 1))
(assert (<= sc41C 1))
(assert (<= sc41D 1))
(assert (<= sc41E 1))
(assert (<= sc41F 1))
(assert (<= (str.len var42A) 1))
(assert (<= (str.len var42B) 1))
(assert (<= (str.len var42C) 1))
(assert (<= (str.len var42D) 1))
(assert (<= (str.len var42E) 1))
(assert (<= (str.len var42F) 1))
(assert (= (str.++ preA (str.++ stem42 sufA)) (str.++ unch142A (str.++ ch42A unch242A))))
(assert (= (str.++ preB (str.++ stem42 sufB)) (str.++ unch142B (str.++ ch42B unch242B))))
(assert (= (str.++ preC (str.++ stem42 sufC)) (str.++ unch142C (str.++ ch42C unch242C))))
(assert (= (str.++ preD (str.++ stem42 sufD)) (str.++ unch142D (str.++ ch42D unch242D))))
(assert (= (str.++ preE (str.++ stem42 sufE)) (str.++ unch142E (str.++ ch42E unch242E))))
(assert (= (str.++ preF (str.++ stem42 sufF)) (str.++ unch142F (str.++ ch42F unch242F))))
(assert (= "qoslaj" (str.++ unch142D (str.++ var42D unch242D))))
(assert (= "qosoBaj" (str.++ unch142E (str.++ var42E unch242E))))
(assert (= "qosollaj" (str.++ unch142F (str.++ var42F unch242F))))
(assert (= (str.len stem42) l42))
(assert (= (ite (= ch42A var42A) 0 1) sc42A))
(assert (= (ite (= ch42B var42B) 0 1) sc42B))
(assert (= (ite (= ch42C var42C) 0 1) sc42C))
(assert (= (ite (= ch42D var42D) 0 1) sc42D))
(assert (= (ite (= ch42E var42E) 0 1) sc42E))
(assert (= (ite (= ch42F var42F) 0 1) sc42F))
(assert (<= sc42A 1))
(assert (<= sc42B 1))
(assert (<= sc42C 1))
(assert (<= sc42D 1))
(assert (<= sc42E 1))
(assert (<= sc42F 1))
(assert (<= (str.len var43A) 1))
(assert (<= (str.len var43B) 1))
(assert (<= (str.len var43C) 1))
(assert (<= (str.len var43D) 1))
(assert (<= (str.len var43E) 1))
(assert (<= (str.len var43F) 1))
(assert (= (str.++ preA (str.++ stem43 sufA)) (str.++ unch143A (str.++ ch43A unch243A))))
(assert (= (str.++ preB (str.++ stem43 sufB)) (str.++ unch143B (str.++ ch43B unch243B))))
(assert (= (str.++ preC (str.++ stem43 sufC)) (str.++ unch143C (str.++ ch43C unch243C))))
(assert (= (str.++ preD (str.++ stem43 sufD)) (str.++ unch143D (str.++ ch43D unch243D))))
(assert (= (str.++ preE (str.++ stem43 sufE)) (str.++ unch143E (str.++ ch43E unch243E))))
(assert (= (str.++ preF (str.++ stem43 sufF)) (str.++ unch143F (str.++ ch43F unch243F))))
(assert (= "hadlaj" (str.++ unch143D (str.++ var43D unch243D))))
(assert (= "haZaBaj" (str.++ unch143E (str.++ var43E unch243E))))
(assert (= "haZallaj" (str.++ unch143F (str.++ var43F unch243F))))
(assert (= (str.len stem43) l43))
(assert (= (ite (= ch43A var43A) 0 1) sc43A))
(assert (= (ite (= ch43B var43B) 0 1) sc43B))
(assert (= (ite (= ch43C var43C) 0 1) sc43C))
(assert (= (ite (= ch43D var43D) 0 1) sc43D))
(assert (= (ite (= ch43E var43E) 0 1) sc43E))
(assert (= (ite (= ch43F var43F) 0 1) sc43F))
(assert (<= sc43A 1))
(assert (<= sc43B 1))
(assert (<= sc43C 1))
(assert (<= sc43D 1))
(assert (<= sc43E 1))
(assert (<= sc43F 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      0
      sc30A
      sc30B
      sc30C
      sc30D
      sc30E
      sc30F
      0
      sc31A
      sc31B
      sc31C
      sc31D
      sc31E
      sc31F
      0
      sc32A
      sc32B
      sc32C
      sc32D
      sc32E
      sc32F
      0
      sc33A
      sc33B
      sc33C
      sc33D
      sc33E
      sc33F
      0
      sc34A
      sc34B
      sc34C
      sc34D
      sc34E
      sc34F
      0
      sc35A
      sc35B
      sc35C
      sc35D
      sc35E
      sc35F
      0
      sc36A
      sc36B
      sc36C
      sc36D
      sc36E
      sc36F
      0
      sc37A
      sc37B
      sc37C
      sc37D
      sc37E
      sc37F
      0
      sc38A
      sc38B
      sc38C
      sc38D
      sc38E
      sc38F
      0
      sc39A
      sc39B
      sc39C
      sc39D
      sc39E
      sc39F
      0
      sc40A
      sc40B
      sc40C
      sc40D
      sc40E
      sc40F
      0
      sc41A
      sc41B
      sc41C
      sc41D
      sc41E
      sc41F
      0
      sc42A
      sc42B
      sc42C
      sc42D
      sc42E
      sc42F
      0
      sc43A
      sc43B
      sc43C
      sc43D
      sc43E
      sc43F)
   4))
(assert (= (+ 0
      sc0E
      sc1E
      sc2E
      sc3E
      sc4E
      sc5E
      sc6E
      sc7E
      sc8E
      sc9E
      sc10E
      sc11E
      sc12E
      sc13E
      sc14E
      sc15E
      sc16E
      sc17E
      sc18E
      sc19E
      sc20E
      sc21E
      sc22E
      sc23E
      sc24E
      sc25E
      sc26E
      sc27E
      sc28E
      sc29E
      sc30E
      sc31E
      sc32E
      sc33E
      sc34E
      sc35E
      sc36E
      sc37E
      sc38E
      sc39E
      sc40E
      sc41E
      sc42E
      sc43E)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun var30A () String)
(declare-fun var30B () String)
(declare-fun var30C () String)
(declare-fun var30D () String)
(declare-fun var30E () String)
(declare-fun var30F () String)
(declare-fun unch230A () String)
(declare-fun ch30A () String)
(declare-fun unch130A () String)
(declare-fun stem30 () String)
(declare-fun unch230B () String)
(declare-fun ch30B () String)
(declare-fun unch130B () String)
(declare-fun unch230C () String)
(declare-fun ch30C () String)
(declare-fun unch130C () String)
(declare-fun unch230D () String)
(declare-fun ch30D () String)
(declare-fun unch130D () String)
(declare-fun unch230E () String)
(declare-fun ch30E () String)
(declare-fun unch130E () String)
(declare-fun unch230F () String)
(declare-fun ch30F () String)
(declare-fun unch130F () String)
(declare-fun l30 () Int)
(declare-fun sc30A () Int)
(declare-fun sc30B () Int)
(declare-fun sc30C () Int)
(declare-fun sc30D () Int)
(declare-fun sc30E () Int)
(declare-fun sc30F () Int)
(declare-fun var31A () String)
(declare-fun var31B () String)
(declare-fun var31C () String)
(declare-fun var31D () String)
(declare-fun var31E () String)
(declare-fun var31F () String)
(declare-fun unch231A () String)
(declare-fun ch31A () String)
(declare-fun unch131A () String)
(declare-fun stem31 () String)
(declare-fun unch231B () String)
(declare-fun ch31B () String)
(declare-fun unch131B () String)
(declare-fun unch231C () String)
(declare-fun ch31C () String)
(declare-fun unch131C () String)
(declare-fun unch231D () String)
(declare-fun ch31D () String)
(declare-fun unch131D () String)
(declare-fun unch231E () String)
(declare-fun ch31E () String)
(declare-fun unch131E () String)
(declare-fun unch231F () String)
(declare-fun ch31F () String)
(declare-fun unch131F () String)
(declare-fun l31 () Int)
(declare-fun sc31A () Int)
(declare-fun sc31B () Int)
(declare-fun sc31C () Int)
(declare-fun sc31D () Int)
(declare-fun sc31E () Int)
(declare-fun sc31F () Int)
(declare-fun var32A () String)
(declare-fun var32B () String)
(declare-fun var32C () String)
(declare-fun var32D () String)
(declare-fun var32E () String)
(declare-fun var32F () String)
(declare-fun unch232A () String)
(declare-fun ch32A () String)
(declare-fun unch132A () String)
(declare-fun stem32 () String)
(declare-fun unch232B () String)
(declare-fun ch32B () String)
(declare-fun unch132B () String)
(declare-fun unch232C () String)
(declare-fun ch32C () String)
(declare-fun unch132C () String)
(declare-fun unch232D () String)
(declare-fun ch32D () String)
(declare-fun unch132D () String)
(declare-fun unch232E () String)
(declare-fun ch32E () String)
(declare-fun unch132E () String)
(declare-fun unch232F () String)
(declare-fun ch32F () String)
(declare-fun unch132F () String)
(declare-fun l32 () Int)
(declare-fun sc32A () Int)
(declare-fun sc32B () Int)
(declare-fun sc32C () Int)
(declare-fun sc32D () Int)
(declare-fun sc32E () Int)
(declare-fun sc32F () Int)
(declare-fun var33A () String)
(declare-fun var33B () String)
(declare-fun var33C () String)
(declare-fun var33D () String)
(declare-fun var33E () String)
(declare-fun var33F () String)
(declare-fun unch233A () String)
(declare-fun ch33A () String)
(declare-fun unch133A () String)
(declare-fun stem33 () String)
(declare-fun unch233B () String)
(declare-fun ch33B () String)
(declare-fun unch133B () String)
(declare-fun unch233C () String)
(declare-fun ch33C () String)
(declare-fun unch133C () String)
(declare-fun unch233D () String)
(declare-fun ch33D () String)
(declare-fun unch133D () String)
(declare-fun unch233E () String)
(declare-fun ch33E () String)
(declare-fun unch133E () String)
(declare-fun unch233F () String)
(declare-fun ch33F () String)
(declare-fun unch133F () String)
(declare-fun l33 () Int)
(declare-fun sc33A () Int)
(declare-fun sc33B () Int)
(declare-fun sc33C () Int)
(declare-fun sc33D () Int)
(declare-fun sc33E () Int)
(declare-fun sc33F () Int)
(declare-fun var34A () String)
(declare-fun var34B () String)
(declare-fun var34C () String)
(declare-fun var34D () String)
(declare-fun var34E () String)
(declare-fun var34F () String)
(declare-fun unch234A () String)
(declare-fun ch34A () String)
(declare-fun unch134A () String)
(declare-fun stem34 () String)
(declare-fun unch234B () String)
(declare-fun ch34B () String)
(declare-fun unch134B () String)
(declare-fun unch234C () String)
(declare-fun ch34C () String)
(declare-fun unch134C () String)
(declare-fun unch234D () String)
(declare-fun ch34D () String)
(declare-fun unch134D () String)
(declare-fun unch234E () String)
(declare-fun ch34E () String)
(declare-fun unch134E () String)
(declare-fun unch234F () String)
(declare-fun ch34F () String)
(declare-fun unch134F () String)
(declare-fun l34 () Int)
(declare-fun sc34A () Int)
(declare-fun sc34B () Int)
(declare-fun sc34C () Int)
(declare-fun sc34D () Int)
(declare-fun sc34E () Int)
(declare-fun sc34F () Int)
(declare-fun var35A () String)
(declare-fun var35B () String)
(declare-fun var35C () String)
(declare-fun var35D () String)
(declare-fun var35E () String)
(declare-fun var35F () String)
(declare-fun unch235A () String)
(declare-fun ch35A () String)
(declare-fun unch135A () String)
(declare-fun stem35 () String)
(declare-fun unch235B () String)
(declare-fun ch35B () String)
(declare-fun unch135B () String)
(declare-fun unch235C () String)
(declare-fun ch35C () String)
(declare-fun unch135C () String)
(declare-fun unch235D () String)
(declare-fun ch35D () String)
(declare-fun unch135D () String)
(declare-fun unch235E () String)
(declare-fun ch35E () String)
(declare-fun unch135E () String)
(declare-fun unch235F () String)
(declare-fun ch35F () String)
(declare-fun unch135F () String)
(declare-fun l35 () Int)
(declare-fun sc35A () Int)
(declare-fun sc35B () Int)
(declare-fun sc35C () Int)
(declare-fun sc35D () Int)
(declare-fun sc35E () Int)
(declare-fun sc35F () Int)
(declare-fun var36A () String)
(declare-fun var36B () String)
(declare-fun var36C () String)
(declare-fun var36D () String)
(declare-fun var36E () String)
(declare-fun var36F () String)
(declare-fun unch236A () String)
(declare-fun ch36A () String)
(declare-fun unch136A () String)
(declare-fun stem36 () String)
(declare-fun unch236B () String)
(declare-fun ch36B () String)
(declare-fun unch136B () String)
(declare-fun unch236C () String)
(declare-fun ch36C () String)
(declare-fun unch136C () String)
(declare-fun unch236D () String)
(declare-fun ch36D () String)
(declare-fun unch136D () String)
(declare-fun unch236E () String)
(declare-fun ch36E () String)
(declare-fun unch136E () String)
(declare-fun unch236F () String)
(declare-fun ch36F () String)
(declare-fun unch136F () String)
(declare-fun l36 () Int)
(declare-fun sc36A () Int)
(declare-fun sc36B () Int)
(declare-fun sc36C () Int)
(declare-fun sc36D () Int)
(declare-fun sc36E () Int)
(declare-fun sc36F () Int)
(declare-fun var37A () String)
(declare-fun var37B () String)
(declare-fun var37C () String)
(declare-fun var37D () String)
(declare-fun var37E () String)
(declare-fun var37F () String)
(declare-fun unch237A () String)
(declare-fun ch37A () String)
(declare-fun unch137A () String)
(declare-fun stem37 () String)
(declare-fun unch237B () String)
(declare-fun ch37B () String)
(declare-fun unch137B () String)
(declare-fun unch237C () String)
(declare-fun ch37C () String)
(declare-fun unch137C () String)
(declare-fun unch237D () String)
(declare-fun ch37D () String)
(declare-fun unch137D () String)
(declare-fun unch237E () String)
(declare-fun ch37E () String)
(declare-fun unch137E () String)
(declare-fun unch237F () String)
(declare-fun ch37F () String)
(declare-fun unch137F () String)
(declare-fun l37 () Int)
(declare-fun sc37A () Int)
(declare-fun sc37B () Int)
(declare-fun sc37C () Int)
(declare-fun sc37D () Int)
(declare-fun sc37E () Int)
(declare-fun sc37F () Int)
(declare-fun var38A () String)
(declare-fun var38B () String)
(declare-fun var38C () String)
(declare-fun var38D () String)
(declare-fun var38E () String)
(declare-fun var38F () String)
(declare-fun unch238A () String)
(declare-fun ch38A () String)
(declare-fun unch138A () String)
(declare-fun stem38 () String)
(declare-fun unch238B () String)
(declare-fun ch38B () String)
(declare-fun unch138B () String)
(declare-fun unch238C () String)
(declare-fun ch38C () String)
(declare-fun unch138C () String)
(declare-fun unch238D () String)
(declare-fun ch38D () String)
(declare-fun unch138D () String)
(declare-fun unch238E () String)
(declare-fun ch38E () String)
(declare-fun unch138E () String)
(declare-fun unch238F () String)
(declare-fun ch38F () String)
(declare-fun unch138F () String)
(declare-fun l38 () Int)
(declare-fun sc38A () Int)
(declare-fun sc38B () Int)
(declare-fun sc38C () Int)
(declare-fun sc38D () Int)
(declare-fun sc38E () Int)
(declare-fun sc38F () Int)
(declare-fun var39A () String)
(declare-fun var39B () String)
(declare-fun var39C () String)
(declare-fun var39D () String)
(declare-fun var39E () String)
(declare-fun var39F () String)
(declare-fun unch239A () String)
(declare-fun ch39A () String)
(declare-fun unch139A () String)
(declare-fun stem39 () String)
(declare-fun unch239B () String)
(declare-fun ch39B () String)
(declare-fun unch139B () String)
(declare-fun unch239C () String)
(declare-fun ch39C () String)
(declare-fun unch139C () String)
(declare-fun unch239D () String)
(declare-fun ch39D () String)
(declare-fun unch139D () String)
(declare-fun unch239E () String)
(declare-fun ch39E () String)
(declare-fun unch139E () String)
(declare-fun unch239F () String)
(declare-fun ch39F () String)
(declare-fun unch139F () String)
(declare-fun l39 () Int)
(declare-fun sc39A () Int)
(declare-fun sc39B () Int)
(declare-fun sc39C () Int)
(declare-fun sc39D () Int)
(declare-fun sc39E () Int)
(declare-fun sc39F () Int)
(declare-fun var40A () String)
(declare-fun var40B () String)
(declare-fun var40C () String)
(declare-fun var40D () String)
(declare-fun var40E () String)
(declare-fun var40F () String)
(declare-fun unch240A () String)
(declare-fun ch40A () String)
(declare-fun unch140A () String)
(declare-fun stem40 () String)
(declare-fun unch240B () String)
(declare-fun ch40B () String)
(declare-fun unch140B () String)
(declare-fun unch240C () String)
(declare-fun ch40C () String)
(declare-fun unch140C () String)
(declare-fun unch240D () String)
(declare-fun ch40D () String)
(declare-fun unch140D () String)
(declare-fun unch240E () String)
(declare-fun ch40E () String)
(declare-fun unch140E () String)
(declare-fun unch240F () String)
(declare-fun ch40F () String)
(declare-fun unch140F () String)
(declare-fun l40 () Int)
(declare-fun sc40A () Int)
(declare-fun sc40B () Int)
(declare-fun sc40C () Int)
(declare-fun sc40D () Int)
(declare-fun sc40E () Int)
(declare-fun sc40F () Int)
(declare-fun var41A () String)
(declare-fun var41B () String)
(declare-fun var41C () String)
(declare-fun var41D () String)
(declare-fun var41E () String)
(declare-fun var41F () String)
(declare-fun unch241A () String)
(declare-fun ch41A () String)
(declare-fun unch141A () String)
(declare-fun stem41 () String)
(declare-fun unch241B () String)
(declare-fun ch41B () String)
(declare-fun unch141B () String)
(declare-fun unch241C () String)
(declare-fun ch41C () String)
(declare-fun unch141C () String)
(declare-fun unch241D () String)
(declare-fun ch41D () String)
(declare-fun unch141D () String)
(declare-fun unch241E () String)
(declare-fun ch41E () String)
(declare-fun unch141E () String)
(declare-fun unch241F () String)
(declare-fun ch41F () String)
(declare-fun unch141F () String)
(declare-fun l41 () Int)
(declare-fun sc41A () Int)
(declare-fun sc41B () Int)
(declare-fun sc41C () Int)
(declare-fun sc41D () Int)
(declare-fun sc41E () Int)
(declare-fun sc41F () Int)
(declare-fun var42A () String)
(declare-fun var42B () String)
(declare-fun var42C () String)
(declare-fun var42D () String)
(declare-fun var42E () String)
(declare-fun var42F () String)
(declare-fun unch242A () String)
(declare-fun ch42A () String)
(declare-fun unch142A () String)
(declare-fun stem42 () String)
(declare-fun unch242B () String)
(declare-fun ch42B () String)
(declare-fun unch142B () String)
(declare-fun unch242C () String)
(declare-fun ch42C () String)
(declare-fun unch142C () String)
(declare-fun unch242D () String)
(declare-fun ch42D () String)
(declare-fun unch142D () String)
(declare-fun unch242E () String)
(declare-fun ch42E () String)
(declare-fun unch142E () String)
(declare-fun unch242F () String)
(declare-fun ch42F () String)
(declare-fun unch142F () String)
(declare-fun l42 () Int)
(declare-fun sc42A () Int)
(declare-fun sc42B () Int)
(declare-fun sc42C () Int)
(declare-fun sc42D () Int)
(declare-fun sc42E () Int)
(declare-fun sc42F () Int)
(declare-fun var43A () String)
(declare-fun var43B () String)
(declare-fun var43C () String)
(declare-fun var43D () String)
(declare-fun var43E () String)
(declare-fun var43F () String)
(declare-fun unch243A () String)
(declare-fun ch43A () String)
(declare-fun unch143A () String)
(declare-fun stem43 () String)
(declare-fun unch243B () String)
(declare-fun ch43B () String)
(declare-fun unch143B () String)
(declare-fun unch243C () String)
(declare-fun ch43C () String)
(declare-fun unch143C () String)
(declare-fun unch243D () String)
(declare-fun ch43D () String)
(declare-fun unch143D () String)
(declare-fun unch243E () String)
(declare-fun ch43E () String)
(declare-fun unch143E () String)
(declare-fun unch243F () String)
(declare-fun ch43F () String)
(declare-fun unch143F () String)
(declare-fun l43 () Int)
(declare-fun sc43A () Int)
(declare-fun sc43B () Int)
(declare-fun sc43C () Int)
(declare-fun sc43D () Int)
(declare-fun sc43E () Int)
(declare-fun sc43F () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= "daar" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "daarta" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "daaro" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= "gees" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "geesta" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "geeso" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= "laf" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "lafta" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "lafo" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= "lug" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "lugta" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "luOo" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= "naag" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "naagta" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "naaOo" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= "tib" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "tibta" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "tiXo" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= "sab" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "sabta" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "saXo" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= "bad" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "bada" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "baZo" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= "Bid" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "Bida" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "BiZo" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= "fee1" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "fee1a" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "fee2o" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= "3iir" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "3iirta" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "3iiro" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= "4ul" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "4uBa" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "4ulo" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= "bil" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "biBa" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "bilo" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= "meel" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "meeBa" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "meelo" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= "kaliil" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "kaliiBa" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "kaliilo" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= "najl" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "najBa" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "najlo" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= "sun" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "sunta" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "sumo" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= "laan" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "laanta" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "laamo" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= "sin" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "sinta" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "simo" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= "dan" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "danta" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "dano" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= "daan" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "daanta" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "daano" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= "saan" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "saanta" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "saano" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= "nirig" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "nirigta" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "nirgo" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= "gaXa1" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= "gaXa1a" (str.++ unch123B (str.++ var23B unch223B))))
(assert (= "gab1o" (str.++ unch123C (str.++ var23C unch223C))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= "hoOol" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= "hoOoBa" (str.++ unch124B (str.++ var24B unch224B))))
(assert (= "hoglo" (str.++ unch124C (str.++ var24C unch224C))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= "baOal" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= "baOaBa" (str.++ unch125B (str.++ var25B unch225B))))
(assert (= "baglo" (str.++ unch125C (str.++ var25C unch225C))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= "wa5ar" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= "wa5arta" (str.++ unch126B (str.++ var26B unch226B))))
(assert (= "wa5aro" (str.++ unch126C (str.++ var26C unch226C))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= "irbad" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= "irbada" (str.++ unch127B (str.++ var27B unch227B))))
(assert (= "irbaZo" (str.++ unch127C (str.++ var27C unch227C))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= "kefed" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= "kefeda" (str.++ unch128B (str.++ var28B unch228B))))
(assert (= "kefeZo" (str.++ unch128C (str.++ var28C unch228C))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= "Bilin" (str.++ unch129A (str.++ var29A unch229A))))
(assert (= "Bilinta" (str.++ unch129B (str.++ var29B unch229B))))
(assert (= "Bilino" (str.++ unch129C (str.++ var29C unch229C))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= (str.len var30A) 1))
(assert (<= (str.len var30B) 1))
(assert (<= (str.len var30C) 1))
(assert (<= (str.len var30D) 1))
(assert (<= (str.len var30E) 1))
(assert (<= (str.len var30F) 1))
(assert (= (str.++ preA (str.++ stem30 sufA)) (str.++ unch130A (str.++ ch30A unch230A))))
(assert (= (str.++ preB (str.++ stem30 sufB)) (str.++ unch130B (str.++ ch30B unch230B))))
(assert (= (str.++ preC (str.++ stem30 sufC)) (str.++ unch130C (str.++ ch30C unch230C))))
(assert (= (str.++ preD (str.++ stem30 sufD)) (str.++ unch130D (str.++ ch30D unch230D))))
(assert (= (str.++ preE (str.++ stem30 sufE)) (str.++ unch130E (str.++ ch30E unch230E))))
(assert (= (str.++ preF (str.++ stem30 sufF)) (str.++ unch130F (str.++ ch30F unch230F))))
(assert (= "bohol" (str.++ unch130A (str.++ var30A unch230A))))
(assert (= "bohoBa" (str.++ unch130B (str.++ var30B unch230B))))
(assert (= "boholo" (str.++ unch130C (str.++ var30C unch230C))))
(assert (= (str.len stem30) l30))
(assert (= (ite (= ch30A var30A) 0 1) sc30A))
(assert (= (ite (= ch30B var30B) 0 1) sc30B))
(assert (= (ite (= ch30C var30C) 0 1) sc30C))
(assert (= (ite (= ch30D var30D) 0 1) sc30D))
(assert (= (ite (= ch30E var30E) 0 1) sc30E))
(assert (= (ite (= ch30F var30F) 0 1) sc30F))
(assert (<= sc30A 1))
(assert (<= sc30B 1))
(assert (<= sc30C 1))
(assert (<= sc30D 1))
(assert (<= sc30E 1))
(assert (<= sc30F 1))
(assert (<= (str.len var31A) 1))
(assert (<= (str.len var31B) 1))
(assert (<= (str.len var31C) 1))
(assert (<= (str.len var31D) 1))
(assert (<= (str.len var31E) 1))
(assert (<= (str.len var31F) 1))
(assert (= (str.++ preA (str.++ stem31 sufA)) (str.++ unch131A (str.++ ch31A unch231A))))
(assert (= (str.++ preB (str.++ stem31 sufB)) (str.++ unch131B (str.++ ch31B unch231B))))
(assert (= (str.++ preC (str.++ stem31 sufC)) (str.++ unch131C (str.++ ch31C unch231C))))
(assert (= (str.++ preD (str.++ stem31 sufD)) (str.++ unch131D (str.++ ch31D unch231D))))
(assert (= (str.++ preE (str.++ stem31 sufE)) (str.++ unch131E (str.++ ch31E unch231E))))
(assert (= (str.++ preF (str.++ stem31 sufF)) (str.++ unch131F (str.++ ch31F unch231F))))
(assert (= "4aajad" (str.++ unch131A (str.++ var31A unch231A))))
(assert (= "4aajada" (str.++ unch131B (str.++ var31B unch231B))))
(assert (= "4aajaZo" (str.++ unch131C (str.++ var31C unch231C))))
(assert (= (str.len stem31) l31))
(assert (= (ite (= ch31A var31A) 0 1) sc31A))
(assert (= (ite (= ch31B var31B) 0 1) sc31B))
(assert (= (ite (= ch31C var31C) 0 1) sc31C))
(assert (= (ite (= ch31D var31D) 0 1) sc31D))
(assert (= (ite (= ch31E var31E) 0 1) sc31E))
(assert (= (ite (= ch31F var31F) 0 1) sc31F))
(assert (<= sc31A 1))
(assert (<= sc31B 1))
(assert (<= sc31C 1))
(assert (<= sc31D 1))
(assert (<= sc31E 1))
(assert (<= sc31F 1))
(assert (<= (str.len var32A) 1))
(assert (<= (str.len var32B) 1))
(assert (<= (str.len var32C) 1))
(assert (<= (str.len var32D) 1))
(assert (<= (str.len var32E) 1))
(assert (<= (str.len var32F) 1))
(assert (= (str.++ preA (str.++ stem32 sufA)) (str.++ unch132A (str.++ ch32A unch232A))))
(assert (= (str.++ preB (str.++ stem32 sufB)) (str.++ unch132B (str.++ ch32B unch232B))))
(assert (= (str.++ preC (str.++ stem32 sufC)) (str.++ unch132C (str.++ ch32C unch232C))))
(assert (= (str.++ preD (str.++ stem32 sufD)) (str.++ unch132D (str.++ ch32D unch232D))))
(assert (= (str.++ preE (str.++ stem32 sufE)) (str.++ unch132E (str.++ ch32E unch232E))))
(assert (= (str.++ preF (str.++ stem32 sufF)) (str.++ unch132F (str.++ ch32F unch232F))))
(assert (= "ga3an" (str.++ unch132A (str.++ var32A unch232A))))
(assert (= "ga3anta" (str.++ unch132B (str.++ var32B unch232B))))
(assert (= "ga3mo" (str.++ unch132C (str.++ var32C unch232C))))
(assert (= (str.len stem32) l32))
(assert (= (ite (= ch32A var32A) 0 1) sc32A))
(assert (= (ite (= ch32B var32B) 0 1) sc32B))
(assert (= (ite (= ch32C var32C) 0 1) sc32C))
(assert (= (ite (= ch32D var32D) 0 1) sc32D))
(assert (= (ite (= ch32E var32E) 0 1) sc32E))
(assert (= (ite (= ch32F var32F) 0 1) sc32F))
(assert (<= sc32A 1))
(assert (<= sc32B 1))
(assert (<= sc32C 1))
(assert (<= sc32D 1))
(assert (<= sc32E 1))
(assert (<= sc32F 1))
(assert (<= (str.len var33A) 1))
(assert (<= (str.len var33B) 1))
(assert (<= (str.len var33C) 1))
(assert (<= (str.len var33D) 1))
(assert (<= (str.len var33E) 1))
(assert (<= (str.len var33F) 1))
(assert (= (str.++ preA (str.++ stem33 sufA)) (str.++ unch133A (str.++ ch33A unch233A))))
(assert (= (str.++ preB (str.++ stem33 sufB)) (str.++ unch133B (str.++ ch33B unch233B))))
(assert (= (str.++ preC (str.++ stem33 sufC)) (str.++ unch133C (str.++ ch33C unch233C))))
(assert (= (str.++ preD (str.++ stem33 sufD)) (str.++ unch133D (str.++ ch33D unch233D))))
(assert (= (str.++ preE (str.++ stem33 sufE)) (str.++ unch133E (str.++ ch33E unch233E))))
(assert (= (str.++ preF (str.++ stem33 sufF)) (str.++ unch133F (str.++ ch33F unch233F))))
(assert (= "4inan" (str.++ unch133A (str.++ var33A unch233A))))
(assert (= "4inanta" (str.++ unch133B (str.++ var33B unch233B))))
(assert (= "4inano" (str.++ unch133C (str.++ var33C unch233C))))
(assert (= (str.len stem33) l33))
(assert (= (ite (= ch33A var33A) 0 1) sc33A))
(assert (= (ite (= ch33B var33B) 0 1) sc33B))
(assert (= (ite (= ch33C var33C) 0 1) sc33C))
(assert (= (ite (= ch33D var33D) 0 1) sc33D))
(assert (= (ite (= ch33E var33E) 0 1) sc33E))
(assert (= (ite (= ch33F var33F) 0 1) sc33F))
(assert (<= sc33A 1))
(assert (<= sc33B 1))
(assert (<= sc33C 1))
(assert (<= sc33D 1))
(assert (<= sc33E 1))
(assert (<= sc33F 1))
(assert (<= (str.len var34A) 1))
(assert (<= (str.len var34B) 1))
(assert (<= (str.len var34C) 1))
(assert (<= (str.len var34D) 1))
(assert (<= (str.len var34E) 1))
(assert (<= (str.len var34F) 1))
(assert (= (str.++ preA (str.++ stem34 sufA)) (str.++ unch134A (str.++ ch34A unch234A))))
(assert (= (str.++ preB (str.++ stem34 sufB)) (str.++ unch134B (str.++ ch34B unch234B))))
(assert (= (str.++ preC (str.++ stem34 sufC)) (str.++ unch134C (str.++ ch34C unch234C))))
(assert (= (str.++ preD (str.++ stem34 sufD)) (str.++ unch134D (str.++ ch34D unch234D))))
(assert (= (str.++ preE (str.++ stem34 sufE)) (str.++ unch134E (str.++ ch34E unch234E))))
(assert (= (str.++ preF (str.++ stem34 sufF)) (str.++ unch134F (str.++ ch34F unch234F))))
(assert (= "suOaj" (str.++ unch134D (str.++ var34D unch234D))))
(assert (= "sugtaj" (str.++ unch134E (str.++ var34E unch234E))))
(assert (= "sugnaj" (str.++ unch134F (str.++ var34F unch234F))))
(assert (= (str.len stem34) l34))
(assert (= (ite (= ch34A var34A) 0 1) sc34A))
(assert (= (ite (= ch34B var34B) 0 1) sc34B))
(assert (= (ite (= ch34C var34C) 0 1) sc34C))
(assert (= (ite (= ch34D var34D) 0 1) sc34D))
(assert (= (ite (= ch34E var34E) 0 1) sc34E))
(assert (= (ite (= ch34F var34F) 0 1) sc34F))
(assert (<= sc34A 1))
(assert (<= sc34B 1))
(assert (<= sc34C 1))
(assert (<= sc34D 1))
(assert (<= sc34E 1))
(assert (<= sc34F 1))
(assert (<= (str.len var35A) 1))
(assert (<= (str.len var35B) 1))
(assert (<= (str.len var35C) 1))
(assert (<= (str.len var35D) 1))
(assert (<= (str.len var35E) 1))
(assert (<= (str.len var35F) 1))
(assert (= (str.++ preA (str.++ stem35 sufA)) (str.++ unch135A (str.++ ch35A unch235A))))
(assert (= (str.++ preB (str.++ stem35 sufB)) (str.++ unch135B (str.++ ch35B unch235B))))
(assert (= (str.++ preC (str.++ stem35 sufC)) (str.++ unch135C (str.++ ch35C unch235C))))
(assert (= (str.++ preD (str.++ stem35 sufD)) (str.++ unch135D (str.++ ch35D unch235D))))
(assert (= (str.++ preE (str.++ stem35 sufE)) (str.++ unch135E (str.++ ch35E unch235E))))
(assert (= (str.++ preF (str.++ stem35 sufF)) (str.++ unch135F (str.++ ch35F unch235F))))
(assert (= "kaXaj" (str.++ unch135D (str.++ var35D unch235D))))
(assert (= "kabtaj" (str.++ unch135E (str.++ var35E unch235E))))
(assert (= "kabnaj" (str.++ unch135F (str.++ var35F unch235F))))
(assert (= (str.len stem35) l35))
(assert (= (ite (= ch35A var35A) 0 1) sc35A))
(assert (= (ite (= ch35B var35B) 0 1) sc35B))
(assert (= (ite (= ch35C var35C) 0 1) sc35C))
(assert (= (ite (= ch35D var35D) 0 1) sc35D))
(assert (= (ite (= ch35E var35E) 0 1) sc35E))
(assert (= (ite (= ch35F var35F) 0 1) sc35F))
(assert (<= sc35A 1))
(assert (<= sc35B 1))
(assert (<= sc35C 1))
(assert (<= sc35D 1))
(assert (<= sc35E 1))
(assert (<= sc35F 1))
(assert (<= (str.len var36A) 1))
(assert (<= (str.len var36B) 1))
(assert (<= (str.len var36C) 1))
(assert (<= (str.len var36D) 1))
(assert (<= (str.len var36E) 1))
(assert (<= (str.len var36F) 1))
(assert (= (str.++ preA (str.++ stem36 sufA)) (str.++ unch136A (str.++ ch36A unch236A))))
(assert (= (str.++ preB (str.++ stem36 sufB)) (str.++ unch136B (str.++ ch36B unch236B))))
(assert (= (str.++ preC (str.++ stem36 sufC)) (str.++ unch136C (str.++ ch36C unch236C))))
(assert (= (str.++ preD (str.++ stem36 sufD)) (str.++ unch136D (str.++ ch36D unch236D))))
(assert (= (str.++ preE (str.++ stem36 sufE)) (str.++ unch136E (str.++ ch36E unch236E))))
(assert (= (str.++ preF (str.++ stem36 sufF)) (str.++ unch136F (str.++ ch36F unch236F))))
(assert (= "siZaj" (str.++ unch136D (str.++ var36D unch236D))))
(assert (= "sidaj" (str.++ unch136E (str.++ var36E unch236E))))
(assert (= "sidnaj" (str.++ unch136F (str.++ var36F unch236F))))
(assert (= (str.len stem36) l36))
(assert (= (ite (= ch36A var36A) 0 1) sc36A))
(assert (= (ite (= ch36B var36B) 0 1) sc36B))
(assert (= (ite (= ch36C var36C) 0 1) sc36C))
(assert (= (ite (= ch36D var36D) 0 1) sc36D))
(assert (= (ite (= ch36E var36E) 0 1) sc36E))
(assert (= (ite (= ch36F var36F) 0 1) sc36F))
(assert (<= sc36A 1))
(assert (<= sc36B 1))
(assert (<= sc36C 1))
(assert (<= sc36D 1))
(assert (<= sc36E 1))
(assert (<= sc36F 1))
(assert (<= (str.len var37A) 1))
(assert (<= (str.len var37B) 1))
(assert (<= (str.len var37C) 1))
(assert (<= (str.len var37D) 1))
(assert (<= (str.len var37E) 1))
(assert (<= (str.len var37F) 1))
(assert (= (str.++ preA (str.++ stem37 sufA)) (str.++ unch137A (str.++ ch37A unch237A))))
(assert (= (str.++ preB (str.++ stem37 sufB)) (str.++ unch137B (str.++ ch37B unch237B))))
(assert (= (str.++ preC (str.++ stem37 sufC)) (str.++ unch137C (str.++ ch37C unch237C))))
(assert (= (str.++ preD (str.++ stem37 sufD)) (str.++ unch137D (str.++ ch37D unch237D))))
(assert (= (str.++ preE (str.++ stem37 sufE)) (str.++ unch137E (str.++ ch37E unch237E))))
(assert (= (str.++ preF (str.++ stem37 sufF)) (str.++ unch137F (str.++ ch37F unch237F))))
(assert (= "dilaj" (str.++ unch137D (str.++ var37D unch237D))))
(assert (= "diBaj" (str.++ unch137E (str.++ var37E unch237E))))
(assert (= "dillaj" (str.++ unch137F (str.++ var37F unch237F))))
(assert (= (str.len stem37) l37))
(assert (= (ite (= ch37A var37A) 0 1) sc37A))
(assert (= (ite (= ch37B var37B) 0 1) sc37B))
(assert (= (ite (= ch37C var37C) 0 1) sc37C))
(assert (= (ite (= ch37D var37D) 0 1) sc37D))
(assert (= (ite (= ch37E var37E) 0 1) sc37E))
(assert (= (ite (= ch37F var37F) 0 1) sc37F))
(assert (<= sc37A 1))
(assert (<= sc37B 1))
(assert (<= sc37C 1))
(assert (<= sc37D 1))
(assert (<= sc37E 1))
(assert (<= sc37F 1))
(assert (<= (str.len var38A) 1))
(assert (<= (str.len var38B) 1))
(assert (<= (str.len var38C) 1))
(assert (<= (str.len var38D) 1))
(assert (<= (str.len var38E) 1))
(assert (<= (str.len var38F) 1))
(assert (= (str.++ preA (str.++ stem38 sufA)) (str.++ unch138A (str.++ ch38A unch238A))))
(assert (= (str.++ preB (str.++ stem38 sufB)) (str.++ unch138B (str.++ ch38B unch238B))))
(assert (= (str.++ preC (str.++ stem38 sufC)) (str.++ unch138C (str.++ ch38C unch238C))))
(assert (= (str.++ preD (str.++ stem38 sufD)) (str.++ unch138D (str.++ ch38D unch238D))))
(assert (= (str.++ preE (str.++ stem38 sufE)) (str.++ unch138E (str.++ ch38E unch238E))))
(assert (= (str.++ preF (str.++ stem38 sufF)) (str.++ unch138F (str.++ ch38F unch238F))))
(assert (= "ganaj" (str.++ unch138D (str.++ var38D unch238D))))
(assert (= "gantaj" (str.++ unch138E (str.++ var38E unch238E))))
(assert (= "gannaj" (str.++ unch138F (str.++ var38F unch238F))))
(assert (= (str.len stem38) l38))
(assert (= (ite (= ch38A var38A) 0 1) sc38A))
(assert (= (ite (= ch38B var38B) 0 1) sc38B))
(assert (= (ite (= ch38C var38C) 0 1) sc38C))
(assert (= (ite (= ch38D var38D) 0 1) sc38D))
(assert (= (ite (= ch38E var38E) 0 1) sc38E))
(assert (= (ite (= ch38F var38F) 0 1) sc38F))
(assert (<= sc38A 1))
(assert (<= sc38B 1))
(assert (<= sc38C 1))
(assert (<= sc38D 1))
(assert (<= sc38E 1))
(assert (<= sc38F 1))
(assert (<= (str.len var39A) 1))
(assert (<= (str.len var39B) 1))
(assert (<= (str.len var39C) 1))
(assert (<= (str.len var39D) 1))
(assert (<= (str.len var39E) 1))
(assert (<= (str.len var39F) 1))
(assert (= (str.++ preA (str.++ stem39 sufA)) (str.++ unch139A (str.++ ch39A unch239A))))
(assert (= (str.++ preB (str.++ stem39 sufB)) (str.++ unch139B (str.++ ch39B unch239B))))
(assert (= (str.++ preC (str.++ stem39 sufC)) (str.++ unch139C (str.++ ch39C unch239C))))
(assert (= (str.++ preD (str.++ stem39 sufD)) (str.++ unch139D (str.++ ch39D unch239D))))
(assert (= (str.++ preE (str.++ stem39 sufE)) (str.++ unch139E (str.++ ch39E unch239E))))
(assert (= (str.++ preF (str.++ stem39 sufF)) (str.++ unch139F (str.++ ch39F unch239F))))
(assert (= "tumaj" (str.++ unch139D (str.++ var39D unch239D))))
(assert (= "tuntaj" (str.++ unch139E (str.++ var39E unch239E))))
(assert (= "tunnaj" (str.++ unch139F (str.++ var39F unch239F))))
(assert (= (str.len stem39) l39))
(assert (= (ite (= ch39A var39A) 0 1) sc39A))
(assert (= (ite (= ch39B var39B) 0 1) sc39B))
(assert (= (ite (= ch39C var39C) 0 1) sc39C))
(assert (= (ite (= ch39D var39D) 0 1) sc39D))
(assert (= (ite (= ch39E var39E) 0 1) sc39E))
(assert (= (ite (= ch39F var39F) 0 1) sc39F))
(assert (<= sc39A 1))
(assert (<= sc39B 1))
(assert (<= sc39C 1))
(assert (<= sc39D 1))
(assert (<= sc39E 1))
(assert (<= sc39F 1))
(assert (<= (str.len var40A) 1))
(assert (<= (str.len var40B) 1))
(assert (<= (str.len var40C) 1))
(assert (<= (str.len var40D) 1))
(assert (<= (str.len var40E) 1))
(assert (<= (str.len var40F) 1))
(assert (= (str.++ preA (str.++ stem40 sufA)) (str.++ unch140A (str.++ ch40A unch240A))))
(assert (= (str.++ preB (str.++ stem40 sufB)) (str.++ unch140B (str.++ ch40B unch240B))))
(assert (= (str.++ preC (str.++ stem40 sufC)) (str.++ unch140C (str.++ ch40C unch240C))))
(assert (= (str.++ preD (str.++ stem40 sufD)) (str.++ unch140D (str.++ ch40D unch240D))))
(assert (= (str.++ preE (str.++ stem40 sufE)) (str.++ unch140E (str.++ ch40E unch240E))))
(assert (= (str.++ preF (str.++ stem40 sufF)) (str.++ unch140F (str.++ ch40F unch240F))))
(assert (= "argaj" (str.++ unch140D (str.++ var40D unch240D))))
(assert (= "aragtaj" (str.++ unch140E (str.++ var40E unch240E))))
(assert (= "aragnaj" (str.++ unch140F (str.++ var40F unch240F))))
(assert (= (str.len stem40) l40))
(assert (= (ite (= ch40A var40A) 0 1) sc40A))
(assert (= (ite (= ch40B var40B) 0 1) sc40B))
(assert (= (ite (= ch40C var40C) 0 1) sc40C))
(assert (= (ite (= ch40D var40D) 0 1) sc40D))
(assert (= (ite (= ch40E var40E) 0 1) sc40E))
(assert (= (ite (= ch40F var40F) 0 1) sc40F))
(assert (<= sc40A 1))
(assert (<= sc40B 1))
(assert (<= sc40C 1))
(assert (<= sc40D 1))
(assert (<= sc40E 1))
(assert (<= sc40F 1))
(assert (<= (str.len var41A) 1))
(assert (<= (str.len var41B) 1))
(assert (<= (str.len var41C) 1))
(assert (<= (str.len var41D) 1))
(assert (<= (str.len var41E) 1))
(assert (<= (str.len var41F) 1))
(assert (= (str.++ preA (str.++ stem41 sufA)) (str.++ unch141A (str.++ ch41A unch241A))))
(assert (= (str.++ preB (str.++ stem41 sufB)) (str.++ unch141B (str.++ ch41B unch241B))))
(assert (= (str.++ preC (str.++ stem41 sufC)) (str.++ unch141C (str.++ ch41C unch241C))))
(assert (= (str.++ preD (str.++ stem41 sufD)) (str.++ unch141D (str.++ ch41D unch241D))))
(assert (= (str.++ preE (str.++ stem41 sufE)) (str.++ unch141E (str.++ ch41E unch241E))))
(assert (= (str.++ preF (str.++ stem41 sufF)) (str.++ unch141F (str.++ ch41F unch241F))))
(assert (= "gudbaj" (str.++ unch141D (str.++ var41D unch241D))))
(assert (= "guZubtaj" (str.++ unch141E (str.++ var41E unch241E))))
(assert (= "guZubnaj" (str.++ unch141F (str.++ var41F unch241F))))
(assert (= (str.len stem41) l41))
(assert (= (ite (= ch41A var41A) 0 1) sc41A))
(assert (= (ite (= ch41B var41B) 0 1) sc41B))
(assert (= (ite (= ch41C var41C) 0 1) sc41C))
(assert (= (ite (= ch41D var41D) 0 1) sc41D))
(assert (= (ite (= ch41E var41E) 0 1) sc41E))
(assert (= (ite (= ch41F var41F) 0 1) sc41F))
(assert (<= sc41A 1))
(assert (<= sc41B 1))
(assert (<= sc41C 1))
(assert (<= sc41D 1))
(assert (<= sc41E 1))
(assert (<= sc41F 1))
(assert (<= (str.len var42A) 1))
(assert (<= (str.len var42B) 1))
(assert (<= (str.len var42C) 1))
(assert (<= (str.len var42D) 1))
(assert (<= (str.len var42E) 1))
(assert (<= (str.len var42F) 1))
(assert (= (str.++ preA (str.++ stem42 sufA)) (str.++ unch142A (str.++ ch42A unch242A))))
(assert (= (str.++ preB (str.++ stem42 sufB)) (str.++ unch142B (str.++ ch42B unch242B))))
(assert (= (str.++ preC (str.++ stem42 sufC)) (str.++ unch142C (str.++ ch42C unch242C))))
(assert (= (str.++ preD (str.++ stem42 sufD)) (str.++ unch142D (str.++ ch42D unch242D))))
(assert (= (str.++ preE (str.++ stem42 sufE)) (str.++ unch142E (str.++ ch42E unch242E))))
(assert (= (str.++ preF (str.++ stem42 sufF)) (str.++ unch142F (str.++ ch42F unch242F))))
(assert (= "qoslaj" (str.++ unch142D (str.++ var42D unch242D))))
(assert (= "qosoBaj" (str.++ unch142E (str.++ var42E unch242E))))
(assert (= "qosollaj" (str.++ unch142F (str.++ var42F unch242F))))
(assert (= (str.len stem42) l42))
(assert (= (ite (= ch42A var42A) 0 1) sc42A))
(assert (= (ite (= ch42B var42B) 0 1) sc42B))
(assert (= (ite (= ch42C var42C) 0 1) sc42C))
(assert (= (ite (= ch42D var42D) 0 1) sc42D))
(assert (= (ite (= ch42E var42E) 0 1) sc42E))
(assert (= (ite (= ch42F var42F) 0 1) sc42F))
(assert (<= sc42A 1))
(assert (<= sc42B 1))
(assert (<= sc42C 1))
(assert (<= sc42D 1))
(assert (<= sc42E 1))
(assert (<= sc42F 1))
(assert (<= (str.len var43A) 1))
(assert (<= (str.len var43B) 1))
(assert (<= (str.len var43C) 1))
(assert (<= (str.len var43D) 1))
(assert (<= (str.len var43E) 1))
(assert (<= (str.len var43F) 1))
(assert (= (str.++ preA (str.++ stem43 sufA)) (str.++ unch143A (str.++ ch43A unch243A))))
(assert (= (str.++ preB (str.++ stem43 sufB)) (str.++ unch143B (str.++ ch43B unch243B))))
(assert (= (str.++ preC (str.++ stem43 sufC)) (str.++ unch143C (str.++ ch43C unch243C))))
(assert (= (str.++ preD (str.++ stem43 sufD)) (str.++ unch143D (str.++ ch43D unch243D))))
(assert (= (str.++ preE (str.++ stem43 sufE)) (str.++ unch143E (str.++ ch43E unch243E))))
(assert (= (str.++ preF (str.++ stem43 sufF)) (str.++ unch143F (str.++ ch43F unch243F))))
(assert (= "hadlaj" (str.++ unch143D (str.++ var43D unch243D))))
(assert (= "haZaBaj" (str.++ unch143E (str.++ var43E unch243E))))
(assert (= "haZallaj" (str.++ unch143F (str.++ var43F unch243F))))
(assert (= (str.len stem43) l43))
(assert (= (ite (= ch43A var43A) 0 1) sc43A))
(assert (= (ite (= ch43B var43B) 0 1) sc43B))
(assert (= (ite (= ch43C var43C) 0 1) sc43C))
(assert (= (ite (= ch43D var43D) 0 1) sc43D))
(assert (= (ite (= ch43E var43E) 0 1) sc43E))
(assert (= (ite (= ch43F var43F) 0 1) sc43F))
(assert (<= sc43A 1))
(assert (<= sc43B 1))
(assert (<= sc43C 1))
(assert (<= sc43D 1))
(assert (<= sc43E 1))
(assert (<= sc43F 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      0
      sc30A
      sc30B
      sc30C
      sc30D
      sc30E
      sc30F
      0
      sc31A
      sc31B
      sc31C
      sc31D
      sc31E
      sc31F
      0
      sc32A
      sc32B
      sc32C
      sc32D
      sc32E
      sc32F
      0
      sc33A
      sc33B
      sc33C
      sc33D
      sc33E
      sc33F
      0
      sc34A
      sc34B
      sc34C
      sc34D
      sc34E
      sc34F
      0
      sc35A
      sc35B
      sc35C
      sc35D
      sc35E
      sc35F
      0
      sc36A
      sc36B
      sc36C
      sc36D
      sc36E
      sc36F
      0
      sc37A
      sc37B
      sc37C
      sc37D
      sc37E
      sc37F
      0
      sc38A
      sc38B
      sc38C
      sc38D
      sc38E
      sc38F
      0
      sc39A
      sc39B
      sc39C
      sc39D
      sc39E
      sc39F
      0
      sc40A
      sc40B
      sc40C
      sc40D
      sc40E
      sc40F
      0
      sc41A
      sc41B
      sc41C
      sc41D
      sc41E
      sc41F
      0
      sc42A
      sc42B
      sc42C
      sc42D
      sc42E
      sc42F
      0
      sc43A
      sc43B
      sc43C
      sc43D
      sc43E
      sc43F)
   4))
(assert (= (+ 0
      sc0F
      sc1F
      sc2F
      sc3F
      sc4F
      sc5F
      sc6F
      sc7F
      sc8F
      sc9F
      sc10F
      sc11F
      sc12F
      sc13F
      sc14F
      sc15F
      sc16F
      sc17F
      sc18F
      sc19F
      sc20F
      sc21F
      sc22F
      sc23F
      sc24F
      sc25F
      sc26F
      sc27F
      sc28F
      sc29F
      sc30F
      sc31F
      sc32F
      sc33F
      sc34F
      sc35F
      sc36F
      sc37F
      sc38F
      sc39F
      sc40F
      sc41F
      sc42F
      sc43F)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun var30A () String)
(declare-fun var30B () String)
(declare-fun var30C () String)
(declare-fun var30D () String)
(declare-fun var30E () String)
(declare-fun var30F () String)
(declare-fun unch230A () String)
(declare-fun ch30A () String)
(declare-fun unch130A () String)
(declare-fun stem30 () String)
(declare-fun unch230B () String)
(declare-fun ch30B () String)
(declare-fun unch130B () String)
(declare-fun unch230C () String)
(declare-fun ch30C () String)
(declare-fun unch130C () String)
(declare-fun unch230D () String)
(declare-fun ch30D () String)
(declare-fun unch130D () String)
(declare-fun unch230E () String)
(declare-fun ch30E () String)
(declare-fun unch130E () String)
(declare-fun unch230F () String)
(declare-fun ch30F () String)
(declare-fun unch130F () String)
(declare-fun l30 () Int)
(declare-fun sc30A () Int)
(declare-fun sc30B () Int)
(declare-fun sc30C () Int)
(declare-fun sc30D () Int)
(declare-fun sc30E () Int)
(declare-fun sc30F () Int)
(declare-fun var31A () String)
(declare-fun var31B () String)
(declare-fun var31C () String)
(declare-fun var31D () String)
(declare-fun var31E () String)
(declare-fun var31F () String)
(declare-fun unch231A () String)
(declare-fun ch31A () String)
(declare-fun unch131A () String)
(declare-fun stem31 () String)
(declare-fun unch231B () String)
(declare-fun ch31B () String)
(declare-fun unch131B () String)
(declare-fun unch231C () String)
(declare-fun ch31C () String)
(declare-fun unch131C () String)
(declare-fun unch231D () String)
(declare-fun ch31D () String)
(declare-fun unch131D () String)
(declare-fun unch231E () String)
(declare-fun ch31E () String)
(declare-fun unch131E () String)
(declare-fun unch231F () String)
(declare-fun ch31F () String)
(declare-fun unch131F () String)
(declare-fun l31 () Int)
(declare-fun sc31A () Int)
(declare-fun sc31B () Int)
(declare-fun sc31C () Int)
(declare-fun sc31D () Int)
(declare-fun sc31E () Int)
(declare-fun sc31F () Int)
(declare-fun var32A () String)
(declare-fun var32B () String)
(declare-fun var32C () String)
(declare-fun var32D () String)
(declare-fun var32E () String)
(declare-fun var32F () String)
(declare-fun unch232A () String)
(declare-fun ch32A () String)
(declare-fun unch132A () String)
(declare-fun stem32 () String)
(declare-fun unch232B () String)
(declare-fun ch32B () String)
(declare-fun unch132B () String)
(declare-fun unch232C () String)
(declare-fun ch32C () String)
(declare-fun unch132C () String)
(declare-fun unch232D () String)
(declare-fun ch32D () String)
(declare-fun unch132D () String)
(declare-fun unch232E () String)
(declare-fun ch32E () String)
(declare-fun unch132E () String)
(declare-fun unch232F () String)
(declare-fun ch32F () String)
(declare-fun unch132F () String)
(declare-fun l32 () Int)
(declare-fun sc32A () Int)
(declare-fun sc32B () Int)
(declare-fun sc32C () Int)
(declare-fun sc32D () Int)
(declare-fun sc32E () Int)
(declare-fun sc32F () Int)
(declare-fun var33A () String)
(declare-fun var33B () String)
(declare-fun var33C () String)
(declare-fun var33D () String)
(declare-fun var33E () String)
(declare-fun var33F () String)
(declare-fun unch233A () String)
(declare-fun ch33A () String)
(declare-fun unch133A () String)
(declare-fun stem33 () String)
(declare-fun unch233B () String)
(declare-fun ch33B () String)
(declare-fun unch133B () String)
(declare-fun unch233C () String)
(declare-fun ch33C () String)
(declare-fun unch133C () String)
(declare-fun unch233D () String)
(declare-fun ch33D () String)
(declare-fun unch133D () String)
(declare-fun unch233E () String)
(declare-fun ch33E () String)
(declare-fun unch133E () String)
(declare-fun unch233F () String)
(declare-fun ch33F () String)
(declare-fun unch133F () String)
(declare-fun l33 () Int)
(declare-fun sc33A () Int)
(declare-fun sc33B () Int)
(declare-fun sc33C () Int)
(declare-fun sc33D () Int)
(declare-fun sc33E () Int)
(declare-fun sc33F () Int)
(declare-fun var34A () String)
(declare-fun var34B () String)
(declare-fun var34C () String)
(declare-fun var34D () String)
(declare-fun var34E () String)
(declare-fun var34F () String)
(declare-fun unch234A () String)
(declare-fun ch34A () String)
(declare-fun unch134A () String)
(declare-fun stem34 () String)
(declare-fun unch234B () String)
(declare-fun ch34B () String)
(declare-fun unch134B () String)
(declare-fun unch234C () String)
(declare-fun ch34C () String)
(declare-fun unch134C () String)
(declare-fun unch234D () String)
(declare-fun ch34D () String)
(declare-fun unch134D () String)
(declare-fun unch234E () String)
(declare-fun ch34E () String)
(declare-fun unch134E () String)
(declare-fun unch234F () String)
(declare-fun ch34F () String)
(declare-fun unch134F () String)
(declare-fun l34 () Int)
(declare-fun sc34A () Int)
(declare-fun sc34B () Int)
(declare-fun sc34C () Int)
(declare-fun sc34D () Int)
(declare-fun sc34E () Int)
(declare-fun sc34F () Int)
(declare-fun var35A () String)
(declare-fun var35B () String)
(declare-fun var35C () String)
(declare-fun var35D () String)
(declare-fun var35E () String)
(declare-fun var35F () String)
(declare-fun unch235A () String)
(declare-fun ch35A () String)
(declare-fun unch135A () String)
(declare-fun stem35 () String)
(declare-fun unch235B () String)
(declare-fun ch35B () String)
(declare-fun unch135B () String)
(declare-fun unch235C () String)
(declare-fun ch35C () String)
(declare-fun unch135C () String)
(declare-fun unch235D () String)
(declare-fun ch35D () String)
(declare-fun unch135D () String)
(declare-fun unch235E () String)
(declare-fun ch35E () String)
(declare-fun unch135E () String)
(declare-fun unch235F () String)
(declare-fun ch35F () String)
(declare-fun unch135F () String)
(declare-fun l35 () Int)
(declare-fun sc35A () Int)
(declare-fun sc35B () Int)
(declare-fun sc35C () Int)
(declare-fun sc35D () Int)
(declare-fun sc35E () Int)
(declare-fun sc35F () Int)
(declare-fun var36A () String)
(declare-fun var36B () String)
(declare-fun var36C () String)
(declare-fun var36D () String)
(declare-fun var36E () String)
(declare-fun var36F () String)
(declare-fun unch236A () String)
(declare-fun ch36A () String)
(declare-fun unch136A () String)
(declare-fun stem36 () String)
(declare-fun unch236B () String)
(declare-fun ch36B () String)
(declare-fun unch136B () String)
(declare-fun unch236C () String)
(declare-fun ch36C () String)
(declare-fun unch136C () String)
(declare-fun unch236D () String)
(declare-fun ch36D () String)
(declare-fun unch136D () String)
(declare-fun unch236E () String)
(declare-fun ch36E () String)
(declare-fun unch136E () String)
(declare-fun unch236F () String)
(declare-fun ch36F () String)
(declare-fun unch136F () String)
(declare-fun l36 () Int)
(declare-fun sc36A () Int)
(declare-fun sc36B () Int)
(declare-fun sc36C () Int)
(declare-fun sc36D () Int)
(declare-fun sc36E () Int)
(declare-fun sc36F () Int)
(declare-fun var37A () String)
(declare-fun var37B () String)
(declare-fun var37C () String)
(declare-fun var37D () String)
(declare-fun var37E () String)
(declare-fun var37F () String)
(declare-fun unch237A () String)
(declare-fun ch37A () String)
(declare-fun unch137A () String)
(declare-fun stem37 () String)
(declare-fun unch237B () String)
(declare-fun ch37B () String)
(declare-fun unch137B () String)
(declare-fun unch237C () String)
(declare-fun ch37C () String)
(declare-fun unch137C () String)
(declare-fun unch237D () String)
(declare-fun ch37D () String)
(declare-fun unch137D () String)
(declare-fun unch237E () String)
(declare-fun ch37E () String)
(declare-fun unch137E () String)
(declare-fun unch237F () String)
(declare-fun ch37F () String)
(declare-fun unch137F () String)
(declare-fun l37 () Int)
(declare-fun sc37A () Int)
(declare-fun sc37B () Int)
(declare-fun sc37C () Int)
(declare-fun sc37D () Int)
(declare-fun sc37E () Int)
(declare-fun sc37F () Int)
(declare-fun var38A () String)
(declare-fun var38B () String)
(declare-fun var38C () String)
(declare-fun var38D () String)
(declare-fun var38E () String)
(declare-fun var38F () String)
(declare-fun unch238A () String)
(declare-fun ch38A () String)
(declare-fun unch138A () String)
(declare-fun stem38 () String)
(declare-fun unch238B () String)
(declare-fun ch38B () String)
(declare-fun unch138B () String)
(declare-fun unch238C () String)
(declare-fun ch38C () String)
(declare-fun unch138C () String)
(declare-fun unch238D () String)
(declare-fun ch38D () String)
(declare-fun unch138D () String)
(declare-fun unch238E () String)
(declare-fun ch38E () String)
(declare-fun unch138E () String)
(declare-fun unch238F () String)
(declare-fun ch38F () String)
(declare-fun unch138F () String)
(declare-fun l38 () Int)
(declare-fun sc38A () Int)
(declare-fun sc38B () Int)
(declare-fun sc38C () Int)
(declare-fun sc38D () Int)
(declare-fun sc38E () Int)
(declare-fun sc38F () Int)
(declare-fun var39A () String)
(declare-fun var39B () String)
(declare-fun var39C () String)
(declare-fun var39D () String)
(declare-fun var39E () String)
(declare-fun var39F () String)
(declare-fun unch239A () String)
(declare-fun ch39A () String)
(declare-fun unch139A () String)
(declare-fun stem39 () String)
(declare-fun unch239B () String)
(declare-fun ch39B () String)
(declare-fun unch139B () String)
(declare-fun unch239C () String)
(declare-fun ch39C () String)
(declare-fun unch139C () String)
(declare-fun unch239D () String)
(declare-fun ch39D () String)
(declare-fun unch139D () String)
(declare-fun unch239E () String)
(declare-fun ch39E () String)
(declare-fun unch139E () String)
(declare-fun unch239F () String)
(declare-fun ch39F () String)
(declare-fun unch139F () String)
(declare-fun l39 () Int)
(declare-fun sc39A () Int)
(declare-fun sc39B () Int)
(declare-fun sc39C () Int)
(declare-fun sc39D () Int)
(declare-fun sc39E () Int)
(declare-fun sc39F () Int)
(declare-fun var40A () String)
(declare-fun var40B () String)
(declare-fun var40C () String)
(declare-fun var40D () String)
(declare-fun var40E () String)
(declare-fun var40F () String)
(declare-fun unch240A () String)
(declare-fun ch40A () String)
(declare-fun unch140A () String)
(declare-fun stem40 () String)
(declare-fun unch240B () String)
(declare-fun ch40B () String)
(declare-fun unch140B () String)
(declare-fun unch240C () String)
(declare-fun ch40C () String)
(declare-fun unch140C () String)
(declare-fun unch240D () String)
(declare-fun ch40D () String)
(declare-fun unch140D () String)
(declare-fun unch240E () String)
(declare-fun ch40E () String)
(declare-fun unch140E () String)
(declare-fun unch240F () String)
(declare-fun ch40F () String)
(declare-fun unch140F () String)
(declare-fun l40 () Int)
(declare-fun sc40A () Int)
(declare-fun sc40B () Int)
(declare-fun sc40C () Int)
(declare-fun sc40D () Int)
(declare-fun sc40E () Int)
(declare-fun sc40F () Int)
(declare-fun var41A () String)
(declare-fun var41B () String)
(declare-fun var41C () String)
(declare-fun var41D () String)
(declare-fun var41E () String)
(declare-fun var41F () String)
(declare-fun unch241A () String)
(declare-fun ch41A () String)
(declare-fun unch141A () String)
(declare-fun stem41 () String)
(declare-fun unch241B () String)
(declare-fun ch41B () String)
(declare-fun unch141B () String)
(declare-fun unch241C () String)
(declare-fun ch41C () String)
(declare-fun unch141C () String)
(declare-fun unch241D () String)
(declare-fun ch41D () String)
(declare-fun unch141D () String)
(declare-fun unch241E () String)
(declare-fun ch41E () String)
(declare-fun unch141E () String)
(declare-fun unch241F () String)
(declare-fun ch41F () String)
(declare-fun unch141F () String)
(declare-fun l41 () Int)
(declare-fun sc41A () Int)
(declare-fun sc41B () Int)
(declare-fun sc41C () Int)
(declare-fun sc41D () Int)
(declare-fun sc41E () Int)
(declare-fun sc41F () Int)
(declare-fun var42A () String)
(declare-fun var42B () String)
(declare-fun var42C () String)
(declare-fun var42D () String)
(declare-fun var42E () String)
(declare-fun var42F () String)
(declare-fun unch242A () String)
(declare-fun ch42A () String)
(declare-fun unch142A () String)
(declare-fun stem42 () String)
(declare-fun unch242B () String)
(declare-fun ch42B () String)
(declare-fun unch142B () String)
(declare-fun unch242C () String)
(declare-fun ch42C () String)
(declare-fun unch142C () String)
(declare-fun unch242D () String)
(declare-fun ch42D () String)
(declare-fun unch142D () String)
(declare-fun unch242E () String)
(declare-fun ch42E () String)
(declare-fun unch142E () String)
(declare-fun unch242F () String)
(declare-fun ch42F () String)
(declare-fun unch142F () String)
(declare-fun l42 () Int)
(declare-fun sc42A () Int)
(declare-fun sc42B () Int)
(declare-fun sc42C () Int)
(declare-fun sc42D () Int)
(declare-fun sc42E () Int)
(declare-fun sc42F () Int)
(declare-fun var43A () String)
(declare-fun var43B () String)
(declare-fun var43C () String)
(declare-fun var43D () String)
(declare-fun var43E () String)
(declare-fun var43F () String)
(declare-fun unch243A () String)
(declare-fun ch43A () String)
(declare-fun unch143A () String)
(declare-fun stem43 () String)
(declare-fun unch243B () String)
(declare-fun ch43B () String)
(declare-fun unch143B () String)
(declare-fun unch243C () String)
(declare-fun ch43C () String)
(declare-fun unch143C () String)
(declare-fun unch243D () String)
(declare-fun ch43D () String)
(declare-fun unch143D () String)
(declare-fun unch243E () String)
(declare-fun ch43E () String)
(declare-fun unch143E () String)
(declare-fun unch243F () String)
(declare-fun ch43F () String)
(declare-fun unch143F () String)
(declare-fun l43 () Int)
(declare-fun sc43A () Int)
(declare-fun sc43B () Int)
(declare-fun sc43C () Int)
(declare-fun sc43D () Int)
(declare-fun sc43E () Int)
(declare-fun sc43F () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= "daar" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "daarta" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "daaro" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= "gees" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "geesta" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "geeso" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= "laf" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "lafta" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "lafo" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= "lug" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "lugta" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "luOo" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= "naag" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "naagta" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "naaOo" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= "tib" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "tibta" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "tiXo" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= "sab" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "sabta" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "saXo" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= "bad" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "bada" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "baZo" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= "Bid" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "Bida" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "BiZo" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= "fee1" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "fee1a" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "fee2o" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= "3iir" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "3iirta" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "3iiro" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= "4ul" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "4uBa" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "4ulo" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= "bil" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "biBa" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "bilo" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= "meel" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "meeBa" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "meelo" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= "kaliil" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "kaliiBa" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "kaliilo" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= "najl" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "najBa" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "najlo" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= "sun" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "sunta" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "sumo" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= "laan" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "laanta" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "laamo" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= "sin" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "sinta" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "simo" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= "dan" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "danta" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "dano" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= "daan" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "daanta" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "daano" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= "saan" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "saanta" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "saano" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= "nirig" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "nirigta" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "nirgo" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= "gaXa1" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= "gaXa1a" (str.++ unch123B (str.++ var23B unch223B))))
(assert (= "gab1o" (str.++ unch123C (str.++ var23C unch223C))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= "hoOol" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= "hoOoBa" (str.++ unch124B (str.++ var24B unch224B))))
(assert (= "hoglo" (str.++ unch124C (str.++ var24C unch224C))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= "baOal" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= "baOaBa" (str.++ unch125B (str.++ var25B unch225B))))
(assert (= "baglo" (str.++ unch125C (str.++ var25C unch225C))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= "wa5ar" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= "wa5arta" (str.++ unch126B (str.++ var26B unch226B))))
(assert (= "wa5aro" (str.++ unch126C (str.++ var26C unch226C))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= "irbad" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= "irbada" (str.++ unch127B (str.++ var27B unch227B))))
(assert (= "irbaZo" (str.++ unch127C (str.++ var27C unch227C))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= "kefed" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= "kefeda" (str.++ unch128B (str.++ var28B unch228B))))
(assert (= "kefeZo" (str.++ unch128C (str.++ var28C unch228C))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= "Bilin" (str.++ unch129A (str.++ var29A unch229A))))
(assert (= "Bilinta" (str.++ unch129B (str.++ var29B unch229B))))
(assert (= "Bilino" (str.++ unch129C (str.++ var29C unch229C))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= (str.len var30A) 1))
(assert (<= (str.len var30B) 1))
(assert (<= (str.len var30C) 1))
(assert (<= (str.len var30D) 1))
(assert (<= (str.len var30E) 1))
(assert (<= (str.len var30F) 1))
(assert (= (str.++ preA (str.++ stem30 sufA)) (str.++ unch130A (str.++ ch30A unch230A))))
(assert (= (str.++ preB (str.++ stem30 sufB)) (str.++ unch130B (str.++ ch30B unch230B))))
(assert (= (str.++ preC (str.++ stem30 sufC)) (str.++ unch130C (str.++ ch30C unch230C))))
(assert (= (str.++ preD (str.++ stem30 sufD)) (str.++ unch130D (str.++ ch30D unch230D))))
(assert (= (str.++ preE (str.++ stem30 sufE)) (str.++ unch130E (str.++ ch30E unch230E))))
(assert (= (str.++ preF (str.++ stem30 sufF)) (str.++ unch130F (str.++ ch30F unch230F))))
(assert (= "bohol" (str.++ unch130A (str.++ var30A unch230A))))
(assert (= "bohoBa" (str.++ unch130B (str.++ var30B unch230B))))
(assert (= "boholo" (str.++ unch130C (str.++ var30C unch230C))))
(assert (= (str.len stem30) l30))
(assert (= (ite (= ch30A var30A) 0 1) sc30A))
(assert (= (ite (= ch30B var30B) 0 1) sc30B))
(assert (= (ite (= ch30C var30C) 0 1) sc30C))
(assert (= (ite (= ch30D var30D) 0 1) sc30D))
(assert (= (ite (= ch30E var30E) 0 1) sc30E))
(assert (= (ite (= ch30F var30F) 0 1) sc30F))
(assert (<= sc30A 1))
(assert (<= sc30B 1))
(assert (<= sc30C 1))
(assert (<= sc30D 1))
(assert (<= sc30E 1))
(assert (<= sc30F 1))
(assert (<= (str.len var31A) 1))
(assert (<= (str.len var31B) 1))
(assert (<= (str.len var31C) 1))
(assert (<= (str.len var31D) 1))
(assert (<= (str.len var31E) 1))
(assert (<= (str.len var31F) 1))
(assert (= (str.++ preA (str.++ stem31 sufA)) (str.++ unch131A (str.++ ch31A unch231A))))
(assert (= (str.++ preB (str.++ stem31 sufB)) (str.++ unch131B (str.++ ch31B unch231B))))
(assert (= (str.++ preC (str.++ stem31 sufC)) (str.++ unch131C (str.++ ch31C unch231C))))
(assert (= (str.++ preD (str.++ stem31 sufD)) (str.++ unch131D (str.++ ch31D unch231D))))
(assert (= (str.++ preE (str.++ stem31 sufE)) (str.++ unch131E (str.++ ch31E unch231E))))
(assert (= (str.++ preF (str.++ stem31 sufF)) (str.++ unch131F (str.++ ch31F unch231F))))
(assert (= "4aajad" (str.++ unch131A (str.++ var31A unch231A))))
(assert (= "4aajada" (str.++ unch131B (str.++ var31B unch231B))))
(assert (= "4aajaZo" (str.++ unch131C (str.++ var31C unch231C))))
(assert (= (str.len stem31) l31))
(assert (= (ite (= ch31A var31A) 0 1) sc31A))
(assert (= (ite (= ch31B var31B) 0 1) sc31B))
(assert (= (ite (= ch31C var31C) 0 1) sc31C))
(assert (= (ite (= ch31D var31D) 0 1) sc31D))
(assert (= (ite (= ch31E var31E) 0 1) sc31E))
(assert (= (ite (= ch31F var31F) 0 1) sc31F))
(assert (<= sc31A 1))
(assert (<= sc31B 1))
(assert (<= sc31C 1))
(assert (<= sc31D 1))
(assert (<= sc31E 1))
(assert (<= sc31F 1))
(assert (<= (str.len var32A) 1))
(assert (<= (str.len var32B) 1))
(assert (<= (str.len var32C) 1))
(assert (<= (str.len var32D) 1))
(assert (<= (str.len var32E) 1))
(assert (<= (str.len var32F) 1))
(assert (= (str.++ preA (str.++ stem32 sufA)) (str.++ unch132A (str.++ ch32A unch232A))))
(assert (= (str.++ preB (str.++ stem32 sufB)) (str.++ unch132B (str.++ ch32B unch232B))))
(assert (= (str.++ preC (str.++ stem32 sufC)) (str.++ unch132C (str.++ ch32C unch232C))))
(assert (= (str.++ preD (str.++ stem32 sufD)) (str.++ unch132D (str.++ ch32D unch232D))))
(assert (= (str.++ preE (str.++ stem32 sufE)) (str.++ unch132E (str.++ ch32E unch232E))))
(assert (= (str.++ preF (str.++ stem32 sufF)) (str.++ unch132F (str.++ ch32F unch232F))))
(assert (= "ga3an" (str.++ unch132A (str.++ var32A unch232A))))
(assert (= "ga3anta" (str.++ unch132B (str.++ var32B unch232B))))
(assert (= "ga3mo" (str.++ unch132C (str.++ var32C unch232C))))
(assert (= (str.len stem32) l32))
(assert (= (ite (= ch32A var32A) 0 1) sc32A))
(assert (= (ite (= ch32B var32B) 0 1) sc32B))
(assert (= (ite (= ch32C var32C) 0 1) sc32C))
(assert (= (ite (= ch32D var32D) 0 1) sc32D))
(assert (= (ite (= ch32E var32E) 0 1) sc32E))
(assert (= (ite (= ch32F var32F) 0 1) sc32F))
(assert (<= sc32A 1))
(assert (<= sc32B 1))
(assert (<= sc32C 1))
(assert (<= sc32D 1))
(assert (<= sc32E 1))
(assert (<= sc32F 1))
(assert (<= (str.len var33A) 1))
(assert (<= (str.len var33B) 1))
(assert (<= (str.len var33C) 1))
(assert (<= (str.len var33D) 1))
(assert (<= (str.len var33E) 1))
(assert (<= (str.len var33F) 1))
(assert (= (str.++ preA (str.++ stem33 sufA)) (str.++ unch133A (str.++ ch33A unch233A))))
(assert (= (str.++ preB (str.++ stem33 sufB)) (str.++ unch133B (str.++ ch33B unch233B))))
(assert (= (str.++ preC (str.++ stem33 sufC)) (str.++ unch133C (str.++ ch33C unch233C))))
(assert (= (str.++ preD (str.++ stem33 sufD)) (str.++ unch133D (str.++ ch33D unch233D))))
(assert (= (str.++ preE (str.++ stem33 sufE)) (str.++ unch133E (str.++ ch33E unch233E))))
(assert (= (str.++ preF (str.++ stem33 sufF)) (str.++ unch133F (str.++ ch33F unch233F))))
(assert (= "4inan" (str.++ unch133A (str.++ var33A unch233A))))
(assert (= "4inanta" (str.++ unch133B (str.++ var33B unch233B))))
(assert (= "4inano" (str.++ unch133C (str.++ var33C unch233C))))
(assert (= (str.len stem33) l33))
(assert (= (ite (= ch33A var33A) 0 1) sc33A))
(assert (= (ite (= ch33B var33B) 0 1) sc33B))
(assert (= (ite (= ch33C var33C) 0 1) sc33C))
(assert (= (ite (= ch33D var33D) 0 1) sc33D))
(assert (= (ite (= ch33E var33E) 0 1) sc33E))
(assert (= (ite (= ch33F var33F) 0 1) sc33F))
(assert (<= sc33A 1))
(assert (<= sc33B 1))
(assert (<= sc33C 1))
(assert (<= sc33D 1))
(assert (<= sc33E 1))
(assert (<= sc33F 1))
(assert (<= (str.len var34A) 1))
(assert (<= (str.len var34B) 1))
(assert (<= (str.len var34C) 1))
(assert (<= (str.len var34D) 1))
(assert (<= (str.len var34E) 1))
(assert (<= (str.len var34F) 1))
(assert (= (str.++ preA (str.++ stem34 sufA)) (str.++ unch134A (str.++ ch34A unch234A))))
(assert (= (str.++ preB (str.++ stem34 sufB)) (str.++ unch134B (str.++ ch34B unch234B))))
(assert (= (str.++ preC (str.++ stem34 sufC)) (str.++ unch134C (str.++ ch34C unch234C))))
(assert (= (str.++ preD (str.++ stem34 sufD)) (str.++ unch134D (str.++ ch34D unch234D))))
(assert (= (str.++ preE (str.++ stem34 sufE)) (str.++ unch134E (str.++ ch34E unch234E))))
(assert (= (str.++ preF (str.++ stem34 sufF)) (str.++ unch134F (str.++ ch34F unch234F))))
(assert (= "suOaj" (str.++ unch134D (str.++ var34D unch234D))))
(assert (= "sugtaj" (str.++ unch134E (str.++ var34E unch234E))))
(assert (= "sugnaj" (str.++ unch134F (str.++ var34F unch234F))))
(assert (= (str.len stem34) l34))
(assert (= (ite (= ch34A var34A) 0 1) sc34A))
(assert (= (ite (= ch34B var34B) 0 1) sc34B))
(assert (= (ite (= ch34C var34C) 0 1) sc34C))
(assert (= (ite (= ch34D var34D) 0 1) sc34D))
(assert (= (ite (= ch34E var34E) 0 1) sc34E))
(assert (= (ite (= ch34F var34F) 0 1) sc34F))
(assert (<= sc34A 1))
(assert (<= sc34B 1))
(assert (<= sc34C 1))
(assert (<= sc34D 1))
(assert (<= sc34E 1))
(assert (<= sc34F 1))
(assert (<= (str.len var35A) 1))
(assert (<= (str.len var35B) 1))
(assert (<= (str.len var35C) 1))
(assert (<= (str.len var35D) 1))
(assert (<= (str.len var35E) 1))
(assert (<= (str.len var35F) 1))
(assert (= (str.++ preA (str.++ stem35 sufA)) (str.++ unch135A (str.++ ch35A unch235A))))
(assert (= (str.++ preB (str.++ stem35 sufB)) (str.++ unch135B (str.++ ch35B unch235B))))
(assert (= (str.++ preC (str.++ stem35 sufC)) (str.++ unch135C (str.++ ch35C unch235C))))
(assert (= (str.++ preD (str.++ stem35 sufD)) (str.++ unch135D (str.++ ch35D unch235D))))
(assert (= (str.++ preE (str.++ stem35 sufE)) (str.++ unch135E (str.++ ch35E unch235E))))
(assert (= (str.++ preF (str.++ stem35 sufF)) (str.++ unch135F (str.++ ch35F unch235F))))
(assert (= "kaXaj" (str.++ unch135D (str.++ var35D unch235D))))
(assert (= "kabtaj" (str.++ unch135E (str.++ var35E unch235E))))
(assert (= "kabnaj" (str.++ unch135F (str.++ var35F unch235F))))
(assert (= (str.len stem35) l35))
(assert (= (ite (= ch35A var35A) 0 1) sc35A))
(assert (= (ite (= ch35B var35B) 0 1) sc35B))
(assert (= (ite (= ch35C var35C) 0 1) sc35C))
(assert (= (ite (= ch35D var35D) 0 1) sc35D))
(assert (= (ite (= ch35E var35E) 0 1) sc35E))
(assert (= (ite (= ch35F var35F) 0 1) sc35F))
(assert (<= sc35A 1))
(assert (<= sc35B 1))
(assert (<= sc35C 1))
(assert (<= sc35D 1))
(assert (<= sc35E 1))
(assert (<= sc35F 1))
(assert (<= (str.len var36A) 1))
(assert (<= (str.len var36B) 1))
(assert (<= (str.len var36C) 1))
(assert (<= (str.len var36D) 1))
(assert (<= (str.len var36E) 1))
(assert (<= (str.len var36F) 1))
(assert (= (str.++ preA (str.++ stem36 sufA)) (str.++ unch136A (str.++ ch36A unch236A))))
(assert (= (str.++ preB (str.++ stem36 sufB)) (str.++ unch136B (str.++ ch36B unch236B))))
(assert (= (str.++ preC (str.++ stem36 sufC)) (str.++ unch136C (str.++ ch36C unch236C))))
(assert (= (str.++ preD (str.++ stem36 sufD)) (str.++ unch136D (str.++ ch36D unch236D))))
(assert (= (str.++ preE (str.++ stem36 sufE)) (str.++ unch136E (str.++ ch36E unch236E))))
(assert (= (str.++ preF (str.++ stem36 sufF)) (str.++ unch136F (str.++ ch36F unch236F))))
(assert (= "siZaj" (str.++ unch136D (str.++ var36D unch236D))))
(assert (= "sidaj" (str.++ unch136E (str.++ var36E unch236E))))
(assert (= "sidnaj" (str.++ unch136F (str.++ var36F unch236F))))
(assert (= (str.len stem36) l36))
(assert (= (ite (= ch36A var36A) 0 1) sc36A))
(assert (= (ite (= ch36B var36B) 0 1) sc36B))
(assert (= (ite (= ch36C var36C) 0 1) sc36C))
(assert (= (ite (= ch36D var36D) 0 1) sc36D))
(assert (= (ite (= ch36E var36E) 0 1) sc36E))
(assert (= (ite (= ch36F var36F) 0 1) sc36F))
(assert (<= sc36A 1))
(assert (<= sc36B 1))
(assert (<= sc36C 1))
(assert (<= sc36D 1))
(assert (<= sc36E 1))
(assert (<= sc36F 1))
(assert (<= (str.len var37A) 1))
(assert (<= (str.len var37B) 1))
(assert (<= (str.len var37C) 1))
(assert (<= (str.len var37D) 1))
(assert (<= (str.len var37E) 1))
(assert (<= (str.len var37F) 1))
(assert (= (str.++ preA (str.++ stem37 sufA)) (str.++ unch137A (str.++ ch37A unch237A))))
(assert (= (str.++ preB (str.++ stem37 sufB)) (str.++ unch137B (str.++ ch37B unch237B))))
(assert (= (str.++ preC (str.++ stem37 sufC)) (str.++ unch137C (str.++ ch37C unch237C))))
(assert (= (str.++ preD (str.++ stem37 sufD)) (str.++ unch137D (str.++ ch37D unch237D))))
(assert (= (str.++ preE (str.++ stem37 sufE)) (str.++ unch137E (str.++ ch37E unch237E))))
(assert (= (str.++ preF (str.++ stem37 sufF)) (str.++ unch137F (str.++ ch37F unch237F))))
(assert (= "dilaj" (str.++ unch137D (str.++ var37D unch237D))))
(assert (= "diBaj" (str.++ unch137E (str.++ var37E unch237E))))
(assert (= "dillaj" (str.++ unch137F (str.++ var37F unch237F))))
(assert (= (str.len stem37) l37))
(assert (= (ite (= ch37A var37A) 0 1) sc37A))
(assert (= (ite (= ch37B var37B) 0 1) sc37B))
(assert (= (ite (= ch37C var37C) 0 1) sc37C))
(assert (= (ite (= ch37D var37D) 0 1) sc37D))
(assert (= (ite (= ch37E var37E) 0 1) sc37E))
(assert (= (ite (= ch37F var37F) 0 1) sc37F))
(assert (<= sc37A 1))
(assert (<= sc37B 1))
(assert (<= sc37C 1))
(assert (<= sc37D 1))
(assert (<= sc37E 1))
(assert (<= sc37F 1))
(assert (<= (str.len var38A) 1))
(assert (<= (str.len var38B) 1))
(assert (<= (str.len var38C) 1))
(assert (<= (str.len var38D) 1))
(assert (<= (str.len var38E) 1))
(assert (<= (str.len var38F) 1))
(assert (= (str.++ preA (str.++ stem38 sufA)) (str.++ unch138A (str.++ ch38A unch238A))))
(assert (= (str.++ preB (str.++ stem38 sufB)) (str.++ unch138B (str.++ ch38B unch238B))))
(assert (= (str.++ preC (str.++ stem38 sufC)) (str.++ unch138C (str.++ ch38C unch238C))))
(assert (= (str.++ preD (str.++ stem38 sufD)) (str.++ unch138D (str.++ ch38D unch238D))))
(assert (= (str.++ preE (str.++ stem38 sufE)) (str.++ unch138E (str.++ ch38E unch238E))))
(assert (= (str.++ preF (str.++ stem38 sufF)) (str.++ unch138F (str.++ ch38F unch238F))))
(assert (= "ganaj" (str.++ unch138D (str.++ var38D unch238D))))
(assert (= "gantaj" (str.++ unch138E (str.++ var38E unch238E))))
(assert (= "gannaj" (str.++ unch138F (str.++ var38F unch238F))))
(assert (= (str.len stem38) l38))
(assert (= (ite (= ch38A var38A) 0 1) sc38A))
(assert (= (ite (= ch38B var38B) 0 1) sc38B))
(assert (= (ite (= ch38C var38C) 0 1) sc38C))
(assert (= (ite (= ch38D var38D) 0 1) sc38D))
(assert (= (ite (= ch38E var38E) 0 1) sc38E))
(assert (= (ite (= ch38F var38F) 0 1) sc38F))
(assert (<= sc38A 1))
(assert (<= sc38B 1))
(assert (<= sc38C 1))
(assert (<= sc38D 1))
(assert (<= sc38E 1))
(assert (<= sc38F 1))
(assert (<= (str.len var39A) 1))
(assert (<= (str.len var39B) 1))
(assert (<= (str.len var39C) 1))
(assert (<= (str.len var39D) 1))
(assert (<= (str.len var39E) 1))
(assert (<= (str.len var39F) 1))
(assert (= (str.++ preA (str.++ stem39 sufA)) (str.++ unch139A (str.++ ch39A unch239A))))
(assert (= (str.++ preB (str.++ stem39 sufB)) (str.++ unch139B (str.++ ch39B unch239B))))
(assert (= (str.++ preC (str.++ stem39 sufC)) (str.++ unch139C (str.++ ch39C unch239C))))
(assert (= (str.++ preD (str.++ stem39 sufD)) (str.++ unch139D (str.++ ch39D unch239D))))
(assert (= (str.++ preE (str.++ stem39 sufE)) (str.++ unch139E (str.++ ch39E unch239E))))
(assert (= (str.++ preF (str.++ stem39 sufF)) (str.++ unch139F (str.++ ch39F unch239F))))
(assert (= "tumaj" (str.++ unch139D (str.++ var39D unch239D))))
(assert (= "tuntaj" (str.++ unch139E (str.++ var39E unch239E))))
(assert (= "tunnaj" (str.++ unch139F (str.++ var39F unch239F))))
(assert (= (str.len stem39) l39))
(assert (= (ite (= ch39A var39A) 0 1) sc39A))
(assert (= (ite (= ch39B var39B) 0 1) sc39B))
(assert (= (ite (= ch39C var39C) 0 1) sc39C))
(assert (= (ite (= ch39D var39D) 0 1) sc39D))
(assert (= (ite (= ch39E var39E) 0 1) sc39E))
(assert (= (ite (= ch39F var39F) 0 1) sc39F))
(assert (<= sc39A 1))
(assert (<= sc39B 1))
(assert (<= sc39C 1))
(assert (<= sc39D 1))
(assert (<= sc39E 1))
(assert (<= sc39F 1))
(assert (<= (str.len var40A) 1))
(assert (<= (str.len var40B) 1))
(assert (<= (str.len var40C) 1))
(assert (<= (str.len var40D) 1))
(assert (<= (str.len var40E) 1))
(assert (<= (str.len var40F) 1))
(assert (= (str.++ preA (str.++ stem40 sufA)) (str.++ unch140A (str.++ ch40A unch240A))))
(assert (= (str.++ preB (str.++ stem40 sufB)) (str.++ unch140B (str.++ ch40B unch240B))))
(assert (= (str.++ preC (str.++ stem40 sufC)) (str.++ unch140C (str.++ ch40C unch240C))))
(assert (= (str.++ preD (str.++ stem40 sufD)) (str.++ unch140D (str.++ ch40D unch240D))))
(assert (= (str.++ preE (str.++ stem40 sufE)) (str.++ unch140E (str.++ ch40E unch240E))))
(assert (= (str.++ preF (str.++ stem40 sufF)) (str.++ unch140F (str.++ ch40F unch240F))))
(assert (= "argaj" (str.++ unch140D (str.++ var40D unch240D))))
(assert (= "aragtaj" (str.++ unch140E (str.++ var40E unch240E))))
(assert (= "aragnaj" (str.++ unch140F (str.++ var40F unch240F))))
(assert (= (str.len stem40) l40))
(assert (= (ite (= ch40A var40A) 0 1) sc40A))
(assert (= (ite (= ch40B var40B) 0 1) sc40B))
(assert (= (ite (= ch40C var40C) 0 1) sc40C))
(assert (= (ite (= ch40D var40D) 0 1) sc40D))
(assert (= (ite (= ch40E var40E) 0 1) sc40E))
(assert (= (ite (= ch40F var40F) 0 1) sc40F))
(assert (<= sc40A 1))
(assert (<= sc40B 1))
(assert (<= sc40C 1))
(assert (<= sc40D 1))
(assert (<= sc40E 1))
(assert (<= sc40F 1))
(assert (<= (str.len var41A) 1))
(assert (<= (str.len var41B) 1))
(assert (<= (str.len var41C) 1))
(assert (<= (str.len var41D) 1))
(assert (<= (str.len var41E) 1))
(assert (<= (str.len var41F) 1))
(assert (= (str.++ preA (str.++ stem41 sufA)) (str.++ unch141A (str.++ ch41A unch241A))))
(assert (= (str.++ preB (str.++ stem41 sufB)) (str.++ unch141B (str.++ ch41B unch241B))))
(assert (= (str.++ preC (str.++ stem41 sufC)) (str.++ unch141C (str.++ ch41C unch241C))))
(assert (= (str.++ preD (str.++ stem41 sufD)) (str.++ unch141D (str.++ ch41D unch241D))))
(assert (= (str.++ preE (str.++ stem41 sufE)) (str.++ unch141E (str.++ ch41E unch241E))))
(assert (= (str.++ preF (str.++ stem41 sufF)) (str.++ unch141F (str.++ ch41F unch241F))))
(assert (= "gudbaj" (str.++ unch141D (str.++ var41D unch241D))))
(assert (= "guZubtaj" (str.++ unch141E (str.++ var41E unch241E))))
(assert (= "guZubnaj" (str.++ unch141F (str.++ var41F unch241F))))
(assert (= (str.len stem41) l41))
(assert (= (ite (= ch41A var41A) 0 1) sc41A))
(assert (= (ite (= ch41B var41B) 0 1) sc41B))
(assert (= (ite (= ch41C var41C) 0 1) sc41C))
(assert (= (ite (= ch41D var41D) 0 1) sc41D))
(assert (= (ite (= ch41E var41E) 0 1) sc41E))
(assert (= (ite (= ch41F var41F) 0 1) sc41F))
(assert (<= sc41A 1))
(assert (<= sc41B 1))
(assert (<= sc41C 1))
(assert (<= sc41D 1))
(assert (<= sc41E 1))
(assert (<= sc41F 1))
(assert (<= (str.len var42A) 1))
(assert (<= (str.len var42B) 1))
(assert (<= (str.len var42C) 1))
(assert (<= (str.len var42D) 1))
(assert (<= (str.len var42E) 1))
(assert (<= (str.len var42F) 1))
(assert (= (str.++ preA (str.++ stem42 sufA)) (str.++ unch142A (str.++ ch42A unch242A))))
(assert (= (str.++ preB (str.++ stem42 sufB)) (str.++ unch142B (str.++ ch42B unch242B))))
(assert (= (str.++ preC (str.++ stem42 sufC)) (str.++ unch142C (str.++ ch42C unch242C))))
(assert (= (str.++ preD (str.++ stem42 sufD)) (str.++ unch142D (str.++ ch42D unch242D))))
(assert (= (str.++ preE (str.++ stem42 sufE)) (str.++ unch142E (str.++ ch42E unch242E))))
(assert (= (str.++ preF (str.++ stem42 sufF)) (str.++ unch142F (str.++ ch42F unch242F))))
(assert (= "qoslaj" (str.++ unch142D (str.++ var42D unch242D))))
(assert (= "qosoBaj" (str.++ unch142E (str.++ var42E unch242E))))
(assert (= "qosollaj" (str.++ unch142F (str.++ var42F unch242F))))
(assert (= (str.len stem42) l42))
(assert (= (ite (= ch42A var42A) 0 1) sc42A))
(assert (= (ite (= ch42B var42B) 0 1) sc42B))
(assert (= (ite (= ch42C var42C) 0 1) sc42C))
(assert (= (ite (= ch42D var42D) 0 1) sc42D))
(assert (= (ite (= ch42E var42E) 0 1) sc42E))
(assert (= (ite (= ch42F var42F) 0 1) sc42F))
(assert (<= sc42A 1))
(assert (<= sc42B 1))
(assert (<= sc42C 1))
(assert (<= sc42D 1))
(assert (<= sc42E 1))
(assert (<= sc42F 1))
(assert (<= (str.len var43A) 1))
(assert (<= (str.len var43B) 1))
(assert (<= (str.len var43C) 1))
(assert (<= (str.len var43D) 1))
(assert (<= (str.len var43E) 1))
(assert (<= (str.len var43F) 1))
(assert (= (str.++ preA (str.++ stem43 sufA)) (str.++ unch143A (str.++ ch43A unch243A))))
(assert (= (str.++ preB (str.++ stem43 sufB)) (str.++ unch143B (str.++ ch43B unch243B))))
(assert (= (str.++ preC (str.++ stem43 sufC)) (str.++ unch143C (str.++ ch43C unch243C))))
(assert (= (str.++ preD (str.++ stem43 sufD)) (str.++ unch143D (str.++ ch43D unch243D))))
(assert (= (str.++ preE (str.++ stem43 sufE)) (str.++ unch143E (str.++ ch43E unch243E))))
(assert (= (str.++ preF (str.++ stem43 sufF)) (str.++ unch143F (str.++ ch43F unch243F))))
(assert (= "hadlaj" (str.++ unch143D (str.++ var43D unch243D))))
(assert (= "haZaBaj" (str.++ unch143E (str.++ var43E unch243E))))
(assert (= "haZallaj" (str.++ unch143F (str.++ var43F unch243F))))
(assert (= (str.len stem43) l43))
(assert (= (ite (= ch43A var43A) 0 1) sc43A))
(assert (= (ite (= ch43B var43B) 0 1) sc43B))
(assert (= (ite (= ch43C var43C) 0 1) sc43C))
(assert (= (ite (= ch43D var43D) 0 1) sc43D))
(assert (= (ite (= ch43E var43E) 0 1) sc43E))
(assert (= (ite (= ch43F var43F) 0 1) sc43F))
(assert (<= sc43A 1))
(assert (<= sc43B 1))
(assert (<= sc43C 1))
(assert (<= sc43D 1))
(assert (<= sc43E 1))
(assert (<= sc43F 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      0
      sc30A
      sc30B
      sc30C
      sc30D
      sc30E
      sc30F
      0
      sc31A
      sc31B
      sc31C
      sc31D
      sc31E
      sc31F
      0
      sc32A
      sc32B
      sc32C
      sc32D
      sc32E
      sc32F
      0
      sc33A
      sc33B
      sc33C
      sc33D
      sc33E
      sc33F
      0
      sc34A
      sc34B
      sc34C
      sc34D
      sc34E
      sc34F
      0
      sc35A
      sc35B
      sc35C
      sc35D
      sc35E
      sc35F
      0
      sc36A
      sc36B
      sc36C
      sc36D
      sc36E
      sc36F
      0
      sc37A
      sc37B
      sc37C
      sc37D
      sc37E
      sc37F
      0
      sc38A
      sc38B
      sc38C
      sc38D
      sc38E
      sc38F
      0
      sc39A
      sc39B
      sc39C
      sc39D
      sc39E
      sc39F
      0
      sc40A
      sc40B
      sc40C
      sc40D
      sc40E
      sc40F
      0
      sc41A
      sc41B
      sc41C
      sc41D
      sc41E
      sc41F
      0
      sc42A
      sc42B
      sc42C
      sc42D
      sc42E
      sc42F
      0
      sc43A
      sc43B
      sc43C
      sc43D
      sc43E
      sc43F)
   5))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A
      sc17A
      sc18A
      sc19A
      sc20A
      sc21A
      sc22A
      sc23A
      sc24A
      sc25A
      sc26A
      sc27A
      sc28A
      sc29A
      sc30A
      sc31A
      sc32A
      sc33A
      sc34A
      sc35A
      sc36A
      sc37A
      sc38A
      sc39A
      sc40A
      sc41A
      sc42A
      sc43A)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun var30A () String)
(declare-fun var30B () String)
(declare-fun var30C () String)
(declare-fun var30D () String)
(declare-fun var30E () String)
(declare-fun var30F () String)
(declare-fun unch230A () String)
(declare-fun ch30A () String)
(declare-fun unch130A () String)
(declare-fun stem30 () String)
(declare-fun unch230B () String)
(declare-fun ch30B () String)
(declare-fun unch130B () String)
(declare-fun unch230C () String)
(declare-fun ch30C () String)
(declare-fun unch130C () String)
(declare-fun unch230D () String)
(declare-fun ch30D () String)
(declare-fun unch130D () String)
(declare-fun unch230E () String)
(declare-fun ch30E () String)
(declare-fun unch130E () String)
(declare-fun unch230F () String)
(declare-fun ch30F () String)
(declare-fun unch130F () String)
(declare-fun l30 () Int)
(declare-fun sc30A () Int)
(declare-fun sc30B () Int)
(declare-fun sc30C () Int)
(declare-fun sc30D () Int)
(declare-fun sc30E () Int)
(declare-fun sc30F () Int)
(declare-fun var31A () String)
(declare-fun var31B () String)
(declare-fun var31C () String)
(declare-fun var31D () String)
(declare-fun var31E () String)
(declare-fun var31F () String)
(declare-fun unch231A () String)
(declare-fun ch31A () String)
(declare-fun unch131A () String)
(declare-fun stem31 () String)
(declare-fun unch231B () String)
(declare-fun ch31B () String)
(declare-fun unch131B () String)
(declare-fun unch231C () String)
(declare-fun ch31C () String)
(declare-fun unch131C () String)
(declare-fun unch231D () String)
(declare-fun ch31D () String)
(declare-fun unch131D () String)
(declare-fun unch231E () String)
(declare-fun ch31E () String)
(declare-fun unch131E () String)
(declare-fun unch231F () String)
(declare-fun ch31F () String)
(declare-fun unch131F () String)
(declare-fun l31 () Int)
(declare-fun sc31A () Int)
(declare-fun sc31B () Int)
(declare-fun sc31C () Int)
(declare-fun sc31D () Int)
(declare-fun sc31E () Int)
(declare-fun sc31F () Int)
(declare-fun var32A () String)
(declare-fun var32B () String)
(declare-fun var32C () String)
(declare-fun var32D () String)
(declare-fun var32E () String)
(declare-fun var32F () String)
(declare-fun unch232A () String)
(declare-fun ch32A () String)
(declare-fun unch132A () String)
(declare-fun stem32 () String)
(declare-fun unch232B () String)
(declare-fun ch32B () String)
(declare-fun unch132B () String)
(declare-fun unch232C () String)
(declare-fun ch32C () String)
(declare-fun unch132C () String)
(declare-fun unch232D () String)
(declare-fun ch32D () String)
(declare-fun unch132D () String)
(declare-fun unch232E () String)
(declare-fun ch32E () String)
(declare-fun unch132E () String)
(declare-fun unch232F () String)
(declare-fun ch32F () String)
(declare-fun unch132F () String)
(declare-fun l32 () Int)
(declare-fun sc32A () Int)
(declare-fun sc32B () Int)
(declare-fun sc32C () Int)
(declare-fun sc32D () Int)
(declare-fun sc32E () Int)
(declare-fun sc32F () Int)
(declare-fun var33A () String)
(declare-fun var33B () String)
(declare-fun var33C () String)
(declare-fun var33D () String)
(declare-fun var33E () String)
(declare-fun var33F () String)
(declare-fun unch233A () String)
(declare-fun ch33A () String)
(declare-fun unch133A () String)
(declare-fun stem33 () String)
(declare-fun unch233B () String)
(declare-fun ch33B () String)
(declare-fun unch133B () String)
(declare-fun unch233C () String)
(declare-fun ch33C () String)
(declare-fun unch133C () String)
(declare-fun unch233D () String)
(declare-fun ch33D () String)
(declare-fun unch133D () String)
(declare-fun unch233E () String)
(declare-fun ch33E () String)
(declare-fun unch133E () String)
(declare-fun unch233F () String)
(declare-fun ch33F () String)
(declare-fun unch133F () String)
(declare-fun l33 () Int)
(declare-fun sc33A () Int)
(declare-fun sc33B () Int)
(declare-fun sc33C () Int)
(declare-fun sc33D () Int)
(declare-fun sc33E () Int)
(declare-fun sc33F () Int)
(declare-fun var34A () String)
(declare-fun var34B () String)
(declare-fun var34C () String)
(declare-fun var34D () String)
(declare-fun var34E () String)
(declare-fun var34F () String)
(declare-fun unch234A () String)
(declare-fun ch34A () String)
(declare-fun unch134A () String)
(declare-fun stem34 () String)
(declare-fun unch234B () String)
(declare-fun ch34B () String)
(declare-fun unch134B () String)
(declare-fun unch234C () String)
(declare-fun ch34C () String)
(declare-fun unch134C () String)
(declare-fun unch234D () String)
(declare-fun ch34D () String)
(declare-fun unch134D () String)
(declare-fun unch234E () String)
(declare-fun ch34E () String)
(declare-fun unch134E () String)
(declare-fun unch234F () String)
(declare-fun ch34F () String)
(declare-fun unch134F () String)
(declare-fun l34 () Int)
(declare-fun sc34A () Int)
(declare-fun sc34B () Int)
(declare-fun sc34C () Int)
(declare-fun sc34D () Int)
(declare-fun sc34E () Int)
(declare-fun sc34F () Int)
(declare-fun var35A () String)
(declare-fun var35B () String)
(declare-fun var35C () String)
(declare-fun var35D () String)
(declare-fun var35E () String)
(declare-fun var35F () String)
(declare-fun unch235A () String)
(declare-fun ch35A () String)
(declare-fun unch135A () String)
(declare-fun stem35 () String)
(declare-fun unch235B () String)
(declare-fun ch35B () String)
(declare-fun unch135B () String)
(declare-fun unch235C () String)
(declare-fun ch35C () String)
(declare-fun unch135C () String)
(declare-fun unch235D () String)
(declare-fun ch35D () String)
(declare-fun unch135D () String)
(declare-fun unch235E () String)
(declare-fun ch35E () String)
(declare-fun unch135E () String)
(declare-fun unch235F () String)
(declare-fun ch35F () String)
(declare-fun unch135F () String)
(declare-fun l35 () Int)
(declare-fun sc35A () Int)
(declare-fun sc35B () Int)
(declare-fun sc35C () Int)
(declare-fun sc35D () Int)
(declare-fun sc35E () Int)
(declare-fun sc35F () Int)
(declare-fun var36A () String)
(declare-fun var36B () String)
(declare-fun var36C () String)
(declare-fun var36D () String)
(declare-fun var36E () String)
(declare-fun var36F () String)
(declare-fun unch236A () String)
(declare-fun ch36A () String)
(declare-fun unch136A () String)
(declare-fun stem36 () String)
(declare-fun unch236B () String)
(declare-fun ch36B () String)
(declare-fun unch136B () String)
(declare-fun unch236C () String)
(declare-fun ch36C () String)
(declare-fun unch136C () String)
(declare-fun unch236D () String)
(declare-fun ch36D () String)
(declare-fun unch136D () String)
(declare-fun unch236E () String)
(declare-fun ch36E () String)
(declare-fun unch136E () String)
(declare-fun unch236F () String)
(declare-fun ch36F () String)
(declare-fun unch136F () String)
(declare-fun l36 () Int)
(declare-fun sc36A () Int)
(declare-fun sc36B () Int)
(declare-fun sc36C () Int)
(declare-fun sc36D () Int)
(declare-fun sc36E () Int)
(declare-fun sc36F () Int)
(declare-fun var37A () String)
(declare-fun var37B () String)
(declare-fun var37C () String)
(declare-fun var37D () String)
(declare-fun var37E () String)
(declare-fun var37F () String)
(declare-fun unch237A () String)
(declare-fun ch37A () String)
(declare-fun unch137A () String)
(declare-fun stem37 () String)
(declare-fun unch237B () String)
(declare-fun ch37B () String)
(declare-fun unch137B () String)
(declare-fun unch237C () String)
(declare-fun ch37C () String)
(declare-fun unch137C () String)
(declare-fun unch237D () String)
(declare-fun ch37D () String)
(declare-fun unch137D () String)
(declare-fun unch237E () String)
(declare-fun ch37E () String)
(declare-fun unch137E () String)
(declare-fun unch237F () String)
(declare-fun ch37F () String)
(declare-fun unch137F () String)
(declare-fun l37 () Int)
(declare-fun sc37A () Int)
(declare-fun sc37B () Int)
(declare-fun sc37C () Int)
(declare-fun sc37D () Int)
(declare-fun sc37E () Int)
(declare-fun sc37F () Int)
(declare-fun var38A () String)
(declare-fun var38B () String)
(declare-fun var38C () String)
(declare-fun var38D () String)
(declare-fun var38E () String)
(declare-fun var38F () String)
(declare-fun unch238A () String)
(declare-fun ch38A () String)
(declare-fun unch138A () String)
(declare-fun stem38 () String)
(declare-fun unch238B () String)
(declare-fun ch38B () String)
(declare-fun unch138B () String)
(declare-fun unch238C () String)
(declare-fun ch38C () String)
(declare-fun unch138C () String)
(declare-fun unch238D () String)
(declare-fun ch38D () String)
(declare-fun unch138D () String)
(declare-fun unch238E () String)
(declare-fun ch38E () String)
(declare-fun unch138E () String)
(declare-fun unch238F () String)
(declare-fun ch38F () String)
(declare-fun unch138F () String)
(declare-fun l38 () Int)
(declare-fun sc38A () Int)
(declare-fun sc38B () Int)
(declare-fun sc38C () Int)
(declare-fun sc38D () Int)
(declare-fun sc38E () Int)
(declare-fun sc38F () Int)
(declare-fun var39A () String)
(declare-fun var39B () String)
(declare-fun var39C () String)
(declare-fun var39D () String)
(declare-fun var39E () String)
(declare-fun var39F () String)
(declare-fun unch239A () String)
(declare-fun ch39A () String)
(declare-fun unch139A () String)
(declare-fun stem39 () String)
(declare-fun unch239B () String)
(declare-fun ch39B () String)
(declare-fun unch139B () String)
(declare-fun unch239C () String)
(declare-fun ch39C () String)
(declare-fun unch139C () String)
(declare-fun unch239D () String)
(declare-fun ch39D () String)
(declare-fun unch139D () String)
(declare-fun unch239E () String)
(declare-fun ch39E () String)
(declare-fun unch139E () String)
(declare-fun unch239F () String)
(declare-fun ch39F () String)
(declare-fun unch139F () String)
(declare-fun l39 () Int)
(declare-fun sc39A () Int)
(declare-fun sc39B () Int)
(declare-fun sc39C () Int)
(declare-fun sc39D () Int)
(declare-fun sc39E () Int)
(declare-fun sc39F () Int)
(declare-fun var40A () String)
(declare-fun var40B () String)
(declare-fun var40C () String)
(declare-fun var40D () String)
(declare-fun var40E () String)
(declare-fun var40F () String)
(declare-fun unch240A () String)
(declare-fun ch40A () String)
(declare-fun unch140A () String)
(declare-fun stem40 () String)
(declare-fun unch240B () String)
(declare-fun ch40B () String)
(declare-fun unch140B () String)
(declare-fun unch240C () String)
(declare-fun ch40C () String)
(declare-fun unch140C () String)
(declare-fun unch240D () String)
(declare-fun ch40D () String)
(declare-fun unch140D () String)
(declare-fun unch240E () String)
(declare-fun ch40E () String)
(declare-fun unch140E () String)
(declare-fun unch240F () String)
(declare-fun ch40F () String)
(declare-fun unch140F () String)
(declare-fun l40 () Int)
(declare-fun sc40A () Int)
(declare-fun sc40B () Int)
(declare-fun sc40C () Int)
(declare-fun sc40D () Int)
(declare-fun sc40E () Int)
(declare-fun sc40F () Int)
(declare-fun var41A () String)
(declare-fun var41B () String)
(declare-fun var41C () String)
(declare-fun var41D () String)
(declare-fun var41E () String)
(declare-fun var41F () String)
(declare-fun unch241A () String)
(declare-fun ch41A () String)
(declare-fun unch141A () String)
(declare-fun stem41 () String)
(declare-fun unch241B () String)
(declare-fun ch41B () String)
(declare-fun unch141B () String)
(declare-fun unch241C () String)
(declare-fun ch41C () String)
(declare-fun unch141C () String)
(declare-fun unch241D () String)
(declare-fun ch41D () String)
(declare-fun unch141D () String)
(declare-fun unch241E () String)
(declare-fun ch41E () String)
(declare-fun unch141E () String)
(declare-fun unch241F () String)
(declare-fun ch41F () String)
(declare-fun unch141F () String)
(declare-fun l41 () Int)
(declare-fun sc41A () Int)
(declare-fun sc41B () Int)
(declare-fun sc41C () Int)
(declare-fun sc41D () Int)
(declare-fun sc41E () Int)
(declare-fun sc41F () Int)
(declare-fun var42A () String)
(declare-fun var42B () String)
(declare-fun var42C () String)
(declare-fun var42D () String)
(declare-fun var42E () String)
(declare-fun var42F () String)
(declare-fun unch242A () String)
(declare-fun ch42A () String)
(declare-fun unch142A () String)
(declare-fun stem42 () String)
(declare-fun unch242B () String)
(declare-fun ch42B () String)
(declare-fun unch142B () String)
(declare-fun unch242C () String)
(declare-fun ch42C () String)
(declare-fun unch142C () String)
(declare-fun unch242D () String)
(declare-fun ch42D () String)
(declare-fun unch142D () String)
(declare-fun unch242E () String)
(declare-fun ch42E () String)
(declare-fun unch142E () String)
(declare-fun unch242F () String)
(declare-fun ch42F () String)
(declare-fun unch142F () String)
(declare-fun l42 () Int)
(declare-fun sc42A () Int)
(declare-fun sc42B () Int)
(declare-fun sc42C () Int)
(declare-fun sc42D () Int)
(declare-fun sc42E () Int)
(declare-fun sc42F () Int)
(declare-fun var43A () String)
(declare-fun var43B () String)
(declare-fun var43C () String)
(declare-fun var43D () String)
(declare-fun var43E () String)
(declare-fun var43F () String)
(declare-fun unch243A () String)
(declare-fun ch43A () String)
(declare-fun unch143A () String)
(declare-fun stem43 () String)
(declare-fun unch243B () String)
(declare-fun ch43B () String)
(declare-fun unch143B () String)
(declare-fun unch243C () String)
(declare-fun ch43C () String)
(declare-fun unch143C () String)
(declare-fun unch243D () String)
(declare-fun ch43D () String)
(declare-fun unch143D () String)
(declare-fun unch243E () String)
(declare-fun ch43E () String)
(declare-fun unch143E () String)
(declare-fun unch243F () String)
(declare-fun ch43F () String)
(declare-fun unch143F () String)
(declare-fun l43 () Int)
(declare-fun sc43A () Int)
(declare-fun sc43B () Int)
(declare-fun sc43C () Int)
(declare-fun sc43D () Int)
(declare-fun sc43E () Int)
(declare-fun sc43F () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= "daar" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "daarta" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "daaro" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= "gees" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "geesta" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "geeso" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= "laf" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "lafta" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "lafo" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= "lug" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "lugta" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "luOo" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= "naag" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "naagta" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "naaOo" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= "tib" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "tibta" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "tiXo" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= "sab" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "sabta" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "saXo" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= "bad" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "bada" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "baZo" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= "Bid" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "Bida" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "BiZo" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= "fee1" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "fee1a" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "fee2o" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= "3iir" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "3iirta" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "3iiro" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= "4ul" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "4uBa" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "4ulo" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= "bil" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "biBa" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "bilo" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= "meel" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "meeBa" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "meelo" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= "kaliil" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "kaliiBa" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "kaliilo" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= "najl" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "najBa" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "najlo" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= "sun" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "sunta" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "sumo" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= "laan" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "laanta" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "laamo" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= "sin" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "sinta" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "simo" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= "dan" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "danta" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "dano" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= "daan" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "daanta" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "daano" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= "saan" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "saanta" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "saano" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= "nirig" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "nirigta" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "nirgo" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= "gaXa1" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= "gaXa1a" (str.++ unch123B (str.++ var23B unch223B))))
(assert (= "gab1o" (str.++ unch123C (str.++ var23C unch223C))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= "hoOol" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= "hoOoBa" (str.++ unch124B (str.++ var24B unch224B))))
(assert (= "hoglo" (str.++ unch124C (str.++ var24C unch224C))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= "baOal" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= "baOaBa" (str.++ unch125B (str.++ var25B unch225B))))
(assert (= "baglo" (str.++ unch125C (str.++ var25C unch225C))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= "wa5ar" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= "wa5arta" (str.++ unch126B (str.++ var26B unch226B))))
(assert (= "wa5aro" (str.++ unch126C (str.++ var26C unch226C))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= "irbad" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= "irbada" (str.++ unch127B (str.++ var27B unch227B))))
(assert (= "irbaZo" (str.++ unch127C (str.++ var27C unch227C))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= "kefed" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= "kefeda" (str.++ unch128B (str.++ var28B unch228B))))
(assert (= "kefeZo" (str.++ unch128C (str.++ var28C unch228C))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= "Bilin" (str.++ unch129A (str.++ var29A unch229A))))
(assert (= "Bilinta" (str.++ unch129B (str.++ var29B unch229B))))
(assert (= "Bilino" (str.++ unch129C (str.++ var29C unch229C))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= (str.len var30A) 1))
(assert (<= (str.len var30B) 1))
(assert (<= (str.len var30C) 1))
(assert (<= (str.len var30D) 1))
(assert (<= (str.len var30E) 1))
(assert (<= (str.len var30F) 1))
(assert (= (str.++ preA (str.++ stem30 sufA)) (str.++ unch130A (str.++ ch30A unch230A))))
(assert (= (str.++ preB (str.++ stem30 sufB)) (str.++ unch130B (str.++ ch30B unch230B))))
(assert (= (str.++ preC (str.++ stem30 sufC)) (str.++ unch130C (str.++ ch30C unch230C))))
(assert (= (str.++ preD (str.++ stem30 sufD)) (str.++ unch130D (str.++ ch30D unch230D))))
(assert (= (str.++ preE (str.++ stem30 sufE)) (str.++ unch130E (str.++ ch30E unch230E))))
(assert (= (str.++ preF (str.++ stem30 sufF)) (str.++ unch130F (str.++ ch30F unch230F))))
(assert (= "bohol" (str.++ unch130A (str.++ var30A unch230A))))
(assert (= "bohoBa" (str.++ unch130B (str.++ var30B unch230B))))
(assert (= "boholo" (str.++ unch130C (str.++ var30C unch230C))))
(assert (= (str.len stem30) l30))
(assert (= (ite (= ch30A var30A) 0 1) sc30A))
(assert (= (ite (= ch30B var30B) 0 1) sc30B))
(assert (= (ite (= ch30C var30C) 0 1) sc30C))
(assert (= (ite (= ch30D var30D) 0 1) sc30D))
(assert (= (ite (= ch30E var30E) 0 1) sc30E))
(assert (= (ite (= ch30F var30F) 0 1) sc30F))
(assert (<= sc30A 1))
(assert (<= sc30B 1))
(assert (<= sc30C 1))
(assert (<= sc30D 1))
(assert (<= sc30E 1))
(assert (<= sc30F 1))
(assert (<= (str.len var31A) 1))
(assert (<= (str.len var31B) 1))
(assert (<= (str.len var31C) 1))
(assert (<= (str.len var31D) 1))
(assert (<= (str.len var31E) 1))
(assert (<= (str.len var31F) 1))
(assert (= (str.++ preA (str.++ stem31 sufA)) (str.++ unch131A (str.++ ch31A unch231A))))
(assert (= (str.++ preB (str.++ stem31 sufB)) (str.++ unch131B (str.++ ch31B unch231B))))
(assert (= (str.++ preC (str.++ stem31 sufC)) (str.++ unch131C (str.++ ch31C unch231C))))
(assert (= (str.++ preD (str.++ stem31 sufD)) (str.++ unch131D (str.++ ch31D unch231D))))
(assert (= (str.++ preE (str.++ stem31 sufE)) (str.++ unch131E (str.++ ch31E unch231E))))
(assert (= (str.++ preF (str.++ stem31 sufF)) (str.++ unch131F (str.++ ch31F unch231F))))
(assert (= "4aajad" (str.++ unch131A (str.++ var31A unch231A))))
(assert (= "4aajada" (str.++ unch131B (str.++ var31B unch231B))))
(assert (= "4aajaZo" (str.++ unch131C (str.++ var31C unch231C))))
(assert (= (str.len stem31) l31))
(assert (= (ite (= ch31A var31A) 0 1) sc31A))
(assert (= (ite (= ch31B var31B) 0 1) sc31B))
(assert (= (ite (= ch31C var31C) 0 1) sc31C))
(assert (= (ite (= ch31D var31D) 0 1) sc31D))
(assert (= (ite (= ch31E var31E) 0 1) sc31E))
(assert (= (ite (= ch31F var31F) 0 1) sc31F))
(assert (<= sc31A 1))
(assert (<= sc31B 1))
(assert (<= sc31C 1))
(assert (<= sc31D 1))
(assert (<= sc31E 1))
(assert (<= sc31F 1))
(assert (<= (str.len var32A) 1))
(assert (<= (str.len var32B) 1))
(assert (<= (str.len var32C) 1))
(assert (<= (str.len var32D) 1))
(assert (<= (str.len var32E) 1))
(assert (<= (str.len var32F) 1))
(assert (= (str.++ preA (str.++ stem32 sufA)) (str.++ unch132A (str.++ ch32A unch232A))))
(assert (= (str.++ preB (str.++ stem32 sufB)) (str.++ unch132B (str.++ ch32B unch232B))))
(assert (= (str.++ preC (str.++ stem32 sufC)) (str.++ unch132C (str.++ ch32C unch232C))))
(assert (= (str.++ preD (str.++ stem32 sufD)) (str.++ unch132D (str.++ ch32D unch232D))))
(assert (= (str.++ preE (str.++ stem32 sufE)) (str.++ unch132E (str.++ ch32E unch232E))))
(assert (= (str.++ preF (str.++ stem32 sufF)) (str.++ unch132F (str.++ ch32F unch232F))))
(assert (= "ga3an" (str.++ unch132A (str.++ var32A unch232A))))
(assert (= "ga3anta" (str.++ unch132B (str.++ var32B unch232B))))
(assert (= "ga3mo" (str.++ unch132C (str.++ var32C unch232C))))
(assert (= (str.len stem32) l32))
(assert (= (ite (= ch32A var32A) 0 1) sc32A))
(assert (= (ite (= ch32B var32B) 0 1) sc32B))
(assert (= (ite (= ch32C var32C) 0 1) sc32C))
(assert (= (ite (= ch32D var32D) 0 1) sc32D))
(assert (= (ite (= ch32E var32E) 0 1) sc32E))
(assert (= (ite (= ch32F var32F) 0 1) sc32F))
(assert (<= sc32A 1))
(assert (<= sc32B 1))
(assert (<= sc32C 1))
(assert (<= sc32D 1))
(assert (<= sc32E 1))
(assert (<= sc32F 1))
(assert (<= (str.len var33A) 1))
(assert (<= (str.len var33B) 1))
(assert (<= (str.len var33C) 1))
(assert (<= (str.len var33D) 1))
(assert (<= (str.len var33E) 1))
(assert (<= (str.len var33F) 1))
(assert (= (str.++ preA (str.++ stem33 sufA)) (str.++ unch133A (str.++ ch33A unch233A))))
(assert (= (str.++ preB (str.++ stem33 sufB)) (str.++ unch133B (str.++ ch33B unch233B))))
(assert (= (str.++ preC (str.++ stem33 sufC)) (str.++ unch133C (str.++ ch33C unch233C))))
(assert (= (str.++ preD (str.++ stem33 sufD)) (str.++ unch133D (str.++ ch33D unch233D))))
(assert (= (str.++ preE (str.++ stem33 sufE)) (str.++ unch133E (str.++ ch33E unch233E))))
(assert (= (str.++ preF (str.++ stem33 sufF)) (str.++ unch133F (str.++ ch33F unch233F))))
(assert (= "4inan" (str.++ unch133A (str.++ var33A unch233A))))
(assert (= "4inanta" (str.++ unch133B (str.++ var33B unch233B))))
(assert (= "4inano" (str.++ unch133C (str.++ var33C unch233C))))
(assert (= (str.len stem33) l33))
(assert (= (ite (= ch33A var33A) 0 1) sc33A))
(assert (= (ite (= ch33B var33B) 0 1) sc33B))
(assert (= (ite (= ch33C var33C) 0 1) sc33C))
(assert (= (ite (= ch33D var33D) 0 1) sc33D))
(assert (= (ite (= ch33E var33E) 0 1) sc33E))
(assert (= (ite (= ch33F var33F) 0 1) sc33F))
(assert (<= sc33A 1))
(assert (<= sc33B 1))
(assert (<= sc33C 1))
(assert (<= sc33D 1))
(assert (<= sc33E 1))
(assert (<= sc33F 1))
(assert (<= (str.len var34A) 1))
(assert (<= (str.len var34B) 1))
(assert (<= (str.len var34C) 1))
(assert (<= (str.len var34D) 1))
(assert (<= (str.len var34E) 1))
(assert (<= (str.len var34F) 1))
(assert (= (str.++ preA (str.++ stem34 sufA)) (str.++ unch134A (str.++ ch34A unch234A))))
(assert (= (str.++ preB (str.++ stem34 sufB)) (str.++ unch134B (str.++ ch34B unch234B))))
(assert (= (str.++ preC (str.++ stem34 sufC)) (str.++ unch134C (str.++ ch34C unch234C))))
(assert (= (str.++ preD (str.++ stem34 sufD)) (str.++ unch134D (str.++ ch34D unch234D))))
(assert (= (str.++ preE (str.++ stem34 sufE)) (str.++ unch134E (str.++ ch34E unch234E))))
(assert (= (str.++ preF (str.++ stem34 sufF)) (str.++ unch134F (str.++ ch34F unch234F))))
(assert (= "suOaj" (str.++ unch134D (str.++ var34D unch234D))))
(assert (= "sugtaj" (str.++ unch134E (str.++ var34E unch234E))))
(assert (= "sugnaj" (str.++ unch134F (str.++ var34F unch234F))))
(assert (= (str.len stem34) l34))
(assert (= (ite (= ch34A var34A) 0 1) sc34A))
(assert (= (ite (= ch34B var34B) 0 1) sc34B))
(assert (= (ite (= ch34C var34C) 0 1) sc34C))
(assert (= (ite (= ch34D var34D) 0 1) sc34D))
(assert (= (ite (= ch34E var34E) 0 1) sc34E))
(assert (= (ite (= ch34F var34F) 0 1) sc34F))
(assert (<= sc34A 1))
(assert (<= sc34B 1))
(assert (<= sc34C 1))
(assert (<= sc34D 1))
(assert (<= sc34E 1))
(assert (<= sc34F 1))
(assert (<= (str.len var35A) 1))
(assert (<= (str.len var35B) 1))
(assert (<= (str.len var35C) 1))
(assert (<= (str.len var35D) 1))
(assert (<= (str.len var35E) 1))
(assert (<= (str.len var35F) 1))
(assert (= (str.++ preA (str.++ stem35 sufA)) (str.++ unch135A (str.++ ch35A unch235A))))
(assert (= (str.++ preB (str.++ stem35 sufB)) (str.++ unch135B (str.++ ch35B unch235B))))
(assert (= (str.++ preC (str.++ stem35 sufC)) (str.++ unch135C (str.++ ch35C unch235C))))
(assert (= (str.++ preD (str.++ stem35 sufD)) (str.++ unch135D (str.++ ch35D unch235D))))
(assert (= (str.++ preE (str.++ stem35 sufE)) (str.++ unch135E (str.++ ch35E unch235E))))
(assert (= (str.++ preF (str.++ stem35 sufF)) (str.++ unch135F (str.++ ch35F unch235F))))
(assert (= "kaXaj" (str.++ unch135D (str.++ var35D unch235D))))
(assert (= "kabtaj" (str.++ unch135E (str.++ var35E unch235E))))
(assert (= "kabnaj" (str.++ unch135F (str.++ var35F unch235F))))
(assert (= (str.len stem35) l35))
(assert (= (ite (= ch35A var35A) 0 1) sc35A))
(assert (= (ite (= ch35B var35B) 0 1) sc35B))
(assert (= (ite (= ch35C var35C) 0 1) sc35C))
(assert (= (ite (= ch35D var35D) 0 1) sc35D))
(assert (= (ite (= ch35E var35E) 0 1) sc35E))
(assert (= (ite (= ch35F var35F) 0 1) sc35F))
(assert (<= sc35A 1))
(assert (<= sc35B 1))
(assert (<= sc35C 1))
(assert (<= sc35D 1))
(assert (<= sc35E 1))
(assert (<= sc35F 1))
(assert (<= (str.len var36A) 1))
(assert (<= (str.len var36B) 1))
(assert (<= (str.len var36C) 1))
(assert (<= (str.len var36D) 1))
(assert (<= (str.len var36E) 1))
(assert (<= (str.len var36F) 1))
(assert (= (str.++ preA (str.++ stem36 sufA)) (str.++ unch136A (str.++ ch36A unch236A))))
(assert (= (str.++ preB (str.++ stem36 sufB)) (str.++ unch136B (str.++ ch36B unch236B))))
(assert (= (str.++ preC (str.++ stem36 sufC)) (str.++ unch136C (str.++ ch36C unch236C))))
(assert (= (str.++ preD (str.++ stem36 sufD)) (str.++ unch136D (str.++ ch36D unch236D))))
(assert (= (str.++ preE (str.++ stem36 sufE)) (str.++ unch136E (str.++ ch36E unch236E))))
(assert (= (str.++ preF (str.++ stem36 sufF)) (str.++ unch136F (str.++ ch36F unch236F))))
(assert (= "siZaj" (str.++ unch136D (str.++ var36D unch236D))))
(assert (= "sidaj" (str.++ unch136E (str.++ var36E unch236E))))
(assert (= "sidnaj" (str.++ unch136F (str.++ var36F unch236F))))
(assert (= (str.len stem36) l36))
(assert (= (ite (= ch36A var36A) 0 1) sc36A))
(assert (= (ite (= ch36B var36B) 0 1) sc36B))
(assert (= (ite (= ch36C var36C) 0 1) sc36C))
(assert (= (ite (= ch36D var36D) 0 1) sc36D))
(assert (= (ite (= ch36E var36E) 0 1) sc36E))
(assert (= (ite (= ch36F var36F) 0 1) sc36F))
(assert (<= sc36A 1))
(assert (<= sc36B 1))
(assert (<= sc36C 1))
(assert (<= sc36D 1))
(assert (<= sc36E 1))
(assert (<= sc36F 1))
(assert (<= (str.len var37A) 1))
(assert (<= (str.len var37B) 1))
(assert (<= (str.len var37C) 1))
(assert (<= (str.len var37D) 1))
(assert (<= (str.len var37E) 1))
(assert (<= (str.len var37F) 1))
(assert (= (str.++ preA (str.++ stem37 sufA)) (str.++ unch137A (str.++ ch37A unch237A))))
(assert (= (str.++ preB (str.++ stem37 sufB)) (str.++ unch137B (str.++ ch37B unch237B))))
(assert (= (str.++ preC (str.++ stem37 sufC)) (str.++ unch137C (str.++ ch37C unch237C))))
(assert (= (str.++ preD (str.++ stem37 sufD)) (str.++ unch137D (str.++ ch37D unch237D))))
(assert (= (str.++ preE (str.++ stem37 sufE)) (str.++ unch137E (str.++ ch37E unch237E))))
(assert (= (str.++ preF (str.++ stem37 sufF)) (str.++ unch137F (str.++ ch37F unch237F))))
(assert (= "dilaj" (str.++ unch137D (str.++ var37D unch237D))))
(assert (= "diBaj" (str.++ unch137E (str.++ var37E unch237E))))
(assert (= "dillaj" (str.++ unch137F (str.++ var37F unch237F))))
(assert (= (str.len stem37) l37))
(assert (= (ite (= ch37A var37A) 0 1) sc37A))
(assert (= (ite (= ch37B var37B) 0 1) sc37B))
(assert (= (ite (= ch37C var37C) 0 1) sc37C))
(assert (= (ite (= ch37D var37D) 0 1) sc37D))
(assert (= (ite (= ch37E var37E) 0 1) sc37E))
(assert (= (ite (= ch37F var37F) 0 1) sc37F))
(assert (<= sc37A 1))
(assert (<= sc37B 1))
(assert (<= sc37C 1))
(assert (<= sc37D 1))
(assert (<= sc37E 1))
(assert (<= sc37F 1))
(assert (<= (str.len var38A) 1))
(assert (<= (str.len var38B) 1))
(assert (<= (str.len var38C) 1))
(assert (<= (str.len var38D) 1))
(assert (<= (str.len var38E) 1))
(assert (<= (str.len var38F) 1))
(assert (= (str.++ preA (str.++ stem38 sufA)) (str.++ unch138A (str.++ ch38A unch238A))))
(assert (= (str.++ preB (str.++ stem38 sufB)) (str.++ unch138B (str.++ ch38B unch238B))))
(assert (= (str.++ preC (str.++ stem38 sufC)) (str.++ unch138C (str.++ ch38C unch238C))))
(assert (= (str.++ preD (str.++ stem38 sufD)) (str.++ unch138D (str.++ ch38D unch238D))))
(assert (= (str.++ preE (str.++ stem38 sufE)) (str.++ unch138E (str.++ ch38E unch238E))))
(assert (= (str.++ preF (str.++ stem38 sufF)) (str.++ unch138F (str.++ ch38F unch238F))))
(assert (= "ganaj" (str.++ unch138D (str.++ var38D unch238D))))
(assert (= "gantaj" (str.++ unch138E (str.++ var38E unch238E))))
(assert (= "gannaj" (str.++ unch138F (str.++ var38F unch238F))))
(assert (= (str.len stem38) l38))
(assert (= (ite (= ch38A var38A) 0 1) sc38A))
(assert (= (ite (= ch38B var38B) 0 1) sc38B))
(assert (= (ite (= ch38C var38C) 0 1) sc38C))
(assert (= (ite (= ch38D var38D) 0 1) sc38D))
(assert (= (ite (= ch38E var38E) 0 1) sc38E))
(assert (= (ite (= ch38F var38F) 0 1) sc38F))
(assert (<= sc38A 1))
(assert (<= sc38B 1))
(assert (<= sc38C 1))
(assert (<= sc38D 1))
(assert (<= sc38E 1))
(assert (<= sc38F 1))
(assert (<= (str.len var39A) 1))
(assert (<= (str.len var39B) 1))
(assert (<= (str.len var39C) 1))
(assert (<= (str.len var39D) 1))
(assert (<= (str.len var39E) 1))
(assert (<= (str.len var39F) 1))
(assert (= (str.++ preA (str.++ stem39 sufA)) (str.++ unch139A (str.++ ch39A unch239A))))
(assert (= (str.++ preB (str.++ stem39 sufB)) (str.++ unch139B (str.++ ch39B unch239B))))
(assert (= (str.++ preC (str.++ stem39 sufC)) (str.++ unch139C (str.++ ch39C unch239C))))
(assert (= (str.++ preD (str.++ stem39 sufD)) (str.++ unch139D (str.++ ch39D unch239D))))
(assert (= (str.++ preE (str.++ stem39 sufE)) (str.++ unch139E (str.++ ch39E unch239E))))
(assert (= (str.++ preF (str.++ stem39 sufF)) (str.++ unch139F (str.++ ch39F unch239F))))
(assert (= "tumaj" (str.++ unch139D (str.++ var39D unch239D))))
(assert (= "tuntaj" (str.++ unch139E (str.++ var39E unch239E))))
(assert (= "tunnaj" (str.++ unch139F (str.++ var39F unch239F))))
(assert (= (str.len stem39) l39))
(assert (= (ite (= ch39A var39A) 0 1) sc39A))
(assert (= (ite (= ch39B var39B) 0 1) sc39B))
(assert (= (ite (= ch39C var39C) 0 1) sc39C))
(assert (= (ite (= ch39D var39D) 0 1) sc39D))
(assert (= (ite (= ch39E var39E) 0 1) sc39E))
(assert (= (ite (= ch39F var39F) 0 1) sc39F))
(assert (<= sc39A 1))
(assert (<= sc39B 1))
(assert (<= sc39C 1))
(assert (<= sc39D 1))
(assert (<= sc39E 1))
(assert (<= sc39F 1))
(assert (<= (str.len var40A) 1))
(assert (<= (str.len var40B) 1))
(assert (<= (str.len var40C) 1))
(assert (<= (str.len var40D) 1))
(assert (<= (str.len var40E) 1))
(assert (<= (str.len var40F) 1))
(assert (= (str.++ preA (str.++ stem40 sufA)) (str.++ unch140A (str.++ ch40A unch240A))))
(assert (= (str.++ preB (str.++ stem40 sufB)) (str.++ unch140B (str.++ ch40B unch240B))))
(assert (= (str.++ preC (str.++ stem40 sufC)) (str.++ unch140C (str.++ ch40C unch240C))))
(assert (= (str.++ preD (str.++ stem40 sufD)) (str.++ unch140D (str.++ ch40D unch240D))))
(assert (= (str.++ preE (str.++ stem40 sufE)) (str.++ unch140E (str.++ ch40E unch240E))))
(assert (= (str.++ preF (str.++ stem40 sufF)) (str.++ unch140F (str.++ ch40F unch240F))))
(assert (= "argaj" (str.++ unch140D (str.++ var40D unch240D))))
(assert (= "aragtaj" (str.++ unch140E (str.++ var40E unch240E))))
(assert (= "aragnaj" (str.++ unch140F (str.++ var40F unch240F))))
(assert (= (str.len stem40) l40))
(assert (= (ite (= ch40A var40A) 0 1) sc40A))
(assert (= (ite (= ch40B var40B) 0 1) sc40B))
(assert (= (ite (= ch40C var40C) 0 1) sc40C))
(assert (= (ite (= ch40D var40D) 0 1) sc40D))
(assert (= (ite (= ch40E var40E) 0 1) sc40E))
(assert (= (ite (= ch40F var40F) 0 1) sc40F))
(assert (<= sc40A 1))
(assert (<= sc40B 1))
(assert (<= sc40C 1))
(assert (<= sc40D 1))
(assert (<= sc40E 1))
(assert (<= sc40F 1))
(assert (<= (str.len var41A) 1))
(assert (<= (str.len var41B) 1))
(assert (<= (str.len var41C) 1))
(assert (<= (str.len var41D) 1))
(assert (<= (str.len var41E) 1))
(assert (<= (str.len var41F) 1))
(assert (= (str.++ preA (str.++ stem41 sufA)) (str.++ unch141A (str.++ ch41A unch241A))))
(assert (= (str.++ preB (str.++ stem41 sufB)) (str.++ unch141B (str.++ ch41B unch241B))))
(assert (= (str.++ preC (str.++ stem41 sufC)) (str.++ unch141C (str.++ ch41C unch241C))))
(assert (= (str.++ preD (str.++ stem41 sufD)) (str.++ unch141D (str.++ ch41D unch241D))))
(assert (= (str.++ preE (str.++ stem41 sufE)) (str.++ unch141E (str.++ ch41E unch241E))))
(assert (= (str.++ preF (str.++ stem41 sufF)) (str.++ unch141F (str.++ ch41F unch241F))))
(assert (= "gudbaj" (str.++ unch141D (str.++ var41D unch241D))))
(assert (= "guZubtaj" (str.++ unch141E (str.++ var41E unch241E))))
(assert (= "guZubnaj" (str.++ unch141F (str.++ var41F unch241F))))
(assert (= (str.len stem41) l41))
(assert (= (ite (= ch41A var41A) 0 1) sc41A))
(assert (= (ite (= ch41B var41B) 0 1) sc41B))
(assert (= (ite (= ch41C var41C) 0 1) sc41C))
(assert (= (ite (= ch41D var41D) 0 1) sc41D))
(assert (= (ite (= ch41E var41E) 0 1) sc41E))
(assert (= (ite (= ch41F var41F) 0 1) sc41F))
(assert (<= sc41A 1))
(assert (<= sc41B 1))
(assert (<= sc41C 1))
(assert (<= sc41D 1))
(assert (<= sc41E 1))
(assert (<= sc41F 1))
(assert (<= (str.len var42A) 1))
(assert (<= (str.len var42B) 1))
(assert (<= (str.len var42C) 1))
(assert (<= (str.len var42D) 1))
(assert (<= (str.len var42E) 1))
(assert (<= (str.len var42F) 1))
(assert (= (str.++ preA (str.++ stem42 sufA)) (str.++ unch142A (str.++ ch42A unch242A))))
(assert (= (str.++ preB (str.++ stem42 sufB)) (str.++ unch142B (str.++ ch42B unch242B))))
(assert (= (str.++ preC (str.++ stem42 sufC)) (str.++ unch142C (str.++ ch42C unch242C))))
(assert (= (str.++ preD (str.++ stem42 sufD)) (str.++ unch142D (str.++ ch42D unch242D))))
(assert (= (str.++ preE (str.++ stem42 sufE)) (str.++ unch142E (str.++ ch42E unch242E))))
(assert (= (str.++ preF (str.++ stem42 sufF)) (str.++ unch142F (str.++ ch42F unch242F))))
(assert (= "qoslaj" (str.++ unch142D (str.++ var42D unch242D))))
(assert (= "qosoBaj" (str.++ unch142E (str.++ var42E unch242E))))
(assert (= "qosollaj" (str.++ unch142F (str.++ var42F unch242F))))
(assert (= (str.len stem42) l42))
(assert (= (ite (= ch42A var42A) 0 1) sc42A))
(assert (= (ite (= ch42B var42B) 0 1) sc42B))
(assert (= (ite (= ch42C var42C) 0 1) sc42C))
(assert (= (ite (= ch42D var42D) 0 1) sc42D))
(assert (= (ite (= ch42E var42E) 0 1) sc42E))
(assert (= (ite (= ch42F var42F) 0 1) sc42F))
(assert (<= sc42A 1))
(assert (<= sc42B 1))
(assert (<= sc42C 1))
(assert (<= sc42D 1))
(assert (<= sc42E 1))
(assert (<= sc42F 1))
(assert (<= (str.len var43A) 1))
(assert (<= (str.len var43B) 1))
(assert (<= (str.len var43C) 1))
(assert (<= (str.len var43D) 1))
(assert (<= (str.len var43E) 1))
(assert (<= (str.len var43F) 1))
(assert (= (str.++ preA (str.++ stem43 sufA)) (str.++ unch143A (str.++ ch43A unch243A))))
(assert (= (str.++ preB (str.++ stem43 sufB)) (str.++ unch143B (str.++ ch43B unch243B))))
(assert (= (str.++ preC (str.++ stem43 sufC)) (str.++ unch143C (str.++ ch43C unch243C))))
(assert (= (str.++ preD (str.++ stem43 sufD)) (str.++ unch143D (str.++ ch43D unch243D))))
(assert (= (str.++ preE (str.++ stem43 sufE)) (str.++ unch143E (str.++ ch43E unch243E))))
(assert (= (str.++ preF (str.++ stem43 sufF)) (str.++ unch143F (str.++ ch43F unch243F))))
(assert (= "hadlaj" (str.++ unch143D (str.++ var43D unch243D))))
(assert (= "haZaBaj" (str.++ unch143E (str.++ var43E unch243E))))
(assert (= "haZallaj" (str.++ unch143F (str.++ var43F unch243F))))
(assert (= (str.len stem43) l43))
(assert (= (ite (= ch43A var43A) 0 1) sc43A))
(assert (= (ite (= ch43B var43B) 0 1) sc43B))
(assert (= (ite (= ch43C var43C) 0 1) sc43C))
(assert (= (ite (= ch43D var43D) 0 1) sc43D))
(assert (= (ite (= ch43E var43E) 0 1) sc43E))
(assert (= (ite (= ch43F var43F) 0 1) sc43F))
(assert (<= sc43A 1))
(assert (<= sc43B 1))
(assert (<= sc43C 1))
(assert (<= sc43D 1))
(assert (<= sc43E 1))
(assert (<= sc43F 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      0
      sc30A
      sc30B
      sc30C
      sc30D
      sc30E
      sc30F
      0
      sc31A
      sc31B
      sc31C
      sc31D
      sc31E
      sc31F
      0
      sc32A
      sc32B
      sc32C
      sc32D
      sc32E
      sc32F
      0
      sc33A
      sc33B
      sc33C
      sc33D
      sc33E
      sc33F
      0
      sc34A
      sc34B
      sc34C
      sc34D
      sc34E
      sc34F
      0
      sc35A
      sc35B
      sc35C
      sc35D
      sc35E
      sc35F
      0
      sc36A
      sc36B
      sc36C
      sc36D
      sc36E
      sc36F
      0
      sc37A
      sc37B
      sc37C
      sc37D
      sc37E
      sc37F
      0
      sc38A
      sc38B
      sc38C
      sc38D
      sc38E
      sc38F
      0
      sc39A
      sc39B
      sc39C
      sc39D
      sc39E
      sc39F
      0
      sc40A
      sc40B
      sc40C
      sc40D
      sc40E
      sc40F
      0
      sc41A
      sc41B
      sc41C
      sc41D
      sc41E
      sc41F
      0
      sc42A
      sc42B
      sc42C
      sc42D
      sc42E
      sc42F
      0
      sc43A
      sc43B
      sc43C
      sc43D
      sc43E
      sc43F)
   5))
(assert (= (+ 0
      sc0B
      sc1B
      sc2B
      sc3B
      sc4B
      sc5B
      sc6B
      sc7B
      sc8B
      sc9B
      sc10B
      sc11B
      sc12B
      sc13B
      sc14B
      sc15B
      sc16B
      sc17B
      sc18B
      sc19B
      sc20B
      sc21B
      sc22B
      sc23B
      sc24B
      sc25B
      sc26B
      sc27B
      sc28B
      sc29B
      sc30B
      sc31B
      sc32B
      sc33B
      sc34B
      sc35B
      sc36B
      sc37B
      sc38B
      sc39B
      sc40B
      sc41B
      sc42B
      sc43B)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun var30A () String)
(declare-fun var30B () String)
(declare-fun var30C () String)
(declare-fun var30D () String)
(declare-fun var30E () String)
(declare-fun var30F () String)
(declare-fun unch230A () String)
(declare-fun ch30A () String)
(declare-fun unch130A () String)
(declare-fun stem30 () String)
(declare-fun unch230B () String)
(declare-fun ch30B () String)
(declare-fun unch130B () String)
(declare-fun unch230C () String)
(declare-fun ch30C () String)
(declare-fun unch130C () String)
(declare-fun unch230D () String)
(declare-fun ch30D () String)
(declare-fun unch130D () String)
(declare-fun unch230E () String)
(declare-fun ch30E () String)
(declare-fun unch130E () String)
(declare-fun unch230F () String)
(declare-fun ch30F () String)
(declare-fun unch130F () String)
(declare-fun l30 () Int)
(declare-fun sc30A () Int)
(declare-fun sc30B () Int)
(declare-fun sc30C () Int)
(declare-fun sc30D () Int)
(declare-fun sc30E () Int)
(declare-fun sc30F () Int)
(declare-fun var31A () String)
(declare-fun var31B () String)
(declare-fun var31C () String)
(declare-fun var31D () String)
(declare-fun var31E () String)
(declare-fun var31F () String)
(declare-fun unch231A () String)
(declare-fun ch31A () String)
(declare-fun unch131A () String)
(declare-fun stem31 () String)
(declare-fun unch231B () String)
(declare-fun ch31B () String)
(declare-fun unch131B () String)
(declare-fun unch231C () String)
(declare-fun ch31C () String)
(declare-fun unch131C () String)
(declare-fun unch231D () String)
(declare-fun ch31D () String)
(declare-fun unch131D () String)
(declare-fun unch231E () String)
(declare-fun ch31E () String)
(declare-fun unch131E () String)
(declare-fun unch231F () String)
(declare-fun ch31F () String)
(declare-fun unch131F () String)
(declare-fun l31 () Int)
(declare-fun sc31A () Int)
(declare-fun sc31B () Int)
(declare-fun sc31C () Int)
(declare-fun sc31D () Int)
(declare-fun sc31E () Int)
(declare-fun sc31F () Int)
(declare-fun var32A () String)
(declare-fun var32B () String)
(declare-fun var32C () String)
(declare-fun var32D () String)
(declare-fun var32E () String)
(declare-fun var32F () String)
(declare-fun unch232A () String)
(declare-fun ch32A () String)
(declare-fun unch132A () String)
(declare-fun stem32 () String)
(declare-fun unch232B () String)
(declare-fun ch32B () String)
(declare-fun unch132B () String)
(declare-fun unch232C () String)
(declare-fun ch32C () String)
(declare-fun unch132C () String)
(declare-fun unch232D () String)
(declare-fun ch32D () String)
(declare-fun unch132D () String)
(declare-fun unch232E () String)
(declare-fun ch32E () String)
(declare-fun unch132E () String)
(declare-fun unch232F () String)
(declare-fun ch32F () String)
(declare-fun unch132F () String)
(declare-fun l32 () Int)
(declare-fun sc32A () Int)
(declare-fun sc32B () Int)
(declare-fun sc32C () Int)
(declare-fun sc32D () Int)
(declare-fun sc32E () Int)
(declare-fun sc32F () Int)
(declare-fun var33A () String)
(declare-fun var33B () String)
(declare-fun var33C () String)
(declare-fun var33D () String)
(declare-fun var33E () String)
(declare-fun var33F () String)
(declare-fun unch233A () String)
(declare-fun ch33A () String)
(declare-fun unch133A () String)
(declare-fun stem33 () String)
(declare-fun unch233B () String)
(declare-fun ch33B () String)
(declare-fun unch133B () String)
(declare-fun unch233C () String)
(declare-fun ch33C () String)
(declare-fun unch133C () String)
(declare-fun unch233D () String)
(declare-fun ch33D () String)
(declare-fun unch133D () String)
(declare-fun unch233E () String)
(declare-fun ch33E () String)
(declare-fun unch133E () String)
(declare-fun unch233F () String)
(declare-fun ch33F () String)
(declare-fun unch133F () String)
(declare-fun l33 () Int)
(declare-fun sc33A () Int)
(declare-fun sc33B () Int)
(declare-fun sc33C () Int)
(declare-fun sc33D () Int)
(declare-fun sc33E () Int)
(declare-fun sc33F () Int)
(declare-fun var34A () String)
(declare-fun var34B () String)
(declare-fun var34C () String)
(declare-fun var34D () String)
(declare-fun var34E () String)
(declare-fun var34F () String)
(declare-fun unch234A () String)
(declare-fun ch34A () String)
(declare-fun unch134A () String)
(declare-fun stem34 () String)
(declare-fun unch234B () String)
(declare-fun ch34B () String)
(declare-fun unch134B () String)
(declare-fun unch234C () String)
(declare-fun ch34C () String)
(declare-fun unch134C () String)
(declare-fun unch234D () String)
(declare-fun ch34D () String)
(declare-fun unch134D () String)
(declare-fun unch234E () String)
(declare-fun ch34E () String)
(declare-fun unch134E () String)
(declare-fun unch234F () String)
(declare-fun ch34F () String)
(declare-fun unch134F () String)
(declare-fun l34 () Int)
(declare-fun sc34A () Int)
(declare-fun sc34B () Int)
(declare-fun sc34C () Int)
(declare-fun sc34D () Int)
(declare-fun sc34E () Int)
(declare-fun sc34F () Int)
(declare-fun var35A () String)
(declare-fun var35B () String)
(declare-fun var35C () String)
(declare-fun var35D () String)
(declare-fun var35E () String)
(declare-fun var35F () String)
(declare-fun unch235A () String)
(declare-fun ch35A () String)
(declare-fun unch135A () String)
(declare-fun stem35 () String)
(declare-fun unch235B () String)
(declare-fun ch35B () String)
(declare-fun unch135B () String)
(declare-fun unch235C () String)
(declare-fun ch35C () String)
(declare-fun unch135C () String)
(declare-fun unch235D () String)
(declare-fun ch35D () String)
(declare-fun unch135D () String)
(declare-fun unch235E () String)
(declare-fun ch35E () String)
(declare-fun unch135E () String)
(declare-fun unch235F () String)
(declare-fun ch35F () String)
(declare-fun unch135F () String)
(declare-fun l35 () Int)
(declare-fun sc35A () Int)
(declare-fun sc35B () Int)
(declare-fun sc35C () Int)
(declare-fun sc35D () Int)
(declare-fun sc35E () Int)
(declare-fun sc35F () Int)
(declare-fun var36A () String)
(declare-fun var36B () String)
(declare-fun var36C () String)
(declare-fun var36D () String)
(declare-fun var36E () String)
(declare-fun var36F () String)
(declare-fun unch236A () String)
(declare-fun ch36A () String)
(declare-fun unch136A () String)
(declare-fun stem36 () String)
(declare-fun unch236B () String)
(declare-fun ch36B () String)
(declare-fun unch136B () String)
(declare-fun unch236C () String)
(declare-fun ch36C () String)
(declare-fun unch136C () String)
(declare-fun unch236D () String)
(declare-fun ch36D () String)
(declare-fun unch136D () String)
(declare-fun unch236E () String)
(declare-fun ch36E () String)
(declare-fun unch136E () String)
(declare-fun unch236F () String)
(declare-fun ch36F () String)
(declare-fun unch136F () String)
(declare-fun l36 () Int)
(declare-fun sc36A () Int)
(declare-fun sc36B () Int)
(declare-fun sc36C () Int)
(declare-fun sc36D () Int)
(declare-fun sc36E () Int)
(declare-fun sc36F () Int)
(declare-fun var37A () String)
(declare-fun var37B () String)
(declare-fun var37C () String)
(declare-fun var37D () String)
(declare-fun var37E () String)
(declare-fun var37F () String)
(declare-fun unch237A () String)
(declare-fun ch37A () String)
(declare-fun unch137A () String)
(declare-fun stem37 () String)
(declare-fun unch237B () String)
(declare-fun ch37B () String)
(declare-fun unch137B () String)
(declare-fun unch237C () String)
(declare-fun ch37C () String)
(declare-fun unch137C () String)
(declare-fun unch237D () String)
(declare-fun ch37D () String)
(declare-fun unch137D () String)
(declare-fun unch237E () String)
(declare-fun ch37E () String)
(declare-fun unch137E () String)
(declare-fun unch237F () String)
(declare-fun ch37F () String)
(declare-fun unch137F () String)
(declare-fun l37 () Int)
(declare-fun sc37A () Int)
(declare-fun sc37B () Int)
(declare-fun sc37C () Int)
(declare-fun sc37D () Int)
(declare-fun sc37E () Int)
(declare-fun sc37F () Int)
(declare-fun var38A () String)
(declare-fun var38B () String)
(declare-fun var38C () String)
(declare-fun var38D () String)
(declare-fun var38E () String)
(declare-fun var38F () String)
(declare-fun unch238A () String)
(declare-fun ch38A () String)
(declare-fun unch138A () String)
(declare-fun stem38 () String)
(declare-fun unch238B () String)
(declare-fun ch38B () String)
(declare-fun unch138B () String)
(declare-fun unch238C () String)
(declare-fun ch38C () String)
(declare-fun unch138C () String)
(declare-fun unch238D () String)
(declare-fun ch38D () String)
(declare-fun unch138D () String)
(declare-fun unch238E () String)
(declare-fun ch38E () String)
(declare-fun unch138E () String)
(declare-fun unch238F () String)
(declare-fun ch38F () String)
(declare-fun unch138F () String)
(declare-fun l38 () Int)
(declare-fun sc38A () Int)
(declare-fun sc38B () Int)
(declare-fun sc38C () Int)
(declare-fun sc38D () Int)
(declare-fun sc38E () Int)
(declare-fun sc38F () Int)
(declare-fun var39A () String)
(declare-fun var39B () String)
(declare-fun var39C () String)
(declare-fun var39D () String)
(declare-fun var39E () String)
(declare-fun var39F () String)
(declare-fun unch239A () String)
(declare-fun ch39A () String)
(declare-fun unch139A () String)
(declare-fun stem39 () String)
(declare-fun unch239B () String)
(declare-fun ch39B () String)
(declare-fun unch139B () String)
(declare-fun unch239C () String)
(declare-fun ch39C () String)
(declare-fun unch139C () String)
(declare-fun unch239D () String)
(declare-fun ch39D () String)
(declare-fun unch139D () String)
(declare-fun unch239E () String)
(declare-fun ch39E () String)
(declare-fun unch139E () String)
(declare-fun unch239F () String)
(declare-fun ch39F () String)
(declare-fun unch139F () String)
(declare-fun l39 () Int)
(declare-fun sc39A () Int)
(declare-fun sc39B () Int)
(declare-fun sc39C () Int)
(declare-fun sc39D () Int)
(declare-fun sc39E () Int)
(declare-fun sc39F () Int)
(declare-fun var40A () String)
(declare-fun var40B () String)
(declare-fun var40C () String)
(declare-fun var40D () String)
(declare-fun var40E () String)
(declare-fun var40F () String)
(declare-fun unch240A () String)
(declare-fun ch40A () String)
(declare-fun unch140A () String)
(declare-fun stem40 () String)
(declare-fun unch240B () String)
(declare-fun ch40B () String)
(declare-fun unch140B () String)
(declare-fun unch240C () String)
(declare-fun ch40C () String)
(declare-fun unch140C () String)
(declare-fun unch240D () String)
(declare-fun ch40D () String)
(declare-fun unch140D () String)
(declare-fun unch240E () String)
(declare-fun ch40E () String)
(declare-fun unch140E () String)
(declare-fun unch240F () String)
(declare-fun ch40F () String)
(declare-fun unch140F () String)
(declare-fun l40 () Int)
(declare-fun sc40A () Int)
(declare-fun sc40B () Int)
(declare-fun sc40C () Int)
(declare-fun sc40D () Int)
(declare-fun sc40E () Int)
(declare-fun sc40F () Int)
(declare-fun var41A () String)
(declare-fun var41B () String)
(declare-fun var41C () String)
(declare-fun var41D () String)
(declare-fun var41E () String)
(declare-fun var41F () String)
(declare-fun unch241A () String)
(declare-fun ch41A () String)
(declare-fun unch141A () String)
(declare-fun stem41 () String)
(declare-fun unch241B () String)
(declare-fun ch41B () String)
(declare-fun unch141B () String)
(declare-fun unch241C () String)
(declare-fun ch41C () String)
(declare-fun unch141C () String)
(declare-fun unch241D () String)
(declare-fun ch41D () String)
(declare-fun unch141D () String)
(declare-fun unch241E () String)
(declare-fun ch41E () String)
(declare-fun unch141E () String)
(declare-fun unch241F () String)
(declare-fun ch41F () String)
(declare-fun unch141F () String)
(declare-fun l41 () Int)
(declare-fun sc41A () Int)
(declare-fun sc41B () Int)
(declare-fun sc41C () Int)
(declare-fun sc41D () Int)
(declare-fun sc41E () Int)
(declare-fun sc41F () Int)
(declare-fun var42A () String)
(declare-fun var42B () String)
(declare-fun var42C () String)
(declare-fun var42D () String)
(declare-fun var42E () String)
(declare-fun var42F () String)
(declare-fun unch242A () String)
(declare-fun ch42A () String)
(declare-fun unch142A () String)
(declare-fun stem42 () String)
(declare-fun unch242B () String)
(declare-fun ch42B () String)
(declare-fun unch142B () String)
(declare-fun unch242C () String)
(declare-fun ch42C () String)
(declare-fun unch142C () String)
(declare-fun unch242D () String)
(declare-fun ch42D () String)
(declare-fun unch142D () String)
(declare-fun unch242E () String)
(declare-fun ch42E () String)
(declare-fun unch142E () String)
(declare-fun unch242F () String)
(declare-fun ch42F () String)
(declare-fun unch142F () String)
(declare-fun l42 () Int)
(declare-fun sc42A () Int)
(declare-fun sc42B () Int)
(declare-fun sc42C () Int)
(declare-fun sc42D () Int)
(declare-fun sc42E () Int)
(declare-fun sc42F () Int)
(declare-fun var43A () String)
(declare-fun var43B () String)
(declare-fun var43C () String)
(declare-fun var43D () String)
(declare-fun var43E () String)
(declare-fun var43F () String)
(declare-fun unch243A () String)
(declare-fun ch43A () String)
(declare-fun unch143A () String)
(declare-fun stem43 () String)
(declare-fun unch243B () String)
(declare-fun ch43B () String)
(declare-fun unch143B () String)
(declare-fun unch243C () String)
(declare-fun ch43C () String)
(declare-fun unch143C () String)
(declare-fun unch243D () String)
(declare-fun ch43D () String)
(declare-fun unch143D () String)
(declare-fun unch243E () String)
(declare-fun ch43E () String)
(declare-fun unch143E () String)
(declare-fun unch243F () String)
(declare-fun ch43F () String)
(declare-fun unch143F () String)
(declare-fun l43 () Int)
(declare-fun sc43A () Int)
(declare-fun sc43B () Int)
(declare-fun sc43C () Int)
(declare-fun sc43D () Int)
(declare-fun sc43E () Int)
(declare-fun sc43F () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= "daar" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "daarta" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "daaro" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= "gees" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "geesta" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "geeso" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= "laf" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "lafta" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "lafo" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= "lug" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "lugta" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "luOo" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= "naag" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "naagta" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "naaOo" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= "tib" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "tibta" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "tiXo" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= "sab" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "sabta" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "saXo" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= "bad" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "bada" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "baZo" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= "Bid" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "Bida" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "BiZo" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= "fee1" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "fee1a" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "fee2o" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= "3iir" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "3iirta" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "3iiro" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= "4ul" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "4uBa" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "4ulo" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= "bil" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "biBa" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "bilo" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= "meel" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "meeBa" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "meelo" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= "kaliil" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "kaliiBa" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "kaliilo" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= "najl" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "najBa" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "najlo" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= "sun" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "sunta" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "sumo" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= "laan" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "laanta" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "laamo" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= "sin" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "sinta" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "simo" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= "dan" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "danta" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "dano" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= "daan" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "daanta" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "daano" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= "saan" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "saanta" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "saano" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= "nirig" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "nirigta" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "nirgo" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= "gaXa1" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= "gaXa1a" (str.++ unch123B (str.++ var23B unch223B))))
(assert (= "gab1o" (str.++ unch123C (str.++ var23C unch223C))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= "hoOol" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= "hoOoBa" (str.++ unch124B (str.++ var24B unch224B))))
(assert (= "hoglo" (str.++ unch124C (str.++ var24C unch224C))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= "baOal" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= "baOaBa" (str.++ unch125B (str.++ var25B unch225B))))
(assert (= "baglo" (str.++ unch125C (str.++ var25C unch225C))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= "wa5ar" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= "wa5arta" (str.++ unch126B (str.++ var26B unch226B))))
(assert (= "wa5aro" (str.++ unch126C (str.++ var26C unch226C))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= "irbad" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= "irbada" (str.++ unch127B (str.++ var27B unch227B))))
(assert (= "irbaZo" (str.++ unch127C (str.++ var27C unch227C))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= "kefed" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= "kefeda" (str.++ unch128B (str.++ var28B unch228B))))
(assert (= "kefeZo" (str.++ unch128C (str.++ var28C unch228C))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= "Bilin" (str.++ unch129A (str.++ var29A unch229A))))
(assert (= "Bilinta" (str.++ unch129B (str.++ var29B unch229B))))
(assert (= "Bilino" (str.++ unch129C (str.++ var29C unch229C))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= (str.len var30A) 1))
(assert (<= (str.len var30B) 1))
(assert (<= (str.len var30C) 1))
(assert (<= (str.len var30D) 1))
(assert (<= (str.len var30E) 1))
(assert (<= (str.len var30F) 1))
(assert (= (str.++ preA (str.++ stem30 sufA)) (str.++ unch130A (str.++ ch30A unch230A))))
(assert (= (str.++ preB (str.++ stem30 sufB)) (str.++ unch130B (str.++ ch30B unch230B))))
(assert (= (str.++ preC (str.++ stem30 sufC)) (str.++ unch130C (str.++ ch30C unch230C))))
(assert (= (str.++ preD (str.++ stem30 sufD)) (str.++ unch130D (str.++ ch30D unch230D))))
(assert (= (str.++ preE (str.++ stem30 sufE)) (str.++ unch130E (str.++ ch30E unch230E))))
(assert (= (str.++ preF (str.++ stem30 sufF)) (str.++ unch130F (str.++ ch30F unch230F))))
(assert (= "bohol" (str.++ unch130A (str.++ var30A unch230A))))
(assert (= "bohoBa" (str.++ unch130B (str.++ var30B unch230B))))
(assert (= "boholo" (str.++ unch130C (str.++ var30C unch230C))))
(assert (= (str.len stem30) l30))
(assert (= (ite (= ch30A var30A) 0 1) sc30A))
(assert (= (ite (= ch30B var30B) 0 1) sc30B))
(assert (= (ite (= ch30C var30C) 0 1) sc30C))
(assert (= (ite (= ch30D var30D) 0 1) sc30D))
(assert (= (ite (= ch30E var30E) 0 1) sc30E))
(assert (= (ite (= ch30F var30F) 0 1) sc30F))
(assert (<= sc30A 1))
(assert (<= sc30B 1))
(assert (<= sc30C 1))
(assert (<= sc30D 1))
(assert (<= sc30E 1))
(assert (<= sc30F 1))
(assert (<= (str.len var31A) 1))
(assert (<= (str.len var31B) 1))
(assert (<= (str.len var31C) 1))
(assert (<= (str.len var31D) 1))
(assert (<= (str.len var31E) 1))
(assert (<= (str.len var31F) 1))
(assert (= (str.++ preA (str.++ stem31 sufA)) (str.++ unch131A (str.++ ch31A unch231A))))
(assert (= (str.++ preB (str.++ stem31 sufB)) (str.++ unch131B (str.++ ch31B unch231B))))
(assert (= (str.++ preC (str.++ stem31 sufC)) (str.++ unch131C (str.++ ch31C unch231C))))
(assert (= (str.++ preD (str.++ stem31 sufD)) (str.++ unch131D (str.++ ch31D unch231D))))
(assert (= (str.++ preE (str.++ stem31 sufE)) (str.++ unch131E (str.++ ch31E unch231E))))
(assert (= (str.++ preF (str.++ stem31 sufF)) (str.++ unch131F (str.++ ch31F unch231F))))
(assert (= "4aajad" (str.++ unch131A (str.++ var31A unch231A))))
(assert (= "4aajada" (str.++ unch131B (str.++ var31B unch231B))))
(assert (= "4aajaZo" (str.++ unch131C (str.++ var31C unch231C))))
(assert (= (str.len stem31) l31))
(assert (= (ite (= ch31A var31A) 0 1) sc31A))
(assert (= (ite (= ch31B var31B) 0 1) sc31B))
(assert (= (ite (= ch31C var31C) 0 1) sc31C))
(assert (= (ite (= ch31D var31D) 0 1) sc31D))
(assert (= (ite (= ch31E var31E) 0 1) sc31E))
(assert (= (ite (= ch31F var31F) 0 1) sc31F))
(assert (<= sc31A 1))
(assert (<= sc31B 1))
(assert (<= sc31C 1))
(assert (<= sc31D 1))
(assert (<= sc31E 1))
(assert (<= sc31F 1))
(assert (<= (str.len var32A) 1))
(assert (<= (str.len var32B) 1))
(assert (<= (str.len var32C) 1))
(assert (<= (str.len var32D) 1))
(assert (<= (str.len var32E) 1))
(assert (<= (str.len var32F) 1))
(assert (= (str.++ preA (str.++ stem32 sufA)) (str.++ unch132A (str.++ ch32A unch232A))))
(assert (= (str.++ preB (str.++ stem32 sufB)) (str.++ unch132B (str.++ ch32B unch232B))))
(assert (= (str.++ preC (str.++ stem32 sufC)) (str.++ unch132C (str.++ ch32C unch232C))))
(assert (= (str.++ preD (str.++ stem32 sufD)) (str.++ unch132D (str.++ ch32D unch232D))))
(assert (= (str.++ preE (str.++ stem32 sufE)) (str.++ unch132E (str.++ ch32E unch232E))))
(assert (= (str.++ preF (str.++ stem32 sufF)) (str.++ unch132F (str.++ ch32F unch232F))))
(assert (= "ga3an" (str.++ unch132A (str.++ var32A unch232A))))
(assert (= "ga3anta" (str.++ unch132B (str.++ var32B unch232B))))
(assert (= "ga3mo" (str.++ unch132C (str.++ var32C unch232C))))
(assert (= (str.len stem32) l32))
(assert (= (ite (= ch32A var32A) 0 1) sc32A))
(assert (= (ite (= ch32B var32B) 0 1) sc32B))
(assert (= (ite (= ch32C var32C) 0 1) sc32C))
(assert (= (ite (= ch32D var32D) 0 1) sc32D))
(assert (= (ite (= ch32E var32E) 0 1) sc32E))
(assert (= (ite (= ch32F var32F) 0 1) sc32F))
(assert (<= sc32A 1))
(assert (<= sc32B 1))
(assert (<= sc32C 1))
(assert (<= sc32D 1))
(assert (<= sc32E 1))
(assert (<= sc32F 1))
(assert (<= (str.len var33A) 1))
(assert (<= (str.len var33B) 1))
(assert (<= (str.len var33C) 1))
(assert (<= (str.len var33D) 1))
(assert (<= (str.len var33E) 1))
(assert (<= (str.len var33F) 1))
(assert (= (str.++ preA (str.++ stem33 sufA)) (str.++ unch133A (str.++ ch33A unch233A))))
(assert (= (str.++ preB (str.++ stem33 sufB)) (str.++ unch133B (str.++ ch33B unch233B))))
(assert (= (str.++ preC (str.++ stem33 sufC)) (str.++ unch133C (str.++ ch33C unch233C))))
(assert (= (str.++ preD (str.++ stem33 sufD)) (str.++ unch133D (str.++ ch33D unch233D))))
(assert (= (str.++ preE (str.++ stem33 sufE)) (str.++ unch133E (str.++ ch33E unch233E))))
(assert (= (str.++ preF (str.++ stem33 sufF)) (str.++ unch133F (str.++ ch33F unch233F))))
(assert (= "4inan" (str.++ unch133A (str.++ var33A unch233A))))
(assert (= "4inanta" (str.++ unch133B (str.++ var33B unch233B))))
(assert (= "4inano" (str.++ unch133C (str.++ var33C unch233C))))
(assert (= (str.len stem33) l33))
(assert (= (ite (= ch33A var33A) 0 1) sc33A))
(assert (= (ite (= ch33B var33B) 0 1) sc33B))
(assert (= (ite (= ch33C var33C) 0 1) sc33C))
(assert (= (ite (= ch33D var33D) 0 1) sc33D))
(assert (= (ite (= ch33E var33E) 0 1) sc33E))
(assert (= (ite (= ch33F var33F) 0 1) sc33F))
(assert (<= sc33A 1))
(assert (<= sc33B 1))
(assert (<= sc33C 1))
(assert (<= sc33D 1))
(assert (<= sc33E 1))
(assert (<= sc33F 1))
(assert (<= (str.len var34A) 1))
(assert (<= (str.len var34B) 1))
(assert (<= (str.len var34C) 1))
(assert (<= (str.len var34D) 1))
(assert (<= (str.len var34E) 1))
(assert (<= (str.len var34F) 1))
(assert (= (str.++ preA (str.++ stem34 sufA)) (str.++ unch134A (str.++ ch34A unch234A))))
(assert (= (str.++ preB (str.++ stem34 sufB)) (str.++ unch134B (str.++ ch34B unch234B))))
(assert (= (str.++ preC (str.++ stem34 sufC)) (str.++ unch134C (str.++ ch34C unch234C))))
(assert (= (str.++ preD (str.++ stem34 sufD)) (str.++ unch134D (str.++ ch34D unch234D))))
(assert (= (str.++ preE (str.++ stem34 sufE)) (str.++ unch134E (str.++ ch34E unch234E))))
(assert (= (str.++ preF (str.++ stem34 sufF)) (str.++ unch134F (str.++ ch34F unch234F))))
(assert (= "suOaj" (str.++ unch134D (str.++ var34D unch234D))))
(assert (= "sugtaj" (str.++ unch134E (str.++ var34E unch234E))))
(assert (= "sugnaj" (str.++ unch134F (str.++ var34F unch234F))))
(assert (= (str.len stem34) l34))
(assert (= (ite (= ch34A var34A) 0 1) sc34A))
(assert (= (ite (= ch34B var34B) 0 1) sc34B))
(assert (= (ite (= ch34C var34C) 0 1) sc34C))
(assert (= (ite (= ch34D var34D) 0 1) sc34D))
(assert (= (ite (= ch34E var34E) 0 1) sc34E))
(assert (= (ite (= ch34F var34F) 0 1) sc34F))
(assert (<= sc34A 1))
(assert (<= sc34B 1))
(assert (<= sc34C 1))
(assert (<= sc34D 1))
(assert (<= sc34E 1))
(assert (<= sc34F 1))
(assert (<= (str.len var35A) 1))
(assert (<= (str.len var35B) 1))
(assert (<= (str.len var35C) 1))
(assert (<= (str.len var35D) 1))
(assert (<= (str.len var35E) 1))
(assert (<= (str.len var35F) 1))
(assert (= (str.++ preA (str.++ stem35 sufA)) (str.++ unch135A (str.++ ch35A unch235A))))
(assert (= (str.++ preB (str.++ stem35 sufB)) (str.++ unch135B (str.++ ch35B unch235B))))
(assert (= (str.++ preC (str.++ stem35 sufC)) (str.++ unch135C (str.++ ch35C unch235C))))
(assert (= (str.++ preD (str.++ stem35 sufD)) (str.++ unch135D (str.++ ch35D unch235D))))
(assert (= (str.++ preE (str.++ stem35 sufE)) (str.++ unch135E (str.++ ch35E unch235E))))
(assert (= (str.++ preF (str.++ stem35 sufF)) (str.++ unch135F (str.++ ch35F unch235F))))
(assert (= "kaXaj" (str.++ unch135D (str.++ var35D unch235D))))
(assert (= "kabtaj" (str.++ unch135E (str.++ var35E unch235E))))
(assert (= "kabnaj" (str.++ unch135F (str.++ var35F unch235F))))
(assert (= (str.len stem35) l35))
(assert (= (ite (= ch35A var35A) 0 1) sc35A))
(assert (= (ite (= ch35B var35B) 0 1) sc35B))
(assert (= (ite (= ch35C var35C) 0 1) sc35C))
(assert (= (ite (= ch35D var35D) 0 1) sc35D))
(assert (= (ite (= ch35E var35E) 0 1) sc35E))
(assert (= (ite (= ch35F var35F) 0 1) sc35F))
(assert (<= sc35A 1))
(assert (<= sc35B 1))
(assert (<= sc35C 1))
(assert (<= sc35D 1))
(assert (<= sc35E 1))
(assert (<= sc35F 1))
(assert (<= (str.len var36A) 1))
(assert (<= (str.len var36B) 1))
(assert (<= (str.len var36C) 1))
(assert (<= (str.len var36D) 1))
(assert (<= (str.len var36E) 1))
(assert (<= (str.len var36F) 1))
(assert (= (str.++ preA (str.++ stem36 sufA)) (str.++ unch136A (str.++ ch36A unch236A))))
(assert (= (str.++ preB (str.++ stem36 sufB)) (str.++ unch136B (str.++ ch36B unch236B))))
(assert (= (str.++ preC (str.++ stem36 sufC)) (str.++ unch136C (str.++ ch36C unch236C))))
(assert (= (str.++ preD (str.++ stem36 sufD)) (str.++ unch136D (str.++ ch36D unch236D))))
(assert (= (str.++ preE (str.++ stem36 sufE)) (str.++ unch136E (str.++ ch36E unch236E))))
(assert (= (str.++ preF (str.++ stem36 sufF)) (str.++ unch136F (str.++ ch36F unch236F))))
(assert (= "siZaj" (str.++ unch136D (str.++ var36D unch236D))))
(assert (= "sidaj" (str.++ unch136E (str.++ var36E unch236E))))
(assert (= "sidnaj" (str.++ unch136F (str.++ var36F unch236F))))
(assert (= (str.len stem36) l36))
(assert (= (ite (= ch36A var36A) 0 1) sc36A))
(assert (= (ite (= ch36B var36B) 0 1) sc36B))
(assert (= (ite (= ch36C var36C) 0 1) sc36C))
(assert (= (ite (= ch36D var36D) 0 1) sc36D))
(assert (= (ite (= ch36E var36E) 0 1) sc36E))
(assert (= (ite (= ch36F var36F) 0 1) sc36F))
(assert (<= sc36A 1))
(assert (<= sc36B 1))
(assert (<= sc36C 1))
(assert (<= sc36D 1))
(assert (<= sc36E 1))
(assert (<= sc36F 1))
(assert (<= (str.len var37A) 1))
(assert (<= (str.len var37B) 1))
(assert (<= (str.len var37C) 1))
(assert (<= (str.len var37D) 1))
(assert (<= (str.len var37E) 1))
(assert (<= (str.len var37F) 1))
(assert (= (str.++ preA (str.++ stem37 sufA)) (str.++ unch137A (str.++ ch37A unch237A))))
(assert (= (str.++ preB (str.++ stem37 sufB)) (str.++ unch137B (str.++ ch37B unch237B))))
(assert (= (str.++ preC (str.++ stem37 sufC)) (str.++ unch137C (str.++ ch37C unch237C))))
(assert (= (str.++ preD (str.++ stem37 sufD)) (str.++ unch137D (str.++ ch37D unch237D))))
(assert (= (str.++ preE (str.++ stem37 sufE)) (str.++ unch137E (str.++ ch37E unch237E))))
(assert (= (str.++ preF (str.++ stem37 sufF)) (str.++ unch137F (str.++ ch37F unch237F))))
(assert (= "dilaj" (str.++ unch137D (str.++ var37D unch237D))))
(assert (= "diBaj" (str.++ unch137E (str.++ var37E unch237E))))
(assert (= "dillaj" (str.++ unch137F (str.++ var37F unch237F))))
(assert (= (str.len stem37) l37))
(assert (= (ite (= ch37A var37A) 0 1) sc37A))
(assert (= (ite (= ch37B var37B) 0 1) sc37B))
(assert (= (ite (= ch37C var37C) 0 1) sc37C))
(assert (= (ite (= ch37D var37D) 0 1) sc37D))
(assert (= (ite (= ch37E var37E) 0 1) sc37E))
(assert (= (ite (= ch37F var37F) 0 1) sc37F))
(assert (<= sc37A 1))
(assert (<= sc37B 1))
(assert (<= sc37C 1))
(assert (<= sc37D 1))
(assert (<= sc37E 1))
(assert (<= sc37F 1))
(assert (<= (str.len var38A) 1))
(assert (<= (str.len var38B) 1))
(assert (<= (str.len var38C) 1))
(assert (<= (str.len var38D) 1))
(assert (<= (str.len var38E) 1))
(assert (<= (str.len var38F) 1))
(assert (= (str.++ preA (str.++ stem38 sufA)) (str.++ unch138A (str.++ ch38A unch238A))))
(assert (= (str.++ preB (str.++ stem38 sufB)) (str.++ unch138B (str.++ ch38B unch238B))))
(assert (= (str.++ preC (str.++ stem38 sufC)) (str.++ unch138C (str.++ ch38C unch238C))))
(assert (= (str.++ preD (str.++ stem38 sufD)) (str.++ unch138D (str.++ ch38D unch238D))))
(assert (= (str.++ preE (str.++ stem38 sufE)) (str.++ unch138E (str.++ ch38E unch238E))))
(assert (= (str.++ preF (str.++ stem38 sufF)) (str.++ unch138F (str.++ ch38F unch238F))))
(assert (= "ganaj" (str.++ unch138D (str.++ var38D unch238D))))
(assert (= "gantaj" (str.++ unch138E (str.++ var38E unch238E))))
(assert (= "gannaj" (str.++ unch138F (str.++ var38F unch238F))))
(assert (= (str.len stem38) l38))
(assert (= (ite (= ch38A var38A) 0 1) sc38A))
(assert (= (ite (= ch38B var38B) 0 1) sc38B))
(assert (= (ite (= ch38C var38C) 0 1) sc38C))
(assert (= (ite (= ch38D var38D) 0 1) sc38D))
(assert (= (ite (= ch38E var38E) 0 1) sc38E))
(assert (= (ite (= ch38F var38F) 0 1) sc38F))
(assert (<= sc38A 1))
(assert (<= sc38B 1))
(assert (<= sc38C 1))
(assert (<= sc38D 1))
(assert (<= sc38E 1))
(assert (<= sc38F 1))
(assert (<= (str.len var39A) 1))
(assert (<= (str.len var39B) 1))
(assert (<= (str.len var39C) 1))
(assert (<= (str.len var39D) 1))
(assert (<= (str.len var39E) 1))
(assert (<= (str.len var39F) 1))
(assert (= (str.++ preA (str.++ stem39 sufA)) (str.++ unch139A (str.++ ch39A unch239A))))
(assert (= (str.++ preB (str.++ stem39 sufB)) (str.++ unch139B (str.++ ch39B unch239B))))
(assert (= (str.++ preC (str.++ stem39 sufC)) (str.++ unch139C (str.++ ch39C unch239C))))
(assert (= (str.++ preD (str.++ stem39 sufD)) (str.++ unch139D (str.++ ch39D unch239D))))
(assert (= (str.++ preE (str.++ stem39 sufE)) (str.++ unch139E (str.++ ch39E unch239E))))
(assert (= (str.++ preF (str.++ stem39 sufF)) (str.++ unch139F (str.++ ch39F unch239F))))
(assert (= "tumaj" (str.++ unch139D (str.++ var39D unch239D))))
(assert (= "tuntaj" (str.++ unch139E (str.++ var39E unch239E))))
(assert (= "tunnaj" (str.++ unch139F (str.++ var39F unch239F))))
(assert (= (str.len stem39) l39))
(assert (= (ite (= ch39A var39A) 0 1) sc39A))
(assert (= (ite (= ch39B var39B) 0 1) sc39B))
(assert (= (ite (= ch39C var39C) 0 1) sc39C))
(assert (= (ite (= ch39D var39D) 0 1) sc39D))
(assert (= (ite (= ch39E var39E) 0 1) sc39E))
(assert (= (ite (= ch39F var39F) 0 1) sc39F))
(assert (<= sc39A 1))
(assert (<= sc39B 1))
(assert (<= sc39C 1))
(assert (<= sc39D 1))
(assert (<= sc39E 1))
(assert (<= sc39F 1))
(assert (<= (str.len var40A) 1))
(assert (<= (str.len var40B) 1))
(assert (<= (str.len var40C) 1))
(assert (<= (str.len var40D) 1))
(assert (<= (str.len var40E) 1))
(assert (<= (str.len var40F) 1))
(assert (= (str.++ preA (str.++ stem40 sufA)) (str.++ unch140A (str.++ ch40A unch240A))))
(assert (= (str.++ preB (str.++ stem40 sufB)) (str.++ unch140B (str.++ ch40B unch240B))))
(assert (= (str.++ preC (str.++ stem40 sufC)) (str.++ unch140C (str.++ ch40C unch240C))))
(assert (= (str.++ preD (str.++ stem40 sufD)) (str.++ unch140D (str.++ ch40D unch240D))))
(assert (= (str.++ preE (str.++ stem40 sufE)) (str.++ unch140E (str.++ ch40E unch240E))))
(assert (= (str.++ preF (str.++ stem40 sufF)) (str.++ unch140F (str.++ ch40F unch240F))))
(assert (= "argaj" (str.++ unch140D (str.++ var40D unch240D))))
(assert (= "aragtaj" (str.++ unch140E (str.++ var40E unch240E))))
(assert (= "aragnaj" (str.++ unch140F (str.++ var40F unch240F))))
(assert (= (str.len stem40) l40))
(assert (= (ite (= ch40A var40A) 0 1) sc40A))
(assert (= (ite (= ch40B var40B) 0 1) sc40B))
(assert (= (ite (= ch40C var40C) 0 1) sc40C))
(assert (= (ite (= ch40D var40D) 0 1) sc40D))
(assert (= (ite (= ch40E var40E) 0 1) sc40E))
(assert (= (ite (= ch40F var40F) 0 1) sc40F))
(assert (<= sc40A 1))
(assert (<= sc40B 1))
(assert (<= sc40C 1))
(assert (<= sc40D 1))
(assert (<= sc40E 1))
(assert (<= sc40F 1))
(assert (<= (str.len var41A) 1))
(assert (<= (str.len var41B) 1))
(assert (<= (str.len var41C) 1))
(assert (<= (str.len var41D) 1))
(assert (<= (str.len var41E) 1))
(assert (<= (str.len var41F) 1))
(assert (= (str.++ preA (str.++ stem41 sufA)) (str.++ unch141A (str.++ ch41A unch241A))))
(assert (= (str.++ preB (str.++ stem41 sufB)) (str.++ unch141B (str.++ ch41B unch241B))))
(assert (= (str.++ preC (str.++ stem41 sufC)) (str.++ unch141C (str.++ ch41C unch241C))))
(assert (= (str.++ preD (str.++ stem41 sufD)) (str.++ unch141D (str.++ ch41D unch241D))))
(assert (= (str.++ preE (str.++ stem41 sufE)) (str.++ unch141E (str.++ ch41E unch241E))))
(assert (= (str.++ preF (str.++ stem41 sufF)) (str.++ unch141F (str.++ ch41F unch241F))))
(assert (= "gudbaj" (str.++ unch141D (str.++ var41D unch241D))))
(assert (= "guZubtaj" (str.++ unch141E (str.++ var41E unch241E))))
(assert (= "guZubnaj" (str.++ unch141F (str.++ var41F unch241F))))
(assert (= (str.len stem41) l41))
(assert (= (ite (= ch41A var41A) 0 1) sc41A))
(assert (= (ite (= ch41B var41B) 0 1) sc41B))
(assert (= (ite (= ch41C var41C) 0 1) sc41C))
(assert (= (ite (= ch41D var41D) 0 1) sc41D))
(assert (= (ite (= ch41E var41E) 0 1) sc41E))
(assert (= (ite (= ch41F var41F) 0 1) sc41F))
(assert (<= sc41A 1))
(assert (<= sc41B 1))
(assert (<= sc41C 1))
(assert (<= sc41D 1))
(assert (<= sc41E 1))
(assert (<= sc41F 1))
(assert (<= (str.len var42A) 1))
(assert (<= (str.len var42B) 1))
(assert (<= (str.len var42C) 1))
(assert (<= (str.len var42D) 1))
(assert (<= (str.len var42E) 1))
(assert (<= (str.len var42F) 1))
(assert (= (str.++ preA (str.++ stem42 sufA)) (str.++ unch142A (str.++ ch42A unch242A))))
(assert (= (str.++ preB (str.++ stem42 sufB)) (str.++ unch142B (str.++ ch42B unch242B))))
(assert (= (str.++ preC (str.++ stem42 sufC)) (str.++ unch142C (str.++ ch42C unch242C))))
(assert (= (str.++ preD (str.++ stem42 sufD)) (str.++ unch142D (str.++ ch42D unch242D))))
(assert (= (str.++ preE (str.++ stem42 sufE)) (str.++ unch142E (str.++ ch42E unch242E))))
(assert (= (str.++ preF (str.++ stem42 sufF)) (str.++ unch142F (str.++ ch42F unch242F))))
(assert (= "qoslaj" (str.++ unch142D (str.++ var42D unch242D))))
(assert (= "qosoBaj" (str.++ unch142E (str.++ var42E unch242E))))
(assert (= "qosollaj" (str.++ unch142F (str.++ var42F unch242F))))
(assert (= (str.len stem42) l42))
(assert (= (ite (= ch42A var42A) 0 1) sc42A))
(assert (= (ite (= ch42B var42B) 0 1) sc42B))
(assert (= (ite (= ch42C var42C) 0 1) sc42C))
(assert (= (ite (= ch42D var42D) 0 1) sc42D))
(assert (= (ite (= ch42E var42E) 0 1) sc42E))
(assert (= (ite (= ch42F var42F) 0 1) sc42F))
(assert (<= sc42A 1))
(assert (<= sc42B 1))
(assert (<= sc42C 1))
(assert (<= sc42D 1))
(assert (<= sc42E 1))
(assert (<= sc42F 1))
(assert (<= (str.len var43A) 1))
(assert (<= (str.len var43B) 1))
(assert (<= (str.len var43C) 1))
(assert (<= (str.len var43D) 1))
(assert (<= (str.len var43E) 1))
(assert (<= (str.len var43F) 1))
(assert (= (str.++ preA (str.++ stem43 sufA)) (str.++ unch143A (str.++ ch43A unch243A))))
(assert (= (str.++ preB (str.++ stem43 sufB)) (str.++ unch143B (str.++ ch43B unch243B))))
(assert (= (str.++ preC (str.++ stem43 sufC)) (str.++ unch143C (str.++ ch43C unch243C))))
(assert (= (str.++ preD (str.++ stem43 sufD)) (str.++ unch143D (str.++ ch43D unch243D))))
(assert (= (str.++ preE (str.++ stem43 sufE)) (str.++ unch143E (str.++ ch43E unch243E))))
(assert (= (str.++ preF (str.++ stem43 sufF)) (str.++ unch143F (str.++ ch43F unch243F))))
(assert (= "hadlaj" (str.++ unch143D (str.++ var43D unch243D))))
(assert (= "haZaBaj" (str.++ unch143E (str.++ var43E unch243E))))
(assert (= "haZallaj" (str.++ unch143F (str.++ var43F unch243F))))
(assert (= (str.len stem43) l43))
(assert (= (ite (= ch43A var43A) 0 1) sc43A))
(assert (= (ite (= ch43B var43B) 0 1) sc43B))
(assert (= (ite (= ch43C var43C) 0 1) sc43C))
(assert (= (ite (= ch43D var43D) 0 1) sc43D))
(assert (= (ite (= ch43E var43E) 0 1) sc43E))
(assert (= (ite (= ch43F var43F) 0 1) sc43F))
(assert (<= sc43A 1))
(assert (<= sc43B 1))
(assert (<= sc43C 1))
(assert (<= sc43D 1))
(assert (<= sc43E 1))
(assert (<= sc43F 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      0
      sc30A
      sc30B
      sc30C
      sc30D
      sc30E
      sc30F
      0
      sc31A
      sc31B
      sc31C
      sc31D
      sc31E
      sc31F
      0
      sc32A
      sc32B
      sc32C
      sc32D
      sc32E
      sc32F
      0
      sc33A
      sc33B
      sc33C
      sc33D
      sc33E
      sc33F
      0
      sc34A
      sc34B
      sc34C
      sc34D
      sc34E
      sc34F
      0
      sc35A
      sc35B
      sc35C
      sc35D
      sc35E
      sc35F
      0
      sc36A
      sc36B
      sc36C
      sc36D
      sc36E
      sc36F
      0
      sc37A
      sc37B
      sc37C
      sc37D
      sc37E
      sc37F
      0
      sc38A
      sc38B
      sc38C
      sc38D
      sc38E
      sc38F
      0
      sc39A
      sc39B
      sc39C
      sc39D
      sc39E
      sc39F
      0
      sc40A
      sc40B
      sc40C
      sc40D
      sc40E
      sc40F
      0
      sc41A
      sc41B
      sc41C
      sc41D
      sc41E
      sc41F
      0
      sc42A
      sc42B
      sc42C
      sc42D
      sc42E
      sc42F
      0
      sc43A
      sc43B
      sc43C
      sc43D
      sc43E
      sc43F)
   5))
(assert (= (+ 0
      sc0C
      sc1C
      sc2C
      sc3C
      sc4C
      sc5C
      sc6C
      sc7C
      sc8C
      sc9C
      sc10C
      sc11C
      sc12C
      sc13C
      sc14C
      sc15C
      sc16C
      sc17C
      sc18C
      sc19C
      sc20C
      sc21C
      sc22C
      sc23C
      sc24C
      sc25C
      sc26C
      sc27C
      sc28C
      sc29C
      sc30C
      sc31C
      sc32C
      sc33C
      sc34C
      sc35C
      sc36C
      sc37C
      sc38C
      sc39C
      sc40C
      sc41C
      sc42C
      sc43C)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun var30A () String)
(declare-fun var30B () String)
(declare-fun var30C () String)
(declare-fun var30D () String)
(declare-fun var30E () String)
(declare-fun var30F () String)
(declare-fun unch230A () String)
(declare-fun ch30A () String)
(declare-fun unch130A () String)
(declare-fun stem30 () String)
(declare-fun unch230B () String)
(declare-fun ch30B () String)
(declare-fun unch130B () String)
(declare-fun unch230C () String)
(declare-fun ch30C () String)
(declare-fun unch130C () String)
(declare-fun unch230D () String)
(declare-fun ch30D () String)
(declare-fun unch130D () String)
(declare-fun unch230E () String)
(declare-fun ch30E () String)
(declare-fun unch130E () String)
(declare-fun unch230F () String)
(declare-fun ch30F () String)
(declare-fun unch130F () String)
(declare-fun l30 () Int)
(declare-fun sc30A () Int)
(declare-fun sc30B () Int)
(declare-fun sc30C () Int)
(declare-fun sc30D () Int)
(declare-fun sc30E () Int)
(declare-fun sc30F () Int)
(declare-fun var31A () String)
(declare-fun var31B () String)
(declare-fun var31C () String)
(declare-fun var31D () String)
(declare-fun var31E () String)
(declare-fun var31F () String)
(declare-fun unch231A () String)
(declare-fun ch31A () String)
(declare-fun unch131A () String)
(declare-fun stem31 () String)
(declare-fun unch231B () String)
(declare-fun ch31B () String)
(declare-fun unch131B () String)
(declare-fun unch231C () String)
(declare-fun ch31C () String)
(declare-fun unch131C () String)
(declare-fun unch231D () String)
(declare-fun ch31D () String)
(declare-fun unch131D () String)
(declare-fun unch231E () String)
(declare-fun ch31E () String)
(declare-fun unch131E () String)
(declare-fun unch231F () String)
(declare-fun ch31F () String)
(declare-fun unch131F () String)
(declare-fun l31 () Int)
(declare-fun sc31A () Int)
(declare-fun sc31B () Int)
(declare-fun sc31C () Int)
(declare-fun sc31D () Int)
(declare-fun sc31E () Int)
(declare-fun sc31F () Int)
(declare-fun var32A () String)
(declare-fun var32B () String)
(declare-fun var32C () String)
(declare-fun var32D () String)
(declare-fun var32E () String)
(declare-fun var32F () String)
(declare-fun unch232A () String)
(declare-fun ch32A () String)
(declare-fun unch132A () String)
(declare-fun stem32 () String)
(declare-fun unch232B () String)
(declare-fun ch32B () String)
(declare-fun unch132B () String)
(declare-fun unch232C () String)
(declare-fun ch32C () String)
(declare-fun unch132C () String)
(declare-fun unch232D () String)
(declare-fun ch32D () String)
(declare-fun unch132D () String)
(declare-fun unch232E () String)
(declare-fun ch32E () String)
(declare-fun unch132E () String)
(declare-fun unch232F () String)
(declare-fun ch32F () String)
(declare-fun unch132F () String)
(declare-fun l32 () Int)
(declare-fun sc32A () Int)
(declare-fun sc32B () Int)
(declare-fun sc32C () Int)
(declare-fun sc32D () Int)
(declare-fun sc32E () Int)
(declare-fun sc32F () Int)
(declare-fun var33A () String)
(declare-fun var33B () String)
(declare-fun var33C () String)
(declare-fun var33D () String)
(declare-fun var33E () String)
(declare-fun var33F () String)
(declare-fun unch233A () String)
(declare-fun ch33A () String)
(declare-fun unch133A () String)
(declare-fun stem33 () String)
(declare-fun unch233B () String)
(declare-fun ch33B () String)
(declare-fun unch133B () String)
(declare-fun unch233C () String)
(declare-fun ch33C () String)
(declare-fun unch133C () String)
(declare-fun unch233D () String)
(declare-fun ch33D () String)
(declare-fun unch133D () String)
(declare-fun unch233E () String)
(declare-fun ch33E () String)
(declare-fun unch133E () String)
(declare-fun unch233F () String)
(declare-fun ch33F () String)
(declare-fun unch133F () String)
(declare-fun l33 () Int)
(declare-fun sc33A () Int)
(declare-fun sc33B () Int)
(declare-fun sc33C () Int)
(declare-fun sc33D () Int)
(declare-fun sc33E () Int)
(declare-fun sc33F () Int)
(declare-fun var34A () String)
(declare-fun var34B () String)
(declare-fun var34C () String)
(declare-fun var34D () String)
(declare-fun var34E () String)
(declare-fun var34F () String)
(declare-fun unch234A () String)
(declare-fun ch34A () String)
(declare-fun unch134A () String)
(declare-fun stem34 () String)
(declare-fun unch234B () String)
(declare-fun ch34B () String)
(declare-fun unch134B () String)
(declare-fun unch234C () String)
(declare-fun ch34C () String)
(declare-fun unch134C () String)
(declare-fun unch234D () String)
(declare-fun ch34D () String)
(declare-fun unch134D () String)
(declare-fun unch234E () String)
(declare-fun ch34E () String)
(declare-fun unch134E () String)
(declare-fun unch234F () String)
(declare-fun ch34F () String)
(declare-fun unch134F () String)
(declare-fun l34 () Int)
(declare-fun sc34A () Int)
(declare-fun sc34B () Int)
(declare-fun sc34C () Int)
(declare-fun sc34D () Int)
(declare-fun sc34E () Int)
(declare-fun sc34F () Int)
(declare-fun var35A () String)
(declare-fun var35B () String)
(declare-fun var35C () String)
(declare-fun var35D () String)
(declare-fun var35E () String)
(declare-fun var35F () String)
(declare-fun unch235A () String)
(declare-fun ch35A () String)
(declare-fun unch135A () String)
(declare-fun stem35 () String)
(declare-fun unch235B () String)
(declare-fun ch35B () String)
(declare-fun unch135B () String)
(declare-fun unch235C () String)
(declare-fun ch35C () String)
(declare-fun unch135C () String)
(declare-fun unch235D () String)
(declare-fun ch35D () String)
(declare-fun unch135D () String)
(declare-fun unch235E () String)
(declare-fun ch35E () String)
(declare-fun unch135E () String)
(declare-fun unch235F () String)
(declare-fun ch35F () String)
(declare-fun unch135F () String)
(declare-fun l35 () Int)
(declare-fun sc35A () Int)
(declare-fun sc35B () Int)
(declare-fun sc35C () Int)
(declare-fun sc35D () Int)
(declare-fun sc35E () Int)
(declare-fun sc35F () Int)
(declare-fun var36A () String)
(declare-fun var36B () String)
(declare-fun var36C () String)
(declare-fun var36D () String)
(declare-fun var36E () String)
(declare-fun var36F () String)
(declare-fun unch236A () String)
(declare-fun ch36A () String)
(declare-fun unch136A () String)
(declare-fun stem36 () String)
(declare-fun unch236B () String)
(declare-fun ch36B () String)
(declare-fun unch136B () String)
(declare-fun unch236C () String)
(declare-fun ch36C () String)
(declare-fun unch136C () String)
(declare-fun unch236D () String)
(declare-fun ch36D () String)
(declare-fun unch136D () String)
(declare-fun unch236E () String)
(declare-fun ch36E () String)
(declare-fun unch136E () String)
(declare-fun unch236F () String)
(declare-fun ch36F () String)
(declare-fun unch136F () String)
(declare-fun l36 () Int)
(declare-fun sc36A () Int)
(declare-fun sc36B () Int)
(declare-fun sc36C () Int)
(declare-fun sc36D () Int)
(declare-fun sc36E () Int)
(declare-fun sc36F () Int)
(declare-fun var37A () String)
(declare-fun var37B () String)
(declare-fun var37C () String)
(declare-fun var37D () String)
(declare-fun var37E () String)
(declare-fun var37F () String)
(declare-fun unch237A () String)
(declare-fun ch37A () String)
(declare-fun unch137A () String)
(declare-fun stem37 () String)
(declare-fun unch237B () String)
(declare-fun ch37B () String)
(declare-fun unch137B () String)
(declare-fun unch237C () String)
(declare-fun ch37C () String)
(declare-fun unch137C () String)
(declare-fun unch237D () String)
(declare-fun ch37D () String)
(declare-fun unch137D () String)
(declare-fun unch237E () String)
(declare-fun ch37E () String)
(declare-fun unch137E () String)
(declare-fun unch237F () String)
(declare-fun ch37F () String)
(declare-fun unch137F () String)
(declare-fun l37 () Int)
(declare-fun sc37A () Int)
(declare-fun sc37B () Int)
(declare-fun sc37C () Int)
(declare-fun sc37D () Int)
(declare-fun sc37E () Int)
(declare-fun sc37F () Int)
(declare-fun var38A () String)
(declare-fun var38B () String)
(declare-fun var38C () String)
(declare-fun var38D () String)
(declare-fun var38E () String)
(declare-fun var38F () String)
(declare-fun unch238A () String)
(declare-fun ch38A () String)
(declare-fun unch138A () String)
(declare-fun stem38 () String)
(declare-fun unch238B () String)
(declare-fun ch38B () String)
(declare-fun unch138B () String)
(declare-fun unch238C () String)
(declare-fun ch38C () String)
(declare-fun unch138C () String)
(declare-fun unch238D () String)
(declare-fun ch38D () String)
(declare-fun unch138D () String)
(declare-fun unch238E () String)
(declare-fun ch38E () String)
(declare-fun unch138E () String)
(declare-fun unch238F () String)
(declare-fun ch38F () String)
(declare-fun unch138F () String)
(declare-fun l38 () Int)
(declare-fun sc38A () Int)
(declare-fun sc38B () Int)
(declare-fun sc38C () Int)
(declare-fun sc38D () Int)
(declare-fun sc38E () Int)
(declare-fun sc38F () Int)
(declare-fun var39A () String)
(declare-fun var39B () String)
(declare-fun var39C () String)
(declare-fun var39D () String)
(declare-fun var39E () String)
(declare-fun var39F () String)
(declare-fun unch239A () String)
(declare-fun ch39A () String)
(declare-fun unch139A () String)
(declare-fun stem39 () String)
(declare-fun unch239B () String)
(declare-fun ch39B () String)
(declare-fun unch139B () String)
(declare-fun unch239C () String)
(declare-fun ch39C () String)
(declare-fun unch139C () String)
(declare-fun unch239D () String)
(declare-fun ch39D () String)
(declare-fun unch139D () String)
(declare-fun unch239E () String)
(declare-fun ch39E () String)
(declare-fun unch139E () String)
(declare-fun unch239F () String)
(declare-fun ch39F () String)
(declare-fun unch139F () String)
(declare-fun l39 () Int)
(declare-fun sc39A () Int)
(declare-fun sc39B () Int)
(declare-fun sc39C () Int)
(declare-fun sc39D () Int)
(declare-fun sc39E () Int)
(declare-fun sc39F () Int)
(declare-fun var40A () String)
(declare-fun var40B () String)
(declare-fun var40C () String)
(declare-fun var40D () String)
(declare-fun var40E () String)
(declare-fun var40F () String)
(declare-fun unch240A () String)
(declare-fun ch40A () String)
(declare-fun unch140A () String)
(declare-fun stem40 () String)
(declare-fun unch240B () String)
(declare-fun ch40B () String)
(declare-fun unch140B () String)
(declare-fun unch240C () String)
(declare-fun ch40C () String)
(declare-fun unch140C () String)
(declare-fun unch240D () String)
(declare-fun ch40D () String)
(declare-fun unch140D () String)
(declare-fun unch240E () String)
(declare-fun ch40E () String)
(declare-fun unch140E () String)
(declare-fun unch240F () String)
(declare-fun ch40F () String)
(declare-fun unch140F () String)
(declare-fun l40 () Int)
(declare-fun sc40A () Int)
(declare-fun sc40B () Int)
(declare-fun sc40C () Int)
(declare-fun sc40D () Int)
(declare-fun sc40E () Int)
(declare-fun sc40F () Int)
(declare-fun var41A () String)
(declare-fun var41B () String)
(declare-fun var41C () String)
(declare-fun var41D () String)
(declare-fun var41E () String)
(declare-fun var41F () String)
(declare-fun unch241A () String)
(declare-fun ch41A () String)
(declare-fun unch141A () String)
(declare-fun stem41 () String)
(declare-fun unch241B () String)
(declare-fun ch41B () String)
(declare-fun unch141B () String)
(declare-fun unch241C () String)
(declare-fun ch41C () String)
(declare-fun unch141C () String)
(declare-fun unch241D () String)
(declare-fun ch41D () String)
(declare-fun unch141D () String)
(declare-fun unch241E () String)
(declare-fun ch41E () String)
(declare-fun unch141E () String)
(declare-fun unch241F () String)
(declare-fun ch41F () String)
(declare-fun unch141F () String)
(declare-fun l41 () Int)
(declare-fun sc41A () Int)
(declare-fun sc41B () Int)
(declare-fun sc41C () Int)
(declare-fun sc41D () Int)
(declare-fun sc41E () Int)
(declare-fun sc41F () Int)
(declare-fun var42A () String)
(declare-fun var42B () String)
(declare-fun var42C () String)
(declare-fun var42D () String)
(declare-fun var42E () String)
(declare-fun var42F () String)
(declare-fun unch242A () String)
(declare-fun ch42A () String)
(declare-fun unch142A () String)
(declare-fun stem42 () String)
(declare-fun unch242B () String)
(declare-fun ch42B () String)
(declare-fun unch142B () String)
(declare-fun unch242C () String)
(declare-fun ch42C () String)
(declare-fun unch142C () String)
(declare-fun unch242D () String)
(declare-fun ch42D () String)
(declare-fun unch142D () String)
(declare-fun unch242E () String)
(declare-fun ch42E () String)
(declare-fun unch142E () String)
(declare-fun unch242F () String)
(declare-fun ch42F () String)
(declare-fun unch142F () String)
(declare-fun l42 () Int)
(declare-fun sc42A () Int)
(declare-fun sc42B () Int)
(declare-fun sc42C () Int)
(declare-fun sc42D () Int)
(declare-fun sc42E () Int)
(declare-fun sc42F () Int)
(declare-fun var43A () String)
(declare-fun var43B () String)
(declare-fun var43C () String)
(declare-fun var43D () String)
(declare-fun var43E () String)
(declare-fun var43F () String)
(declare-fun unch243A () String)
(declare-fun ch43A () String)
(declare-fun unch143A () String)
(declare-fun stem43 () String)
(declare-fun unch243B () String)
(declare-fun ch43B () String)
(declare-fun unch143B () String)
(declare-fun unch243C () String)
(declare-fun ch43C () String)
(declare-fun unch143C () String)
(declare-fun unch243D () String)
(declare-fun ch43D () String)
(declare-fun unch143D () String)
(declare-fun unch243E () String)
(declare-fun ch43E () String)
(declare-fun unch143E () String)
(declare-fun unch243F () String)
(declare-fun ch43F () String)
(declare-fun unch143F () String)
(declare-fun l43 () Int)
(declare-fun sc43A () Int)
(declare-fun sc43B () Int)
(declare-fun sc43C () Int)
(declare-fun sc43D () Int)
(declare-fun sc43E () Int)
(declare-fun sc43F () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= "daar" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "daarta" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "daaro" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= "gees" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "geesta" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "geeso" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= "laf" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "lafta" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "lafo" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= "lug" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "lugta" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "luOo" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= "naag" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "naagta" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "naaOo" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= "tib" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "tibta" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "tiXo" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= "sab" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "sabta" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "saXo" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= "bad" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "bada" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "baZo" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= "Bid" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "Bida" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "BiZo" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= "fee1" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "fee1a" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "fee2o" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= "3iir" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "3iirta" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "3iiro" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= "4ul" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "4uBa" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "4ulo" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= "bil" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "biBa" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "bilo" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= "meel" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "meeBa" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "meelo" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= "kaliil" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "kaliiBa" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "kaliilo" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= "najl" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "najBa" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "najlo" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= "sun" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "sunta" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "sumo" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= "laan" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "laanta" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "laamo" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= "sin" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "sinta" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "simo" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= "dan" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "danta" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "dano" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= "daan" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "daanta" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "daano" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= "saan" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "saanta" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "saano" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= "nirig" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "nirigta" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "nirgo" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= "gaXa1" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= "gaXa1a" (str.++ unch123B (str.++ var23B unch223B))))
(assert (= "gab1o" (str.++ unch123C (str.++ var23C unch223C))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= "hoOol" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= "hoOoBa" (str.++ unch124B (str.++ var24B unch224B))))
(assert (= "hoglo" (str.++ unch124C (str.++ var24C unch224C))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= "baOal" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= "baOaBa" (str.++ unch125B (str.++ var25B unch225B))))
(assert (= "baglo" (str.++ unch125C (str.++ var25C unch225C))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= "wa5ar" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= "wa5arta" (str.++ unch126B (str.++ var26B unch226B))))
(assert (= "wa5aro" (str.++ unch126C (str.++ var26C unch226C))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= "irbad" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= "irbada" (str.++ unch127B (str.++ var27B unch227B))))
(assert (= "irbaZo" (str.++ unch127C (str.++ var27C unch227C))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= "kefed" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= "kefeda" (str.++ unch128B (str.++ var28B unch228B))))
(assert (= "kefeZo" (str.++ unch128C (str.++ var28C unch228C))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= "Bilin" (str.++ unch129A (str.++ var29A unch229A))))
(assert (= "Bilinta" (str.++ unch129B (str.++ var29B unch229B))))
(assert (= "Bilino" (str.++ unch129C (str.++ var29C unch229C))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= (str.len var30A) 1))
(assert (<= (str.len var30B) 1))
(assert (<= (str.len var30C) 1))
(assert (<= (str.len var30D) 1))
(assert (<= (str.len var30E) 1))
(assert (<= (str.len var30F) 1))
(assert (= (str.++ preA (str.++ stem30 sufA)) (str.++ unch130A (str.++ ch30A unch230A))))
(assert (= (str.++ preB (str.++ stem30 sufB)) (str.++ unch130B (str.++ ch30B unch230B))))
(assert (= (str.++ preC (str.++ stem30 sufC)) (str.++ unch130C (str.++ ch30C unch230C))))
(assert (= (str.++ preD (str.++ stem30 sufD)) (str.++ unch130D (str.++ ch30D unch230D))))
(assert (= (str.++ preE (str.++ stem30 sufE)) (str.++ unch130E (str.++ ch30E unch230E))))
(assert (= (str.++ preF (str.++ stem30 sufF)) (str.++ unch130F (str.++ ch30F unch230F))))
(assert (= "bohol" (str.++ unch130A (str.++ var30A unch230A))))
(assert (= "bohoBa" (str.++ unch130B (str.++ var30B unch230B))))
(assert (= "boholo" (str.++ unch130C (str.++ var30C unch230C))))
(assert (= (str.len stem30) l30))
(assert (= (ite (= ch30A var30A) 0 1) sc30A))
(assert (= (ite (= ch30B var30B) 0 1) sc30B))
(assert (= (ite (= ch30C var30C) 0 1) sc30C))
(assert (= (ite (= ch30D var30D) 0 1) sc30D))
(assert (= (ite (= ch30E var30E) 0 1) sc30E))
(assert (= (ite (= ch30F var30F) 0 1) sc30F))
(assert (<= sc30A 1))
(assert (<= sc30B 1))
(assert (<= sc30C 1))
(assert (<= sc30D 1))
(assert (<= sc30E 1))
(assert (<= sc30F 1))
(assert (<= (str.len var31A) 1))
(assert (<= (str.len var31B) 1))
(assert (<= (str.len var31C) 1))
(assert (<= (str.len var31D) 1))
(assert (<= (str.len var31E) 1))
(assert (<= (str.len var31F) 1))
(assert (= (str.++ preA (str.++ stem31 sufA)) (str.++ unch131A (str.++ ch31A unch231A))))
(assert (= (str.++ preB (str.++ stem31 sufB)) (str.++ unch131B (str.++ ch31B unch231B))))
(assert (= (str.++ preC (str.++ stem31 sufC)) (str.++ unch131C (str.++ ch31C unch231C))))
(assert (= (str.++ preD (str.++ stem31 sufD)) (str.++ unch131D (str.++ ch31D unch231D))))
(assert (= (str.++ preE (str.++ stem31 sufE)) (str.++ unch131E (str.++ ch31E unch231E))))
(assert (= (str.++ preF (str.++ stem31 sufF)) (str.++ unch131F (str.++ ch31F unch231F))))
(assert (= "4aajad" (str.++ unch131A (str.++ var31A unch231A))))
(assert (= "4aajada" (str.++ unch131B (str.++ var31B unch231B))))
(assert (= "4aajaZo" (str.++ unch131C (str.++ var31C unch231C))))
(assert (= (str.len stem31) l31))
(assert (= (ite (= ch31A var31A) 0 1) sc31A))
(assert (= (ite (= ch31B var31B) 0 1) sc31B))
(assert (= (ite (= ch31C var31C) 0 1) sc31C))
(assert (= (ite (= ch31D var31D) 0 1) sc31D))
(assert (= (ite (= ch31E var31E) 0 1) sc31E))
(assert (= (ite (= ch31F var31F) 0 1) sc31F))
(assert (<= sc31A 1))
(assert (<= sc31B 1))
(assert (<= sc31C 1))
(assert (<= sc31D 1))
(assert (<= sc31E 1))
(assert (<= sc31F 1))
(assert (<= (str.len var32A) 1))
(assert (<= (str.len var32B) 1))
(assert (<= (str.len var32C) 1))
(assert (<= (str.len var32D) 1))
(assert (<= (str.len var32E) 1))
(assert (<= (str.len var32F) 1))
(assert (= (str.++ preA (str.++ stem32 sufA)) (str.++ unch132A (str.++ ch32A unch232A))))
(assert (= (str.++ preB (str.++ stem32 sufB)) (str.++ unch132B (str.++ ch32B unch232B))))
(assert (= (str.++ preC (str.++ stem32 sufC)) (str.++ unch132C (str.++ ch32C unch232C))))
(assert (= (str.++ preD (str.++ stem32 sufD)) (str.++ unch132D (str.++ ch32D unch232D))))
(assert (= (str.++ preE (str.++ stem32 sufE)) (str.++ unch132E (str.++ ch32E unch232E))))
(assert (= (str.++ preF (str.++ stem32 sufF)) (str.++ unch132F (str.++ ch32F unch232F))))
(assert (= "ga3an" (str.++ unch132A (str.++ var32A unch232A))))
(assert (= "ga3anta" (str.++ unch132B (str.++ var32B unch232B))))
(assert (= "ga3mo" (str.++ unch132C (str.++ var32C unch232C))))
(assert (= (str.len stem32) l32))
(assert (= (ite (= ch32A var32A) 0 1) sc32A))
(assert (= (ite (= ch32B var32B) 0 1) sc32B))
(assert (= (ite (= ch32C var32C) 0 1) sc32C))
(assert (= (ite (= ch32D var32D) 0 1) sc32D))
(assert (= (ite (= ch32E var32E) 0 1) sc32E))
(assert (= (ite (= ch32F var32F) 0 1) sc32F))
(assert (<= sc32A 1))
(assert (<= sc32B 1))
(assert (<= sc32C 1))
(assert (<= sc32D 1))
(assert (<= sc32E 1))
(assert (<= sc32F 1))
(assert (<= (str.len var33A) 1))
(assert (<= (str.len var33B) 1))
(assert (<= (str.len var33C) 1))
(assert (<= (str.len var33D) 1))
(assert (<= (str.len var33E) 1))
(assert (<= (str.len var33F) 1))
(assert (= (str.++ preA (str.++ stem33 sufA)) (str.++ unch133A (str.++ ch33A unch233A))))
(assert (= (str.++ preB (str.++ stem33 sufB)) (str.++ unch133B (str.++ ch33B unch233B))))
(assert (= (str.++ preC (str.++ stem33 sufC)) (str.++ unch133C (str.++ ch33C unch233C))))
(assert (= (str.++ preD (str.++ stem33 sufD)) (str.++ unch133D (str.++ ch33D unch233D))))
(assert (= (str.++ preE (str.++ stem33 sufE)) (str.++ unch133E (str.++ ch33E unch233E))))
(assert (= (str.++ preF (str.++ stem33 sufF)) (str.++ unch133F (str.++ ch33F unch233F))))
(assert (= "4inan" (str.++ unch133A (str.++ var33A unch233A))))
(assert (= "4inanta" (str.++ unch133B (str.++ var33B unch233B))))
(assert (= "4inano" (str.++ unch133C (str.++ var33C unch233C))))
(assert (= (str.len stem33) l33))
(assert (= (ite (= ch33A var33A) 0 1) sc33A))
(assert (= (ite (= ch33B var33B) 0 1) sc33B))
(assert (= (ite (= ch33C var33C) 0 1) sc33C))
(assert (= (ite (= ch33D var33D) 0 1) sc33D))
(assert (= (ite (= ch33E var33E) 0 1) sc33E))
(assert (= (ite (= ch33F var33F) 0 1) sc33F))
(assert (<= sc33A 1))
(assert (<= sc33B 1))
(assert (<= sc33C 1))
(assert (<= sc33D 1))
(assert (<= sc33E 1))
(assert (<= sc33F 1))
(assert (<= (str.len var34A) 1))
(assert (<= (str.len var34B) 1))
(assert (<= (str.len var34C) 1))
(assert (<= (str.len var34D) 1))
(assert (<= (str.len var34E) 1))
(assert (<= (str.len var34F) 1))
(assert (= (str.++ preA (str.++ stem34 sufA)) (str.++ unch134A (str.++ ch34A unch234A))))
(assert (= (str.++ preB (str.++ stem34 sufB)) (str.++ unch134B (str.++ ch34B unch234B))))
(assert (= (str.++ preC (str.++ stem34 sufC)) (str.++ unch134C (str.++ ch34C unch234C))))
(assert (= (str.++ preD (str.++ stem34 sufD)) (str.++ unch134D (str.++ ch34D unch234D))))
(assert (= (str.++ preE (str.++ stem34 sufE)) (str.++ unch134E (str.++ ch34E unch234E))))
(assert (= (str.++ preF (str.++ stem34 sufF)) (str.++ unch134F (str.++ ch34F unch234F))))
(assert (= "suOaj" (str.++ unch134D (str.++ var34D unch234D))))
(assert (= "sugtaj" (str.++ unch134E (str.++ var34E unch234E))))
(assert (= "sugnaj" (str.++ unch134F (str.++ var34F unch234F))))
(assert (= (str.len stem34) l34))
(assert (= (ite (= ch34A var34A) 0 1) sc34A))
(assert (= (ite (= ch34B var34B) 0 1) sc34B))
(assert (= (ite (= ch34C var34C) 0 1) sc34C))
(assert (= (ite (= ch34D var34D) 0 1) sc34D))
(assert (= (ite (= ch34E var34E) 0 1) sc34E))
(assert (= (ite (= ch34F var34F) 0 1) sc34F))
(assert (<= sc34A 1))
(assert (<= sc34B 1))
(assert (<= sc34C 1))
(assert (<= sc34D 1))
(assert (<= sc34E 1))
(assert (<= sc34F 1))
(assert (<= (str.len var35A) 1))
(assert (<= (str.len var35B) 1))
(assert (<= (str.len var35C) 1))
(assert (<= (str.len var35D) 1))
(assert (<= (str.len var35E) 1))
(assert (<= (str.len var35F) 1))
(assert (= (str.++ preA (str.++ stem35 sufA)) (str.++ unch135A (str.++ ch35A unch235A))))
(assert (= (str.++ preB (str.++ stem35 sufB)) (str.++ unch135B (str.++ ch35B unch235B))))
(assert (= (str.++ preC (str.++ stem35 sufC)) (str.++ unch135C (str.++ ch35C unch235C))))
(assert (= (str.++ preD (str.++ stem35 sufD)) (str.++ unch135D (str.++ ch35D unch235D))))
(assert (= (str.++ preE (str.++ stem35 sufE)) (str.++ unch135E (str.++ ch35E unch235E))))
(assert (= (str.++ preF (str.++ stem35 sufF)) (str.++ unch135F (str.++ ch35F unch235F))))
(assert (= "kaXaj" (str.++ unch135D (str.++ var35D unch235D))))
(assert (= "kabtaj" (str.++ unch135E (str.++ var35E unch235E))))
(assert (= "kabnaj" (str.++ unch135F (str.++ var35F unch235F))))
(assert (= (str.len stem35) l35))
(assert (= (ite (= ch35A var35A) 0 1) sc35A))
(assert (= (ite (= ch35B var35B) 0 1) sc35B))
(assert (= (ite (= ch35C var35C) 0 1) sc35C))
(assert (= (ite (= ch35D var35D) 0 1) sc35D))
(assert (= (ite (= ch35E var35E) 0 1) sc35E))
(assert (= (ite (= ch35F var35F) 0 1) sc35F))
(assert (<= sc35A 1))
(assert (<= sc35B 1))
(assert (<= sc35C 1))
(assert (<= sc35D 1))
(assert (<= sc35E 1))
(assert (<= sc35F 1))
(assert (<= (str.len var36A) 1))
(assert (<= (str.len var36B) 1))
(assert (<= (str.len var36C) 1))
(assert (<= (str.len var36D) 1))
(assert (<= (str.len var36E) 1))
(assert (<= (str.len var36F) 1))
(assert (= (str.++ preA (str.++ stem36 sufA)) (str.++ unch136A (str.++ ch36A unch236A))))
(assert (= (str.++ preB (str.++ stem36 sufB)) (str.++ unch136B (str.++ ch36B unch236B))))
(assert (= (str.++ preC (str.++ stem36 sufC)) (str.++ unch136C (str.++ ch36C unch236C))))
(assert (= (str.++ preD (str.++ stem36 sufD)) (str.++ unch136D (str.++ ch36D unch236D))))
(assert (= (str.++ preE (str.++ stem36 sufE)) (str.++ unch136E (str.++ ch36E unch236E))))
(assert (= (str.++ preF (str.++ stem36 sufF)) (str.++ unch136F (str.++ ch36F unch236F))))
(assert (= "siZaj" (str.++ unch136D (str.++ var36D unch236D))))
(assert (= "sidaj" (str.++ unch136E (str.++ var36E unch236E))))
(assert (= "sidnaj" (str.++ unch136F (str.++ var36F unch236F))))
(assert (= (str.len stem36) l36))
(assert (= (ite (= ch36A var36A) 0 1) sc36A))
(assert (= (ite (= ch36B var36B) 0 1) sc36B))
(assert (= (ite (= ch36C var36C) 0 1) sc36C))
(assert (= (ite (= ch36D var36D) 0 1) sc36D))
(assert (= (ite (= ch36E var36E) 0 1) sc36E))
(assert (= (ite (= ch36F var36F) 0 1) sc36F))
(assert (<= sc36A 1))
(assert (<= sc36B 1))
(assert (<= sc36C 1))
(assert (<= sc36D 1))
(assert (<= sc36E 1))
(assert (<= sc36F 1))
(assert (<= (str.len var37A) 1))
(assert (<= (str.len var37B) 1))
(assert (<= (str.len var37C) 1))
(assert (<= (str.len var37D) 1))
(assert (<= (str.len var37E) 1))
(assert (<= (str.len var37F) 1))
(assert (= (str.++ preA (str.++ stem37 sufA)) (str.++ unch137A (str.++ ch37A unch237A))))
(assert (= (str.++ preB (str.++ stem37 sufB)) (str.++ unch137B (str.++ ch37B unch237B))))
(assert (= (str.++ preC (str.++ stem37 sufC)) (str.++ unch137C (str.++ ch37C unch237C))))
(assert (= (str.++ preD (str.++ stem37 sufD)) (str.++ unch137D (str.++ ch37D unch237D))))
(assert (= (str.++ preE (str.++ stem37 sufE)) (str.++ unch137E (str.++ ch37E unch237E))))
(assert (= (str.++ preF (str.++ stem37 sufF)) (str.++ unch137F (str.++ ch37F unch237F))))
(assert (= "dilaj" (str.++ unch137D (str.++ var37D unch237D))))
(assert (= "diBaj" (str.++ unch137E (str.++ var37E unch237E))))
(assert (= "dillaj" (str.++ unch137F (str.++ var37F unch237F))))
(assert (= (str.len stem37) l37))
(assert (= (ite (= ch37A var37A) 0 1) sc37A))
(assert (= (ite (= ch37B var37B) 0 1) sc37B))
(assert (= (ite (= ch37C var37C) 0 1) sc37C))
(assert (= (ite (= ch37D var37D) 0 1) sc37D))
(assert (= (ite (= ch37E var37E) 0 1) sc37E))
(assert (= (ite (= ch37F var37F) 0 1) sc37F))
(assert (<= sc37A 1))
(assert (<= sc37B 1))
(assert (<= sc37C 1))
(assert (<= sc37D 1))
(assert (<= sc37E 1))
(assert (<= sc37F 1))
(assert (<= (str.len var38A) 1))
(assert (<= (str.len var38B) 1))
(assert (<= (str.len var38C) 1))
(assert (<= (str.len var38D) 1))
(assert (<= (str.len var38E) 1))
(assert (<= (str.len var38F) 1))
(assert (= (str.++ preA (str.++ stem38 sufA)) (str.++ unch138A (str.++ ch38A unch238A))))
(assert (= (str.++ preB (str.++ stem38 sufB)) (str.++ unch138B (str.++ ch38B unch238B))))
(assert (= (str.++ preC (str.++ stem38 sufC)) (str.++ unch138C (str.++ ch38C unch238C))))
(assert (= (str.++ preD (str.++ stem38 sufD)) (str.++ unch138D (str.++ ch38D unch238D))))
(assert (= (str.++ preE (str.++ stem38 sufE)) (str.++ unch138E (str.++ ch38E unch238E))))
(assert (= (str.++ preF (str.++ stem38 sufF)) (str.++ unch138F (str.++ ch38F unch238F))))
(assert (= "ganaj" (str.++ unch138D (str.++ var38D unch238D))))
(assert (= "gantaj" (str.++ unch138E (str.++ var38E unch238E))))
(assert (= "gannaj" (str.++ unch138F (str.++ var38F unch238F))))
(assert (= (str.len stem38) l38))
(assert (= (ite (= ch38A var38A) 0 1) sc38A))
(assert (= (ite (= ch38B var38B) 0 1) sc38B))
(assert (= (ite (= ch38C var38C) 0 1) sc38C))
(assert (= (ite (= ch38D var38D) 0 1) sc38D))
(assert (= (ite (= ch38E var38E) 0 1) sc38E))
(assert (= (ite (= ch38F var38F) 0 1) sc38F))
(assert (<= sc38A 1))
(assert (<= sc38B 1))
(assert (<= sc38C 1))
(assert (<= sc38D 1))
(assert (<= sc38E 1))
(assert (<= sc38F 1))
(assert (<= (str.len var39A) 1))
(assert (<= (str.len var39B) 1))
(assert (<= (str.len var39C) 1))
(assert (<= (str.len var39D) 1))
(assert (<= (str.len var39E) 1))
(assert (<= (str.len var39F) 1))
(assert (= (str.++ preA (str.++ stem39 sufA)) (str.++ unch139A (str.++ ch39A unch239A))))
(assert (= (str.++ preB (str.++ stem39 sufB)) (str.++ unch139B (str.++ ch39B unch239B))))
(assert (= (str.++ preC (str.++ stem39 sufC)) (str.++ unch139C (str.++ ch39C unch239C))))
(assert (= (str.++ preD (str.++ stem39 sufD)) (str.++ unch139D (str.++ ch39D unch239D))))
(assert (= (str.++ preE (str.++ stem39 sufE)) (str.++ unch139E (str.++ ch39E unch239E))))
(assert (= (str.++ preF (str.++ stem39 sufF)) (str.++ unch139F (str.++ ch39F unch239F))))
(assert (= "tumaj" (str.++ unch139D (str.++ var39D unch239D))))
(assert (= "tuntaj" (str.++ unch139E (str.++ var39E unch239E))))
(assert (= "tunnaj" (str.++ unch139F (str.++ var39F unch239F))))
(assert (= (str.len stem39) l39))
(assert (= (ite (= ch39A var39A) 0 1) sc39A))
(assert (= (ite (= ch39B var39B) 0 1) sc39B))
(assert (= (ite (= ch39C var39C) 0 1) sc39C))
(assert (= (ite (= ch39D var39D) 0 1) sc39D))
(assert (= (ite (= ch39E var39E) 0 1) sc39E))
(assert (= (ite (= ch39F var39F) 0 1) sc39F))
(assert (<= sc39A 1))
(assert (<= sc39B 1))
(assert (<= sc39C 1))
(assert (<= sc39D 1))
(assert (<= sc39E 1))
(assert (<= sc39F 1))
(assert (<= (str.len var40A) 1))
(assert (<= (str.len var40B) 1))
(assert (<= (str.len var40C) 1))
(assert (<= (str.len var40D) 1))
(assert (<= (str.len var40E) 1))
(assert (<= (str.len var40F) 1))
(assert (= (str.++ preA (str.++ stem40 sufA)) (str.++ unch140A (str.++ ch40A unch240A))))
(assert (= (str.++ preB (str.++ stem40 sufB)) (str.++ unch140B (str.++ ch40B unch240B))))
(assert (= (str.++ preC (str.++ stem40 sufC)) (str.++ unch140C (str.++ ch40C unch240C))))
(assert (= (str.++ preD (str.++ stem40 sufD)) (str.++ unch140D (str.++ ch40D unch240D))))
(assert (= (str.++ preE (str.++ stem40 sufE)) (str.++ unch140E (str.++ ch40E unch240E))))
(assert (= (str.++ preF (str.++ stem40 sufF)) (str.++ unch140F (str.++ ch40F unch240F))))
(assert (= "argaj" (str.++ unch140D (str.++ var40D unch240D))))
(assert (= "aragtaj" (str.++ unch140E (str.++ var40E unch240E))))
(assert (= "aragnaj" (str.++ unch140F (str.++ var40F unch240F))))
(assert (= (str.len stem40) l40))
(assert (= (ite (= ch40A var40A) 0 1) sc40A))
(assert (= (ite (= ch40B var40B) 0 1) sc40B))
(assert (= (ite (= ch40C var40C) 0 1) sc40C))
(assert (= (ite (= ch40D var40D) 0 1) sc40D))
(assert (= (ite (= ch40E var40E) 0 1) sc40E))
(assert (= (ite (= ch40F var40F) 0 1) sc40F))
(assert (<= sc40A 1))
(assert (<= sc40B 1))
(assert (<= sc40C 1))
(assert (<= sc40D 1))
(assert (<= sc40E 1))
(assert (<= sc40F 1))
(assert (<= (str.len var41A) 1))
(assert (<= (str.len var41B) 1))
(assert (<= (str.len var41C) 1))
(assert (<= (str.len var41D) 1))
(assert (<= (str.len var41E) 1))
(assert (<= (str.len var41F) 1))
(assert (= (str.++ preA (str.++ stem41 sufA)) (str.++ unch141A (str.++ ch41A unch241A))))
(assert (= (str.++ preB (str.++ stem41 sufB)) (str.++ unch141B (str.++ ch41B unch241B))))
(assert (= (str.++ preC (str.++ stem41 sufC)) (str.++ unch141C (str.++ ch41C unch241C))))
(assert (= (str.++ preD (str.++ stem41 sufD)) (str.++ unch141D (str.++ ch41D unch241D))))
(assert (= (str.++ preE (str.++ stem41 sufE)) (str.++ unch141E (str.++ ch41E unch241E))))
(assert (= (str.++ preF (str.++ stem41 sufF)) (str.++ unch141F (str.++ ch41F unch241F))))
(assert (= "gudbaj" (str.++ unch141D (str.++ var41D unch241D))))
(assert (= "guZubtaj" (str.++ unch141E (str.++ var41E unch241E))))
(assert (= "guZubnaj" (str.++ unch141F (str.++ var41F unch241F))))
(assert (= (str.len stem41) l41))
(assert (= (ite (= ch41A var41A) 0 1) sc41A))
(assert (= (ite (= ch41B var41B) 0 1) sc41B))
(assert (= (ite (= ch41C var41C) 0 1) sc41C))
(assert (= (ite (= ch41D var41D) 0 1) sc41D))
(assert (= (ite (= ch41E var41E) 0 1) sc41E))
(assert (= (ite (= ch41F var41F) 0 1) sc41F))
(assert (<= sc41A 1))
(assert (<= sc41B 1))
(assert (<= sc41C 1))
(assert (<= sc41D 1))
(assert (<= sc41E 1))
(assert (<= sc41F 1))
(assert (<= (str.len var42A) 1))
(assert (<= (str.len var42B) 1))
(assert (<= (str.len var42C) 1))
(assert (<= (str.len var42D) 1))
(assert (<= (str.len var42E) 1))
(assert (<= (str.len var42F) 1))
(assert (= (str.++ preA (str.++ stem42 sufA)) (str.++ unch142A (str.++ ch42A unch242A))))
(assert (= (str.++ preB (str.++ stem42 sufB)) (str.++ unch142B (str.++ ch42B unch242B))))
(assert (= (str.++ preC (str.++ stem42 sufC)) (str.++ unch142C (str.++ ch42C unch242C))))
(assert (= (str.++ preD (str.++ stem42 sufD)) (str.++ unch142D (str.++ ch42D unch242D))))
(assert (= (str.++ preE (str.++ stem42 sufE)) (str.++ unch142E (str.++ ch42E unch242E))))
(assert (= (str.++ preF (str.++ stem42 sufF)) (str.++ unch142F (str.++ ch42F unch242F))))
(assert (= "qoslaj" (str.++ unch142D (str.++ var42D unch242D))))
(assert (= "qosoBaj" (str.++ unch142E (str.++ var42E unch242E))))
(assert (= "qosollaj" (str.++ unch142F (str.++ var42F unch242F))))
(assert (= (str.len stem42) l42))
(assert (= (ite (= ch42A var42A) 0 1) sc42A))
(assert (= (ite (= ch42B var42B) 0 1) sc42B))
(assert (= (ite (= ch42C var42C) 0 1) sc42C))
(assert (= (ite (= ch42D var42D) 0 1) sc42D))
(assert (= (ite (= ch42E var42E) 0 1) sc42E))
(assert (= (ite (= ch42F var42F) 0 1) sc42F))
(assert (<= sc42A 1))
(assert (<= sc42B 1))
(assert (<= sc42C 1))
(assert (<= sc42D 1))
(assert (<= sc42E 1))
(assert (<= sc42F 1))
(assert (<= (str.len var43A) 1))
(assert (<= (str.len var43B) 1))
(assert (<= (str.len var43C) 1))
(assert (<= (str.len var43D) 1))
(assert (<= (str.len var43E) 1))
(assert (<= (str.len var43F) 1))
(assert (= (str.++ preA (str.++ stem43 sufA)) (str.++ unch143A (str.++ ch43A unch243A))))
(assert (= (str.++ preB (str.++ stem43 sufB)) (str.++ unch143B (str.++ ch43B unch243B))))
(assert (= (str.++ preC (str.++ stem43 sufC)) (str.++ unch143C (str.++ ch43C unch243C))))
(assert (= (str.++ preD (str.++ stem43 sufD)) (str.++ unch143D (str.++ ch43D unch243D))))
(assert (= (str.++ preE (str.++ stem43 sufE)) (str.++ unch143E (str.++ ch43E unch243E))))
(assert (= (str.++ preF (str.++ stem43 sufF)) (str.++ unch143F (str.++ ch43F unch243F))))
(assert (= "hadlaj" (str.++ unch143D (str.++ var43D unch243D))))
(assert (= "haZaBaj" (str.++ unch143E (str.++ var43E unch243E))))
(assert (= "haZallaj" (str.++ unch143F (str.++ var43F unch243F))))
(assert (= (str.len stem43) l43))
(assert (= (ite (= ch43A var43A) 0 1) sc43A))
(assert (= (ite (= ch43B var43B) 0 1) sc43B))
(assert (= (ite (= ch43C var43C) 0 1) sc43C))
(assert (= (ite (= ch43D var43D) 0 1) sc43D))
(assert (= (ite (= ch43E var43E) 0 1) sc43E))
(assert (= (ite (= ch43F var43F) 0 1) sc43F))
(assert (<= sc43A 1))
(assert (<= sc43B 1))
(assert (<= sc43C 1))
(assert (<= sc43D 1))
(assert (<= sc43E 1))
(assert (<= sc43F 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      0
      sc30A
      sc30B
      sc30C
      sc30D
      sc30E
      sc30F
      0
      sc31A
      sc31B
      sc31C
      sc31D
      sc31E
      sc31F
      0
      sc32A
      sc32B
      sc32C
      sc32D
      sc32E
      sc32F
      0
      sc33A
      sc33B
      sc33C
      sc33D
      sc33E
      sc33F
      0
      sc34A
      sc34B
      sc34C
      sc34D
      sc34E
      sc34F
      0
      sc35A
      sc35B
      sc35C
      sc35D
      sc35E
      sc35F
      0
      sc36A
      sc36B
      sc36C
      sc36D
      sc36E
      sc36F
      0
      sc37A
      sc37B
      sc37C
      sc37D
      sc37E
      sc37F
      0
      sc38A
      sc38B
      sc38C
      sc38D
      sc38E
      sc38F
      0
      sc39A
      sc39B
      sc39C
      sc39D
      sc39E
      sc39F
      0
      sc40A
      sc40B
      sc40C
      sc40D
      sc40E
      sc40F
      0
      sc41A
      sc41B
      sc41C
      sc41D
      sc41E
      sc41F
      0
      sc42A
      sc42B
      sc42C
      sc42D
      sc42E
      sc42F
      0
      sc43A
      sc43B
      sc43C
      sc43D
      sc43E
      sc43F)
   5))
(assert (= (+ 0
      sc0D
      sc1D
      sc2D
      sc3D
      sc4D
      sc5D
      sc6D
      sc7D
      sc8D
      sc9D
      sc10D
      sc11D
      sc12D
      sc13D
      sc14D
      sc15D
      sc16D
      sc17D
      sc18D
      sc19D
      sc20D
      sc21D
      sc22D
      sc23D
      sc24D
      sc25D
      sc26D
      sc27D
      sc28D
      sc29D
      sc30D
      sc31D
      sc32D
      sc33D
      sc34D
      sc35D
      sc36D
      sc37D
      sc38D
      sc39D
      sc40D
      sc41D
      sc42D
      sc43D)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun var30A () String)
(declare-fun var30B () String)
(declare-fun var30C () String)
(declare-fun var30D () String)
(declare-fun var30E () String)
(declare-fun var30F () String)
(declare-fun unch230A () String)
(declare-fun ch30A () String)
(declare-fun unch130A () String)
(declare-fun stem30 () String)
(declare-fun unch230B () String)
(declare-fun ch30B () String)
(declare-fun unch130B () String)
(declare-fun unch230C () String)
(declare-fun ch30C () String)
(declare-fun unch130C () String)
(declare-fun unch230D () String)
(declare-fun ch30D () String)
(declare-fun unch130D () String)
(declare-fun unch230E () String)
(declare-fun ch30E () String)
(declare-fun unch130E () String)
(declare-fun unch230F () String)
(declare-fun ch30F () String)
(declare-fun unch130F () String)
(declare-fun l30 () Int)
(declare-fun sc30A () Int)
(declare-fun sc30B () Int)
(declare-fun sc30C () Int)
(declare-fun sc30D () Int)
(declare-fun sc30E () Int)
(declare-fun sc30F () Int)
(declare-fun var31A () String)
(declare-fun var31B () String)
(declare-fun var31C () String)
(declare-fun var31D () String)
(declare-fun var31E () String)
(declare-fun var31F () String)
(declare-fun unch231A () String)
(declare-fun ch31A () String)
(declare-fun unch131A () String)
(declare-fun stem31 () String)
(declare-fun unch231B () String)
(declare-fun ch31B () String)
(declare-fun unch131B () String)
(declare-fun unch231C () String)
(declare-fun ch31C () String)
(declare-fun unch131C () String)
(declare-fun unch231D () String)
(declare-fun ch31D () String)
(declare-fun unch131D () String)
(declare-fun unch231E () String)
(declare-fun ch31E () String)
(declare-fun unch131E () String)
(declare-fun unch231F () String)
(declare-fun ch31F () String)
(declare-fun unch131F () String)
(declare-fun l31 () Int)
(declare-fun sc31A () Int)
(declare-fun sc31B () Int)
(declare-fun sc31C () Int)
(declare-fun sc31D () Int)
(declare-fun sc31E () Int)
(declare-fun sc31F () Int)
(declare-fun var32A () String)
(declare-fun var32B () String)
(declare-fun var32C () String)
(declare-fun var32D () String)
(declare-fun var32E () String)
(declare-fun var32F () String)
(declare-fun unch232A () String)
(declare-fun ch32A () String)
(declare-fun unch132A () String)
(declare-fun stem32 () String)
(declare-fun unch232B () String)
(declare-fun ch32B () String)
(declare-fun unch132B () String)
(declare-fun unch232C () String)
(declare-fun ch32C () String)
(declare-fun unch132C () String)
(declare-fun unch232D () String)
(declare-fun ch32D () String)
(declare-fun unch132D () String)
(declare-fun unch232E () String)
(declare-fun ch32E () String)
(declare-fun unch132E () String)
(declare-fun unch232F () String)
(declare-fun ch32F () String)
(declare-fun unch132F () String)
(declare-fun l32 () Int)
(declare-fun sc32A () Int)
(declare-fun sc32B () Int)
(declare-fun sc32C () Int)
(declare-fun sc32D () Int)
(declare-fun sc32E () Int)
(declare-fun sc32F () Int)
(declare-fun var33A () String)
(declare-fun var33B () String)
(declare-fun var33C () String)
(declare-fun var33D () String)
(declare-fun var33E () String)
(declare-fun var33F () String)
(declare-fun unch233A () String)
(declare-fun ch33A () String)
(declare-fun unch133A () String)
(declare-fun stem33 () String)
(declare-fun unch233B () String)
(declare-fun ch33B () String)
(declare-fun unch133B () String)
(declare-fun unch233C () String)
(declare-fun ch33C () String)
(declare-fun unch133C () String)
(declare-fun unch233D () String)
(declare-fun ch33D () String)
(declare-fun unch133D () String)
(declare-fun unch233E () String)
(declare-fun ch33E () String)
(declare-fun unch133E () String)
(declare-fun unch233F () String)
(declare-fun ch33F () String)
(declare-fun unch133F () String)
(declare-fun l33 () Int)
(declare-fun sc33A () Int)
(declare-fun sc33B () Int)
(declare-fun sc33C () Int)
(declare-fun sc33D () Int)
(declare-fun sc33E () Int)
(declare-fun sc33F () Int)
(declare-fun var34A () String)
(declare-fun var34B () String)
(declare-fun var34C () String)
(declare-fun var34D () String)
(declare-fun var34E () String)
(declare-fun var34F () String)
(declare-fun unch234A () String)
(declare-fun ch34A () String)
(declare-fun unch134A () String)
(declare-fun stem34 () String)
(declare-fun unch234B () String)
(declare-fun ch34B () String)
(declare-fun unch134B () String)
(declare-fun unch234C () String)
(declare-fun ch34C () String)
(declare-fun unch134C () String)
(declare-fun unch234D () String)
(declare-fun ch34D () String)
(declare-fun unch134D () String)
(declare-fun unch234E () String)
(declare-fun ch34E () String)
(declare-fun unch134E () String)
(declare-fun unch234F () String)
(declare-fun ch34F () String)
(declare-fun unch134F () String)
(declare-fun l34 () Int)
(declare-fun sc34A () Int)
(declare-fun sc34B () Int)
(declare-fun sc34C () Int)
(declare-fun sc34D () Int)
(declare-fun sc34E () Int)
(declare-fun sc34F () Int)
(declare-fun var35A () String)
(declare-fun var35B () String)
(declare-fun var35C () String)
(declare-fun var35D () String)
(declare-fun var35E () String)
(declare-fun var35F () String)
(declare-fun unch235A () String)
(declare-fun ch35A () String)
(declare-fun unch135A () String)
(declare-fun stem35 () String)
(declare-fun unch235B () String)
(declare-fun ch35B () String)
(declare-fun unch135B () String)
(declare-fun unch235C () String)
(declare-fun ch35C () String)
(declare-fun unch135C () String)
(declare-fun unch235D () String)
(declare-fun ch35D () String)
(declare-fun unch135D () String)
(declare-fun unch235E () String)
(declare-fun ch35E () String)
(declare-fun unch135E () String)
(declare-fun unch235F () String)
(declare-fun ch35F () String)
(declare-fun unch135F () String)
(declare-fun l35 () Int)
(declare-fun sc35A () Int)
(declare-fun sc35B () Int)
(declare-fun sc35C () Int)
(declare-fun sc35D () Int)
(declare-fun sc35E () Int)
(declare-fun sc35F () Int)
(declare-fun var36A () String)
(declare-fun var36B () String)
(declare-fun var36C () String)
(declare-fun var36D () String)
(declare-fun var36E () String)
(declare-fun var36F () String)
(declare-fun unch236A () String)
(declare-fun ch36A () String)
(declare-fun unch136A () String)
(declare-fun stem36 () String)
(declare-fun unch236B () String)
(declare-fun ch36B () String)
(declare-fun unch136B () String)
(declare-fun unch236C () String)
(declare-fun ch36C () String)
(declare-fun unch136C () String)
(declare-fun unch236D () String)
(declare-fun ch36D () String)
(declare-fun unch136D () String)
(declare-fun unch236E () String)
(declare-fun ch36E () String)
(declare-fun unch136E () String)
(declare-fun unch236F () String)
(declare-fun ch36F () String)
(declare-fun unch136F () String)
(declare-fun l36 () Int)
(declare-fun sc36A () Int)
(declare-fun sc36B () Int)
(declare-fun sc36C () Int)
(declare-fun sc36D () Int)
(declare-fun sc36E () Int)
(declare-fun sc36F () Int)
(declare-fun var37A () String)
(declare-fun var37B () String)
(declare-fun var37C () String)
(declare-fun var37D () String)
(declare-fun var37E () String)
(declare-fun var37F () String)
(declare-fun unch237A () String)
(declare-fun ch37A () String)
(declare-fun unch137A () String)
(declare-fun stem37 () String)
(declare-fun unch237B () String)
(declare-fun ch37B () String)
(declare-fun unch137B () String)
(declare-fun unch237C () String)
(declare-fun ch37C () String)
(declare-fun unch137C () String)
(declare-fun unch237D () String)
(declare-fun ch37D () String)
(declare-fun unch137D () String)
(declare-fun unch237E () String)
(declare-fun ch37E () String)
(declare-fun unch137E () String)
(declare-fun unch237F () String)
(declare-fun ch37F () String)
(declare-fun unch137F () String)
(declare-fun l37 () Int)
(declare-fun sc37A () Int)
(declare-fun sc37B () Int)
(declare-fun sc37C () Int)
(declare-fun sc37D () Int)
(declare-fun sc37E () Int)
(declare-fun sc37F () Int)
(declare-fun var38A () String)
(declare-fun var38B () String)
(declare-fun var38C () String)
(declare-fun var38D () String)
(declare-fun var38E () String)
(declare-fun var38F () String)
(declare-fun unch238A () String)
(declare-fun ch38A () String)
(declare-fun unch138A () String)
(declare-fun stem38 () String)
(declare-fun unch238B () String)
(declare-fun ch38B () String)
(declare-fun unch138B () String)
(declare-fun unch238C () String)
(declare-fun ch38C () String)
(declare-fun unch138C () String)
(declare-fun unch238D () String)
(declare-fun ch38D () String)
(declare-fun unch138D () String)
(declare-fun unch238E () String)
(declare-fun ch38E () String)
(declare-fun unch138E () String)
(declare-fun unch238F () String)
(declare-fun ch38F () String)
(declare-fun unch138F () String)
(declare-fun l38 () Int)
(declare-fun sc38A () Int)
(declare-fun sc38B () Int)
(declare-fun sc38C () Int)
(declare-fun sc38D () Int)
(declare-fun sc38E () Int)
(declare-fun sc38F () Int)
(declare-fun var39A () String)
(declare-fun var39B () String)
(declare-fun var39C () String)
(declare-fun var39D () String)
(declare-fun var39E () String)
(declare-fun var39F () String)
(declare-fun unch239A () String)
(declare-fun ch39A () String)
(declare-fun unch139A () String)
(declare-fun stem39 () String)
(declare-fun unch239B () String)
(declare-fun ch39B () String)
(declare-fun unch139B () String)
(declare-fun unch239C () String)
(declare-fun ch39C () String)
(declare-fun unch139C () String)
(declare-fun unch239D () String)
(declare-fun ch39D () String)
(declare-fun unch139D () String)
(declare-fun unch239E () String)
(declare-fun ch39E () String)
(declare-fun unch139E () String)
(declare-fun unch239F () String)
(declare-fun ch39F () String)
(declare-fun unch139F () String)
(declare-fun l39 () Int)
(declare-fun sc39A () Int)
(declare-fun sc39B () Int)
(declare-fun sc39C () Int)
(declare-fun sc39D () Int)
(declare-fun sc39E () Int)
(declare-fun sc39F () Int)
(declare-fun var40A () String)
(declare-fun var40B () String)
(declare-fun var40C () String)
(declare-fun var40D () String)
(declare-fun var40E () String)
(declare-fun var40F () String)
(declare-fun unch240A () String)
(declare-fun ch40A () String)
(declare-fun unch140A () String)
(declare-fun stem40 () String)
(declare-fun unch240B () String)
(declare-fun ch40B () String)
(declare-fun unch140B () String)
(declare-fun unch240C () String)
(declare-fun ch40C () String)
(declare-fun unch140C () String)
(declare-fun unch240D () String)
(declare-fun ch40D () String)
(declare-fun unch140D () String)
(declare-fun unch240E () String)
(declare-fun ch40E () String)
(declare-fun unch140E () String)
(declare-fun unch240F () String)
(declare-fun ch40F () String)
(declare-fun unch140F () String)
(declare-fun l40 () Int)
(declare-fun sc40A () Int)
(declare-fun sc40B () Int)
(declare-fun sc40C () Int)
(declare-fun sc40D () Int)
(declare-fun sc40E () Int)
(declare-fun sc40F () Int)
(declare-fun var41A () String)
(declare-fun var41B () String)
(declare-fun var41C () String)
(declare-fun var41D () String)
(declare-fun var41E () String)
(declare-fun var41F () String)
(declare-fun unch241A () String)
(declare-fun ch41A () String)
(declare-fun unch141A () String)
(declare-fun stem41 () String)
(declare-fun unch241B () String)
(declare-fun ch41B () String)
(declare-fun unch141B () String)
(declare-fun unch241C () String)
(declare-fun ch41C () String)
(declare-fun unch141C () String)
(declare-fun unch241D () String)
(declare-fun ch41D () String)
(declare-fun unch141D () String)
(declare-fun unch241E () String)
(declare-fun ch41E () String)
(declare-fun unch141E () String)
(declare-fun unch241F () String)
(declare-fun ch41F () String)
(declare-fun unch141F () String)
(declare-fun l41 () Int)
(declare-fun sc41A () Int)
(declare-fun sc41B () Int)
(declare-fun sc41C () Int)
(declare-fun sc41D () Int)
(declare-fun sc41E () Int)
(declare-fun sc41F () Int)
(declare-fun var42A () String)
(declare-fun var42B () String)
(declare-fun var42C () String)
(declare-fun var42D () String)
(declare-fun var42E () String)
(declare-fun var42F () String)
(declare-fun unch242A () String)
(declare-fun ch42A () String)
(declare-fun unch142A () String)
(declare-fun stem42 () String)
(declare-fun unch242B () String)
(declare-fun ch42B () String)
(declare-fun unch142B () String)
(declare-fun unch242C () String)
(declare-fun ch42C () String)
(declare-fun unch142C () String)
(declare-fun unch242D () String)
(declare-fun ch42D () String)
(declare-fun unch142D () String)
(declare-fun unch242E () String)
(declare-fun ch42E () String)
(declare-fun unch142E () String)
(declare-fun unch242F () String)
(declare-fun ch42F () String)
(declare-fun unch142F () String)
(declare-fun l42 () Int)
(declare-fun sc42A () Int)
(declare-fun sc42B () Int)
(declare-fun sc42C () Int)
(declare-fun sc42D () Int)
(declare-fun sc42E () Int)
(declare-fun sc42F () Int)
(declare-fun var43A () String)
(declare-fun var43B () String)
(declare-fun var43C () String)
(declare-fun var43D () String)
(declare-fun var43E () String)
(declare-fun var43F () String)
(declare-fun unch243A () String)
(declare-fun ch43A () String)
(declare-fun unch143A () String)
(declare-fun stem43 () String)
(declare-fun unch243B () String)
(declare-fun ch43B () String)
(declare-fun unch143B () String)
(declare-fun unch243C () String)
(declare-fun ch43C () String)
(declare-fun unch143C () String)
(declare-fun unch243D () String)
(declare-fun ch43D () String)
(declare-fun unch143D () String)
(declare-fun unch243E () String)
(declare-fun ch43E () String)
(declare-fun unch143E () String)
(declare-fun unch243F () String)
(declare-fun ch43F () String)
(declare-fun unch143F () String)
(declare-fun l43 () Int)
(declare-fun sc43A () Int)
(declare-fun sc43B () Int)
(declare-fun sc43C () Int)
(declare-fun sc43D () Int)
(declare-fun sc43E () Int)
(declare-fun sc43F () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= "daar" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "daarta" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "daaro" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= "gees" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "geesta" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "geeso" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= "laf" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "lafta" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "lafo" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= "lug" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "lugta" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "luOo" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= "naag" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "naagta" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "naaOo" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= "tib" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "tibta" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "tiXo" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= "sab" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "sabta" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "saXo" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= "bad" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "bada" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "baZo" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= "Bid" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "Bida" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "BiZo" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= "fee1" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "fee1a" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "fee2o" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= "3iir" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "3iirta" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "3iiro" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= "4ul" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "4uBa" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "4ulo" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= "bil" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "biBa" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "bilo" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= "meel" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "meeBa" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "meelo" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= "kaliil" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "kaliiBa" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "kaliilo" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= "najl" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "najBa" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "najlo" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= "sun" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "sunta" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "sumo" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= "laan" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "laanta" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "laamo" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= "sin" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "sinta" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "simo" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= "dan" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "danta" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "dano" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= "daan" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "daanta" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "daano" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= "saan" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "saanta" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "saano" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= "nirig" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "nirigta" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "nirgo" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= "gaXa1" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= "gaXa1a" (str.++ unch123B (str.++ var23B unch223B))))
(assert (= "gab1o" (str.++ unch123C (str.++ var23C unch223C))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= "hoOol" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= "hoOoBa" (str.++ unch124B (str.++ var24B unch224B))))
(assert (= "hoglo" (str.++ unch124C (str.++ var24C unch224C))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= "baOal" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= "baOaBa" (str.++ unch125B (str.++ var25B unch225B))))
(assert (= "baglo" (str.++ unch125C (str.++ var25C unch225C))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= "wa5ar" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= "wa5arta" (str.++ unch126B (str.++ var26B unch226B))))
(assert (= "wa5aro" (str.++ unch126C (str.++ var26C unch226C))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= "irbad" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= "irbada" (str.++ unch127B (str.++ var27B unch227B))))
(assert (= "irbaZo" (str.++ unch127C (str.++ var27C unch227C))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= "kefed" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= "kefeda" (str.++ unch128B (str.++ var28B unch228B))))
(assert (= "kefeZo" (str.++ unch128C (str.++ var28C unch228C))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= "Bilin" (str.++ unch129A (str.++ var29A unch229A))))
(assert (= "Bilinta" (str.++ unch129B (str.++ var29B unch229B))))
(assert (= "Bilino" (str.++ unch129C (str.++ var29C unch229C))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= (str.len var30A) 1))
(assert (<= (str.len var30B) 1))
(assert (<= (str.len var30C) 1))
(assert (<= (str.len var30D) 1))
(assert (<= (str.len var30E) 1))
(assert (<= (str.len var30F) 1))
(assert (= (str.++ preA (str.++ stem30 sufA)) (str.++ unch130A (str.++ ch30A unch230A))))
(assert (= (str.++ preB (str.++ stem30 sufB)) (str.++ unch130B (str.++ ch30B unch230B))))
(assert (= (str.++ preC (str.++ stem30 sufC)) (str.++ unch130C (str.++ ch30C unch230C))))
(assert (= (str.++ preD (str.++ stem30 sufD)) (str.++ unch130D (str.++ ch30D unch230D))))
(assert (= (str.++ preE (str.++ stem30 sufE)) (str.++ unch130E (str.++ ch30E unch230E))))
(assert (= (str.++ preF (str.++ stem30 sufF)) (str.++ unch130F (str.++ ch30F unch230F))))
(assert (= "bohol" (str.++ unch130A (str.++ var30A unch230A))))
(assert (= "bohoBa" (str.++ unch130B (str.++ var30B unch230B))))
(assert (= "boholo" (str.++ unch130C (str.++ var30C unch230C))))
(assert (= (str.len stem30) l30))
(assert (= (ite (= ch30A var30A) 0 1) sc30A))
(assert (= (ite (= ch30B var30B) 0 1) sc30B))
(assert (= (ite (= ch30C var30C) 0 1) sc30C))
(assert (= (ite (= ch30D var30D) 0 1) sc30D))
(assert (= (ite (= ch30E var30E) 0 1) sc30E))
(assert (= (ite (= ch30F var30F) 0 1) sc30F))
(assert (<= sc30A 1))
(assert (<= sc30B 1))
(assert (<= sc30C 1))
(assert (<= sc30D 1))
(assert (<= sc30E 1))
(assert (<= sc30F 1))
(assert (<= (str.len var31A) 1))
(assert (<= (str.len var31B) 1))
(assert (<= (str.len var31C) 1))
(assert (<= (str.len var31D) 1))
(assert (<= (str.len var31E) 1))
(assert (<= (str.len var31F) 1))
(assert (= (str.++ preA (str.++ stem31 sufA)) (str.++ unch131A (str.++ ch31A unch231A))))
(assert (= (str.++ preB (str.++ stem31 sufB)) (str.++ unch131B (str.++ ch31B unch231B))))
(assert (= (str.++ preC (str.++ stem31 sufC)) (str.++ unch131C (str.++ ch31C unch231C))))
(assert (= (str.++ preD (str.++ stem31 sufD)) (str.++ unch131D (str.++ ch31D unch231D))))
(assert (= (str.++ preE (str.++ stem31 sufE)) (str.++ unch131E (str.++ ch31E unch231E))))
(assert (= (str.++ preF (str.++ stem31 sufF)) (str.++ unch131F (str.++ ch31F unch231F))))
(assert (= "4aajad" (str.++ unch131A (str.++ var31A unch231A))))
(assert (= "4aajada" (str.++ unch131B (str.++ var31B unch231B))))
(assert (= "4aajaZo" (str.++ unch131C (str.++ var31C unch231C))))
(assert (= (str.len stem31) l31))
(assert (= (ite (= ch31A var31A) 0 1) sc31A))
(assert (= (ite (= ch31B var31B) 0 1) sc31B))
(assert (= (ite (= ch31C var31C) 0 1) sc31C))
(assert (= (ite (= ch31D var31D) 0 1) sc31D))
(assert (= (ite (= ch31E var31E) 0 1) sc31E))
(assert (= (ite (= ch31F var31F) 0 1) sc31F))
(assert (<= sc31A 1))
(assert (<= sc31B 1))
(assert (<= sc31C 1))
(assert (<= sc31D 1))
(assert (<= sc31E 1))
(assert (<= sc31F 1))
(assert (<= (str.len var32A) 1))
(assert (<= (str.len var32B) 1))
(assert (<= (str.len var32C) 1))
(assert (<= (str.len var32D) 1))
(assert (<= (str.len var32E) 1))
(assert (<= (str.len var32F) 1))
(assert (= (str.++ preA (str.++ stem32 sufA)) (str.++ unch132A (str.++ ch32A unch232A))))
(assert (= (str.++ preB (str.++ stem32 sufB)) (str.++ unch132B (str.++ ch32B unch232B))))
(assert (= (str.++ preC (str.++ stem32 sufC)) (str.++ unch132C (str.++ ch32C unch232C))))
(assert (= (str.++ preD (str.++ stem32 sufD)) (str.++ unch132D (str.++ ch32D unch232D))))
(assert (= (str.++ preE (str.++ stem32 sufE)) (str.++ unch132E (str.++ ch32E unch232E))))
(assert (= (str.++ preF (str.++ stem32 sufF)) (str.++ unch132F (str.++ ch32F unch232F))))
(assert (= "ga3an" (str.++ unch132A (str.++ var32A unch232A))))
(assert (= "ga3anta" (str.++ unch132B (str.++ var32B unch232B))))
(assert (= "ga3mo" (str.++ unch132C (str.++ var32C unch232C))))
(assert (= (str.len stem32) l32))
(assert (= (ite (= ch32A var32A) 0 1) sc32A))
(assert (= (ite (= ch32B var32B) 0 1) sc32B))
(assert (= (ite (= ch32C var32C) 0 1) sc32C))
(assert (= (ite (= ch32D var32D) 0 1) sc32D))
(assert (= (ite (= ch32E var32E) 0 1) sc32E))
(assert (= (ite (= ch32F var32F) 0 1) sc32F))
(assert (<= sc32A 1))
(assert (<= sc32B 1))
(assert (<= sc32C 1))
(assert (<= sc32D 1))
(assert (<= sc32E 1))
(assert (<= sc32F 1))
(assert (<= (str.len var33A) 1))
(assert (<= (str.len var33B) 1))
(assert (<= (str.len var33C) 1))
(assert (<= (str.len var33D) 1))
(assert (<= (str.len var33E) 1))
(assert (<= (str.len var33F) 1))
(assert (= (str.++ preA (str.++ stem33 sufA)) (str.++ unch133A (str.++ ch33A unch233A))))
(assert (= (str.++ preB (str.++ stem33 sufB)) (str.++ unch133B (str.++ ch33B unch233B))))
(assert (= (str.++ preC (str.++ stem33 sufC)) (str.++ unch133C (str.++ ch33C unch233C))))
(assert (= (str.++ preD (str.++ stem33 sufD)) (str.++ unch133D (str.++ ch33D unch233D))))
(assert (= (str.++ preE (str.++ stem33 sufE)) (str.++ unch133E (str.++ ch33E unch233E))))
(assert (= (str.++ preF (str.++ stem33 sufF)) (str.++ unch133F (str.++ ch33F unch233F))))
(assert (= "4inan" (str.++ unch133A (str.++ var33A unch233A))))
(assert (= "4inanta" (str.++ unch133B (str.++ var33B unch233B))))
(assert (= "4inano" (str.++ unch133C (str.++ var33C unch233C))))
(assert (= (str.len stem33) l33))
(assert (= (ite (= ch33A var33A) 0 1) sc33A))
(assert (= (ite (= ch33B var33B) 0 1) sc33B))
(assert (= (ite (= ch33C var33C) 0 1) sc33C))
(assert (= (ite (= ch33D var33D) 0 1) sc33D))
(assert (= (ite (= ch33E var33E) 0 1) sc33E))
(assert (= (ite (= ch33F var33F) 0 1) sc33F))
(assert (<= sc33A 1))
(assert (<= sc33B 1))
(assert (<= sc33C 1))
(assert (<= sc33D 1))
(assert (<= sc33E 1))
(assert (<= sc33F 1))
(assert (<= (str.len var34A) 1))
(assert (<= (str.len var34B) 1))
(assert (<= (str.len var34C) 1))
(assert (<= (str.len var34D) 1))
(assert (<= (str.len var34E) 1))
(assert (<= (str.len var34F) 1))
(assert (= (str.++ preA (str.++ stem34 sufA)) (str.++ unch134A (str.++ ch34A unch234A))))
(assert (= (str.++ preB (str.++ stem34 sufB)) (str.++ unch134B (str.++ ch34B unch234B))))
(assert (= (str.++ preC (str.++ stem34 sufC)) (str.++ unch134C (str.++ ch34C unch234C))))
(assert (= (str.++ preD (str.++ stem34 sufD)) (str.++ unch134D (str.++ ch34D unch234D))))
(assert (= (str.++ preE (str.++ stem34 sufE)) (str.++ unch134E (str.++ ch34E unch234E))))
(assert (= (str.++ preF (str.++ stem34 sufF)) (str.++ unch134F (str.++ ch34F unch234F))))
(assert (= "suOaj" (str.++ unch134D (str.++ var34D unch234D))))
(assert (= "sugtaj" (str.++ unch134E (str.++ var34E unch234E))))
(assert (= "sugnaj" (str.++ unch134F (str.++ var34F unch234F))))
(assert (= (str.len stem34) l34))
(assert (= (ite (= ch34A var34A) 0 1) sc34A))
(assert (= (ite (= ch34B var34B) 0 1) sc34B))
(assert (= (ite (= ch34C var34C) 0 1) sc34C))
(assert (= (ite (= ch34D var34D) 0 1) sc34D))
(assert (= (ite (= ch34E var34E) 0 1) sc34E))
(assert (= (ite (= ch34F var34F) 0 1) sc34F))
(assert (<= sc34A 1))
(assert (<= sc34B 1))
(assert (<= sc34C 1))
(assert (<= sc34D 1))
(assert (<= sc34E 1))
(assert (<= sc34F 1))
(assert (<= (str.len var35A) 1))
(assert (<= (str.len var35B) 1))
(assert (<= (str.len var35C) 1))
(assert (<= (str.len var35D) 1))
(assert (<= (str.len var35E) 1))
(assert (<= (str.len var35F) 1))
(assert (= (str.++ preA (str.++ stem35 sufA)) (str.++ unch135A (str.++ ch35A unch235A))))
(assert (= (str.++ preB (str.++ stem35 sufB)) (str.++ unch135B (str.++ ch35B unch235B))))
(assert (= (str.++ preC (str.++ stem35 sufC)) (str.++ unch135C (str.++ ch35C unch235C))))
(assert (= (str.++ preD (str.++ stem35 sufD)) (str.++ unch135D (str.++ ch35D unch235D))))
(assert (= (str.++ preE (str.++ stem35 sufE)) (str.++ unch135E (str.++ ch35E unch235E))))
(assert (= (str.++ preF (str.++ stem35 sufF)) (str.++ unch135F (str.++ ch35F unch235F))))
(assert (= "kaXaj" (str.++ unch135D (str.++ var35D unch235D))))
(assert (= "kabtaj" (str.++ unch135E (str.++ var35E unch235E))))
(assert (= "kabnaj" (str.++ unch135F (str.++ var35F unch235F))))
(assert (= (str.len stem35) l35))
(assert (= (ite (= ch35A var35A) 0 1) sc35A))
(assert (= (ite (= ch35B var35B) 0 1) sc35B))
(assert (= (ite (= ch35C var35C) 0 1) sc35C))
(assert (= (ite (= ch35D var35D) 0 1) sc35D))
(assert (= (ite (= ch35E var35E) 0 1) sc35E))
(assert (= (ite (= ch35F var35F) 0 1) sc35F))
(assert (<= sc35A 1))
(assert (<= sc35B 1))
(assert (<= sc35C 1))
(assert (<= sc35D 1))
(assert (<= sc35E 1))
(assert (<= sc35F 1))
(assert (<= (str.len var36A) 1))
(assert (<= (str.len var36B) 1))
(assert (<= (str.len var36C) 1))
(assert (<= (str.len var36D) 1))
(assert (<= (str.len var36E) 1))
(assert (<= (str.len var36F) 1))
(assert (= (str.++ preA (str.++ stem36 sufA)) (str.++ unch136A (str.++ ch36A unch236A))))
(assert (= (str.++ preB (str.++ stem36 sufB)) (str.++ unch136B (str.++ ch36B unch236B))))
(assert (= (str.++ preC (str.++ stem36 sufC)) (str.++ unch136C (str.++ ch36C unch236C))))
(assert (= (str.++ preD (str.++ stem36 sufD)) (str.++ unch136D (str.++ ch36D unch236D))))
(assert (= (str.++ preE (str.++ stem36 sufE)) (str.++ unch136E (str.++ ch36E unch236E))))
(assert (= (str.++ preF (str.++ stem36 sufF)) (str.++ unch136F (str.++ ch36F unch236F))))
(assert (= "siZaj" (str.++ unch136D (str.++ var36D unch236D))))
(assert (= "sidaj" (str.++ unch136E (str.++ var36E unch236E))))
(assert (= "sidnaj" (str.++ unch136F (str.++ var36F unch236F))))
(assert (= (str.len stem36) l36))
(assert (= (ite (= ch36A var36A) 0 1) sc36A))
(assert (= (ite (= ch36B var36B) 0 1) sc36B))
(assert (= (ite (= ch36C var36C) 0 1) sc36C))
(assert (= (ite (= ch36D var36D) 0 1) sc36D))
(assert (= (ite (= ch36E var36E) 0 1) sc36E))
(assert (= (ite (= ch36F var36F) 0 1) sc36F))
(assert (<= sc36A 1))
(assert (<= sc36B 1))
(assert (<= sc36C 1))
(assert (<= sc36D 1))
(assert (<= sc36E 1))
(assert (<= sc36F 1))
(assert (<= (str.len var37A) 1))
(assert (<= (str.len var37B) 1))
(assert (<= (str.len var37C) 1))
(assert (<= (str.len var37D) 1))
(assert (<= (str.len var37E) 1))
(assert (<= (str.len var37F) 1))
(assert (= (str.++ preA (str.++ stem37 sufA)) (str.++ unch137A (str.++ ch37A unch237A))))
(assert (= (str.++ preB (str.++ stem37 sufB)) (str.++ unch137B (str.++ ch37B unch237B))))
(assert (= (str.++ preC (str.++ stem37 sufC)) (str.++ unch137C (str.++ ch37C unch237C))))
(assert (= (str.++ preD (str.++ stem37 sufD)) (str.++ unch137D (str.++ ch37D unch237D))))
(assert (= (str.++ preE (str.++ stem37 sufE)) (str.++ unch137E (str.++ ch37E unch237E))))
(assert (= (str.++ preF (str.++ stem37 sufF)) (str.++ unch137F (str.++ ch37F unch237F))))
(assert (= "dilaj" (str.++ unch137D (str.++ var37D unch237D))))
(assert (= "diBaj" (str.++ unch137E (str.++ var37E unch237E))))
(assert (= "dillaj" (str.++ unch137F (str.++ var37F unch237F))))
(assert (= (str.len stem37) l37))
(assert (= (ite (= ch37A var37A) 0 1) sc37A))
(assert (= (ite (= ch37B var37B) 0 1) sc37B))
(assert (= (ite (= ch37C var37C) 0 1) sc37C))
(assert (= (ite (= ch37D var37D) 0 1) sc37D))
(assert (= (ite (= ch37E var37E) 0 1) sc37E))
(assert (= (ite (= ch37F var37F) 0 1) sc37F))
(assert (<= sc37A 1))
(assert (<= sc37B 1))
(assert (<= sc37C 1))
(assert (<= sc37D 1))
(assert (<= sc37E 1))
(assert (<= sc37F 1))
(assert (<= (str.len var38A) 1))
(assert (<= (str.len var38B) 1))
(assert (<= (str.len var38C) 1))
(assert (<= (str.len var38D) 1))
(assert (<= (str.len var38E) 1))
(assert (<= (str.len var38F) 1))
(assert (= (str.++ preA (str.++ stem38 sufA)) (str.++ unch138A (str.++ ch38A unch238A))))
(assert (= (str.++ preB (str.++ stem38 sufB)) (str.++ unch138B (str.++ ch38B unch238B))))
(assert (= (str.++ preC (str.++ stem38 sufC)) (str.++ unch138C (str.++ ch38C unch238C))))
(assert (= (str.++ preD (str.++ stem38 sufD)) (str.++ unch138D (str.++ ch38D unch238D))))
(assert (= (str.++ preE (str.++ stem38 sufE)) (str.++ unch138E (str.++ ch38E unch238E))))
(assert (= (str.++ preF (str.++ stem38 sufF)) (str.++ unch138F (str.++ ch38F unch238F))))
(assert (= "ganaj" (str.++ unch138D (str.++ var38D unch238D))))
(assert (= "gantaj" (str.++ unch138E (str.++ var38E unch238E))))
(assert (= "gannaj" (str.++ unch138F (str.++ var38F unch238F))))
(assert (= (str.len stem38) l38))
(assert (= (ite (= ch38A var38A) 0 1) sc38A))
(assert (= (ite (= ch38B var38B) 0 1) sc38B))
(assert (= (ite (= ch38C var38C) 0 1) sc38C))
(assert (= (ite (= ch38D var38D) 0 1) sc38D))
(assert (= (ite (= ch38E var38E) 0 1) sc38E))
(assert (= (ite (= ch38F var38F) 0 1) sc38F))
(assert (<= sc38A 1))
(assert (<= sc38B 1))
(assert (<= sc38C 1))
(assert (<= sc38D 1))
(assert (<= sc38E 1))
(assert (<= sc38F 1))
(assert (<= (str.len var39A) 1))
(assert (<= (str.len var39B) 1))
(assert (<= (str.len var39C) 1))
(assert (<= (str.len var39D) 1))
(assert (<= (str.len var39E) 1))
(assert (<= (str.len var39F) 1))
(assert (= (str.++ preA (str.++ stem39 sufA)) (str.++ unch139A (str.++ ch39A unch239A))))
(assert (= (str.++ preB (str.++ stem39 sufB)) (str.++ unch139B (str.++ ch39B unch239B))))
(assert (= (str.++ preC (str.++ stem39 sufC)) (str.++ unch139C (str.++ ch39C unch239C))))
(assert (= (str.++ preD (str.++ stem39 sufD)) (str.++ unch139D (str.++ ch39D unch239D))))
(assert (= (str.++ preE (str.++ stem39 sufE)) (str.++ unch139E (str.++ ch39E unch239E))))
(assert (= (str.++ preF (str.++ stem39 sufF)) (str.++ unch139F (str.++ ch39F unch239F))))
(assert (= "tumaj" (str.++ unch139D (str.++ var39D unch239D))))
(assert (= "tuntaj" (str.++ unch139E (str.++ var39E unch239E))))
(assert (= "tunnaj" (str.++ unch139F (str.++ var39F unch239F))))
(assert (= (str.len stem39) l39))
(assert (= (ite (= ch39A var39A) 0 1) sc39A))
(assert (= (ite (= ch39B var39B) 0 1) sc39B))
(assert (= (ite (= ch39C var39C) 0 1) sc39C))
(assert (= (ite (= ch39D var39D) 0 1) sc39D))
(assert (= (ite (= ch39E var39E) 0 1) sc39E))
(assert (= (ite (= ch39F var39F) 0 1) sc39F))
(assert (<= sc39A 1))
(assert (<= sc39B 1))
(assert (<= sc39C 1))
(assert (<= sc39D 1))
(assert (<= sc39E 1))
(assert (<= sc39F 1))
(assert (<= (str.len var40A) 1))
(assert (<= (str.len var40B) 1))
(assert (<= (str.len var40C) 1))
(assert (<= (str.len var40D) 1))
(assert (<= (str.len var40E) 1))
(assert (<= (str.len var40F) 1))
(assert (= (str.++ preA (str.++ stem40 sufA)) (str.++ unch140A (str.++ ch40A unch240A))))
(assert (= (str.++ preB (str.++ stem40 sufB)) (str.++ unch140B (str.++ ch40B unch240B))))
(assert (= (str.++ preC (str.++ stem40 sufC)) (str.++ unch140C (str.++ ch40C unch240C))))
(assert (= (str.++ preD (str.++ stem40 sufD)) (str.++ unch140D (str.++ ch40D unch240D))))
(assert (= (str.++ preE (str.++ stem40 sufE)) (str.++ unch140E (str.++ ch40E unch240E))))
(assert (= (str.++ preF (str.++ stem40 sufF)) (str.++ unch140F (str.++ ch40F unch240F))))
(assert (= "argaj" (str.++ unch140D (str.++ var40D unch240D))))
(assert (= "aragtaj" (str.++ unch140E (str.++ var40E unch240E))))
(assert (= "aragnaj" (str.++ unch140F (str.++ var40F unch240F))))
(assert (= (str.len stem40) l40))
(assert (= (ite (= ch40A var40A) 0 1) sc40A))
(assert (= (ite (= ch40B var40B) 0 1) sc40B))
(assert (= (ite (= ch40C var40C) 0 1) sc40C))
(assert (= (ite (= ch40D var40D) 0 1) sc40D))
(assert (= (ite (= ch40E var40E) 0 1) sc40E))
(assert (= (ite (= ch40F var40F) 0 1) sc40F))
(assert (<= sc40A 1))
(assert (<= sc40B 1))
(assert (<= sc40C 1))
(assert (<= sc40D 1))
(assert (<= sc40E 1))
(assert (<= sc40F 1))
(assert (<= (str.len var41A) 1))
(assert (<= (str.len var41B) 1))
(assert (<= (str.len var41C) 1))
(assert (<= (str.len var41D) 1))
(assert (<= (str.len var41E) 1))
(assert (<= (str.len var41F) 1))
(assert (= (str.++ preA (str.++ stem41 sufA)) (str.++ unch141A (str.++ ch41A unch241A))))
(assert (= (str.++ preB (str.++ stem41 sufB)) (str.++ unch141B (str.++ ch41B unch241B))))
(assert (= (str.++ preC (str.++ stem41 sufC)) (str.++ unch141C (str.++ ch41C unch241C))))
(assert (= (str.++ preD (str.++ stem41 sufD)) (str.++ unch141D (str.++ ch41D unch241D))))
(assert (= (str.++ preE (str.++ stem41 sufE)) (str.++ unch141E (str.++ ch41E unch241E))))
(assert (= (str.++ preF (str.++ stem41 sufF)) (str.++ unch141F (str.++ ch41F unch241F))))
(assert (= "gudbaj" (str.++ unch141D (str.++ var41D unch241D))))
(assert (= "guZubtaj" (str.++ unch141E (str.++ var41E unch241E))))
(assert (= "guZubnaj" (str.++ unch141F (str.++ var41F unch241F))))
(assert (= (str.len stem41) l41))
(assert (= (ite (= ch41A var41A) 0 1) sc41A))
(assert (= (ite (= ch41B var41B) 0 1) sc41B))
(assert (= (ite (= ch41C var41C) 0 1) sc41C))
(assert (= (ite (= ch41D var41D) 0 1) sc41D))
(assert (= (ite (= ch41E var41E) 0 1) sc41E))
(assert (= (ite (= ch41F var41F) 0 1) sc41F))
(assert (<= sc41A 1))
(assert (<= sc41B 1))
(assert (<= sc41C 1))
(assert (<= sc41D 1))
(assert (<= sc41E 1))
(assert (<= sc41F 1))
(assert (<= (str.len var42A) 1))
(assert (<= (str.len var42B) 1))
(assert (<= (str.len var42C) 1))
(assert (<= (str.len var42D) 1))
(assert (<= (str.len var42E) 1))
(assert (<= (str.len var42F) 1))
(assert (= (str.++ preA (str.++ stem42 sufA)) (str.++ unch142A (str.++ ch42A unch242A))))
(assert (= (str.++ preB (str.++ stem42 sufB)) (str.++ unch142B (str.++ ch42B unch242B))))
(assert (= (str.++ preC (str.++ stem42 sufC)) (str.++ unch142C (str.++ ch42C unch242C))))
(assert (= (str.++ preD (str.++ stem42 sufD)) (str.++ unch142D (str.++ ch42D unch242D))))
(assert (= (str.++ preE (str.++ stem42 sufE)) (str.++ unch142E (str.++ ch42E unch242E))))
(assert (= (str.++ preF (str.++ stem42 sufF)) (str.++ unch142F (str.++ ch42F unch242F))))
(assert (= "qoslaj" (str.++ unch142D (str.++ var42D unch242D))))
(assert (= "qosoBaj" (str.++ unch142E (str.++ var42E unch242E))))
(assert (= "qosollaj" (str.++ unch142F (str.++ var42F unch242F))))
(assert (= (str.len stem42) l42))
(assert (= (ite (= ch42A var42A) 0 1) sc42A))
(assert (= (ite (= ch42B var42B) 0 1) sc42B))
(assert (= (ite (= ch42C var42C) 0 1) sc42C))
(assert (= (ite (= ch42D var42D) 0 1) sc42D))
(assert (= (ite (= ch42E var42E) 0 1) sc42E))
(assert (= (ite (= ch42F var42F) 0 1) sc42F))
(assert (<= sc42A 1))
(assert (<= sc42B 1))
(assert (<= sc42C 1))
(assert (<= sc42D 1))
(assert (<= sc42E 1))
(assert (<= sc42F 1))
(assert (<= (str.len var43A) 1))
(assert (<= (str.len var43B) 1))
(assert (<= (str.len var43C) 1))
(assert (<= (str.len var43D) 1))
(assert (<= (str.len var43E) 1))
(assert (<= (str.len var43F) 1))
(assert (= (str.++ preA (str.++ stem43 sufA)) (str.++ unch143A (str.++ ch43A unch243A))))
(assert (= (str.++ preB (str.++ stem43 sufB)) (str.++ unch143B (str.++ ch43B unch243B))))
(assert (= (str.++ preC (str.++ stem43 sufC)) (str.++ unch143C (str.++ ch43C unch243C))))
(assert (= (str.++ preD (str.++ stem43 sufD)) (str.++ unch143D (str.++ ch43D unch243D))))
(assert (= (str.++ preE (str.++ stem43 sufE)) (str.++ unch143E (str.++ ch43E unch243E))))
(assert (= (str.++ preF (str.++ stem43 sufF)) (str.++ unch143F (str.++ ch43F unch243F))))
(assert (= "hadlaj" (str.++ unch143D (str.++ var43D unch243D))))
(assert (= "haZaBaj" (str.++ unch143E (str.++ var43E unch243E))))
(assert (= "haZallaj" (str.++ unch143F (str.++ var43F unch243F))))
(assert (= (str.len stem43) l43))
(assert (= (ite (= ch43A var43A) 0 1) sc43A))
(assert (= (ite (= ch43B var43B) 0 1) sc43B))
(assert (= (ite (= ch43C var43C) 0 1) sc43C))
(assert (= (ite (= ch43D var43D) 0 1) sc43D))
(assert (= (ite (= ch43E var43E) 0 1) sc43E))
(assert (= (ite (= ch43F var43F) 0 1) sc43F))
(assert (<= sc43A 1))
(assert (<= sc43B 1))
(assert (<= sc43C 1))
(assert (<= sc43D 1))
(assert (<= sc43E 1))
(assert (<= sc43F 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      0
      sc30A
      sc30B
      sc30C
      sc30D
      sc30E
      sc30F
      0
      sc31A
      sc31B
      sc31C
      sc31D
      sc31E
      sc31F
      0
      sc32A
      sc32B
      sc32C
      sc32D
      sc32E
      sc32F
      0
      sc33A
      sc33B
      sc33C
      sc33D
      sc33E
      sc33F
      0
      sc34A
      sc34B
      sc34C
      sc34D
      sc34E
      sc34F
      0
      sc35A
      sc35B
      sc35C
      sc35D
      sc35E
      sc35F
      0
      sc36A
      sc36B
      sc36C
      sc36D
      sc36E
      sc36F
      0
      sc37A
      sc37B
      sc37C
      sc37D
      sc37E
      sc37F
      0
      sc38A
      sc38B
      sc38C
      sc38D
      sc38E
      sc38F
      0
      sc39A
      sc39B
      sc39C
      sc39D
      sc39E
      sc39F
      0
      sc40A
      sc40B
      sc40C
      sc40D
      sc40E
      sc40F
      0
      sc41A
      sc41B
      sc41C
      sc41D
      sc41E
      sc41F
      0
      sc42A
      sc42B
      sc42C
      sc42D
      sc42E
      sc42F
      0
      sc43A
      sc43B
      sc43C
      sc43D
      sc43E
      sc43F)
   5))
(assert (= (+ 0
      sc0E
      sc1E
      sc2E
      sc3E
      sc4E
      sc5E
      sc6E
      sc7E
      sc8E
      sc9E
      sc10E
      sc11E
      sc12E
      sc13E
      sc14E
      sc15E
      sc16E
      sc17E
      sc18E
      sc19E
      sc20E
      sc21E
      sc22E
      sc23E
      sc24E
      sc25E
      sc26E
      sc27E
      sc28E
      sc29E
      sc30E
      sc31E
      sc32E
      sc33E
      sc34E
      sc35E
      sc36E
      sc37E
      sc38E
      sc39E
      sc40E
      sc41E
      sc42E
      sc43E)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun var30A () String)
(declare-fun var30B () String)
(declare-fun var30C () String)
(declare-fun var30D () String)
(declare-fun var30E () String)
(declare-fun var30F () String)
(declare-fun unch230A () String)
(declare-fun ch30A () String)
(declare-fun unch130A () String)
(declare-fun stem30 () String)
(declare-fun unch230B () String)
(declare-fun ch30B () String)
(declare-fun unch130B () String)
(declare-fun unch230C () String)
(declare-fun ch30C () String)
(declare-fun unch130C () String)
(declare-fun unch230D () String)
(declare-fun ch30D () String)
(declare-fun unch130D () String)
(declare-fun unch230E () String)
(declare-fun ch30E () String)
(declare-fun unch130E () String)
(declare-fun unch230F () String)
(declare-fun ch30F () String)
(declare-fun unch130F () String)
(declare-fun l30 () Int)
(declare-fun sc30A () Int)
(declare-fun sc30B () Int)
(declare-fun sc30C () Int)
(declare-fun sc30D () Int)
(declare-fun sc30E () Int)
(declare-fun sc30F () Int)
(declare-fun var31A () String)
(declare-fun var31B () String)
(declare-fun var31C () String)
(declare-fun var31D () String)
(declare-fun var31E () String)
(declare-fun var31F () String)
(declare-fun unch231A () String)
(declare-fun ch31A () String)
(declare-fun unch131A () String)
(declare-fun stem31 () String)
(declare-fun unch231B () String)
(declare-fun ch31B () String)
(declare-fun unch131B () String)
(declare-fun unch231C () String)
(declare-fun ch31C () String)
(declare-fun unch131C () String)
(declare-fun unch231D () String)
(declare-fun ch31D () String)
(declare-fun unch131D () String)
(declare-fun unch231E () String)
(declare-fun ch31E () String)
(declare-fun unch131E () String)
(declare-fun unch231F () String)
(declare-fun ch31F () String)
(declare-fun unch131F () String)
(declare-fun l31 () Int)
(declare-fun sc31A () Int)
(declare-fun sc31B () Int)
(declare-fun sc31C () Int)
(declare-fun sc31D () Int)
(declare-fun sc31E () Int)
(declare-fun sc31F () Int)
(declare-fun var32A () String)
(declare-fun var32B () String)
(declare-fun var32C () String)
(declare-fun var32D () String)
(declare-fun var32E () String)
(declare-fun var32F () String)
(declare-fun unch232A () String)
(declare-fun ch32A () String)
(declare-fun unch132A () String)
(declare-fun stem32 () String)
(declare-fun unch232B () String)
(declare-fun ch32B () String)
(declare-fun unch132B () String)
(declare-fun unch232C () String)
(declare-fun ch32C () String)
(declare-fun unch132C () String)
(declare-fun unch232D () String)
(declare-fun ch32D () String)
(declare-fun unch132D () String)
(declare-fun unch232E () String)
(declare-fun ch32E () String)
(declare-fun unch132E () String)
(declare-fun unch232F () String)
(declare-fun ch32F () String)
(declare-fun unch132F () String)
(declare-fun l32 () Int)
(declare-fun sc32A () Int)
(declare-fun sc32B () Int)
(declare-fun sc32C () Int)
(declare-fun sc32D () Int)
(declare-fun sc32E () Int)
(declare-fun sc32F () Int)
(declare-fun var33A () String)
(declare-fun var33B () String)
(declare-fun var33C () String)
(declare-fun var33D () String)
(declare-fun var33E () String)
(declare-fun var33F () String)
(declare-fun unch233A () String)
(declare-fun ch33A () String)
(declare-fun unch133A () String)
(declare-fun stem33 () String)
(declare-fun unch233B () String)
(declare-fun ch33B () String)
(declare-fun unch133B () String)
(declare-fun unch233C () String)
(declare-fun ch33C () String)
(declare-fun unch133C () String)
(declare-fun unch233D () String)
(declare-fun ch33D () String)
(declare-fun unch133D () String)
(declare-fun unch233E () String)
(declare-fun ch33E () String)
(declare-fun unch133E () String)
(declare-fun unch233F () String)
(declare-fun ch33F () String)
(declare-fun unch133F () String)
(declare-fun l33 () Int)
(declare-fun sc33A () Int)
(declare-fun sc33B () Int)
(declare-fun sc33C () Int)
(declare-fun sc33D () Int)
(declare-fun sc33E () Int)
(declare-fun sc33F () Int)
(declare-fun var34A () String)
(declare-fun var34B () String)
(declare-fun var34C () String)
(declare-fun var34D () String)
(declare-fun var34E () String)
(declare-fun var34F () String)
(declare-fun unch234A () String)
(declare-fun ch34A () String)
(declare-fun unch134A () String)
(declare-fun stem34 () String)
(declare-fun unch234B () String)
(declare-fun ch34B () String)
(declare-fun unch134B () String)
(declare-fun unch234C () String)
(declare-fun ch34C () String)
(declare-fun unch134C () String)
(declare-fun unch234D () String)
(declare-fun ch34D () String)
(declare-fun unch134D () String)
(declare-fun unch234E () String)
(declare-fun ch34E () String)
(declare-fun unch134E () String)
(declare-fun unch234F () String)
(declare-fun ch34F () String)
(declare-fun unch134F () String)
(declare-fun l34 () Int)
(declare-fun sc34A () Int)
(declare-fun sc34B () Int)
(declare-fun sc34C () Int)
(declare-fun sc34D () Int)
(declare-fun sc34E () Int)
(declare-fun sc34F () Int)
(declare-fun var35A () String)
(declare-fun var35B () String)
(declare-fun var35C () String)
(declare-fun var35D () String)
(declare-fun var35E () String)
(declare-fun var35F () String)
(declare-fun unch235A () String)
(declare-fun ch35A () String)
(declare-fun unch135A () String)
(declare-fun stem35 () String)
(declare-fun unch235B () String)
(declare-fun ch35B () String)
(declare-fun unch135B () String)
(declare-fun unch235C () String)
(declare-fun ch35C () String)
(declare-fun unch135C () String)
(declare-fun unch235D () String)
(declare-fun ch35D () String)
(declare-fun unch135D () String)
(declare-fun unch235E () String)
(declare-fun ch35E () String)
(declare-fun unch135E () String)
(declare-fun unch235F () String)
(declare-fun ch35F () String)
(declare-fun unch135F () String)
(declare-fun l35 () Int)
(declare-fun sc35A () Int)
(declare-fun sc35B () Int)
(declare-fun sc35C () Int)
(declare-fun sc35D () Int)
(declare-fun sc35E () Int)
(declare-fun sc35F () Int)
(declare-fun var36A () String)
(declare-fun var36B () String)
(declare-fun var36C () String)
(declare-fun var36D () String)
(declare-fun var36E () String)
(declare-fun var36F () String)
(declare-fun unch236A () String)
(declare-fun ch36A () String)
(declare-fun unch136A () String)
(declare-fun stem36 () String)
(declare-fun unch236B () String)
(declare-fun ch36B () String)
(declare-fun unch136B () String)
(declare-fun unch236C () String)
(declare-fun ch36C () String)
(declare-fun unch136C () String)
(declare-fun unch236D () String)
(declare-fun ch36D () String)
(declare-fun unch136D () String)
(declare-fun unch236E () String)
(declare-fun ch36E () String)
(declare-fun unch136E () String)
(declare-fun unch236F () String)
(declare-fun ch36F () String)
(declare-fun unch136F () String)
(declare-fun l36 () Int)
(declare-fun sc36A () Int)
(declare-fun sc36B () Int)
(declare-fun sc36C () Int)
(declare-fun sc36D () Int)
(declare-fun sc36E () Int)
(declare-fun sc36F () Int)
(declare-fun var37A () String)
(declare-fun var37B () String)
(declare-fun var37C () String)
(declare-fun var37D () String)
(declare-fun var37E () String)
(declare-fun var37F () String)
(declare-fun unch237A () String)
(declare-fun ch37A () String)
(declare-fun unch137A () String)
(declare-fun stem37 () String)
(declare-fun unch237B () String)
(declare-fun ch37B () String)
(declare-fun unch137B () String)
(declare-fun unch237C () String)
(declare-fun ch37C () String)
(declare-fun unch137C () String)
(declare-fun unch237D () String)
(declare-fun ch37D () String)
(declare-fun unch137D () String)
(declare-fun unch237E () String)
(declare-fun ch37E () String)
(declare-fun unch137E () String)
(declare-fun unch237F () String)
(declare-fun ch37F () String)
(declare-fun unch137F () String)
(declare-fun l37 () Int)
(declare-fun sc37A () Int)
(declare-fun sc37B () Int)
(declare-fun sc37C () Int)
(declare-fun sc37D () Int)
(declare-fun sc37E () Int)
(declare-fun sc37F () Int)
(declare-fun var38A () String)
(declare-fun var38B () String)
(declare-fun var38C () String)
(declare-fun var38D () String)
(declare-fun var38E () String)
(declare-fun var38F () String)
(declare-fun unch238A () String)
(declare-fun ch38A () String)
(declare-fun unch138A () String)
(declare-fun stem38 () String)
(declare-fun unch238B () String)
(declare-fun ch38B () String)
(declare-fun unch138B () String)
(declare-fun unch238C () String)
(declare-fun ch38C () String)
(declare-fun unch138C () String)
(declare-fun unch238D () String)
(declare-fun ch38D () String)
(declare-fun unch138D () String)
(declare-fun unch238E () String)
(declare-fun ch38E () String)
(declare-fun unch138E () String)
(declare-fun unch238F () String)
(declare-fun ch38F () String)
(declare-fun unch138F () String)
(declare-fun l38 () Int)
(declare-fun sc38A () Int)
(declare-fun sc38B () Int)
(declare-fun sc38C () Int)
(declare-fun sc38D () Int)
(declare-fun sc38E () Int)
(declare-fun sc38F () Int)
(declare-fun var39A () String)
(declare-fun var39B () String)
(declare-fun var39C () String)
(declare-fun var39D () String)
(declare-fun var39E () String)
(declare-fun var39F () String)
(declare-fun unch239A () String)
(declare-fun ch39A () String)
(declare-fun unch139A () String)
(declare-fun stem39 () String)
(declare-fun unch239B () String)
(declare-fun ch39B () String)
(declare-fun unch139B () String)
(declare-fun unch239C () String)
(declare-fun ch39C () String)
(declare-fun unch139C () String)
(declare-fun unch239D () String)
(declare-fun ch39D () String)
(declare-fun unch139D () String)
(declare-fun unch239E () String)
(declare-fun ch39E () String)
(declare-fun unch139E () String)
(declare-fun unch239F () String)
(declare-fun ch39F () String)
(declare-fun unch139F () String)
(declare-fun l39 () Int)
(declare-fun sc39A () Int)
(declare-fun sc39B () Int)
(declare-fun sc39C () Int)
(declare-fun sc39D () Int)
(declare-fun sc39E () Int)
(declare-fun sc39F () Int)
(declare-fun var40A () String)
(declare-fun var40B () String)
(declare-fun var40C () String)
(declare-fun var40D () String)
(declare-fun var40E () String)
(declare-fun var40F () String)
(declare-fun unch240A () String)
(declare-fun ch40A () String)
(declare-fun unch140A () String)
(declare-fun stem40 () String)
(declare-fun unch240B () String)
(declare-fun ch40B () String)
(declare-fun unch140B () String)
(declare-fun unch240C () String)
(declare-fun ch40C () String)
(declare-fun unch140C () String)
(declare-fun unch240D () String)
(declare-fun ch40D () String)
(declare-fun unch140D () String)
(declare-fun unch240E () String)
(declare-fun ch40E () String)
(declare-fun unch140E () String)
(declare-fun unch240F () String)
(declare-fun ch40F () String)
(declare-fun unch140F () String)
(declare-fun l40 () Int)
(declare-fun sc40A () Int)
(declare-fun sc40B () Int)
(declare-fun sc40C () Int)
(declare-fun sc40D () Int)
(declare-fun sc40E () Int)
(declare-fun sc40F () Int)
(declare-fun var41A () String)
(declare-fun var41B () String)
(declare-fun var41C () String)
(declare-fun var41D () String)
(declare-fun var41E () String)
(declare-fun var41F () String)
(declare-fun unch241A () String)
(declare-fun ch41A () String)
(declare-fun unch141A () String)
(declare-fun stem41 () String)
(declare-fun unch241B () String)
(declare-fun ch41B () String)
(declare-fun unch141B () String)
(declare-fun unch241C () String)
(declare-fun ch41C () String)
(declare-fun unch141C () String)
(declare-fun unch241D () String)
(declare-fun ch41D () String)
(declare-fun unch141D () String)
(declare-fun unch241E () String)
(declare-fun ch41E () String)
(declare-fun unch141E () String)
(declare-fun unch241F () String)
(declare-fun ch41F () String)
(declare-fun unch141F () String)
(declare-fun l41 () Int)
(declare-fun sc41A () Int)
(declare-fun sc41B () Int)
(declare-fun sc41C () Int)
(declare-fun sc41D () Int)
(declare-fun sc41E () Int)
(declare-fun sc41F () Int)
(declare-fun var42A () String)
(declare-fun var42B () String)
(declare-fun var42C () String)
(declare-fun var42D () String)
(declare-fun var42E () String)
(declare-fun var42F () String)
(declare-fun unch242A () String)
(declare-fun ch42A () String)
(declare-fun unch142A () String)
(declare-fun stem42 () String)
(declare-fun unch242B () String)
(declare-fun ch42B () String)
(declare-fun unch142B () String)
(declare-fun unch242C () String)
(declare-fun ch42C () String)
(declare-fun unch142C () String)
(declare-fun unch242D () String)
(declare-fun ch42D () String)
(declare-fun unch142D () String)
(declare-fun unch242E () String)
(declare-fun ch42E () String)
(declare-fun unch142E () String)
(declare-fun unch242F () String)
(declare-fun ch42F () String)
(declare-fun unch142F () String)
(declare-fun l42 () Int)
(declare-fun sc42A () Int)
(declare-fun sc42B () Int)
(declare-fun sc42C () Int)
(declare-fun sc42D () Int)
(declare-fun sc42E () Int)
(declare-fun sc42F () Int)
(declare-fun var43A () String)
(declare-fun var43B () String)
(declare-fun var43C () String)
(declare-fun var43D () String)
(declare-fun var43E () String)
(declare-fun var43F () String)
(declare-fun unch243A () String)
(declare-fun ch43A () String)
(declare-fun unch143A () String)
(declare-fun stem43 () String)
(declare-fun unch243B () String)
(declare-fun ch43B () String)
(declare-fun unch143B () String)
(declare-fun unch243C () String)
(declare-fun ch43C () String)
(declare-fun unch143C () String)
(declare-fun unch243D () String)
(declare-fun ch43D () String)
(declare-fun unch143D () String)
(declare-fun unch243E () String)
(declare-fun ch43E () String)
(declare-fun unch143E () String)
(declare-fun unch243F () String)
(declare-fun ch43F () String)
(declare-fun unch143F () String)
(declare-fun l43 () Int)
(declare-fun sc43A () Int)
(declare-fun sc43B () Int)
(declare-fun sc43C () Int)
(declare-fun sc43D () Int)
(declare-fun sc43E () Int)
(declare-fun sc43F () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= "daar" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "daarta" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "daaro" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= "gees" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "geesta" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "geeso" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= "laf" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "lafta" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "lafo" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= "lug" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "lugta" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "luOo" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= "naag" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "naagta" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "naaOo" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= "tib" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "tibta" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "tiXo" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= "sab" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "sabta" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "saXo" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= "bad" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "bada" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "baZo" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= "Bid" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "Bida" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "BiZo" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= "fee1" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "fee1a" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "fee2o" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= "3iir" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "3iirta" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "3iiro" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= "4ul" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "4uBa" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "4ulo" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= "bil" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "biBa" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "bilo" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= "meel" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "meeBa" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "meelo" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= "kaliil" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "kaliiBa" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "kaliilo" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= "najl" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "najBa" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "najlo" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= "sun" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "sunta" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "sumo" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= "laan" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "laanta" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "laamo" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= "sin" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "sinta" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "simo" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= "dan" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "danta" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "dano" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= "daan" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "daanta" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "daano" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= "saan" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "saanta" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "saano" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= "nirig" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "nirigta" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "nirgo" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= "gaXa1" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= "gaXa1a" (str.++ unch123B (str.++ var23B unch223B))))
(assert (= "gab1o" (str.++ unch123C (str.++ var23C unch223C))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= "hoOol" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= "hoOoBa" (str.++ unch124B (str.++ var24B unch224B))))
(assert (= "hoglo" (str.++ unch124C (str.++ var24C unch224C))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= "baOal" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= "baOaBa" (str.++ unch125B (str.++ var25B unch225B))))
(assert (= "baglo" (str.++ unch125C (str.++ var25C unch225C))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= "wa5ar" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= "wa5arta" (str.++ unch126B (str.++ var26B unch226B))))
(assert (= "wa5aro" (str.++ unch126C (str.++ var26C unch226C))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= "irbad" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= "irbada" (str.++ unch127B (str.++ var27B unch227B))))
(assert (= "irbaZo" (str.++ unch127C (str.++ var27C unch227C))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= "kefed" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= "kefeda" (str.++ unch128B (str.++ var28B unch228B))))
(assert (= "kefeZo" (str.++ unch128C (str.++ var28C unch228C))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= "Bilin" (str.++ unch129A (str.++ var29A unch229A))))
(assert (= "Bilinta" (str.++ unch129B (str.++ var29B unch229B))))
(assert (= "Bilino" (str.++ unch129C (str.++ var29C unch229C))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= (str.len var30A) 1))
(assert (<= (str.len var30B) 1))
(assert (<= (str.len var30C) 1))
(assert (<= (str.len var30D) 1))
(assert (<= (str.len var30E) 1))
(assert (<= (str.len var30F) 1))
(assert (= (str.++ preA (str.++ stem30 sufA)) (str.++ unch130A (str.++ ch30A unch230A))))
(assert (= (str.++ preB (str.++ stem30 sufB)) (str.++ unch130B (str.++ ch30B unch230B))))
(assert (= (str.++ preC (str.++ stem30 sufC)) (str.++ unch130C (str.++ ch30C unch230C))))
(assert (= (str.++ preD (str.++ stem30 sufD)) (str.++ unch130D (str.++ ch30D unch230D))))
(assert (= (str.++ preE (str.++ stem30 sufE)) (str.++ unch130E (str.++ ch30E unch230E))))
(assert (= (str.++ preF (str.++ stem30 sufF)) (str.++ unch130F (str.++ ch30F unch230F))))
(assert (= "bohol" (str.++ unch130A (str.++ var30A unch230A))))
(assert (= "bohoBa" (str.++ unch130B (str.++ var30B unch230B))))
(assert (= "boholo" (str.++ unch130C (str.++ var30C unch230C))))
(assert (= (str.len stem30) l30))
(assert (= (ite (= ch30A var30A) 0 1) sc30A))
(assert (= (ite (= ch30B var30B) 0 1) sc30B))
(assert (= (ite (= ch30C var30C) 0 1) sc30C))
(assert (= (ite (= ch30D var30D) 0 1) sc30D))
(assert (= (ite (= ch30E var30E) 0 1) sc30E))
(assert (= (ite (= ch30F var30F) 0 1) sc30F))
(assert (<= sc30A 1))
(assert (<= sc30B 1))
(assert (<= sc30C 1))
(assert (<= sc30D 1))
(assert (<= sc30E 1))
(assert (<= sc30F 1))
(assert (<= (str.len var31A) 1))
(assert (<= (str.len var31B) 1))
(assert (<= (str.len var31C) 1))
(assert (<= (str.len var31D) 1))
(assert (<= (str.len var31E) 1))
(assert (<= (str.len var31F) 1))
(assert (= (str.++ preA (str.++ stem31 sufA)) (str.++ unch131A (str.++ ch31A unch231A))))
(assert (= (str.++ preB (str.++ stem31 sufB)) (str.++ unch131B (str.++ ch31B unch231B))))
(assert (= (str.++ preC (str.++ stem31 sufC)) (str.++ unch131C (str.++ ch31C unch231C))))
(assert (= (str.++ preD (str.++ stem31 sufD)) (str.++ unch131D (str.++ ch31D unch231D))))
(assert (= (str.++ preE (str.++ stem31 sufE)) (str.++ unch131E (str.++ ch31E unch231E))))
(assert (= (str.++ preF (str.++ stem31 sufF)) (str.++ unch131F (str.++ ch31F unch231F))))
(assert (= "4aajad" (str.++ unch131A (str.++ var31A unch231A))))
(assert (= "4aajada" (str.++ unch131B (str.++ var31B unch231B))))
(assert (= "4aajaZo" (str.++ unch131C (str.++ var31C unch231C))))
(assert (= (str.len stem31) l31))
(assert (= (ite (= ch31A var31A) 0 1) sc31A))
(assert (= (ite (= ch31B var31B) 0 1) sc31B))
(assert (= (ite (= ch31C var31C) 0 1) sc31C))
(assert (= (ite (= ch31D var31D) 0 1) sc31D))
(assert (= (ite (= ch31E var31E) 0 1) sc31E))
(assert (= (ite (= ch31F var31F) 0 1) sc31F))
(assert (<= sc31A 1))
(assert (<= sc31B 1))
(assert (<= sc31C 1))
(assert (<= sc31D 1))
(assert (<= sc31E 1))
(assert (<= sc31F 1))
(assert (<= (str.len var32A) 1))
(assert (<= (str.len var32B) 1))
(assert (<= (str.len var32C) 1))
(assert (<= (str.len var32D) 1))
(assert (<= (str.len var32E) 1))
(assert (<= (str.len var32F) 1))
(assert (= (str.++ preA (str.++ stem32 sufA)) (str.++ unch132A (str.++ ch32A unch232A))))
(assert (= (str.++ preB (str.++ stem32 sufB)) (str.++ unch132B (str.++ ch32B unch232B))))
(assert (= (str.++ preC (str.++ stem32 sufC)) (str.++ unch132C (str.++ ch32C unch232C))))
(assert (= (str.++ preD (str.++ stem32 sufD)) (str.++ unch132D (str.++ ch32D unch232D))))
(assert (= (str.++ preE (str.++ stem32 sufE)) (str.++ unch132E (str.++ ch32E unch232E))))
(assert (= (str.++ preF (str.++ stem32 sufF)) (str.++ unch132F (str.++ ch32F unch232F))))
(assert (= "ga3an" (str.++ unch132A (str.++ var32A unch232A))))
(assert (= "ga3anta" (str.++ unch132B (str.++ var32B unch232B))))
(assert (= "ga3mo" (str.++ unch132C (str.++ var32C unch232C))))
(assert (= (str.len stem32) l32))
(assert (= (ite (= ch32A var32A) 0 1) sc32A))
(assert (= (ite (= ch32B var32B) 0 1) sc32B))
(assert (= (ite (= ch32C var32C) 0 1) sc32C))
(assert (= (ite (= ch32D var32D) 0 1) sc32D))
(assert (= (ite (= ch32E var32E) 0 1) sc32E))
(assert (= (ite (= ch32F var32F) 0 1) sc32F))
(assert (<= sc32A 1))
(assert (<= sc32B 1))
(assert (<= sc32C 1))
(assert (<= sc32D 1))
(assert (<= sc32E 1))
(assert (<= sc32F 1))
(assert (<= (str.len var33A) 1))
(assert (<= (str.len var33B) 1))
(assert (<= (str.len var33C) 1))
(assert (<= (str.len var33D) 1))
(assert (<= (str.len var33E) 1))
(assert (<= (str.len var33F) 1))
(assert (= (str.++ preA (str.++ stem33 sufA)) (str.++ unch133A (str.++ ch33A unch233A))))
(assert (= (str.++ preB (str.++ stem33 sufB)) (str.++ unch133B (str.++ ch33B unch233B))))
(assert (= (str.++ preC (str.++ stem33 sufC)) (str.++ unch133C (str.++ ch33C unch233C))))
(assert (= (str.++ preD (str.++ stem33 sufD)) (str.++ unch133D (str.++ ch33D unch233D))))
(assert (= (str.++ preE (str.++ stem33 sufE)) (str.++ unch133E (str.++ ch33E unch233E))))
(assert (= (str.++ preF (str.++ stem33 sufF)) (str.++ unch133F (str.++ ch33F unch233F))))
(assert (= "4inan" (str.++ unch133A (str.++ var33A unch233A))))
(assert (= "4inanta" (str.++ unch133B (str.++ var33B unch233B))))
(assert (= "4inano" (str.++ unch133C (str.++ var33C unch233C))))
(assert (= (str.len stem33) l33))
(assert (= (ite (= ch33A var33A) 0 1) sc33A))
(assert (= (ite (= ch33B var33B) 0 1) sc33B))
(assert (= (ite (= ch33C var33C) 0 1) sc33C))
(assert (= (ite (= ch33D var33D) 0 1) sc33D))
(assert (= (ite (= ch33E var33E) 0 1) sc33E))
(assert (= (ite (= ch33F var33F) 0 1) sc33F))
(assert (<= sc33A 1))
(assert (<= sc33B 1))
(assert (<= sc33C 1))
(assert (<= sc33D 1))
(assert (<= sc33E 1))
(assert (<= sc33F 1))
(assert (<= (str.len var34A) 1))
(assert (<= (str.len var34B) 1))
(assert (<= (str.len var34C) 1))
(assert (<= (str.len var34D) 1))
(assert (<= (str.len var34E) 1))
(assert (<= (str.len var34F) 1))
(assert (= (str.++ preA (str.++ stem34 sufA)) (str.++ unch134A (str.++ ch34A unch234A))))
(assert (= (str.++ preB (str.++ stem34 sufB)) (str.++ unch134B (str.++ ch34B unch234B))))
(assert (= (str.++ preC (str.++ stem34 sufC)) (str.++ unch134C (str.++ ch34C unch234C))))
(assert (= (str.++ preD (str.++ stem34 sufD)) (str.++ unch134D (str.++ ch34D unch234D))))
(assert (= (str.++ preE (str.++ stem34 sufE)) (str.++ unch134E (str.++ ch34E unch234E))))
(assert (= (str.++ preF (str.++ stem34 sufF)) (str.++ unch134F (str.++ ch34F unch234F))))
(assert (= "suOaj" (str.++ unch134D (str.++ var34D unch234D))))
(assert (= "sugtaj" (str.++ unch134E (str.++ var34E unch234E))))
(assert (= "sugnaj" (str.++ unch134F (str.++ var34F unch234F))))
(assert (= (str.len stem34) l34))
(assert (= (ite (= ch34A var34A) 0 1) sc34A))
(assert (= (ite (= ch34B var34B) 0 1) sc34B))
(assert (= (ite (= ch34C var34C) 0 1) sc34C))
(assert (= (ite (= ch34D var34D) 0 1) sc34D))
(assert (= (ite (= ch34E var34E) 0 1) sc34E))
(assert (= (ite (= ch34F var34F) 0 1) sc34F))
(assert (<= sc34A 1))
(assert (<= sc34B 1))
(assert (<= sc34C 1))
(assert (<= sc34D 1))
(assert (<= sc34E 1))
(assert (<= sc34F 1))
(assert (<= (str.len var35A) 1))
(assert (<= (str.len var35B) 1))
(assert (<= (str.len var35C) 1))
(assert (<= (str.len var35D) 1))
(assert (<= (str.len var35E) 1))
(assert (<= (str.len var35F) 1))
(assert (= (str.++ preA (str.++ stem35 sufA)) (str.++ unch135A (str.++ ch35A unch235A))))
(assert (= (str.++ preB (str.++ stem35 sufB)) (str.++ unch135B (str.++ ch35B unch235B))))
(assert (= (str.++ preC (str.++ stem35 sufC)) (str.++ unch135C (str.++ ch35C unch235C))))
(assert (= (str.++ preD (str.++ stem35 sufD)) (str.++ unch135D (str.++ ch35D unch235D))))
(assert (= (str.++ preE (str.++ stem35 sufE)) (str.++ unch135E (str.++ ch35E unch235E))))
(assert (= (str.++ preF (str.++ stem35 sufF)) (str.++ unch135F (str.++ ch35F unch235F))))
(assert (= "kaXaj" (str.++ unch135D (str.++ var35D unch235D))))
(assert (= "kabtaj" (str.++ unch135E (str.++ var35E unch235E))))
(assert (= "kabnaj" (str.++ unch135F (str.++ var35F unch235F))))
(assert (= (str.len stem35) l35))
(assert (= (ite (= ch35A var35A) 0 1) sc35A))
(assert (= (ite (= ch35B var35B) 0 1) sc35B))
(assert (= (ite (= ch35C var35C) 0 1) sc35C))
(assert (= (ite (= ch35D var35D) 0 1) sc35D))
(assert (= (ite (= ch35E var35E) 0 1) sc35E))
(assert (= (ite (= ch35F var35F) 0 1) sc35F))
(assert (<= sc35A 1))
(assert (<= sc35B 1))
(assert (<= sc35C 1))
(assert (<= sc35D 1))
(assert (<= sc35E 1))
(assert (<= sc35F 1))
(assert (<= (str.len var36A) 1))
(assert (<= (str.len var36B) 1))
(assert (<= (str.len var36C) 1))
(assert (<= (str.len var36D) 1))
(assert (<= (str.len var36E) 1))
(assert (<= (str.len var36F) 1))
(assert (= (str.++ preA (str.++ stem36 sufA)) (str.++ unch136A (str.++ ch36A unch236A))))
(assert (= (str.++ preB (str.++ stem36 sufB)) (str.++ unch136B (str.++ ch36B unch236B))))
(assert (= (str.++ preC (str.++ stem36 sufC)) (str.++ unch136C (str.++ ch36C unch236C))))
(assert (= (str.++ preD (str.++ stem36 sufD)) (str.++ unch136D (str.++ ch36D unch236D))))
(assert (= (str.++ preE (str.++ stem36 sufE)) (str.++ unch136E (str.++ ch36E unch236E))))
(assert (= (str.++ preF (str.++ stem36 sufF)) (str.++ unch136F (str.++ ch36F unch236F))))
(assert (= "siZaj" (str.++ unch136D (str.++ var36D unch236D))))
(assert (= "sidaj" (str.++ unch136E (str.++ var36E unch236E))))
(assert (= "sidnaj" (str.++ unch136F (str.++ var36F unch236F))))
(assert (= (str.len stem36) l36))
(assert (= (ite (= ch36A var36A) 0 1) sc36A))
(assert (= (ite (= ch36B var36B) 0 1) sc36B))
(assert (= (ite (= ch36C var36C) 0 1) sc36C))
(assert (= (ite (= ch36D var36D) 0 1) sc36D))
(assert (= (ite (= ch36E var36E) 0 1) sc36E))
(assert (= (ite (= ch36F var36F) 0 1) sc36F))
(assert (<= sc36A 1))
(assert (<= sc36B 1))
(assert (<= sc36C 1))
(assert (<= sc36D 1))
(assert (<= sc36E 1))
(assert (<= sc36F 1))
(assert (<= (str.len var37A) 1))
(assert (<= (str.len var37B) 1))
(assert (<= (str.len var37C) 1))
(assert (<= (str.len var37D) 1))
(assert (<= (str.len var37E) 1))
(assert (<= (str.len var37F) 1))
(assert (= (str.++ preA (str.++ stem37 sufA)) (str.++ unch137A (str.++ ch37A unch237A))))
(assert (= (str.++ preB (str.++ stem37 sufB)) (str.++ unch137B (str.++ ch37B unch237B))))
(assert (= (str.++ preC (str.++ stem37 sufC)) (str.++ unch137C (str.++ ch37C unch237C))))
(assert (= (str.++ preD (str.++ stem37 sufD)) (str.++ unch137D (str.++ ch37D unch237D))))
(assert (= (str.++ preE (str.++ stem37 sufE)) (str.++ unch137E (str.++ ch37E unch237E))))
(assert (= (str.++ preF (str.++ stem37 sufF)) (str.++ unch137F (str.++ ch37F unch237F))))
(assert (= "dilaj" (str.++ unch137D (str.++ var37D unch237D))))
(assert (= "diBaj" (str.++ unch137E (str.++ var37E unch237E))))
(assert (= "dillaj" (str.++ unch137F (str.++ var37F unch237F))))
(assert (= (str.len stem37) l37))
(assert (= (ite (= ch37A var37A) 0 1) sc37A))
(assert (= (ite (= ch37B var37B) 0 1) sc37B))
(assert (= (ite (= ch37C var37C) 0 1) sc37C))
(assert (= (ite (= ch37D var37D) 0 1) sc37D))
(assert (= (ite (= ch37E var37E) 0 1) sc37E))
(assert (= (ite (= ch37F var37F) 0 1) sc37F))
(assert (<= sc37A 1))
(assert (<= sc37B 1))
(assert (<= sc37C 1))
(assert (<= sc37D 1))
(assert (<= sc37E 1))
(assert (<= sc37F 1))
(assert (<= (str.len var38A) 1))
(assert (<= (str.len var38B) 1))
(assert (<= (str.len var38C) 1))
(assert (<= (str.len var38D) 1))
(assert (<= (str.len var38E) 1))
(assert (<= (str.len var38F) 1))
(assert (= (str.++ preA (str.++ stem38 sufA)) (str.++ unch138A (str.++ ch38A unch238A))))
(assert (= (str.++ preB (str.++ stem38 sufB)) (str.++ unch138B (str.++ ch38B unch238B))))
(assert (= (str.++ preC (str.++ stem38 sufC)) (str.++ unch138C (str.++ ch38C unch238C))))
(assert (= (str.++ preD (str.++ stem38 sufD)) (str.++ unch138D (str.++ ch38D unch238D))))
(assert (= (str.++ preE (str.++ stem38 sufE)) (str.++ unch138E (str.++ ch38E unch238E))))
(assert (= (str.++ preF (str.++ stem38 sufF)) (str.++ unch138F (str.++ ch38F unch238F))))
(assert (= "ganaj" (str.++ unch138D (str.++ var38D unch238D))))
(assert (= "gantaj" (str.++ unch138E (str.++ var38E unch238E))))
(assert (= "gannaj" (str.++ unch138F (str.++ var38F unch238F))))
(assert (= (str.len stem38) l38))
(assert (= (ite (= ch38A var38A) 0 1) sc38A))
(assert (= (ite (= ch38B var38B) 0 1) sc38B))
(assert (= (ite (= ch38C var38C) 0 1) sc38C))
(assert (= (ite (= ch38D var38D) 0 1) sc38D))
(assert (= (ite (= ch38E var38E) 0 1) sc38E))
(assert (= (ite (= ch38F var38F) 0 1) sc38F))
(assert (<= sc38A 1))
(assert (<= sc38B 1))
(assert (<= sc38C 1))
(assert (<= sc38D 1))
(assert (<= sc38E 1))
(assert (<= sc38F 1))
(assert (<= (str.len var39A) 1))
(assert (<= (str.len var39B) 1))
(assert (<= (str.len var39C) 1))
(assert (<= (str.len var39D) 1))
(assert (<= (str.len var39E) 1))
(assert (<= (str.len var39F) 1))
(assert (= (str.++ preA (str.++ stem39 sufA)) (str.++ unch139A (str.++ ch39A unch239A))))
(assert (= (str.++ preB (str.++ stem39 sufB)) (str.++ unch139B (str.++ ch39B unch239B))))
(assert (= (str.++ preC (str.++ stem39 sufC)) (str.++ unch139C (str.++ ch39C unch239C))))
(assert (= (str.++ preD (str.++ stem39 sufD)) (str.++ unch139D (str.++ ch39D unch239D))))
(assert (= (str.++ preE (str.++ stem39 sufE)) (str.++ unch139E (str.++ ch39E unch239E))))
(assert (= (str.++ preF (str.++ stem39 sufF)) (str.++ unch139F (str.++ ch39F unch239F))))
(assert (= "tumaj" (str.++ unch139D (str.++ var39D unch239D))))
(assert (= "tuntaj" (str.++ unch139E (str.++ var39E unch239E))))
(assert (= "tunnaj" (str.++ unch139F (str.++ var39F unch239F))))
(assert (= (str.len stem39) l39))
(assert (= (ite (= ch39A var39A) 0 1) sc39A))
(assert (= (ite (= ch39B var39B) 0 1) sc39B))
(assert (= (ite (= ch39C var39C) 0 1) sc39C))
(assert (= (ite (= ch39D var39D) 0 1) sc39D))
(assert (= (ite (= ch39E var39E) 0 1) sc39E))
(assert (= (ite (= ch39F var39F) 0 1) sc39F))
(assert (<= sc39A 1))
(assert (<= sc39B 1))
(assert (<= sc39C 1))
(assert (<= sc39D 1))
(assert (<= sc39E 1))
(assert (<= sc39F 1))
(assert (<= (str.len var40A) 1))
(assert (<= (str.len var40B) 1))
(assert (<= (str.len var40C) 1))
(assert (<= (str.len var40D) 1))
(assert (<= (str.len var40E) 1))
(assert (<= (str.len var40F) 1))
(assert (= (str.++ preA (str.++ stem40 sufA)) (str.++ unch140A (str.++ ch40A unch240A))))
(assert (= (str.++ preB (str.++ stem40 sufB)) (str.++ unch140B (str.++ ch40B unch240B))))
(assert (= (str.++ preC (str.++ stem40 sufC)) (str.++ unch140C (str.++ ch40C unch240C))))
(assert (= (str.++ preD (str.++ stem40 sufD)) (str.++ unch140D (str.++ ch40D unch240D))))
(assert (= (str.++ preE (str.++ stem40 sufE)) (str.++ unch140E (str.++ ch40E unch240E))))
(assert (= (str.++ preF (str.++ stem40 sufF)) (str.++ unch140F (str.++ ch40F unch240F))))
(assert (= "argaj" (str.++ unch140D (str.++ var40D unch240D))))
(assert (= "aragtaj" (str.++ unch140E (str.++ var40E unch240E))))
(assert (= "aragnaj" (str.++ unch140F (str.++ var40F unch240F))))
(assert (= (str.len stem40) l40))
(assert (= (ite (= ch40A var40A) 0 1) sc40A))
(assert (= (ite (= ch40B var40B) 0 1) sc40B))
(assert (= (ite (= ch40C var40C) 0 1) sc40C))
(assert (= (ite (= ch40D var40D) 0 1) sc40D))
(assert (= (ite (= ch40E var40E) 0 1) sc40E))
(assert (= (ite (= ch40F var40F) 0 1) sc40F))
(assert (<= sc40A 1))
(assert (<= sc40B 1))
(assert (<= sc40C 1))
(assert (<= sc40D 1))
(assert (<= sc40E 1))
(assert (<= sc40F 1))
(assert (<= (str.len var41A) 1))
(assert (<= (str.len var41B) 1))
(assert (<= (str.len var41C) 1))
(assert (<= (str.len var41D) 1))
(assert (<= (str.len var41E) 1))
(assert (<= (str.len var41F) 1))
(assert (= (str.++ preA (str.++ stem41 sufA)) (str.++ unch141A (str.++ ch41A unch241A))))
(assert (= (str.++ preB (str.++ stem41 sufB)) (str.++ unch141B (str.++ ch41B unch241B))))
(assert (= (str.++ preC (str.++ stem41 sufC)) (str.++ unch141C (str.++ ch41C unch241C))))
(assert (= (str.++ preD (str.++ stem41 sufD)) (str.++ unch141D (str.++ ch41D unch241D))))
(assert (= (str.++ preE (str.++ stem41 sufE)) (str.++ unch141E (str.++ ch41E unch241E))))
(assert (= (str.++ preF (str.++ stem41 sufF)) (str.++ unch141F (str.++ ch41F unch241F))))
(assert (= "gudbaj" (str.++ unch141D (str.++ var41D unch241D))))
(assert (= "guZubtaj" (str.++ unch141E (str.++ var41E unch241E))))
(assert (= "guZubnaj" (str.++ unch141F (str.++ var41F unch241F))))
(assert (= (str.len stem41) l41))
(assert (= (ite (= ch41A var41A) 0 1) sc41A))
(assert (= (ite (= ch41B var41B) 0 1) sc41B))
(assert (= (ite (= ch41C var41C) 0 1) sc41C))
(assert (= (ite (= ch41D var41D) 0 1) sc41D))
(assert (= (ite (= ch41E var41E) 0 1) sc41E))
(assert (= (ite (= ch41F var41F) 0 1) sc41F))
(assert (<= sc41A 1))
(assert (<= sc41B 1))
(assert (<= sc41C 1))
(assert (<= sc41D 1))
(assert (<= sc41E 1))
(assert (<= sc41F 1))
(assert (<= (str.len var42A) 1))
(assert (<= (str.len var42B) 1))
(assert (<= (str.len var42C) 1))
(assert (<= (str.len var42D) 1))
(assert (<= (str.len var42E) 1))
(assert (<= (str.len var42F) 1))
(assert (= (str.++ preA (str.++ stem42 sufA)) (str.++ unch142A (str.++ ch42A unch242A))))
(assert (= (str.++ preB (str.++ stem42 sufB)) (str.++ unch142B (str.++ ch42B unch242B))))
(assert (= (str.++ preC (str.++ stem42 sufC)) (str.++ unch142C (str.++ ch42C unch242C))))
(assert (= (str.++ preD (str.++ stem42 sufD)) (str.++ unch142D (str.++ ch42D unch242D))))
(assert (= (str.++ preE (str.++ stem42 sufE)) (str.++ unch142E (str.++ ch42E unch242E))))
(assert (= (str.++ preF (str.++ stem42 sufF)) (str.++ unch142F (str.++ ch42F unch242F))))
(assert (= "qoslaj" (str.++ unch142D (str.++ var42D unch242D))))
(assert (= "qosoBaj" (str.++ unch142E (str.++ var42E unch242E))))
(assert (= "qosollaj" (str.++ unch142F (str.++ var42F unch242F))))
(assert (= (str.len stem42) l42))
(assert (= (ite (= ch42A var42A) 0 1) sc42A))
(assert (= (ite (= ch42B var42B) 0 1) sc42B))
(assert (= (ite (= ch42C var42C) 0 1) sc42C))
(assert (= (ite (= ch42D var42D) 0 1) sc42D))
(assert (= (ite (= ch42E var42E) 0 1) sc42E))
(assert (= (ite (= ch42F var42F) 0 1) sc42F))
(assert (<= sc42A 1))
(assert (<= sc42B 1))
(assert (<= sc42C 1))
(assert (<= sc42D 1))
(assert (<= sc42E 1))
(assert (<= sc42F 1))
(assert (<= (str.len var43A) 1))
(assert (<= (str.len var43B) 1))
(assert (<= (str.len var43C) 1))
(assert (<= (str.len var43D) 1))
(assert (<= (str.len var43E) 1))
(assert (<= (str.len var43F) 1))
(assert (= (str.++ preA (str.++ stem43 sufA)) (str.++ unch143A (str.++ ch43A unch243A))))
(assert (= (str.++ preB (str.++ stem43 sufB)) (str.++ unch143B (str.++ ch43B unch243B))))
(assert (= (str.++ preC (str.++ stem43 sufC)) (str.++ unch143C (str.++ ch43C unch243C))))
(assert (= (str.++ preD (str.++ stem43 sufD)) (str.++ unch143D (str.++ ch43D unch243D))))
(assert (= (str.++ preE (str.++ stem43 sufE)) (str.++ unch143E (str.++ ch43E unch243E))))
(assert (= (str.++ preF (str.++ stem43 sufF)) (str.++ unch143F (str.++ ch43F unch243F))))
(assert (= "hadlaj" (str.++ unch143D (str.++ var43D unch243D))))
(assert (= "haZaBaj" (str.++ unch143E (str.++ var43E unch243E))))
(assert (= "haZallaj" (str.++ unch143F (str.++ var43F unch243F))))
(assert (= (str.len stem43) l43))
(assert (= (ite (= ch43A var43A) 0 1) sc43A))
(assert (= (ite (= ch43B var43B) 0 1) sc43B))
(assert (= (ite (= ch43C var43C) 0 1) sc43C))
(assert (= (ite (= ch43D var43D) 0 1) sc43D))
(assert (= (ite (= ch43E var43E) 0 1) sc43E))
(assert (= (ite (= ch43F var43F) 0 1) sc43F))
(assert (<= sc43A 1))
(assert (<= sc43B 1))
(assert (<= sc43C 1))
(assert (<= sc43D 1))
(assert (<= sc43E 1))
(assert (<= sc43F 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      0
      sc30A
      sc30B
      sc30C
      sc30D
      sc30E
      sc30F
      0
      sc31A
      sc31B
      sc31C
      sc31D
      sc31E
      sc31F
      0
      sc32A
      sc32B
      sc32C
      sc32D
      sc32E
      sc32F
      0
      sc33A
      sc33B
      sc33C
      sc33D
      sc33E
      sc33F
      0
      sc34A
      sc34B
      sc34C
      sc34D
      sc34E
      sc34F
      0
      sc35A
      sc35B
      sc35C
      sc35D
      sc35E
      sc35F
      0
      sc36A
      sc36B
      sc36C
      sc36D
      sc36E
      sc36F
      0
      sc37A
      sc37B
      sc37C
      sc37D
      sc37E
      sc37F
      0
      sc38A
      sc38B
      sc38C
      sc38D
      sc38E
      sc38F
      0
      sc39A
      sc39B
      sc39C
      sc39D
      sc39E
      sc39F
      0
      sc40A
      sc40B
      sc40C
      sc40D
      sc40E
      sc40F
      0
      sc41A
      sc41B
      sc41C
      sc41D
      sc41E
      sc41F
      0
      sc42A
      sc42B
      sc42C
      sc42D
      sc42E
      sc42F
      0
      sc43A
      sc43B
      sc43C
      sc43D
      sc43E
      sc43F)
   5))
(assert (= (+ 0
      sc0F
      sc1F
      sc2F
      sc3F
      sc4F
      sc5F
      sc6F
      sc7F
      sc8F
      sc9F
      sc10F
      sc11F
      sc12F
      sc13F
      sc14F
      sc15F
      sc16F
      sc17F
      sc18F
      sc19F
      sc20F
      sc21F
      sc22F
      sc23F
      sc24F
      sc25F
      sc26F
      sc27F
      sc28F
      sc29F
      sc30F
      sc31F
      sc32F
      sc33F
      sc34F
      sc35F
      sc36F
      sc37F
      sc38F
      sc39F
      sc40F
      sc41F
      sc42F
      sc43F)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun var30A () String)
(declare-fun var30B () String)
(declare-fun var30C () String)
(declare-fun var30D () String)
(declare-fun var30E () String)
(declare-fun var30F () String)
(declare-fun unch230A () String)
(declare-fun ch30A () String)
(declare-fun unch130A () String)
(declare-fun stem30 () String)
(declare-fun unch230B () String)
(declare-fun ch30B () String)
(declare-fun unch130B () String)
(declare-fun unch230C () String)
(declare-fun ch30C () String)
(declare-fun unch130C () String)
(declare-fun unch230D () String)
(declare-fun ch30D () String)
(declare-fun unch130D () String)
(declare-fun unch230E () String)
(declare-fun ch30E () String)
(declare-fun unch130E () String)
(declare-fun unch230F () String)
(declare-fun ch30F () String)
(declare-fun unch130F () String)
(declare-fun l30 () Int)
(declare-fun sc30A () Int)
(declare-fun sc30B () Int)
(declare-fun sc30C () Int)
(declare-fun sc30D () Int)
(declare-fun sc30E () Int)
(declare-fun sc30F () Int)
(declare-fun var31A () String)
(declare-fun var31B () String)
(declare-fun var31C () String)
(declare-fun var31D () String)
(declare-fun var31E () String)
(declare-fun var31F () String)
(declare-fun unch231A () String)
(declare-fun ch31A () String)
(declare-fun unch131A () String)
(declare-fun stem31 () String)
(declare-fun unch231B () String)
(declare-fun ch31B () String)
(declare-fun unch131B () String)
(declare-fun unch231C () String)
(declare-fun ch31C () String)
(declare-fun unch131C () String)
(declare-fun unch231D () String)
(declare-fun ch31D () String)
(declare-fun unch131D () String)
(declare-fun unch231E () String)
(declare-fun ch31E () String)
(declare-fun unch131E () String)
(declare-fun unch231F () String)
(declare-fun ch31F () String)
(declare-fun unch131F () String)
(declare-fun l31 () Int)
(declare-fun sc31A () Int)
(declare-fun sc31B () Int)
(declare-fun sc31C () Int)
(declare-fun sc31D () Int)
(declare-fun sc31E () Int)
(declare-fun sc31F () Int)
(declare-fun var32A () String)
(declare-fun var32B () String)
(declare-fun var32C () String)
(declare-fun var32D () String)
(declare-fun var32E () String)
(declare-fun var32F () String)
(declare-fun unch232A () String)
(declare-fun ch32A () String)
(declare-fun unch132A () String)
(declare-fun stem32 () String)
(declare-fun unch232B () String)
(declare-fun ch32B () String)
(declare-fun unch132B () String)
(declare-fun unch232C () String)
(declare-fun ch32C () String)
(declare-fun unch132C () String)
(declare-fun unch232D () String)
(declare-fun ch32D () String)
(declare-fun unch132D () String)
(declare-fun unch232E () String)
(declare-fun ch32E () String)
(declare-fun unch132E () String)
(declare-fun unch232F () String)
(declare-fun ch32F () String)
(declare-fun unch132F () String)
(declare-fun l32 () Int)
(declare-fun sc32A () Int)
(declare-fun sc32B () Int)
(declare-fun sc32C () Int)
(declare-fun sc32D () Int)
(declare-fun sc32E () Int)
(declare-fun sc32F () Int)
(declare-fun var33A () String)
(declare-fun var33B () String)
(declare-fun var33C () String)
(declare-fun var33D () String)
(declare-fun var33E () String)
(declare-fun var33F () String)
(declare-fun unch233A () String)
(declare-fun ch33A () String)
(declare-fun unch133A () String)
(declare-fun stem33 () String)
(declare-fun unch233B () String)
(declare-fun ch33B () String)
(declare-fun unch133B () String)
(declare-fun unch233C () String)
(declare-fun ch33C () String)
(declare-fun unch133C () String)
(declare-fun unch233D () String)
(declare-fun ch33D () String)
(declare-fun unch133D () String)
(declare-fun unch233E () String)
(declare-fun ch33E () String)
(declare-fun unch133E () String)
(declare-fun unch233F () String)
(declare-fun ch33F () String)
(declare-fun unch133F () String)
(declare-fun l33 () Int)
(declare-fun sc33A () Int)
(declare-fun sc33B () Int)
(declare-fun sc33C () Int)
(declare-fun sc33D () Int)
(declare-fun sc33E () Int)
(declare-fun sc33F () Int)
(declare-fun var34A () String)
(declare-fun var34B () String)
(declare-fun var34C () String)
(declare-fun var34D () String)
(declare-fun var34E () String)
(declare-fun var34F () String)
(declare-fun unch234A () String)
(declare-fun ch34A () String)
(declare-fun unch134A () String)
(declare-fun stem34 () String)
(declare-fun unch234B () String)
(declare-fun ch34B () String)
(declare-fun unch134B () String)
(declare-fun unch234C () String)
(declare-fun ch34C () String)
(declare-fun unch134C () String)
(declare-fun unch234D () String)
(declare-fun ch34D () String)
(declare-fun unch134D () String)
(declare-fun unch234E () String)
(declare-fun ch34E () String)
(declare-fun unch134E () String)
(declare-fun unch234F () String)
(declare-fun ch34F () String)
(declare-fun unch134F () String)
(declare-fun l34 () Int)
(declare-fun sc34A () Int)
(declare-fun sc34B () Int)
(declare-fun sc34C () Int)
(declare-fun sc34D () Int)
(declare-fun sc34E () Int)
(declare-fun sc34F () Int)
(declare-fun var35A () String)
(declare-fun var35B () String)
(declare-fun var35C () String)
(declare-fun var35D () String)
(declare-fun var35E () String)
(declare-fun var35F () String)
(declare-fun unch235A () String)
(declare-fun ch35A () String)
(declare-fun unch135A () String)
(declare-fun stem35 () String)
(declare-fun unch235B () String)
(declare-fun ch35B () String)
(declare-fun unch135B () String)
(declare-fun unch235C () String)
(declare-fun ch35C () String)
(declare-fun unch135C () String)
(declare-fun unch235D () String)
(declare-fun ch35D () String)
(declare-fun unch135D () String)
(declare-fun unch235E () String)
(declare-fun ch35E () String)
(declare-fun unch135E () String)
(declare-fun unch235F () String)
(declare-fun ch35F () String)
(declare-fun unch135F () String)
(declare-fun l35 () Int)
(declare-fun sc35A () Int)
(declare-fun sc35B () Int)
(declare-fun sc35C () Int)
(declare-fun sc35D () Int)
(declare-fun sc35E () Int)
(declare-fun sc35F () Int)
(declare-fun var36A () String)
(declare-fun var36B () String)
(declare-fun var36C () String)
(declare-fun var36D () String)
(declare-fun var36E () String)
(declare-fun var36F () String)
(declare-fun unch236A () String)
(declare-fun ch36A () String)
(declare-fun unch136A () String)
(declare-fun stem36 () String)
(declare-fun unch236B () String)
(declare-fun ch36B () String)
(declare-fun unch136B () String)
(declare-fun unch236C () String)
(declare-fun ch36C () String)
(declare-fun unch136C () String)
(declare-fun unch236D () String)
(declare-fun ch36D () String)
(declare-fun unch136D () String)
(declare-fun unch236E () String)
(declare-fun ch36E () String)
(declare-fun unch136E () String)
(declare-fun unch236F () String)
(declare-fun ch36F () String)
(declare-fun unch136F () String)
(declare-fun l36 () Int)
(declare-fun sc36A () Int)
(declare-fun sc36B () Int)
(declare-fun sc36C () Int)
(declare-fun sc36D () Int)
(declare-fun sc36E () Int)
(declare-fun sc36F () Int)
(declare-fun var37A () String)
(declare-fun var37B () String)
(declare-fun var37C () String)
(declare-fun var37D () String)
(declare-fun var37E () String)
(declare-fun var37F () String)
(declare-fun unch237A () String)
(declare-fun ch37A () String)
(declare-fun unch137A () String)
(declare-fun stem37 () String)
(declare-fun unch237B () String)
(declare-fun ch37B () String)
(declare-fun unch137B () String)
(declare-fun unch237C () String)
(declare-fun ch37C () String)
(declare-fun unch137C () String)
(declare-fun unch237D () String)
(declare-fun ch37D () String)
(declare-fun unch137D () String)
(declare-fun unch237E () String)
(declare-fun ch37E () String)
(declare-fun unch137E () String)
(declare-fun unch237F () String)
(declare-fun ch37F () String)
(declare-fun unch137F () String)
(declare-fun l37 () Int)
(declare-fun sc37A () Int)
(declare-fun sc37B () Int)
(declare-fun sc37C () Int)
(declare-fun sc37D () Int)
(declare-fun sc37E () Int)
(declare-fun sc37F () Int)
(declare-fun var38A () String)
(declare-fun var38B () String)
(declare-fun var38C () String)
(declare-fun var38D () String)
(declare-fun var38E () String)
(declare-fun var38F () String)
(declare-fun unch238A () String)
(declare-fun ch38A () String)
(declare-fun unch138A () String)
(declare-fun stem38 () String)
(declare-fun unch238B () String)
(declare-fun ch38B () String)
(declare-fun unch138B () String)
(declare-fun unch238C () String)
(declare-fun ch38C () String)
(declare-fun unch138C () String)
(declare-fun unch238D () String)
(declare-fun ch38D () String)
(declare-fun unch138D () String)
(declare-fun unch238E () String)
(declare-fun ch38E () String)
(declare-fun unch138E () String)
(declare-fun unch238F () String)
(declare-fun ch38F () String)
(declare-fun unch138F () String)
(declare-fun l38 () Int)
(declare-fun sc38A () Int)
(declare-fun sc38B () Int)
(declare-fun sc38C () Int)
(declare-fun sc38D () Int)
(declare-fun sc38E () Int)
(declare-fun sc38F () Int)
(declare-fun var39A () String)
(declare-fun var39B () String)
(declare-fun var39C () String)
(declare-fun var39D () String)
(declare-fun var39E () String)
(declare-fun var39F () String)
(declare-fun unch239A () String)
(declare-fun ch39A () String)
(declare-fun unch139A () String)
(declare-fun stem39 () String)
(declare-fun unch239B () String)
(declare-fun ch39B () String)
(declare-fun unch139B () String)
(declare-fun unch239C () String)
(declare-fun ch39C () String)
(declare-fun unch139C () String)
(declare-fun unch239D () String)
(declare-fun ch39D () String)
(declare-fun unch139D () String)
(declare-fun unch239E () String)
(declare-fun ch39E () String)
(declare-fun unch139E () String)
(declare-fun unch239F () String)
(declare-fun ch39F () String)
(declare-fun unch139F () String)
(declare-fun l39 () Int)
(declare-fun sc39A () Int)
(declare-fun sc39B () Int)
(declare-fun sc39C () Int)
(declare-fun sc39D () Int)
(declare-fun sc39E () Int)
(declare-fun sc39F () Int)
(declare-fun var40A () String)
(declare-fun var40B () String)
(declare-fun var40C () String)
(declare-fun var40D () String)
(declare-fun var40E () String)
(declare-fun var40F () String)
(declare-fun unch240A () String)
(declare-fun ch40A () String)
(declare-fun unch140A () String)
(declare-fun stem40 () String)
(declare-fun unch240B () String)
(declare-fun ch40B () String)
(declare-fun unch140B () String)
(declare-fun unch240C () String)
(declare-fun ch40C () String)
(declare-fun unch140C () String)
(declare-fun unch240D () String)
(declare-fun ch40D () String)
(declare-fun unch140D () String)
(declare-fun unch240E () String)
(declare-fun ch40E () String)
(declare-fun unch140E () String)
(declare-fun unch240F () String)
(declare-fun ch40F () String)
(declare-fun unch140F () String)
(declare-fun l40 () Int)
(declare-fun sc40A () Int)
(declare-fun sc40B () Int)
(declare-fun sc40C () Int)
(declare-fun sc40D () Int)
(declare-fun sc40E () Int)
(declare-fun sc40F () Int)
(declare-fun var41A () String)
(declare-fun var41B () String)
(declare-fun var41C () String)
(declare-fun var41D () String)
(declare-fun var41E () String)
(declare-fun var41F () String)
(declare-fun unch241A () String)
(declare-fun ch41A () String)
(declare-fun unch141A () String)
(declare-fun stem41 () String)
(declare-fun unch241B () String)
(declare-fun ch41B () String)
(declare-fun unch141B () String)
(declare-fun unch241C () String)
(declare-fun ch41C () String)
(declare-fun unch141C () String)
(declare-fun unch241D () String)
(declare-fun ch41D () String)
(declare-fun unch141D () String)
(declare-fun unch241E () String)
(declare-fun ch41E () String)
(declare-fun unch141E () String)
(declare-fun unch241F () String)
(declare-fun ch41F () String)
(declare-fun unch141F () String)
(declare-fun l41 () Int)
(declare-fun sc41A () Int)
(declare-fun sc41B () Int)
(declare-fun sc41C () Int)
(declare-fun sc41D () Int)
(declare-fun sc41E () Int)
(declare-fun sc41F () Int)
(declare-fun var42A () String)
(declare-fun var42B () String)
(declare-fun var42C () String)
(declare-fun var42D () String)
(declare-fun var42E () String)
(declare-fun var42F () String)
(declare-fun unch242A () String)
(declare-fun ch42A () String)
(declare-fun unch142A () String)
(declare-fun stem42 () String)
(declare-fun unch242B () String)
(declare-fun ch42B () String)
(declare-fun unch142B () String)
(declare-fun unch242C () String)
(declare-fun ch42C () String)
(declare-fun unch142C () String)
(declare-fun unch242D () String)
(declare-fun ch42D () String)
(declare-fun unch142D () String)
(declare-fun unch242E () String)
(declare-fun ch42E () String)
(declare-fun unch142E () String)
(declare-fun unch242F () String)
(declare-fun ch42F () String)
(declare-fun unch142F () String)
(declare-fun l42 () Int)
(declare-fun sc42A () Int)
(declare-fun sc42B () Int)
(declare-fun sc42C () Int)
(declare-fun sc42D () Int)
(declare-fun sc42E () Int)
(declare-fun sc42F () Int)
(declare-fun var43A () String)
(declare-fun var43B () String)
(declare-fun var43C () String)
(declare-fun var43D () String)
(declare-fun var43E () String)
(declare-fun var43F () String)
(declare-fun unch243A () String)
(declare-fun ch43A () String)
(declare-fun unch143A () String)
(declare-fun stem43 () String)
(declare-fun unch243B () String)
(declare-fun ch43B () String)
(declare-fun unch143B () String)
(declare-fun unch243C () String)
(declare-fun ch43C () String)
(declare-fun unch143C () String)
(declare-fun unch243D () String)
(declare-fun ch43D () String)
(declare-fun unch143D () String)
(declare-fun unch243E () String)
(declare-fun ch43E () String)
(declare-fun unch143E () String)
(declare-fun unch243F () String)
(declare-fun ch43F () String)
(declare-fun unch143F () String)
(declare-fun l43 () Int)
(declare-fun sc43A () Int)
(declare-fun sc43B () Int)
(declare-fun sc43C () Int)
(declare-fun sc43D () Int)
(declare-fun sc43E () Int)
(declare-fun sc43F () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= "daar" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "daarta" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "daaro" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= "gees" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "geesta" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "geeso" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= "laf" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "lafta" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "lafo" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= "lug" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "lugta" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "luOo" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= "naag" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "naagta" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "naaOo" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= "tib" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "tibta" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "tiXo" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= "sab" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "sabta" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "saXo" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= "bad" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "bada" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "baZo" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= "Bid" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "Bida" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "BiZo" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= "fee1" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "fee1a" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "fee2o" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= "3iir" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "3iirta" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "3iiro" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= "4ul" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "4uBa" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "4ulo" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= "bil" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "biBa" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "bilo" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= "meel" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "meeBa" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "meelo" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= "kaliil" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "kaliiBa" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "kaliilo" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= "najl" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "najBa" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "najlo" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= "sun" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "sunta" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "sumo" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= "laan" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "laanta" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "laamo" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= "sin" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "sinta" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "simo" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= "dan" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "danta" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "dano" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= "daan" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "daanta" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "daano" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= "saan" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "saanta" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "saano" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= "nirig" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "nirigta" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "nirgo" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= "gaXa1" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= "gaXa1a" (str.++ unch123B (str.++ var23B unch223B))))
(assert (= "gab1o" (str.++ unch123C (str.++ var23C unch223C))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= "hoOol" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= "hoOoBa" (str.++ unch124B (str.++ var24B unch224B))))
(assert (= "hoglo" (str.++ unch124C (str.++ var24C unch224C))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= "baOal" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= "baOaBa" (str.++ unch125B (str.++ var25B unch225B))))
(assert (= "baglo" (str.++ unch125C (str.++ var25C unch225C))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= "wa5ar" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= "wa5arta" (str.++ unch126B (str.++ var26B unch226B))))
(assert (= "wa5aro" (str.++ unch126C (str.++ var26C unch226C))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= "irbad" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= "irbada" (str.++ unch127B (str.++ var27B unch227B))))
(assert (= "irbaZo" (str.++ unch127C (str.++ var27C unch227C))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= "kefed" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= "kefeda" (str.++ unch128B (str.++ var28B unch228B))))
(assert (= "kefeZo" (str.++ unch128C (str.++ var28C unch228C))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= "Bilin" (str.++ unch129A (str.++ var29A unch229A))))
(assert (= "Bilinta" (str.++ unch129B (str.++ var29B unch229B))))
(assert (= "Bilino" (str.++ unch129C (str.++ var29C unch229C))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= (str.len var30A) 1))
(assert (<= (str.len var30B) 1))
(assert (<= (str.len var30C) 1))
(assert (<= (str.len var30D) 1))
(assert (<= (str.len var30E) 1))
(assert (<= (str.len var30F) 1))
(assert (= (str.++ preA (str.++ stem30 sufA)) (str.++ unch130A (str.++ ch30A unch230A))))
(assert (= (str.++ preB (str.++ stem30 sufB)) (str.++ unch130B (str.++ ch30B unch230B))))
(assert (= (str.++ preC (str.++ stem30 sufC)) (str.++ unch130C (str.++ ch30C unch230C))))
(assert (= (str.++ preD (str.++ stem30 sufD)) (str.++ unch130D (str.++ ch30D unch230D))))
(assert (= (str.++ preE (str.++ stem30 sufE)) (str.++ unch130E (str.++ ch30E unch230E))))
(assert (= (str.++ preF (str.++ stem30 sufF)) (str.++ unch130F (str.++ ch30F unch230F))))
(assert (= "bohol" (str.++ unch130A (str.++ var30A unch230A))))
(assert (= "bohoBa" (str.++ unch130B (str.++ var30B unch230B))))
(assert (= "boholo" (str.++ unch130C (str.++ var30C unch230C))))
(assert (= (str.len stem30) l30))
(assert (= (ite (= ch30A var30A) 0 1) sc30A))
(assert (= (ite (= ch30B var30B) 0 1) sc30B))
(assert (= (ite (= ch30C var30C) 0 1) sc30C))
(assert (= (ite (= ch30D var30D) 0 1) sc30D))
(assert (= (ite (= ch30E var30E) 0 1) sc30E))
(assert (= (ite (= ch30F var30F) 0 1) sc30F))
(assert (<= sc30A 1))
(assert (<= sc30B 1))
(assert (<= sc30C 1))
(assert (<= sc30D 1))
(assert (<= sc30E 1))
(assert (<= sc30F 1))
(assert (<= (str.len var31A) 1))
(assert (<= (str.len var31B) 1))
(assert (<= (str.len var31C) 1))
(assert (<= (str.len var31D) 1))
(assert (<= (str.len var31E) 1))
(assert (<= (str.len var31F) 1))
(assert (= (str.++ preA (str.++ stem31 sufA)) (str.++ unch131A (str.++ ch31A unch231A))))
(assert (= (str.++ preB (str.++ stem31 sufB)) (str.++ unch131B (str.++ ch31B unch231B))))
(assert (= (str.++ preC (str.++ stem31 sufC)) (str.++ unch131C (str.++ ch31C unch231C))))
(assert (= (str.++ preD (str.++ stem31 sufD)) (str.++ unch131D (str.++ ch31D unch231D))))
(assert (= (str.++ preE (str.++ stem31 sufE)) (str.++ unch131E (str.++ ch31E unch231E))))
(assert (= (str.++ preF (str.++ stem31 sufF)) (str.++ unch131F (str.++ ch31F unch231F))))
(assert (= "4aajad" (str.++ unch131A (str.++ var31A unch231A))))
(assert (= "4aajada" (str.++ unch131B (str.++ var31B unch231B))))
(assert (= "4aajaZo" (str.++ unch131C (str.++ var31C unch231C))))
(assert (= (str.len stem31) l31))
(assert (= (ite (= ch31A var31A) 0 1) sc31A))
(assert (= (ite (= ch31B var31B) 0 1) sc31B))
(assert (= (ite (= ch31C var31C) 0 1) sc31C))
(assert (= (ite (= ch31D var31D) 0 1) sc31D))
(assert (= (ite (= ch31E var31E) 0 1) sc31E))
(assert (= (ite (= ch31F var31F) 0 1) sc31F))
(assert (<= sc31A 1))
(assert (<= sc31B 1))
(assert (<= sc31C 1))
(assert (<= sc31D 1))
(assert (<= sc31E 1))
(assert (<= sc31F 1))
(assert (<= (str.len var32A) 1))
(assert (<= (str.len var32B) 1))
(assert (<= (str.len var32C) 1))
(assert (<= (str.len var32D) 1))
(assert (<= (str.len var32E) 1))
(assert (<= (str.len var32F) 1))
(assert (= (str.++ preA (str.++ stem32 sufA)) (str.++ unch132A (str.++ ch32A unch232A))))
(assert (= (str.++ preB (str.++ stem32 sufB)) (str.++ unch132B (str.++ ch32B unch232B))))
(assert (= (str.++ preC (str.++ stem32 sufC)) (str.++ unch132C (str.++ ch32C unch232C))))
(assert (= (str.++ preD (str.++ stem32 sufD)) (str.++ unch132D (str.++ ch32D unch232D))))
(assert (= (str.++ preE (str.++ stem32 sufE)) (str.++ unch132E (str.++ ch32E unch232E))))
(assert (= (str.++ preF (str.++ stem32 sufF)) (str.++ unch132F (str.++ ch32F unch232F))))
(assert (= "ga3an" (str.++ unch132A (str.++ var32A unch232A))))
(assert (= "ga3anta" (str.++ unch132B (str.++ var32B unch232B))))
(assert (= "ga3mo" (str.++ unch132C (str.++ var32C unch232C))))
(assert (= (str.len stem32) l32))
(assert (= (ite (= ch32A var32A) 0 1) sc32A))
(assert (= (ite (= ch32B var32B) 0 1) sc32B))
(assert (= (ite (= ch32C var32C) 0 1) sc32C))
(assert (= (ite (= ch32D var32D) 0 1) sc32D))
(assert (= (ite (= ch32E var32E) 0 1) sc32E))
(assert (= (ite (= ch32F var32F) 0 1) sc32F))
(assert (<= sc32A 1))
(assert (<= sc32B 1))
(assert (<= sc32C 1))
(assert (<= sc32D 1))
(assert (<= sc32E 1))
(assert (<= sc32F 1))
(assert (<= (str.len var33A) 1))
(assert (<= (str.len var33B) 1))
(assert (<= (str.len var33C) 1))
(assert (<= (str.len var33D) 1))
(assert (<= (str.len var33E) 1))
(assert (<= (str.len var33F) 1))
(assert (= (str.++ preA (str.++ stem33 sufA)) (str.++ unch133A (str.++ ch33A unch233A))))
(assert (= (str.++ preB (str.++ stem33 sufB)) (str.++ unch133B (str.++ ch33B unch233B))))
(assert (= (str.++ preC (str.++ stem33 sufC)) (str.++ unch133C (str.++ ch33C unch233C))))
(assert (= (str.++ preD (str.++ stem33 sufD)) (str.++ unch133D (str.++ ch33D unch233D))))
(assert (= (str.++ preE (str.++ stem33 sufE)) (str.++ unch133E (str.++ ch33E unch233E))))
(assert (= (str.++ preF (str.++ stem33 sufF)) (str.++ unch133F (str.++ ch33F unch233F))))
(assert (= "4inan" (str.++ unch133A (str.++ var33A unch233A))))
(assert (= "4inanta" (str.++ unch133B (str.++ var33B unch233B))))
(assert (= "4inano" (str.++ unch133C (str.++ var33C unch233C))))
(assert (= (str.len stem33) l33))
(assert (= (ite (= ch33A var33A) 0 1) sc33A))
(assert (= (ite (= ch33B var33B) 0 1) sc33B))
(assert (= (ite (= ch33C var33C) 0 1) sc33C))
(assert (= (ite (= ch33D var33D) 0 1) sc33D))
(assert (= (ite (= ch33E var33E) 0 1) sc33E))
(assert (= (ite (= ch33F var33F) 0 1) sc33F))
(assert (<= sc33A 1))
(assert (<= sc33B 1))
(assert (<= sc33C 1))
(assert (<= sc33D 1))
(assert (<= sc33E 1))
(assert (<= sc33F 1))
(assert (<= (str.len var34A) 1))
(assert (<= (str.len var34B) 1))
(assert (<= (str.len var34C) 1))
(assert (<= (str.len var34D) 1))
(assert (<= (str.len var34E) 1))
(assert (<= (str.len var34F) 1))
(assert (= (str.++ preA (str.++ stem34 sufA)) (str.++ unch134A (str.++ ch34A unch234A))))
(assert (= (str.++ preB (str.++ stem34 sufB)) (str.++ unch134B (str.++ ch34B unch234B))))
(assert (= (str.++ preC (str.++ stem34 sufC)) (str.++ unch134C (str.++ ch34C unch234C))))
(assert (= (str.++ preD (str.++ stem34 sufD)) (str.++ unch134D (str.++ ch34D unch234D))))
(assert (= (str.++ preE (str.++ stem34 sufE)) (str.++ unch134E (str.++ ch34E unch234E))))
(assert (= (str.++ preF (str.++ stem34 sufF)) (str.++ unch134F (str.++ ch34F unch234F))))
(assert (= "suOaj" (str.++ unch134D (str.++ var34D unch234D))))
(assert (= "sugtaj" (str.++ unch134E (str.++ var34E unch234E))))
(assert (= "sugnaj" (str.++ unch134F (str.++ var34F unch234F))))
(assert (= (str.len stem34) l34))
(assert (= (ite (= ch34A var34A) 0 1) sc34A))
(assert (= (ite (= ch34B var34B) 0 1) sc34B))
(assert (= (ite (= ch34C var34C) 0 1) sc34C))
(assert (= (ite (= ch34D var34D) 0 1) sc34D))
(assert (= (ite (= ch34E var34E) 0 1) sc34E))
(assert (= (ite (= ch34F var34F) 0 1) sc34F))
(assert (<= sc34A 1))
(assert (<= sc34B 1))
(assert (<= sc34C 1))
(assert (<= sc34D 1))
(assert (<= sc34E 1))
(assert (<= sc34F 1))
(assert (<= (str.len var35A) 1))
(assert (<= (str.len var35B) 1))
(assert (<= (str.len var35C) 1))
(assert (<= (str.len var35D) 1))
(assert (<= (str.len var35E) 1))
(assert (<= (str.len var35F) 1))
(assert (= (str.++ preA (str.++ stem35 sufA)) (str.++ unch135A (str.++ ch35A unch235A))))
(assert (= (str.++ preB (str.++ stem35 sufB)) (str.++ unch135B (str.++ ch35B unch235B))))
(assert (= (str.++ preC (str.++ stem35 sufC)) (str.++ unch135C (str.++ ch35C unch235C))))
(assert (= (str.++ preD (str.++ stem35 sufD)) (str.++ unch135D (str.++ ch35D unch235D))))
(assert (= (str.++ preE (str.++ stem35 sufE)) (str.++ unch135E (str.++ ch35E unch235E))))
(assert (= (str.++ preF (str.++ stem35 sufF)) (str.++ unch135F (str.++ ch35F unch235F))))
(assert (= "kaXaj" (str.++ unch135D (str.++ var35D unch235D))))
(assert (= "kabtaj" (str.++ unch135E (str.++ var35E unch235E))))
(assert (= "kabnaj" (str.++ unch135F (str.++ var35F unch235F))))
(assert (= (str.len stem35) l35))
(assert (= (ite (= ch35A var35A) 0 1) sc35A))
(assert (= (ite (= ch35B var35B) 0 1) sc35B))
(assert (= (ite (= ch35C var35C) 0 1) sc35C))
(assert (= (ite (= ch35D var35D) 0 1) sc35D))
(assert (= (ite (= ch35E var35E) 0 1) sc35E))
(assert (= (ite (= ch35F var35F) 0 1) sc35F))
(assert (<= sc35A 1))
(assert (<= sc35B 1))
(assert (<= sc35C 1))
(assert (<= sc35D 1))
(assert (<= sc35E 1))
(assert (<= sc35F 1))
(assert (<= (str.len var36A) 1))
(assert (<= (str.len var36B) 1))
(assert (<= (str.len var36C) 1))
(assert (<= (str.len var36D) 1))
(assert (<= (str.len var36E) 1))
(assert (<= (str.len var36F) 1))
(assert (= (str.++ preA (str.++ stem36 sufA)) (str.++ unch136A (str.++ ch36A unch236A))))
(assert (= (str.++ preB (str.++ stem36 sufB)) (str.++ unch136B (str.++ ch36B unch236B))))
(assert (= (str.++ preC (str.++ stem36 sufC)) (str.++ unch136C (str.++ ch36C unch236C))))
(assert (= (str.++ preD (str.++ stem36 sufD)) (str.++ unch136D (str.++ ch36D unch236D))))
(assert (= (str.++ preE (str.++ stem36 sufE)) (str.++ unch136E (str.++ ch36E unch236E))))
(assert (= (str.++ preF (str.++ stem36 sufF)) (str.++ unch136F (str.++ ch36F unch236F))))
(assert (= "siZaj" (str.++ unch136D (str.++ var36D unch236D))))
(assert (= "sidaj" (str.++ unch136E (str.++ var36E unch236E))))
(assert (= "sidnaj" (str.++ unch136F (str.++ var36F unch236F))))
(assert (= (str.len stem36) l36))
(assert (= (ite (= ch36A var36A) 0 1) sc36A))
(assert (= (ite (= ch36B var36B) 0 1) sc36B))
(assert (= (ite (= ch36C var36C) 0 1) sc36C))
(assert (= (ite (= ch36D var36D) 0 1) sc36D))
(assert (= (ite (= ch36E var36E) 0 1) sc36E))
(assert (= (ite (= ch36F var36F) 0 1) sc36F))
(assert (<= sc36A 1))
(assert (<= sc36B 1))
(assert (<= sc36C 1))
(assert (<= sc36D 1))
(assert (<= sc36E 1))
(assert (<= sc36F 1))
(assert (<= (str.len var37A) 1))
(assert (<= (str.len var37B) 1))
(assert (<= (str.len var37C) 1))
(assert (<= (str.len var37D) 1))
(assert (<= (str.len var37E) 1))
(assert (<= (str.len var37F) 1))
(assert (= (str.++ preA (str.++ stem37 sufA)) (str.++ unch137A (str.++ ch37A unch237A))))
(assert (= (str.++ preB (str.++ stem37 sufB)) (str.++ unch137B (str.++ ch37B unch237B))))
(assert (= (str.++ preC (str.++ stem37 sufC)) (str.++ unch137C (str.++ ch37C unch237C))))
(assert (= (str.++ preD (str.++ stem37 sufD)) (str.++ unch137D (str.++ ch37D unch237D))))
(assert (= (str.++ preE (str.++ stem37 sufE)) (str.++ unch137E (str.++ ch37E unch237E))))
(assert (= (str.++ preF (str.++ stem37 sufF)) (str.++ unch137F (str.++ ch37F unch237F))))
(assert (= "dilaj" (str.++ unch137D (str.++ var37D unch237D))))
(assert (= "diBaj" (str.++ unch137E (str.++ var37E unch237E))))
(assert (= "dillaj" (str.++ unch137F (str.++ var37F unch237F))))
(assert (= (str.len stem37) l37))
(assert (= (ite (= ch37A var37A) 0 1) sc37A))
(assert (= (ite (= ch37B var37B) 0 1) sc37B))
(assert (= (ite (= ch37C var37C) 0 1) sc37C))
(assert (= (ite (= ch37D var37D) 0 1) sc37D))
(assert (= (ite (= ch37E var37E) 0 1) sc37E))
(assert (= (ite (= ch37F var37F) 0 1) sc37F))
(assert (<= sc37A 1))
(assert (<= sc37B 1))
(assert (<= sc37C 1))
(assert (<= sc37D 1))
(assert (<= sc37E 1))
(assert (<= sc37F 1))
(assert (<= (str.len var38A) 1))
(assert (<= (str.len var38B) 1))
(assert (<= (str.len var38C) 1))
(assert (<= (str.len var38D) 1))
(assert (<= (str.len var38E) 1))
(assert (<= (str.len var38F) 1))
(assert (= (str.++ preA (str.++ stem38 sufA)) (str.++ unch138A (str.++ ch38A unch238A))))
(assert (= (str.++ preB (str.++ stem38 sufB)) (str.++ unch138B (str.++ ch38B unch238B))))
(assert (= (str.++ preC (str.++ stem38 sufC)) (str.++ unch138C (str.++ ch38C unch238C))))
(assert (= (str.++ preD (str.++ stem38 sufD)) (str.++ unch138D (str.++ ch38D unch238D))))
(assert (= (str.++ preE (str.++ stem38 sufE)) (str.++ unch138E (str.++ ch38E unch238E))))
(assert (= (str.++ preF (str.++ stem38 sufF)) (str.++ unch138F (str.++ ch38F unch238F))))
(assert (= "ganaj" (str.++ unch138D (str.++ var38D unch238D))))
(assert (= "gantaj" (str.++ unch138E (str.++ var38E unch238E))))
(assert (= "gannaj" (str.++ unch138F (str.++ var38F unch238F))))
(assert (= (str.len stem38) l38))
(assert (= (ite (= ch38A var38A) 0 1) sc38A))
(assert (= (ite (= ch38B var38B) 0 1) sc38B))
(assert (= (ite (= ch38C var38C) 0 1) sc38C))
(assert (= (ite (= ch38D var38D) 0 1) sc38D))
(assert (= (ite (= ch38E var38E) 0 1) sc38E))
(assert (= (ite (= ch38F var38F) 0 1) sc38F))
(assert (<= sc38A 1))
(assert (<= sc38B 1))
(assert (<= sc38C 1))
(assert (<= sc38D 1))
(assert (<= sc38E 1))
(assert (<= sc38F 1))
(assert (<= (str.len var39A) 1))
(assert (<= (str.len var39B) 1))
(assert (<= (str.len var39C) 1))
(assert (<= (str.len var39D) 1))
(assert (<= (str.len var39E) 1))
(assert (<= (str.len var39F) 1))
(assert (= (str.++ preA (str.++ stem39 sufA)) (str.++ unch139A (str.++ ch39A unch239A))))
(assert (= (str.++ preB (str.++ stem39 sufB)) (str.++ unch139B (str.++ ch39B unch239B))))
(assert (= (str.++ preC (str.++ stem39 sufC)) (str.++ unch139C (str.++ ch39C unch239C))))
(assert (= (str.++ preD (str.++ stem39 sufD)) (str.++ unch139D (str.++ ch39D unch239D))))
(assert (= (str.++ preE (str.++ stem39 sufE)) (str.++ unch139E (str.++ ch39E unch239E))))
(assert (= (str.++ preF (str.++ stem39 sufF)) (str.++ unch139F (str.++ ch39F unch239F))))
(assert (= "tumaj" (str.++ unch139D (str.++ var39D unch239D))))
(assert (= "tuntaj" (str.++ unch139E (str.++ var39E unch239E))))
(assert (= "tunnaj" (str.++ unch139F (str.++ var39F unch239F))))
(assert (= (str.len stem39) l39))
(assert (= (ite (= ch39A var39A) 0 1) sc39A))
(assert (= (ite (= ch39B var39B) 0 1) sc39B))
(assert (= (ite (= ch39C var39C) 0 1) sc39C))
(assert (= (ite (= ch39D var39D) 0 1) sc39D))
(assert (= (ite (= ch39E var39E) 0 1) sc39E))
(assert (= (ite (= ch39F var39F) 0 1) sc39F))
(assert (<= sc39A 1))
(assert (<= sc39B 1))
(assert (<= sc39C 1))
(assert (<= sc39D 1))
(assert (<= sc39E 1))
(assert (<= sc39F 1))
(assert (<= (str.len var40A) 1))
(assert (<= (str.len var40B) 1))
(assert (<= (str.len var40C) 1))
(assert (<= (str.len var40D) 1))
(assert (<= (str.len var40E) 1))
(assert (<= (str.len var40F) 1))
(assert (= (str.++ preA (str.++ stem40 sufA)) (str.++ unch140A (str.++ ch40A unch240A))))
(assert (= (str.++ preB (str.++ stem40 sufB)) (str.++ unch140B (str.++ ch40B unch240B))))
(assert (= (str.++ preC (str.++ stem40 sufC)) (str.++ unch140C (str.++ ch40C unch240C))))
(assert (= (str.++ preD (str.++ stem40 sufD)) (str.++ unch140D (str.++ ch40D unch240D))))
(assert (= (str.++ preE (str.++ stem40 sufE)) (str.++ unch140E (str.++ ch40E unch240E))))
(assert (= (str.++ preF (str.++ stem40 sufF)) (str.++ unch140F (str.++ ch40F unch240F))))
(assert (= "argaj" (str.++ unch140D (str.++ var40D unch240D))))
(assert (= "aragtaj" (str.++ unch140E (str.++ var40E unch240E))))
(assert (= "aragnaj" (str.++ unch140F (str.++ var40F unch240F))))
(assert (= (str.len stem40) l40))
(assert (= (ite (= ch40A var40A) 0 1) sc40A))
(assert (= (ite (= ch40B var40B) 0 1) sc40B))
(assert (= (ite (= ch40C var40C) 0 1) sc40C))
(assert (= (ite (= ch40D var40D) 0 1) sc40D))
(assert (= (ite (= ch40E var40E) 0 1) sc40E))
(assert (= (ite (= ch40F var40F) 0 1) sc40F))
(assert (<= sc40A 1))
(assert (<= sc40B 1))
(assert (<= sc40C 1))
(assert (<= sc40D 1))
(assert (<= sc40E 1))
(assert (<= sc40F 1))
(assert (<= (str.len var41A) 1))
(assert (<= (str.len var41B) 1))
(assert (<= (str.len var41C) 1))
(assert (<= (str.len var41D) 1))
(assert (<= (str.len var41E) 1))
(assert (<= (str.len var41F) 1))
(assert (= (str.++ preA (str.++ stem41 sufA)) (str.++ unch141A (str.++ ch41A unch241A))))
(assert (= (str.++ preB (str.++ stem41 sufB)) (str.++ unch141B (str.++ ch41B unch241B))))
(assert (= (str.++ preC (str.++ stem41 sufC)) (str.++ unch141C (str.++ ch41C unch241C))))
(assert (= (str.++ preD (str.++ stem41 sufD)) (str.++ unch141D (str.++ ch41D unch241D))))
(assert (= (str.++ preE (str.++ stem41 sufE)) (str.++ unch141E (str.++ ch41E unch241E))))
(assert (= (str.++ preF (str.++ stem41 sufF)) (str.++ unch141F (str.++ ch41F unch241F))))
(assert (= "gudbaj" (str.++ unch141D (str.++ var41D unch241D))))
(assert (= "guZubtaj" (str.++ unch141E (str.++ var41E unch241E))))
(assert (= "guZubnaj" (str.++ unch141F (str.++ var41F unch241F))))
(assert (= (str.len stem41) l41))
(assert (= (ite (= ch41A var41A) 0 1) sc41A))
(assert (= (ite (= ch41B var41B) 0 1) sc41B))
(assert (= (ite (= ch41C var41C) 0 1) sc41C))
(assert (= (ite (= ch41D var41D) 0 1) sc41D))
(assert (= (ite (= ch41E var41E) 0 1) sc41E))
(assert (= (ite (= ch41F var41F) 0 1) sc41F))
(assert (<= sc41A 1))
(assert (<= sc41B 1))
(assert (<= sc41C 1))
(assert (<= sc41D 1))
(assert (<= sc41E 1))
(assert (<= sc41F 1))
(assert (<= (str.len var42A) 1))
(assert (<= (str.len var42B) 1))
(assert (<= (str.len var42C) 1))
(assert (<= (str.len var42D) 1))
(assert (<= (str.len var42E) 1))
(assert (<= (str.len var42F) 1))
(assert (= (str.++ preA (str.++ stem42 sufA)) (str.++ unch142A (str.++ ch42A unch242A))))
(assert (= (str.++ preB (str.++ stem42 sufB)) (str.++ unch142B (str.++ ch42B unch242B))))
(assert (= (str.++ preC (str.++ stem42 sufC)) (str.++ unch142C (str.++ ch42C unch242C))))
(assert (= (str.++ preD (str.++ stem42 sufD)) (str.++ unch142D (str.++ ch42D unch242D))))
(assert (= (str.++ preE (str.++ stem42 sufE)) (str.++ unch142E (str.++ ch42E unch242E))))
(assert (= (str.++ preF (str.++ stem42 sufF)) (str.++ unch142F (str.++ ch42F unch242F))))
(assert (= "qoslaj" (str.++ unch142D (str.++ var42D unch242D))))
(assert (= "qosoBaj" (str.++ unch142E (str.++ var42E unch242E))))
(assert (= "qosollaj" (str.++ unch142F (str.++ var42F unch242F))))
(assert (= (str.len stem42) l42))
(assert (= (ite (= ch42A var42A) 0 1) sc42A))
(assert (= (ite (= ch42B var42B) 0 1) sc42B))
(assert (= (ite (= ch42C var42C) 0 1) sc42C))
(assert (= (ite (= ch42D var42D) 0 1) sc42D))
(assert (= (ite (= ch42E var42E) 0 1) sc42E))
(assert (= (ite (= ch42F var42F) 0 1) sc42F))
(assert (<= sc42A 1))
(assert (<= sc42B 1))
(assert (<= sc42C 1))
(assert (<= sc42D 1))
(assert (<= sc42E 1))
(assert (<= sc42F 1))
(assert (<= (str.len var43A) 1))
(assert (<= (str.len var43B) 1))
(assert (<= (str.len var43C) 1))
(assert (<= (str.len var43D) 1))
(assert (<= (str.len var43E) 1))
(assert (<= (str.len var43F) 1))
(assert (= (str.++ preA (str.++ stem43 sufA)) (str.++ unch143A (str.++ ch43A unch243A))))
(assert (= (str.++ preB (str.++ stem43 sufB)) (str.++ unch143B (str.++ ch43B unch243B))))
(assert (= (str.++ preC (str.++ stem43 sufC)) (str.++ unch143C (str.++ ch43C unch243C))))
(assert (= (str.++ preD (str.++ stem43 sufD)) (str.++ unch143D (str.++ ch43D unch243D))))
(assert (= (str.++ preE (str.++ stem43 sufE)) (str.++ unch143E (str.++ ch43E unch243E))))
(assert (= (str.++ preF (str.++ stem43 sufF)) (str.++ unch143F (str.++ ch43F unch243F))))
(assert (= "hadlaj" (str.++ unch143D (str.++ var43D unch243D))))
(assert (= "haZaBaj" (str.++ unch143E (str.++ var43E unch243E))))
(assert (= "haZallaj" (str.++ unch143F (str.++ var43F unch243F))))
(assert (= (str.len stem43) l43))
(assert (= (ite (= ch43A var43A) 0 1) sc43A))
(assert (= (ite (= ch43B var43B) 0 1) sc43B))
(assert (= (ite (= ch43C var43C) 0 1) sc43C))
(assert (= (ite (= ch43D var43D) 0 1) sc43D))
(assert (= (ite (= ch43E var43E) 0 1) sc43E))
(assert (= (ite (= ch43F var43F) 0 1) sc43F))
(assert (<= sc43A 1))
(assert (<= sc43B 1))
(assert (<= sc43C 1))
(assert (<= sc43D 1))
(assert (<= sc43E 1))
(assert (<= sc43F 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      0
      sc30A
      sc30B
      sc30C
      sc30D
      sc30E
      sc30F
      0
      sc31A
      sc31B
      sc31C
      sc31D
      sc31E
      sc31F
      0
      sc32A
      sc32B
      sc32C
      sc32D
      sc32E
      sc32F
      0
      sc33A
      sc33B
      sc33C
      sc33D
      sc33E
      sc33F
      0
      sc34A
      sc34B
      sc34C
      sc34D
      sc34E
      sc34F
      0
      sc35A
      sc35B
      sc35C
      sc35D
      sc35E
      sc35F
      0
      sc36A
      sc36B
      sc36C
      sc36D
      sc36E
      sc36F
      0
      sc37A
      sc37B
      sc37C
      sc37D
      sc37E
      sc37F
      0
      sc38A
      sc38B
      sc38C
      sc38D
      sc38E
      sc38F
      0
      sc39A
      sc39B
      sc39C
      sc39D
      sc39E
      sc39F
      0
      sc40A
      sc40B
      sc40C
      sc40D
      sc40E
      sc40F
      0
      sc41A
      sc41B
      sc41C
      sc41D
      sc41E
      sc41F
      0
      sc42A
      sc42B
      sc42C
      sc42D
      sc42E
      sc42F
      0
      sc43A
      sc43B
      sc43C
      sc43D
      sc43E
      sc43F)
   6))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A
      sc17A
      sc18A
      sc19A
      sc20A
      sc21A
      sc22A
      sc23A
      sc24A
      sc25A
      sc26A
      sc27A
      sc28A
      sc29A
      sc30A
      sc31A
      sc32A
      sc33A
      sc34A
      sc35A
      sc36A
      sc37A
      sc38A
      sc39A
      sc40A
      sc41A
      sc42A
      sc43A)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun var30A () String)
(declare-fun var30B () String)
(declare-fun var30C () String)
(declare-fun var30D () String)
(declare-fun var30E () String)
(declare-fun var30F () String)
(declare-fun unch230A () String)
(declare-fun ch30A () String)
(declare-fun unch130A () String)
(declare-fun stem30 () String)
(declare-fun unch230B () String)
(declare-fun ch30B () String)
(declare-fun unch130B () String)
(declare-fun unch230C () String)
(declare-fun ch30C () String)
(declare-fun unch130C () String)
(declare-fun unch230D () String)
(declare-fun ch30D () String)
(declare-fun unch130D () String)
(declare-fun unch230E () String)
(declare-fun ch30E () String)
(declare-fun unch130E () String)
(declare-fun unch230F () String)
(declare-fun ch30F () String)
(declare-fun unch130F () String)
(declare-fun l30 () Int)
(declare-fun sc30A () Int)
(declare-fun sc30B () Int)
(declare-fun sc30C () Int)
(declare-fun sc30D () Int)
(declare-fun sc30E () Int)
(declare-fun sc30F () Int)
(declare-fun var31A () String)
(declare-fun var31B () String)
(declare-fun var31C () String)
(declare-fun var31D () String)
(declare-fun var31E () String)
(declare-fun var31F () String)
(declare-fun unch231A () String)
(declare-fun ch31A () String)
(declare-fun unch131A () String)
(declare-fun stem31 () String)
(declare-fun unch231B () String)
(declare-fun ch31B () String)
(declare-fun unch131B () String)
(declare-fun unch231C () String)
(declare-fun ch31C () String)
(declare-fun unch131C () String)
(declare-fun unch231D () String)
(declare-fun ch31D () String)
(declare-fun unch131D () String)
(declare-fun unch231E () String)
(declare-fun ch31E () String)
(declare-fun unch131E () String)
(declare-fun unch231F () String)
(declare-fun ch31F () String)
(declare-fun unch131F () String)
(declare-fun l31 () Int)
(declare-fun sc31A () Int)
(declare-fun sc31B () Int)
(declare-fun sc31C () Int)
(declare-fun sc31D () Int)
(declare-fun sc31E () Int)
(declare-fun sc31F () Int)
(declare-fun var32A () String)
(declare-fun var32B () String)
(declare-fun var32C () String)
(declare-fun var32D () String)
(declare-fun var32E () String)
(declare-fun var32F () String)
(declare-fun unch232A () String)
(declare-fun ch32A () String)
(declare-fun unch132A () String)
(declare-fun stem32 () String)
(declare-fun unch232B () String)
(declare-fun ch32B () String)
(declare-fun unch132B () String)
(declare-fun unch232C () String)
(declare-fun ch32C () String)
(declare-fun unch132C () String)
(declare-fun unch232D () String)
(declare-fun ch32D () String)
(declare-fun unch132D () String)
(declare-fun unch232E () String)
(declare-fun ch32E () String)
(declare-fun unch132E () String)
(declare-fun unch232F () String)
(declare-fun ch32F () String)
(declare-fun unch132F () String)
(declare-fun l32 () Int)
(declare-fun sc32A () Int)
(declare-fun sc32B () Int)
(declare-fun sc32C () Int)
(declare-fun sc32D () Int)
(declare-fun sc32E () Int)
(declare-fun sc32F () Int)
(declare-fun var33A () String)
(declare-fun var33B () String)
(declare-fun var33C () String)
(declare-fun var33D () String)
(declare-fun var33E () String)
(declare-fun var33F () String)
(declare-fun unch233A () String)
(declare-fun ch33A () String)
(declare-fun unch133A () String)
(declare-fun stem33 () String)
(declare-fun unch233B () String)
(declare-fun ch33B () String)
(declare-fun unch133B () String)
(declare-fun unch233C () String)
(declare-fun ch33C () String)
(declare-fun unch133C () String)
(declare-fun unch233D () String)
(declare-fun ch33D () String)
(declare-fun unch133D () String)
(declare-fun unch233E () String)
(declare-fun ch33E () String)
(declare-fun unch133E () String)
(declare-fun unch233F () String)
(declare-fun ch33F () String)
(declare-fun unch133F () String)
(declare-fun l33 () Int)
(declare-fun sc33A () Int)
(declare-fun sc33B () Int)
(declare-fun sc33C () Int)
(declare-fun sc33D () Int)
(declare-fun sc33E () Int)
(declare-fun sc33F () Int)
(declare-fun var34A () String)
(declare-fun var34B () String)
(declare-fun var34C () String)
(declare-fun var34D () String)
(declare-fun var34E () String)
(declare-fun var34F () String)
(declare-fun unch234A () String)
(declare-fun ch34A () String)
(declare-fun unch134A () String)
(declare-fun stem34 () String)
(declare-fun unch234B () String)
(declare-fun ch34B () String)
(declare-fun unch134B () String)
(declare-fun unch234C () String)
(declare-fun ch34C () String)
(declare-fun unch134C () String)
(declare-fun unch234D () String)
(declare-fun ch34D () String)
(declare-fun unch134D () String)
(declare-fun unch234E () String)
(declare-fun ch34E () String)
(declare-fun unch134E () String)
(declare-fun unch234F () String)
(declare-fun ch34F () String)
(declare-fun unch134F () String)
(declare-fun l34 () Int)
(declare-fun sc34A () Int)
(declare-fun sc34B () Int)
(declare-fun sc34C () Int)
(declare-fun sc34D () Int)
(declare-fun sc34E () Int)
(declare-fun sc34F () Int)
(declare-fun var35A () String)
(declare-fun var35B () String)
(declare-fun var35C () String)
(declare-fun var35D () String)
(declare-fun var35E () String)
(declare-fun var35F () String)
(declare-fun unch235A () String)
(declare-fun ch35A () String)
(declare-fun unch135A () String)
(declare-fun stem35 () String)
(declare-fun unch235B () String)
(declare-fun ch35B () String)
(declare-fun unch135B () String)
(declare-fun unch235C () String)
(declare-fun ch35C () String)
(declare-fun unch135C () String)
(declare-fun unch235D () String)
(declare-fun ch35D () String)
(declare-fun unch135D () String)
(declare-fun unch235E () String)
(declare-fun ch35E () String)
(declare-fun unch135E () String)
(declare-fun unch235F () String)
(declare-fun ch35F () String)
(declare-fun unch135F () String)
(declare-fun l35 () Int)
(declare-fun sc35A () Int)
(declare-fun sc35B () Int)
(declare-fun sc35C () Int)
(declare-fun sc35D () Int)
(declare-fun sc35E () Int)
(declare-fun sc35F () Int)
(declare-fun var36A () String)
(declare-fun var36B () String)
(declare-fun var36C () String)
(declare-fun var36D () String)
(declare-fun var36E () String)
(declare-fun var36F () String)
(declare-fun unch236A () String)
(declare-fun ch36A () String)
(declare-fun unch136A () String)
(declare-fun stem36 () String)
(declare-fun unch236B () String)
(declare-fun ch36B () String)
(declare-fun unch136B () String)
(declare-fun unch236C () String)
(declare-fun ch36C () String)
(declare-fun unch136C () String)
(declare-fun unch236D () String)
(declare-fun ch36D () String)
(declare-fun unch136D () String)
(declare-fun unch236E () String)
(declare-fun ch36E () String)
(declare-fun unch136E () String)
(declare-fun unch236F () String)
(declare-fun ch36F () String)
(declare-fun unch136F () String)
(declare-fun l36 () Int)
(declare-fun sc36A () Int)
(declare-fun sc36B () Int)
(declare-fun sc36C () Int)
(declare-fun sc36D () Int)
(declare-fun sc36E () Int)
(declare-fun sc36F () Int)
(declare-fun var37A () String)
(declare-fun var37B () String)
(declare-fun var37C () String)
(declare-fun var37D () String)
(declare-fun var37E () String)
(declare-fun var37F () String)
(declare-fun unch237A () String)
(declare-fun ch37A () String)
(declare-fun unch137A () String)
(declare-fun stem37 () String)
(declare-fun unch237B () String)
(declare-fun ch37B () String)
(declare-fun unch137B () String)
(declare-fun unch237C () String)
(declare-fun ch37C () String)
(declare-fun unch137C () String)
(declare-fun unch237D () String)
(declare-fun ch37D () String)
(declare-fun unch137D () String)
(declare-fun unch237E () String)
(declare-fun ch37E () String)
(declare-fun unch137E () String)
(declare-fun unch237F () String)
(declare-fun ch37F () String)
(declare-fun unch137F () String)
(declare-fun l37 () Int)
(declare-fun sc37A () Int)
(declare-fun sc37B () Int)
(declare-fun sc37C () Int)
(declare-fun sc37D () Int)
(declare-fun sc37E () Int)
(declare-fun sc37F () Int)
(declare-fun var38A () String)
(declare-fun var38B () String)
(declare-fun var38C () String)
(declare-fun var38D () String)
(declare-fun var38E () String)
(declare-fun var38F () String)
(declare-fun unch238A () String)
(declare-fun ch38A () String)
(declare-fun unch138A () String)
(declare-fun stem38 () String)
(declare-fun unch238B () String)
(declare-fun ch38B () String)
(declare-fun unch138B () String)
(declare-fun unch238C () String)
(declare-fun ch38C () String)
(declare-fun unch138C () String)
(declare-fun unch238D () String)
(declare-fun ch38D () String)
(declare-fun unch138D () String)
(declare-fun unch238E () String)
(declare-fun ch38E () String)
(declare-fun unch138E () String)
(declare-fun unch238F () String)
(declare-fun ch38F () String)
(declare-fun unch138F () String)
(declare-fun l38 () Int)
(declare-fun sc38A () Int)
(declare-fun sc38B () Int)
(declare-fun sc38C () Int)
(declare-fun sc38D () Int)
(declare-fun sc38E () Int)
(declare-fun sc38F () Int)
(declare-fun var39A () String)
(declare-fun var39B () String)
(declare-fun var39C () String)
(declare-fun var39D () String)
(declare-fun var39E () String)
(declare-fun var39F () String)
(declare-fun unch239A () String)
(declare-fun ch39A () String)
(declare-fun unch139A () String)
(declare-fun stem39 () String)
(declare-fun unch239B () String)
(declare-fun ch39B () String)
(declare-fun unch139B () String)
(declare-fun unch239C () String)
(declare-fun ch39C () String)
(declare-fun unch139C () String)
(declare-fun unch239D () String)
(declare-fun ch39D () String)
(declare-fun unch139D () String)
(declare-fun unch239E () String)
(declare-fun ch39E () String)
(declare-fun unch139E () String)
(declare-fun unch239F () String)
(declare-fun ch39F () String)
(declare-fun unch139F () String)
(declare-fun l39 () Int)
(declare-fun sc39A () Int)
(declare-fun sc39B () Int)
(declare-fun sc39C () Int)
(declare-fun sc39D () Int)
(declare-fun sc39E () Int)
(declare-fun sc39F () Int)
(declare-fun var40A () String)
(declare-fun var40B () String)
(declare-fun var40C () String)
(declare-fun var40D () String)
(declare-fun var40E () String)
(declare-fun var40F () String)
(declare-fun unch240A () String)
(declare-fun ch40A () String)
(declare-fun unch140A () String)
(declare-fun stem40 () String)
(declare-fun unch240B () String)
(declare-fun ch40B () String)
(declare-fun unch140B () String)
(declare-fun unch240C () String)
(declare-fun ch40C () String)
(declare-fun unch140C () String)
(declare-fun unch240D () String)
(declare-fun ch40D () String)
(declare-fun unch140D () String)
(declare-fun unch240E () String)
(declare-fun ch40E () String)
(declare-fun unch140E () String)
(declare-fun unch240F () String)
(declare-fun ch40F () String)
(declare-fun unch140F () String)
(declare-fun l40 () Int)
(declare-fun sc40A () Int)
(declare-fun sc40B () Int)
(declare-fun sc40C () Int)
(declare-fun sc40D () Int)
(declare-fun sc40E () Int)
(declare-fun sc40F () Int)
(declare-fun var41A () String)
(declare-fun var41B () String)
(declare-fun var41C () String)
(declare-fun var41D () String)
(declare-fun var41E () String)
(declare-fun var41F () String)
(declare-fun unch241A () String)
(declare-fun ch41A () String)
(declare-fun unch141A () String)
(declare-fun stem41 () String)
(declare-fun unch241B () String)
(declare-fun ch41B () String)
(declare-fun unch141B () String)
(declare-fun unch241C () String)
(declare-fun ch41C () String)
(declare-fun unch141C () String)
(declare-fun unch241D () String)
(declare-fun ch41D () String)
(declare-fun unch141D () String)
(declare-fun unch241E () String)
(declare-fun ch41E () String)
(declare-fun unch141E () String)
(declare-fun unch241F () String)
(declare-fun ch41F () String)
(declare-fun unch141F () String)
(declare-fun l41 () Int)
(declare-fun sc41A () Int)
(declare-fun sc41B () Int)
(declare-fun sc41C () Int)
(declare-fun sc41D () Int)
(declare-fun sc41E () Int)
(declare-fun sc41F () Int)
(declare-fun var42A () String)
(declare-fun var42B () String)
(declare-fun var42C () String)
(declare-fun var42D () String)
(declare-fun var42E () String)
(declare-fun var42F () String)
(declare-fun unch242A () String)
(declare-fun ch42A () String)
(declare-fun unch142A () String)
(declare-fun stem42 () String)
(declare-fun unch242B () String)
(declare-fun ch42B () String)
(declare-fun unch142B () String)
(declare-fun unch242C () String)
(declare-fun ch42C () String)
(declare-fun unch142C () String)
(declare-fun unch242D () String)
(declare-fun ch42D () String)
(declare-fun unch142D () String)
(declare-fun unch242E () String)
(declare-fun ch42E () String)
(declare-fun unch142E () String)
(declare-fun unch242F () String)
(declare-fun ch42F () String)
(declare-fun unch142F () String)
(declare-fun l42 () Int)
(declare-fun sc42A () Int)
(declare-fun sc42B () Int)
(declare-fun sc42C () Int)
(declare-fun sc42D () Int)
(declare-fun sc42E () Int)
(declare-fun sc42F () Int)
(declare-fun var43A () String)
(declare-fun var43B () String)
(declare-fun var43C () String)
(declare-fun var43D () String)
(declare-fun var43E () String)
(declare-fun var43F () String)
(declare-fun unch243A () String)
(declare-fun ch43A () String)
(declare-fun unch143A () String)
(declare-fun stem43 () String)
(declare-fun unch243B () String)
(declare-fun ch43B () String)
(declare-fun unch143B () String)
(declare-fun unch243C () String)
(declare-fun ch43C () String)
(declare-fun unch143C () String)
(declare-fun unch243D () String)
(declare-fun ch43D () String)
(declare-fun unch143D () String)
(declare-fun unch243E () String)
(declare-fun ch43E () String)
(declare-fun unch143E () String)
(declare-fun unch243F () String)
(declare-fun ch43F () String)
(declare-fun unch143F () String)
(declare-fun l43 () Int)
(declare-fun sc43A () Int)
(declare-fun sc43B () Int)
(declare-fun sc43C () Int)
(declare-fun sc43D () Int)
(declare-fun sc43E () Int)
(declare-fun sc43F () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= "daar" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "daarta" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "daaro" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= "gees" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "geesta" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "geeso" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= "laf" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "lafta" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "lafo" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= "lug" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "lugta" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "luOo" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= "naag" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "naagta" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "naaOo" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= "tib" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "tibta" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "tiXo" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= "sab" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "sabta" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "saXo" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= "bad" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "bada" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "baZo" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= "Bid" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "Bida" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "BiZo" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= "fee1" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "fee1a" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "fee2o" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= "3iir" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "3iirta" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "3iiro" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= "4ul" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "4uBa" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "4ulo" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= "bil" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "biBa" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "bilo" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= "meel" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "meeBa" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "meelo" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= "kaliil" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "kaliiBa" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "kaliilo" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= "najl" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "najBa" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "najlo" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= "sun" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "sunta" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "sumo" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= "laan" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "laanta" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "laamo" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= "sin" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "sinta" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "simo" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= "dan" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "danta" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "dano" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= "daan" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "daanta" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "daano" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= "saan" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "saanta" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "saano" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= "nirig" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "nirigta" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "nirgo" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= "gaXa1" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= "gaXa1a" (str.++ unch123B (str.++ var23B unch223B))))
(assert (= "gab1o" (str.++ unch123C (str.++ var23C unch223C))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= "hoOol" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= "hoOoBa" (str.++ unch124B (str.++ var24B unch224B))))
(assert (= "hoglo" (str.++ unch124C (str.++ var24C unch224C))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= "baOal" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= "baOaBa" (str.++ unch125B (str.++ var25B unch225B))))
(assert (= "baglo" (str.++ unch125C (str.++ var25C unch225C))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= "wa5ar" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= "wa5arta" (str.++ unch126B (str.++ var26B unch226B))))
(assert (= "wa5aro" (str.++ unch126C (str.++ var26C unch226C))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= "irbad" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= "irbada" (str.++ unch127B (str.++ var27B unch227B))))
(assert (= "irbaZo" (str.++ unch127C (str.++ var27C unch227C))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= "kefed" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= "kefeda" (str.++ unch128B (str.++ var28B unch228B))))
(assert (= "kefeZo" (str.++ unch128C (str.++ var28C unch228C))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= "Bilin" (str.++ unch129A (str.++ var29A unch229A))))
(assert (= "Bilinta" (str.++ unch129B (str.++ var29B unch229B))))
(assert (= "Bilino" (str.++ unch129C (str.++ var29C unch229C))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= (str.len var30A) 1))
(assert (<= (str.len var30B) 1))
(assert (<= (str.len var30C) 1))
(assert (<= (str.len var30D) 1))
(assert (<= (str.len var30E) 1))
(assert (<= (str.len var30F) 1))
(assert (= (str.++ preA (str.++ stem30 sufA)) (str.++ unch130A (str.++ ch30A unch230A))))
(assert (= (str.++ preB (str.++ stem30 sufB)) (str.++ unch130B (str.++ ch30B unch230B))))
(assert (= (str.++ preC (str.++ stem30 sufC)) (str.++ unch130C (str.++ ch30C unch230C))))
(assert (= (str.++ preD (str.++ stem30 sufD)) (str.++ unch130D (str.++ ch30D unch230D))))
(assert (= (str.++ preE (str.++ stem30 sufE)) (str.++ unch130E (str.++ ch30E unch230E))))
(assert (= (str.++ preF (str.++ stem30 sufF)) (str.++ unch130F (str.++ ch30F unch230F))))
(assert (= "bohol" (str.++ unch130A (str.++ var30A unch230A))))
(assert (= "bohoBa" (str.++ unch130B (str.++ var30B unch230B))))
(assert (= "boholo" (str.++ unch130C (str.++ var30C unch230C))))
(assert (= (str.len stem30) l30))
(assert (= (ite (= ch30A var30A) 0 1) sc30A))
(assert (= (ite (= ch30B var30B) 0 1) sc30B))
(assert (= (ite (= ch30C var30C) 0 1) sc30C))
(assert (= (ite (= ch30D var30D) 0 1) sc30D))
(assert (= (ite (= ch30E var30E) 0 1) sc30E))
(assert (= (ite (= ch30F var30F) 0 1) sc30F))
(assert (<= sc30A 1))
(assert (<= sc30B 1))
(assert (<= sc30C 1))
(assert (<= sc30D 1))
(assert (<= sc30E 1))
(assert (<= sc30F 1))
(assert (<= (str.len var31A) 1))
(assert (<= (str.len var31B) 1))
(assert (<= (str.len var31C) 1))
(assert (<= (str.len var31D) 1))
(assert (<= (str.len var31E) 1))
(assert (<= (str.len var31F) 1))
(assert (= (str.++ preA (str.++ stem31 sufA)) (str.++ unch131A (str.++ ch31A unch231A))))
(assert (= (str.++ preB (str.++ stem31 sufB)) (str.++ unch131B (str.++ ch31B unch231B))))
(assert (= (str.++ preC (str.++ stem31 sufC)) (str.++ unch131C (str.++ ch31C unch231C))))
(assert (= (str.++ preD (str.++ stem31 sufD)) (str.++ unch131D (str.++ ch31D unch231D))))
(assert (= (str.++ preE (str.++ stem31 sufE)) (str.++ unch131E (str.++ ch31E unch231E))))
(assert (= (str.++ preF (str.++ stem31 sufF)) (str.++ unch131F (str.++ ch31F unch231F))))
(assert (= "4aajad" (str.++ unch131A (str.++ var31A unch231A))))
(assert (= "4aajada" (str.++ unch131B (str.++ var31B unch231B))))
(assert (= "4aajaZo" (str.++ unch131C (str.++ var31C unch231C))))
(assert (= (str.len stem31) l31))
(assert (= (ite (= ch31A var31A) 0 1) sc31A))
(assert (= (ite (= ch31B var31B) 0 1) sc31B))
(assert (= (ite (= ch31C var31C) 0 1) sc31C))
(assert (= (ite (= ch31D var31D) 0 1) sc31D))
(assert (= (ite (= ch31E var31E) 0 1) sc31E))
(assert (= (ite (= ch31F var31F) 0 1) sc31F))
(assert (<= sc31A 1))
(assert (<= sc31B 1))
(assert (<= sc31C 1))
(assert (<= sc31D 1))
(assert (<= sc31E 1))
(assert (<= sc31F 1))
(assert (<= (str.len var32A) 1))
(assert (<= (str.len var32B) 1))
(assert (<= (str.len var32C) 1))
(assert (<= (str.len var32D) 1))
(assert (<= (str.len var32E) 1))
(assert (<= (str.len var32F) 1))
(assert (= (str.++ preA (str.++ stem32 sufA)) (str.++ unch132A (str.++ ch32A unch232A))))
(assert (= (str.++ preB (str.++ stem32 sufB)) (str.++ unch132B (str.++ ch32B unch232B))))
(assert (= (str.++ preC (str.++ stem32 sufC)) (str.++ unch132C (str.++ ch32C unch232C))))
(assert (= (str.++ preD (str.++ stem32 sufD)) (str.++ unch132D (str.++ ch32D unch232D))))
(assert (= (str.++ preE (str.++ stem32 sufE)) (str.++ unch132E (str.++ ch32E unch232E))))
(assert (= (str.++ preF (str.++ stem32 sufF)) (str.++ unch132F (str.++ ch32F unch232F))))
(assert (= "ga3an" (str.++ unch132A (str.++ var32A unch232A))))
(assert (= "ga3anta" (str.++ unch132B (str.++ var32B unch232B))))
(assert (= "ga3mo" (str.++ unch132C (str.++ var32C unch232C))))
(assert (= (str.len stem32) l32))
(assert (= (ite (= ch32A var32A) 0 1) sc32A))
(assert (= (ite (= ch32B var32B) 0 1) sc32B))
(assert (= (ite (= ch32C var32C) 0 1) sc32C))
(assert (= (ite (= ch32D var32D) 0 1) sc32D))
(assert (= (ite (= ch32E var32E) 0 1) sc32E))
(assert (= (ite (= ch32F var32F) 0 1) sc32F))
(assert (<= sc32A 1))
(assert (<= sc32B 1))
(assert (<= sc32C 1))
(assert (<= sc32D 1))
(assert (<= sc32E 1))
(assert (<= sc32F 1))
(assert (<= (str.len var33A) 1))
(assert (<= (str.len var33B) 1))
(assert (<= (str.len var33C) 1))
(assert (<= (str.len var33D) 1))
(assert (<= (str.len var33E) 1))
(assert (<= (str.len var33F) 1))
(assert (= (str.++ preA (str.++ stem33 sufA)) (str.++ unch133A (str.++ ch33A unch233A))))
(assert (= (str.++ preB (str.++ stem33 sufB)) (str.++ unch133B (str.++ ch33B unch233B))))
(assert (= (str.++ preC (str.++ stem33 sufC)) (str.++ unch133C (str.++ ch33C unch233C))))
(assert (= (str.++ preD (str.++ stem33 sufD)) (str.++ unch133D (str.++ ch33D unch233D))))
(assert (= (str.++ preE (str.++ stem33 sufE)) (str.++ unch133E (str.++ ch33E unch233E))))
(assert (= (str.++ preF (str.++ stem33 sufF)) (str.++ unch133F (str.++ ch33F unch233F))))
(assert (= "4inan" (str.++ unch133A (str.++ var33A unch233A))))
(assert (= "4inanta" (str.++ unch133B (str.++ var33B unch233B))))
(assert (= "4inano" (str.++ unch133C (str.++ var33C unch233C))))
(assert (= (str.len stem33) l33))
(assert (= (ite (= ch33A var33A) 0 1) sc33A))
(assert (= (ite (= ch33B var33B) 0 1) sc33B))
(assert (= (ite (= ch33C var33C) 0 1) sc33C))
(assert (= (ite (= ch33D var33D) 0 1) sc33D))
(assert (= (ite (= ch33E var33E) 0 1) sc33E))
(assert (= (ite (= ch33F var33F) 0 1) sc33F))
(assert (<= sc33A 1))
(assert (<= sc33B 1))
(assert (<= sc33C 1))
(assert (<= sc33D 1))
(assert (<= sc33E 1))
(assert (<= sc33F 1))
(assert (<= (str.len var34A) 1))
(assert (<= (str.len var34B) 1))
(assert (<= (str.len var34C) 1))
(assert (<= (str.len var34D) 1))
(assert (<= (str.len var34E) 1))
(assert (<= (str.len var34F) 1))
(assert (= (str.++ preA (str.++ stem34 sufA)) (str.++ unch134A (str.++ ch34A unch234A))))
(assert (= (str.++ preB (str.++ stem34 sufB)) (str.++ unch134B (str.++ ch34B unch234B))))
(assert (= (str.++ preC (str.++ stem34 sufC)) (str.++ unch134C (str.++ ch34C unch234C))))
(assert (= (str.++ preD (str.++ stem34 sufD)) (str.++ unch134D (str.++ ch34D unch234D))))
(assert (= (str.++ preE (str.++ stem34 sufE)) (str.++ unch134E (str.++ ch34E unch234E))))
(assert (= (str.++ preF (str.++ stem34 sufF)) (str.++ unch134F (str.++ ch34F unch234F))))
(assert (= "suOaj" (str.++ unch134D (str.++ var34D unch234D))))
(assert (= "sugtaj" (str.++ unch134E (str.++ var34E unch234E))))
(assert (= "sugnaj" (str.++ unch134F (str.++ var34F unch234F))))
(assert (= (str.len stem34) l34))
(assert (= (ite (= ch34A var34A) 0 1) sc34A))
(assert (= (ite (= ch34B var34B) 0 1) sc34B))
(assert (= (ite (= ch34C var34C) 0 1) sc34C))
(assert (= (ite (= ch34D var34D) 0 1) sc34D))
(assert (= (ite (= ch34E var34E) 0 1) sc34E))
(assert (= (ite (= ch34F var34F) 0 1) sc34F))
(assert (<= sc34A 1))
(assert (<= sc34B 1))
(assert (<= sc34C 1))
(assert (<= sc34D 1))
(assert (<= sc34E 1))
(assert (<= sc34F 1))
(assert (<= (str.len var35A) 1))
(assert (<= (str.len var35B) 1))
(assert (<= (str.len var35C) 1))
(assert (<= (str.len var35D) 1))
(assert (<= (str.len var35E) 1))
(assert (<= (str.len var35F) 1))
(assert (= (str.++ preA (str.++ stem35 sufA)) (str.++ unch135A (str.++ ch35A unch235A))))
(assert (= (str.++ preB (str.++ stem35 sufB)) (str.++ unch135B (str.++ ch35B unch235B))))
(assert (= (str.++ preC (str.++ stem35 sufC)) (str.++ unch135C (str.++ ch35C unch235C))))
(assert (= (str.++ preD (str.++ stem35 sufD)) (str.++ unch135D (str.++ ch35D unch235D))))
(assert (= (str.++ preE (str.++ stem35 sufE)) (str.++ unch135E (str.++ ch35E unch235E))))
(assert (= (str.++ preF (str.++ stem35 sufF)) (str.++ unch135F (str.++ ch35F unch235F))))
(assert (= "kaXaj" (str.++ unch135D (str.++ var35D unch235D))))
(assert (= "kabtaj" (str.++ unch135E (str.++ var35E unch235E))))
(assert (= "kabnaj" (str.++ unch135F (str.++ var35F unch235F))))
(assert (= (str.len stem35) l35))
(assert (= (ite (= ch35A var35A) 0 1) sc35A))
(assert (= (ite (= ch35B var35B) 0 1) sc35B))
(assert (= (ite (= ch35C var35C) 0 1) sc35C))
(assert (= (ite (= ch35D var35D) 0 1) sc35D))
(assert (= (ite (= ch35E var35E) 0 1) sc35E))
(assert (= (ite (= ch35F var35F) 0 1) sc35F))
(assert (<= sc35A 1))
(assert (<= sc35B 1))
(assert (<= sc35C 1))
(assert (<= sc35D 1))
(assert (<= sc35E 1))
(assert (<= sc35F 1))
(assert (<= (str.len var36A) 1))
(assert (<= (str.len var36B) 1))
(assert (<= (str.len var36C) 1))
(assert (<= (str.len var36D) 1))
(assert (<= (str.len var36E) 1))
(assert (<= (str.len var36F) 1))
(assert (= (str.++ preA (str.++ stem36 sufA)) (str.++ unch136A (str.++ ch36A unch236A))))
(assert (= (str.++ preB (str.++ stem36 sufB)) (str.++ unch136B (str.++ ch36B unch236B))))
(assert (= (str.++ preC (str.++ stem36 sufC)) (str.++ unch136C (str.++ ch36C unch236C))))
(assert (= (str.++ preD (str.++ stem36 sufD)) (str.++ unch136D (str.++ ch36D unch236D))))
(assert (= (str.++ preE (str.++ stem36 sufE)) (str.++ unch136E (str.++ ch36E unch236E))))
(assert (= (str.++ preF (str.++ stem36 sufF)) (str.++ unch136F (str.++ ch36F unch236F))))
(assert (= "siZaj" (str.++ unch136D (str.++ var36D unch236D))))
(assert (= "sidaj" (str.++ unch136E (str.++ var36E unch236E))))
(assert (= "sidnaj" (str.++ unch136F (str.++ var36F unch236F))))
(assert (= (str.len stem36) l36))
(assert (= (ite (= ch36A var36A) 0 1) sc36A))
(assert (= (ite (= ch36B var36B) 0 1) sc36B))
(assert (= (ite (= ch36C var36C) 0 1) sc36C))
(assert (= (ite (= ch36D var36D) 0 1) sc36D))
(assert (= (ite (= ch36E var36E) 0 1) sc36E))
(assert (= (ite (= ch36F var36F) 0 1) sc36F))
(assert (<= sc36A 1))
(assert (<= sc36B 1))
(assert (<= sc36C 1))
(assert (<= sc36D 1))
(assert (<= sc36E 1))
(assert (<= sc36F 1))
(assert (<= (str.len var37A) 1))
(assert (<= (str.len var37B) 1))
(assert (<= (str.len var37C) 1))
(assert (<= (str.len var37D) 1))
(assert (<= (str.len var37E) 1))
(assert (<= (str.len var37F) 1))
(assert (= (str.++ preA (str.++ stem37 sufA)) (str.++ unch137A (str.++ ch37A unch237A))))
(assert (= (str.++ preB (str.++ stem37 sufB)) (str.++ unch137B (str.++ ch37B unch237B))))
(assert (= (str.++ preC (str.++ stem37 sufC)) (str.++ unch137C (str.++ ch37C unch237C))))
(assert (= (str.++ preD (str.++ stem37 sufD)) (str.++ unch137D (str.++ ch37D unch237D))))
(assert (= (str.++ preE (str.++ stem37 sufE)) (str.++ unch137E (str.++ ch37E unch237E))))
(assert (= (str.++ preF (str.++ stem37 sufF)) (str.++ unch137F (str.++ ch37F unch237F))))
(assert (= "dilaj" (str.++ unch137D (str.++ var37D unch237D))))
(assert (= "diBaj" (str.++ unch137E (str.++ var37E unch237E))))
(assert (= "dillaj" (str.++ unch137F (str.++ var37F unch237F))))
(assert (= (str.len stem37) l37))
(assert (= (ite (= ch37A var37A) 0 1) sc37A))
(assert (= (ite (= ch37B var37B) 0 1) sc37B))
(assert (= (ite (= ch37C var37C) 0 1) sc37C))
(assert (= (ite (= ch37D var37D) 0 1) sc37D))
(assert (= (ite (= ch37E var37E) 0 1) sc37E))
(assert (= (ite (= ch37F var37F) 0 1) sc37F))
(assert (<= sc37A 1))
(assert (<= sc37B 1))
(assert (<= sc37C 1))
(assert (<= sc37D 1))
(assert (<= sc37E 1))
(assert (<= sc37F 1))
(assert (<= (str.len var38A) 1))
(assert (<= (str.len var38B) 1))
(assert (<= (str.len var38C) 1))
(assert (<= (str.len var38D) 1))
(assert (<= (str.len var38E) 1))
(assert (<= (str.len var38F) 1))
(assert (= (str.++ preA (str.++ stem38 sufA)) (str.++ unch138A (str.++ ch38A unch238A))))
(assert (= (str.++ preB (str.++ stem38 sufB)) (str.++ unch138B (str.++ ch38B unch238B))))
(assert (= (str.++ preC (str.++ stem38 sufC)) (str.++ unch138C (str.++ ch38C unch238C))))
(assert (= (str.++ preD (str.++ stem38 sufD)) (str.++ unch138D (str.++ ch38D unch238D))))
(assert (= (str.++ preE (str.++ stem38 sufE)) (str.++ unch138E (str.++ ch38E unch238E))))
(assert (= (str.++ preF (str.++ stem38 sufF)) (str.++ unch138F (str.++ ch38F unch238F))))
(assert (= "ganaj" (str.++ unch138D (str.++ var38D unch238D))))
(assert (= "gantaj" (str.++ unch138E (str.++ var38E unch238E))))
(assert (= "gannaj" (str.++ unch138F (str.++ var38F unch238F))))
(assert (= (str.len stem38) l38))
(assert (= (ite (= ch38A var38A) 0 1) sc38A))
(assert (= (ite (= ch38B var38B) 0 1) sc38B))
(assert (= (ite (= ch38C var38C) 0 1) sc38C))
(assert (= (ite (= ch38D var38D) 0 1) sc38D))
(assert (= (ite (= ch38E var38E) 0 1) sc38E))
(assert (= (ite (= ch38F var38F) 0 1) sc38F))
(assert (<= sc38A 1))
(assert (<= sc38B 1))
(assert (<= sc38C 1))
(assert (<= sc38D 1))
(assert (<= sc38E 1))
(assert (<= sc38F 1))
(assert (<= (str.len var39A) 1))
(assert (<= (str.len var39B) 1))
(assert (<= (str.len var39C) 1))
(assert (<= (str.len var39D) 1))
(assert (<= (str.len var39E) 1))
(assert (<= (str.len var39F) 1))
(assert (= (str.++ preA (str.++ stem39 sufA)) (str.++ unch139A (str.++ ch39A unch239A))))
(assert (= (str.++ preB (str.++ stem39 sufB)) (str.++ unch139B (str.++ ch39B unch239B))))
(assert (= (str.++ preC (str.++ stem39 sufC)) (str.++ unch139C (str.++ ch39C unch239C))))
(assert (= (str.++ preD (str.++ stem39 sufD)) (str.++ unch139D (str.++ ch39D unch239D))))
(assert (= (str.++ preE (str.++ stem39 sufE)) (str.++ unch139E (str.++ ch39E unch239E))))
(assert (= (str.++ preF (str.++ stem39 sufF)) (str.++ unch139F (str.++ ch39F unch239F))))
(assert (= "tumaj" (str.++ unch139D (str.++ var39D unch239D))))
(assert (= "tuntaj" (str.++ unch139E (str.++ var39E unch239E))))
(assert (= "tunnaj" (str.++ unch139F (str.++ var39F unch239F))))
(assert (= (str.len stem39) l39))
(assert (= (ite (= ch39A var39A) 0 1) sc39A))
(assert (= (ite (= ch39B var39B) 0 1) sc39B))
(assert (= (ite (= ch39C var39C) 0 1) sc39C))
(assert (= (ite (= ch39D var39D) 0 1) sc39D))
(assert (= (ite (= ch39E var39E) 0 1) sc39E))
(assert (= (ite (= ch39F var39F) 0 1) sc39F))
(assert (<= sc39A 1))
(assert (<= sc39B 1))
(assert (<= sc39C 1))
(assert (<= sc39D 1))
(assert (<= sc39E 1))
(assert (<= sc39F 1))
(assert (<= (str.len var40A) 1))
(assert (<= (str.len var40B) 1))
(assert (<= (str.len var40C) 1))
(assert (<= (str.len var40D) 1))
(assert (<= (str.len var40E) 1))
(assert (<= (str.len var40F) 1))
(assert (= (str.++ preA (str.++ stem40 sufA)) (str.++ unch140A (str.++ ch40A unch240A))))
(assert (= (str.++ preB (str.++ stem40 sufB)) (str.++ unch140B (str.++ ch40B unch240B))))
(assert (= (str.++ preC (str.++ stem40 sufC)) (str.++ unch140C (str.++ ch40C unch240C))))
(assert (= (str.++ preD (str.++ stem40 sufD)) (str.++ unch140D (str.++ ch40D unch240D))))
(assert (= (str.++ preE (str.++ stem40 sufE)) (str.++ unch140E (str.++ ch40E unch240E))))
(assert (= (str.++ preF (str.++ stem40 sufF)) (str.++ unch140F (str.++ ch40F unch240F))))
(assert (= "argaj" (str.++ unch140D (str.++ var40D unch240D))))
(assert (= "aragtaj" (str.++ unch140E (str.++ var40E unch240E))))
(assert (= "aragnaj" (str.++ unch140F (str.++ var40F unch240F))))
(assert (= (str.len stem40) l40))
(assert (= (ite (= ch40A var40A) 0 1) sc40A))
(assert (= (ite (= ch40B var40B) 0 1) sc40B))
(assert (= (ite (= ch40C var40C) 0 1) sc40C))
(assert (= (ite (= ch40D var40D) 0 1) sc40D))
(assert (= (ite (= ch40E var40E) 0 1) sc40E))
(assert (= (ite (= ch40F var40F) 0 1) sc40F))
(assert (<= sc40A 1))
(assert (<= sc40B 1))
(assert (<= sc40C 1))
(assert (<= sc40D 1))
(assert (<= sc40E 1))
(assert (<= sc40F 1))
(assert (<= (str.len var41A) 1))
(assert (<= (str.len var41B) 1))
(assert (<= (str.len var41C) 1))
(assert (<= (str.len var41D) 1))
(assert (<= (str.len var41E) 1))
(assert (<= (str.len var41F) 1))
(assert (= (str.++ preA (str.++ stem41 sufA)) (str.++ unch141A (str.++ ch41A unch241A))))
(assert (= (str.++ preB (str.++ stem41 sufB)) (str.++ unch141B (str.++ ch41B unch241B))))
(assert (= (str.++ preC (str.++ stem41 sufC)) (str.++ unch141C (str.++ ch41C unch241C))))
(assert (= (str.++ preD (str.++ stem41 sufD)) (str.++ unch141D (str.++ ch41D unch241D))))
(assert (= (str.++ preE (str.++ stem41 sufE)) (str.++ unch141E (str.++ ch41E unch241E))))
(assert (= (str.++ preF (str.++ stem41 sufF)) (str.++ unch141F (str.++ ch41F unch241F))))
(assert (= "gudbaj" (str.++ unch141D (str.++ var41D unch241D))))
(assert (= "guZubtaj" (str.++ unch141E (str.++ var41E unch241E))))
(assert (= "guZubnaj" (str.++ unch141F (str.++ var41F unch241F))))
(assert (= (str.len stem41) l41))
(assert (= (ite (= ch41A var41A) 0 1) sc41A))
(assert (= (ite (= ch41B var41B) 0 1) sc41B))
(assert (= (ite (= ch41C var41C) 0 1) sc41C))
(assert (= (ite (= ch41D var41D) 0 1) sc41D))
(assert (= (ite (= ch41E var41E) 0 1) sc41E))
(assert (= (ite (= ch41F var41F) 0 1) sc41F))
(assert (<= sc41A 1))
(assert (<= sc41B 1))
(assert (<= sc41C 1))
(assert (<= sc41D 1))
(assert (<= sc41E 1))
(assert (<= sc41F 1))
(assert (<= (str.len var42A) 1))
(assert (<= (str.len var42B) 1))
(assert (<= (str.len var42C) 1))
(assert (<= (str.len var42D) 1))
(assert (<= (str.len var42E) 1))
(assert (<= (str.len var42F) 1))
(assert (= (str.++ preA (str.++ stem42 sufA)) (str.++ unch142A (str.++ ch42A unch242A))))
(assert (= (str.++ preB (str.++ stem42 sufB)) (str.++ unch142B (str.++ ch42B unch242B))))
(assert (= (str.++ preC (str.++ stem42 sufC)) (str.++ unch142C (str.++ ch42C unch242C))))
(assert (= (str.++ preD (str.++ stem42 sufD)) (str.++ unch142D (str.++ ch42D unch242D))))
(assert (= (str.++ preE (str.++ stem42 sufE)) (str.++ unch142E (str.++ ch42E unch242E))))
(assert (= (str.++ preF (str.++ stem42 sufF)) (str.++ unch142F (str.++ ch42F unch242F))))
(assert (= "qoslaj" (str.++ unch142D (str.++ var42D unch242D))))
(assert (= "qosoBaj" (str.++ unch142E (str.++ var42E unch242E))))
(assert (= "qosollaj" (str.++ unch142F (str.++ var42F unch242F))))
(assert (= (str.len stem42) l42))
(assert (= (ite (= ch42A var42A) 0 1) sc42A))
(assert (= (ite (= ch42B var42B) 0 1) sc42B))
(assert (= (ite (= ch42C var42C) 0 1) sc42C))
(assert (= (ite (= ch42D var42D) 0 1) sc42D))
(assert (= (ite (= ch42E var42E) 0 1) sc42E))
(assert (= (ite (= ch42F var42F) 0 1) sc42F))
(assert (<= sc42A 1))
(assert (<= sc42B 1))
(assert (<= sc42C 1))
(assert (<= sc42D 1))
(assert (<= sc42E 1))
(assert (<= sc42F 1))
(assert (<= (str.len var43A) 1))
(assert (<= (str.len var43B) 1))
(assert (<= (str.len var43C) 1))
(assert (<= (str.len var43D) 1))
(assert (<= (str.len var43E) 1))
(assert (<= (str.len var43F) 1))
(assert (= (str.++ preA (str.++ stem43 sufA)) (str.++ unch143A (str.++ ch43A unch243A))))
(assert (= (str.++ preB (str.++ stem43 sufB)) (str.++ unch143B (str.++ ch43B unch243B))))
(assert (= (str.++ preC (str.++ stem43 sufC)) (str.++ unch143C (str.++ ch43C unch243C))))
(assert (= (str.++ preD (str.++ stem43 sufD)) (str.++ unch143D (str.++ ch43D unch243D))))
(assert (= (str.++ preE (str.++ stem43 sufE)) (str.++ unch143E (str.++ ch43E unch243E))))
(assert (= (str.++ preF (str.++ stem43 sufF)) (str.++ unch143F (str.++ ch43F unch243F))))
(assert (= "hadlaj" (str.++ unch143D (str.++ var43D unch243D))))
(assert (= "haZaBaj" (str.++ unch143E (str.++ var43E unch243E))))
(assert (= "haZallaj" (str.++ unch143F (str.++ var43F unch243F))))
(assert (= (str.len stem43) l43))
(assert (= (ite (= ch43A var43A) 0 1) sc43A))
(assert (= (ite (= ch43B var43B) 0 1) sc43B))
(assert (= (ite (= ch43C var43C) 0 1) sc43C))
(assert (= (ite (= ch43D var43D) 0 1) sc43D))
(assert (= (ite (= ch43E var43E) 0 1) sc43E))
(assert (= (ite (= ch43F var43F) 0 1) sc43F))
(assert (<= sc43A 1))
(assert (<= sc43B 1))
(assert (<= sc43C 1))
(assert (<= sc43D 1))
(assert (<= sc43E 1))
(assert (<= sc43F 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      0
      sc30A
      sc30B
      sc30C
      sc30D
      sc30E
      sc30F
      0
      sc31A
      sc31B
      sc31C
      sc31D
      sc31E
      sc31F
      0
      sc32A
      sc32B
      sc32C
      sc32D
      sc32E
      sc32F
      0
      sc33A
      sc33B
      sc33C
      sc33D
      sc33E
      sc33F
      0
      sc34A
      sc34B
      sc34C
      sc34D
      sc34E
      sc34F
      0
      sc35A
      sc35B
      sc35C
      sc35D
      sc35E
      sc35F
      0
      sc36A
      sc36B
      sc36C
      sc36D
      sc36E
      sc36F
      0
      sc37A
      sc37B
      sc37C
      sc37D
      sc37E
      sc37F
      0
      sc38A
      sc38B
      sc38C
      sc38D
      sc38E
      sc38F
      0
      sc39A
      sc39B
      sc39C
      sc39D
      sc39E
      sc39F
      0
      sc40A
      sc40B
      sc40C
      sc40D
      sc40E
      sc40F
      0
      sc41A
      sc41B
      sc41C
      sc41D
      sc41E
      sc41F
      0
      sc42A
      sc42B
      sc42C
      sc42D
      sc42E
      sc42F
      0
      sc43A
      sc43B
      sc43C
      sc43D
      sc43E
      sc43F)
   6))
(assert (= (+ 0
      sc0B
      sc1B
      sc2B
      sc3B
      sc4B
      sc5B
      sc6B
      sc7B
      sc8B
      sc9B
      sc10B
      sc11B
      sc12B
      sc13B
      sc14B
      sc15B
      sc16B
      sc17B
      sc18B
      sc19B
      sc20B
      sc21B
      sc22B
      sc23B
      sc24B
      sc25B
      sc26B
      sc27B
      sc28B
      sc29B
      sc30B
      sc31B
      sc32B
      sc33B
      sc34B
      sc35B
      sc36B
      sc37B
      sc38B
      sc39B
      sc40B
      sc41B
      sc42B
      sc43B)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun var30A () String)
(declare-fun var30B () String)
(declare-fun var30C () String)
(declare-fun var30D () String)
(declare-fun var30E () String)
(declare-fun var30F () String)
(declare-fun unch230A () String)
(declare-fun ch30A () String)
(declare-fun unch130A () String)
(declare-fun stem30 () String)
(declare-fun unch230B () String)
(declare-fun ch30B () String)
(declare-fun unch130B () String)
(declare-fun unch230C () String)
(declare-fun ch30C () String)
(declare-fun unch130C () String)
(declare-fun unch230D () String)
(declare-fun ch30D () String)
(declare-fun unch130D () String)
(declare-fun unch230E () String)
(declare-fun ch30E () String)
(declare-fun unch130E () String)
(declare-fun unch230F () String)
(declare-fun ch30F () String)
(declare-fun unch130F () String)
(declare-fun l30 () Int)
(declare-fun sc30A () Int)
(declare-fun sc30B () Int)
(declare-fun sc30C () Int)
(declare-fun sc30D () Int)
(declare-fun sc30E () Int)
(declare-fun sc30F () Int)
(declare-fun var31A () String)
(declare-fun var31B () String)
(declare-fun var31C () String)
(declare-fun var31D () String)
(declare-fun var31E () String)
(declare-fun var31F () String)
(declare-fun unch231A () String)
(declare-fun ch31A () String)
(declare-fun unch131A () String)
(declare-fun stem31 () String)
(declare-fun unch231B () String)
(declare-fun ch31B () String)
(declare-fun unch131B () String)
(declare-fun unch231C () String)
(declare-fun ch31C () String)
(declare-fun unch131C () String)
(declare-fun unch231D () String)
(declare-fun ch31D () String)
(declare-fun unch131D () String)
(declare-fun unch231E () String)
(declare-fun ch31E () String)
(declare-fun unch131E () String)
(declare-fun unch231F () String)
(declare-fun ch31F () String)
(declare-fun unch131F () String)
(declare-fun l31 () Int)
(declare-fun sc31A () Int)
(declare-fun sc31B () Int)
(declare-fun sc31C () Int)
(declare-fun sc31D () Int)
(declare-fun sc31E () Int)
(declare-fun sc31F () Int)
(declare-fun var32A () String)
(declare-fun var32B () String)
(declare-fun var32C () String)
(declare-fun var32D () String)
(declare-fun var32E () String)
(declare-fun var32F () String)
(declare-fun unch232A () String)
(declare-fun ch32A () String)
(declare-fun unch132A () String)
(declare-fun stem32 () String)
(declare-fun unch232B () String)
(declare-fun ch32B () String)
(declare-fun unch132B () String)
(declare-fun unch232C () String)
(declare-fun ch32C () String)
(declare-fun unch132C () String)
(declare-fun unch232D () String)
(declare-fun ch32D () String)
(declare-fun unch132D () String)
(declare-fun unch232E () String)
(declare-fun ch32E () String)
(declare-fun unch132E () String)
(declare-fun unch232F () String)
(declare-fun ch32F () String)
(declare-fun unch132F () String)
(declare-fun l32 () Int)
(declare-fun sc32A () Int)
(declare-fun sc32B () Int)
(declare-fun sc32C () Int)
(declare-fun sc32D () Int)
(declare-fun sc32E () Int)
(declare-fun sc32F () Int)
(declare-fun var33A () String)
(declare-fun var33B () String)
(declare-fun var33C () String)
(declare-fun var33D () String)
(declare-fun var33E () String)
(declare-fun var33F () String)
(declare-fun unch233A () String)
(declare-fun ch33A () String)
(declare-fun unch133A () String)
(declare-fun stem33 () String)
(declare-fun unch233B () String)
(declare-fun ch33B () String)
(declare-fun unch133B () String)
(declare-fun unch233C () String)
(declare-fun ch33C () String)
(declare-fun unch133C () String)
(declare-fun unch233D () String)
(declare-fun ch33D () String)
(declare-fun unch133D () String)
(declare-fun unch233E () String)
(declare-fun ch33E () String)
(declare-fun unch133E () String)
(declare-fun unch233F () String)
(declare-fun ch33F () String)
(declare-fun unch133F () String)
(declare-fun l33 () Int)
(declare-fun sc33A () Int)
(declare-fun sc33B () Int)
(declare-fun sc33C () Int)
(declare-fun sc33D () Int)
(declare-fun sc33E () Int)
(declare-fun sc33F () Int)
(declare-fun var34A () String)
(declare-fun var34B () String)
(declare-fun var34C () String)
(declare-fun var34D () String)
(declare-fun var34E () String)
(declare-fun var34F () String)
(declare-fun unch234A () String)
(declare-fun ch34A () String)
(declare-fun unch134A () String)
(declare-fun stem34 () String)
(declare-fun unch234B () String)
(declare-fun ch34B () String)
(declare-fun unch134B () String)
(declare-fun unch234C () String)
(declare-fun ch34C () String)
(declare-fun unch134C () String)
(declare-fun unch234D () String)
(declare-fun ch34D () String)
(declare-fun unch134D () String)
(declare-fun unch234E () String)
(declare-fun ch34E () String)
(declare-fun unch134E () String)
(declare-fun unch234F () String)
(declare-fun ch34F () String)
(declare-fun unch134F () String)
(declare-fun l34 () Int)
(declare-fun sc34A () Int)
(declare-fun sc34B () Int)
(declare-fun sc34C () Int)
(declare-fun sc34D () Int)
(declare-fun sc34E () Int)
(declare-fun sc34F () Int)
(declare-fun var35A () String)
(declare-fun var35B () String)
(declare-fun var35C () String)
(declare-fun var35D () String)
(declare-fun var35E () String)
(declare-fun var35F () String)
(declare-fun unch235A () String)
(declare-fun ch35A () String)
(declare-fun unch135A () String)
(declare-fun stem35 () String)
(declare-fun unch235B () String)
(declare-fun ch35B () String)
(declare-fun unch135B () String)
(declare-fun unch235C () String)
(declare-fun ch35C () String)
(declare-fun unch135C () String)
(declare-fun unch235D () String)
(declare-fun ch35D () String)
(declare-fun unch135D () String)
(declare-fun unch235E () String)
(declare-fun ch35E () String)
(declare-fun unch135E () String)
(declare-fun unch235F () String)
(declare-fun ch35F () String)
(declare-fun unch135F () String)
(declare-fun l35 () Int)
(declare-fun sc35A () Int)
(declare-fun sc35B () Int)
(declare-fun sc35C () Int)
(declare-fun sc35D () Int)
(declare-fun sc35E () Int)
(declare-fun sc35F () Int)
(declare-fun var36A () String)
(declare-fun var36B () String)
(declare-fun var36C () String)
(declare-fun var36D () String)
(declare-fun var36E () String)
(declare-fun var36F () String)
(declare-fun unch236A () String)
(declare-fun ch36A () String)
(declare-fun unch136A () String)
(declare-fun stem36 () String)
(declare-fun unch236B () String)
(declare-fun ch36B () String)
(declare-fun unch136B () String)
(declare-fun unch236C () String)
(declare-fun ch36C () String)
(declare-fun unch136C () String)
(declare-fun unch236D () String)
(declare-fun ch36D () String)
(declare-fun unch136D () String)
(declare-fun unch236E () String)
(declare-fun ch36E () String)
(declare-fun unch136E () String)
(declare-fun unch236F () String)
(declare-fun ch36F () String)
(declare-fun unch136F () String)
(declare-fun l36 () Int)
(declare-fun sc36A () Int)
(declare-fun sc36B () Int)
(declare-fun sc36C () Int)
(declare-fun sc36D () Int)
(declare-fun sc36E () Int)
(declare-fun sc36F () Int)
(declare-fun var37A () String)
(declare-fun var37B () String)
(declare-fun var37C () String)
(declare-fun var37D () String)
(declare-fun var37E () String)
(declare-fun var37F () String)
(declare-fun unch237A () String)
(declare-fun ch37A () String)
(declare-fun unch137A () String)
(declare-fun stem37 () String)
(declare-fun unch237B () String)
(declare-fun ch37B () String)
(declare-fun unch137B () String)
(declare-fun unch237C () String)
(declare-fun ch37C () String)
(declare-fun unch137C () String)
(declare-fun unch237D () String)
(declare-fun ch37D () String)
(declare-fun unch137D () String)
(declare-fun unch237E () String)
(declare-fun ch37E () String)
(declare-fun unch137E () String)
(declare-fun unch237F () String)
(declare-fun ch37F () String)
(declare-fun unch137F () String)
(declare-fun l37 () Int)
(declare-fun sc37A () Int)
(declare-fun sc37B () Int)
(declare-fun sc37C () Int)
(declare-fun sc37D () Int)
(declare-fun sc37E () Int)
(declare-fun sc37F () Int)
(declare-fun var38A () String)
(declare-fun var38B () String)
(declare-fun var38C () String)
(declare-fun var38D () String)
(declare-fun var38E () String)
(declare-fun var38F () String)
(declare-fun unch238A () String)
(declare-fun ch38A () String)
(declare-fun unch138A () String)
(declare-fun stem38 () String)
(declare-fun unch238B () String)
(declare-fun ch38B () String)
(declare-fun unch138B () String)
(declare-fun unch238C () String)
(declare-fun ch38C () String)
(declare-fun unch138C () String)
(declare-fun unch238D () String)
(declare-fun ch38D () String)
(declare-fun unch138D () String)
(declare-fun unch238E () String)
(declare-fun ch38E () String)
(declare-fun unch138E () String)
(declare-fun unch238F () String)
(declare-fun ch38F () String)
(declare-fun unch138F () String)
(declare-fun l38 () Int)
(declare-fun sc38A () Int)
(declare-fun sc38B () Int)
(declare-fun sc38C () Int)
(declare-fun sc38D () Int)
(declare-fun sc38E () Int)
(declare-fun sc38F () Int)
(declare-fun var39A () String)
(declare-fun var39B () String)
(declare-fun var39C () String)
(declare-fun var39D () String)
(declare-fun var39E () String)
(declare-fun var39F () String)
(declare-fun unch239A () String)
(declare-fun ch39A () String)
(declare-fun unch139A () String)
(declare-fun stem39 () String)
(declare-fun unch239B () String)
(declare-fun ch39B () String)
(declare-fun unch139B () String)
(declare-fun unch239C () String)
(declare-fun ch39C () String)
(declare-fun unch139C () String)
(declare-fun unch239D () String)
(declare-fun ch39D () String)
(declare-fun unch139D () String)
(declare-fun unch239E () String)
(declare-fun ch39E () String)
(declare-fun unch139E () String)
(declare-fun unch239F () String)
(declare-fun ch39F () String)
(declare-fun unch139F () String)
(declare-fun l39 () Int)
(declare-fun sc39A () Int)
(declare-fun sc39B () Int)
(declare-fun sc39C () Int)
(declare-fun sc39D () Int)
(declare-fun sc39E () Int)
(declare-fun sc39F () Int)
(declare-fun var40A () String)
(declare-fun var40B () String)
(declare-fun var40C () String)
(declare-fun var40D () String)
(declare-fun var40E () String)
(declare-fun var40F () String)
(declare-fun unch240A () String)
(declare-fun ch40A () String)
(declare-fun unch140A () String)
(declare-fun stem40 () String)
(declare-fun unch240B () String)
(declare-fun ch40B () String)
(declare-fun unch140B () String)
(declare-fun unch240C () String)
(declare-fun ch40C () String)
(declare-fun unch140C () String)
(declare-fun unch240D () String)
(declare-fun ch40D () String)
(declare-fun unch140D () String)
(declare-fun unch240E () String)
(declare-fun ch40E () String)
(declare-fun unch140E () String)
(declare-fun unch240F () String)
(declare-fun ch40F () String)
(declare-fun unch140F () String)
(declare-fun l40 () Int)
(declare-fun sc40A () Int)
(declare-fun sc40B () Int)
(declare-fun sc40C () Int)
(declare-fun sc40D () Int)
(declare-fun sc40E () Int)
(declare-fun sc40F () Int)
(declare-fun var41A () String)
(declare-fun var41B () String)
(declare-fun var41C () String)
(declare-fun var41D () String)
(declare-fun var41E () String)
(declare-fun var41F () String)
(declare-fun unch241A () String)
(declare-fun ch41A () String)
(declare-fun unch141A () String)
(declare-fun stem41 () String)
(declare-fun unch241B () String)
(declare-fun ch41B () String)
(declare-fun unch141B () String)
(declare-fun unch241C () String)
(declare-fun ch41C () String)
(declare-fun unch141C () String)
(declare-fun unch241D () String)
(declare-fun ch41D () String)
(declare-fun unch141D () String)
(declare-fun unch241E () String)
(declare-fun ch41E () String)
(declare-fun unch141E () String)
(declare-fun unch241F () String)
(declare-fun ch41F () String)
(declare-fun unch141F () String)
(declare-fun l41 () Int)
(declare-fun sc41A () Int)
(declare-fun sc41B () Int)
(declare-fun sc41C () Int)
(declare-fun sc41D () Int)
(declare-fun sc41E () Int)
(declare-fun sc41F () Int)
(declare-fun var42A () String)
(declare-fun var42B () String)
(declare-fun var42C () String)
(declare-fun var42D () String)
(declare-fun var42E () String)
(declare-fun var42F () String)
(declare-fun unch242A () String)
(declare-fun ch42A () String)
(declare-fun unch142A () String)
(declare-fun stem42 () String)
(declare-fun unch242B () String)
(declare-fun ch42B () String)
(declare-fun unch142B () String)
(declare-fun unch242C () String)
(declare-fun ch42C () String)
(declare-fun unch142C () String)
(declare-fun unch242D () String)
(declare-fun ch42D () String)
(declare-fun unch142D () String)
(declare-fun unch242E () String)
(declare-fun ch42E () String)
(declare-fun unch142E () String)
(declare-fun unch242F () String)
(declare-fun ch42F () String)
(declare-fun unch142F () String)
(declare-fun l42 () Int)
(declare-fun sc42A () Int)
(declare-fun sc42B () Int)
(declare-fun sc42C () Int)
(declare-fun sc42D () Int)
(declare-fun sc42E () Int)
(declare-fun sc42F () Int)
(declare-fun var43A () String)
(declare-fun var43B () String)
(declare-fun var43C () String)
(declare-fun var43D () String)
(declare-fun var43E () String)
(declare-fun var43F () String)
(declare-fun unch243A () String)
(declare-fun ch43A () String)
(declare-fun unch143A () String)
(declare-fun stem43 () String)
(declare-fun unch243B () String)
(declare-fun ch43B () String)
(declare-fun unch143B () String)
(declare-fun unch243C () String)
(declare-fun ch43C () String)
(declare-fun unch143C () String)
(declare-fun unch243D () String)
(declare-fun ch43D () String)
(declare-fun unch143D () String)
(declare-fun unch243E () String)
(declare-fun ch43E () String)
(declare-fun unch143E () String)
(declare-fun unch243F () String)
(declare-fun ch43F () String)
(declare-fun unch143F () String)
(declare-fun l43 () Int)
(declare-fun sc43A () Int)
(declare-fun sc43B () Int)
(declare-fun sc43C () Int)
(declare-fun sc43D () Int)
(declare-fun sc43E () Int)
(declare-fun sc43F () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= "daar" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "daarta" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "daaro" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= "gees" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "geesta" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "geeso" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= "laf" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "lafta" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "lafo" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= "lug" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "lugta" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "luOo" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= "naag" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "naagta" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "naaOo" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= "tib" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "tibta" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "tiXo" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= "sab" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "sabta" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "saXo" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= "bad" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "bada" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "baZo" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= "Bid" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "Bida" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "BiZo" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= "fee1" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "fee1a" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "fee2o" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= "3iir" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "3iirta" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "3iiro" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= "4ul" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "4uBa" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "4ulo" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= "bil" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "biBa" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "bilo" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= "meel" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "meeBa" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "meelo" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= "kaliil" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "kaliiBa" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "kaliilo" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= "najl" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "najBa" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "najlo" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= "sun" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "sunta" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "sumo" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= "laan" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "laanta" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "laamo" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= "sin" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "sinta" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "simo" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= "dan" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "danta" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "dano" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= "daan" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "daanta" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "daano" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= "saan" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "saanta" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "saano" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= "nirig" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "nirigta" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "nirgo" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= "gaXa1" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= "gaXa1a" (str.++ unch123B (str.++ var23B unch223B))))
(assert (= "gab1o" (str.++ unch123C (str.++ var23C unch223C))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= "hoOol" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= "hoOoBa" (str.++ unch124B (str.++ var24B unch224B))))
(assert (= "hoglo" (str.++ unch124C (str.++ var24C unch224C))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= "baOal" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= "baOaBa" (str.++ unch125B (str.++ var25B unch225B))))
(assert (= "baglo" (str.++ unch125C (str.++ var25C unch225C))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= "wa5ar" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= "wa5arta" (str.++ unch126B (str.++ var26B unch226B))))
(assert (= "wa5aro" (str.++ unch126C (str.++ var26C unch226C))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= "irbad" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= "irbada" (str.++ unch127B (str.++ var27B unch227B))))
(assert (= "irbaZo" (str.++ unch127C (str.++ var27C unch227C))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= "kefed" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= "kefeda" (str.++ unch128B (str.++ var28B unch228B))))
(assert (= "kefeZo" (str.++ unch128C (str.++ var28C unch228C))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= "Bilin" (str.++ unch129A (str.++ var29A unch229A))))
(assert (= "Bilinta" (str.++ unch129B (str.++ var29B unch229B))))
(assert (= "Bilino" (str.++ unch129C (str.++ var29C unch229C))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= (str.len var30A) 1))
(assert (<= (str.len var30B) 1))
(assert (<= (str.len var30C) 1))
(assert (<= (str.len var30D) 1))
(assert (<= (str.len var30E) 1))
(assert (<= (str.len var30F) 1))
(assert (= (str.++ preA (str.++ stem30 sufA)) (str.++ unch130A (str.++ ch30A unch230A))))
(assert (= (str.++ preB (str.++ stem30 sufB)) (str.++ unch130B (str.++ ch30B unch230B))))
(assert (= (str.++ preC (str.++ stem30 sufC)) (str.++ unch130C (str.++ ch30C unch230C))))
(assert (= (str.++ preD (str.++ stem30 sufD)) (str.++ unch130D (str.++ ch30D unch230D))))
(assert (= (str.++ preE (str.++ stem30 sufE)) (str.++ unch130E (str.++ ch30E unch230E))))
(assert (= (str.++ preF (str.++ stem30 sufF)) (str.++ unch130F (str.++ ch30F unch230F))))
(assert (= "bohol" (str.++ unch130A (str.++ var30A unch230A))))
(assert (= "bohoBa" (str.++ unch130B (str.++ var30B unch230B))))
(assert (= "boholo" (str.++ unch130C (str.++ var30C unch230C))))
(assert (= (str.len stem30) l30))
(assert (= (ite (= ch30A var30A) 0 1) sc30A))
(assert (= (ite (= ch30B var30B) 0 1) sc30B))
(assert (= (ite (= ch30C var30C) 0 1) sc30C))
(assert (= (ite (= ch30D var30D) 0 1) sc30D))
(assert (= (ite (= ch30E var30E) 0 1) sc30E))
(assert (= (ite (= ch30F var30F) 0 1) sc30F))
(assert (<= sc30A 1))
(assert (<= sc30B 1))
(assert (<= sc30C 1))
(assert (<= sc30D 1))
(assert (<= sc30E 1))
(assert (<= sc30F 1))
(assert (<= (str.len var31A) 1))
(assert (<= (str.len var31B) 1))
(assert (<= (str.len var31C) 1))
(assert (<= (str.len var31D) 1))
(assert (<= (str.len var31E) 1))
(assert (<= (str.len var31F) 1))
(assert (= (str.++ preA (str.++ stem31 sufA)) (str.++ unch131A (str.++ ch31A unch231A))))
(assert (= (str.++ preB (str.++ stem31 sufB)) (str.++ unch131B (str.++ ch31B unch231B))))
(assert (= (str.++ preC (str.++ stem31 sufC)) (str.++ unch131C (str.++ ch31C unch231C))))
(assert (= (str.++ preD (str.++ stem31 sufD)) (str.++ unch131D (str.++ ch31D unch231D))))
(assert (= (str.++ preE (str.++ stem31 sufE)) (str.++ unch131E (str.++ ch31E unch231E))))
(assert (= (str.++ preF (str.++ stem31 sufF)) (str.++ unch131F (str.++ ch31F unch231F))))
(assert (= "4aajad" (str.++ unch131A (str.++ var31A unch231A))))
(assert (= "4aajada" (str.++ unch131B (str.++ var31B unch231B))))
(assert (= "4aajaZo" (str.++ unch131C (str.++ var31C unch231C))))
(assert (= (str.len stem31) l31))
(assert (= (ite (= ch31A var31A) 0 1) sc31A))
(assert (= (ite (= ch31B var31B) 0 1) sc31B))
(assert (= (ite (= ch31C var31C) 0 1) sc31C))
(assert (= (ite (= ch31D var31D) 0 1) sc31D))
(assert (= (ite (= ch31E var31E) 0 1) sc31E))
(assert (= (ite (= ch31F var31F) 0 1) sc31F))
(assert (<= sc31A 1))
(assert (<= sc31B 1))
(assert (<= sc31C 1))
(assert (<= sc31D 1))
(assert (<= sc31E 1))
(assert (<= sc31F 1))
(assert (<= (str.len var32A) 1))
(assert (<= (str.len var32B) 1))
(assert (<= (str.len var32C) 1))
(assert (<= (str.len var32D) 1))
(assert (<= (str.len var32E) 1))
(assert (<= (str.len var32F) 1))
(assert (= (str.++ preA (str.++ stem32 sufA)) (str.++ unch132A (str.++ ch32A unch232A))))
(assert (= (str.++ preB (str.++ stem32 sufB)) (str.++ unch132B (str.++ ch32B unch232B))))
(assert (= (str.++ preC (str.++ stem32 sufC)) (str.++ unch132C (str.++ ch32C unch232C))))
(assert (= (str.++ preD (str.++ stem32 sufD)) (str.++ unch132D (str.++ ch32D unch232D))))
(assert (= (str.++ preE (str.++ stem32 sufE)) (str.++ unch132E (str.++ ch32E unch232E))))
(assert (= (str.++ preF (str.++ stem32 sufF)) (str.++ unch132F (str.++ ch32F unch232F))))
(assert (= "ga3an" (str.++ unch132A (str.++ var32A unch232A))))
(assert (= "ga3anta" (str.++ unch132B (str.++ var32B unch232B))))
(assert (= "ga3mo" (str.++ unch132C (str.++ var32C unch232C))))
(assert (= (str.len stem32) l32))
(assert (= (ite (= ch32A var32A) 0 1) sc32A))
(assert (= (ite (= ch32B var32B) 0 1) sc32B))
(assert (= (ite (= ch32C var32C) 0 1) sc32C))
(assert (= (ite (= ch32D var32D) 0 1) sc32D))
(assert (= (ite (= ch32E var32E) 0 1) sc32E))
(assert (= (ite (= ch32F var32F) 0 1) sc32F))
(assert (<= sc32A 1))
(assert (<= sc32B 1))
(assert (<= sc32C 1))
(assert (<= sc32D 1))
(assert (<= sc32E 1))
(assert (<= sc32F 1))
(assert (<= (str.len var33A) 1))
(assert (<= (str.len var33B) 1))
(assert (<= (str.len var33C) 1))
(assert (<= (str.len var33D) 1))
(assert (<= (str.len var33E) 1))
(assert (<= (str.len var33F) 1))
(assert (= (str.++ preA (str.++ stem33 sufA)) (str.++ unch133A (str.++ ch33A unch233A))))
(assert (= (str.++ preB (str.++ stem33 sufB)) (str.++ unch133B (str.++ ch33B unch233B))))
(assert (= (str.++ preC (str.++ stem33 sufC)) (str.++ unch133C (str.++ ch33C unch233C))))
(assert (= (str.++ preD (str.++ stem33 sufD)) (str.++ unch133D (str.++ ch33D unch233D))))
(assert (= (str.++ preE (str.++ stem33 sufE)) (str.++ unch133E (str.++ ch33E unch233E))))
(assert (= (str.++ preF (str.++ stem33 sufF)) (str.++ unch133F (str.++ ch33F unch233F))))
(assert (= "4inan" (str.++ unch133A (str.++ var33A unch233A))))
(assert (= "4inanta" (str.++ unch133B (str.++ var33B unch233B))))
(assert (= "4inano" (str.++ unch133C (str.++ var33C unch233C))))
(assert (= (str.len stem33) l33))
(assert (= (ite (= ch33A var33A) 0 1) sc33A))
(assert (= (ite (= ch33B var33B) 0 1) sc33B))
(assert (= (ite (= ch33C var33C) 0 1) sc33C))
(assert (= (ite (= ch33D var33D) 0 1) sc33D))
(assert (= (ite (= ch33E var33E) 0 1) sc33E))
(assert (= (ite (= ch33F var33F) 0 1) sc33F))
(assert (<= sc33A 1))
(assert (<= sc33B 1))
(assert (<= sc33C 1))
(assert (<= sc33D 1))
(assert (<= sc33E 1))
(assert (<= sc33F 1))
(assert (<= (str.len var34A) 1))
(assert (<= (str.len var34B) 1))
(assert (<= (str.len var34C) 1))
(assert (<= (str.len var34D) 1))
(assert (<= (str.len var34E) 1))
(assert (<= (str.len var34F) 1))
(assert (= (str.++ preA (str.++ stem34 sufA)) (str.++ unch134A (str.++ ch34A unch234A))))
(assert (= (str.++ preB (str.++ stem34 sufB)) (str.++ unch134B (str.++ ch34B unch234B))))
(assert (= (str.++ preC (str.++ stem34 sufC)) (str.++ unch134C (str.++ ch34C unch234C))))
(assert (= (str.++ preD (str.++ stem34 sufD)) (str.++ unch134D (str.++ ch34D unch234D))))
(assert (= (str.++ preE (str.++ stem34 sufE)) (str.++ unch134E (str.++ ch34E unch234E))))
(assert (= (str.++ preF (str.++ stem34 sufF)) (str.++ unch134F (str.++ ch34F unch234F))))
(assert (= "suOaj" (str.++ unch134D (str.++ var34D unch234D))))
(assert (= "sugtaj" (str.++ unch134E (str.++ var34E unch234E))))
(assert (= "sugnaj" (str.++ unch134F (str.++ var34F unch234F))))
(assert (= (str.len stem34) l34))
(assert (= (ite (= ch34A var34A) 0 1) sc34A))
(assert (= (ite (= ch34B var34B) 0 1) sc34B))
(assert (= (ite (= ch34C var34C) 0 1) sc34C))
(assert (= (ite (= ch34D var34D) 0 1) sc34D))
(assert (= (ite (= ch34E var34E) 0 1) sc34E))
(assert (= (ite (= ch34F var34F) 0 1) sc34F))
(assert (<= sc34A 1))
(assert (<= sc34B 1))
(assert (<= sc34C 1))
(assert (<= sc34D 1))
(assert (<= sc34E 1))
(assert (<= sc34F 1))
(assert (<= (str.len var35A) 1))
(assert (<= (str.len var35B) 1))
(assert (<= (str.len var35C) 1))
(assert (<= (str.len var35D) 1))
(assert (<= (str.len var35E) 1))
(assert (<= (str.len var35F) 1))
(assert (= (str.++ preA (str.++ stem35 sufA)) (str.++ unch135A (str.++ ch35A unch235A))))
(assert (= (str.++ preB (str.++ stem35 sufB)) (str.++ unch135B (str.++ ch35B unch235B))))
(assert (= (str.++ preC (str.++ stem35 sufC)) (str.++ unch135C (str.++ ch35C unch235C))))
(assert (= (str.++ preD (str.++ stem35 sufD)) (str.++ unch135D (str.++ ch35D unch235D))))
(assert (= (str.++ preE (str.++ stem35 sufE)) (str.++ unch135E (str.++ ch35E unch235E))))
(assert (= (str.++ preF (str.++ stem35 sufF)) (str.++ unch135F (str.++ ch35F unch235F))))
(assert (= "kaXaj" (str.++ unch135D (str.++ var35D unch235D))))
(assert (= "kabtaj" (str.++ unch135E (str.++ var35E unch235E))))
(assert (= "kabnaj" (str.++ unch135F (str.++ var35F unch235F))))
(assert (= (str.len stem35) l35))
(assert (= (ite (= ch35A var35A) 0 1) sc35A))
(assert (= (ite (= ch35B var35B) 0 1) sc35B))
(assert (= (ite (= ch35C var35C) 0 1) sc35C))
(assert (= (ite (= ch35D var35D) 0 1) sc35D))
(assert (= (ite (= ch35E var35E) 0 1) sc35E))
(assert (= (ite (= ch35F var35F) 0 1) sc35F))
(assert (<= sc35A 1))
(assert (<= sc35B 1))
(assert (<= sc35C 1))
(assert (<= sc35D 1))
(assert (<= sc35E 1))
(assert (<= sc35F 1))
(assert (<= (str.len var36A) 1))
(assert (<= (str.len var36B) 1))
(assert (<= (str.len var36C) 1))
(assert (<= (str.len var36D) 1))
(assert (<= (str.len var36E) 1))
(assert (<= (str.len var36F) 1))
(assert (= (str.++ preA (str.++ stem36 sufA)) (str.++ unch136A (str.++ ch36A unch236A))))
(assert (= (str.++ preB (str.++ stem36 sufB)) (str.++ unch136B (str.++ ch36B unch236B))))
(assert (= (str.++ preC (str.++ stem36 sufC)) (str.++ unch136C (str.++ ch36C unch236C))))
(assert (= (str.++ preD (str.++ stem36 sufD)) (str.++ unch136D (str.++ ch36D unch236D))))
(assert (= (str.++ preE (str.++ stem36 sufE)) (str.++ unch136E (str.++ ch36E unch236E))))
(assert (= (str.++ preF (str.++ stem36 sufF)) (str.++ unch136F (str.++ ch36F unch236F))))
(assert (= "siZaj" (str.++ unch136D (str.++ var36D unch236D))))
(assert (= "sidaj" (str.++ unch136E (str.++ var36E unch236E))))
(assert (= "sidnaj" (str.++ unch136F (str.++ var36F unch236F))))
(assert (= (str.len stem36) l36))
(assert (= (ite (= ch36A var36A) 0 1) sc36A))
(assert (= (ite (= ch36B var36B) 0 1) sc36B))
(assert (= (ite (= ch36C var36C) 0 1) sc36C))
(assert (= (ite (= ch36D var36D) 0 1) sc36D))
(assert (= (ite (= ch36E var36E) 0 1) sc36E))
(assert (= (ite (= ch36F var36F) 0 1) sc36F))
(assert (<= sc36A 1))
(assert (<= sc36B 1))
(assert (<= sc36C 1))
(assert (<= sc36D 1))
(assert (<= sc36E 1))
(assert (<= sc36F 1))
(assert (<= (str.len var37A) 1))
(assert (<= (str.len var37B) 1))
(assert (<= (str.len var37C) 1))
(assert (<= (str.len var37D) 1))
(assert (<= (str.len var37E) 1))
(assert (<= (str.len var37F) 1))
(assert (= (str.++ preA (str.++ stem37 sufA)) (str.++ unch137A (str.++ ch37A unch237A))))
(assert (= (str.++ preB (str.++ stem37 sufB)) (str.++ unch137B (str.++ ch37B unch237B))))
(assert (= (str.++ preC (str.++ stem37 sufC)) (str.++ unch137C (str.++ ch37C unch237C))))
(assert (= (str.++ preD (str.++ stem37 sufD)) (str.++ unch137D (str.++ ch37D unch237D))))
(assert (= (str.++ preE (str.++ stem37 sufE)) (str.++ unch137E (str.++ ch37E unch237E))))
(assert (= (str.++ preF (str.++ stem37 sufF)) (str.++ unch137F (str.++ ch37F unch237F))))
(assert (= "dilaj" (str.++ unch137D (str.++ var37D unch237D))))
(assert (= "diBaj" (str.++ unch137E (str.++ var37E unch237E))))
(assert (= "dillaj" (str.++ unch137F (str.++ var37F unch237F))))
(assert (= (str.len stem37) l37))
(assert (= (ite (= ch37A var37A) 0 1) sc37A))
(assert (= (ite (= ch37B var37B) 0 1) sc37B))
(assert (= (ite (= ch37C var37C) 0 1) sc37C))
(assert (= (ite (= ch37D var37D) 0 1) sc37D))
(assert (= (ite (= ch37E var37E) 0 1) sc37E))
(assert (= (ite (= ch37F var37F) 0 1) sc37F))
(assert (<= sc37A 1))
(assert (<= sc37B 1))
(assert (<= sc37C 1))
(assert (<= sc37D 1))
(assert (<= sc37E 1))
(assert (<= sc37F 1))
(assert (<= (str.len var38A) 1))
(assert (<= (str.len var38B) 1))
(assert (<= (str.len var38C) 1))
(assert (<= (str.len var38D) 1))
(assert (<= (str.len var38E) 1))
(assert (<= (str.len var38F) 1))
(assert (= (str.++ preA (str.++ stem38 sufA)) (str.++ unch138A (str.++ ch38A unch238A))))
(assert (= (str.++ preB (str.++ stem38 sufB)) (str.++ unch138B (str.++ ch38B unch238B))))
(assert (= (str.++ preC (str.++ stem38 sufC)) (str.++ unch138C (str.++ ch38C unch238C))))
(assert (= (str.++ preD (str.++ stem38 sufD)) (str.++ unch138D (str.++ ch38D unch238D))))
(assert (= (str.++ preE (str.++ stem38 sufE)) (str.++ unch138E (str.++ ch38E unch238E))))
(assert (= (str.++ preF (str.++ stem38 sufF)) (str.++ unch138F (str.++ ch38F unch238F))))
(assert (= "ganaj" (str.++ unch138D (str.++ var38D unch238D))))
(assert (= "gantaj" (str.++ unch138E (str.++ var38E unch238E))))
(assert (= "gannaj" (str.++ unch138F (str.++ var38F unch238F))))
(assert (= (str.len stem38) l38))
(assert (= (ite (= ch38A var38A) 0 1) sc38A))
(assert (= (ite (= ch38B var38B) 0 1) sc38B))
(assert (= (ite (= ch38C var38C) 0 1) sc38C))
(assert (= (ite (= ch38D var38D) 0 1) sc38D))
(assert (= (ite (= ch38E var38E) 0 1) sc38E))
(assert (= (ite (= ch38F var38F) 0 1) sc38F))
(assert (<= sc38A 1))
(assert (<= sc38B 1))
(assert (<= sc38C 1))
(assert (<= sc38D 1))
(assert (<= sc38E 1))
(assert (<= sc38F 1))
(assert (<= (str.len var39A) 1))
(assert (<= (str.len var39B) 1))
(assert (<= (str.len var39C) 1))
(assert (<= (str.len var39D) 1))
(assert (<= (str.len var39E) 1))
(assert (<= (str.len var39F) 1))
(assert (= (str.++ preA (str.++ stem39 sufA)) (str.++ unch139A (str.++ ch39A unch239A))))
(assert (= (str.++ preB (str.++ stem39 sufB)) (str.++ unch139B (str.++ ch39B unch239B))))
(assert (= (str.++ preC (str.++ stem39 sufC)) (str.++ unch139C (str.++ ch39C unch239C))))
(assert (= (str.++ preD (str.++ stem39 sufD)) (str.++ unch139D (str.++ ch39D unch239D))))
(assert (= (str.++ preE (str.++ stem39 sufE)) (str.++ unch139E (str.++ ch39E unch239E))))
(assert (= (str.++ preF (str.++ stem39 sufF)) (str.++ unch139F (str.++ ch39F unch239F))))
(assert (= "tumaj" (str.++ unch139D (str.++ var39D unch239D))))
(assert (= "tuntaj" (str.++ unch139E (str.++ var39E unch239E))))
(assert (= "tunnaj" (str.++ unch139F (str.++ var39F unch239F))))
(assert (= (str.len stem39) l39))
(assert (= (ite (= ch39A var39A) 0 1) sc39A))
(assert (= (ite (= ch39B var39B) 0 1) sc39B))
(assert (= (ite (= ch39C var39C) 0 1) sc39C))
(assert (= (ite (= ch39D var39D) 0 1) sc39D))
(assert (= (ite (= ch39E var39E) 0 1) sc39E))
(assert (= (ite (= ch39F var39F) 0 1) sc39F))
(assert (<= sc39A 1))
(assert (<= sc39B 1))
(assert (<= sc39C 1))
(assert (<= sc39D 1))
(assert (<= sc39E 1))
(assert (<= sc39F 1))
(assert (<= (str.len var40A) 1))
(assert (<= (str.len var40B) 1))
(assert (<= (str.len var40C) 1))
(assert (<= (str.len var40D) 1))
(assert (<= (str.len var40E) 1))
(assert (<= (str.len var40F) 1))
(assert (= (str.++ preA (str.++ stem40 sufA)) (str.++ unch140A (str.++ ch40A unch240A))))
(assert (= (str.++ preB (str.++ stem40 sufB)) (str.++ unch140B (str.++ ch40B unch240B))))
(assert (= (str.++ preC (str.++ stem40 sufC)) (str.++ unch140C (str.++ ch40C unch240C))))
(assert (= (str.++ preD (str.++ stem40 sufD)) (str.++ unch140D (str.++ ch40D unch240D))))
(assert (= (str.++ preE (str.++ stem40 sufE)) (str.++ unch140E (str.++ ch40E unch240E))))
(assert (= (str.++ preF (str.++ stem40 sufF)) (str.++ unch140F (str.++ ch40F unch240F))))
(assert (= "argaj" (str.++ unch140D (str.++ var40D unch240D))))
(assert (= "aragtaj" (str.++ unch140E (str.++ var40E unch240E))))
(assert (= "aragnaj" (str.++ unch140F (str.++ var40F unch240F))))
(assert (= (str.len stem40) l40))
(assert (= (ite (= ch40A var40A) 0 1) sc40A))
(assert (= (ite (= ch40B var40B) 0 1) sc40B))
(assert (= (ite (= ch40C var40C) 0 1) sc40C))
(assert (= (ite (= ch40D var40D) 0 1) sc40D))
(assert (= (ite (= ch40E var40E) 0 1) sc40E))
(assert (= (ite (= ch40F var40F) 0 1) sc40F))
(assert (<= sc40A 1))
(assert (<= sc40B 1))
(assert (<= sc40C 1))
(assert (<= sc40D 1))
(assert (<= sc40E 1))
(assert (<= sc40F 1))
(assert (<= (str.len var41A) 1))
(assert (<= (str.len var41B) 1))
(assert (<= (str.len var41C) 1))
(assert (<= (str.len var41D) 1))
(assert (<= (str.len var41E) 1))
(assert (<= (str.len var41F) 1))
(assert (= (str.++ preA (str.++ stem41 sufA)) (str.++ unch141A (str.++ ch41A unch241A))))
(assert (= (str.++ preB (str.++ stem41 sufB)) (str.++ unch141B (str.++ ch41B unch241B))))
(assert (= (str.++ preC (str.++ stem41 sufC)) (str.++ unch141C (str.++ ch41C unch241C))))
(assert (= (str.++ preD (str.++ stem41 sufD)) (str.++ unch141D (str.++ ch41D unch241D))))
(assert (= (str.++ preE (str.++ stem41 sufE)) (str.++ unch141E (str.++ ch41E unch241E))))
(assert (= (str.++ preF (str.++ stem41 sufF)) (str.++ unch141F (str.++ ch41F unch241F))))
(assert (= "gudbaj" (str.++ unch141D (str.++ var41D unch241D))))
(assert (= "guZubtaj" (str.++ unch141E (str.++ var41E unch241E))))
(assert (= "guZubnaj" (str.++ unch141F (str.++ var41F unch241F))))
(assert (= (str.len stem41) l41))
(assert (= (ite (= ch41A var41A) 0 1) sc41A))
(assert (= (ite (= ch41B var41B) 0 1) sc41B))
(assert (= (ite (= ch41C var41C) 0 1) sc41C))
(assert (= (ite (= ch41D var41D) 0 1) sc41D))
(assert (= (ite (= ch41E var41E) 0 1) sc41E))
(assert (= (ite (= ch41F var41F) 0 1) sc41F))
(assert (<= sc41A 1))
(assert (<= sc41B 1))
(assert (<= sc41C 1))
(assert (<= sc41D 1))
(assert (<= sc41E 1))
(assert (<= sc41F 1))
(assert (<= (str.len var42A) 1))
(assert (<= (str.len var42B) 1))
(assert (<= (str.len var42C) 1))
(assert (<= (str.len var42D) 1))
(assert (<= (str.len var42E) 1))
(assert (<= (str.len var42F) 1))
(assert (= (str.++ preA (str.++ stem42 sufA)) (str.++ unch142A (str.++ ch42A unch242A))))
(assert (= (str.++ preB (str.++ stem42 sufB)) (str.++ unch142B (str.++ ch42B unch242B))))
(assert (= (str.++ preC (str.++ stem42 sufC)) (str.++ unch142C (str.++ ch42C unch242C))))
(assert (= (str.++ preD (str.++ stem42 sufD)) (str.++ unch142D (str.++ ch42D unch242D))))
(assert (= (str.++ preE (str.++ stem42 sufE)) (str.++ unch142E (str.++ ch42E unch242E))))
(assert (= (str.++ preF (str.++ stem42 sufF)) (str.++ unch142F (str.++ ch42F unch242F))))
(assert (= "qoslaj" (str.++ unch142D (str.++ var42D unch242D))))
(assert (= "qosoBaj" (str.++ unch142E (str.++ var42E unch242E))))
(assert (= "qosollaj" (str.++ unch142F (str.++ var42F unch242F))))
(assert (= (str.len stem42) l42))
(assert (= (ite (= ch42A var42A) 0 1) sc42A))
(assert (= (ite (= ch42B var42B) 0 1) sc42B))
(assert (= (ite (= ch42C var42C) 0 1) sc42C))
(assert (= (ite (= ch42D var42D) 0 1) sc42D))
(assert (= (ite (= ch42E var42E) 0 1) sc42E))
(assert (= (ite (= ch42F var42F) 0 1) sc42F))
(assert (<= sc42A 1))
(assert (<= sc42B 1))
(assert (<= sc42C 1))
(assert (<= sc42D 1))
(assert (<= sc42E 1))
(assert (<= sc42F 1))
(assert (<= (str.len var43A) 1))
(assert (<= (str.len var43B) 1))
(assert (<= (str.len var43C) 1))
(assert (<= (str.len var43D) 1))
(assert (<= (str.len var43E) 1))
(assert (<= (str.len var43F) 1))
(assert (= (str.++ preA (str.++ stem43 sufA)) (str.++ unch143A (str.++ ch43A unch243A))))
(assert (= (str.++ preB (str.++ stem43 sufB)) (str.++ unch143B (str.++ ch43B unch243B))))
(assert (= (str.++ preC (str.++ stem43 sufC)) (str.++ unch143C (str.++ ch43C unch243C))))
(assert (= (str.++ preD (str.++ stem43 sufD)) (str.++ unch143D (str.++ ch43D unch243D))))
(assert (= (str.++ preE (str.++ stem43 sufE)) (str.++ unch143E (str.++ ch43E unch243E))))
(assert (= (str.++ preF (str.++ stem43 sufF)) (str.++ unch143F (str.++ ch43F unch243F))))
(assert (= "hadlaj" (str.++ unch143D (str.++ var43D unch243D))))
(assert (= "haZaBaj" (str.++ unch143E (str.++ var43E unch243E))))
(assert (= "haZallaj" (str.++ unch143F (str.++ var43F unch243F))))
(assert (= (str.len stem43) l43))
(assert (= (ite (= ch43A var43A) 0 1) sc43A))
(assert (= (ite (= ch43B var43B) 0 1) sc43B))
(assert (= (ite (= ch43C var43C) 0 1) sc43C))
(assert (= (ite (= ch43D var43D) 0 1) sc43D))
(assert (= (ite (= ch43E var43E) 0 1) sc43E))
(assert (= (ite (= ch43F var43F) 0 1) sc43F))
(assert (<= sc43A 1))
(assert (<= sc43B 1))
(assert (<= sc43C 1))
(assert (<= sc43D 1))
(assert (<= sc43E 1))
(assert (<= sc43F 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      0
      sc30A
      sc30B
      sc30C
      sc30D
      sc30E
      sc30F
      0
      sc31A
      sc31B
      sc31C
      sc31D
      sc31E
      sc31F
      0
      sc32A
      sc32B
      sc32C
      sc32D
      sc32E
      sc32F
      0
      sc33A
      sc33B
      sc33C
      sc33D
      sc33E
      sc33F
      0
      sc34A
      sc34B
      sc34C
      sc34D
      sc34E
      sc34F
      0
      sc35A
      sc35B
      sc35C
      sc35D
      sc35E
      sc35F
      0
      sc36A
      sc36B
      sc36C
      sc36D
      sc36E
      sc36F
      0
      sc37A
      sc37B
      sc37C
      sc37D
      sc37E
      sc37F
      0
      sc38A
      sc38B
      sc38C
      sc38D
      sc38E
      sc38F
      0
      sc39A
      sc39B
      sc39C
      sc39D
      sc39E
      sc39F
      0
      sc40A
      sc40B
      sc40C
      sc40D
      sc40E
      sc40F
      0
      sc41A
      sc41B
      sc41C
      sc41D
      sc41E
      sc41F
      0
      sc42A
      sc42B
      sc42C
      sc42D
      sc42E
      sc42F
      0
      sc43A
      sc43B
      sc43C
      sc43D
      sc43E
      sc43F)
   6))
(assert (= (+ 0
      sc0C
      sc1C
      sc2C
      sc3C
      sc4C
      sc5C
      sc6C
      sc7C
      sc8C
      sc9C
      sc10C
      sc11C
      sc12C
      sc13C
      sc14C
      sc15C
      sc16C
      sc17C
      sc18C
      sc19C
      sc20C
      sc21C
      sc22C
      sc23C
      sc24C
      sc25C
      sc26C
      sc27C
      sc28C
      sc29C
      sc30C
      sc31C
      sc32C
      sc33C
      sc34C
      sc35C
      sc36C
      sc37C
      sc38C
      sc39C
      sc40C
      sc41C
      sc42C
      sc43C)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun var30A () String)
(declare-fun var30B () String)
(declare-fun var30C () String)
(declare-fun var30D () String)
(declare-fun var30E () String)
(declare-fun var30F () String)
(declare-fun unch230A () String)
(declare-fun ch30A () String)
(declare-fun unch130A () String)
(declare-fun stem30 () String)
(declare-fun unch230B () String)
(declare-fun ch30B () String)
(declare-fun unch130B () String)
(declare-fun unch230C () String)
(declare-fun ch30C () String)
(declare-fun unch130C () String)
(declare-fun unch230D () String)
(declare-fun ch30D () String)
(declare-fun unch130D () String)
(declare-fun unch230E () String)
(declare-fun ch30E () String)
(declare-fun unch130E () String)
(declare-fun unch230F () String)
(declare-fun ch30F () String)
(declare-fun unch130F () String)
(declare-fun l30 () Int)
(declare-fun sc30A () Int)
(declare-fun sc30B () Int)
(declare-fun sc30C () Int)
(declare-fun sc30D () Int)
(declare-fun sc30E () Int)
(declare-fun sc30F () Int)
(declare-fun var31A () String)
(declare-fun var31B () String)
(declare-fun var31C () String)
(declare-fun var31D () String)
(declare-fun var31E () String)
(declare-fun var31F () String)
(declare-fun unch231A () String)
(declare-fun ch31A () String)
(declare-fun unch131A () String)
(declare-fun stem31 () String)
(declare-fun unch231B () String)
(declare-fun ch31B () String)
(declare-fun unch131B () String)
(declare-fun unch231C () String)
(declare-fun ch31C () String)
(declare-fun unch131C () String)
(declare-fun unch231D () String)
(declare-fun ch31D () String)
(declare-fun unch131D () String)
(declare-fun unch231E () String)
(declare-fun ch31E () String)
(declare-fun unch131E () String)
(declare-fun unch231F () String)
(declare-fun ch31F () String)
(declare-fun unch131F () String)
(declare-fun l31 () Int)
(declare-fun sc31A () Int)
(declare-fun sc31B () Int)
(declare-fun sc31C () Int)
(declare-fun sc31D () Int)
(declare-fun sc31E () Int)
(declare-fun sc31F () Int)
(declare-fun var32A () String)
(declare-fun var32B () String)
(declare-fun var32C () String)
(declare-fun var32D () String)
(declare-fun var32E () String)
(declare-fun var32F () String)
(declare-fun unch232A () String)
(declare-fun ch32A () String)
(declare-fun unch132A () String)
(declare-fun stem32 () String)
(declare-fun unch232B () String)
(declare-fun ch32B () String)
(declare-fun unch132B () String)
(declare-fun unch232C () String)
(declare-fun ch32C () String)
(declare-fun unch132C () String)
(declare-fun unch232D () String)
(declare-fun ch32D () String)
(declare-fun unch132D () String)
(declare-fun unch232E () String)
(declare-fun ch32E () String)
(declare-fun unch132E () String)
(declare-fun unch232F () String)
(declare-fun ch32F () String)
(declare-fun unch132F () String)
(declare-fun l32 () Int)
(declare-fun sc32A () Int)
(declare-fun sc32B () Int)
(declare-fun sc32C () Int)
(declare-fun sc32D () Int)
(declare-fun sc32E () Int)
(declare-fun sc32F () Int)
(declare-fun var33A () String)
(declare-fun var33B () String)
(declare-fun var33C () String)
(declare-fun var33D () String)
(declare-fun var33E () String)
(declare-fun var33F () String)
(declare-fun unch233A () String)
(declare-fun ch33A () String)
(declare-fun unch133A () String)
(declare-fun stem33 () String)
(declare-fun unch233B () String)
(declare-fun ch33B () String)
(declare-fun unch133B () String)
(declare-fun unch233C () String)
(declare-fun ch33C () String)
(declare-fun unch133C () String)
(declare-fun unch233D () String)
(declare-fun ch33D () String)
(declare-fun unch133D () String)
(declare-fun unch233E () String)
(declare-fun ch33E () String)
(declare-fun unch133E () String)
(declare-fun unch233F () String)
(declare-fun ch33F () String)
(declare-fun unch133F () String)
(declare-fun l33 () Int)
(declare-fun sc33A () Int)
(declare-fun sc33B () Int)
(declare-fun sc33C () Int)
(declare-fun sc33D () Int)
(declare-fun sc33E () Int)
(declare-fun sc33F () Int)
(declare-fun var34A () String)
(declare-fun var34B () String)
(declare-fun var34C () String)
(declare-fun var34D () String)
(declare-fun var34E () String)
(declare-fun var34F () String)
(declare-fun unch234A () String)
(declare-fun ch34A () String)
(declare-fun unch134A () String)
(declare-fun stem34 () String)
(declare-fun unch234B () String)
(declare-fun ch34B () String)
(declare-fun unch134B () String)
(declare-fun unch234C () String)
(declare-fun ch34C () String)
(declare-fun unch134C () String)
(declare-fun unch234D () String)
(declare-fun ch34D () String)
(declare-fun unch134D () String)
(declare-fun unch234E () String)
(declare-fun ch34E () String)
(declare-fun unch134E () String)
(declare-fun unch234F () String)
(declare-fun ch34F () String)
(declare-fun unch134F () String)
(declare-fun l34 () Int)
(declare-fun sc34A () Int)
(declare-fun sc34B () Int)
(declare-fun sc34C () Int)
(declare-fun sc34D () Int)
(declare-fun sc34E () Int)
(declare-fun sc34F () Int)
(declare-fun var35A () String)
(declare-fun var35B () String)
(declare-fun var35C () String)
(declare-fun var35D () String)
(declare-fun var35E () String)
(declare-fun var35F () String)
(declare-fun unch235A () String)
(declare-fun ch35A () String)
(declare-fun unch135A () String)
(declare-fun stem35 () String)
(declare-fun unch235B () String)
(declare-fun ch35B () String)
(declare-fun unch135B () String)
(declare-fun unch235C () String)
(declare-fun ch35C () String)
(declare-fun unch135C () String)
(declare-fun unch235D () String)
(declare-fun ch35D () String)
(declare-fun unch135D () String)
(declare-fun unch235E () String)
(declare-fun ch35E () String)
(declare-fun unch135E () String)
(declare-fun unch235F () String)
(declare-fun ch35F () String)
(declare-fun unch135F () String)
(declare-fun l35 () Int)
(declare-fun sc35A () Int)
(declare-fun sc35B () Int)
(declare-fun sc35C () Int)
(declare-fun sc35D () Int)
(declare-fun sc35E () Int)
(declare-fun sc35F () Int)
(declare-fun var36A () String)
(declare-fun var36B () String)
(declare-fun var36C () String)
(declare-fun var36D () String)
(declare-fun var36E () String)
(declare-fun var36F () String)
(declare-fun unch236A () String)
(declare-fun ch36A () String)
(declare-fun unch136A () String)
(declare-fun stem36 () String)
(declare-fun unch236B () String)
(declare-fun ch36B () String)
(declare-fun unch136B () String)
(declare-fun unch236C () String)
(declare-fun ch36C () String)
(declare-fun unch136C () String)
(declare-fun unch236D () String)
(declare-fun ch36D () String)
(declare-fun unch136D () String)
(declare-fun unch236E () String)
(declare-fun ch36E () String)
(declare-fun unch136E () String)
(declare-fun unch236F () String)
(declare-fun ch36F () String)
(declare-fun unch136F () String)
(declare-fun l36 () Int)
(declare-fun sc36A () Int)
(declare-fun sc36B () Int)
(declare-fun sc36C () Int)
(declare-fun sc36D () Int)
(declare-fun sc36E () Int)
(declare-fun sc36F () Int)
(declare-fun var37A () String)
(declare-fun var37B () String)
(declare-fun var37C () String)
(declare-fun var37D () String)
(declare-fun var37E () String)
(declare-fun var37F () String)
(declare-fun unch237A () String)
(declare-fun ch37A () String)
(declare-fun unch137A () String)
(declare-fun stem37 () String)
(declare-fun unch237B () String)
(declare-fun ch37B () String)
(declare-fun unch137B () String)
(declare-fun unch237C () String)
(declare-fun ch37C () String)
(declare-fun unch137C () String)
(declare-fun unch237D () String)
(declare-fun ch37D () String)
(declare-fun unch137D () String)
(declare-fun unch237E () String)
(declare-fun ch37E () String)
(declare-fun unch137E () String)
(declare-fun unch237F () String)
(declare-fun ch37F () String)
(declare-fun unch137F () String)
(declare-fun l37 () Int)
(declare-fun sc37A () Int)
(declare-fun sc37B () Int)
(declare-fun sc37C () Int)
(declare-fun sc37D () Int)
(declare-fun sc37E () Int)
(declare-fun sc37F () Int)
(declare-fun var38A () String)
(declare-fun var38B () String)
(declare-fun var38C () String)
(declare-fun var38D () String)
(declare-fun var38E () String)
(declare-fun var38F () String)
(declare-fun unch238A () String)
(declare-fun ch38A () String)
(declare-fun unch138A () String)
(declare-fun stem38 () String)
(declare-fun unch238B () String)
(declare-fun ch38B () String)
(declare-fun unch138B () String)
(declare-fun unch238C () String)
(declare-fun ch38C () String)
(declare-fun unch138C () String)
(declare-fun unch238D () String)
(declare-fun ch38D () String)
(declare-fun unch138D () String)
(declare-fun unch238E () String)
(declare-fun ch38E () String)
(declare-fun unch138E () String)
(declare-fun unch238F () String)
(declare-fun ch38F () String)
(declare-fun unch138F () String)
(declare-fun l38 () Int)
(declare-fun sc38A () Int)
(declare-fun sc38B () Int)
(declare-fun sc38C () Int)
(declare-fun sc38D () Int)
(declare-fun sc38E () Int)
(declare-fun sc38F () Int)
(declare-fun var39A () String)
(declare-fun var39B () String)
(declare-fun var39C () String)
(declare-fun var39D () String)
(declare-fun var39E () String)
(declare-fun var39F () String)
(declare-fun unch239A () String)
(declare-fun ch39A () String)
(declare-fun unch139A () String)
(declare-fun stem39 () String)
(declare-fun unch239B () String)
(declare-fun ch39B () String)
(declare-fun unch139B () String)
(declare-fun unch239C () String)
(declare-fun ch39C () String)
(declare-fun unch139C () String)
(declare-fun unch239D () String)
(declare-fun ch39D () String)
(declare-fun unch139D () String)
(declare-fun unch239E () String)
(declare-fun ch39E () String)
(declare-fun unch139E () String)
(declare-fun unch239F () String)
(declare-fun ch39F () String)
(declare-fun unch139F () String)
(declare-fun l39 () Int)
(declare-fun sc39A () Int)
(declare-fun sc39B () Int)
(declare-fun sc39C () Int)
(declare-fun sc39D () Int)
(declare-fun sc39E () Int)
(declare-fun sc39F () Int)
(declare-fun var40A () String)
(declare-fun var40B () String)
(declare-fun var40C () String)
(declare-fun var40D () String)
(declare-fun var40E () String)
(declare-fun var40F () String)
(declare-fun unch240A () String)
(declare-fun ch40A () String)
(declare-fun unch140A () String)
(declare-fun stem40 () String)
(declare-fun unch240B () String)
(declare-fun ch40B () String)
(declare-fun unch140B () String)
(declare-fun unch240C () String)
(declare-fun ch40C () String)
(declare-fun unch140C () String)
(declare-fun unch240D () String)
(declare-fun ch40D () String)
(declare-fun unch140D () String)
(declare-fun unch240E () String)
(declare-fun ch40E () String)
(declare-fun unch140E () String)
(declare-fun unch240F () String)
(declare-fun ch40F () String)
(declare-fun unch140F () String)
(declare-fun l40 () Int)
(declare-fun sc40A () Int)
(declare-fun sc40B () Int)
(declare-fun sc40C () Int)
(declare-fun sc40D () Int)
(declare-fun sc40E () Int)
(declare-fun sc40F () Int)
(declare-fun var41A () String)
(declare-fun var41B () String)
(declare-fun var41C () String)
(declare-fun var41D () String)
(declare-fun var41E () String)
(declare-fun var41F () String)
(declare-fun unch241A () String)
(declare-fun ch41A () String)
(declare-fun unch141A () String)
(declare-fun stem41 () String)
(declare-fun unch241B () String)
(declare-fun ch41B () String)
(declare-fun unch141B () String)
(declare-fun unch241C () String)
(declare-fun ch41C () String)
(declare-fun unch141C () String)
(declare-fun unch241D () String)
(declare-fun ch41D () String)
(declare-fun unch141D () String)
(declare-fun unch241E () String)
(declare-fun ch41E () String)
(declare-fun unch141E () String)
(declare-fun unch241F () String)
(declare-fun ch41F () String)
(declare-fun unch141F () String)
(declare-fun l41 () Int)
(declare-fun sc41A () Int)
(declare-fun sc41B () Int)
(declare-fun sc41C () Int)
(declare-fun sc41D () Int)
(declare-fun sc41E () Int)
(declare-fun sc41F () Int)
(declare-fun var42A () String)
(declare-fun var42B () String)
(declare-fun var42C () String)
(declare-fun var42D () String)
(declare-fun var42E () String)
(declare-fun var42F () String)
(declare-fun unch242A () String)
(declare-fun ch42A () String)
(declare-fun unch142A () String)
(declare-fun stem42 () String)
(declare-fun unch242B () String)
(declare-fun ch42B () String)
(declare-fun unch142B () String)
(declare-fun unch242C () String)
(declare-fun ch42C () String)
(declare-fun unch142C () String)
(declare-fun unch242D () String)
(declare-fun ch42D () String)
(declare-fun unch142D () String)
(declare-fun unch242E () String)
(declare-fun ch42E () String)
(declare-fun unch142E () String)
(declare-fun unch242F () String)
(declare-fun ch42F () String)
(declare-fun unch142F () String)
(declare-fun l42 () Int)
(declare-fun sc42A () Int)
(declare-fun sc42B () Int)
(declare-fun sc42C () Int)
(declare-fun sc42D () Int)
(declare-fun sc42E () Int)
(declare-fun sc42F () Int)
(declare-fun var43A () String)
(declare-fun var43B () String)
(declare-fun var43C () String)
(declare-fun var43D () String)
(declare-fun var43E () String)
(declare-fun var43F () String)
(declare-fun unch243A () String)
(declare-fun ch43A () String)
(declare-fun unch143A () String)
(declare-fun stem43 () String)
(declare-fun unch243B () String)
(declare-fun ch43B () String)
(declare-fun unch143B () String)
(declare-fun unch243C () String)
(declare-fun ch43C () String)
(declare-fun unch143C () String)
(declare-fun unch243D () String)
(declare-fun ch43D () String)
(declare-fun unch143D () String)
(declare-fun unch243E () String)
(declare-fun ch43E () String)
(declare-fun unch143E () String)
(declare-fun unch243F () String)
(declare-fun ch43F () String)
(declare-fun unch143F () String)
(declare-fun l43 () Int)
(declare-fun sc43A () Int)
(declare-fun sc43B () Int)
(declare-fun sc43C () Int)
(declare-fun sc43D () Int)
(declare-fun sc43E () Int)
(declare-fun sc43F () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= "daar" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "daarta" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "daaro" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= "gees" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "geesta" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "geeso" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= "laf" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "lafta" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "lafo" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= "lug" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "lugta" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "luOo" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= "naag" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "naagta" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "naaOo" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= "tib" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "tibta" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "tiXo" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= "sab" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "sabta" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "saXo" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= "bad" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "bada" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "baZo" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= "Bid" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "Bida" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "BiZo" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= "fee1" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "fee1a" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "fee2o" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= "3iir" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "3iirta" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "3iiro" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= "4ul" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "4uBa" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "4ulo" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= "bil" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "biBa" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "bilo" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= "meel" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "meeBa" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "meelo" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= "kaliil" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "kaliiBa" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "kaliilo" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= "najl" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "najBa" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "najlo" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= "sun" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "sunta" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "sumo" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= "laan" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "laanta" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "laamo" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= "sin" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "sinta" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "simo" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= "dan" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "danta" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "dano" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= "daan" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "daanta" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "daano" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= "saan" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "saanta" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "saano" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= "nirig" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "nirigta" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "nirgo" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= "gaXa1" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= "gaXa1a" (str.++ unch123B (str.++ var23B unch223B))))
(assert (= "gab1o" (str.++ unch123C (str.++ var23C unch223C))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= "hoOol" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= "hoOoBa" (str.++ unch124B (str.++ var24B unch224B))))
(assert (= "hoglo" (str.++ unch124C (str.++ var24C unch224C))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= "baOal" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= "baOaBa" (str.++ unch125B (str.++ var25B unch225B))))
(assert (= "baglo" (str.++ unch125C (str.++ var25C unch225C))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= "wa5ar" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= "wa5arta" (str.++ unch126B (str.++ var26B unch226B))))
(assert (= "wa5aro" (str.++ unch126C (str.++ var26C unch226C))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= "irbad" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= "irbada" (str.++ unch127B (str.++ var27B unch227B))))
(assert (= "irbaZo" (str.++ unch127C (str.++ var27C unch227C))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= "kefed" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= "kefeda" (str.++ unch128B (str.++ var28B unch228B))))
(assert (= "kefeZo" (str.++ unch128C (str.++ var28C unch228C))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= "Bilin" (str.++ unch129A (str.++ var29A unch229A))))
(assert (= "Bilinta" (str.++ unch129B (str.++ var29B unch229B))))
(assert (= "Bilino" (str.++ unch129C (str.++ var29C unch229C))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= (str.len var30A) 1))
(assert (<= (str.len var30B) 1))
(assert (<= (str.len var30C) 1))
(assert (<= (str.len var30D) 1))
(assert (<= (str.len var30E) 1))
(assert (<= (str.len var30F) 1))
(assert (= (str.++ preA (str.++ stem30 sufA)) (str.++ unch130A (str.++ ch30A unch230A))))
(assert (= (str.++ preB (str.++ stem30 sufB)) (str.++ unch130B (str.++ ch30B unch230B))))
(assert (= (str.++ preC (str.++ stem30 sufC)) (str.++ unch130C (str.++ ch30C unch230C))))
(assert (= (str.++ preD (str.++ stem30 sufD)) (str.++ unch130D (str.++ ch30D unch230D))))
(assert (= (str.++ preE (str.++ stem30 sufE)) (str.++ unch130E (str.++ ch30E unch230E))))
(assert (= (str.++ preF (str.++ stem30 sufF)) (str.++ unch130F (str.++ ch30F unch230F))))
(assert (= "bohol" (str.++ unch130A (str.++ var30A unch230A))))
(assert (= "bohoBa" (str.++ unch130B (str.++ var30B unch230B))))
(assert (= "boholo" (str.++ unch130C (str.++ var30C unch230C))))
(assert (= (str.len stem30) l30))
(assert (= (ite (= ch30A var30A) 0 1) sc30A))
(assert (= (ite (= ch30B var30B) 0 1) sc30B))
(assert (= (ite (= ch30C var30C) 0 1) sc30C))
(assert (= (ite (= ch30D var30D) 0 1) sc30D))
(assert (= (ite (= ch30E var30E) 0 1) sc30E))
(assert (= (ite (= ch30F var30F) 0 1) sc30F))
(assert (<= sc30A 1))
(assert (<= sc30B 1))
(assert (<= sc30C 1))
(assert (<= sc30D 1))
(assert (<= sc30E 1))
(assert (<= sc30F 1))
(assert (<= (str.len var31A) 1))
(assert (<= (str.len var31B) 1))
(assert (<= (str.len var31C) 1))
(assert (<= (str.len var31D) 1))
(assert (<= (str.len var31E) 1))
(assert (<= (str.len var31F) 1))
(assert (= (str.++ preA (str.++ stem31 sufA)) (str.++ unch131A (str.++ ch31A unch231A))))
(assert (= (str.++ preB (str.++ stem31 sufB)) (str.++ unch131B (str.++ ch31B unch231B))))
(assert (= (str.++ preC (str.++ stem31 sufC)) (str.++ unch131C (str.++ ch31C unch231C))))
(assert (= (str.++ preD (str.++ stem31 sufD)) (str.++ unch131D (str.++ ch31D unch231D))))
(assert (= (str.++ preE (str.++ stem31 sufE)) (str.++ unch131E (str.++ ch31E unch231E))))
(assert (= (str.++ preF (str.++ stem31 sufF)) (str.++ unch131F (str.++ ch31F unch231F))))
(assert (= "4aajad" (str.++ unch131A (str.++ var31A unch231A))))
(assert (= "4aajada" (str.++ unch131B (str.++ var31B unch231B))))
(assert (= "4aajaZo" (str.++ unch131C (str.++ var31C unch231C))))
(assert (= (str.len stem31) l31))
(assert (= (ite (= ch31A var31A) 0 1) sc31A))
(assert (= (ite (= ch31B var31B) 0 1) sc31B))
(assert (= (ite (= ch31C var31C) 0 1) sc31C))
(assert (= (ite (= ch31D var31D) 0 1) sc31D))
(assert (= (ite (= ch31E var31E) 0 1) sc31E))
(assert (= (ite (= ch31F var31F) 0 1) sc31F))
(assert (<= sc31A 1))
(assert (<= sc31B 1))
(assert (<= sc31C 1))
(assert (<= sc31D 1))
(assert (<= sc31E 1))
(assert (<= sc31F 1))
(assert (<= (str.len var32A) 1))
(assert (<= (str.len var32B) 1))
(assert (<= (str.len var32C) 1))
(assert (<= (str.len var32D) 1))
(assert (<= (str.len var32E) 1))
(assert (<= (str.len var32F) 1))
(assert (= (str.++ preA (str.++ stem32 sufA)) (str.++ unch132A (str.++ ch32A unch232A))))
(assert (= (str.++ preB (str.++ stem32 sufB)) (str.++ unch132B (str.++ ch32B unch232B))))
(assert (= (str.++ preC (str.++ stem32 sufC)) (str.++ unch132C (str.++ ch32C unch232C))))
(assert (= (str.++ preD (str.++ stem32 sufD)) (str.++ unch132D (str.++ ch32D unch232D))))
(assert (= (str.++ preE (str.++ stem32 sufE)) (str.++ unch132E (str.++ ch32E unch232E))))
(assert (= (str.++ preF (str.++ stem32 sufF)) (str.++ unch132F (str.++ ch32F unch232F))))
(assert (= "ga3an" (str.++ unch132A (str.++ var32A unch232A))))
(assert (= "ga3anta" (str.++ unch132B (str.++ var32B unch232B))))
(assert (= "ga3mo" (str.++ unch132C (str.++ var32C unch232C))))
(assert (= (str.len stem32) l32))
(assert (= (ite (= ch32A var32A) 0 1) sc32A))
(assert (= (ite (= ch32B var32B) 0 1) sc32B))
(assert (= (ite (= ch32C var32C) 0 1) sc32C))
(assert (= (ite (= ch32D var32D) 0 1) sc32D))
(assert (= (ite (= ch32E var32E) 0 1) sc32E))
(assert (= (ite (= ch32F var32F) 0 1) sc32F))
(assert (<= sc32A 1))
(assert (<= sc32B 1))
(assert (<= sc32C 1))
(assert (<= sc32D 1))
(assert (<= sc32E 1))
(assert (<= sc32F 1))
(assert (<= (str.len var33A) 1))
(assert (<= (str.len var33B) 1))
(assert (<= (str.len var33C) 1))
(assert (<= (str.len var33D) 1))
(assert (<= (str.len var33E) 1))
(assert (<= (str.len var33F) 1))
(assert (= (str.++ preA (str.++ stem33 sufA)) (str.++ unch133A (str.++ ch33A unch233A))))
(assert (= (str.++ preB (str.++ stem33 sufB)) (str.++ unch133B (str.++ ch33B unch233B))))
(assert (= (str.++ preC (str.++ stem33 sufC)) (str.++ unch133C (str.++ ch33C unch233C))))
(assert (= (str.++ preD (str.++ stem33 sufD)) (str.++ unch133D (str.++ ch33D unch233D))))
(assert (= (str.++ preE (str.++ stem33 sufE)) (str.++ unch133E (str.++ ch33E unch233E))))
(assert (= (str.++ preF (str.++ stem33 sufF)) (str.++ unch133F (str.++ ch33F unch233F))))
(assert (= "4inan" (str.++ unch133A (str.++ var33A unch233A))))
(assert (= "4inanta" (str.++ unch133B (str.++ var33B unch233B))))
(assert (= "4inano" (str.++ unch133C (str.++ var33C unch233C))))
(assert (= (str.len stem33) l33))
(assert (= (ite (= ch33A var33A) 0 1) sc33A))
(assert (= (ite (= ch33B var33B) 0 1) sc33B))
(assert (= (ite (= ch33C var33C) 0 1) sc33C))
(assert (= (ite (= ch33D var33D) 0 1) sc33D))
(assert (= (ite (= ch33E var33E) 0 1) sc33E))
(assert (= (ite (= ch33F var33F) 0 1) sc33F))
(assert (<= sc33A 1))
(assert (<= sc33B 1))
(assert (<= sc33C 1))
(assert (<= sc33D 1))
(assert (<= sc33E 1))
(assert (<= sc33F 1))
(assert (<= (str.len var34A) 1))
(assert (<= (str.len var34B) 1))
(assert (<= (str.len var34C) 1))
(assert (<= (str.len var34D) 1))
(assert (<= (str.len var34E) 1))
(assert (<= (str.len var34F) 1))
(assert (= (str.++ preA (str.++ stem34 sufA)) (str.++ unch134A (str.++ ch34A unch234A))))
(assert (= (str.++ preB (str.++ stem34 sufB)) (str.++ unch134B (str.++ ch34B unch234B))))
(assert (= (str.++ preC (str.++ stem34 sufC)) (str.++ unch134C (str.++ ch34C unch234C))))
(assert (= (str.++ preD (str.++ stem34 sufD)) (str.++ unch134D (str.++ ch34D unch234D))))
(assert (= (str.++ preE (str.++ stem34 sufE)) (str.++ unch134E (str.++ ch34E unch234E))))
(assert (= (str.++ preF (str.++ stem34 sufF)) (str.++ unch134F (str.++ ch34F unch234F))))
(assert (= "suOaj" (str.++ unch134D (str.++ var34D unch234D))))
(assert (= "sugtaj" (str.++ unch134E (str.++ var34E unch234E))))
(assert (= "sugnaj" (str.++ unch134F (str.++ var34F unch234F))))
(assert (= (str.len stem34) l34))
(assert (= (ite (= ch34A var34A) 0 1) sc34A))
(assert (= (ite (= ch34B var34B) 0 1) sc34B))
(assert (= (ite (= ch34C var34C) 0 1) sc34C))
(assert (= (ite (= ch34D var34D) 0 1) sc34D))
(assert (= (ite (= ch34E var34E) 0 1) sc34E))
(assert (= (ite (= ch34F var34F) 0 1) sc34F))
(assert (<= sc34A 1))
(assert (<= sc34B 1))
(assert (<= sc34C 1))
(assert (<= sc34D 1))
(assert (<= sc34E 1))
(assert (<= sc34F 1))
(assert (<= (str.len var35A) 1))
(assert (<= (str.len var35B) 1))
(assert (<= (str.len var35C) 1))
(assert (<= (str.len var35D) 1))
(assert (<= (str.len var35E) 1))
(assert (<= (str.len var35F) 1))
(assert (= (str.++ preA (str.++ stem35 sufA)) (str.++ unch135A (str.++ ch35A unch235A))))
(assert (= (str.++ preB (str.++ stem35 sufB)) (str.++ unch135B (str.++ ch35B unch235B))))
(assert (= (str.++ preC (str.++ stem35 sufC)) (str.++ unch135C (str.++ ch35C unch235C))))
(assert (= (str.++ preD (str.++ stem35 sufD)) (str.++ unch135D (str.++ ch35D unch235D))))
(assert (= (str.++ preE (str.++ stem35 sufE)) (str.++ unch135E (str.++ ch35E unch235E))))
(assert (= (str.++ preF (str.++ stem35 sufF)) (str.++ unch135F (str.++ ch35F unch235F))))
(assert (= "kaXaj" (str.++ unch135D (str.++ var35D unch235D))))
(assert (= "kabtaj" (str.++ unch135E (str.++ var35E unch235E))))
(assert (= "kabnaj" (str.++ unch135F (str.++ var35F unch235F))))
(assert (= (str.len stem35) l35))
(assert (= (ite (= ch35A var35A) 0 1) sc35A))
(assert (= (ite (= ch35B var35B) 0 1) sc35B))
(assert (= (ite (= ch35C var35C) 0 1) sc35C))
(assert (= (ite (= ch35D var35D) 0 1) sc35D))
(assert (= (ite (= ch35E var35E) 0 1) sc35E))
(assert (= (ite (= ch35F var35F) 0 1) sc35F))
(assert (<= sc35A 1))
(assert (<= sc35B 1))
(assert (<= sc35C 1))
(assert (<= sc35D 1))
(assert (<= sc35E 1))
(assert (<= sc35F 1))
(assert (<= (str.len var36A) 1))
(assert (<= (str.len var36B) 1))
(assert (<= (str.len var36C) 1))
(assert (<= (str.len var36D) 1))
(assert (<= (str.len var36E) 1))
(assert (<= (str.len var36F) 1))
(assert (= (str.++ preA (str.++ stem36 sufA)) (str.++ unch136A (str.++ ch36A unch236A))))
(assert (= (str.++ preB (str.++ stem36 sufB)) (str.++ unch136B (str.++ ch36B unch236B))))
(assert (= (str.++ preC (str.++ stem36 sufC)) (str.++ unch136C (str.++ ch36C unch236C))))
(assert (= (str.++ preD (str.++ stem36 sufD)) (str.++ unch136D (str.++ ch36D unch236D))))
(assert (= (str.++ preE (str.++ stem36 sufE)) (str.++ unch136E (str.++ ch36E unch236E))))
(assert (= (str.++ preF (str.++ stem36 sufF)) (str.++ unch136F (str.++ ch36F unch236F))))
(assert (= "siZaj" (str.++ unch136D (str.++ var36D unch236D))))
(assert (= "sidaj" (str.++ unch136E (str.++ var36E unch236E))))
(assert (= "sidnaj" (str.++ unch136F (str.++ var36F unch236F))))
(assert (= (str.len stem36) l36))
(assert (= (ite (= ch36A var36A) 0 1) sc36A))
(assert (= (ite (= ch36B var36B) 0 1) sc36B))
(assert (= (ite (= ch36C var36C) 0 1) sc36C))
(assert (= (ite (= ch36D var36D) 0 1) sc36D))
(assert (= (ite (= ch36E var36E) 0 1) sc36E))
(assert (= (ite (= ch36F var36F) 0 1) sc36F))
(assert (<= sc36A 1))
(assert (<= sc36B 1))
(assert (<= sc36C 1))
(assert (<= sc36D 1))
(assert (<= sc36E 1))
(assert (<= sc36F 1))
(assert (<= (str.len var37A) 1))
(assert (<= (str.len var37B) 1))
(assert (<= (str.len var37C) 1))
(assert (<= (str.len var37D) 1))
(assert (<= (str.len var37E) 1))
(assert (<= (str.len var37F) 1))
(assert (= (str.++ preA (str.++ stem37 sufA)) (str.++ unch137A (str.++ ch37A unch237A))))
(assert (= (str.++ preB (str.++ stem37 sufB)) (str.++ unch137B (str.++ ch37B unch237B))))
(assert (= (str.++ preC (str.++ stem37 sufC)) (str.++ unch137C (str.++ ch37C unch237C))))
(assert (= (str.++ preD (str.++ stem37 sufD)) (str.++ unch137D (str.++ ch37D unch237D))))
(assert (= (str.++ preE (str.++ stem37 sufE)) (str.++ unch137E (str.++ ch37E unch237E))))
(assert (= (str.++ preF (str.++ stem37 sufF)) (str.++ unch137F (str.++ ch37F unch237F))))
(assert (= "dilaj" (str.++ unch137D (str.++ var37D unch237D))))
(assert (= "diBaj" (str.++ unch137E (str.++ var37E unch237E))))
(assert (= "dillaj" (str.++ unch137F (str.++ var37F unch237F))))
(assert (= (str.len stem37) l37))
(assert (= (ite (= ch37A var37A) 0 1) sc37A))
(assert (= (ite (= ch37B var37B) 0 1) sc37B))
(assert (= (ite (= ch37C var37C) 0 1) sc37C))
(assert (= (ite (= ch37D var37D) 0 1) sc37D))
(assert (= (ite (= ch37E var37E) 0 1) sc37E))
(assert (= (ite (= ch37F var37F) 0 1) sc37F))
(assert (<= sc37A 1))
(assert (<= sc37B 1))
(assert (<= sc37C 1))
(assert (<= sc37D 1))
(assert (<= sc37E 1))
(assert (<= sc37F 1))
(assert (<= (str.len var38A) 1))
(assert (<= (str.len var38B) 1))
(assert (<= (str.len var38C) 1))
(assert (<= (str.len var38D) 1))
(assert (<= (str.len var38E) 1))
(assert (<= (str.len var38F) 1))
(assert (= (str.++ preA (str.++ stem38 sufA)) (str.++ unch138A (str.++ ch38A unch238A))))
(assert (= (str.++ preB (str.++ stem38 sufB)) (str.++ unch138B (str.++ ch38B unch238B))))
(assert (= (str.++ preC (str.++ stem38 sufC)) (str.++ unch138C (str.++ ch38C unch238C))))
(assert (= (str.++ preD (str.++ stem38 sufD)) (str.++ unch138D (str.++ ch38D unch238D))))
(assert (= (str.++ preE (str.++ stem38 sufE)) (str.++ unch138E (str.++ ch38E unch238E))))
(assert (= (str.++ preF (str.++ stem38 sufF)) (str.++ unch138F (str.++ ch38F unch238F))))
(assert (= "ganaj" (str.++ unch138D (str.++ var38D unch238D))))
(assert (= "gantaj" (str.++ unch138E (str.++ var38E unch238E))))
(assert (= "gannaj" (str.++ unch138F (str.++ var38F unch238F))))
(assert (= (str.len stem38) l38))
(assert (= (ite (= ch38A var38A) 0 1) sc38A))
(assert (= (ite (= ch38B var38B) 0 1) sc38B))
(assert (= (ite (= ch38C var38C) 0 1) sc38C))
(assert (= (ite (= ch38D var38D) 0 1) sc38D))
(assert (= (ite (= ch38E var38E) 0 1) sc38E))
(assert (= (ite (= ch38F var38F) 0 1) sc38F))
(assert (<= sc38A 1))
(assert (<= sc38B 1))
(assert (<= sc38C 1))
(assert (<= sc38D 1))
(assert (<= sc38E 1))
(assert (<= sc38F 1))
(assert (<= (str.len var39A) 1))
(assert (<= (str.len var39B) 1))
(assert (<= (str.len var39C) 1))
(assert (<= (str.len var39D) 1))
(assert (<= (str.len var39E) 1))
(assert (<= (str.len var39F) 1))
(assert (= (str.++ preA (str.++ stem39 sufA)) (str.++ unch139A (str.++ ch39A unch239A))))
(assert (= (str.++ preB (str.++ stem39 sufB)) (str.++ unch139B (str.++ ch39B unch239B))))
(assert (= (str.++ preC (str.++ stem39 sufC)) (str.++ unch139C (str.++ ch39C unch239C))))
(assert (= (str.++ preD (str.++ stem39 sufD)) (str.++ unch139D (str.++ ch39D unch239D))))
(assert (= (str.++ preE (str.++ stem39 sufE)) (str.++ unch139E (str.++ ch39E unch239E))))
(assert (= (str.++ preF (str.++ stem39 sufF)) (str.++ unch139F (str.++ ch39F unch239F))))
(assert (= "tumaj" (str.++ unch139D (str.++ var39D unch239D))))
(assert (= "tuntaj" (str.++ unch139E (str.++ var39E unch239E))))
(assert (= "tunnaj" (str.++ unch139F (str.++ var39F unch239F))))
(assert (= (str.len stem39) l39))
(assert (= (ite (= ch39A var39A) 0 1) sc39A))
(assert (= (ite (= ch39B var39B) 0 1) sc39B))
(assert (= (ite (= ch39C var39C) 0 1) sc39C))
(assert (= (ite (= ch39D var39D) 0 1) sc39D))
(assert (= (ite (= ch39E var39E) 0 1) sc39E))
(assert (= (ite (= ch39F var39F) 0 1) sc39F))
(assert (<= sc39A 1))
(assert (<= sc39B 1))
(assert (<= sc39C 1))
(assert (<= sc39D 1))
(assert (<= sc39E 1))
(assert (<= sc39F 1))
(assert (<= (str.len var40A) 1))
(assert (<= (str.len var40B) 1))
(assert (<= (str.len var40C) 1))
(assert (<= (str.len var40D) 1))
(assert (<= (str.len var40E) 1))
(assert (<= (str.len var40F) 1))
(assert (= (str.++ preA (str.++ stem40 sufA)) (str.++ unch140A (str.++ ch40A unch240A))))
(assert (= (str.++ preB (str.++ stem40 sufB)) (str.++ unch140B (str.++ ch40B unch240B))))
(assert (= (str.++ preC (str.++ stem40 sufC)) (str.++ unch140C (str.++ ch40C unch240C))))
(assert (= (str.++ preD (str.++ stem40 sufD)) (str.++ unch140D (str.++ ch40D unch240D))))
(assert (= (str.++ preE (str.++ stem40 sufE)) (str.++ unch140E (str.++ ch40E unch240E))))
(assert (= (str.++ preF (str.++ stem40 sufF)) (str.++ unch140F (str.++ ch40F unch240F))))
(assert (= "argaj" (str.++ unch140D (str.++ var40D unch240D))))
(assert (= "aragtaj" (str.++ unch140E (str.++ var40E unch240E))))
(assert (= "aragnaj" (str.++ unch140F (str.++ var40F unch240F))))
(assert (= (str.len stem40) l40))
(assert (= (ite (= ch40A var40A) 0 1) sc40A))
(assert (= (ite (= ch40B var40B) 0 1) sc40B))
(assert (= (ite (= ch40C var40C) 0 1) sc40C))
(assert (= (ite (= ch40D var40D) 0 1) sc40D))
(assert (= (ite (= ch40E var40E) 0 1) sc40E))
(assert (= (ite (= ch40F var40F) 0 1) sc40F))
(assert (<= sc40A 1))
(assert (<= sc40B 1))
(assert (<= sc40C 1))
(assert (<= sc40D 1))
(assert (<= sc40E 1))
(assert (<= sc40F 1))
(assert (<= (str.len var41A) 1))
(assert (<= (str.len var41B) 1))
(assert (<= (str.len var41C) 1))
(assert (<= (str.len var41D) 1))
(assert (<= (str.len var41E) 1))
(assert (<= (str.len var41F) 1))
(assert (= (str.++ preA (str.++ stem41 sufA)) (str.++ unch141A (str.++ ch41A unch241A))))
(assert (= (str.++ preB (str.++ stem41 sufB)) (str.++ unch141B (str.++ ch41B unch241B))))
(assert (= (str.++ preC (str.++ stem41 sufC)) (str.++ unch141C (str.++ ch41C unch241C))))
(assert (= (str.++ preD (str.++ stem41 sufD)) (str.++ unch141D (str.++ ch41D unch241D))))
(assert (= (str.++ preE (str.++ stem41 sufE)) (str.++ unch141E (str.++ ch41E unch241E))))
(assert (= (str.++ preF (str.++ stem41 sufF)) (str.++ unch141F (str.++ ch41F unch241F))))
(assert (= "gudbaj" (str.++ unch141D (str.++ var41D unch241D))))
(assert (= "guZubtaj" (str.++ unch141E (str.++ var41E unch241E))))
(assert (= "guZubnaj" (str.++ unch141F (str.++ var41F unch241F))))
(assert (= (str.len stem41) l41))
(assert (= (ite (= ch41A var41A) 0 1) sc41A))
(assert (= (ite (= ch41B var41B) 0 1) sc41B))
(assert (= (ite (= ch41C var41C) 0 1) sc41C))
(assert (= (ite (= ch41D var41D) 0 1) sc41D))
(assert (= (ite (= ch41E var41E) 0 1) sc41E))
(assert (= (ite (= ch41F var41F) 0 1) sc41F))
(assert (<= sc41A 1))
(assert (<= sc41B 1))
(assert (<= sc41C 1))
(assert (<= sc41D 1))
(assert (<= sc41E 1))
(assert (<= sc41F 1))
(assert (<= (str.len var42A) 1))
(assert (<= (str.len var42B) 1))
(assert (<= (str.len var42C) 1))
(assert (<= (str.len var42D) 1))
(assert (<= (str.len var42E) 1))
(assert (<= (str.len var42F) 1))
(assert (= (str.++ preA (str.++ stem42 sufA)) (str.++ unch142A (str.++ ch42A unch242A))))
(assert (= (str.++ preB (str.++ stem42 sufB)) (str.++ unch142B (str.++ ch42B unch242B))))
(assert (= (str.++ preC (str.++ stem42 sufC)) (str.++ unch142C (str.++ ch42C unch242C))))
(assert (= (str.++ preD (str.++ stem42 sufD)) (str.++ unch142D (str.++ ch42D unch242D))))
(assert (= (str.++ preE (str.++ stem42 sufE)) (str.++ unch142E (str.++ ch42E unch242E))))
(assert (= (str.++ preF (str.++ stem42 sufF)) (str.++ unch142F (str.++ ch42F unch242F))))
(assert (= "qoslaj" (str.++ unch142D (str.++ var42D unch242D))))
(assert (= "qosoBaj" (str.++ unch142E (str.++ var42E unch242E))))
(assert (= "qosollaj" (str.++ unch142F (str.++ var42F unch242F))))
(assert (= (str.len stem42) l42))
(assert (= (ite (= ch42A var42A) 0 1) sc42A))
(assert (= (ite (= ch42B var42B) 0 1) sc42B))
(assert (= (ite (= ch42C var42C) 0 1) sc42C))
(assert (= (ite (= ch42D var42D) 0 1) sc42D))
(assert (= (ite (= ch42E var42E) 0 1) sc42E))
(assert (= (ite (= ch42F var42F) 0 1) sc42F))
(assert (<= sc42A 1))
(assert (<= sc42B 1))
(assert (<= sc42C 1))
(assert (<= sc42D 1))
(assert (<= sc42E 1))
(assert (<= sc42F 1))
(assert (<= (str.len var43A) 1))
(assert (<= (str.len var43B) 1))
(assert (<= (str.len var43C) 1))
(assert (<= (str.len var43D) 1))
(assert (<= (str.len var43E) 1))
(assert (<= (str.len var43F) 1))
(assert (= (str.++ preA (str.++ stem43 sufA)) (str.++ unch143A (str.++ ch43A unch243A))))
(assert (= (str.++ preB (str.++ stem43 sufB)) (str.++ unch143B (str.++ ch43B unch243B))))
(assert (= (str.++ preC (str.++ stem43 sufC)) (str.++ unch143C (str.++ ch43C unch243C))))
(assert (= (str.++ preD (str.++ stem43 sufD)) (str.++ unch143D (str.++ ch43D unch243D))))
(assert (= (str.++ preE (str.++ stem43 sufE)) (str.++ unch143E (str.++ ch43E unch243E))))
(assert (= (str.++ preF (str.++ stem43 sufF)) (str.++ unch143F (str.++ ch43F unch243F))))
(assert (= "hadlaj" (str.++ unch143D (str.++ var43D unch243D))))
(assert (= "haZaBaj" (str.++ unch143E (str.++ var43E unch243E))))
(assert (= "haZallaj" (str.++ unch143F (str.++ var43F unch243F))))
(assert (= (str.len stem43) l43))
(assert (= (ite (= ch43A var43A) 0 1) sc43A))
(assert (= (ite (= ch43B var43B) 0 1) sc43B))
(assert (= (ite (= ch43C var43C) 0 1) sc43C))
(assert (= (ite (= ch43D var43D) 0 1) sc43D))
(assert (= (ite (= ch43E var43E) 0 1) sc43E))
(assert (= (ite (= ch43F var43F) 0 1) sc43F))
(assert (<= sc43A 1))
(assert (<= sc43B 1))
(assert (<= sc43C 1))
(assert (<= sc43D 1))
(assert (<= sc43E 1))
(assert (<= sc43F 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      0
      sc30A
      sc30B
      sc30C
      sc30D
      sc30E
      sc30F
      0
      sc31A
      sc31B
      sc31C
      sc31D
      sc31E
      sc31F
      0
      sc32A
      sc32B
      sc32C
      sc32D
      sc32E
      sc32F
      0
      sc33A
      sc33B
      sc33C
      sc33D
      sc33E
      sc33F
      0
      sc34A
      sc34B
      sc34C
      sc34D
      sc34E
      sc34F
      0
      sc35A
      sc35B
      sc35C
      sc35D
      sc35E
      sc35F
      0
      sc36A
      sc36B
      sc36C
      sc36D
      sc36E
      sc36F
      0
      sc37A
      sc37B
      sc37C
      sc37D
      sc37E
      sc37F
      0
      sc38A
      sc38B
      sc38C
      sc38D
      sc38E
      sc38F
      0
      sc39A
      sc39B
      sc39C
      sc39D
      sc39E
      sc39F
      0
      sc40A
      sc40B
      sc40C
      sc40D
      sc40E
      sc40F
      0
      sc41A
      sc41B
      sc41C
      sc41D
      sc41E
      sc41F
      0
      sc42A
      sc42B
      sc42C
      sc42D
      sc42E
      sc42F
      0
      sc43A
      sc43B
      sc43C
      sc43D
      sc43E
      sc43F)
   6))
(assert (= (+ 0
      sc0D
      sc1D
      sc2D
      sc3D
      sc4D
      sc5D
      sc6D
      sc7D
      sc8D
      sc9D
      sc10D
      sc11D
      sc12D
      sc13D
      sc14D
      sc15D
      sc16D
      sc17D
      sc18D
      sc19D
      sc20D
      sc21D
      sc22D
      sc23D
      sc24D
      sc25D
      sc26D
      sc27D
      sc28D
      sc29D
      sc30D
      sc31D
      sc32D
      sc33D
      sc34D
      sc35D
      sc36D
      sc37D
      sc38D
      sc39D
      sc40D
      sc41D
      sc42D
      sc43D)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun var30A () String)
(declare-fun var30B () String)
(declare-fun var30C () String)
(declare-fun var30D () String)
(declare-fun var30E () String)
(declare-fun var30F () String)
(declare-fun unch230A () String)
(declare-fun ch30A () String)
(declare-fun unch130A () String)
(declare-fun stem30 () String)
(declare-fun unch230B () String)
(declare-fun ch30B () String)
(declare-fun unch130B () String)
(declare-fun unch230C () String)
(declare-fun ch30C () String)
(declare-fun unch130C () String)
(declare-fun unch230D () String)
(declare-fun ch30D () String)
(declare-fun unch130D () String)
(declare-fun unch230E () String)
(declare-fun ch30E () String)
(declare-fun unch130E () String)
(declare-fun unch230F () String)
(declare-fun ch30F () String)
(declare-fun unch130F () String)
(declare-fun l30 () Int)
(declare-fun sc30A () Int)
(declare-fun sc30B () Int)
(declare-fun sc30C () Int)
(declare-fun sc30D () Int)
(declare-fun sc30E () Int)
(declare-fun sc30F () Int)
(declare-fun var31A () String)
(declare-fun var31B () String)
(declare-fun var31C () String)
(declare-fun var31D () String)
(declare-fun var31E () String)
(declare-fun var31F () String)
(declare-fun unch231A () String)
(declare-fun ch31A () String)
(declare-fun unch131A () String)
(declare-fun stem31 () String)
(declare-fun unch231B () String)
(declare-fun ch31B () String)
(declare-fun unch131B () String)
(declare-fun unch231C () String)
(declare-fun ch31C () String)
(declare-fun unch131C () String)
(declare-fun unch231D () String)
(declare-fun ch31D () String)
(declare-fun unch131D () String)
(declare-fun unch231E () String)
(declare-fun ch31E () String)
(declare-fun unch131E () String)
(declare-fun unch231F () String)
(declare-fun ch31F () String)
(declare-fun unch131F () String)
(declare-fun l31 () Int)
(declare-fun sc31A () Int)
(declare-fun sc31B () Int)
(declare-fun sc31C () Int)
(declare-fun sc31D () Int)
(declare-fun sc31E () Int)
(declare-fun sc31F () Int)
(declare-fun var32A () String)
(declare-fun var32B () String)
(declare-fun var32C () String)
(declare-fun var32D () String)
(declare-fun var32E () String)
(declare-fun var32F () String)
(declare-fun unch232A () String)
(declare-fun ch32A () String)
(declare-fun unch132A () String)
(declare-fun stem32 () String)
(declare-fun unch232B () String)
(declare-fun ch32B () String)
(declare-fun unch132B () String)
(declare-fun unch232C () String)
(declare-fun ch32C () String)
(declare-fun unch132C () String)
(declare-fun unch232D () String)
(declare-fun ch32D () String)
(declare-fun unch132D () String)
(declare-fun unch232E () String)
(declare-fun ch32E () String)
(declare-fun unch132E () String)
(declare-fun unch232F () String)
(declare-fun ch32F () String)
(declare-fun unch132F () String)
(declare-fun l32 () Int)
(declare-fun sc32A () Int)
(declare-fun sc32B () Int)
(declare-fun sc32C () Int)
(declare-fun sc32D () Int)
(declare-fun sc32E () Int)
(declare-fun sc32F () Int)
(declare-fun var33A () String)
(declare-fun var33B () String)
(declare-fun var33C () String)
(declare-fun var33D () String)
(declare-fun var33E () String)
(declare-fun var33F () String)
(declare-fun unch233A () String)
(declare-fun ch33A () String)
(declare-fun unch133A () String)
(declare-fun stem33 () String)
(declare-fun unch233B () String)
(declare-fun ch33B () String)
(declare-fun unch133B () String)
(declare-fun unch233C () String)
(declare-fun ch33C () String)
(declare-fun unch133C () String)
(declare-fun unch233D () String)
(declare-fun ch33D () String)
(declare-fun unch133D () String)
(declare-fun unch233E () String)
(declare-fun ch33E () String)
(declare-fun unch133E () String)
(declare-fun unch233F () String)
(declare-fun ch33F () String)
(declare-fun unch133F () String)
(declare-fun l33 () Int)
(declare-fun sc33A () Int)
(declare-fun sc33B () Int)
(declare-fun sc33C () Int)
(declare-fun sc33D () Int)
(declare-fun sc33E () Int)
(declare-fun sc33F () Int)
(declare-fun var34A () String)
(declare-fun var34B () String)
(declare-fun var34C () String)
(declare-fun var34D () String)
(declare-fun var34E () String)
(declare-fun var34F () String)
(declare-fun unch234A () String)
(declare-fun ch34A () String)
(declare-fun unch134A () String)
(declare-fun stem34 () String)
(declare-fun unch234B () String)
(declare-fun ch34B () String)
(declare-fun unch134B () String)
(declare-fun unch234C () String)
(declare-fun ch34C () String)
(declare-fun unch134C () String)
(declare-fun unch234D () String)
(declare-fun ch34D () String)
(declare-fun unch134D () String)
(declare-fun unch234E () String)
(declare-fun ch34E () String)
(declare-fun unch134E () String)
(declare-fun unch234F () String)
(declare-fun ch34F () String)
(declare-fun unch134F () String)
(declare-fun l34 () Int)
(declare-fun sc34A () Int)
(declare-fun sc34B () Int)
(declare-fun sc34C () Int)
(declare-fun sc34D () Int)
(declare-fun sc34E () Int)
(declare-fun sc34F () Int)
(declare-fun var35A () String)
(declare-fun var35B () String)
(declare-fun var35C () String)
(declare-fun var35D () String)
(declare-fun var35E () String)
(declare-fun var35F () String)
(declare-fun unch235A () String)
(declare-fun ch35A () String)
(declare-fun unch135A () String)
(declare-fun stem35 () String)
(declare-fun unch235B () String)
(declare-fun ch35B () String)
(declare-fun unch135B () String)
(declare-fun unch235C () String)
(declare-fun ch35C () String)
(declare-fun unch135C () String)
(declare-fun unch235D () String)
(declare-fun ch35D () String)
(declare-fun unch135D () String)
(declare-fun unch235E () String)
(declare-fun ch35E () String)
(declare-fun unch135E () String)
(declare-fun unch235F () String)
(declare-fun ch35F () String)
(declare-fun unch135F () String)
(declare-fun l35 () Int)
(declare-fun sc35A () Int)
(declare-fun sc35B () Int)
(declare-fun sc35C () Int)
(declare-fun sc35D () Int)
(declare-fun sc35E () Int)
(declare-fun sc35F () Int)
(declare-fun var36A () String)
(declare-fun var36B () String)
(declare-fun var36C () String)
(declare-fun var36D () String)
(declare-fun var36E () String)
(declare-fun var36F () String)
(declare-fun unch236A () String)
(declare-fun ch36A () String)
(declare-fun unch136A () String)
(declare-fun stem36 () String)
(declare-fun unch236B () String)
(declare-fun ch36B () String)
(declare-fun unch136B () String)
(declare-fun unch236C () String)
(declare-fun ch36C () String)
(declare-fun unch136C () String)
(declare-fun unch236D () String)
(declare-fun ch36D () String)
(declare-fun unch136D () String)
(declare-fun unch236E () String)
(declare-fun ch36E () String)
(declare-fun unch136E () String)
(declare-fun unch236F () String)
(declare-fun ch36F () String)
(declare-fun unch136F () String)
(declare-fun l36 () Int)
(declare-fun sc36A () Int)
(declare-fun sc36B () Int)
(declare-fun sc36C () Int)
(declare-fun sc36D () Int)
(declare-fun sc36E () Int)
(declare-fun sc36F () Int)
(declare-fun var37A () String)
(declare-fun var37B () String)
(declare-fun var37C () String)
(declare-fun var37D () String)
(declare-fun var37E () String)
(declare-fun var37F () String)
(declare-fun unch237A () String)
(declare-fun ch37A () String)
(declare-fun unch137A () String)
(declare-fun stem37 () String)
(declare-fun unch237B () String)
(declare-fun ch37B () String)
(declare-fun unch137B () String)
(declare-fun unch237C () String)
(declare-fun ch37C () String)
(declare-fun unch137C () String)
(declare-fun unch237D () String)
(declare-fun ch37D () String)
(declare-fun unch137D () String)
(declare-fun unch237E () String)
(declare-fun ch37E () String)
(declare-fun unch137E () String)
(declare-fun unch237F () String)
(declare-fun ch37F () String)
(declare-fun unch137F () String)
(declare-fun l37 () Int)
(declare-fun sc37A () Int)
(declare-fun sc37B () Int)
(declare-fun sc37C () Int)
(declare-fun sc37D () Int)
(declare-fun sc37E () Int)
(declare-fun sc37F () Int)
(declare-fun var38A () String)
(declare-fun var38B () String)
(declare-fun var38C () String)
(declare-fun var38D () String)
(declare-fun var38E () String)
(declare-fun var38F () String)
(declare-fun unch238A () String)
(declare-fun ch38A () String)
(declare-fun unch138A () String)
(declare-fun stem38 () String)
(declare-fun unch238B () String)
(declare-fun ch38B () String)
(declare-fun unch138B () String)
(declare-fun unch238C () String)
(declare-fun ch38C () String)
(declare-fun unch138C () String)
(declare-fun unch238D () String)
(declare-fun ch38D () String)
(declare-fun unch138D () String)
(declare-fun unch238E () String)
(declare-fun ch38E () String)
(declare-fun unch138E () String)
(declare-fun unch238F () String)
(declare-fun ch38F () String)
(declare-fun unch138F () String)
(declare-fun l38 () Int)
(declare-fun sc38A () Int)
(declare-fun sc38B () Int)
(declare-fun sc38C () Int)
(declare-fun sc38D () Int)
(declare-fun sc38E () Int)
(declare-fun sc38F () Int)
(declare-fun var39A () String)
(declare-fun var39B () String)
(declare-fun var39C () String)
(declare-fun var39D () String)
(declare-fun var39E () String)
(declare-fun var39F () String)
(declare-fun unch239A () String)
(declare-fun ch39A () String)
(declare-fun unch139A () String)
(declare-fun stem39 () String)
(declare-fun unch239B () String)
(declare-fun ch39B () String)
(declare-fun unch139B () String)
(declare-fun unch239C () String)
(declare-fun ch39C () String)
(declare-fun unch139C () String)
(declare-fun unch239D () String)
(declare-fun ch39D () String)
(declare-fun unch139D () String)
(declare-fun unch239E () String)
(declare-fun ch39E () String)
(declare-fun unch139E () String)
(declare-fun unch239F () String)
(declare-fun ch39F () String)
(declare-fun unch139F () String)
(declare-fun l39 () Int)
(declare-fun sc39A () Int)
(declare-fun sc39B () Int)
(declare-fun sc39C () Int)
(declare-fun sc39D () Int)
(declare-fun sc39E () Int)
(declare-fun sc39F () Int)
(declare-fun var40A () String)
(declare-fun var40B () String)
(declare-fun var40C () String)
(declare-fun var40D () String)
(declare-fun var40E () String)
(declare-fun var40F () String)
(declare-fun unch240A () String)
(declare-fun ch40A () String)
(declare-fun unch140A () String)
(declare-fun stem40 () String)
(declare-fun unch240B () String)
(declare-fun ch40B () String)
(declare-fun unch140B () String)
(declare-fun unch240C () String)
(declare-fun ch40C () String)
(declare-fun unch140C () String)
(declare-fun unch240D () String)
(declare-fun ch40D () String)
(declare-fun unch140D () String)
(declare-fun unch240E () String)
(declare-fun ch40E () String)
(declare-fun unch140E () String)
(declare-fun unch240F () String)
(declare-fun ch40F () String)
(declare-fun unch140F () String)
(declare-fun l40 () Int)
(declare-fun sc40A () Int)
(declare-fun sc40B () Int)
(declare-fun sc40C () Int)
(declare-fun sc40D () Int)
(declare-fun sc40E () Int)
(declare-fun sc40F () Int)
(declare-fun var41A () String)
(declare-fun var41B () String)
(declare-fun var41C () String)
(declare-fun var41D () String)
(declare-fun var41E () String)
(declare-fun var41F () String)
(declare-fun unch241A () String)
(declare-fun ch41A () String)
(declare-fun unch141A () String)
(declare-fun stem41 () String)
(declare-fun unch241B () String)
(declare-fun ch41B () String)
(declare-fun unch141B () String)
(declare-fun unch241C () String)
(declare-fun ch41C () String)
(declare-fun unch141C () String)
(declare-fun unch241D () String)
(declare-fun ch41D () String)
(declare-fun unch141D () String)
(declare-fun unch241E () String)
(declare-fun ch41E () String)
(declare-fun unch141E () String)
(declare-fun unch241F () String)
(declare-fun ch41F () String)
(declare-fun unch141F () String)
(declare-fun l41 () Int)
(declare-fun sc41A () Int)
(declare-fun sc41B () Int)
(declare-fun sc41C () Int)
(declare-fun sc41D () Int)
(declare-fun sc41E () Int)
(declare-fun sc41F () Int)
(declare-fun var42A () String)
(declare-fun var42B () String)
(declare-fun var42C () String)
(declare-fun var42D () String)
(declare-fun var42E () String)
(declare-fun var42F () String)
(declare-fun unch242A () String)
(declare-fun ch42A () String)
(declare-fun unch142A () String)
(declare-fun stem42 () String)
(declare-fun unch242B () String)
(declare-fun ch42B () String)
(declare-fun unch142B () String)
(declare-fun unch242C () String)
(declare-fun ch42C () String)
(declare-fun unch142C () String)
(declare-fun unch242D () String)
(declare-fun ch42D () String)
(declare-fun unch142D () String)
(declare-fun unch242E () String)
(declare-fun ch42E () String)
(declare-fun unch142E () String)
(declare-fun unch242F () String)
(declare-fun ch42F () String)
(declare-fun unch142F () String)
(declare-fun l42 () Int)
(declare-fun sc42A () Int)
(declare-fun sc42B () Int)
(declare-fun sc42C () Int)
(declare-fun sc42D () Int)
(declare-fun sc42E () Int)
(declare-fun sc42F () Int)
(declare-fun var43A () String)
(declare-fun var43B () String)
(declare-fun var43C () String)
(declare-fun var43D () String)
(declare-fun var43E () String)
(declare-fun var43F () String)
(declare-fun unch243A () String)
(declare-fun ch43A () String)
(declare-fun unch143A () String)
(declare-fun stem43 () String)
(declare-fun unch243B () String)
(declare-fun ch43B () String)
(declare-fun unch143B () String)
(declare-fun unch243C () String)
(declare-fun ch43C () String)
(declare-fun unch143C () String)
(declare-fun unch243D () String)
(declare-fun ch43D () String)
(declare-fun unch143D () String)
(declare-fun unch243E () String)
(declare-fun ch43E () String)
(declare-fun unch143E () String)
(declare-fun unch243F () String)
(declare-fun ch43F () String)
(declare-fun unch143F () String)
(declare-fun l43 () Int)
(declare-fun sc43A () Int)
(declare-fun sc43B () Int)
(declare-fun sc43C () Int)
(declare-fun sc43D () Int)
(declare-fun sc43E () Int)
(declare-fun sc43F () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= "daar" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "daarta" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "daaro" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= "gees" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "geesta" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "geeso" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= "laf" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "lafta" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "lafo" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= "lug" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "lugta" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "luOo" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= "naag" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "naagta" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "naaOo" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= "tib" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "tibta" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "tiXo" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= "sab" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "sabta" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "saXo" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= "bad" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "bada" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "baZo" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= "Bid" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "Bida" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "BiZo" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= "fee1" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "fee1a" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "fee2o" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= "3iir" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "3iirta" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "3iiro" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= "4ul" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "4uBa" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "4ulo" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= "bil" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "biBa" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "bilo" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= "meel" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "meeBa" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "meelo" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= "kaliil" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "kaliiBa" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "kaliilo" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= "najl" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "najBa" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "najlo" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= "sun" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "sunta" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "sumo" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= "laan" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "laanta" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "laamo" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= "sin" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "sinta" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "simo" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= "dan" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "danta" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "dano" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= "daan" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "daanta" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "daano" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= "saan" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "saanta" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "saano" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= "nirig" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "nirigta" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "nirgo" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= "gaXa1" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= "gaXa1a" (str.++ unch123B (str.++ var23B unch223B))))
(assert (= "gab1o" (str.++ unch123C (str.++ var23C unch223C))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= "hoOol" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= "hoOoBa" (str.++ unch124B (str.++ var24B unch224B))))
(assert (= "hoglo" (str.++ unch124C (str.++ var24C unch224C))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= "baOal" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= "baOaBa" (str.++ unch125B (str.++ var25B unch225B))))
(assert (= "baglo" (str.++ unch125C (str.++ var25C unch225C))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= "wa5ar" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= "wa5arta" (str.++ unch126B (str.++ var26B unch226B))))
(assert (= "wa5aro" (str.++ unch126C (str.++ var26C unch226C))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= "irbad" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= "irbada" (str.++ unch127B (str.++ var27B unch227B))))
(assert (= "irbaZo" (str.++ unch127C (str.++ var27C unch227C))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= "kefed" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= "kefeda" (str.++ unch128B (str.++ var28B unch228B))))
(assert (= "kefeZo" (str.++ unch128C (str.++ var28C unch228C))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= "Bilin" (str.++ unch129A (str.++ var29A unch229A))))
(assert (= "Bilinta" (str.++ unch129B (str.++ var29B unch229B))))
(assert (= "Bilino" (str.++ unch129C (str.++ var29C unch229C))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= (str.len var30A) 1))
(assert (<= (str.len var30B) 1))
(assert (<= (str.len var30C) 1))
(assert (<= (str.len var30D) 1))
(assert (<= (str.len var30E) 1))
(assert (<= (str.len var30F) 1))
(assert (= (str.++ preA (str.++ stem30 sufA)) (str.++ unch130A (str.++ ch30A unch230A))))
(assert (= (str.++ preB (str.++ stem30 sufB)) (str.++ unch130B (str.++ ch30B unch230B))))
(assert (= (str.++ preC (str.++ stem30 sufC)) (str.++ unch130C (str.++ ch30C unch230C))))
(assert (= (str.++ preD (str.++ stem30 sufD)) (str.++ unch130D (str.++ ch30D unch230D))))
(assert (= (str.++ preE (str.++ stem30 sufE)) (str.++ unch130E (str.++ ch30E unch230E))))
(assert (= (str.++ preF (str.++ stem30 sufF)) (str.++ unch130F (str.++ ch30F unch230F))))
(assert (= "bohol" (str.++ unch130A (str.++ var30A unch230A))))
(assert (= "bohoBa" (str.++ unch130B (str.++ var30B unch230B))))
(assert (= "boholo" (str.++ unch130C (str.++ var30C unch230C))))
(assert (= (str.len stem30) l30))
(assert (= (ite (= ch30A var30A) 0 1) sc30A))
(assert (= (ite (= ch30B var30B) 0 1) sc30B))
(assert (= (ite (= ch30C var30C) 0 1) sc30C))
(assert (= (ite (= ch30D var30D) 0 1) sc30D))
(assert (= (ite (= ch30E var30E) 0 1) sc30E))
(assert (= (ite (= ch30F var30F) 0 1) sc30F))
(assert (<= sc30A 1))
(assert (<= sc30B 1))
(assert (<= sc30C 1))
(assert (<= sc30D 1))
(assert (<= sc30E 1))
(assert (<= sc30F 1))
(assert (<= (str.len var31A) 1))
(assert (<= (str.len var31B) 1))
(assert (<= (str.len var31C) 1))
(assert (<= (str.len var31D) 1))
(assert (<= (str.len var31E) 1))
(assert (<= (str.len var31F) 1))
(assert (= (str.++ preA (str.++ stem31 sufA)) (str.++ unch131A (str.++ ch31A unch231A))))
(assert (= (str.++ preB (str.++ stem31 sufB)) (str.++ unch131B (str.++ ch31B unch231B))))
(assert (= (str.++ preC (str.++ stem31 sufC)) (str.++ unch131C (str.++ ch31C unch231C))))
(assert (= (str.++ preD (str.++ stem31 sufD)) (str.++ unch131D (str.++ ch31D unch231D))))
(assert (= (str.++ preE (str.++ stem31 sufE)) (str.++ unch131E (str.++ ch31E unch231E))))
(assert (= (str.++ preF (str.++ stem31 sufF)) (str.++ unch131F (str.++ ch31F unch231F))))
(assert (= "4aajad" (str.++ unch131A (str.++ var31A unch231A))))
(assert (= "4aajada" (str.++ unch131B (str.++ var31B unch231B))))
(assert (= "4aajaZo" (str.++ unch131C (str.++ var31C unch231C))))
(assert (= (str.len stem31) l31))
(assert (= (ite (= ch31A var31A) 0 1) sc31A))
(assert (= (ite (= ch31B var31B) 0 1) sc31B))
(assert (= (ite (= ch31C var31C) 0 1) sc31C))
(assert (= (ite (= ch31D var31D) 0 1) sc31D))
(assert (= (ite (= ch31E var31E) 0 1) sc31E))
(assert (= (ite (= ch31F var31F) 0 1) sc31F))
(assert (<= sc31A 1))
(assert (<= sc31B 1))
(assert (<= sc31C 1))
(assert (<= sc31D 1))
(assert (<= sc31E 1))
(assert (<= sc31F 1))
(assert (<= (str.len var32A) 1))
(assert (<= (str.len var32B) 1))
(assert (<= (str.len var32C) 1))
(assert (<= (str.len var32D) 1))
(assert (<= (str.len var32E) 1))
(assert (<= (str.len var32F) 1))
(assert (= (str.++ preA (str.++ stem32 sufA)) (str.++ unch132A (str.++ ch32A unch232A))))
(assert (= (str.++ preB (str.++ stem32 sufB)) (str.++ unch132B (str.++ ch32B unch232B))))
(assert (= (str.++ preC (str.++ stem32 sufC)) (str.++ unch132C (str.++ ch32C unch232C))))
(assert (= (str.++ preD (str.++ stem32 sufD)) (str.++ unch132D (str.++ ch32D unch232D))))
(assert (= (str.++ preE (str.++ stem32 sufE)) (str.++ unch132E (str.++ ch32E unch232E))))
(assert (= (str.++ preF (str.++ stem32 sufF)) (str.++ unch132F (str.++ ch32F unch232F))))
(assert (= "ga3an" (str.++ unch132A (str.++ var32A unch232A))))
(assert (= "ga3anta" (str.++ unch132B (str.++ var32B unch232B))))
(assert (= "ga3mo" (str.++ unch132C (str.++ var32C unch232C))))
(assert (= (str.len stem32) l32))
(assert (= (ite (= ch32A var32A) 0 1) sc32A))
(assert (= (ite (= ch32B var32B) 0 1) sc32B))
(assert (= (ite (= ch32C var32C) 0 1) sc32C))
(assert (= (ite (= ch32D var32D) 0 1) sc32D))
(assert (= (ite (= ch32E var32E) 0 1) sc32E))
(assert (= (ite (= ch32F var32F) 0 1) sc32F))
(assert (<= sc32A 1))
(assert (<= sc32B 1))
(assert (<= sc32C 1))
(assert (<= sc32D 1))
(assert (<= sc32E 1))
(assert (<= sc32F 1))
(assert (<= (str.len var33A) 1))
(assert (<= (str.len var33B) 1))
(assert (<= (str.len var33C) 1))
(assert (<= (str.len var33D) 1))
(assert (<= (str.len var33E) 1))
(assert (<= (str.len var33F) 1))
(assert (= (str.++ preA (str.++ stem33 sufA)) (str.++ unch133A (str.++ ch33A unch233A))))
(assert (= (str.++ preB (str.++ stem33 sufB)) (str.++ unch133B (str.++ ch33B unch233B))))
(assert (= (str.++ preC (str.++ stem33 sufC)) (str.++ unch133C (str.++ ch33C unch233C))))
(assert (= (str.++ preD (str.++ stem33 sufD)) (str.++ unch133D (str.++ ch33D unch233D))))
(assert (= (str.++ preE (str.++ stem33 sufE)) (str.++ unch133E (str.++ ch33E unch233E))))
(assert (= (str.++ preF (str.++ stem33 sufF)) (str.++ unch133F (str.++ ch33F unch233F))))
(assert (= "4inan" (str.++ unch133A (str.++ var33A unch233A))))
(assert (= "4inanta" (str.++ unch133B (str.++ var33B unch233B))))
(assert (= "4inano" (str.++ unch133C (str.++ var33C unch233C))))
(assert (= (str.len stem33) l33))
(assert (= (ite (= ch33A var33A) 0 1) sc33A))
(assert (= (ite (= ch33B var33B) 0 1) sc33B))
(assert (= (ite (= ch33C var33C) 0 1) sc33C))
(assert (= (ite (= ch33D var33D) 0 1) sc33D))
(assert (= (ite (= ch33E var33E) 0 1) sc33E))
(assert (= (ite (= ch33F var33F) 0 1) sc33F))
(assert (<= sc33A 1))
(assert (<= sc33B 1))
(assert (<= sc33C 1))
(assert (<= sc33D 1))
(assert (<= sc33E 1))
(assert (<= sc33F 1))
(assert (<= (str.len var34A) 1))
(assert (<= (str.len var34B) 1))
(assert (<= (str.len var34C) 1))
(assert (<= (str.len var34D) 1))
(assert (<= (str.len var34E) 1))
(assert (<= (str.len var34F) 1))
(assert (= (str.++ preA (str.++ stem34 sufA)) (str.++ unch134A (str.++ ch34A unch234A))))
(assert (= (str.++ preB (str.++ stem34 sufB)) (str.++ unch134B (str.++ ch34B unch234B))))
(assert (= (str.++ preC (str.++ stem34 sufC)) (str.++ unch134C (str.++ ch34C unch234C))))
(assert (= (str.++ preD (str.++ stem34 sufD)) (str.++ unch134D (str.++ ch34D unch234D))))
(assert (= (str.++ preE (str.++ stem34 sufE)) (str.++ unch134E (str.++ ch34E unch234E))))
(assert (= (str.++ preF (str.++ stem34 sufF)) (str.++ unch134F (str.++ ch34F unch234F))))
(assert (= "suOaj" (str.++ unch134D (str.++ var34D unch234D))))
(assert (= "sugtaj" (str.++ unch134E (str.++ var34E unch234E))))
(assert (= "sugnaj" (str.++ unch134F (str.++ var34F unch234F))))
(assert (= (str.len stem34) l34))
(assert (= (ite (= ch34A var34A) 0 1) sc34A))
(assert (= (ite (= ch34B var34B) 0 1) sc34B))
(assert (= (ite (= ch34C var34C) 0 1) sc34C))
(assert (= (ite (= ch34D var34D) 0 1) sc34D))
(assert (= (ite (= ch34E var34E) 0 1) sc34E))
(assert (= (ite (= ch34F var34F) 0 1) sc34F))
(assert (<= sc34A 1))
(assert (<= sc34B 1))
(assert (<= sc34C 1))
(assert (<= sc34D 1))
(assert (<= sc34E 1))
(assert (<= sc34F 1))
(assert (<= (str.len var35A) 1))
(assert (<= (str.len var35B) 1))
(assert (<= (str.len var35C) 1))
(assert (<= (str.len var35D) 1))
(assert (<= (str.len var35E) 1))
(assert (<= (str.len var35F) 1))
(assert (= (str.++ preA (str.++ stem35 sufA)) (str.++ unch135A (str.++ ch35A unch235A))))
(assert (= (str.++ preB (str.++ stem35 sufB)) (str.++ unch135B (str.++ ch35B unch235B))))
(assert (= (str.++ preC (str.++ stem35 sufC)) (str.++ unch135C (str.++ ch35C unch235C))))
(assert (= (str.++ preD (str.++ stem35 sufD)) (str.++ unch135D (str.++ ch35D unch235D))))
(assert (= (str.++ preE (str.++ stem35 sufE)) (str.++ unch135E (str.++ ch35E unch235E))))
(assert (= (str.++ preF (str.++ stem35 sufF)) (str.++ unch135F (str.++ ch35F unch235F))))
(assert (= "kaXaj" (str.++ unch135D (str.++ var35D unch235D))))
(assert (= "kabtaj" (str.++ unch135E (str.++ var35E unch235E))))
(assert (= "kabnaj" (str.++ unch135F (str.++ var35F unch235F))))
(assert (= (str.len stem35) l35))
(assert (= (ite (= ch35A var35A) 0 1) sc35A))
(assert (= (ite (= ch35B var35B) 0 1) sc35B))
(assert (= (ite (= ch35C var35C) 0 1) sc35C))
(assert (= (ite (= ch35D var35D) 0 1) sc35D))
(assert (= (ite (= ch35E var35E) 0 1) sc35E))
(assert (= (ite (= ch35F var35F) 0 1) sc35F))
(assert (<= sc35A 1))
(assert (<= sc35B 1))
(assert (<= sc35C 1))
(assert (<= sc35D 1))
(assert (<= sc35E 1))
(assert (<= sc35F 1))
(assert (<= (str.len var36A) 1))
(assert (<= (str.len var36B) 1))
(assert (<= (str.len var36C) 1))
(assert (<= (str.len var36D) 1))
(assert (<= (str.len var36E) 1))
(assert (<= (str.len var36F) 1))
(assert (= (str.++ preA (str.++ stem36 sufA)) (str.++ unch136A (str.++ ch36A unch236A))))
(assert (= (str.++ preB (str.++ stem36 sufB)) (str.++ unch136B (str.++ ch36B unch236B))))
(assert (= (str.++ preC (str.++ stem36 sufC)) (str.++ unch136C (str.++ ch36C unch236C))))
(assert (= (str.++ preD (str.++ stem36 sufD)) (str.++ unch136D (str.++ ch36D unch236D))))
(assert (= (str.++ preE (str.++ stem36 sufE)) (str.++ unch136E (str.++ ch36E unch236E))))
(assert (= (str.++ preF (str.++ stem36 sufF)) (str.++ unch136F (str.++ ch36F unch236F))))
(assert (= "siZaj" (str.++ unch136D (str.++ var36D unch236D))))
(assert (= "sidaj" (str.++ unch136E (str.++ var36E unch236E))))
(assert (= "sidnaj" (str.++ unch136F (str.++ var36F unch236F))))
(assert (= (str.len stem36) l36))
(assert (= (ite (= ch36A var36A) 0 1) sc36A))
(assert (= (ite (= ch36B var36B) 0 1) sc36B))
(assert (= (ite (= ch36C var36C) 0 1) sc36C))
(assert (= (ite (= ch36D var36D) 0 1) sc36D))
(assert (= (ite (= ch36E var36E) 0 1) sc36E))
(assert (= (ite (= ch36F var36F) 0 1) sc36F))
(assert (<= sc36A 1))
(assert (<= sc36B 1))
(assert (<= sc36C 1))
(assert (<= sc36D 1))
(assert (<= sc36E 1))
(assert (<= sc36F 1))
(assert (<= (str.len var37A) 1))
(assert (<= (str.len var37B) 1))
(assert (<= (str.len var37C) 1))
(assert (<= (str.len var37D) 1))
(assert (<= (str.len var37E) 1))
(assert (<= (str.len var37F) 1))
(assert (= (str.++ preA (str.++ stem37 sufA)) (str.++ unch137A (str.++ ch37A unch237A))))
(assert (= (str.++ preB (str.++ stem37 sufB)) (str.++ unch137B (str.++ ch37B unch237B))))
(assert (= (str.++ preC (str.++ stem37 sufC)) (str.++ unch137C (str.++ ch37C unch237C))))
(assert (= (str.++ preD (str.++ stem37 sufD)) (str.++ unch137D (str.++ ch37D unch237D))))
(assert (= (str.++ preE (str.++ stem37 sufE)) (str.++ unch137E (str.++ ch37E unch237E))))
(assert (= (str.++ preF (str.++ stem37 sufF)) (str.++ unch137F (str.++ ch37F unch237F))))
(assert (= "dilaj" (str.++ unch137D (str.++ var37D unch237D))))
(assert (= "diBaj" (str.++ unch137E (str.++ var37E unch237E))))
(assert (= "dillaj" (str.++ unch137F (str.++ var37F unch237F))))
(assert (= (str.len stem37) l37))
(assert (= (ite (= ch37A var37A) 0 1) sc37A))
(assert (= (ite (= ch37B var37B) 0 1) sc37B))
(assert (= (ite (= ch37C var37C) 0 1) sc37C))
(assert (= (ite (= ch37D var37D) 0 1) sc37D))
(assert (= (ite (= ch37E var37E) 0 1) sc37E))
(assert (= (ite (= ch37F var37F) 0 1) sc37F))
(assert (<= sc37A 1))
(assert (<= sc37B 1))
(assert (<= sc37C 1))
(assert (<= sc37D 1))
(assert (<= sc37E 1))
(assert (<= sc37F 1))
(assert (<= (str.len var38A) 1))
(assert (<= (str.len var38B) 1))
(assert (<= (str.len var38C) 1))
(assert (<= (str.len var38D) 1))
(assert (<= (str.len var38E) 1))
(assert (<= (str.len var38F) 1))
(assert (= (str.++ preA (str.++ stem38 sufA)) (str.++ unch138A (str.++ ch38A unch238A))))
(assert (= (str.++ preB (str.++ stem38 sufB)) (str.++ unch138B (str.++ ch38B unch238B))))
(assert (= (str.++ preC (str.++ stem38 sufC)) (str.++ unch138C (str.++ ch38C unch238C))))
(assert (= (str.++ preD (str.++ stem38 sufD)) (str.++ unch138D (str.++ ch38D unch238D))))
(assert (= (str.++ preE (str.++ stem38 sufE)) (str.++ unch138E (str.++ ch38E unch238E))))
(assert (= (str.++ preF (str.++ stem38 sufF)) (str.++ unch138F (str.++ ch38F unch238F))))
(assert (= "ganaj" (str.++ unch138D (str.++ var38D unch238D))))
(assert (= "gantaj" (str.++ unch138E (str.++ var38E unch238E))))
(assert (= "gannaj" (str.++ unch138F (str.++ var38F unch238F))))
(assert (= (str.len stem38) l38))
(assert (= (ite (= ch38A var38A) 0 1) sc38A))
(assert (= (ite (= ch38B var38B) 0 1) sc38B))
(assert (= (ite (= ch38C var38C) 0 1) sc38C))
(assert (= (ite (= ch38D var38D) 0 1) sc38D))
(assert (= (ite (= ch38E var38E) 0 1) sc38E))
(assert (= (ite (= ch38F var38F) 0 1) sc38F))
(assert (<= sc38A 1))
(assert (<= sc38B 1))
(assert (<= sc38C 1))
(assert (<= sc38D 1))
(assert (<= sc38E 1))
(assert (<= sc38F 1))
(assert (<= (str.len var39A) 1))
(assert (<= (str.len var39B) 1))
(assert (<= (str.len var39C) 1))
(assert (<= (str.len var39D) 1))
(assert (<= (str.len var39E) 1))
(assert (<= (str.len var39F) 1))
(assert (= (str.++ preA (str.++ stem39 sufA)) (str.++ unch139A (str.++ ch39A unch239A))))
(assert (= (str.++ preB (str.++ stem39 sufB)) (str.++ unch139B (str.++ ch39B unch239B))))
(assert (= (str.++ preC (str.++ stem39 sufC)) (str.++ unch139C (str.++ ch39C unch239C))))
(assert (= (str.++ preD (str.++ stem39 sufD)) (str.++ unch139D (str.++ ch39D unch239D))))
(assert (= (str.++ preE (str.++ stem39 sufE)) (str.++ unch139E (str.++ ch39E unch239E))))
(assert (= (str.++ preF (str.++ stem39 sufF)) (str.++ unch139F (str.++ ch39F unch239F))))
(assert (= "tumaj" (str.++ unch139D (str.++ var39D unch239D))))
(assert (= "tuntaj" (str.++ unch139E (str.++ var39E unch239E))))
(assert (= "tunnaj" (str.++ unch139F (str.++ var39F unch239F))))
(assert (= (str.len stem39) l39))
(assert (= (ite (= ch39A var39A) 0 1) sc39A))
(assert (= (ite (= ch39B var39B) 0 1) sc39B))
(assert (= (ite (= ch39C var39C) 0 1) sc39C))
(assert (= (ite (= ch39D var39D) 0 1) sc39D))
(assert (= (ite (= ch39E var39E) 0 1) sc39E))
(assert (= (ite (= ch39F var39F) 0 1) sc39F))
(assert (<= sc39A 1))
(assert (<= sc39B 1))
(assert (<= sc39C 1))
(assert (<= sc39D 1))
(assert (<= sc39E 1))
(assert (<= sc39F 1))
(assert (<= (str.len var40A) 1))
(assert (<= (str.len var40B) 1))
(assert (<= (str.len var40C) 1))
(assert (<= (str.len var40D) 1))
(assert (<= (str.len var40E) 1))
(assert (<= (str.len var40F) 1))
(assert (= (str.++ preA (str.++ stem40 sufA)) (str.++ unch140A (str.++ ch40A unch240A))))
(assert (= (str.++ preB (str.++ stem40 sufB)) (str.++ unch140B (str.++ ch40B unch240B))))
(assert (= (str.++ preC (str.++ stem40 sufC)) (str.++ unch140C (str.++ ch40C unch240C))))
(assert (= (str.++ preD (str.++ stem40 sufD)) (str.++ unch140D (str.++ ch40D unch240D))))
(assert (= (str.++ preE (str.++ stem40 sufE)) (str.++ unch140E (str.++ ch40E unch240E))))
(assert (= (str.++ preF (str.++ stem40 sufF)) (str.++ unch140F (str.++ ch40F unch240F))))
(assert (= "argaj" (str.++ unch140D (str.++ var40D unch240D))))
(assert (= "aragtaj" (str.++ unch140E (str.++ var40E unch240E))))
(assert (= "aragnaj" (str.++ unch140F (str.++ var40F unch240F))))
(assert (= (str.len stem40) l40))
(assert (= (ite (= ch40A var40A) 0 1) sc40A))
(assert (= (ite (= ch40B var40B) 0 1) sc40B))
(assert (= (ite (= ch40C var40C) 0 1) sc40C))
(assert (= (ite (= ch40D var40D) 0 1) sc40D))
(assert (= (ite (= ch40E var40E) 0 1) sc40E))
(assert (= (ite (= ch40F var40F) 0 1) sc40F))
(assert (<= sc40A 1))
(assert (<= sc40B 1))
(assert (<= sc40C 1))
(assert (<= sc40D 1))
(assert (<= sc40E 1))
(assert (<= sc40F 1))
(assert (<= (str.len var41A) 1))
(assert (<= (str.len var41B) 1))
(assert (<= (str.len var41C) 1))
(assert (<= (str.len var41D) 1))
(assert (<= (str.len var41E) 1))
(assert (<= (str.len var41F) 1))
(assert (= (str.++ preA (str.++ stem41 sufA)) (str.++ unch141A (str.++ ch41A unch241A))))
(assert (= (str.++ preB (str.++ stem41 sufB)) (str.++ unch141B (str.++ ch41B unch241B))))
(assert (= (str.++ preC (str.++ stem41 sufC)) (str.++ unch141C (str.++ ch41C unch241C))))
(assert (= (str.++ preD (str.++ stem41 sufD)) (str.++ unch141D (str.++ ch41D unch241D))))
(assert (= (str.++ preE (str.++ stem41 sufE)) (str.++ unch141E (str.++ ch41E unch241E))))
(assert (= (str.++ preF (str.++ stem41 sufF)) (str.++ unch141F (str.++ ch41F unch241F))))
(assert (= "gudbaj" (str.++ unch141D (str.++ var41D unch241D))))
(assert (= "guZubtaj" (str.++ unch141E (str.++ var41E unch241E))))
(assert (= "guZubnaj" (str.++ unch141F (str.++ var41F unch241F))))
(assert (= (str.len stem41) l41))
(assert (= (ite (= ch41A var41A) 0 1) sc41A))
(assert (= (ite (= ch41B var41B) 0 1) sc41B))
(assert (= (ite (= ch41C var41C) 0 1) sc41C))
(assert (= (ite (= ch41D var41D) 0 1) sc41D))
(assert (= (ite (= ch41E var41E) 0 1) sc41E))
(assert (= (ite (= ch41F var41F) 0 1) sc41F))
(assert (<= sc41A 1))
(assert (<= sc41B 1))
(assert (<= sc41C 1))
(assert (<= sc41D 1))
(assert (<= sc41E 1))
(assert (<= sc41F 1))
(assert (<= (str.len var42A) 1))
(assert (<= (str.len var42B) 1))
(assert (<= (str.len var42C) 1))
(assert (<= (str.len var42D) 1))
(assert (<= (str.len var42E) 1))
(assert (<= (str.len var42F) 1))
(assert (= (str.++ preA (str.++ stem42 sufA)) (str.++ unch142A (str.++ ch42A unch242A))))
(assert (= (str.++ preB (str.++ stem42 sufB)) (str.++ unch142B (str.++ ch42B unch242B))))
(assert (= (str.++ preC (str.++ stem42 sufC)) (str.++ unch142C (str.++ ch42C unch242C))))
(assert (= (str.++ preD (str.++ stem42 sufD)) (str.++ unch142D (str.++ ch42D unch242D))))
(assert (= (str.++ preE (str.++ stem42 sufE)) (str.++ unch142E (str.++ ch42E unch242E))))
(assert (= (str.++ preF (str.++ stem42 sufF)) (str.++ unch142F (str.++ ch42F unch242F))))
(assert (= "qoslaj" (str.++ unch142D (str.++ var42D unch242D))))
(assert (= "qosoBaj" (str.++ unch142E (str.++ var42E unch242E))))
(assert (= "qosollaj" (str.++ unch142F (str.++ var42F unch242F))))
(assert (= (str.len stem42) l42))
(assert (= (ite (= ch42A var42A) 0 1) sc42A))
(assert (= (ite (= ch42B var42B) 0 1) sc42B))
(assert (= (ite (= ch42C var42C) 0 1) sc42C))
(assert (= (ite (= ch42D var42D) 0 1) sc42D))
(assert (= (ite (= ch42E var42E) 0 1) sc42E))
(assert (= (ite (= ch42F var42F) 0 1) sc42F))
(assert (<= sc42A 1))
(assert (<= sc42B 1))
(assert (<= sc42C 1))
(assert (<= sc42D 1))
(assert (<= sc42E 1))
(assert (<= sc42F 1))
(assert (<= (str.len var43A) 1))
(assert (<= (str.len var43B) 1))
(assert (<= (str.len var43C) 1))
(assert (<= (str.len var43D) 1))
(assert (<= (str.len var43E) 1))
(assert (<= (str.len var43F) 1))
(assert (= (str.++ preA (str.++ stem43 sufA)) (str.++ unch143A (str.++ ch43A unch243A))))
(assert (= (str.++ preB (str.++ stem43 sufB)) (str.++ unch143B (str.++ ch43B unch243B))))
(assert (= (str.++ preC (str.++ stem43 sufC)) (str.++ unch143C (str.++ ch43C unch243C))))
(assert (= (str.++ preD (str.++ stem43 sufD)) (str.++ unch143D (str.++ ch43D unch243D))))
(assert (= (str.++ preE (str.++ stem43 sufE)) (str.++ unch143E (str.++ ch43E unch243E))))
(assert (= (str.++ preF (str.++ stem43 sufF)) (str.++ unch143F (str.++ ch43F unch243F))))
(assert (= "hadlaj" (str.++ unch143D (str.++ var43D unch243D))))
(assert (= "haZaBaj" (str.++ unch143E (str.++ var43E unch243E))))
(assert (= "haZallaj" (str.++ unch143F (str.++ var43F unch243F))))
(assert (= (str.len stem43) l43))
(assert (= (ite (= ch43A var43A) 0 1) sc43A))
(assert (= (ite (= ch43B var43B) 0 1) sc43B))
(assert (= (ite (= ch43C var43C) 0 1) sc43C))
(assert (= (ite (= ch43D var43D) 0 1) sc43D))
(assert (= (ite (= ch43E var43E) 0 1) sc43E))
(assert (= (ite (= ch43F var43F) 0 1) sc43F))
(assert (<= sc43A 1))
(assert (<= sc43B 1))
(assert (<= sc43C 1))
(assert (<= sc43D 1))
(assert (<= sc43E 1))
(assert (<= sc43F 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      0
      sc30A
      sc30B
      sc30C
      sc30D
      sc30E
      sc30F
      0
      sc31A
      sc31B
      sc31C
      sc31D
      sc31E
      sc31F
      0
      sc32A
      sc32B
      sc32C
      sc32D
      sc32E
      sc32F
      0
      sc33A
      sc33B
      sc33C
      sc33D
      sc33E
      sc33F
      0
      sc34A
      sc34B
      sc34C
      sc34D
      sc34E
      sc34F
      0
      sc35A
      sc35B
      sc35C
      sc35D
      sc35E
      sc35F
      0
      sc36A
      sc36B
      sc36C
      sc36D
      sc36E
      sc36F
      0
      sc37A
      sc37B
      sc37C
      sc37D
      sc37E
      sc37F
      0
      sc38A
      sc38B
      sc38C
      sc38D
      sc38E
      sc38F
      0
      sc39A
      sc39B
      sc39C
      sc39D
      sc39E
      sc39F
      0
      sc40A
      sc40B
      sc40C
      sc40D
      sc40E
      sc40F
      0
      sc41A
      sc41B
      sc41C
      sc41D
      sc41E
      sc41F
      0
      sc42A
      sc42B
      sc42C
      sc42D
      sc42E
      sc42F
      0
      sc43A
      sc43B
      sc43C
      sc43D
      sc43E
      sc43F)
   6))
(assert (= (+ 0
      sc0E
      sc1E
      sc2E
      sc3E
      sc4E
      sc5E
      sc6E
      sc7E
      sc8E
      sc9E
      sc10E
      sc11E
      sc12E
      sc13E
      sc14E
      sc15E
      sc16E
      sc17E
      sc18E
      sc19E
      sc20E
      sc21E
      sc22E
      sc23E
      sc24E
      sc25E
      sc26E
      sc27E
      sc28E
      sc29E
      sc30E
      sc31E
      sc32E
      sc33E
      sc34E
      sc35E
      sc36E
      sc37E
      sc38E
      sc39E
      sc40E
      sc41E
      sc42E
      sc43E)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun var30A () String)
(declare-fun var30B () String)
(declare-fun var30C () String)
(declare-fun var30D () String)
(declare-fun var30E () String)
(declare-fun var30F () String)
(declare-fun unch230A () String)
(declare-fun ch30A () String)
(declare-fun unch130A () String)
(declare-fun stem30 () String)
(declare-fun unch230B () String)
(declare-fun ch30B () String)
(declare-fun unch130B () String)
(declare-fun unch230C () String)
(declare-fun ch30C () String)
(declare-fun unch130C () String)
(declare-fun unch230D () String)
(declare-fun ch30D () String)
(declare-fun unch130D () String)
(declare-fun unch230E () String)
(declare-fun ch30E () String)
(declare-fun unch130E () String)
(declare-fun unch230F () String)
(declare-fun ch30F () String)
(declare-fun unch130F () String)
(declare-fun l30 () Int)
(declare-fun sc30A () Int)
(declare-fun sc30B () Int)
(declare-fun sc30C () Int)
(declare-fun sc30D () Int)
(declare-fun sc30E () Int)
(declare-fun sc30F () Int)
(declare-fun var31A () String)
(declare-fun var31B () String)
(declare-fun var31C () String)
(declare-fun var31D () String)
(declare-fun var31E () String)
(declare-fun var31F () String)
(declare-fun unch231A () String)
(declare-fun ch31A () String)
(declare-fun unch131A () String)
(declare-fun stem31 () String)
(declare-fun unch231B () String)
(declare-fun ch31B () String)
(declare-fun unch131B () String)
(declare-fun unch231C () String)
(declare-fun ch31C () String)
(declare-fun unch131C () String)
(declare-fun unch231D () String)
(declare-fun ch31D () String)
(declare-fun unch131D () String)
(declare-fun unch231E () String)
(declare-fun ch31E () String)
(declare-fun unch131E () String)
(declare-fun unch231F () String)
(declare-fun ch31F () String)
(declare-fun unch131F () String)
(declare-fun l31 () Int)
(declare-fun sc31A () Int)
(declare-fun sc31B () Int)
(declare-fun sc31C () Int)
(declare-fun sc31D () Int)
(declare-fun sc31E () Int)
(declare-fun sc31F () Int)
(declare-fun var32A () String)
(declare-fun var32B () String)
(declare-fun var32C () String)
(declare-fun var32D () String)
(declare-fun var32E () String)
(declare-fun var32F () String)
(declare-fun unch232A () String)
(declare-fun ch32A () String)
(declare-fun unch132A () String)
(declare-fun stem32 () String)
(declare-fun unch232B () String)
(declare-fun ch32B () String)
(declare-fun unch132B () String)
(declare-fun unch232C () String)
(declare-fun ch32C () String)
(declare-fun unch132C () String)
(declare-fun unch232D () String)
(declare-fun ch32D () String)
(declare-fun unch132D () String)
(declare-fun unch232E () String)
(declare-fun ch32E () String)
(declare-fun unch132E () String)
(declare-fun unch232F () String)
(declare-fun ch32F () String)
(declare-fun unch132F () String)
(declare-fun l32 () Int)
(declare-fun sc32A () Int)
(declare-fun sc32B () Int)
(declare-fun sc32C () Int)
(declare-fun sc32D () Int)
(declare-fun sc32E () Int)
(declare-fun sc32F () Int)
(declare-fun var33A () String)
(declare-fun var33B () String)
(declare-fun var33C () String)
(declare-fun var33D () String)
(declare-fun var33E () String)
(declare-fun var33F () String)
(declare-fun unch233A () String)
(declare-fun ch33A () String)
(declare-fun unch133A () String)
(declare-fun stem33 () String)
(declare-fun unch233B () String)
(declare-fun ch33B () String)
(declare-fun unch133B () String)
(declare-fun unch233C () String)
(declare-fun ch33C () String)
(declare-fun unch133C () String)
(declare-fun unch233D () String)
(declare-fun ch33D () String)
(declare-fun unch133D () String)
(declare-fun unch233E () String)
(declare-fun ch33E () String)
(declare-fun unch133E () String)
(declare-fun unch233F () String)
(declare-fun ch33F () String)
(declare-fun unch133F () String)
(declare-fun l33 () Int)
(declare-fun sc33A () Int)
(declare-fun sc33B () Int)
(declare-fun sc33C () Int)
(declare-fun sc33D () Int)
(declare-fun sc33E () Int)
(declare-fun sc33F () Int)
(declare-fun var34A () String)
(declare-fun var34B () String)
(declare-fun var34C () String)
(declare-fun var34D () String)
(declare-fun var34E () String)
(declare-fun var34F () String)
(declare-fun unch234A () String)
(declare-fun ch34A () String)
(declare-fun unch134A () String)
(declare-fun stem34 () String)
(declare-fun unch234B () String)
(declare-fun ch34B () String)
(declare-fun unch134B () String)
(declare-fun unch234C () String)
(declare-fun ch34C () String)
(declare-fun unch134C () String)
(declare-fun unch234D () String)
(declare-fun ch34D () String)
(declare-fun unch134D () String)
(declare-fun unch234E () String)
(declare-fun ch34E () String)
(declare-fun unch134E () String)
(declare-fun unch234F () String)
(declare-fun ch34F () String)
(declare-fun unch134F () String)
(declare-fun l34 () Int)
(declare-fun sc34A () Int)
(declare-fun sc34B () Int)
(declare-fun sc34C () Int)
(declare-fun sc34D () Int)
(declare-fun sc34E () Int)
(declare-fun sc34F () Int)
(declare-fun var35A () String)
(declare-fun var35B () String)
(declare-fun var35C () String)
(declare-fun var35D () String)
(declare-fun var35E () String)
(declare-fun var35F () String)
(declare-fun unch235A () String)
(declare-fun ch35A () String)
(declare-fun unch135A () String)
(declare-fun stem35 () String)
(declare-fun unch235B () String)
(declare-fun ch35B () String)
(declare-fun unch135B () String)
(declare-fun unch235C () String)
(declare-fun ch35C () String)
(declare-fun unch135C () String)
(declare-fun unch235D () String)
(declare-fun ch35D () String)
(declare-fun unch135D () String)
(declare-fun unch235E () String)
(declare-fun ch35E () String)
(declare-fun unch135E () String)
(declare-fun unch235F () String)
(declare-fun ch35F () String)
(declare-fun unch135F () String)
(declare-fun l35 () Int)
(declare-fun sc35A () Int)
(declare-fun sc35B () Int)
(declare-fun sc35C () Int)
(declare-fun sc35D () Int)
(declare-fun sc35E () Int)
(declare-fun sc35F () Int)
(declare-fun var36A () String)
(declare-fun var36B () String)
(declare-fun var36C () String)
(declare-fun var36D () String)
(declare-fun var36E () String)
(declare-fun var36F () String)
(declare-fun unch236A () String)
(declare-fun ch36A () String)
(declare-fun unch136A () String)
(declare-fun stem36 () String)
(declare-fun unch236B () String)
(declare-fun ch36B () String)
(declare-fun unch136B () String)
(declare-fun unch236C () String)
(declare-fun ch36C () String)
(declare-fun unch136C () String)
(declare-fun unch236D () String)
(declare-fun ch36D () String)
(declare-fun unch136D () String)
(declare-fun unch236E () String)
(declare-fun ch36E () String)
(declare-fun unch136E () String)
(declare-fun unch236F () String)
(declare-fun ch36F () String)
(declare-fun unch136F () String)
(declare-fun l36 () Int)
(declare-fun sc36A () Int)
(declare-fun sc36B () Int)
(declare-fun sc36C () Int)
(declare-fun sc36D () Int)
(declare-fun sc36E () Int)
(declare-fun sc36F () Int)
(declare-fun var37A () String)
(declare-fun var37B () String)
(declare-fun var37C () String)
(declare-fun var37D () String)
(declare-fun var37E () String)
(declare-fun var37F () String)
(declare-fun unch237A () String)
(declare-fun ch37A () String)
(declare-fun unch137A () String)
(declare-fun stem37 () String)
(declare-fun unch237B () String)
(declare-fun ch37B () String)
(declare-fun unch137B () String)
(declare-fun unch237C () String)
(declare-fun ch37C () String)
(declare-fun unch137C () String)
(declare-fun unch237D () String)
(declare-fun ch37D () String)
(declare-fun unch137D () String)
(declare-fun unch237E () String)
(declare-fun ch37E () String)
(declare-fun unch137E () String)
(declare-fun unch237F () String)
(declare-fun ch37F () String)
(declare-fun unch137F () String)
(declare-fun l37 () Int)
(declare-fun sc37A () Int)
(declare-fun sc37B () Int)
(declare-fun sc37C () Int)
(declare-fun sc37D () Int)
(declare-fun sc37E () Int)
(declare-fun sc37F () Int)
(declare-fun var38A () String)
(declare-fun var38B () String)
(declare-fun var38C () String)
(declare-fun var38D () String)
(declare-fun var38E () String)
(declare-fun var38F () String)
(declare-fun unch238A () String)
(declare-fun ch38A () String)
(declare-fun unch138A () String)
(declare-fun stem38 () String)
(declare-fun unch238B () String)
(declare-fun ch38B () String)
(declare-fun unch138B () String)
(declare-fun unch238C () String)
(declare-fun ch38C () String)
(declare-fun unch138C () String)
(declare-fun unch238D () String)
(declare-fun ch38D () String)
(declare-fun unch138D () String)
(declare-fun unch238E () String)
(declare-fun ch38E () String)
(declare-fun unch138E () String)
(declare-fun unch238F () String)
(declare-fun ch38F () String)
(declare-fun unch138F () String)
(declare-fun l38 () Int)
(declare-fun sc38A () Int)
(declare-fun sc38B () Int)
(declare-fun sc38C () Int)
(declare-fun sc38D () Int)
(declare-fun sc38E () Int)
(declare-fun sc38F () Int)
(declare-fun var39A () String)
(declare-fun var39B () String)
(declare-fun var39C () String)
(declare-fun var39D () String)
(declare-fun var39E () String)
(declare-fun var39F () String)
(declare-fun unch239A () String)
(declare-fun ch39A () String)
(declare-fun unch139A () String)
(declare-fun stem39 () String)
(declare-fun unch239B () String)
(declare-fun ch39B () String)
(declare-fun unch139B () String)
(declare-fun unch239C () String)
(declare-fun ch39C () String)
(declare-fun unch139C () String)
(declare-fun unch239D () String)
(declare-fun ch39D () String)
(declare-fun unch139D () String)
(declare-fun unch239E () String)
(declare-fun ch39E () String)
(declare-fun unch139E () String)
(declare-fun unch239F () String)
(declare-fun ch39F () String)
(declare-fun unch139F () String)
(declare-fun l39 () Int)
(declare-fun sc39A () Int)
(declare-fun sc39B () Int)
(declare-fun sc39C () Int)
(declare-fun sc39D () Int)
(declare-fun sc39E () Int)
(declare-fun sc39F () Int)
(declare-fun var40A () String)
(declare-fun var40B () String)
(declare-fun var40C () String)
(declare-fun var40D () String)
(declare-fun var40E () String)
(declare-fun var40F () String)
(declare-fun unch240A () String)
(declare-fun ch40A () String)
(declare-fun unch140A () String)
(declare-fun stem40 () String)
(declare-fun unch240B () String)
(declare-fun ch40B () String)
(declare-fun unch140B () String)
(declare-fun unch240C () String)
(declare-fun ch40C () String)
(declare-fun unch140C () String)
(declare-fun unch240D () String)
(declare-fun ch40D () String)
(declare-fun unch140D () String)
(declare-fun unch240E () String)
(declare-fun ch40E () String)
(declare-fun unch140E () String)
(declare-fun unch240F () String)
(declare-fun ch40F () String)
(declare-fun unch140F () String)
(declare-fun l40 () Int)
(declare-fun sc40A () Int)
(declare-fun sc40B () Int)
(declare-fun sc40C () Int)
(declare-fun sc40D () Int)
(declare-fun sc40E () Int)
(declare-fun sc40F () Int)
(declare-fun var41A () String)
(declare-fun var41B () String)
(declare-fun var41C () String)
(declare-fun var41D () String)
(declare-fun var41E () String)
(declare-fun var41F () String)
(declare-fun unch241A () String)
(declare-fun ch41A () String)
(declare-fun unch141A () String)
(declare-fun stem41 () String)
(declare-fun unch241B () String)
(declare-fun ch41B () String)
(declare-fun unch141B () String)
(declare-fun unch241C () String)
(declare-fun ch41C () String)
(declare-fun unch141C () String)
(declare-fun unch241D () String)
(declare-fun ch41D () String)
(declare-fun unch141D () String)
(declare-fun unch241E () String)
(declare-fun ch41E () String)
(declare-fun unch141E () String)
(declare-fun unch241F () String)
(declare-fun ch41F () String)
(declare-fun unch141F () String)
(declare-fun l41 () Int)
(declare-fun sc41A () Int)
(declare-fun sc41B () Int)
(declare-fun sc41C () Int)
(declare-fun sc41D () Int)
(declare-fun sc41E () Int)
(declare-fun sc41F () Int)
(declare-fun var42A () String)
(declare-fun var42B () String)
(declare-fun var42C () String)
(declare-fun var42D () String)
(declare-fun var42E () String)
(declare-fun var42F () String)
(declare-fun unch242A () String)
(declare-fun ch42A () String)
(declare-fun unch142A () String)
(declare-fun stem42 () String)
(declare-fun unch242B () String)
(declare-fun ch42B () String)
(declare-fun unch142B () String)
(declare-fun unch242C () String)
(declare-fun ch42C () String)
(declare-fun unch142C () String)
(declare-fun unch242D () String)
(declare-fun ch42D () String)
(declare-fun unch142D () String)
(declare-fun unch242E () String)
(declare-fun ch42E () String)
(declare-fun unch142E () String)
(declare-fun unch242F () String)
(declare-fun ch42F () String)
(declare-fun unch142F () String)
(declare-fun l42 () Int)
(declare-fun sc42A () Int)
(declare-fun sc42B () Int)
(declare-fun sc42C () Int)
(declare-fun sc42D () Int)
(declare-fun sc42E () Int)
(declare-fun sc42F () Int)
(declare-fun var43A () String)
(declare-fun var43B () String)
(declare-fun var43C () String)
(declare-fun var43D () String)
(declare-fun var43E () String)
(declare-fun var43F () String)
(declare-fun unch243A () String)
(declare-fun ch43A () String)
(declare-fun unch143A () String)
(declare-fun stem43 () String)
(declare-fun unch243B () String)
(declare-fun ch43B () String)
(declare-fun unch143B () String)
(declare-fun unch243C () String)
(declare-fun ch43C () String)
(declare-fun unch143C () String)
(declare-fun unch243D () String)
(declare-fun ch43D () String)
(declare-fun unch143D () String)
(declare-fun unch243E () String)
(declare-fun ch43E () String)
(declare-fun unch143E () String)
(declare-fun unch243F () String)
(declare-fun ch43F () String)
(declare-fun unch143F () String)
(declare-fun l43 () Int)
(declare-fun sc43A () Int)
(declare-fun sc43B () Int)
(declare-fun sc43C () Int)
(declare-fun sc43D () Int)
(declare-fun sc43E () Int)
(declare-fun sc43F () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= "daar" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "daarta" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "daaro" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= "gees" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "geesta" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "geeso" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= "laf" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "lafta" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "lafo" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= "lug" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "lugta" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "luOo" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= "naag" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "naagta" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "naaOo" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= "tib" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "tibta" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "tiXo" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= "sab" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "sabta" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "saXo" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= "bad" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "bada" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "baZo" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= "Bid" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "Bida" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "BiZo" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= "fee1" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "fee1a" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "fee2o" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= "3iir" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "3iirta" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "3iiro" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= "4ul" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "4uBa" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "4ulo" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= "bil" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "biBa" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "bilo" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= "meel" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "meeBa" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "meelo" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= "kaliil" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "kaliiBa" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "kaliilo" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= "najl" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "najBa" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "najlo" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= "sun" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "sunta" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "sumo" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= "laan" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "laanta" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "laamo" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= "sin" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "sinta" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "simo" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= "dan" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "danta" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "dano" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= "daan" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "daanta" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "daano" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= "saan" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "saanta" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "saano" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= "nirig" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "nirigta" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "nirgo" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= "gaXa1" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= "gaXa1a" (str.++ unch123B (str.++ var23B unch223B))))
(assert (= "gab1o" (str.++ unch123C (str.++ var23C unch223C))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= "hoOol" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= "hoOoBa" (str.++ unch124B (str.++ var24B unch224B))))
(assert (= "hoglo" (str.++ unch124C (str.++ var24C unch224C))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= "baOal" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= "baOaBa" (str.++ unch125B (str.++ var25B unch225B))))
(assert (= "baglo" (str.++ unch125C (str.++ var25C unch225C))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= "wa5ar" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= "wa5arta" (str.++ unch126B (str.++ var26B unch226B))))
(assert (= "wa5aro" (str.++ unch126C (str.++ var26C unch226C))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= "irbad" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= "irbada" (str.++ unch127B (str.++ var27B unch227B))))
(assert (= "irbaZo" (str.++ unch127C (str.++ var27C unch227C))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= "kefed" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= "kefeda" (str.++ unch128B (str.++ var28B unch228B))))
(assert (= "kefeZo" (str.++ unch128C (str.++ var28C unch228C))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= "Bilin" (str.++ unch129A (str.++ var29A unch229A))))
(assert (= "Bilinta" (str.++ unch129B (str.++ var29B unch229B))))
(assert (= "Bilino" (str.++ unch129C (str.++ var29C unch229C))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= (str.len var30A) 1))
(assert (<= (str.len var30B) 1))
(assert (<= (str.len var30C) 1))
(assert (<= (str.len var30D) 1))
(assert (<= (str.len var30E) 1))
(assert (<= (str.len var30F) 1))
(assert (= (str.++ preA (str.++ stem30 sufA)) (str.++ unch130A (str.++ ch30A unch230A))))
(assert (= (str.++ preB (str.++ stem30 sufB)) (str.++ unch130B (str.++ ch30B unch230B))))
(assert (= (str.++ preC (str.++ stem30 sufC)) (str.++ unch130C (str.++ ch30C unch230C))))
(assert (= (str.++ preD (str.++ stem30 sufD)) (str.++ unch130D (str.++ ch30D unch230D))))
(assert (= (str.++ preE (str.++ stem30 sufE)) (str.++ unch130E (str.++ ch30E unch230E))))
(assert (= (str.++ preF (str.++ stem30 sufF)) (str.++ unch130F (str.++ ch30F unch230F))))
(assert (= "bohol" (str.++ unch130A (str.++ var30A unch230A))))
(assert (= "bohoBa" (str.++ unch130B (str.++ var30B unch230B))))
(assert (= "boholo" (str.++ unch130C (str.++ var30C unch230C))))
(assert (= (str.len stem30) l30))
(assert (= (ite (= ch30A var30A) 0 1) sc30A))
(assert (= (ite (= ch30B var30B) 0 1) sc30B))
(assert (= (ite (= ch30C var30C) 0 1) sc30C))
(assert (= (ite (= ch30D var30D) 0 1) sc30D))
(assert (= (ite (= ch30E var30E) 0 1) sc30E))
(assert (= (ite (= ch30F var30F) 0 1) sc30F))
(assert (<= sc30A 1))
(assert (<= sc30B 1))
(assert (<= sc30C 1))
(assert (<= sc30D 1))
(assert (<= sc30E 1))
(assert (<= sc30F 1))
(assert (<= (str.len var31A) 1))
(assert (<= (str.len var31B) 1))
(assert (<= (str.len var31C) 1))
(assert (<= (str.len var31D) 1))
(assert (<= (str.len var31E) 1))
(assert (<= (str.len var31F) 1))
(assert (= (str.++ preA (str.++ stem31 sufA)) (str.++ unch131A (str.++ ch31A unch231A))))
(assert (= (str.++ preB (str.++ stem31 sufB)) (str.++ unch131B (str.++ ch31B unch231B))))
(assert (= (str.++ preC (str.++ stem31 sufC)) (str.++ unch131C (str.++ ch31C unch231C))))
(assert (= (str.++ preD (str.++ stem31 sufD)) (str.++ unch131D (str.++ ch31D unch231D))))
(assert (= (str.++ preE (str.++ stem31 sufE)) (str.++ unch131E (str.++ ch31E unch231E))))
(assert (= (str.++ preF (str.++ stem31 sufF)) (str.++ unch131F (str.++ ch31F unch231F))))
(assert (= "4aajad" (str.++ unch131A (str.++ var31A unch231A))))
(assert (= "4aajada" (str.++ unch131B (str.++ var31B unch231B))))
(assert (= "4aajaZo" (str.++ unch131C (str.++ var31C unch231C))))
(assert (= (str.len stem31) l31))
(assert (= (ite (= ch31A var31A) 0 1) sc31A))
(assert (= (ite (= ch31B var31B) 0 1) sc31B))
(assert (= (ite (= ch31C var31C) 0 1) sc31C))
(assert (= (ite (= ch31D var31D) 0 1) sc31D))
(assert (= (ite (= ch31E var31E) 0 1) sc31E))
(assert (= (ite (= ch31F var31F) 0 1) sc31F))
(assert (<= sc31A 1))
(assert (<= sc31B 1))
(assert (<= sc31C 1))
(assert (<= sc31D 1))
(assert (<= sc31E 1))
(assert (<= sc31F 1))
(assert (<= (str.len var32A) 1))
(assert (<= (str.len var32B) 1))
(assert (<= (str.len var32C) 1))
(assert (<= (str.len var32D) 1))
(assert (<= (str.len var32E) 1))
(assert (<= (str.len var32F) 1))
(assert (= (str.++ preA (str.++ stem32 sufA)) (str.++ unch132A (str.++ ch32A unch232A))))
(assert (= (str.++ preB (str.++ stem32 sufB)) (str.++ unch132B (str.++ ch32B unch232B))))
(assert (= (str.++ preC (str.++ stem32 sufC)) (str.++ unch132C (str.++ ch32C unch232C))))
(assert (= (str.++ preD (str.++ stem32 sufD)) (str.++ unch132D (str.++ ch32D unch232D))))
(assert (= (str.++ preE (str.++ stem32 sufE)) (str.++ unch132E (str.++ ch32E unch232E))))
(assert (= (str.++ preF (str.++ stem32 sufF)) (str.++ unch132F (str.++ ch32F unch232F))))
(assert (= "ga3an" (str.++ unch132A (str.++ var32A unch232A))))
(assert (= "ga3anta" (str.++ unch132B (str.++ var32B unch232B))))
(assert (= "ga3mo" (str.++ unch132C (str.++ var32C unch232C))))
(assert (= (str.len stem32) l32))
(assert (= (ite (= ch32A var32A) 0 1) sc32A))
(assert (= (ite (= ch32B var32B) 0 1) sc32B))
(assert (= (ite (= ch32C var32C) 0 1) sc32C))
(assert (= (ite (= ch32D var32D) 0 1) sc32D))
(assert (= (ite (= ch32E var32E) 0 1) sc32E))
(assert (= (ite (= ch32F var32F) 0 1) sc32F))
(assert (<= sc32A 1))
(assert (<= sc32B 1))
(assert (<= sc32C 1))
(assert (<= sc32D 1))
(assert (<= sc32E 1))
(assert (<= sc32F 1))
(assert (<= (str.len var33A) 1))
(assert (<= (str.len var33B) 1))
(assert (<= (str.len var33C) 1))
(assert (<= (str.len var33D) 1))
(assert (<= (str.len var33E) 1))
(assert (<= (str.len var33F) 1))
(assert (= (str.++ preA (str.++ stem33 sufA)) (str.++ unch133A (str.++ ch33A unch233A))))
(assert (= (str.++ preB (str.++ stem33 sufB)) (str.++ unch133B (str.++ ch33B unch233B))))
(assert (= (str.++ preC (str.++ stem33 sufC)) (str.++ unch133C (str.++ ch33C unch233C))))
(assert (= (str.++ preD (str.++ stem33 sufD)) (str.++ unch133D (str.++ ch33D unch233D))))
(assert (= (str.++ preE (str.++ stem33 sufE)) (str.++ unch133E (str.++ ch33E unch233E))))
(assert (= (str.++ preF (str.++ stem33 sufF)) (str.++ unch133F (str.++ ch33F unch233F))))
(assert (= "4inan" (str.++ unch133A (str.++ var33A unch233A))))
(assert (= "4inanta" (str.++ unch133B (str.++ var33B unch233B))))
(assert (= "4inano" (str.++ unch133C (str.++ var33C unch233C))))
(assert (= (str.len stem33) l33))
(assert (= (ite (= ch33A var33A) 0 1) sc33A))
(assert (= (ite (= ch33B var33B) 0 1) sc33B))
(assert (= (ite (= ch33C var33C) 0 1) sc33C))
(assert (= (ite (= ch33D var33D) 0 1) sc33D))
(assert (= (ite (= ch33E var33E) 0 1) sc33E))
(assert (= (ite (= ch33F var33F) 0 1) sc33F))
(assert (<= sc33A 1))
(assert (<= sc33B 1))
(assert (<= sc33C 1))
(assert (<= sc33D 1))
(assert (<= sc33E 1))
(assert (<= sc33F 1))
(assert (<= (str.len var34A) 1))
(assert (<= (str.len var34B) 1))
(assert (<= (str.len var34C) 1))
(assert (<= (str.len var34D) 1))
(assert (<= (str.len var34E) 1))
(assert (<= (str.len var34F) 1))
(assert (= (str.++ preA (str.++ stem34 sufA)) (str.++ unch134A (str.++ ch34A unch234A))))
(assert (= (str.++ preB (str.++ stem34 sufB)) (str.++ unch134B (str.++ ch34B unch234B))))
(assert (= (str.++ preC (str.++ stem34 sufC)) (str.++ unch134C (str.++ ch34C unch234C))))
(assert (= (str.++ preD (str.++ stem34 sufD)) (str.++ unch134D (str.++ ch34D unch234D))))
(assert (= (str.++ preE (str.++ stem34 sufE)) (str.++ unch134E (str.++ ch34E unch234E))))
(assert (= (str.++ preF (str.++ stem34 sufF)) (str.++ unch134F (str.++ ch34F unch234F))))
(assert (= "suOaj" (str.++ unch134D (str.++ var34D unch234D))))
(assert (= "sugtaj" (str.++ unch134E (str.++ var34E unch234E))))
(assert (= "sugnaj" (str.++ unch134F (str.++ var34F unch234F))))
(assert (= (str.len stem34) l34))
(assert (= (ite (= ch34A var34A) 0 1) sc34A))
(assert (= (ite (= ch34B var34B) 0 1) sc34B))
(assert (= (ite (= ch34C var34C) 0 1) sc34C))
(assert (= (ite (= ch34D var34D) 0 1) sc34D))
(assert (= (ite (= ch34E var34E) 0 1) sc34E))
(assert (= (ite (= ch34F var34F) 0 1) sc34F))
(assert (<= sc34A 1))
(assert (<= sc34B 1))
(assert (<= sc34C 1))
(assert (<= sc34D 1))
(assert (<= sc34E 1))
(assert (<= sc34F 1))
(assert (<= (str.len var35A) 1))
(assert (<= (str.len var35B) 1))
(assert (<= (str.len var35C) 1))
(assert (<= (str.len var35D) 1))
(assert (<= (str.len var35E) 1))
(assert (<= (str.len var35F) 1))
(assert (= (str.++ preA (str.++ stem35 sufA)) (str.++ unch135A (str.++ ch35A unch235A))))
(assert (= (str.++ preB (str.++ stem35 sufB)) (str.++ unch135B (str.++ ch35B unch235B))))
(assert (= (str.++ preC (str.++ stem35 sufC)) (str.++ unch135C (str.++ ch35C unch235C))))
(assert (= (str.++ preD (str.++ stem35 sufD)) (str.++ unch135D (str.++ ch35D unch235D))))
(assert (= (str.++ preE (str.++ stem35 sufE)) (str.++ unch135E (str.++ ch35E unch235E))))
(assert (= (str.++ preF (str.++ stem35 sufF)) (str.++ unch135F (str.++ ch35F unch235F))))
(assert (= "kaXaj" (str.++ unch135D (str.++ var35D unch235D))))
(assert (= "kabtaj" (str.++ unch135E (str.++ var35E unch235E))))
(assert (= "kabnaj" (str.++ unch135F (str.++ var35F unch235F))))
(assert (= (str.len stem35) l35))
(assert (= (ite (= ch35A var35A) 0 1) sc35A))
(assert (= (ite (= ch35B var35B) 0 1) sc35B))
(assert (= (ite (= ch35C var35C) 0 1) sc35C))
(assert (= (ite (= ch35D var35D) 0 1) sc35D))
(assert (= (ite (= ch35E var35E) 0 1) sc35E))
(assert (= (ite (= ch35F var35F) 0 1) sc35F))
(assert (<= sc35A 1))
(assert (<= sc35B 1))
(assert (<= sc35C 1))
(assert (<= sc35D 1))
(assert (<= sc35E 1))
(assert (<= sc35F 1))
(assert (<= (str.len var36A) 1))
(assert (<= (str.len var36B) 1))
(assert (<= (str.len var36C) 1))
(assert (<= (str.len var36D) 1))
(assert (<= (str.len var36E) 1))
(assert (<= (str.len var36F) 1))
(assert (= (str.++ preA (str.++ stem36 sufA)) (str.++ unch136A (str.++ ch36A unch236A))))
(assert (= (str.++ preB (str.++ stem36 sufB)) (str.++ unch136B (str.++ ch36B unch236B))))
(assert (= (str.++ preC (str.++ stem36 sufC)) (str.++ unch136C (str.++ ch36C unch236C))))
(assert (= (str.++ preD (str.++ stem36 sufD)) (str.++ unch136D (str.++ ch36D unch236D))))
(assert (= (str.++ preE (str.++ stem36 sufE)) (str.++ unch136E (str.++ ch36E unch236E))))
(assert (= (str.++ preF (str.++ stem36 sufF)) (str.++ unch136F (str.++ ch36F unch236F))))
(assert (= "siZaj" (str.++ unch136D (str.++ var36D unch236D))))
(assert (= "sidaj" (str.++ unch136E (str.++ var36E unch236E))))
(assert (= "sidnaj" (str.++ unch136F (str.++ var36F unch236F))))
(assert (= (str.len stem36) l36))
(assert (= (ite (= ch36A var36A) 0 1) sc36A))
(assert (= (ite (= ch36B var36B) 0 1) sc36B))
(assert (= (ite (= ch36C var36C) 0 1) sc36C))
(assert (= (ite (= ch36D var36D) 0 1) sc36D))
(assert (= (ite (= ch36E var36E) 0 1) sc36E))
(assert (= (ite (= ch36F var36F) 0 1) sc36F))
(assert (<= sc36A 1))
(assert (<= sc36B 1))
(assert (<= sc36C 1))
(assert (<= sc36D 1))
(assert (<= sc36E 1))
(assert (<= sc36F 1))
(assert (<= (str.len var37A) 1))
(assert (<= (str.len var37B) 1))
(assert (<= (str.len var37C) 1))
(assert (<= (str.len var37D) 1))
(assert (<= (str.len var37E) 1))
(assert (<= (str.len var37F) 1))
(assert (= (str.++ preA (str.++ stem37 sufA)) (str.++ unch137A (str.++ ch37A unch237A))))
(assert (= (str.++ preB (str.++ stem37 sufB)) (str.++ unch137B (str.++ ch37B unch237B))))
(assert (= (str.++ preC (str.++ stem37 sufC)) (str.++ unch137C (str.++ ch37C unch237C))))
(assert (= (str.++ preD (str.++ stem37 sufD)) (str.++ unch137D (str.++ ch37D unch237D))))
(assert (= (str.++ preE (str.++ stem37 sufE)) (str.++ unch137E (str.++ ch37E unch237E))))
(assert (= (str.++ preF (str.++ stem37 sufF)) (str.++ unch137F (str.++ ch37F unch237F))))
(assert (= "dilaj" (str.++ unch137D (str.++ var37D unch237D))))
(assert (= "diBaj" (str.++ unch137E (str.++ var37E unch237E))))
(assert (= "dillaj" (str.++ unch137F (str.++ var37F unch237F))))
(assert (= (str.len stem37) l37))
(assert (= (ite (= ch37A var37A) 0 1) sc37A))
(assert (= (ite (= ch37B var37B) 0 1) sc37B))
(assert (= (ite (= ch37C var37C) 0 1) sc37C))
(assert (= (ite (= ch37D var37D) 0 1) sc37D))
(assert (= (ite (= ch37E var37E) 0 1) sc37E))
(assert (= (ite (= ch37F var37F) 0 1) sc37F))
(assert (<= sc37A 1))
(assert (<= sc37B 1))
(assert (<= sc37C 1))
(assert (<= sc37D 1))
(assert (<= sc37E 1))
(assert (<= sc37F 1))
(assert (<= (str.len var38A) 1))
(assert (<= (str.len var38B) 1))
(assert (<= (str.len var38C) 1))
(assert (<= (str.len var38D) 1))
(assert (<= (str.len var38E) 1))
(assert (<= (str.len var38F) 1))
(assert (= (str.++ preA (str.++ stem38 sufA)) (str.++ unch138A (str.++ ch38A unch238A))))
(assert (= (str.++ preB (str.++ stem38 sufB)) (str.++ unch138B (str.++ ch38B unch238B))))
(assert (= (str.++ preC (str.++ stem38 sufC)) (str.++ unch138C (str.++ ch38C unch238C))))
(assert (= (str.++ preD (str.++ stem38 sufD)) (str.++ unch138D (str.++ ch38D unch238D))))
(assert (= (str.++ preE (str.++ stem38 sufE)) (str.++ unch138E (str.++ ch38E unch238E))))
(assert (= (str.++ preF (str.++ stem38 sufF)) (str.++ unch138F (str.++ ch38F unch238F))))
(assert (= "ganaj" (str.++ unch138D (str.++ var38D unch238D))))
(assert (= "gantaj" (str.++ unch138E (str.++ var38E unch238E))))
(assert (= "gannaj" (str.++ unch138F (str.++ var38F unch238F))))
(assert (= (str.len stem38) l38))
(assert (= (ite (= ch38A var38A) 0 1) sc38A))
(assert (= (ite (= ch38B var38B) 0 1) sc38B))
(assert (= (ite (= ch38C var38C) 0 1) sc38C))
(assert (= (ite (= ch38D var38D) 0 1) sc38D))
(assert (= (ite (= ch38E var38E) 0 1) sc38E))
(assert (= (ite (= ch38F var38F) 0 1) sc38F))
(assert (<= sc38A 1))
(assert (<= sc38B 1))
(assert (<= sc38C 1))
(assert (<= sc38D 1))
(assert (<= sc38E 1))
(assert (<= sc38F 1))
(assert (<= (str.len var39A) 1))
(assert (<= (str.len var39B) 1))
(assert (<= (str.len var39C) 1))
(assert (<= (str.len var39D) 1))
(assert (<= (str.len var39E) 1))
(assert (<= (str.len var39F) 1))
(assert (= (str.++ preA (str.++ stem39 sufA)) (str.++ unch139A (str.++ ch39A unch239A))))
(assert (= (str.++ preB (str.++ stem39 sufB)) (str.++ unch139B (str.++ ch39B unch239B))))
(assert (= (str.++ preC (str.++ stem39 sufC)) (str.++ unch139C (str.++ ch39C unch239C))))
(assert (= (str.++ preD (str.++ stem39 sufD)) (str.++ unch139D (str.++ ch39D unch239D))))
(assert (= (str.++ preE (str.++ stem39 sufE)) (str.++ unch139E (str.++ ch39E unch239E))))
(assert (= (str.++ preF (str.++ stem39 sufF)) (str.++ unch139F (str.++ ch39F unch239F))))
(assert (= "tumaj" (str.++ unch139D (str.++ var39D unch239D))))
(assert (= "tuntaj" (str.++ unch139E (str.++ var39E unch239E))))
(assert (= "tunnaj" (str.++ unch139F (str.++ var39F unch239F))))
(assert (= (str.len stem39) l39))
(assert (= (ite (= ch39A var39A) 0 1) sc39A))
(assert (= (ite (= ch39B var39B) 0 1) sc39B))
(assert (= (ite (= ch39C var39C) 0 1) sc39C))
(assert (= (ite (= ch39D var39D) 0 1) sc39D))
(assert (= (ite (= ch39E var39E) 0 1) sc39E))
(assert (= (ite (= ch39F var39F) 0 1) sc39F))
(assert (<= sc39A 1))
(assert (<= sc39B 1))
(assert (<= sc39C 1))
(assert (<= sc39D 1))
(assert (<= sc39E 1))
(assert (<= sc39F 1))
(assert (<= (str.len var40A) 1))
(assert (<= (str.len var40B) 1))
(assert (<= (str.len var40C) 1))
(assert (<= (str.len var40D) 1))
(assert (<= (str.len var40E) 1))
(assert (<= (str.len var40F) 1))
(assert (= (str.++ preA (str.++ stem40 sufA)) (str.++ unch140A (str.++ ch40A unch240A))))
(assert (= (str.++ preB (str.++ stem40 sufB)) (str.++ unch140B (str.++ ch40B unch240B))))
(assert (= (str.++ preC (str.++ stem40 sufC)) (str.++ unch140C (str.++ ch40C unch240C))))
(assert (= (str.++ preD (str.++ stem40 sufD)) (str.++ unch140D (str.++ ch40D unch240D))))
(assert (= (str.++ preE (str.++ stem40 sufE)) (str.++ unch140E (str.++ ch40E unch240E))))
(assert (= (str.++ preF (str.++ stem40 sufF)) (str.++ unch140F (str.++ ch40F unch240F))))
(assert (= "argaj" (str.++ unch140D (str.++ var40D unch240D))))
(assert (= "aragtaj" (str.++ unch140E (str.++ var40E unch240E))))
(assert (= "aragnaj" (str.++ unch140F (str.++ var40F unch240F))))
(assert (= (str.len stem40) l40))
(assert (= (ite (= ch40A var40A) 0 1) sc40A))
(assert (= (ite (= ch40B var40B) 0 1) sc40B))
(assert (= (ite (= ch40C var40C) 0 1) sc40C))
(assert (= (ite (= ch40D var40D) 0 1) sc40D))
(assert (= (ite (= ch40E var40E) 0 1) sc40E))
(assert (= (ite (= ch40F var40F) 0 1) sc40F))
(assert (<= sc40A 1))
(assert (<= sc40B 1))
(assert (<= sc40C 1))
(assert (<= sc40D 1))
(assert (<= sc40E 1))
(assert (<= sc40F 1))
(assert (<= (str.len var41A) 1))
(assert (<= (str.len var41B) 1))
(assert (<= (str.len var41C) 1))
(assert (<= (str.len var41D) 1))
(assert (<= (str.len var41E) 1))
(assert (<= (str.len var41F) 1))
(assert (= (str.++ preA (str.++ stem41 sufA)) (str.++ unch141A (str.++ ch41A unch241A))))
(assert (= (str.++ preB (str.++ stem41 sufB)) (str.++ unch141B (str.++ ch41B unch241B))))
(assert (= (str.++ preC (str.++ stem41 sufC)) (str.++ unch141C (str.++ ch41C unch241C))))
(assert (= (str.++ preD (str.++ stem41 sufD)) (str.++ unch141D (str.++ ch41D unch241D))))
(assert (= (str.++ preE (str.++ stem41 sufE)) (str.++ unch141E (str.++ ch41E unch241E))))
(assert (= (str.++ preF (str.++ stem41 sufF)) (str.++ unch141F (str.++ ch41F unch241F))))
(assert (= "gudbaj" (str.++ unch141D (str.++ var41D unch241D))))
(assert (= "guZubtaj" (str.++ unch141E (str.++ var41E unch241E))))
(assert (= "guZubnaj" (str.++ unch141F (str.++ var41F unch241F))))
(assert (= (str.len stem41) l41))
(assert (= (ite (= ch41A var41A) 0 1) sc41A))
(assert (= (ite (= ch41B var41B) 0 1) sc41B))
(assert (= (ite (= ch41C var41C) 0 1) sc41C))
(assert (= (ite (= ch41D var41D) 0 1) sc41D))
(assert (= (ite (= ch41E var41E) 0 1) sc41E))
(assert (= (ite (= ch41F var41F) 0 1) sc41F))
(assert (<= sc41A 1))
(assert (<= sc41B 1))
(assert (<= sc41C 1))
(assert (<= sc41D 1))
(assert (<= sc41E 1))
(assert (<= sc41F 1))
(assert (<= (str.len var42A) 1))
(assert (<= (str.len var42B) 1))
(assert (<= (str.len var42C) 1))
(assert (<= (str.len var42D) 1))
(assert (<= (str.len var42E) 1))
(assert (<= (str.len var42F) 1))
(assert (= (str.++ preA (str.++ stem42 sufA)) (str.++ unch142A (str.++ ch42A unch242A))))
(assert (= (str.++ preB (str.++ stem42 sufB)) (str.++ unch142B (str.++ ch42B unch242B))))
(assert (= (str.++ preC (str.++ stem42 sufC)) (str.++ unch142C (str.++ ch42C unch242C))))
(assert (= (str.++ preD (str.++ stem42 sufD)) (str.++ unch142D (str.++ ch42D unch242D))))
(assert (= (str.++ preE (str.++ stem42 sufE)) (str.++ unch142E (str.++ ch42E unch242E))))
(assert (= (str.++ preF (str.++ stem42 sufF)) (str.++ unch142F (str.++ ch42F unch242F))))
(assert (= "qoslaj" (str.++ unch142D (str.++ var42D unch242D))))
(assert (= "qosoBaj" (str.++ unch142E (str.++ var42E unch242E))))
(assert (= "qosollaj" (str.++ unch142F (str.++ var42F unch242F))))
(assert (= (str.len stem42) l42))
(assert (= (ite (= ch42A var42A) 0 1) sc42A))
(assert (= (ite (= ch42B var42B) 0 1) sc42B))
(assert (= (ite (= ch42C var42C) 0 1) sc42C))
(assert (= (ite (= ch42D var42D) 0 1) sc42D))
(assert (= (ite (= ch42E var42E) 0 1) sc42E))
(assert (= (ite (= ch42F var42F) 0 1) sc42F))
(assert (<= sc42A 1))
(assert (<= sc42B 1))
(assert (<= sc42C 1))
(assert (<= sc42D 1))
(assert (<= sc42E 1))
(assert (<= sc42F 1))
(assert (<= (str.len var43A) 1))
(assert (<= (str.len var43B) 1))
(assert (<= (str.len var43C) 1))
(assert (<= (str.len var43D) 1))
(assert (<= (str.len var43E) 1))
(assert (<= (str.len var43F) 1))
(assert (= (str.++ preA (str.++ stem43 sufA)) (str.++ unch143A (str.++ ch43A unch243A))))
(assert (= (str.++ preB (str.++ stem43 sufB)) (str.++ unch143B (str.++ ch43B unch243B))))
(assert (= (str.++ preC (str.++ stem43 sufC)) (str.++ unch143C (str.++ ch43C unch243C))))
(assert (= (str.++ preD (str.++ stem43 sufD)) (str.++ unch143D (str.++ ch43D unch243D))))
(assert (= (str.++ preE (str.++ stem43 sufE)) (str.++ unch143E (str.++ ch43E unch243E))))
(assert (= (str.++ preF (str.++ stem43 sufF)) (str.++ unch143F (str.++ ch43F unch243F))))
(assert (= "hadlaj" (str.++ unch143D (str.++ var43D unch243D))))
(assert (= "haZaBaj" (str.++ unch143E (str.++ var43E unch243E))))
(assert (= "haZallaj" (str.++ unch143F (str.++ var43F unch243F))))
(assert (= (str.len stem43) l43))
(assert (= (ite (= ch43A var43A) 0 1) sc43A))
(assert (= (ite (= ch43B var43B) 0 1) sc43B))
(assert (= (ite (= ch43C var43C) 0 1) sc43C))
(assert (= (ite (= ch43D var43D) 0 1) sc43D))
(assert (= (ite (= ch43E var43E) 0 1) sc43E))
(assert (= (ite (= ch43F var43F) 0 1) sc43F))
(assert (<= sc43A 1))
(assert (<= sc43B 1))
(assert (<= sc43C 1))
(assert (<= sc43D 1))
(assert (<= sc43E 1))
(assert (<= sc43F 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      0
      sc30A
      sc30B
      sc30C
      sc30D
      sc30E
      sc30F
      0
      sc31A
      sc31B
      sc31C
      sc31D
      sc31E
      sc31F
      0
      sc32A
      sc32B
      sc32C
      sc32D
      sc32E
      sc32F
      0
      sc33A
      sc33B
      sc33C
      sc33D
      sc33E
      sc33F
      0
      sc34A
      sc34B
      sc34C
      sc34D
      sc34E
      sc34F
      0
      sc35A
      sc35B
      sc35C
      sc35D
      sc35E
      sc35F
      0
      sc36A
      sc36B
      sc36C
      sc36D
      sc36E
      sc36F
      0
      sc37A
      sc37B
      sc37C
      sc37D
      sc37E
      sc37F
      0
      sc38A
      sc38B
      sc38C
      sc38D
      sc38E
      sc38F
      0
      sc39A
      sc39B
      sc39C
      sc39D
      sc39E
      sc39F
      0
      sc40A
      sc40B
      sc40C
      sc40D
      sc40E
      sc40F
      0
      sc41A
      sc41B
      sc41C
      sc41D
      sc41E
      sc41F
      0
      sc42A
      sc42B
      sc42C
      sc42D
      sc42E
      sc42F
      0
      sc43A
      sc43B
      sc43C
      sc43D
      sc43E
      sc43F)
   6))
(assert (= (+ 0
      sc0F
      sc1F
      sc2F
      sc3F
      sc4F
      sc5F
      sc6F
      sc7F
      sc8F
      sc9F
      sc10F
      sc11F
      sc12F
      sc13F
      sc14F
      sc15F
      sc16F
      sc17F
      sc18F
      sc19F
      sc20F
      sc21F
      sc22F
      sc23F
      sc24F
      sc25F
      sc26F
      sc27F
      sc28F
      sc29F
      sc30F
      sc31F
      sc32F
      sc33F
      sc34F
      sc35F
      sc36F
      sc37F
      sc38F
      sc39F
      sc40F
      sc41F
      sc42F
      sc43F)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun var30A () String)
(declare-fun var30B () String)
(declare-fun var30C () String)
(declare-fun var30D () String)
(declare-fun var30E () String)
(declare-fun var30F () String)
(declare-fun unch230A () String)
(declare-fun ch30A () String)
(declare-fun unch130A () String)
(declare-fun stem30 () String)
(declare-fun unch230B () String)
(declare-fun ch30B () String)
(declare-fun unch130B () String)
(declare-fun unch230C () String)
(declare-fun ch30C () String)
(declare-fun unch130C () String)
(declare-fun unch230D () String)
(declare-fun ch30D () String)
(declare-fun unch130D () String)
(declare-fun unch230E () String)
(declare-fun ch30E () String)
(declare-fun unch130E () String)
(declare-fun unch230F () String)
(declare-fun ch30F () String)
(declare-fun unch130F () String)
(declare-fun l30 () Int)
(declare-fun sc30A () Int)
(declare-fun sc30B () Int)
(declare-fun sc30C () Int)
(declare-fun sc30D () Int)
(declare-fun sc30E () Int)
(declare-fun sc30F () Int)
(declare-fun var31A () String)
(declare-fun var31B () String)
(declare-fun var31C () String)
(declare-fun var31D () String)
(declare-fun var31E () String)
(declare-fun var31F () String)
(declare-fun unch231A () String)
(declare-fun ch31A () String)
(declare-fun unch131A () String)
(declare-fun stem31 () String)
(declare-fun unch231B () String)
(declare-fun ch31B () String)
(declare-fun unch131B () String)
(declare-fun unch231C () String)
(declare-fun ch31C () String)
(declare-fun unch131C () String)
(declare-fun unch231D () String)
(declare-fun ch31D () String)
(declare-fun unch131D () String)
(declare-fun unch231E () String)
(declare-fun ch31E () String)
(declare-fun unch131E () String)
(declare-fun unch231F () String)
(declare-fun ch31F () String)
(declare-fun unch131F () String)
(declare-fun l31 () Int)
(declare-fun sc31A () Int)
(declare-fun sc31B () Int)
(declare-fun sc31C () Int)
(declare-fun sc31D () Int)
(declare-fun sc31E () Int)
(declare-fun sc31F () Int)
(declare-fun var32A () String)
(declare-fun var32B () String)
(declare-fun var32C () String)
(declare-fun var32D () String)
(declare-fun var32E () String)
(declare-fun var32F () String)
(declare-fun unch232A () String)
(declare-fun ch32A () String)
(declare-fun unch132A () String)
(declare-fun stem32 () String)
(declare-fun unch232B () String)
(declare-fun ch32B () String)
(declare-fun unch132B () String)
(declare-fun unch232C () String)
(declare-fun ch32C () String)
(declare-fun unch132C () String)
(declare-fun unch232D () String)
(declare-fun ch32D () String)
(declare-fun unch132D () String)
(declare-fun unch232E () String)
(declare-fun ch32E () String)
(declare-fun unch132E () String)
(declare-fun unch232F () String)
(declare-fun ch32F () String)
(declare-fun unch132F () String)
(declare-fun l32 () Int)
(declare-fun sc32A () Int)
(declare-fun sc32B () Int)
(declare-fun sc32C () Int)
(declare-fun sc32D () Int)
(declare-fun sc32E () Int)
(declare-fun sc32F () Int)
(declare-fun var33A () String)
(declare-fun var33B () String)
(declare-fun var33C () String)
(declare-fun var33D () String)
(declare-fun var33E () String)
(declare-fun var33F () String)
(declare-fun unch233A () String)
(declare-fun ch33A () String)
(declare-fun unch133A () String)
(declare-fun stem33 () String)
(declare-fun unch233B () String)
(declare-fun ch33B () String)
(declare-fun unch133B () String)
(declare-fun unch233C () String)
(declare-fun ch33C () String)
(declare-fun unch133C () String)
(declare-fun unch233D () String)
(declare-fun ch33D () String)
(declare-fun unch133D () String)
(declare-fun unch233E () String)
(declare-fun ch33E () String)
(declare-fun unch133E () String)
(declare-fun unch233F () String)
(declare-fun ch33F () String)
(declare-fun unch133F () String)
(declare-fun l33 () Int)
(declare-fun sc33A () Int)
(declare-fun sc33B () Int)
(declare-fun sc33C () Int)
(declare-fun sc33D () Int)
(declare-fun sc33E () Int)
(declare-fun sc33F () Int)
(declare-fun var34A () String)
(declare-fun var34B () String)
(declare-fun var34C () String)
(declare-fun var34D () String)
(declare-fun var34E () String)
(declare-fun var34F () String)
(declare-fun unch234A () String)
(declare-fun ch34A () String)
(declare-fun unch134A () String)
(declare-fun stem34 () String)
(declare-fun unch234B () String)
(declare-fun ch34B () String)
(declare-fun unch134B () String)
(declare-fun unch234C () String)
(declare-fun ch34C () String)
(declare-fun unch134C () String)
(declare-fun unch234D () String)
(declare-fun ch34D () String)
(declare-fun unch134D () String)
(declare-fun unch234E () String)
(declare-fun ch34E () String)
(declare-fun unch134E () String)
(declare-fun unch234F () String)
(declare-fun ch34F () String)
(declare-fun unch134F () String)
(declare-fun l34 () Int)
(declare-fun sc34A () Int)
(declare-fun sc34B () Int)
(declare-fun sc34C () Int)
(declare-fun sc34D () Int)
(declare-fun sc34E () Int)
(declare-fun sc34F () Int)
(declare-fun var35A () String)
(declare-fun var35B () String)
(declare-fun var35C () String)
(declare-fun var35D () String)
(declare-fun var35E () String)
(declare-fun var35F () String)
(declare-fun unch235A () String)
(declare-fun ch35A () String)
(declare-fun unch135A () String)
(declare-fun stem35 () String)
(declare-fun unch235B () String)
(declare-fun ch35B () String)
(declare-fun unch135B () String)
(declare-fun unch235C () String)
(declare-fun ch35C () String)
(declare-fun unch135C () String)
(declare-fun unch235D () String)
(declare-fun ch35D () String)
(declare-fun unch135D () String)
(declare-fun unch235E () String)
(declare-fun ch35E () String)
(declare-fun unch135E () String)
(declare-fun unch235F () String)
(declare-fun ch35F () String)
(declare-fun unch135F () String)
(declare-fun l35 () Int)
(declare-fun sc35A () Int)
(declare-fun sc35B () Int)
(declare-fun sc35C () Int)
(declare-fun sc35D () Int)
(declare-fun sc35E () Int)
(declare-fun sc35F () Int)
(declare-fun var36A () String)
(declare-fun var36B () String)
(declare-fun var36C () String)
(declare-fun var36D () String)
(declare-fun var36E () String)
(declare-fun var36F () String)
(declare-fun unch236A () String)
(declare-fun ch36A () String)
(declare-fun unch136A () String)
(declare-fun stem36 () String)
(declare-fun unch236B () String)
(declare-fun ch36B () String)
(declare-fun unch136B () String)
(declare-fun unch236C () String)
(declare-fun ch36C () String)
(declare-fun unch136C () String)
(declare-fun unch236D () String)
(declare-fun ch36D () String)
(declare-fun unch136D () String)
(declare-fun unch236E () String)
(declare-fun ch36E () String)
(declare-fun unch136E () String)
(declare-fun unch236F () String)
(declare-fun ch36F () String)
(declare-fun unch136F () String)
(declare-fun l36 () Int)
(declare-fun sc36A () Int)
(declare-fun sc36B () Int)
(declare-fun sc36C () Int)
(declare-fun sc36D () Int)
(declare-fun sc36E () Int)
(declare-fun sc36F () Int)
(declare-fun var37A () String)
(declare-fun var37B () String)
(declare-fun var37C () String)
(declare-fun var37D () String)
(declare-fun var37E () String)
(declare-fun var37F () String)
(declare-fun unch237A () String)
(declare-fun ch37A () String)
(declare-fun unch137A () String)
(declare-fun stem37 () String)
(declare-fun unch237B () String)
(declare-fun ch37B () String)
(declare-fun unch137B () String)
(declare-fun unch237C () String)
(declare-fun ch37C () String)
(declare-fun unch137C () String)
(declare-fun unch237D () String)
(declare-fun ch37D () String)
(declare-fun unch137D () String)
(declare-fun unch237E () String)
(declare-fun ch37E () String)
(declare-fun unch137E () String)
(declare-fun unch237F () String)
(declare-fun ch37F () String)
(declare-fun unch137F () String)
(declare-fun l37 () Int)
(declare-fun sc37A () Int)
(declare-fun sc37B () Int)
(declare-fun sc37C () Int)
(declare-fun sc37D () Int)
(declare-fun sc37E () Int)
(declare-fun sc37F () Int)
(declare-fun var38A () String)
(declare-fun var38B () String)
(declare-fun var38C () String)
(declare-fun var38D () String)
(declare-fun var38E () String)
(declare-fun var38F () String)
(declare-fun unch238A () String)
(declare-fun ch38A () String)
(declare-fun unch138A () String)
(declare-fun stem38 () String)
(declare-fun unch238B () String)
(declare-fun ch38B () String)
(declare-fun unch138B () String)
(declare-fun unch238C () String)
(declare-fun ch38C () String)
(declare-fun unch138C () String)
(declare-fun unch238D () String)
(declare-fun ch38D () String)
(declare-fun unch138D () String)
(declare-fun unch238E () String)
(declare-fun ch38E () String)
(declare-fun unch138E () String)
(declare-fun unch238F () String)
(declare-fun ch38F () String)
(declare-fun unch138F () String)
(declare-fun l38 () Int)
(declare-fun sc38A () Int)
(declare-fun sc38B () Int)
(declare-fun sc38C () Int)
(declare-fun sc38D () Int)
(declare-fun sc38E () Int)
(declare-fun sc38F () Int)
(declare-fun var39A () String)
(declare-fun var39B () String)
(declare-fun var39C () String)
(declare-fun var39D () String)
(declare-fun var39E () String)
(declare-fun var39F () String)
(declare-fun unch239A () String)
(declare-fun ch39A () String)
(declare-fun unch139A () String)
(declare-fun stem39 () String)
(declare-fun unch239B () String)
(declare-fun ch39B () String)
(declare-fun unch139B () String)
(declare-fun unch239C () String)
(declare-fun ch39C () String)
(declare-fun unch139C () String)
(declare-fun unch239D () String)
(declare-fun ch39D () String)
(declare-fun unch139D () String)
(declare-fun unch239E () String)
(declare-fun ch39E () String)
(declare-fun unch139E () String)
(declare-fun unch239F () String)
(declare-fun ch39F () String)
(declare-fun unch139F () String)
(declare-fun l39 () Int)
(declare-fun sc39A () Int)
(declare-fun sc39B () Int)
(declare-fun sc39C () Int)
(declare-fun sc39D () Int)
(declare-fun sc39E () Int)
(declare-fun sc39F () Int)
(declare-fun var40A () String)
(declare-fun var40B () String)
(declare-fun var40C () String)
(declare-fun var40D () String)
(declare-fun var40E () String)
(declare-fun var40F () String)
(declare-fun unch240A () String)
(declare-fun ch40A () String)
(declare-fun unch140A () String)
(declare-fun stem40 () String)
(declare-fun unch240B () String)
(declare-fun ch40B () String)
(declare-fun unch140B () String)
(declare-fun unch240C () String)
(declare-fun ch40C () String)
(declare-fun unch140C () String)
(declare-fun unch240D () String)
(declare-fun ch40D () String)
(declare-fun unch140D () String)
(declare-fun unch240E () String)
(declare-fun ch40E () String)
(declare-fun unch140E () String)
(declare-fun unch240F () String)
(declare-fun ch40F () String)
(declare-fun unch140F () String)
(declare-fun l40 () Int)
(declare-fun sc40A () Int)
(declare-fun sc40B () Int)
(declare-fun sc40C () Int)
(declare-fun sc40D () Int)
(declare-fun sc40E () Int)
(declare-fun sc40F () Int)
(declare-fun var41A () String)
(declare-fun var41B () String)
(declare-fun var41C () String)
(declare-fun var41D () String)
(declare-fun var41E () String)
(declare-fun var41F () String)
(declare-fun unch241A () String)
(declare-fun ch41A () String)
(declare-fun unch141A () String)
(declare-fun stem41 () String)
(declare-fun unch241B () String)
(declare-fun ch41B () String)
(declare-fun unch141B () String)
(declare-fun unch241C () String)
(declare-fun ch41C () String)
(declare-fun unch141C () String)
(declare-fun unch241D () String)
(declare-fun ch41D () String)
(declare-fun unch141D () String)
(declare-fun unch241E () String)
(declare-fun ch41E () String)
(declare-fun unch141E () String)
(declare-fun unch241F () String)
(declare-fun ch41F () String)
(declare-fun unch141F () String)
(declare-fun l41 () Int)
(declare-fun sc41A () Int)
(declare-fun sc41B () Int)
(declare-fun sc41C () Int)
(declare-fun sc41D () Int)
(declare-fun sc41E () Int)
(declare-fun sc41F () Int)
(declare-fun var42A () String)
(declare-fun var42B () String)
(declare-fun var42C () String)
(declare-fun var42D () String)
(declare-fun var42E () String)
(declare-fun var42F () String)
(declare-fun unch242A () String)
(declare-fun ch42A () String)
(declare-fun unch142A () String)
(declare-fun stem42 () String)
(declare-fun unch242B () String)
(declare-fun ch42B () String)
(declare-fun unch142B () String)
(declare-fun unch242C () String)
(declare-fun ch42C () String)
(declare-fun unch142C () String)
(declare-fun unch242D () String)
(declare-fun ch42D () String)
(declare-fun unch142D () String)
(declare-fun unch242E () String)
(declare-fun ch42E () String)
(declare-fun unch142E () String)
(declare-fun unch242F () String)
(declare-fun ch42F () String)
(declare-fun unch142F () String)
(declare-fun l42 () Int)
(declare-fun sc42A () Int)
(declare-fun sc42B () Int)
(declare-fun sc42C () Int)
(declare-fun sc42D () Int)
(declare-fun sc42E () Int)
(declare-fun sc42F () Int)
(declare-fun var43A () String)
(declare-fun var43B () String)
(declare-fun var43C () String)
(declare-fun var43D () String)
(declare-fun var43E () String)
(declare-fun var43F () String)
(declare-fun unch243A () String)
(declare-fun ch43A () String)
(declare-fun unch143A () String)
(declare-fun stem43 () String)
(declare-fun unch243B () String)
(declare-fun ch43B () String)
(declare-fun unch143B () String)
(declare-fun unch243C () String)
(declare-fun ch43C () String)
(declare-fun unch143C () String)
(declare-fun unch243D () String)
(declare-fun ch43D () String)
(declare-fun unch143D () String)
(declare-fun unch243E () String)
(declare-fun ch43E () String)
(declare-fun unch143E () String)
(declare-fun unch243F () String)
(declare-fun ch43F () String)
(declare-fun unch143F () String)
(declare-fun l43 () Int)
(declare-fun sc43A () Int)
(declare-fun sc43B () Int)
(declare-fun sc43C () Int)
(declare-fun sc43D () Int)
(declare-fun sc43E () Int)
(declare-fun sc43F () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= "daar" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "daarta" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "daaro" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= "gees" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "geesta" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "geeso" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= "laf" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "lafta" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "lafo" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= "lug" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "lugta" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "luOo" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= "naag" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "naagta" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "naaOo" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= "tib" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "tibta" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "tiXo" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= "sab" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "sabta" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "saXo" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= "bad" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "bada" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "baZo" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= "Bid" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "Bida" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "BiZo" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= "fee1" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "fee1a" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "fee2o" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= "3iir" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "3iirta" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "3iiro" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= "4ul" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "4uBa" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "4ulo" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= "bil" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "biBa" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "bilo" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= "meel" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "meeBa" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "meelo" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= "kaliil" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "kaliiBa" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "kaliilo" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= "najl" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "najBa" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "najlo" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= "sun" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "sunta" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "sumo" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= "laan" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "laanta" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "laamo" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= "sin" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "sinta" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "simo" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= "dan" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "danta" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "dano" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= "daan" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "daanta" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "daano" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= "saan" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "saanta" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "saano" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= "nirig" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "nirigta" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "nirgo" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= "gaXa1" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= "gaXa1a" (str.++ unch123B (str.++ var23B unch223B))))
(assert (= "gab1o" (str.++ unch123C (str.++ var23C unch223C))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= "hoOol" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= "hoOoBa" (str.++ unch124B (str.++ var24B unch224B))))
(assert (= "hoglo" (str.++ unch124C (str.++ var24C unch224C))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= "baOal" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= "baOaBa" (str.++ unch125B (str.++ var25B unch225B))))
(assert (= "baglo" (str.++ unch125C (str.++ var25C unch225C))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= "wa5ar" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= "wa5arta" (str.++ unch126B (str.++ var26B unch226B))))
(assert (= "wa5aro" (str.++ unch126C (str.++ var26C unch226C))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= "irbad" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= "irbada" (str.++ unch127B (str.++ var27B unch227B))))
(assert (= "irbaZo" (str.++ unch127C (str.++ var27C unch227C))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= "kefed" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= "kefeda" (str.++ unch128B (str.++ var28B unch228B))))
(assert (= "kefeZo" (str.++ unch128C (str.++ var28C unch228C))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= "Bilin" (str.++ unch129A (str.++ var29A unch229A))))
(assert (= "Bilinta" (str.++ unch129B (str.++ var29B unch229B))))
(assert (= "Bilino" (str.++ unch129C (str.++ var29C unch229C))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= (str.len var30A) 1))
(assert (<= (str.len var30B) 1))
(assert (<= (str.len var30C) 1))
(assert (<= (str.len var30D) 1))
(assert (<= (str.len var30E) 1))
(assert (<= (str.len var30F) 1))
(assert (= (str.++ preA (str.++ stem30 sufA)) (str.++ unch130A (str.++ ch30A unch230A))))
(assert (= (str.++ preB (str.++ stem30 sufB)) (str.++ unch130B (str.++ ch30B unch230B))))
(assert (= (str.++ preC (str.++ stem30 sufC)) (str.++ unch130C (str.++ ch30C unch230C))))
(assert (= (str.++ preD (str.++ stem30 sufD)) (str.++ unch130D (str.++ ch30D unch230D))))
(assert (= (str.++ preE (str.++ stem30 sufE)) (str.++ unch130E (str.++ ch30E unch230E))))
(assert (= (str.++ preF (str.++ stem30 sufF)) (str.++ unch130F (str.++ ch30F unch230F))))
(assert (= "bohol" (str.++ unch130A (str.++ var30A unch230A))))
(assert (= "bohoBa" (str.++ unch130B (str.++ var30B unch230B))))
(assert (= "boholo" (str.++ unch130C (str.++ var30C unch230C))))
(assert (= (str.len stem30) l30))
(assert (= (ite (= ch30A var30A) 0 1) sc30A))
(assert (= (ite (= ch30B var30B) 0 1) sc30B))
(assert (= (ite (= ch30C var30C) 0 1) sc30C))
(assert (= (ite (= ch30D var30D) 0 1) sc30D))
(assert (= (ite (= ch30E var30E) 0 1) sc30E))
(assert (= (ite (= ch30F var30F) 0 1) sc30F))
(assert (<= sc30A 1))
(assert (<= sc30B 1))
(assert (<= sc30C 1))
(assert (<= sc30D 1))
(assert (<= sc30E 1))
(assert (<= sc30F 1))
(assert (<= (str.len var31A) 1))
(assert (<= (str.len var31B) 1))
(assert (<= (str.len var31C) 1))
(assert (<= (str.len var31D) 1))
(assert (<= (str.len var31E) 1))
(assert (<= (str.len var31F) 1))
(assert (= (str.++ preA (str.++ stem31 sufA)) (str.++ unch131A (str.++ ch31A unch231A))))
(assert (= (str.++ preB (str.++ stem31 sufB)) (str.++ unch131B (str.++ ch31B unch231B))))
(assert (= (str.++ preC (str.++ stem31 sufC)) (str.++ unch131C (str.++ ch31C unch231C))))
(assert (= (str.++ preD (str.++ stem31 sufD)) (str.++ unch131D (str.++ ch31D unch231D))))
(assert (= (str.++ preE (str.++ stem31 sufE)) (str.++ unch131E (str.++ ch31E unch231E))))
(assert (= (str.++ preF (str.++ stem31 sufF)) (str.++ unch131F (str.++ ch31F unch231F))))
(assert (= "4aajad" (str.++ unch131A (str.++ var31A unch231A))))
(assert (= "4aajada" (str.++ unch131B (str.++ var31B unch231B))))
(assert (= "4aajaZo" (str.++ unch131C (str.++ var31C unch231C))))
(assert (= (str.len stem31) l31))
(assert (= (ite (= ch31A var31A) 0 1) sc31A))
(assert (= (ite (= ch31B var31B) 0 1) sc31B))
(assert (= (ite (= ch31C var31C) 0 1) sc31C))
(assert (= (ite (= ch31D var31D) 0 1) sc31D))
(assert (= (ite (= ch31E var31E) 0 1) sc31E))
(assert (= (ite (= ch31F var31F) 0 1) sc31F))
(assert (<= sc31A 1))
(assert (<= sc31B 1))
(assert (<= sc31C 1))
(assert (<= sc31D 1))
(assert (<= sc31E 1))
(assert (<= sc31F 1))
(assert (<= (str.len var32A) 1))
(assert (<= (str.len var32B) 1))
(assert (<= (str.len var32C) 1))
(assert (<= (str.len var32D) 1))
(assert (<= (str.len var32E) 1))
(assert (<= (str.len var32F) 1))
(assert (= (str.++ preA (str.++ stem32 sufA)) (str.++ unch132A (str.++ ch32A unch232A))))
(assert (= (str.++ preB (str.++ stem32 sufB)) (str.++ unch132B (str.++ ch32B unch232B))))
(assert (= (str.++ preC (str.++ stem32 sufC)) (str.++ unch132C (str.++ ch32C unch232C))))
(assert (= (str.++ preD (str.++ stem32 sufD)) (str.++ unch132D (str.++ ch32D unch232D))))
(assert (= (str.++ preE (str.++ stem32 sufE)) (str.++ unch132E (str.++ ch32E unch232E))))
(assert (= (str.++ preF (str.++ stem32 sufF)) (str.++ unch132F (str.++ ch32F unch232F))))
(assert (= "ga3an" (str.++ unch132A (str.++ var32A unch232A))))
(assert (= "ga3anta" (str.++ unch132B (str.++ var32B unch232B))))
(assert (= "ga3mo" (str.++ unch132C (str.++ var32C unch232C))))
(assert (= (str.len stem32) l32))
(assert (= (ite (= ch32A var32A) 0 1) sc32A))
(assert (= (ite (= ch32B var32B) 0 1) sc32B))
(assert (= (ite (= ch32C var32C) 0 1) sc32C))
(assert (= (ite (= ch32D var32D) 0 1) sc32D))
(assert (= (ite (= ch32E var32E) 0 1) sc32E))
(assert (= (ite (= ch32F var32F) 0 1) sc32F))
(assert (<= sc32A 1))
(assert (<= sc32B 1))
(assert (<= sc32C 1))
(assert (<= sc32D 1))
(assert (<= sc32E 1))
(assert (<= sc32F 1))
(assert (<= (str.len var33A) 1))
(assert (<= (str.len var33B) 1))
(assert (<= (str.len var33C) 1))
(assert (<= (str.len var33D) 1))
(assert (<= (str.len var33E) 1))
(assert (<= (str.len var33F) 1))
(assert (= (str.++ preA (str.++ stem33 sufA)) (str.++ unch133A (str.++ ch33A unch233A))))
(assert (= (str.++ preB (str.++ stem33 sufB)) (str.++ unch133B (str.++ ch33B unch233B))))
(assert (= (str.++ preC (str.++ stem33 sufC)) (str.++ unch133C (str.++ ch33C unch233C))))
(assert (= (str.++ preD (str.++ stem33 sufD)) (str.++ unch133D (str.++ ch33D unch233D))))
(assert (= (str.++ preE (str.++ stem33 sufE)) (str.++ unch133E (str.++ ch33E unch233E))))
(assert (= (str.++ preF (str.++ stem33 sufF)) (str.++ unch133F (str.++ ch33F unch233F))))
(assert (= "4inan" (str.++ unch133A (str.++ var33A unch233A))))
(assert (= "4inanta" (str.++ unch133B (str.++ var33B unch233B))))
(assert (= "4inano" (str.++ unch133C (str.++ var33C unch233C))))
(assert (= (str.len stem33) l33))
(assert (= (ite (= ch33A var33A) 0 1) sc33A))
(assert (= (ite (= ch33B var33B) 0 1) sc33B))
(assert (= (ite (= ch33C var33C) 0 1) sc33C))
(assert (= (ite (= ch33D var33D) 0 1) sc33D))
(assert (= (ite (= ch33E var33E) 0 1) sc33E))
(assert (= (ite (= ch33F var33F) 0 1) sc33F))
(assert (<= sc33A 1))
(assert (<= sc33B 1))
(assert (<= sc33C 1))
(assert (<= sc33D 1))
(assert (<= sc33E 1))
(assert (<= sc33F 1))
(assert (<= (str.len var34A) 1))
(assert (<= (str.len var34B) 1))
(assert (<= (str.len var34C) 1))
(assert (<= (str.len var34D) 1))
(assert (<= (str.len var34E) 1))
(assert (<= (str.len var34F) 1))
(assert (= (str.++ preA (str.++ stem34 sufA)) (str.++ unch134A (str.++ ch34A unch234A))))
(assert (= (str.++ preB (str.++ stem34 sufB)) (str.++ unch134B (str.++ ch34B unch234B))))
(assert (= (str.++ preC (str.++ stem34 sufC)) (str.++ unch134C (str.++ ch34C unch234C))))
(assert (= (str.++ preD (str.++ stem34 sufD)) (str.++ unch134D (str.++ ch34D unch234D))))
(assert (= (str.++ preE (str.++ stem34 sufE)) (str.++ unch134E (str.++ ch34E unch234E))))
(assert (= (str.++ preF (str.++ stem34 sufF)) (str.++ unch134F (str.++ ch34F unch234F))))
(assert (= "suOaj" (str.++ unch134D (str.++ var34D unch234D))))
(assert (= "sugtaj" (str.++ unch134E (str.++ var34E unch234E))))
(assert (= "sugnaj" (str.++ unch134F (str.++ var34F unch234F))))
(assert (= (str.len stem34) l34))
(assert (= (ite (= ch34A var34A) 0 1) sc34A))
(assert (= (ite (= ch34B var34B) 0 1) sc34B))
(assert (= (ite (= ch34C var34C) 0 1) sc34C))
(assert (= (ite (= ch34D var34D) 0 1) sc34D))
(assert (= (ite (= ch34E var34E) 0 1) sc34E))
(assert (= (ite (= ch34F var34F) 0 1) sc34F))
(assert (<= sc34A 1))
(assert (<= sc34B 1))
(assert (<= sc34C 1))
(assert (<= sc34D 1))
(assert (<= sc34E 1))
(assert (<= sc34F 1))
(assert (<= (str.len var35A) 1))
(assert (<= (str.len var35B) 1))
(assert (<= (str.len var35C) 1))
(assert (<= (str.len var35D) 1))
(assert (<= (str.len var35E) 1))
(assert (<= (str.len var35F) 1))
(assert (= (str.++ preA (str.++ stem35 sufA)) (str.++ unch135A (str.++ ch35A unch235A))))
(assert (= (str.++ preB (str.++ stem35 sufB)) (str.++ unch135B (str.++ ch35B unch235B))))
(assert (= (str.++ preC (str.++ stem35 sufC)) (str.++ unch135C (str.++ ch35C unch235C))))
(assert (= (str.++ preD (str.++ stem35 sufD)) (str.++ unch135D (str.++ ch35D unch235D))))
(assert (= (str.++ preE (str.++ stem35 sufE)) (str.++ unch135E (str.++ ch35E unch235E))))
(assert (= (str.++ preF (str.++ stem35 sufF)) (str.++ unch135F (str.++ ch35F unch235F))))
(assert (= "kaXaj" (str.++ unch135D (str.++ var35D unch235D))))
(assert (= "kabtaj" (str.++ unch135E (str.++ var35E unch235E))))
(assert (= "kabnaj" (str.++ unch135F (str.++ var35F unch235F))))
(assert (= (str.len stem35) l35))
(assert (= (ite (= ch35A var35A) 0 1) sc35A))
(assert (= (ite (= ch35B var35B) 0 1) sc35B))
(assert (= (ite (= ch35C var35C) 0 1) sc35C))
(assert (= (ite (= ch35D var35D) 0 1) sc35D))
(assert (= (ite (= ch35E var35E) 0 1) sc35E))
(assert (= (ite (= ch35F var35F) 0 1) sc35F))
(assert (<= sc35A 1))
(assert (<= sc35B 1))
(assert (<= sc35C 1))
(assert (<= sc35D 1))
(assert (<= sc35E 1))
(assert (<= sc35F 1))
(assert (<= (str.len var36A) 1))
(assert (<= (str.len var36B) 1))
(assert (<= (str.len var36C) 1))
(assert (<= (str.len var36D) 1))
(assert (<= (str.len var36E) 1))
(assert (<= (str.len var36F) 1))
(assert (= (str.++ preA (str.++ stem36 sufA)) (str.++ unch136A (str.++ ch36A unch236A))))
(assert (= (str.++ preB (str.++ stem36 sufB)) (str.++ unch136B (str.++ ch36B unch236B))))
(assert (= (str.++ preC (str.++ stem36 sufC)) (str.++ unch136C (str.++ ch36C unch236C))))
(assert (= (str.++ preD (str.++ stem36 sufD)) (str.++ unch136D (str.++ ch36D unch236D))))
(assert (= (str.++ preE (str.++ stem36 sufE)) (str.++ unch136E (str.++ ch36E unch236E))))
(assert (= (str.++ preF (str.++ stem36 sufF)) (str.++ unch136F (str.++ ch36F unch236F))))
(assert (= "siZaj" (str.++ unch136D (str.++ var36D unch236D))))
(assert (= "sidaj" (str.++ unch136E (str.++ var36E unch236E))))
(assert (= "sidnaj" (str.++ unch136F (str.++ var36F unch236F))))
(assert (= (str.len stem36) l36))
(assert (= (ite (= ch36A var36A) 0 1) sc36A))
(assert (= (ite (= ch36B var36B) 0 1) sc36B))
(assert (= (ite (= ch36C var36C) 0 1) sc36C))
(assert (= (ite (= ch36D var36D) 0 1) sc36D))
(assert (= (ite (= ch36E var36E) 0 1) sc36E))
(assert (= (ite (= ch36F var36F) 0 1) sc36F))
(assert (<= sc36A 1))
(assert (<= sc36B 1))
(assert (<= sc36C 1))
(assert (<= sc36D 1))
(assert (<= sc36E 1))
(assert (<= sc36F 1))
(assert (<= (str.len var37A) 1))
(assert (<= (str.len var37B) 1))
(assert (<= (str.len var37C) 1))
(assert (<= (str.len var37D) 1))
(assert (<= (str.len var37E) 1))
(assert (<= (str.len var37F) 1))
(assert (= (str.++ preA (str.++ stem37 sufA)) (str.++ unch137A (str.++ ch37A unch237A))))
(assert (= (str.++ preB (str.++ stem37 sufB)) (str.++ unch137B (str.++ ch37B unch237B))))
(assert (= (str.++ preC (str.++ stem37 sufC)) (str.++ unch137C (str.++ ch37C unch237C))))
(assert (= (str.++ preD (str.++ stem37 sufD)) (str.++ unch137D (str.++ ch37D unch237D))))
(assert (= (str.++ preE (str.++ stem37 sufE)) (str.++ unch137E (str.++ ch37E unch237E))))
(assert (= (str.++ preF (str.++ stem37 sufF)) (str.++ unch137F (str.++ ch37F unch237F))))
(assert (= "dilaj" (str.++ unch137D (str.++ var37D unch237D))))
(assert (= "diBaj" (str.++ unch137E (str.++ var37E unch237E))))
(assert (= "dillaj" (str.++ unch137F (str.++ var37F unch237F))))
(assert (= (str.len stem37) l37))
(assert (= (ite (= ch37A var37A) 0 1) sc37A))
(assert (= (ite (= ch37B var37B) 0 1) sc37B))
(assert (= (ite (= ch37C var37C) 0 1) sc37C))
(assert (= (ite (= ch37D var37D) 0 1) sc37D))
(assert (= (ite (= ch37E var37E) 0 1) sc37E))
(assert (= (ite (= ch37F var37F) 0 1) sc37F))
(assert (<= sc37A 1))
(assert (<= sc37B 1))
(assert (<= sc37C 1))
(assert (<= sc37D 1))
(assert (<= sc37E 1))
(assert (<= sc37F 1))
(assert (<= (str.len var38A) 1))
(assert (<= (str.len var38B) 1))
(assert (<= (str.len var38C) 1))
(assert (<= (str.len var38D) 1))
(assert (<= (str.len var38E) 1))
(assert (<= (str.len var38F) 1))
(assert (= (str.++ preA (str.++ stem38 sufA)) (str.++ unch138A (str.++ ch38A unch238A))))
(assert (= (str.++ preB (str.++ stem38 sufB)) (str.++ unch138B (str.++ ch38B unch238B))))
(assert (= (str.++ preC (str.++ stem38 sufC)) (str.++ unch138C (str.++ ch38C unch238C))))
(assert (= (str.++ preD (str.++ stem38 sufD)) (str.++ unch138D (str.++ ch38D unch238D))))
(assert (= (str.++ preE (str.++ stem38 sufE)) (str.++ unch138E (str.++ ch38E unch238E))))
(assert (= (str.++ preF (str.++ stem38 sufF)) (str.++ unch138F (str.++ ch38F unch238F))))
(assert (= "ganaj" (str.++ unch138D (str.++ var38D unch238D))))
(assert (= "gantaj" (str.++ unch138E (str.++ var38E unch238E))))
(assert (= "gannaj" (str.++ unch138F (str.++ var38F unch238F))))
(assert (= (str.len stem38) l38))
(assert (= (ite (= ch38A var38A) 0 1) sc38A))
(assert (= (ite (= ch38B var38B) 0 1) sc38B))
(assert (= (ite (= ch38C var38C) 0 1) sc38C))
(assert (= (ite (= ch38D var38D) 0 1) sc38D))
(assert (= (ite (= ch38E var38E) 0 1) sc38E))
(assert (= (ite (= ch38F var38F) 0 1) sc38F))
(assert (<= sc38A 1))
(assert (<= sc38B 1))
(assert (<= sc38C 1))
(assert (<= sc38D 1))
(assert (<= sc38E 1))
(assert (<= sc38F 1))
(assert (<= (str.len var39A) 1))
(assert (<= (str.len var39B) 1))
(assert (<= (str.len var39C) 1))
(assert (<= (str.len var39D) 1))
(assert (<= (str.len var39E) 1))
(assert (<= (str.len var39F) 1))
(assert (= (str.++ preA (str.++ stem39 sufA)) (str.++ unch139A (str.++ ch39A unch239A))))
(assert (= (str.++ preB (str.++ stem39 sufB)) (str.++ unch139B (str.++ ch39B unch239B))))
(assert (= (str.++ preC (str.++ stem39 sufC)) (str.++ unch139C (str.++ ch39C unch239C))))
(assert (= (str.++ preD (str.++ stem39 sufD)) (str.++ unch139D (str.++ ch39D unch239D))))
(assert (= (str.++ preE (str.++ stem39 sufE)) (str.++ unch139E (str.++ ch39E unch239E))))
(assert (= (str.++ preF (str.++ stem39 sufF)) (str.++ unch139F (str.++ ch39F unch239F))))
(assert (= "tumaj" (str.++ unch139D (str.++ var39D unch239D))))
(assert (= "tuntaj" (str.++ unch139E (str.++ var39E unch239E))))
(assert (= "tunnaj" (str.++ unch139F (str.++ var39F unch239F))))
(assert (= (str.len stem39) l39))
(assert (= (ite (= ch39A var39A) 0 1) sc39A))
(assert (= (ite (= ch39B var39B) 0 1) sc39B))
(assert (= (ite (= ch39C var39C) 0 1) sc39C))
(assert (= (ite (= ch39D var39D) 0 1) sc39D))
(assert (= (ite (= ch39E var39E) 0 1) sc39E))
(assert (= (ite (= ch39F var39F) 0 1) sc39F))
(assert (<= sc39A 1))
(assert (<= sc39B 1))
(assert (<= sc39C 1))
(assert (<= sc39D 1))
(assert (<= sc39E 1))
(assert (<= sc39F 1))
(assert (<= (str.len var40A) 1))
(assert (<= (str.len var40B) 1))
(assert (<= (str.len var40C) 1))
(assert (<= (str.len var40D) 1))
(assert (<= (str.len var40E) 1))
(assert (<= (str.len var40F) 1))
(assert (= (str.++ preA (str.++ stem40 sufA)) (str.++ unch140A (str.++ ch40A unch240A))))
(assert (= (str.++ preB (str.++ stem40 sufB)) (str.++ unch140B (str.++ ch40B unch240B))))
(assert (= (str.++ preC (str.++ stem40 sufC)) (str.++ unch140C (str.++ ch40C unch240C))))
(assert (= (str.++ preD (str.++ stem40 sufD)) (str.++ unch140D (str.++ ch40D unch240D))))
(assert (= (str.++ preE (str.++ stem40 sufE)) (str.++ unch140E (str.++ ch40E unch240E))))
(assert (= (str.++ preF (str.++ stem40 sufF)) (str.++ unch140F (str.++ ch40F unch240F))))
(assert (= "argaj" (str.++ unch140D (str.++ var40D unch240D))))
(assert (= "aragtaj" (str.++ unch140E (str.++ var40E unch240E))))
(assert (= "aragnaj" (str.++ unch140F (str.++ var40F unch240F))))
(assert (= (str.len stem40) l40))
(assert (= (ite (= ch40A var40A) 0 1) sc40A))
(assert (= (ite (= ch40B var40B) 0 1) sc40B))
(assert (= (ite (= ch40C var40C) 0 1) sc40C))
(assert (= (ite (= ch40D var40D) 0 1) sc40D))
(assert (= (ite (= ch40E var40E) 0 1) sc40E))
(assert (= (ite (= ch40F var40F) 0 1) sc40F))
(assert (<= sc40A 1))
(assert (<= sc40B 1))
(assert (<= sc40C 1))
(assert (<= sc40D 1))
(assert (<= sc40E 1))
(assert (<= sc40F 1))
(assert (<= (str.len var41A) 1))
(assert (<= (str.len var41B) 1))
(assert (<= (str.len var41C) 1))
(assert (<= (str.len var41D) 1))
(assert (<= (str.len var41E) 1))
(assert (<= (str.len var41F) 1))
(assert (= (str.++ preA (str.++ stem41 sufA)) (str.++ unch141A (str.++ ch41A unch241A))))
(assert (= (str.++ preB (str.++ stem41 sufB)) (str.++ unch141B (str.++ ch41B unch241B))))
(assert (= (str.++ preC (str.++ stem41 sufC)) (str.++ unch141C (str.++ ch41C unch241C))))
(assert (= (str.++ preD (str.++ stem41 sufD)) (str.++ unch141D (str.++ ch41D unch241D))))
(assert (= (str.++ preE (str.++ stem41 sufE)) (str.++ unch141E (str.++ ch41E unch241E))))
(assert (= (str.++ preF (str.++ stem41 sufF)) (str.++ unch141F (str.++ ch41F unch241F))))
(assert (= "gudbaj" (str.++ unch141D (str.++ var41D unch241D))))
(assert (= "guZubtaj" (str.++ unch141E (str.++ var41E unch241E))))
(assert (= "guZubnaj" (str.++ unch141F (str.++ var41F unch241F))))
(assert (= (str.len stem41) l41))
(assert (= (ite (= ch41A var41A) 0 1) sc41A))
(assert (= (ite (= ch41B var41B) 0 1) sc41B))
(assert (= (ite (= ch41C var41C) 0 1) sc41C))
(assert (= (ite (= ch41D var41D) 0 1) sc41D))
(assert (= (ite (= ch41E var41E) 0 1) sc41E))
(assert (= (ite (= ch41F var41F) 0 1) sc41F))
(assert (<= sc41A 1))
(assert (<= sc41B 1))
(assert (<= sc41C 1))
(assert (<= sc41D 1))
(assert (<= sc41E 1))
(assert (<= sc41F 1))
(assert (<= (str.len var42A) 1))
(assert (<= (str.len var42B) 1))
(assert (<= (str.len var42C) 1))
(assert (<= (str.len var42D) 1))
(assert (<= (str.len var42E) 1))
(assert (<= (str.len var42F) 1))
(assert (= (str.++ preA (str.++ stem42 sufA)) (str.++ unch142A (str.++ ch42A unch242A))))
(assert (= (str.++ preB (str.++ stem42 sufB)) (str.++ unch142B (str.++ ch42B unch242B))))
(assert (= (str.++ preC (str.++ stem42 sufC)) (str.++ unch142C (str.++ ch42C unch242C))))
(assert (= (str.++ preD (str.++ stem42 sufD)) (str.++ unch142D (str.++ ch42D unch242D))))
(assert (= (str.++ preE (str.++ stem42 sufE)) (str.++ unch142E (str.++ ch42E unch242E))))
(assert (= (str.++ preF (str.++ stem42 sufF)) (str.++ unch142F (str.++ ch42F unch242F))))
(assert (= "qoslaj" (str.++ unch142D (str.++ var42D unch242D))))
(assert (= "qosoBaj" (str.++ unch142E (str.++ var42E unch242E))))
(assert (= "qosollaj" (str.++ unch142F (str.++ var42F unch242F))))
(assert (= (str.len stem42) l42))
(assert (= (ite (= ch42A var42A) 0 1) sc42A))
(assert (= (ite (= ch42B var42B) 0 1) sc42B))
(assert (= (ite (= ch42C var42C) 0 1) sc42C))
(assert (= (ite (= ch42D var42D) 0 1) sc42D))
(assert (= (ite (= ch42E var42E) 0 1) sc42E))
(assert (= (ite (= ch42F var42F) 0 1) sc42F))
(assert (<= sc42A 1))
(assert (<= sc42B 1))
(assert (<= sc42C 1))
(assert (<= sc42D 1))
(assert (<= sc42E 1))
(assert (<= sc42F 1))
(assert (<= (str.len var43A) 1))
(assert (<= (str.len var43B) 1))
(assert (<= (str.len var43C) 1))
(assert (<= (str.len var43D) 1))
(assert (<= (str.len var43E) 1))
(assert (<= (str.len var43F) 1))
(assert (= (str.++ preA (str.++ stem43 sufA)) (str.++ unch143A (str.++ ch43A unch243A))))
(assert (= (str.++ preB (str.++ stem43 sufB)) (str.++ unch143B (str.++ ch43B unch243B))))
(assert (= (str.++ preC (str.++ stem43 sufC)) (str.++ unch143C (str.++ ch43C unch243C))))
(assert (= (str.++ preD (str.++ stem43 sufD)) (str.++ unch143D (str.++ ch43D unch243D))))
(assert (= (str.++ preE (str.++ stem43 sufE)) (str.++ unch143E (str.++ ch43E unch243E))))
(assert (= (str.++ preF (str.++ stem43 sufF)) (str.++ unch143F (str.++ ch43F unch243F))))
(assert (= "hadlaj" (str.++ unch143D (str.++ var43D unch243D))))
(assert (= "haZaBaj" (str.++ unch143E (str.++ var43E unch243E))))
(assert (= "haZallaj" (str.++ unch143F (str.++ var43F unch243F))))
(assert (= (str.len stem43) l43))
(assert (= (ite (= ch43A var43A) 0 1) sc43A))
(assert (= (ite (= ch43B var43B) 0 1) sc43B))
(assert (= (ite (= ch43C var43C) 0 1) sc43C))
(assert (= (ite (= ch43D var43D) 0 1) sc43D))
(assert (= (ite (= ch43E var43E) 0 1) sc43E))
(assert (= (ite (= ch43F var43F) 0 1) sc43F))
(assert (<= sc43A 1))
(assert (<= sc43B 1))
(assert (<= sc43C 1))
(assert (<= sc43D 1))
(assert (<= sc43E 1))
(assert (<= sc43F 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      0
      sc30A
      sc30B
      sc30C
      sc30D
      sc30E
      sc30F
      0
      sc31A
      sc31B
      sc31C
      sc31D
      sc31E
      sc31F
      0
      sc32A
      sc32B
      sc32C
      sc32D
      sc32E
      sc32F
      0
      sc33A
      sc33B
      sc33C
      sc33D
      sc33E
      sc33F
      0
      sc34A
      sc34B
      sc34C
      sc34D
      sc34E
      sc34F
      0
      sc35A
      sc35B
      sc35C
      sc35D
      sc35E
      sc35F
      0
      sc36A
      sc36B
      sc36C
      sc36D
      sc36E
      sc36F
      0
      sc37A
      sc37B
      sc37C
      sc37D
      sc37E
      sc37F
      0
      sc38A
      sc38B
      sc38C
      sc38D
      sc38E
      sc38F
      0
      sc39A
      sc39B
      sc39C
      sc39D
      sc39E
      sc39F
      0
      sc40A
      sc40B
      sc40C
      sc40D
      sc40E
      sc40F
      0
      sc41A
      sc41B
      sc41C
      sc41D
      sc41E
      sc41F
      0
      sc42A
      sc42B
      sc42C
      sc42D
      sc42E
      sc42F
      0
      sc43A
      sc43B
      sc43C
      sc43D
      sc43E
      sc43F)
   7))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A
      sc17A
      sc18A
      sc19A
      sc20A
      sc21A
      sc22A
      sc23A
      sc24A
      sc25A
      sc26A
      sc27A
      sc28A
      sc29A
      sc30A
      sc31A
      sc32A
      sc33A
      sc34A
      sc35A
      sc36A
      sc37A
      sc38A
      sc39A
      sc40A
      sc41A
      sc42A
      sc43A)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun var30A () String)
(declare-fun var30B () String)
(declare-fun var30C () String)
(declare-fun var30D () String)
(declare-fun var30E () String)
(declare-fun var30F () String)
(declare-fun unch230A () String)
(declare-fun ch30A () String)
(declare-fun unch130A () String)
(declare-fun stem30 () String)
(declare-fun unch230B () String)
(declare-fun ch30B () String)
(declare-fun unch130B () String)
(declare-fun unch230C () String)
(declare-fun ch30C () String)
(declare-fun unch130C () String)
(declare-fun unch230D () String)
(declare-fun ch30D () String)
(declare-fun unch130D () String)
(declare-fun unch230E () String)
(declare-fun ch30E () String)
(declare-fun unch130E () String)
(declare-fun unch230F () String)
(declare-fun ch30F () String)
(declare-fun unch130F () String)
(declare-fun l30 () Int)
(declare-fun sc30A () Int)
(declare-fun sc30B () Int)
(declare-fun sc30C () Int)
(declare-fun sc30D () Int)
(declare-fun sc30E () Int)
(declare-fun sc30F () Int)
(declare-fun var31A () String)
(declare-fun var31B () String)
(declare-fun var31C () String)
(declare-fun var31D () String)
(declare-fun var31E () String)
(declare-fun var31F () String)
(declare-fun unch231A () String)
(declare-fun ch31A () String)
(declare-fun unch131A () String)
(declare-fun stem31 () String)
(declare-fun unch231B () String)
(declare-fun ch31B () String)
(declare-fun unch131B () String)
(declare-fun unch231C () String)
(declare-fun ch31C () String)
(declare-fun unch131C () String)
(declare-fun unch231D () String)
(declare-fun ch31D () String)
(declare-fun unch131D () String)
(declare-fun unch231E () String)
(declare-fun ch31E () String)
(declare-fun unch131E () String)
(declare-fun unch231F () String)
(declare-fun ch31F () String)
(declare-fun unch131F () String)
(declare-fun l31 () Int)
(declare-fun sc31A () Int)
(declare-fun sc31B () Int)
(declare-fun sc31C () Int)
(declare-fun sc31D () Int)
(declare-fun sc31E () Int)
(declare-fun sc31F () Int)
(declare-fun var32A () String)
(declare-fun var32B () String)
(declare-fun var32C () String)
(declare-fun var32D () String)
(declare-fun var32E () String)
(declare-fun var32F () String)
(declare-fun unch232A () String)
(declare-fun ch32A () String)
(declare-fun unch132A () String)
(declare-fun stem32 () String)
(declare-fun unch232B () String)
(declare-fun ch32B () String)
(declare-fun unch132B () String)
(declare-fun unch232C () String)
(declare-fun ch32C () String)
(declare-fun unch132C () String)
(declare-fun unch232D () String)
(declare-fun ch32D () String)
(declare-fun unch132D () String)
(declare-fun unch232E () String)
(declare-fun ch32E () String)
(declare-fun unch132E () String)
(declare-fun unch232F () String)
(declare-fun ch32F () String)
(declare-fun unch132F () String)
(declare-fun l32 () Int)
(declare-fun sc32A () Int)
(declare-fun sc32B () Int)
(declare-fun sc32C () Int)
(declare-fun sc32D () Int)
(declare-fun sc32E () Int)
(declare-fun sc32F () Int)
(declare-fun var33A () String)
(declare-fun var33B () String)
(declare-fun var33C () String)
(declare-fun var33D () String)
(declare-fun var33E () String)
(declare-fun var33F () String)
(declare-fun unch233A () String)
(declare-fun ch33A () String)
(declare-fun unch133A () String)
(declare-fun stem33 () String)
(declare-fun unch233B () String)
(declare-fun ch33B () String)
(declare-fun unch133B () String)
(declare-fun unch233C () String)
(declare-fun ch33C () String)
(declare-fun unch133C () String)
(declare-fun unch233D () String)
(declare-fun ch33D () String)
(declare-fun unch133D () String)
(declare-fun unch233E () String)
(declare-fun ch33E () String)
(declare-fun unch133E () String)
(declare-fun unch233F () String)
(declare-fun ch33F () String)
(declare-fun unch133F () String)
(declare-fun l33 () Int)
(declare-fun sc33A () Int)
(declare-fun sc33B () Int)
(declare-fun sc33C () Int)
(declare-fun sc33D () Int)
(declare-fun sc33E () Int)
(declare-fun sc33F () Int)
(declare-fun var34A () String)
(declare-fun var34B () String)
(declare-fun var34C () String)
(declare-fun var34D () String)
(declare-fun var34E () String)
(declare-fun var34F () String)
(declare-fun unch234A () String)
(declare-fun ch34A () String)
(declare-fun unch134A () String)
(declare-fun stem34 () String)
(declare-fun unch234B () String)
(declare-fun ch34B () String)
(declare-fun unch134B () String)
(declare-fun unch234C () String)
(declare-fun ch34C () String)
(declare-fun unch134C () String)
(declare-fun unch234D () String)
(declare-fun ch34D () String)
(declare-fun unch134D () String)
(declare-fun unch234E () String)
(declare-fun ch34E () String)
(declare-fun unch134E () String)
(declare-fun unch234F () String)
(declare-fun ch34F () String)
(declare-fun unch134F () String)
(declare-fun l34 () Int)
(declare-fun sc34A () Int)
(declare-fun sc34B () Int)
(declare-fun sc34C () Int)
(declare-fun sc34D () Int)
(declare-fun sc34E () Int)
(declare-fun sc34F () Int)
(declare-fun var35A () String)
(declare-fun var35B () String)
(declare-fun var35C () String)
(declare-fun var35D () String)
(declare-fun var35E () String)
(declare-fun var35F () String)
(declare-fun unch235A () String)
(declare-fun ch35A () String)
(declare-fun unch135A () String)
(declare-fun stem35 () String)
(declare-fun unch235B () String)
(declare-fun ch35B () String)
(declare-fun unch135B () String)
(declare-fun unch235C () String)
(declare-fun ch35C () String)
(declare-fun unch135C () String)
(declare-fun unch235D () String)
(declare-fun ch35D () String)
(declare-fun unch135D () String)
(declare-fun unch235E () String)
(declare-fun ch35E () String)
(declare-fun unch135E () String)
(declare-fun unch235F () String)
(declare-fun ch35F () String)
(declare-fun unch135F () String)
(declare-fun l35 () Int)
(declare-fun sc35A () Int)
(declare-fun sc35B () Int)
(declare-fun sc35C () Int)
(declare-fun sc35D () Int)
(declare-fun sc35E () Int)
(declare-fun sc35F () Int)
(declare-fun var36A () String)
(declare-fun var36B () String)
(declare-fun var36C () String)
(declare-fun var36D () String)
(declare-fun var36E () String)
(declare-fun var36F () String)
(declare-fun unch236A () String)
(declare-fun ch36A () String)
(declare-fun unch136A () String)
(declare-fun stem36 () String)
(declare-fun unch236B () String)
(declare-fun ch36B () String)
(declare-fun unch136B () String)
(declare-fun unch236C () String)
(declare-fun ch36C () String)
(declare-fun unch136C () String)
(declare-fun unch236D () String)
(declare-fun ch36D () String)
(declare-fun unch136D () String)
(declare-fun unch236E () String)
(declare-fun ch36E () String)
(declare-fun unch136E () String)
(declare-fun unch236F () String)
(declare-fun ch36F () String)
(declare-fun unch136F () String)
(declare-fun l36 () Int)
(declare-fun sc36A () Int)
(declare-fun sc36B () Int)
(declare-fun sc36C () Int)
(declare-fun sc36D () Int)
(declare-fun sc36E () Int)
(declare-fun sc36F () Int)
(declare-fun var37A () String)
(declare-fun var37B () String)
(declare-fun var37C () String)
(declare-fun var37D () String)
(declare-fun var37E () String)
(declare-fun var37F () String)
(declare-fun unch237A () String)
(declare-fun ch37A () String)
(declare-fun unch137A () String)
(declare-fun stem37 () String)
(declare-fun unch237B () String)
(declare-fun ch37B () String)
(declare-fun unch137B () String)
(declare-fun unch237C () String)
(declare-fun ch37C () String)
(declare-fun unch137C () String)
(declare-fun unch237D () String)
(declare-fun ch37D () String)
(declare-fun unch137D () String)
(declare-fun unch237E () String)
(declare-fun ch37E () String)
(declare-fun unch137E () String)
(declare-fun unch237F () String)
(declare-fun ch37F () String)
(declare-fun unch137F () String)
(declare-fun l37 () Int)
(declare-fun sc37A () Int)
(declare-fun sc37B () Int)
(declare-fun sc37C () Int)
(declare-fun sc37D () Int)
(declare-fun sc37E () Int)
(declare-fun sc37F () Int)
(declare-fun var38A () String)
(declare-fun var38B () String)
(declare-fun var38C () String)
(declare-fun var38D () String)
(declare-fun var38E () String)
(declare-fun var38F () String)
(declare-fun unch238A () String)
(declare-fun ch38A () String)
(declare-fun unch138A () String)
(declare-fun stem38 () String)
(declare-fun unch238B () String)
(declare-fun ch38B () String)
(declare-fun unch138B () String)
(declare-fun unch238C () String)
(declare-fun ch38C () String)
(declare-fun unch138C () String)
(declare-fun unch238D () String)
(declare-fun ch38D () String)
(declare-fun unch138D () String)
(declare-fun unch238E () String)
(declare-fun ch38E () String)
(declare-fun unch138E () String)
(declare-fun unch238F () String)
(declare-fun ch38F () String)
(declare-fun unch138F () String)
(declare-fun l38 () Int)
(declare-fun sc38A () Int)
(declare-fun sc38B () Int)
(declare-fun sc38C () Int)
(declare-fun sc38D () Int)
(declare-fun sc38E () Int)
(declare-fun sc38F () Int)
(declare-fun var39A () String)
(declare-fun var39B () String)
(declare-fun var39C () String)
(declare-fun var39D () String)
(declare-fun var39E () String)
(declare-fun var39F () String)
(declare-fun unch239A () String)
(declare-fun ch39A () String)
(declare-fun unch139A () String)
(declare-fun stem39 () String)
(declare-fun unch239B () String)
(declare-fun ch39B () String)
(declare-fun unch139B () String)
(declare-fun unch239C () String)
(declare-fun ch39C () String)
(declare-fun unch139C () String)
(declare-fun unch239D () String)
(declare-fun ch39D () String)
(declare-fun unch139D () String)
(declare-fun unch239E () String)
(declare-fun ch39E () String)
(declare-fun unch139E () String)
(declare-fun unch239F () String)
(declare-fun ch39F () String)
(declare-fun unch139F () String)
(declare-fun l39 () Int)
(declare-fun sc39A () Int)
(declare-fun sc39B () Int)
(declare-fun sc39C () Int)
(declare-fun sc39D () Int)
(declare-fun sc39E () Int)
(declare-fun sc39F () Int)
(declare-fun var40A () String)
(declare-fun var40B () String)
(declare-fun var40C () String)
(declare-fun var40D () String)
(declare-fun var40E () String)
(declare-fun var40F () String)
(declare-fun unch240A () String)
(declare-fun ch40A () String)
(declare-fun unch140A () String)
(declare-fun stem40 () String)
(declare-fun unch240B () String)
(declare-fun ch40B () String)
(declare-fun unch140B () String)
(declare-fun unch240C () String)
(declare-fun ch40C () String)
(declare-fun unch140C () String)
(declare-fun unch240D () String)
(declare-fun ch40D () String)
(declare-fun unch140D () String)
(declare-fun unch240E () String)
(declare-fun ch40E () String)
(declare-fun unch140E () String)
(declare-fun unch240F () String)
(declare-fun ch40F () String)
(declare-fun unch140F () String)
(declare-fun l40 () Int)
(declare-fun sc40A () Int)
(declare-fun sc40B () Int)
(declare-fun sc40C () Int)
(declare-fun sc40D () Int)
(declare-fun sc40E () Int)
(declare-fun sc40F () Int)
(declare-fun var41A () String)
(declare-fun var41B () String)
(declare-fun var41C () String)
(declare-fun var41D () String)
(declare-fun var41E () String)
(declare-fun var41F () String)
(declare-fun unch241A () String)
(declare-fun ch41A () String)
(declare-fun unch141A () String)
(declare-fun stem41 () String)
(declare-fun unch241B () String)
(declare-fun ch41B () String)
(declare-fun unch141B () String)
(declare-fun unch241C () String)
(declare-fun ch41C () String)
(declare-fun unch141C () String)
(declare-fun unch241D () String)
(declare-fun ch41D () String)
(declare-fun unch141D () String)
(declare-fun unch241E () String)
(declare-fun ch41E () String)
(declare-fun unch141E () String)
(declare-fun unch241F () String)
(declare-fun ch41F () String)
(declare-fun unch141F () String)
(declare-fun l41 () Int)
(declare-fun sc41A () Int)
(declare-fun sc41B () Int)
(declare-fun sc41C () Int)
(declare-fun sc41D () Int)
(declare-fun sc41E () Int)
(declare-fun sc41F () Int)
(declare-fun var42A () String)
(declare-fun var42B () String)
(declare-fun var42C () String)
(declare-fun var42D () String)
(declare-fun var42E () String)
(declare-fun var42F () String)
(declare-fun unch242A () String)
(declare-fun ch42A () String)
(declare-fun unch142A () String)
(declare-fun stem42 () String)
(declare-fun unch242B () String)
(declare-fun ch42B () String)
(declare-fun unch142B () String)
(declare-fun unch242C () String)
(declare-fun ch42C () String)
(declare-fun unch142C () String)
(declare-fun unch242D () String)
(declare-fun ch42D () String)
(declare-fun unch142D () String)
(declare-fun unch242E () String)
(declare-fun ch42E () String)
(declare-fun unch142E () String)
(declare-fun unch242F () String)
(declare-fun ch42F () String)
(declare-fun unch142F () String)
(declare-fun l42 () Int)
(declare-fun sc42A () Int)
(declare-fun sc42B () Int)
(declare-fun sc42C () Int)
(declare-fun sc42D () Int)
(declare-fun sc42E () Int)
(declare-fun sc42F () Int)
(declare-fun var43A () String)
(declare-fun var43B () String)
(declare-fun var43C () String)
(declare-fun var43D () String)
(declare-fun var43E () String)
(declare-fun var43F () String)
(declare-fun unch243A () String)
(declare-fun ch43A () String)
(declare-fun unch143A () String)
(declare-fun stem43 () String)
(declare-fun unch243B () String)
(declare-fun ch43B () String)
(declare-fun unch143B () String)
(declare-fun unch243C () String)
(declare-fun ch43C () String)
(declare-fun unch143C () String)
(declare-fun unch243D () String)
(declare-fun ch43D () String)
(declare-fun unch143D () String)
(declare-fun unch243E () String)
(declare-fun ch43E () String)
(declare-fun unch143E () String)
(declare-fun unch243F () String)
(declare-fun ch43F () String)
(declare-fun unch143F () String)
(declare-fun l43 () Int)
(declare-fun sc43A () Int)
(declare-fun sc43B () Int)
(declare-fun sc43C () Int)
(declare-fun sc43D () Int)
(declare-fun sc43E () Int)
(declare-fun sc43F () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= "daar" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "daarta" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "daaro" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= "gees" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "geesta" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "geeso" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= "laf" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "lafta" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "lafo" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= "lug" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "lugta" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "luOo" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= "naag" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "naagta" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "naaOo" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= "tib" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "tibta" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "tiXo" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= "sab" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "sabta" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "saXo" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= "bad" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "bada" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "baZo" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= "Bid" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "Bida" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "BiZo" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= "fee1" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "fee1a" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "fee2o" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= "3iir" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "3iirta" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "3iiro" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= "4ul" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "4uBa" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "4ulo" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= "bil" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "biBa" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "bilo" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= "meel" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "meeBa" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "meelo" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= "kaliil" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "kaliiBa" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "kaliilo" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= "najl" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "najBa" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "najlo" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= "sun" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "sunta" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "sumo" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= "laan" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "laanta" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "laamo" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= "sin" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "sinta" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "simo" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= "dan" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "danta" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "dano" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= "daan" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "daanta" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "daano" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= "saan" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "saanta" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "saano" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= "nirig" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "nirigta" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "nirgo" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= "gaXa1" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= "gaXa1a" (str.++ unch123B (str.++ var23B unch223B))))
(assert (= "gab1o" (str.++ unch123C (str.++ var23C unch223C))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= "hoOol" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= "hoOoBa" (str.++ unch124B (str.++ var24B unch224B))))
(assert (= "hoglo" (str.++ unch124C (str.++ var24C unch224C))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= "baOal" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= "baOaBa" (str.++ unch125B (str.++ var25B unch225B))))
(assert (= "baglo" (str.++ unch125C (str.++ var25C unch225C))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= "wa5ar" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= "wa5arta" (str.++ unch126B (str.++ var26B unch226B))))
(assert (= "wa5aro" (str.++ unch126C (str.++ var26C unch226C))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= "irbad" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= "irbada" (str.++ unch127B (str.++ var27B unch227B))))
(assert (= "irbaZo" (str.++ unch127C (str.++ var27C unch227C))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= "kefed" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= "kefeda" (str.++ unch128B (str.++ var28B unch228B))))
(assert (= "kefeZo" (str.++ unch128C (str.++ var28C unch228C))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= "Bilin" (str.++ unch129A (str.++ var29A unch229A))))
(assert (= "Bilinta" (str.++ unch129B (str.++ var29B unch229B))))
(assert (= "Bilino" (str.++ unch129C (str.++ var29C unch229C))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= (str.len var30A) 1))
(assert (<= (str.len var30B) 1))
(assert (<= (str.len var30C) 1))
(assert (<= (str.len var30D) 1))
(assert (<= (str.len var30E) 1))
(assert (<= (str.len var30F) 1))
(assert (= (str.++ preA (str.++ stem30 sufA)) (str.++ unch130A (str.++ ch30A unch230A))))
(assert (= (str.++ preB (str.++ stem30 sufB)) (str.++ unch130B (str.++ ch30B unch230B))))
(assert (= (str.++ preC (str.++ stem30 sufC)) (str.++ unch130C (str.++ ch30C unch230C))))
(assert (= (str.++ preD (str.++ stem30 sufD)) (str.++ unch130D (str.++ ch30D unch230D))))
(assert (= (str.++ preE (str.++ stem30 sufE)) (str.++ unch130E (str.++ ch30E unch230E))))
(assert (= (str.++ preF (str.++ stem30 sufF)) (str.++ unch130F (str.++ ch30F unch230F))))
(assert (= "bohol" (str.++ unch130A (str.++ var30A unch230A))))
(assert (= "bohoBa" (str.++ unch130B (str.++ var30B unch230B))))
(assert (= "boholo" (str.++ unch130C (str.++ var30C unch230C))))
(assert (= (str.len stem30) l30))
(assert (= (ite (= ch30A var30A) 0 1) sc30A))
(assert (= (ite (= ch30B var30B) 0 1) sc30B))
(assert (= (ite (= ch30C var30C) 0 1) sc30C))
(assert (= (ite (= ch30D var30D) 0 1) sc30D))
(assert (= (ite (= ch30E var30E) 0 1) sc30E))
(assert (= (ite (= ch30F var30F) 0 1) sc30F))
(assert (<= sc30A 1))
(assert (<= sc30B 1))
(assert (<= sc30C 1))
(assert (<= sc30D 1))
(assert (<= sc30E 1))
(assert (<= sc30F 1))
(assert (<= (str.len var31A) 1))
(assert (<= (str.len var31B) 1))
(assert (<= (str.len var31C) 1))
(assert (<= (str.len var31D) 1))
(assert (<= (str.len var31E) 1))
(assert (<= (str.len var31F) 1))
(assert (= (str.++ preA (str.++ stem31 sufA)) (str.++ unch131A (str.++ ch31A unch231A))))
(assert (= (str.++ preB (str.++ stem31 sufB)) (str.++ unch131B (str.++ ch31B unch231B))))
(assert (= (str.++ preC (str.++ stem31 sufC)) (str.++ unch131C (str.++ ch31C unch231C))))
(assert (= (str.++ preD (str.++ stem31 sufD)) (str.++ unch131D (str.++ ch31D unch231D))))
(assert (= (str.++ preE (str.++ stem31 sufE)) (str.++ unch131E (str.++ ch31E unch231E))))
(assert (= (str.++ preF (str.++ stem31 sufF)) (str.++ unch131F (str.++ ch31F unch231F))))
(assert (= "4aajad" (str.++ unch131A (str.++ var31A unch231A))))
(assert (= "4aajada" (str.++ unch131B (str.++ var31B unch231B))))
(assert (= "4aajaZo" (str.++ unch131C (str.++ var31C unch231C))))
(assert (= (str.len stem31) l31))
(assert (= (ite (= ch31A var31A) 0 1) sc31A))
(assert (= (ite (= ch31B var31B) 0 1) sc31B))
(assert (= (ite (= ch31C var31C) 0 1) sc31C))
(assert (= (ite (= ch31D var31D) 0 1) sc31D))
(assert (= (ite (= ch31E var31E) 0 1) sc31E))
(assert (= (ite (= ch31F var31F) 0 1) sc31F))
(assert (<= sc31A 1))
(assert (<= sc31B 1))
(assert (<= sc31C 1))
(assert (<= sc31D 1))
(assert (<= sc31E 1))
(assert (<= sc31F 1))
(assert (<= (str.len var32A) 1))
(assert (<= (str.len var32B) 1))
(assert (<= (str.len var32C) 1))
(assert (<= (str.len var32D) 1))
(assert (<= (str.len var32E) 1))
(assert (<= (str.len var32F) 1))
(assert (= (str.++ preA (str.++ stem32 sufA)) (str.++ unch132A (str.++ ch32A unch232A))))
(assert (= (str.++ preB (str.++ stem32 sufB)) (str.++ unch132B (str.++ ch32B unch232B))))
(assert (= (str.++ preC (str.++ stem32 sufC)) (str.++ unch132C (str.++ ch32C unch232C))))
(assert (= (str.++ preD (str.++ stem32 sufD)) (str.++ unch132D (str.++ ch32D unch232D))))
(assert (= (str.++ preE (str.++ stem32 sufE)) (str.++ unch132E (str.++ ch32E unch232E))))
(assert (= (str.++ preF (str.++ stem32 sufF)) (str.++ unch132F (str.++ ch32F unch232F))))
(assert (= "ga3an" (str.++ unch132A (str.++ var32A unch232A))))
(assert (= "ga3anta" (str.++ unch132B (str.++ var32B unch232B))))
(assert (= "ga3mo" (str.++ unch132C (str.++ var32C unch232C))))
(assert (= (str.len stem32) l32))
(assert (= (ite (= ch32A var32A) 0 1) sc32A))
(assert (= (ite (= ch32B var32B) 0 1) sc32B))
(assert (= (ite (= ch32C var32C) 0 1) sc32C))
(assert (= (ite (= ch32D var32D) 0 1) sc32D))
(assert (= (ite (= ch32E var32E) 0 1) sc32E))
(assert (= (ite (= ch32F var32F) 0 1) sc32F))
(assert (<= sc32A 1))
(assert (<= sc32B 1))
(assert (<= sc32C 1))
(assert (<= sc32D 1))
(assert (<= sc32E 1))
(assert (<= sc32F 1))
(assert (<= (str.len var33A) 1))
(assert (<= (str.len var33B) 1))
(assert (<= (str.len var33C) 1))
(assert (<= (str.len var33D) 1))
(assert (<= (str.len var33E) 1))
(assert (<= (str.len var33F) 1))
(assert (= (str.++ preA (str.++ stem33 sufA)) (str.++ unch133A (str.++ ch33A unch233A))))
(assert (= (str.++ preB (str.++ stem33 sufB)) (str.++ unch133B (str.++ ch33B unch233B))))
(assert (= (str.++ preC (str.++ stem33 sufC)) (str.++ unch133C (str.++ ch33C unch233C))))
(assert (= (str.++ preD (str.++ stem33 sufD)) (str.++ unch133D (str.++ ch33D unch233D))))
(assert (= (str.++ preE (str.++ stem33 sufE)) (str.++ unch133E (str.++ ch33E unch233E))))
(assert (= (str.++ preF (str.++ stem33 sufF)) (str.++ unch133F (str.++ ch33F unch233F))))
(assert (= "4inan" (str.++ unch133A (str.++ var33A unch233A))))
(assert (= "4inanta" (str.++ unch133B (str.++ var33B unch233B))))
(assert (= "4inano" (str.++ unch133C (str.++ var33C unch233C))))
(assert (= (str.len stem33) l33))
(assert (= (ite (= ch33A var33A) 0 1) sc33A))
(assert (= (ite (= ch33B var33B) 0 1) sc33B))
(assert (= (ite (= ch33C var33C) 0 1) sc33C))
(assert (= (ite (= ch33D var33D) 0 1) sc33D))
(assert (= (ite (= ch33E var33E) 0 1) sc33E))
(assert (= (ite (= ch33F var33F) 0 1) sc33F))
(assert (<= sc33A 1))
(assert (<= sc33B 1))
(assert (<= sc33C 1))
(assert (<= sc33D 1))
(assert (<= sc33E 1))
(assert (<= sc33F 1))
(assert (<= (str.len var34A) 1))
(assert (<= (str.len var34B) 1))
(assert (<= (str.len var34C) 1))
(assert (<= (str.len var34D) 1))
(assert (<= (str.len var34E) 1))
(assert (<= (str.len var34F) 1))
(assert (= (str.++ preA (str.++ stem34 sufA)) (str.++ unch134A (str.++ ch34A unch234A))))
(assert (= (str.++ preB (str.++ stem34 sufB)) (str.++ unch134B (str.++ ch34B unch234B))))
(assert (= (str.++ preC (str.++ stem34 sufC)) (str.++ unch134C (str.++ ch34C unch234C))))
(assert (= (str.++ preD (str.++ stem34 sufD)) (str.++ unch134D (str.++ ch34D unch234D))))
(assert (= (str.++ preE (str.++ stem34 sufE)) (str.++ unch134E (str.++ ch34E unch234E))))
(assert (= (str.++ preF (str.++ stem34 sufF)) (str.++ unch134F (str.++ ch34F unch234F))))
(assert (= "suOaj" (str.++ unch134D (str.++ var34D unch234D))))
(assert (= "sugtaj" (str.++ unch134E (str.++ var34E unch234E))))
(assert (= "sugnaj" (str.++ unch134F (str.++ var34F unch234F))))
(assert (= (str.len stem34) l34))
(assert (= (ite (= ch34A var34A) 0 1) sc34A))
(assert (= (ite (= ch34B var34B) 0 1) sc34B))
(assert (= (ite (= ch34C var34C) 0 1) sc34C))
(assert (= (ite (= ch34D var34D) 0 1) sc34D))
(assert (= (ite (= ch34E var34E) 0 1) sc34E))
(assert (= (ite (= ch34F var34F) 0 1) sc34F))
(assert (<= sc34A 1))
(assert (<= sc34B 1))
(assert (<= sc34C 1))
(assert (<= sc34D 1))
(assert (<= sc34E 1))
(assert (<= sc34F 1))
(assert (<= (str.len var35A) 1))
(assert (<= (str.len var35B) 1))
(assert (<= (str.len var35C) 1))
(assert (<= (str.len var35D) 1))
(assert (<= (str.len var35E) 1))
(assert (<= (str.len var35F) 1))
(assert (= (str.++ preA (str.++ stem35 sufA)) (str.++ unch135A (str.++ ch35A unch235A))))
(assert (= (str.++ preB (str.++ stem35 sufB)) (str.++ unch135B (str.++ ch35B unch235B))))
(assert (= (str.++ preC (str.++ stem35 sufC)) (str.++ unch135C (str.++ ch35C unch235C))))
(assert (= (str.++ preD (str.++ stem35 sufD)) (str.++ unch135D (str.++ ch35D unch235D))))
(assert (= (str.++ preE (str.++ stem35 sufE)) (str.++ unch135E (str.++ ch35E unch235E))))
(assert (= (str.++ preF (str.++ stem35 sufF)) (str.++ unch135F (str.++ ch35F unch235F))))
(assert (= "kaXaj" (str.++ unch135D (str.++ var35D unch235D))))
(assert (= "kabtaj" (str.++ unch135E (str.++ var35E unch235E))))
(assert (= "kabnaj" (str.++ unch135F (str.++ var35F unch235F))))
(assert (= (str.len stem35) l35))
(assert (= (ite (= ch35A var35A) 0 1) sc35A))
(assert (= (ite (= ch35B var35B) 0 1) sc35B))
(assert (= (ite (= ch35C var35C) 0 1) sc35C))
(assert (= (ite (= ch35D var35D) 0 1) sc35D))
(assert (= (ite (= ch35E var35E) 0 1) sc35E))
(assert (= (ite (= ch35F var35F) 0 1) sc35F))
(assert (<= sc35A 1))
(assert (<= sc35B 1))
(assert (<= sc35C 1))
(assert (<= sc35D 1))
(assert (<= sc35E 1))
(assert (<= sc35F 1))
(assert (<= (str.len var36A) 1))
(assert (<= (str.len var36B) 1))
(assert (<= (str.len var36C) 1))
(assert (<= (str.len var36D) 1))
(assert (<= (str.len var36E) 1))
(assert (<= (str.len var36F) 1))
(assert (= (str.++ preA (str.++ stem36 sufA)) (str.++ unch136A (str.++ ch36A unch236A))))
(assert (= (str.++ preB (str.++ stem36 sufB)) (str.++ unch136B (str.++ ch36B unch236B))))
(assert (= (str.++ preC (str.++ stem36 sufC)) (str.++ unch136C (str.++ ch36C unch236C))))
(assert (= (str.++ preD (str.++ stem36 sufD)) (str.++ unch136D (str.++ ch36D unch236D))))
(assert (= (str.++ preE (str.++ stem36 sufE)) (str.++ unch136E (str.++ ch36E unch236E))))
(assert (= (str.++ preF (str.++ stem36 sufF)) (str.++ unch136F (str.++ ch36F unch236F))))
(assert (= "siZaj" (str.++ unch136D (str.++ var36D unch236D))))
(assert (= "sidaj" (str.++ unch136E (str.++ var36E unch236E))))
(assert (= "sidnaj" (str.++ unch136F (str.++ var36F unch236F))))
(assert (= (str.len stem36) l36))
(assert (= (ite (= ch36A var36A) 0 1) sc36A))
(assert (= (ite (= ch36B var36B) 0 1) sc36B))
(assert (= (ite (= ch36C var36C) 0 1) sc36C))
(assert (= (ite (= ch36D var36D) 0 1) sc36D))
(assert (= (ite (= ch36E var36E) 0 1) sc36E))
(assert (= (ite (= ch36F var36F) 0 1) sc36F))
(assert (<= sc36A 1))
(assert (<= sc36B 1))
(assert (<= sc36C 1))
(assert (<= sc36D 1))
(assert (<= sc36E 1))
(assert (<= sc36F 1))
(assert (<= (str.len var37A) 1))
(assert (<= (str.len var37B) 1))
(assert (<= (str.len var37C) 1))
(assert (<= (str.len var37D) 1))
(assert (<= (str.len var37E) 1))
(assert (<= (str.len var37F) 1))
(assert (= (str.++ preA (str.++ stem37 sufA)) (str.++ unch137A (str.++ ch37A unch237A))))
(assert (= (str.++ preB (str.++ stem37 sufB)) (str.++ unch137B (str.++ ch37B unch237B))))
(assert (= (str.++ preC (str.++ stem37 sufC)) (str.++ unch137C (str.++ ch37C unch237C))))
(assert (= (str.++ preD (str.++ stem37 sufD)) (str.++ unch137D (str.++ ch37D unch237D))))
(assert (= (str.++ preE (str.++ stem37 sufE)) (str.++ unch137E (str.++ ch37E unch237E))))
(assert (= (str.++ preF (str.++ stem37 sufF)) (str.++ unch137F (str.++ ch37F unch237F))))
(assert (= "dilaj" (str.++ unch137D (str.++ var37D unch237D))))
(assert (= "diBaj" (str.++ unch137E (str.++ var37E unch237E))))
(assert (= "dillaj" (str.++ unch137F (str.++ var37F unch237F))))
(assert (= (str.len stem37) l37))
(assert (= (ite (= ch37A var37A) 0 1) sc37A))
(assert (= (ite (= ch37B var37B) 0 1) sc37B))
(assert (= (ite (= ch37C var37C) 0 1) sc37C))
(assert (= (ite (= ch37D var37D) 0 1) sc37D))
(assert (= (ite (= ch37E var37E) 0 1) sc37E))
(assert (= (ite (= ch37F var37F) 0 1) sc37F))
(assert (<= sc37A 1))
(assert (<= sc37B 1))
(assert (<= sc37C 1))
(assert (<= sc37D 1))
(assert (<= sc37E 1))
(assert (<= sc37F 1))
(assert (<= (str.len var38A) 1))
(assert (<= (str.len var38B) 1))
(assert (<= (str.len var38C) 1))
(assert (<= (str.len var38D) 1))
(assert (<= (str.len var38E) 1))
(assert (<= (str.len var38F) 1))
(assert (= (str.++ preA (str.++ stem38 sufA)) (str.++ unch138A (str.++ ch38A unch238A))))
(assert (= (str.++ preB (str.++ stem38 sufB)) (str.++ unch138B (str.++ ch38B unch238B))))
(assert (= (str.++ preC (str.++ stem38 sufC)) (str.++ unch138C (str.++ ch38C unch238C))))
(assert (= (str.++ preD (str.++ stem38 sufD)) (str.++ unch138D (str.++ ch38D unch238D))))
(assert (= (str.++ preE (str.++ stem38 sufE)) (str.++ unch138E (str.++ ch38E unch238E))))
(assert (= (str.++ preF (str.++ stem38 sufF)) (str.++ unch138F (str.++ ch38F unch238F))))
(assert (= "ganaj" (str.++ unch138D (str.++ var38D unch238D))))
(assert (= "gantaj" (str.++ unch138E (str.++ var38E unch238E))))
(assert (= "gannaj" (str.++ unch138F (str.++ var38F unch238F))))
(assert (= (str.len stem38) l38))
(assert (= (ite (= ch38A var38A) 0 1) sc38A))
(assert (= (ite (= ch38B var38B) 0 1) sc38B))
(assert (= (ite (= ch38C var38C) 0 1) sc38C))
(assert (= (ite (= ch38D var38D) 0 1) sc38D))
(assert (= (ite (= ch38E var38E) 0 1) sc38E))
(assert (= (ite (= ch38F var38F) 0 1) sc38F))
(assert (<= sc38A 1))
(assert (<= sc38B 1))
(assert (<= sc38C 1))
(assert (<= sc38D 1))
(assert (<= sc38E 1))
(assert (<= sc38F 1))
(assert (<= (str.len var39A) 1))
(assert (<= (str.len var39B) 1))
(assert (<= (str.len var39C) 1))
(assert (<= (str.len var39D) 1))
(assert (<= (str.len var39E) 1))
(assert (<= (str.len var39F) 1))
(assert (= (str.++ preA (str.++ stem39 sufA)) (str.++ unch139A (str.++ ch39A unch239A))))
(assert (= (str.++ preB (str.++ stem39 sufB)) (str.++ unch139B (str.++ ch39B unch239B))))
(assert (= (str.++ preC (str.++ stem39 sufC)) (str.++ unch139C (str.++ ch39C unch239C))))
(assert (= (str.++ preD (str.++ stem39 sufD)) (str.++ unch139D (str.++ ch39D unch239D))))
(assert (= (str.++ preE (str.++ stem39 sufE)) (str.++ unch139E (str.++ ch39E unch239E))))
(assert (= (str.++ preF (str.++ stem39 sufF)) (str.++ unch139F (str.++ ch39F unch239F))))
(assert (= "tumaj" (str.++ unch139D (str.++ var39D unch239D))))
(assert (= "tuntaj" (str.++ unch139E (str.++ var39E unch239E))))
(assert (= "tunnaj" (str.++ unch139F (str.++ var39F unch239F))))
(assert (= (str.len stem39) l39))
(assert (= (ite (= ch39A var39A) 0 1) sc39A))
(assert (= (ite (= ch39B var39B) 0 1) sc39B))
(assert (= (ite (= ch39C var39C) 0 1) sc39C))
(assert (= (ite (= ch39D var39D) 0 1) sc39D))
(assert (= (ite (= ch39E var39E) 0 1) sc39E))
(assert (= (ite (= ch39F var39F) 0 1) sc39F))
(assert (<= sc39A 1))
(assert (<= sc39B 1))
(assert (<= sc39C 1))
(assert (<= sc39D 1))
(assert (<= sc39E 1))
(assert (<= sc39F 1))
(assert (<= (str.len var40A) 1))
(assert (<= (str.len var40B) 1))
(assert (<= (str.len var40C) 1))
(assert (<= (str.len var40D) 1))
(assert (<= (str.len var40E) 1))
(assert (<= (str.len var40F) 1))
(assert (= (str.++ preA (str.++ stem40 sufA)) (str.++ unch140A (str.++ ch40A unch240A))))
(assert (= (str.++ preB (str.++ stem40 sufB)) (str.++ unch140B (str.++ ch40B unch240B))))
(assert (= (str.++ preC (str.++ stem40 sufC)) (str.++ unch140C (str.++ ch40C unch240C))))
(assert (= (str.++ preD (str.++ stem40 sufD)) (str.++ unch140D (str.++ ch40D unch240D))))
(assert (= (str.++ preE (str.++ stem40 sufE)) (str.++ unch140E (str.++ ch40E unch240E))))
(assert (= (str.++ preF (str.++ stem40 sufF)) (str.++ unch140F (str.++ ch40F unch240F))))
(assert (= "argaj" (str.++ unch140D (str.++ var40D unch240D))))
(assert (= "aragtaj" (str.++ unch140E (str.++ var40E unch240E))))
(assert (= "aragnaj" (str.++ unch140F (str.++ var40F unch240F))))
(assert (= (str.len stem40) l40))
(assert (= (ite (= ch40A var40A) 0 1) sc40A))
(assert (= (ite (= ch40B var40B) 0 1) sc40B))
(assert (= (ite (= ch40C var40C) 0 1) sc40C))
(assert (= (ite (= ch40D var40D) 0 1) sc40D))
(assert (= (ite (= ch40E var40E) 0 1) sc40E))
(assert (= (ite (= ch40F var40F) 0 1) sc40F))
(assert (<= sc40A 1))
(assert (<= sc40B 1))
(assert (<= sc40C 1))
(assert (<= sc40D 1))
(assert (<= sc40E 1))
(assert (<= sc40F 1))
(assert (<= (str.len var41A) 1))
(assert (<= (str.len var41B) 1))
(assert (<= (str.len var41C) 1))
(assert (<= (str.len var41D) 1))
(assert (<= (str.len var41E) 1))
(assert (<= (str.len var41F) 1))
(assert (= (str.++ preA (str.++ stem41 sufA)) (str.++ unch141A (str.++ ch41A unch241A))))
(assert (= (str.++ preB (str.++ stem41 sufB)) (str.++ unch141B (str.++ ch41B unch241B))))
(assert (= (str.++ preC (str.++ stem41 sufC)) (str.++ unch141C (str.++ ch41C unch241C))))
(assert (= (str.++ preD (str.++ stem41 sufD)) (str.++ unch141D (str.++ ch41D unch241D))))
(assert (= (str.++ preE (str.++ stem41 sufE)) (str.++ unch141E (str.++ ch41E unch241E))))
(assert (= (str.++ preF (str.++ stem41 sufF)) (str.++ unch141F (str.++ ch41F unch241F))))
(assert (= "gudbaj" (str.++ unch141D (str.++ var41D unch241D))))
(assert (= "guZubtaj" (str.++ unch141E (str.++ var41E unch241E))))
(assert (= "guZubnaj" (str.++ unch141F (str.++ var41F unch241F))))
(assert (= (str.len stem41) l41))
(assert (= (ite (= ch41A var41A) 0 1) sc41A))
(assert (= (ite (= ch41B var41B) 0 1) sc41B))
(assert (= (ite (= ch41C var41C) 0 1) sc41C))
(assert (= (ite (= ch41D var41D) 0 1) sc41D))
(assert (= (ite (= ch41E var41E) 0 1) sc41E))
(assert (= (ite (= ch41F var41F) 0 1) sc41F))
(assert (<= sc41A 1))
(assert (<= sc41B 1))
(assert (<= sc41C 1))
(assert (<= sc41D 1))
(assert (<= sc41E 1))
(assert (<= sc41F 1))
(assert (<= (str.len var42A) 1))
(assert (<= (str.len var42B) 1))
(assert (<= (str.len var42C) 1))
(assert (<= (str.len var42D) 1))
(assert (<= (str.len var42E) 1))
(assert (<= (str.len var42F) 1))
(assert (= (str.++ preA (str.++ stem42 sufA)) (str.++ unch142A (str.++ ch42A unch242A))))
(assert (= (str.++ preB (str.++ stem42 sufB)) (str.++ unch142B (str.++ ch42B unch242B))))
(assert (= (str.++ preC (str.++ stem42 sufC)) (str.++ unch142C (str.++ ch42C unch242C))))
(assert (= (str.++ preD (str.++ stem42 sufD)) (str.++ unch142D (str.++ ch42D unch242D))))
(assert (= (str.++ preE (str.++ stem42 sufE)) (str.++ unch142E (str.++ ch42E unch242E))))
(assert (= (str.++ preF (str.++ stem42 sufF)) (str.++ unch142F (str.++ ch42F unch242F))))
(assert (= "qoslaj" (str.++ unch142D (str.++ var42D unch242D))))
(assert (= "qosoBaj" (str.++ unch142E (str.++ var42E unch242E))))
(assert (= "qosollaj" (str.++ unch142F (str.++ var42F unch242F))))
(assert (= (str.len stem42) l42))
(assert (= (ite (= ch42A var42A) 0 1) sc42A))
(assert (= (ite (= ch42B var42B) 0 1) sc42B))
(assert (= (ite (= ch42C var42C) 0 1) sc42C))
(assert (= (ite (= ch42D var42D) 0 1) sc42D))
(assert (= (ite (= ch42E var42E) 0 1) sc42E))
(assert (= (ite (= ch42F var42F) 0 1) sc42F))
(assert (<= sc42A 1))
(assert (<= sc42B 1))
(assert (<= sc42C 1))
(assert (<= sc42D 1))
(assert (<= sc42E 1))
(assert (<= sc42F 1))
(assert (<= (str.len var43A) 1))
(assert (<= (str.len var43B) 1))
(assert (<= (str.len var43C) 1))
(assert (<= (str.len var43D) 1))
(assert (<= (str.len var43E) 1))
(assert (<= (str.len var43F) 1))
(assert (= (str.++ preA (str.++ stem43 sufA)) (str.++ unch143A (str.++ ch43A unch243A))))
(assert (= (str.++ preB (str.++ stem43 sufB)) (str.++ unch143B (str.++ ch43B unch243B))))
(assert (= (str.++ preC (str.++ stem43 sufC)) (str.++ unch143C (str.++ ch43C unch243C))))
(assert (= (str.++ preD (str.++ stem43 sufD)) (str.++ unch143D (str.++ ch43D unch243D))))
(assert (= (str.++ preE (str.++ stem43 sufE)) (str.++ unch143E (str.++ ch43E unch243E))))
(assert (= (str.++ preF (str.++ stem43 sufF)) (str.++ unch143F (str.++ ch43F unch243F))))
(assert (= "hadlaj" (str.++ unch143D (str.++ var43D unch243D))))
(assert (= "haZaBaj" (str.++ unch143E (str.++ var43E unch243E))))
(assert (= "haZallaj" (str.++ unch143F (str.++ var43F unch243F))))
(assert (= (str.len stem43) l43))
(assert (= (ite (= ch43A var43A) 0 1) sc43A))
(assert (= (ite (= ch43B var43B) 0 1) sc43B))
(assert (= (ite (= ch43C var43C) 0 1) sc43C))
(assert (= (ite (= ch43D var43D) 0 1) sc43D))
(assert (= (ite (= ch43E var43E) 0 1) sc43E))
(assert (= (ite (= ch43F var43F) 0 1) sc43F))
(assert (<= sc43A 1))
(assert (<= sc43B 1))
(assert (<= sc43C 1))
(assert (<= sc43D 1))
(assert (<= sc43E 1))
(assert (<= sc43F 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      0
      sc30A
      sc30B
      sc30C
      sc30D
      sc30E
      sc30F
      0
      sc31A
      sc31B
      sc31C
      sc31D
      sc31E
      sc31F
      0
      sc32A
      sc32B
      sc32C
      sc32D
      sc32E
      sc32F
      0
      sc33A
      sc33B
      sc33C
      sc33D
      sc33E
      sc33F
      0
      sc34A
      sc34B
      sc34C
      sc34D
      sc34E
      sc34F
      0
      sc35A
      sc35B
      sc35C
      sc35D
      sc35E
      sc35F
      0
      sc36A
      sc36B
      sc36C
      sc36D
      sc36E
      sc36F
      0
      sc37A
      sc37B
      sc37C
      sc37D
      sc37E
      sc37F
      0
      sc38A
      sc38B
      sc38C
      sc38D
      sc38E
      sc38F
      0
      sc39A
      sc39B
      sc39C
      sc39D
      sc39E
      sc39F
      0
      sc40A
      sc40B
      sc40C
      sc40D
      sc40E
      sc40F
      0
      sc41A
      sc41B
      sc41C
      sc41D
      sc41E
      sc41F
      0
      sc42A
      sc42B
      sc42C
      sc42D
      sc42E
      sc42F
      0
      sc43A
      sc43B
      sc43C
      sc43D
      sc43E
      sc43F)
   7))
(assert (= (+ 0
      sc0B
      sc1B
      sc2B
      sc3B
      sc4B
      sc5B
      sc6B
      sc7B
      sc8B
      sc9B
      sc10B
      sc11B
      sc12B
      sc13B
      sc14B
      sc15B
      sc16B
      sc17B
      sc18B
      sc19B
      sc20B
      sc21B
      sc22B
      sc23B
      sc24B
      sc25B
      sc26B
      sc27B
      sc28B
      sc29B
      sc30B
      sc31B
      sc32B
      sc33B
      sc34B
      sc35B
      sc36B
      sc37B
      sc38B
      sc39B
      sc40B
      sc41B
      sc42B
      sc43B)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun var30A () String)
(declare-fun var30B () String)
(declare-fun var30C () String)
(declare-fun var30D () String)
(declare-fun var30E () String)
(declare-fun var30F () String)
(declare-fun unch230A () String)
(declare-fun ch30A () String)
(declare-fun unch130A () String)
(declare-fun stem30 () String)
(declare-fun unch230B () String)
(declare-fun ch30B () String)
(declare-fun unch130B () String)
(declare-fun unch230C () String)
(declare-fun ch30C () String)
(declare-fun unch130C () String)
(declare-fun unch230D () String)
(declare-fun ch30D () String)
(declare-fun unch130D () String)
(declare-fun unch230E () String)
(declare-fun ch30E () String)
(declare-fun unch130E () String)
(declare-fun unch230F () String)
(declare-fun ch30F () String)
(declare-fun unch130F () String)
(declare-fun l30 () Int)
(declare-fun sc30A () Int)
(declare-fun sc30B () Int)
(declare-fun sc30C () Int)
(declare-fun sc30D () Int)
(declare-fun sc30E () Int)
(declare-fun sc30F () Int)
(declare-fun var31A () String)
(declare-fun var31B () String)
(declare-fun var31C () String)
(declare-fun var31D () String)
(declare-fun var31E () String)
(declare-fun var31F () String)
(declare-fun unch231A () String)
(declare-fun ch31A () String)
(declare-fun unch131A () String)
(declare-fun stem31 () String)
(declare-fun unch231B () String)
(declare-fun ch31B () String)
(declare-fun unch131B () String)
(declare-fun unch231C () String)
(declare-fun ch31C () String)
(declare-fun unch131C () String)
(declare-fun unch231D () String)
(declare-fun ch31D () String)
(declare-fun unch131D () String)
(declare-fun unch231E () String)
(declare-fun ch31E () String)
(declare-fun unch131E () String)
(declare-fun unch231F () String)
(declare-fun ch31F () String)
(declare-fun unch131F () String)
(declare-fun l31 () Int)
(declare-fun sc31A () Int)
(declare-fun sc31B () Int)
(declare-fun sc31C () Int)
(declare-fun sc31D () Int)
(declare-fun sc31E () Int)
(declare-fun sc31F () Int)
(declare-fun var32A () String)
(declare-fun var32B () String)
(declare-fun var32C () String)
(declare-fun var32D () String)
(declare-fun var32E () String)
(declare-fun var32F () String)
(declare-fun unch232A () String)
(declare-fun ch32A () String)
(declare-fun unch132A () String)
(declare-fun stem32 () String)
(declare-fun unch232B () String)
(declare-fun ch32B () String)
(declare-fun unch132B () String)
(declare-fun unch232C () String)
(declare-fun ch32C () String)
(declare-fun unch132C () String)
(declare-fun unch232D () String)
(declare-fun ch32D () String)
(declare-fun unch132D () String)
(declare-fun unch232E () String)
(declare-fun ch32E () String)
(declare-fun unch132E () String)
(declare-fun unch232F () String)
(declare-fun ch32F () String)
(declare-fun unch132F () String)
(declare-fun l32 () Int)
(declare-fun sc32A () Int)
(declare-fun sc32B () Int)
(declare-fun sc32C () Int)
(declare-fun sc32D () Int)
(declare-fun sc32E () Int)
(declare-fun sc32F () Int)
(declare-fun var33A () String)
(declare-fun var33B () String)
(declare-fun var33C () String)
(declare-fun var33D () String)
(declare-fun var33E () String)
(declare-fun var33F () String)
(declare-fun unch233A () String)
(declare-fun ch33A () String)
(declare-fun unch133A () String)
(declare-fun stem33 () String)
(declare-fun unch233B () String)
(declare-fun ch33B () String)
(declare-fun unch133B () String)
(declare-fun unch233C () String)
(declare-fun ch33C () String)
(declare-fun unch133C () String)
(declare-fun unch233D () String)
(declare-fun ch33D () String)
(declare-fun unch133D () String)
(declare-fun unch233E () String)
(declare-fun ch33E () String)
(declare-fun unch133E () String)
(declare-fun unch233F () String)
(declare-fun ch33F () String)
(declare-fun unch133F () String)
(declare-fun l33 () Int)
(declare-fun sc33A () Int)
(declare-fun sc33B () Int)
(declare-fun sc33C () Int)
(declare-fun sc33D () Int)
(declare-fun sc33E () Int)
(declare-fun sc33F () Int)
(declare-fun var34A () String)
(declare-fun var34B () String)
(declare-fun var34C () String)
(declare-fun var34D () String)
(declare-fun var34E () String)
(declare-fun var34F () String)
(declare-fun unch234A () String)
(declare-fun ch34A () String)
(declare-fun unch134A () String)
(declare-fun stem34 () String)
(declare-fun unch234B () String)
(declare-fun ch34B () String)
(declare-fun unch134B () String)
(declare-fun unch234C () String)
(declare-fun ch34C () String)
(declare-fun unch134C () String)
(declare-fun unch234D () String)
(declare-fun ch34D () String)
(declare-fun unch134D () String)
(declare-fun unch234E () String)
(declare-fun ch34E () String)
(declare-fun unch134E () String)
(declare-fun unch234F () String)
(declare-fun ch34F () String)
(declare-fun unch134F () String)
(declare-fun l34 () Int)
(declare-fun sc34A () Int)
(declare-fun sc34B () Int)
(declare-fun sc34C () Int)
(declare-fun sc34D () Int)
(declare-fun sc34E () Int)
(declare-fun sc34F () Int)
(declare-fun var35A () String)
(declare-fun var35B () String)
(declare-fun var35C () String)
(declare-fun var35D () String)
(declare-fun var35E () String)
(declare-fun var35F () String)
(declare-fun unch235A () String)
(declare-fun ch35A () String)
(declare-fun unch135A () String)
(declare-fun stem35 () String)
(declare-fun unch235B () String)
(declare-fun ch35B () String)
(declare-fun unch135B () String)
(declare-fun unch235C () String)
(declare-fun ch35C () String)
(declare-fun unch135C () String)
(declare-fun unch235D () String)
(declare-fun ch35D () String)
(declare-fun unch135D () String)
(declare-fun unch235E () String)
(declare-fun ch35E () String)
(declare-fun unch135E () String)
(declare-fun unch235F () String)
(declare-fun ch35F () String)
(declare-fun unch135F () String)
(declare-fun l35 () Int)
(declare-fun sc35A () Int)
(declare-fun sc35B () Int)
(declare-fun sc35C () Int)
(declare-fun sc35D () Int)
(declare-fun sc35E () Int)
(declare-fun sc35F () Int)
(declare-fun var36A () String)
(declare-fun var36B () String)
(declare-fun var36C () String)
(declare-fun var36D () String)
(declare-fun var36E () String)
(declare-fun var36F () String)
(declare-fun unch236A () String)
(declare-fun ch36A () String)
(declare-fun unch136A () String)
(declare-fun stem36 () String)
(declare-fun unch236B () String)
(declare-fun ch36B () String)
(declare-fun unch136B () String)
(declare-fun unch236C () String)
(declare-fun ch36C () String)
(declare-fun unch136C () String)
(declare-fun unch236D () String)
(declare-fun ch36D () String)
(declare-fun unch136D () String)
(declare-fun unch236E () String)
(declare-fun ch36E () String)
(declare-fun unch136E () String)
(declare-fun unch236F () String)
(declare-fun ch36F () String)
(declare-fun unch136F () String)
(declare-fun l36 () Int)
(declare-fun sc36A () Int)
(declare-fun sc36B () Int)
(declare-fun sc36C () Int)
(declare-fun sc36D () Int)
(declare-fun sc36E () Int)
(declare-fun sc36F () Int)
(declare-fun var37A () String)
(declare-fun var37B () String)
(declare-fun var37C () String)
(declare-fun var37D () String)
(declare-fun var37E () String)
(declare-fun var37F () String)
(declare-fun unch237A () String)
(declare-fun ch37A () String)
(declare-fun unch137A () String)
(declare-fun stem37 () String)
(declare-fun unch237B () String)
(declare-fun ch37B () String)
(declare-fun unch137B () String)
(declare-fun unch237C () String)
(declare-fun ch37C () String)
(declare-fun unch137C () String)
(declare-fun unch237D () String)
(declare-fun ch37D () String)
(declare-fun unch137D () String)
(declare-fun unch237E () String)
(declare-fun ch37E () String)
(declare-fun unch137E () String)
(declare-fun unch237F () String)
(declare-fun ch37F () String)
(declare-fun unch137F () String)
(declare-fun l37 () Int)
(declare-fun sc37A () Int)
(declare-fun sc37B () Int)
(declare-fun sc37C () Int)
(declare-fun sc37D () Int)
(declare-fun sc37E () Int)
(declare-fun sc37F () Int)
(declare-fun var38A () String)
(declare-fun var38B () String)
(declare-fun var38C () String)
(declare-fun var38D () String)
(declare-fun var38E () String)
(declare-fun var38F () String)
(declare-fun unch238A () String)
(declare-fun ch38A () String)
(declare-fun unch138A () String)
(declare-fun stem38 () String)
(declare-fun unch238B () String)
(declare-fun ch38B () String)
(declare-fun unch138B () String)
(declare-fun unch238C () String)
(declare-fun ch38C () String)
(declare-fun unch138C () String)
(declare-fun unch238D () String)
(declare-fun ch38D () String)
(declare-fun unch138D () String)
(declare-fun unch238E () String)
(declare-fun ch38E () String)
(declare-fun unch138E () String)
(declare-fun unch238F () String)
(declare-fun ch38F () String)
(declare-fun unch138F () String)
(declare-fun l38 () Int)
(declare-fun sc38A () Int)
(declare-fun sc38B () Int)
(declare-fun sc38C () Int)
(declare-fun sc38D () Int)
(declare-fun sc38E () Int)
(declare-fun sc38F () Int)
(declare-fun var39A () String)
(declare-fun var39B () String)
(declare-fun var39C () String)
(declare-fun var39D () String)
(declare-fun var39E () String)
(declare-fun var39F () String)
(declare-fun unch239A () String)
(declare-fun ch39A () String)
(declare-fun unch139A () String)
(declare-fun stem39 () String)
(declare-fun unch239B () String)
(declare-fun ch39B () String)
(declare-fun unch139B () String)
(declare-fun unch239C () String)
(declare-fun ch39C () String)
(declare-fun unch139C () String)
(declare-fun unch239D () String)
(declare-fun ch39D () String)
(declare-fun unch139D () String)
(declare-fun unch239E () String)
(declare-fun ch39E () String)
(declare-fun unch139E () String)
(declare-fun unch239F () String)
(declare-fun ch39F () String)
(declare-fun unch139F () String)
(declare-fun l39 () Int)
(declare-fun sc39A () Int)
(declare-fun sc39B () Int)
(declare-fun sc39C () Int)
(declare-fun sc39D () Int)
(declare-fun sc39E () Int)
(declare-fun sc39F () Int)
(declare-fun var40A () String)
(declare-fun var40B () String)
(declare-fun var40C () String)
(declare-fun var40D () String)
(declare-fun var40E () String)
(declare-fun var40F () String)
(declare-fun unch240A () String)
(declare-fun ch40A () String)
(declare-fun unch140A () String)
(declare-fun stem40 () String)
(declare-fun unch240B () String)
(declare-fun ch40B () String)
(declare-fun unch140B () String)
(declare-fun unch240C () String)
(declare-fun ch40C () String)
(declare-fun unch140C () String)
(declare-fun unch240D () String)
(declare-fun ch40D () String)
(declare-fun unch140D () String)
(declare-fun unch240E () String)
(declare-fun ch40E () String)
(declare-fun unch140E () String)
(declare-fun unch240F () String)
(declare-fun ch40F () String)
(declare-fun unch140F () String)
(declare-fun l40 () Int)
(declare-fun sc40A () Int)
(declare-fun sc40B () Int)
(declare-fun sc40C () Int)
(declare-fun sc40D () Int)
(declare-fun sc40E () Int)
(declare-fun sc40F () Int)
(declare-fun var41A () String)
(declare-fun var41B () String)
(declare-fun var41C () String)
(declare-fun var41D () String)
(declare-fun var41E () String)
(declare-fun var41F () String)
(declare-fun unch241A () String)
(declare-fun ch41A () String)
(declare-fun unch141A () String)
(declare-fun stem41 () String)
(declare-fun unch241B () String)
(declare-fun ch41B () String)
(declare-fun unch141B () String)
(declare-fun unch241C () String)
(declare-fun ch41C () String)
(declare-fun unch141C () String)
(declare-fun unch241D () String)
(declare-fun ch41D () String)
(declare-fun unch141D () String)
(declare-fun unch241E () String)
(declare-fun ch41E () String)
(declare-fun unch141E () String)
(declare-fun unch241F () String)
(declare-fun ch41F () String)
(declare-fun unch141F () String)
(declare-fun l41 () Int)
(declare-fun sc41A () Int)
(declare-fun sc41B () Int)
(declare-fun sc41C () Int)
(declare-fun sc41D () Int)
(declare-fun sc41E () Int)
(declare-fun sc41F () Int)
(declare-fun var42A () String)
(declare-fun var42B () String)
(declare-fun var42C () String)
(declare-fun var42D () String)
(declare-fun var42E () String)
(declare-fun var42F () String)
(declare-fun unch242A () String)
(declare-fun ch42A () String)
(declare-fun unch142A () String)
(declare-fun stem42 () String)
(declare-fun unch242B () String)
(declare-fun ch42B () String)
(declare-fun unch142B () String)
(declare-fun unch242C () String)
(declare-fun ch42C () String)
(declare-fun unch142C () String)
(declare-fun unch242D () String)
(declare-fun ch42D () String)
(declare-fun unch142D () String)
(declare-fun unch242E () String)
(declare-fun ch42E () String)
(declare-fun unch142E () String)
(declare-fun unch242F () String)
(declare-fun ch42F () String)
(declare-fun unch142F () String)
(declare-fun l42 () Int)
(declare-fun sc42A () Int)
(declare-fun sc42B () Int)
(declare-fun sc42C () Int)
(declare-fun sc42D () Int)
(declare-fun sc42E () Int)
(declare-fun sc42F () Int)
(declare-fun var43A () String)
(declare-fun var43B () String)
(declare-fun var43C () String)
(declare-fun var43D () String)
(declare-fun var43E () String)
(declare-fun var43F () String)
(declare-fun unch243A () String)
(declare-fun ch43A () String)
(declare-fun unch143A () String)
(declare-fun stem43 () String)
(declare-fun unch243B () String)
(declare-fun ch43B () String)
(declare-fun unch143B () String)
(declare-fun unch243C () String)
(declare-fun ch43C () String)
(declare-fun unch143C () String)
(declare-fun unch243D () String)
(declare-fun ch43D () String)
(declare-fun unch143D () String)
(declare-fun unch243E () String)
(declare-fun ch43E () String)
(declare-fun unch143E () String)
(declare-fun unch243F () String)
(declare-fun ch43F () String)
(declare-fun unch143F () String)
(declare-fun l43 () Int)
(declare-fun sc43A () Int)
(declare-fun sc43B () Int)
(declare-fun sc43C () Int)
(declare-fun sc43D () Int)
(declare-fun sc43E () Int)
(declare-fun sc43F () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= "daar" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "daarta" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "daaro" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= "gees" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "geesta" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "geeso" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= "laf" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "lafta" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "lafo" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= "lug" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "lugta" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "luOo" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= "naag" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "naagta" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "naaOo" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= "tib" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "tibta" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "tiXo" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= "sab" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "sabta" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "saXo" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= "bad" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "bada" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "baZo" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= "Bid" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "Bida" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "BiZo" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= "fee1" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "fee1a" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "fee2o" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= "3iir" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "3iirta" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "3iiro" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= "4ul" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "4uBa" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "4ulo" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= "bil" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "biBa" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "bilo" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= "meel" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "meeBa" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "meelo" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= "kaliil" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "kaliiBa" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "kaliilo" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= "najl" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "najBa" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "najlo" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= "sun" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "sunta" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "sumo" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= "laan" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "laanta" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "laamo" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= "sin" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "sinta" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "simo" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= "dan" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "danta" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "dano" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= "daan" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "daanta" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "daano" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= "saan" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "saanta" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "saano" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= "nirig" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "nirigta" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "nirgo" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= "gaXa1" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= "gaXa1a" (str.++ unch123B (str.++ var23B unch223B))))
(assert (= "gab1o" (str.++ unch123C (str.++ var23C unch223C))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= "hoOol" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= "hoOoBa" (str.++ unch124B (str.++ var24B unch224B))))
(assert (= "hoglo" (str.++ unch124C (str.++ var24C unch224C))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= "baOal" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= "baOaBa" (str.++ unch125B (str.++ var25B unch225B))))
(assert (= "baglo" (str.++ unch125C (str.++ var25C unch225C))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= "wa5ar" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= "wa5arta" (str.++ unch126B (str.++ var26B unch226B))))
(assert (= "wa5aro" (str.++ unch126C (str.++ var26C unch226C))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= "irbad" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= "irbada" (str.++ unch127B (str.++ var27B unch227B))))
(assert (= "irbaZo" (str.++ unch127C (str.++ var27C unch227C))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= "kefed" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= "kefeda" (str.++ unch128B (str.++ var28B unch228B))))
(assert (= "kefeZo" (str.++ unch128C (str.++ var28C unch228C))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= "Bilin" (str.++ unch129A (str.++ var29A unch229A))))
(assert (= "Bilinta" (str.++ unch129B (str.++ var29B unch229B))))
(assert (= "Bilino" (str.++ unch129C (str.++ var29C unch229C))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= (str.len var30A) 1))
(assert (<= (str.len var30B) 1))
(assert (<= (str.len var30C) 1))
(assert (<= (str.len var30D) 1))
(assert (<= (str.len var30E) 1))
(assert (<= (str.len var30F) 1))
(assert (= (str.++ preA (str.++ stem30 sufA)) (str.++ unch130A (str.++ ch30A unch230A))))
(assert (= (str.++ preB (str.++ stem30 sufB)) (str.++ unch130B (str.++ ch30B unch230B))))
(assert (= (str.++ preC (str.++ stem30 sufC)) (str.++ unch130C (str.++ ch30C unch230C))))
(assert (= (str.++ preD (str.++ stem30 sufD)) (str.++ unch130D (str.++ ch30D unch230D))))
(assert (= (str.++ preE (str.++ stem30 sufE)) (str.++ unch130E (str.++ ch30E unch230E))))
(assert (= (str.++ preF (str.++ stem30 sufF)) (str.++ unch130F (str.++ ch30F unch230F))))
(assert (= "bohol" (str.++ unch130A (str.++ var30A unch230A))))
(assert (= "bohoBa" (str.++ unch130B (str.++ var30B unch230B))))
(assert (= "boholo" (str.++ unch130C (str.++ var30C unch230C))))
(assert (= (str.len stem30) l30))
(assert (= (ite (= ch30A var30A) 0 1) sc30A))
(assert (= (ite (= ch30B var30B) 0 1) sc30B))
(assert (= (ite (= ch30C var30C) 0 1) sc30C))
(assert (= (ite (= ch30D var30D) 0 1) sc30D))
(assert (= (ite (= ch30E var30E) 0 1) sc30E))
(assert (= (ite (= ch30F var30F) 0 1) sc30F))
(assert (<= sc30A 1))
(assert (<= sc30B 1))
(assert (<= sc30C 1))
(assert (<= sc30D 1))
(assert (<= sc30E 1))
(assert (<= sc30F 1))
(assert (<= (str.len var31A) 1))
(assert (<= (str.len var31B) 1))
(assert (<= (str.len var31C) 1))
(assert (<= (str.len var31D) 1))
(assert (<= (str.len var31E) 1))
(assert (<= (str.len var31F) 1))
(assert (= (str.++ preA (str.++ stem31 sufA)) (str.++ unch131A (str.++ ch31A unch231A))))
(assert (= (str.++ preB (str.++ stem31 sufB)) (str.++ unch131B (str.++ ch31B unch231B))))
(assert (= (str.++ preC (str.++ stem31 sufC)) (str.++ unch131C (str.++ ch31C unch231C))))
(assert (= (str.++ preD (str.++ stem31 sufD)) (str.++ unch131D (str.++ ch31D unch231D))))
(assert (= (str.++ preE (str.++ stem31 sufE)) (str.++ unch131E (str.++ ch31E unch231E))))
(assert (= (str.++ preF (str.++ stem31 sufF)) (str.++ unch131F (str.++ ch31F unch231F))))
(assert (= "4aajad" (str.++ unch131A (str.++ var31A unch231A))))
(assert (= "4aajada" (str.++ unch131B (str.++ var31B unch231B))))
(assert (= "4aajaZo" (str.++ unch131C (str.++ var31C unch231C))))
(assert (= (str.len stem31) l31))
(assert (= (ite (= ch31A var31A) 0 1) sc31A))
(assert (= (ite (= ch31B var31B) 0 1) sc31B))
(assert (= (ite (= ch31C var31C) 0 1) sc31C))
(assert (= (ite (= ch31D var31D) 0 1) sc31D))
(assert (= (ite (= ch31E var31E) 0 1) sc31E))
(assert (= (ite (= ch31F var31F) 0 1) sc31F))
(assert (<= sc31A 1))
(assert (<= sc31B 1))
(assert (<= sc31C 1))
(assert (<= sc31D 1))
(assert (<= sc31E 1))
(assert (<= sc31F 1))
(assert (<= (str.len var32A) 1))
(assert (<= (str.len var32B) 1))
(assert (<= (str.len var32C) 1))
(assert (<= (str.len var32D) 1))
(assert (<= (str.len var32E) 1))
(assert (<= (str.len var32F) 1))
(assert (= (str.++ preA (str.++ stem32 sufA)) (str.++ unch132A (str.++ ch32A unch232A))))
(assert (= (str.++ preB (str.++ stem32 sufB)) (str.++ unch132B (str.++ ch32B unch232B))))
(assert (= (str.++ preC (str.++ stem32 sufC)) (str.++ unch132C (str.++ ch32C unch232C))))
(assert (= (str.++ preD (str.++ stem32 sufD)) (str.++ unch132D (str.++ ch32D unch232D))))
(assert (= (str.++ preE (str.++ stem32 sufE)) (str.++ unch132E (str.++ ch32E unch232E))))
(assert (= (str.++ preF (str.++ stem32 sufF)) (str.++ unch132F (str.++ ch32F unch232F))))
(assert (= "ga3an" (str.++ unch132A (str.++ var32A unch232A))))
(assert (= "ga3anta" (str.++ unch132B (str.++ var32B unch232B))))
(assert (= "ga3mo" (str.++ unch132C (str.++ var32C unch232C))))
(assert (= (str.len stem32) l32))
(assert (= (ite (= ch32A var32A) 0 1) sc32A))
(assert (= (ite (= ch32B var32B) 0 1) sc32B))
(assert (= (ite (= ch32C var32C) 0 1) sc32C))
(assert (= (ite (= ch32D var32D) 0 1) sc32D))
(assert (= (ite (= ch32E var32E) 0 1) sc32E))
(assert (= (ite (= ch32F var32F) 0 1) sc32F))
(assert (<= sc32A 1))
(assert (<= sc32B 1))
(assert (<= sc32C 1))
(assert (<= sc32D 1))
(assert (<= sc32E 1))
(assert (<= sc32F 1))
(assert (<= (str.len var33A) 1))
(assert (<= (str.len var33B) 1))
(assert (<= (str.len var33C) 1))
(assert (<= (str.len var33D) 1))
(assert (<= (str.len var33E) 1))
(assert (<= (str.len var33F) 1))
(assert (= (str.++ preA (str.++ stem33 sufA)) (str.++ unch133A (str.++ ch33A unch233A))))
(assert (= (str.++ preB (str.++ stem33 sufB)) (str.++ unch133B (str.++ ch33B unch233B))))
(assert (= (str.++ preC (str.++ stem33 sufC)) (str.++ unch133C (str.++ ch33C unch233C))))
(assert (= (str.++ preD (str.++ stem33 sufD)) (str.++ unch133D (str.++ ch33D unch233D))))
(assert (= (str.++ preE (str.++ stem33 sufE)) (str.++ unch133E (str.++ ch33E unch233E))))
(assert (= (str.++ preF (str.++ stem33 sufF)) (str.++ unch133F (str.++ ch33F unch233F))))
(assert (= "4inan" (str.++ unch133A (str.++ var33A unch233A))))
(assert (= "4inanta" (str.++ unch133B (str.++ var33B unch233B))))
(assert (= "4inano" (str.++ unch133C (str.++ var33C unch233C))))
(assert (= (str.len stem33) l33))
(assert (= (ite (= ch33A var33A) 0 1) sc33A))
(assert (= (ite (= ch33B var33B) 0 1) sc33B))
(assert (= (ite (= ch33C var33C) 0 1) sc33C))
(assert (= (ite (= ch33D var33D) 0 1) sc33D))
(assert (= (ite (= ch33E var33E) 0 1) sc33E))
(assert (= (ite (= ch33F var33F) 0 1) sc33F))
(assert (<= sc33A 1))
(assert (<= sc33B 1))
(assert (<= sc33C 1))
(assert (<= sc33D 1))
(assert (<= sc33E 1))
(assert (<= sc33F 1))
(assert (<= (str.len var34A) 1))
(assert (<= (str.len var34B) 1))
(assert (<= (str.len var34C) 1))
(assert (<= (str.len var34D) 1))
(assert (<= (str.len var34E) 1))
(assert (<= (str.len var34F) 1))
(assert (= (str.++ preA (str.++ stem34 sufA)) (str.++ unch134A (str.++ ch34A unch234A))))
(assert (= (str.++ preB (str.++ stem34 sufB)) (str.++ unch134B (str.++ ch34B unch234B))))
(assert (= (str.++ preC (str.++ stem34 sufC)) (str.++ unch134C (str.++ ch34C unch234C))))
(assert (= (str.++ preD (str.++ stem34 sufD)) (str.++ unch134D (str.++ ch34D unch234D))))
(assert (= (str.++ preE (str.++ stem34 sufE)) (str.++ unch134E (str.++ ch34E unch234E))))
(assert (= (str.++ preF (str.++ stem34 sufF)) (str.++ unch134F (str.++ ch34F unch234F))))
(assert (= "suOaj" (str.++ unch134D (str.++ var34D unch234D))))
(assert (= "sugtaj" (str.++ unch134E (str.++ var34E unch234E))))
(assert (= "sugnaj" (str.++ unch134F (str.++ var34F unch234F))))
(assert (= (str.len stem34) l34))
(assert (= (ite (= ch34A var34A) 0 1) sc34A))
(assert (= (ite (= ch34B var34B) 0 1) sc34B))
(assert (= (ite (= ch34C var34C) 0 1) sc34C))
(assert (= (ite (= ch34D var34D) 0 1) sc34D))
(assert (= (ite (= ch34E var34E) 0 1) sc34E))
(assert (= (ite (= ch34F var34F) 0 1) sc34F))
(assert (<= sc34A 1))
(assert (<= sc34B 1))
(assert (<= sc34C 1))
(assert (<= sc34D 1))
(assert (<= sc34E 1))
(assert (<= sc34F 1))
(assert (<= (str.len var35A) 1))
(assert (<= (str.len var35B) 1))
(assert (<= (str.len var35C) 1))
(assert (<= (str.len var35D) 1))
(assert (<= (str.len var35E) 1))
(assert (<= (str.len var35F) 1))
(assert (= (str.++ preA (str.++ stem35 sufA)) (str.++ unch135A (str.++ ch35A unch235A))))
(assert (= (str.++ preB (str.++ stem35 sufB)) (str.++ unch135B (str.++ ch35B unch235B))))
(assert (= (str.++ preC (str.++ stem35 sufC)) (str.++ unch135C (str.++ ch35C unch235C))))
(assert (= (str.++ preD (str.++ stem35 sufD)) (str.++ unch135D (str.++ ch35D unch235D))))
(assert (= (str.++ preE (str.++ stem35 sufE)) (str.++ unch135E (str.++ ch35E unch235E))))
(assert (= (str.++ preF (str.++ stem35 sufF)) (str.++ unch135F (str.++ ch35F unch235F))))
(assert (= "kaXaj" (str.++ unch135D (str.++ var35D unch235D))))
(assert (= "kabtaj" (str.++ unch135E (str.++ var35E unch235E))))
(assert (= "kabnaj" (str.++ unch135F (str.++ var35F unch235F))))
(assert (= (str.len stem35) l35))
(assert (= (ite (= ch35A var35A) 0 1) sc35A))
(assert (= (ite (= ch35B var35B) 0 1) sc35B))
(assert (= (ite (= ch35C var35C) 0 1) sc35C))
(assert (= (ite (= ch35D var35D) 0 1) sc35D))
(assert (= (ite (= ch35E var35E) 0 1) sc35E))
(assert (= (ite (= ch35F var35F) 0 1) sc35F))
(assert (<= sc35A 1))
(assert (<= sc35B 1))
(assert (<= sc35C 1))
(assert (<= sc35D 1))
(assert (<= sc35E 1))
(assert (<= sc35F 1))
(assert (<= (str.len var36A) 1))
(assert (<= (str.len var36B) 1))
(assert (<= (str.len var36C) 1))
(assert (<= (str.len var36D) 1))
(assert (<= (str.len var36E) 1))
(assert (<= (str.len var36F) 1))
(assert (= (str.++ preA (str.++ stem36 sufA)) (str.++ unch136A (str.++ ch36A unch236A))))
(assert (= (str.++ preB (str.++ stem36 sufB)) (str.++ unch136B (str.++ ch36B unch236B))))
(assert (= (str.++ preC (str.++ stem36 sufC)) (str.++ unch136C (str.++ ch36C unch236C))))
(assert (= (str.++ preD (str.++ stem36 sufD)) (str.++ unch136D (str.++ ch36D unch236D))))
(assert (= (str.++ preE (str.++ stem36 sufE)) (str.++ unch136E (str.++ ch36E unch236E))))
(assert (= (str.++ preF (str.++ stem36 sufF)) (str.++ unch136F (str.++ ch36F unch236F))))
(assert (= "siZaj" (str.++ unch136D (str.++ var36D unch236D))))
(assert (= "sidaj" (str.++ unch136E (str.++ var36E unch236E))))
(assert (= "sidnaj" (str.++ unch136F (str.++ var36F unch236F))))
(assert (= (str.len stem36) l36))
(assert (= (ite (= ch36A var36A) 0 1) sc36A))
(assert (= (ite (= ch36B var36B) 0 1) sc36B))
(assert (= (ite (= ch36C var36C) 0 1) sc36C))
(assert (= (ite (= ch36D var36D) 0 1) sc36D))
(assert (= (ite (= ch36E var36E) 0 1) sc36E))
(assert (= (ite (= ch36F var36F) 0 1) sc36F))
(assert (<= sc36A 1))
(assert (<= sc36B 1))
(assert (<= sc36C 1))
(assert (<= sc36D 1))
(assert (<= sc36E 1))
(assert (<= sc36F 1))
(assert (<= (str.len var37A) 1))
(assert (<= (str.len var37B) 1))
(assert (<= (str.len var37C) 1))
(assert (<= (str.len var37D) 1))
(assert (<= (str.len var37E) 1))
(assert (<= (str.len var37F) 1))
(assert (= (str.++ preA (str.++ stem37 sufA)) (str.++ unch137A (str.++ ch37A unch237A))))
(assert (= (str.++ preB (str.++ stem37 sufB)) (str.++ unch137B (str.++ ch37B unch237B))))
(assert (= (str.++ preC (str.++ stem37 sufC)) (str.++ unch137C (str.++ ch37C unch237C))))
(assert (= (str.++ preD (str.++ stem37 sufD)) (str.++ unch137D (str.++ ch37D unch237D))))
(assert (= (str.++ preE (str.++ stem37 sufE)) (str.++ unch137E (str.++ ch37E unch237E))))
(assert (= (str.++ preF (str.++ stem37 sufF)) (str.++ unch137F (str.++ ch37F unch237F))))
(assert (= "dilaj" (str.++ unch137D (str.++ var37D unch237D))))
(assert (= "diBaj" (str.++ unch137E (str.++ var37E unch237E))))
(assert (= "dillaj" (str.++ unch137F (str.++ var37F unch237F))))
(assert (= (str.len stem37) l37))
(assert (= (ite (= ch37A var37A) 0 1) sc37A))
(assert (= (ite (= ch37B var37B) 0 1) sc37B))
(assert (= (ite (= ch37C var37C) 0 1) sc37C))
(assert (= (ite (= ch37D var37D) 0 1) sc37D))
(assert (= (ite (= ch37E var37E) 0 1) sc37E))
(assert (= (ite (= ch37F var37F) 0 1) sc37F))
(assert (<= sc37A 1))
(assert (<= sc37B 1))
(assert (<= sc37C 1))
(assert (<= sc37D 1))
(assert (<= sc37E 1))
(assert (<= sc37F 1))
(assert (<= (str.len var38A) 1))
(assert (<= (str.len var38B) 1))
(assert (<= (str.len var38C) 1))
(assert (<= (str.len var38D) 1))
(assert (<= (str.len var38E) 1))
(assert (<= (str.len var38F) 1))
(assert (= (str.++ preA (str.++ stem38 sufA)) (str.++ unch138A (str.++ ch38A unch238A))))
(assert (= (str.++ preB (str.++ stem38 sufB)) (str.++ unch138B (str.++ ch38B unch238B))))
(assert (= (str.++ preC (str.++ stem38 sufC)) (str.++ unch138C (str.++ ch38C unch238C))))
(assert (= (str.++ preD (str.++ stem38 sufD)) (str.++ unch138D (str.++ ch38D unch238D))))
(assert (= (str.++ preE (str.++ stem38 sufE)) (str.++ unch138E (str.++ ch38E unch238E))))
(assert (= (str.++ preF (str.++ stem38 sufF)) (str.++ unch138F (str.++ ch38F unch238F))))
(assert (= "ganaj" (str.++ unch138D (str.++ var38D unch238D))))
(assert (= "gantaj" (str.++ unch138E (str.++ var38E unch238E))))
(assert (= "gannaj" (str.++ unch138F (str.++ var38F unch238F))))
(assert (= (str.len stem38) l38))
(assert (= (ite (= ch38A var38A) 0 1) sc38A))
(assert (= (ite (= ch38B var38B) 0 1) sc38B))
(assert (= (ite (= ch38C var38C) 0 1) sc38C))
(assert (= (ite (= ch38D var38D) 0 1) sc38D))
(assert (= (ite (= ch38E var38E) 0 1) sc38E))
(assert (= (ite (= ch38F var38F) 0 1) sc38F))
(assert (<= sc38A 1))
(assert (<= sc38B 1))
(assert (<= sc38C 1))
(assert (<= sc38D 1))
(assert (<= sc38E 1))
(assert (<= sc38F 1))
(assert (<= (str.len var39A) 1))
(assert (<= (str.len var39B) 1))
(assert (<= (str.len var39C) 1))
(assert (<= (str.len var39D) 1))
(assert (<= (str.len var39E) 1))
(assert (<= (str.len var39F) 1))
(assert (= (str.++ preA (str.++ stem39 sufA)) (str.++ unch139A (str.++ ch39A unch239A))))
(assert (= (str.++ preB (str.++ stem39 sufB)) (str.++ unch139B (str.++ ch39B unch239B))))
(assert (= (str.++ preC (str.++ stem39 sufC)) (str.++ unch139C (str.++ ch39C unch239C))))
(assert (= (str.++ preD (str.++ stem39 sufD)) (str.++ unch139D (str.++ ch39D unch239D))))
(assert (= (str.++ preE (str.++ stem39 sufE)) (str.++ unch139E (str.++ ch39E unch239E))))
(assert (= (str.++ preF (str.++ stem39 sufF)) (str.++ unch139F (str.++ ch39F unch239F))))
(assert (= "tumaj" (str.++ unch139D (str.++ var39D unch239D))))
(assert (= "tuntaj" (str.++ unch139E (str.++ var39E unch239E))))
(assert (= "tunnaj" (str.++ unch139F (str.++ var39F unch239F))))
(assert (= (str.len stem39) l39))
(assert (= (ite (= ch39A var39A) 0 1) sc39A))
(assert (= (ite (= ch39B var39B) 0 1) sc39B))
(assert (= (ite (= ch39C var39C) 0 1) sc39C))
(assert (= (ite (= ch39D var39D) 0 1) sc39D))
(assert (= (ite (= ch39E var39E) 0 1) sc39E))
(assert (= (ite (= ch39F var39F) 0 1) sc39F))
(assert (<= sc39A 1))
(assert (<= sc39B 1))
(assert (<= sc39C 1))
(assert (<= sc39D 1))
(assert (<= sc39E 1))
(assert (<= sc39F 1))
(assert (<= (str.len var40A) 1))
(assert (<= (str.len var40B) 1))
(assert (<= (str.len var40C) 1))
(assert (<= (str.len var40D) 1))
(assert (<= (str.len var40E) 1))
(assert (<= (str.len var40F) 1))
(assert (= (str.++ preA (str.++ stem40 sufA)) (str.++ unch140A (str.++ ch40A unch240A))))
(assert (= (str.++ preB (str.++ stem40 sufB)) (str.++ unch140B (str.++ ch40B unch240B))))
(assert (= (str.++ preC (str.++ stem40 sufC)) (str.++ unch140C (str.++ ch40C unch240C))))
(assert (= (str.++ preD (str.++ stem40 sufD)) (str.++ unch140D (str.++ ch40D unch240D))))
(assert (= (str.++ preE (str.++ stem40 sufE)) (str.++ unch140E (str.++ ch40E unch240E))))
(assert (= (str.++ preF (str.++ stem40 sufF)) (str.++ unch140F (str.++ ch40F unch240F))))
(assert (= "argaj" (str.++ unch140D (str.++ var40D unch240D))))
(assert (= "aragtaj" (str.++ unch140E (str.++ var40E unch240E))))
(assert (= "aragnaj" (str.++ unch140F (str.++ var40F unch240F))))
(assert (= (str.len stem40) l40))
(assert (= (ite (= ch40A var40A) 0 1) sc40A))
(assert (= (ite (= ch40B var40B) 0 1) sc40B))
(assert (= (ite (= ch40C var40C) 0 1) sc40C))
(assert (= (ite (= ch40D var40D) 0 1) sc40D))
(assert (= (ite (= ch40E var40E) 0 1) sc40E))
(assert (= (ite (= ch40F var40F) 0 1) sc40F))
(assert (<= sc40A 1))
(assert (<= sc40B 1))
(assert (<= sc40C 1))
(assert (<= sc40D 1))
(assert (<= sc40E 1))
(assert (<= sc40F 1))
(assert (<= (str.len var41A) 1))
(assert (<= (str.len var41B) 1))
(assert (<= (str.len var41C) 1))
(assert (<= (str.len var41D) 1))
(assert (<= (str.len var41E) 1))
(assert (<= (str.len var41F) 1))
(assert (= (str.++ preA (str.++ stem41 sufA)) (str.++ unch141A (str.++ ch41A unch241A))))
(assert (= (str.++ preB (str.++ stem41 sufB)) (str.++ unch141B (str.++ ch41B unch241B))))
(assert (= (str.++ preC (str.++ stem41 sufC)) (str.++ unch141C (str.++ ch41C unch241C))))
(assert (= (str.++ preD (str.++ stem41 sufD)) (str.++ unch141D (str.++ ch41D unch241D))))
(assert (= (str.++ preE (str.++ stem41 sufE)) (str.++ unch141E (str.++ ch41E unch241E))))
(assert (= (str.++ preF (str.++ stem41 sufF)) (str.++ unch141F (str.++ ch41F unch241F))))
(assert (= "gudbaj" (str.++ unch141D (str.++ var41D unch241D))))
(assert (= "guZubtaj" (str.++ unch141E (str.++ var41E unch241E))))
(assert (= "guZubnaj" (str.++ unch141F (str.++ var41F unch241F))))
(assert (= (str.len stem41) l41))
(assert (= (ite (= ch41A var41A) 0 1) sc41A))
(assert (= (ite (= ch41B var41B) 0 1) sc41B))
(assert (= (ite (= ch41C var41C) 0 1) sc41C))
(assert (= (ite (= ch41D var41D) 0 1) sc41D))
(assert (= (ite (= ch41E var41E) 0 1) sc41E))
(assert (= (ite (= ch41F var41F) 0 1) sc41F))
(assert (<= sc41A 1))
(assert (<= sc41B 1))
(assert (<= sc41C 1))
(assert (<= sc41D 1))
(assert (<= sc41E 1))
(assert (<= sc41F 1))
(assert (<= (str.len var42A) 1))
(assert (<= (str.len var42B) 1))
(assert (<= (str.len var42C) 1))
(assert (<= (str.len var42D) 1))
(assert (<= (str.len var42E) 1))
(assert (<= (str.len var42F) 1))
(assert (= (str.++ preA (str.++ stem42 sufA)) (str.++ unch142A (str.++ ch42A unch242A))))
(assert (= (str.++ preB (str.++ stem42 sufB)) (str.++ unch142B (str.++ ch42B unch242B))))
(assert (= (str.++ preC (str.++ stem42 sufC)) (str.++ unch142C (str.++ ch42C unch242C))))
(assert (= (str.++ preD (str.++ stem42 sufD)) (str.++ unch142D (str.++ ch42D unch242D))))
(assert (= (str.++ preE (str.++ stem42 sufE)) (str.++ unch142E (str.++ ch42E unch242E))))
(assert (= (str.++ preF (str.++ stem42 sufF)) (str.++ unch142F (str.++ ch42F unch242F))))
(assert (= "qoslaj" (str.++ unch142D (str.++ var42D unch242D))))
(assert (= "qosoBaj" (str.++ unch142E (str.++ var42E unch242E))))
(assert (= "qosollaj" (str.++ unch142F (str.++ var42F unch242F))))
(assert (= (str.len stem42) l42))
(assert (= (ite (= ch42A var42A) 0 1) sc42A))
(assert (= (ite (= ch42B var42B) 0 1) sc42B))
(assert (= (ite (= ch42C var42C) 0 1) sc42C))
(assert (= (ite (= ch42D var42D) 0 1) sc42D))
(assert (= (ite (= ch42E var42E) 0 1) sc42E))
(assert (= (ite (= ch42F var42F) 0 1) sc42F))
(assert (<= sc42A 1))
(assert (<= sc42B 1))
(assert (<= sc42C 1))
(assert (<= sc42D 1))
(assert (<= sc42E 1))
(assert (<= sc42F 1))
(assert (<= (str.len var43A) 1))
(assert (<= (str.len var43B) 1))
(assert (<= (str.len var43C) 1))
(assert (<= (str.len var43D) 1))
(assert (<= (str.len var43E) 1))
(assert (<= (str.len var43F) 1))
(assert (= (str.++ preA (str.++ stem43 sufA)) (str.++ unch143A (str.++ ch43A unch243A))))
(assert (= (str.++ preB (str.++ stem43 sufB)) (str.++ unch143B (str.++ ch43B unch243B))))
(assert (= (str.++ preC (str.++ stem43 sufC)) (str.++ unch143C (str.++ ch43C unch243C))))
(assert (= (str.++ preD (str.++ stem43 sufD)) (str.++ unch143D (str.++ ch43D unch243D))))
(assert (= (str.++ preE (str.++ stem43 sufE)) (str.++ unch143E (str.++ ch43E unch243E))))
(assert (= (str.++ preF (str.++ stem43 sufF)) (str.++ unch143F (str.++ ch43F unch243F))))
(assert (= "hadlaj" (str.++ unch143D (str.++ var43D unch243D))))
(assert (= "haZaBaj" (str.++ unch143E (str.++ var43E unch243E))))
(assert (= "haZallaj" (str.++ unch143F (str.++ var43F unch243F))))
(assert (= (str.len stem43) l43))
(assert (= (ite (= ch43A var43A) 0 1) sc43A))
(assert (= (ite (= ch43B var43B) 0 1) sc43B))
(assert (= (ite (= ch43C var43C) 0 1) sc43C))
(assert (= (ite (= ch43D var43D) 0 1) sc43D))
(assert (= (ite (= ch43E var43E) 0 1) sc43E))
(assert (= (ite (= ch43F var43F) 0 1) sc43F))
(assert (<= sc43A 1))
(assert (<= sc43B 1))
(assert (<= sc43C 1))
(assert (<= sc43D 1))
(assert (<= sc43E 1))
(assert (<= sc43F 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      0
      sc30A
      sc30B
      sc30C
      sc30D
      sc30E
      sc30F
      0
      sc31A
      sc31B
      sc31C
      sc31D
      sc31E
      sc31F
      0
      sc32A
      sc32B
      sc32C
      sc32D
      sc32E
      sc32F
      0
      sc33A
      sc33B
      sc33C
      sc33D
      sc33E
      sc33F
      0
      sc34A
      sc34B
      sc34C
      sc34D
      sc34E
      sc34F
      0
      sc35A
      sc35B
      sc35C
      sc35D
      sc35E
      sc35F
      0
      sc36A
      sc36B
      sc36C
      sc36D
      sc36E
      sc36F
      0
      sc37A
      sc37B
      sc37C
      sc37D
      sc37E
      sc37F
      0
      sc38A
      sc38B
      sc38C
      sc38D
      sc38E
      sc38F
      0
      sc39A
      sc39B
      sc39C
      sc39D
      sc39E
      sc39F
      0
      sc40A
      sc40B
      sc40C
      sc40D
      sc40E
      sc40F
      0
      sc41A
      sc41B
      sc41C
      sc41D
      sc41E
      sc41F
      0
      sc42A
      sc42B
      sc42C
      sc42D
      sc42E
      sc42F
      0
      sc43A
      sc43B
      sc43C
      sc43D
      sc43E
      sc43F)
   7))
(assert (= (+ 0
      sc0C
      sc1C
      sc2C
      sc3C
      sc4C
      sc5C
      sc6C
      sc7C
      sc8C
      sc9C
      sc10C
      sc11C
      sc12C
      sc13C
      sc14C
      sc15C
      sc16C
      sc17C
      sc18C
      sc19C
      sc20C
      sc21C
      sc22C
      sc23C
      sc24C
      sc25C
      sc26C
      sc27C
      sc28C
      sc29C
      sc30C
      sc31C
      sc32C
      sc33C
      sc34C
      sc35C
      sc36C
      sc37C
      sc38C
      sc39C
      sc40C
      sc41C
      sc42C
      sc43C)
   0))
