[['plást', 'plastá', 'plasjkjí', '', '', '', '', ''], ['skorúx', 'skoruxá', 'skorusjí', '', '', '', '', ''], ['ɣjrjíx', 'ɣjrjixá', 'ɣjrjisjí', '', '', '', '', ''], ['pastúx', 'pastuxá', 'pastusjí', '', '', '', '', ''], ['mjnjúx', 'mjnjúxa', 'mjnjúsji', '', '', '', '', ''], ['plúɣ', 'plúɣa', 'plúzji', '', '', '', '', ''], ['sjtjíɣ', 'stóɣa', 'stózji', '', '', '', '', ''], ['sák', 'sáka', 'sátsji', '', '', '', '', ''], ['bék', 'bəká', 'bətsjí', '', '', '', '', ''], ['lést', 'ləstá', 'ləsjkjí', '', '', '', '', ''], ['lést', 'lésta', 'lésjkji', '', '', '', '', ''], ['pjljít', 'plóta', 'plókji', '', '', '', '', ''], ['sjmjrjíd', 'smróda', 'smróɡji', '', '', '', '', ''], ['fjíst', 'fostá', 'fosjkjí', '', '', '', '', ''], ['mjíst', 'mósta', 'mósjkji', '', '', '', '', ''], ['ljíd', 'lǽdu', 'lədú', '', '', '', '', ''], ['djrjít', 'dróta', 'drókji', '', '', '', '', ''], ['mjíd', 'mǽdu', 'mədú', '', '', '', '', ''], ['vjíl', 'volá', 'voljí', '', '', '', '', ''], ['vjíz', 'vóza', 'vózji', '', '', '', '', ''], ['sér', 'séra', 'sérji', '', '', '', '', ''], ['sjnjíp', 'snopá', 'snopjí', '', '', '', '', ''], ['ɣréb', 'ɣrəbá', 'ɣrəbjí', '', '', '', '', ''], ['lǽbjid', 'lǽbəda', 'lǽbəɡji', '', '', '', '', ''], ['bǽrjiɣ', 'bǽrəɣa', 'bǽrəzji', '', '', '', '', ''], ['pərjíɣ', 'pəróɣa', 'pərózji', '', '', '', '', ''], ['porjíɣ', 'poróɣa', 'porózji', '', '', '', '', ''], ['boljék', 'boljəká', 'boljətsjí', '', '', '', '', ''], ['vórjiɣ', 'vóroɣa', 'vórozji', '', '', '', '', ''], ['kónək', 'kónəka', 'kónətsji', '', '', '', '', ''], ['pótjik', 'potóka', 'potótsji', '', '', '', '', ''], ['tjík', 'tóka', 'tótsji', '', '', '', '', ''], ['kjíl', 'kolá', 'koljí', '', '', '', '', ''], ['', '', '', 'koválj', 'kovaljé', 'kovalé', '', ''], ['', '', '', 'ʤmjílj', 'ʤmjiljé', 'ʤmjilé', '', ''], ['', '', '', 'kjrjílj', 'kjrjiljé', 'kjrjilé', '', ''], ['', '', '', 'uʧétəlj', 'uʧétəljə', 'uʧétələ', '', ''], ['', '', '', 'ɡrǽbjinj', 'ɡrǽbənjə', 'ɡrǽbənə', '', ''], ['', '', '', 'ólənj', 'ólənjə', 'ólənə', '', ''], ['', '', '', 'jaʧjmjínj', 'jaʧmǽnjə', 'jaʧmǽnə', '', ''], ['', '', '', 'jásjinj', 'jásənjə', 'jásənə', '', ''], ['', '', '', 'zjékj', 'zjékjə', 'zjétə', '', ''], ['', '', '', '', '', '', 'másjkj', 'mástə'], ['', '', '', '', '', '', 'sjmjírjkj', 'smǽrtə'], ['', '', '', '', '', '', 'vjísjkj', 'vjístə'], ['', '', '', '', '', '', 'ráɡjisjkj', 'rádostə'], ['', '', '', '', '', '', 'sjílj', 'sólə'], ['', '', '', '', '', '', 'póʃjisjkj', 'póʃəstə'], ['', '', '', '', '', '', 'zámjikj', 'zámətə'], ['', '', '', '', '', '', 'skátərjkj', 'skátərtə'], ['', '', '', '', '', '', 'kjísjkj', 'kóstə']]
plást  >  ['p', 'l', 'O', 's', 't'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O'}
plastá  >  ['p', 'l', 'a', 's', 't', 'O'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O'}
plasjkjí  >  ['p', 'l', 'a', 's', 'j', 'k', 'j', 'X'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X'}
skorúx  >  ['s', 'k', 'o', 'r', 'Z', 'x'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z'}
skoruxá  >  ['s', 'k', 'o', 'r', 'u', 'x', 'O'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z'}
skorusjí  >  ['s', 'k', 'o', 'r', 'u', 's', 'j', 'X'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z'}
ɣjrjíx  >  ['1', 'j', 'r', 'j', 'X', 'x'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1'}
ɣjrjixá  >  ['1', 'j', 'r', 'j', 'i', 'x', 'O'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1'}
ɣjrjisjí  >  ['1', 'j', 'r', 'j', 'i', 's', 'j', 'X'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1'}
pastúx  >  ['p', 'a', 's', 't', 'Z', 'x'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1'}
pastuxá  >  ['p', 'a', 's', 't', 'u', 'x', 'O'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1'}
pastusjí  >  ['p', 'a', 's', 't', 'u', 's', 'j', 'X'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1'}
mjnjúx  >  ['m', 'j', 'n', 'j', 'Z', 'x'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1'}
mjnjúxa  >  ['m', 'j', 'n', 'j', 'Z', 'x', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1'}
mjnjúsji  >  ['m', 'j', 'n', 'j', 'Z', 's', 'j', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1'}
plúɣ  >  ['p', 'l', 'Z', '1'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1'}
plúɣa  >  ['p', 'l', 'Z', '1', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1'}
plúzji  >  ['p', 'l', 'Z', 'z', 'j', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1'}
sjtjíɣ  >  ['s', 'j', 't', 'j', 'X', '1'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1'}
stóɣa  >  ['s', 't', '2', '1', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2'}
stózji  >  ['s', 't', '2', 'z', 'j', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2'}
sák  >  ['s', 'O', 'k'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2'}
sáka  >  ['s', 'O', 'k', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2'}
sátsji  >  ['s', 'O', 't', 's', 'j', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2'}
bék  >  ['b', '3', 'k'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3'}
bəká  >  ['b', 'H', 'k', 'O'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3'}
bətsjí  >  ['b', 'H', 't', 's', 'j', 'X'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3'}
lést  >  ['l', '3', 's', 't'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3'}
ləstá  >  ['l', 'H', 's', 't', 'O'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3'}
ləsjkjí  >  ['l', 'H', 's', 'j', 'k', 'j', 'X'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3'}
lést  >  ['l', '3', 's', 't'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3'}
lésta  >  ['l', '3', 's', 't', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3'}
lésjkji  >  ['l', '3', 's', 'j', 'k', 'j', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3'}
pjljít  >  ['p', 'j', 'l', 'j', 'X', 't'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3'}
plóta  >  ['p', 'l', '2', 't', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3'}
plókji  >  ['p', 'l', '2', 'k', 'j', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3'}
sjmjrjíd  >  ['s', 'j', 'm', 'j', 'r', 'j', 'X', 'd'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3'}
smróda  >  ['s', 'm', 'r', '2', 'd', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3'}
smróɡji  >  ['s', 'm', 'r', '2', 'g', 'j', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3'}
fjíst  >  ['f', 'j', 'X', 's', 't'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3'}
fostá  >  ['f', 'o', 's', 't', 'O'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3'}
fosjkjí  >  ['f', 'o', 's', 'j', 'k', 'j', 'X'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3'}
mjíst  >  ['m', 'j', 'X', 's', 't'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3'}
mósta  >  ['m', '2', 's', 't', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3'}
mósjkji  >  ['m', '2', 's', 'j', 'k', 'j', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3'}
ljíd  >  ['l', 'j', 'X', 'd'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3'}
lǽdu  >  ['l', '4', 'd', 'u'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
lədú  >  ['l', 'H', 'd', 'Z'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
djrjít  >  ['d', 'j', 'r', 'j', 'X', 't'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
dróta  >  ['d', 'r', '2', 't', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
drókji  >  ['d', 'r', '2', 'k', 'j', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
mjíd  >  ['m', 'j', 'X', 'd'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
mǽdu  >  ['m', '4', 'd', 'u'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
mədú  >  ['m', 'H', 'd', 'Z'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
vjíl  >  ['v', 'j', 'X', 'l'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
volá  >  ['v', 'o', 'l', 'O'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
voljí  >  ['v', 'o', 'l', 'j', 'X'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
vjíz  >  ['v', 'j', 'X', 'z'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
vóza  >  ['v', '2', 'z', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
vózji  >  ['v', '2', 'z', 'j', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
sér  >  ['s', '3', 'r'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
séra  >  ['s', '3', 'r', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
sérji  >  ['s', '3', 'r', 'j', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
sjnjíp  >  ['s', 'j', 'n', 'j', 'X', 'p'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
snopá  >  ['s', 'n', 'o', 'p', 'O'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
snopjí  >  ['s', 'n', 'o', 'p', 'j', 'X'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
ɣréb  >  ['1', 'r', '3', 'b'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
ɣrəbá  >  ['1', 'r', 'H', 'b', 'O'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
ɣrəbjí  >  ['1', 'r', 'H', 'b', 'j', 'X'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
lǽbjid  >  ['l', '4', 'b', 'j', 'i', 'd'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
lǽbəda  >  ['l', '4', 'b', 'H', 'd', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
lǽbəɡji  >  ['l', '4', 'b', 'H', 'g', 'j', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
bǽrjiɣ  >  ['b', '4', 'r', 'j', 'i', '1'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
bǽrəɣa  >  ['b', '4', 'r', 'H', '1', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
bǽrəzji  >  ['b', '4', 'r', 'H', 'z', 'j', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
pərjíɣ  >  ['p', 'H', 'r', 'j', 'X', '1'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
pəróɣa  >  ['p', 'H', 'r', '2', '1', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
pərózji  >  ['p', 'H', 'r', '2', 'z', 'j', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
porjíɣ  >  ['p', 'o', 'r', 'j', 'X', '1'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
poróɣa  >  ['p', 'o', 'r', '2', '1', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
porózji  >  ['p', 'o', 'r', '2', 'z', 'j', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
boljék  >  ['b', 'o', 'l', 'j', '3', 'k'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
boljəká  >  ['b', 'o', 'l', 'j', 'H', 'k', 'O'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
boljətsjí  >  ['b', 'o', 'l', 'j', 'H', 't', 's', 'j', 'X'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
vórjiɣ  >  ['v', '2', 'r', 'j', 'i', '1'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
vóroɣa  >  ['v', '2', 'r', 'o', '1', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
vórozji  >  ['v', '2', 'r', 'o', 'z', 'j', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
kónək  >  ['k', '2', 'n', 'H', 'k'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
kónəka  >  ['k', '2', 'n', 'H', 'k', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
kónətsji  >  ['k', '2', 'n', 'H', 't', 's', 'j', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
pótjik  >  ['p', '2', 't', 'j', 'i', 'k'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
potóka  >  ['p', 'o', 't', '2', 'k', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
potótsji  >  ['p', 'o', 't', '2', 't', 's', 'j', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
tjík  >  ['t', 'j', 'X', 'k'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
tóka  >  ['t', '2', 'k', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
tótsji  >  ['t', '2', 't', 's', 'j', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
kjíl  >  ['k', 'j', 'X', 'l'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
kolá  >  ['k', 'o', 'l', 'O'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
koljí  >  ['k', 'o', 'l', 'j', 'X'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
koválj  >  ['k', 'o', 'v', 'O', 'l', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
kovaljé  >  ['k', 'o', 'v', 'a', 'l', 'j', '3'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
kovalé  >  ['k', 'o', 'v', 'a', 'l', '3'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
ʤmjílj  >  ['D', 'm', 'j', 'X', 'l', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
ʤmjiljé  >  ['D', 'm', 'j', 'i', 'l', 'j', '3'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
ʤmjilé  >  ['D', 'm', 'j', 'i', 'l', '3'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
kjrjílj  >  ['k', 'j', 'r', 'j', 'X', 'l', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
kjrjiljé  >  ['k', 'j', 'r', 'j', 'i', 'l', 'j', '3'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
kjrjilé  >  ['k', 'j', 'r', 'j', 'i', 'l', '3'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
uʧétəlj  >  ['u', 'E', '3', 't', 'H', 'l', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
uʧétəljə  >  ['u', 'E', '3', 't', 'H', 'l', 'j', 'H'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
uʧétələ  >  ['u', 'E', '3', 't', 'H', 'l', 'H'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
ɡrǽbjinj  >  ['g', 'r', '4', 'b', 'j', 'i', 'n', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
ɡrǽbənjə  >  ['g', 'r', '4', 'b', 'H', 'n', 'j', 'H'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
ɡrǽbənə  >  ['g', 'r', '4', 'b', 'H', 'n', 'H'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
ólənj  >  ['2', 'l', 'H', 'n', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
ólənjə  >  ['2', 'l', 'H', 'n', 'j', 'H'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
ólənə  >  ['2', 'l', 'H', 'n', 'H'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
jaʧjmjínj  >  ['j', 'a', 'E', 'j', 'm', 'j', 'X', 'n', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
jaʧmǽnjə  >  ['j', 'a', 'E', 'm', '4', 'n', 'j', 'H'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
jaʧmǽnə  >  ['j', 'a', 'E', 'm', '4', 'n', 'H'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
jásjinj  >  ['j', 'O', 's', 'j', 'i', 'n', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
jásənjə  >  ['j', 'O', 's', 'H', 'n', 'j', 'H'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
jásənə  >  ['j', 'O', 's', 'H', 'n', 'H'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
zjékj  >  ['z', 'j', '3', 'k', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
zjékjə  >  ['z', 'j', '3', 'k', 'j', 'H'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
zjétə  >  ['z', 'j', '3', 't', 'H'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
másjkj  >  ['m', 'O', 's', 'j', 'k', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
mástə  >  ['m', 'O', 's', 't', 'H'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
sjmjírjkj  >  ['s', 'j', 'm', 'j', 'X', 'r', 'j', 'k', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
smǽrtə  >  ['s', 'm', '4', 'r', 't', 'H'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
vjísjkj  >  ['v', 'j', 'X', 's', 'j', 'k', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
vjístə  >  ['v', 'j', 'X', 's', 't', 'H'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
ráɡjisjkj  >  ['r', 'O', 'g', 'j', 'i', 's', 'j', 'k', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
rádostə  >  ['r', 'O', 'd', 'o', 's', 't', 'H'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
sjílj  >  ['s', 'j', 'X', 'l', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
sólə  >  ['s', '2', 'l', 'H'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
póʃjisjkj  >  ['p', '2', 'B', 'j', 'i', 's', 'j', 'k', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
póʃəstə  >  ['p', '2', 'B', 'H', 's', 't', 'H'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
zámjikj  >  ['z', 'O', 'm', 'j', 'i', 'k', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
zámətə  >  ['z', 'O', 'm', 'H', 't', 'H'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
skátərjkj  >  ['s', 'k', 'O', 't', 'H', 'r', 'j', 'k', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
skátərtə  >  ['s', 'k', 'O', 't', 'H', 'r', 't', 'H'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
kjísjkj  >  ['k', 'j', 'X', 's', 'j', 'k', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
kóstə  >  ['k', '2', 's', 't', 'H'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'á': 'O', 'í': 'X', 'ú': 'Z', 'ɣ': '1', 'ó': '2', 'é': '3', 'ǽ': '4'}
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun var7G () String)
(declare-fun var7H () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun unch27G () String)
(declare-fun ch7G () String)
(declare-fun unch17G () String)
(declare-fun unch27H () String)
(declare-fun ch7H () String)
(declare-fun unch17H () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun sc7G () Int)
(declare-fun sc7H () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun var8G () String)
(declare-fun var8H () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun unch28G () String)
(declare-fun ch8G () String)
(declare-fun unch18G () String)
(declare-fun unch28H () String)
(declare-fun ch8H () String)
(declare-fun unch18H () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun sc8G () Int)
(declare-fun sc8H () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun var9G () String)
(declare-fun var9H () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun unch29G () String)
(declare-fun ch9G () String)
(declare-fun unch19G () String)
(declare-fun unch29H () String)
(declare-fun ch9H () String)
(declare-fun unch19H () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun sc9G () Int)
(declare-fun sc9H () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun var10G () String)
(declare-fun var10H () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun unch210G () String)
(declare-fun ch10G () String)
(declare-fun unch110G () String)
(declare-fun unch210H () String)
(declare-fun ch10H () String)
(declare-fun unch110H () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun sc10G () Int)
(declare-fun sc10H () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun var11G () String)
(declare-fun var11H () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun unch211G () String)
(declare-fun ch11G () String)
(declare-fun unch111G () String)
(declare-fun unch211H () String)
(declare-fun ch11H () String)
(declare-fun unch111H () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun sc11G () Int)
(declare-fun sc11H () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun var12G () String)
(declare-fun var12H () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun unch212G () String)
(declare-fun ch12G () String)
(declare-fun unch112G () String)
(declare-fun unch212H () String)
(declare-fun ch12H () String)
(declare-fun unch112H () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun sc12G () Int)
(declare-fun sc12H () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun var13G () String)
(declare-fun var13H () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun unch213G () String)
(declare-fun ch13G () String)
(declare-fun unch113G () String)
(declare-fun unch213H () String)
(declare-fun ch13H () String)
(declare-fun unch113H () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun sc13G () Int)
(declare-fun sc13H () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun var14G () String)
(declare-fun var14H () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun unch214G () String)
(declare-fun ch14G () String)
(declare-fun unch114G () String)
(declare-fun unch214H () String)
(declare-fun ch14H () String)
(declare-fun unch114H () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun sc14G () Int)
(declare-fun sc14H () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun var15G () String)
(declare-fun var15H () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun unch215G () String)
(declare-fun ch15G () String)
(declare-fun unch115G () String)
(declare-fun unch215H () String)
(declare-fun ch15H () String)
(declare-fun unch115H () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun sc15G () Int)
(declare-fun sc15H () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun var16G () String)
(declare-fun var16H () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun unch216G () String)
(declare-fun ch16G () String)
(declare-fun unch116G () String)
(declare-fun unch216H () String)
(declare-fun ch16H () String)
(declare-fun unch116H () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun sc16G () Int)
(declare-fun sc16H () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun var17G () String)
(declare-fun var17H () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun unch217G () String)
(declare-fun ch17G () String)
(declare-fun unch117G () String)
(declare-fun unch217H () String)
(declare-fun ch17H () String)
(declare-fun unch117H () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun sc17G () Int)
(declare-fun sc17H () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun var18G () String)
(declare-fun var18H () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun unch218G () String)
(declare-fun ch18G () String)
(declare-fun unch118G () String)
(declare-fun unch218H () String)
(declare-fun ch18H () String)
(declare-fun unch118H () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun sc18G () Int)
(declare-fun sc18H () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun var19G () String)
(declare-fun var19H () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun unch219G () String)
(declare-fun ch19G () String)
(declare-fun unch119G () String)
(declare-fun unch219H () String)
(declare-fun ch19H () String)
(declare-fun unch119H () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun sc19G () Int)
(declare-fun sc19H () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun var20G () String)
(declare-fun var20H () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun unch220G () String)
(declare-fun ch20G () String)
(declare-fun unch120G () String)
(declare-fun unch220H () String)
(declare-fun ch20H () String)
(declare-fun unch120H () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun sc20G () Int)
(declare-fun sc20H () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun var21G () String)
(declare-fun var21H () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun unch221G () String)
(declare-fun ch21G () String)
(declare-fun unch121G () String)
(declare-fun unch221H () String)
(declare-fun ch21H () String)
(declare-fun unch121H () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun sc21G () Int)
(declare-fun sc21H () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun var22G () String)
(declare-fun var22H () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun unch222G () String)
(declare-fun ch22G () String)
(declare-fun unch122G () String)
(declare-fun unch222H () String)
(declare-fun ch22H () String)
(declare-fun unch122H () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun sc22G () Int)
(declare-fun sc22H () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun var23G () String)
(declare-fun var23H () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun unch223G () String)
(declare-fun ch23G () String)
(declare-fun unch123G () String)
(declare-fun unch223H () String)
(declare-fun ch23H () String)
(declare-fun unch123H () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun sc23G () Int)
(declare-fun sc23H () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun var24G () String)
(declare-fun var24H () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun unch224G () String)
(declare-fun ch24G () String)
(declare-fun unch124G () String)
(declare-fun unch224H () String)
(declare-fun ch24H () String)
(declare-fun unch124H () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun sc24G () Int)
(declare-fun sc24H () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun var25G () String)
(declare-fun var25H () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun unch225G () String)
(declare-fun ch25G () String)
(declare-fun unch125G () String)
(declare-fun unch225H () String)
(declare-fun ch25H () String)
(declare-fun unch125H () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun sc25G () Int)
(declare-fun sc25H () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun var26G () String)
(declare-fun var26H () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun unch226G () String)
(declare-fun ch26G () String)
(declare-fun unch126G () String)
(declare-fun unch226H () String)
(declare-fun ch26H () String)
(declare-fun unch126H () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun sc26G () Int)
(declare-fun sc26H () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun var27G () String)
(declare-fun var27H () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun unch227G () String)
(declare-fun ch27G () String)
(declare-fun unch127G () String)
(declare-fun unch227H () String)
(declare-fun ch27H () String)
(declare-fun unch127H () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun sc27G () Int)
(declare-fun sc27H () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun var28G () String)
(declare-fun var28H () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun unch228G () String)
(declare-fun ch28G () String)
(declare-fun unch128G () String)
(declare-fun unch228H () String)
(declare-fun ch28H () String)
(declare-fun unch128H () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun sc28G () Int)
(declare-fun sc28H () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun var29G () String)
(declare-fun var29H () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun unch229G () String)
(declare-fun ch29G () String)
(declare-fun unch129G () String)
(declare-fun unch229H () String)
(declare-fun ch29H () String)
(declare-fun unch129H () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun sc29G () Int)
(declare-fun sc29H () Int)
(declare-fun var30A () String)
(declare-fun var30B () String)
(declare-fun var30C () String)
(declare-fun var30D () String)
(declare-fun var30E () String)
(declare-fun var30F () String)
(declare-fun var30G () String)
(declare-fun var30H () String)
(declare-fun unch230A () String)
(declare-fun ch30A () String)
(declare-fun unch130A () String)
(declare-fun stem30 () String)
(declare-fun unch230B () String)
(declare-fun ch30B () String)
(declare-fun unch130B () String)
(declare-fun unch230C () String)
(declare-fun ch30C () String)
(declare-fun unch130C () String)
(declare-fun unch230D () String)
(declare-fun ch30D () String)
(declare-fun unch130D () String)
(declare-fun unch230E () String)
(declare-fun ch30E () String)
(declare-fun unch130E () String)
(declare-fun unch230F () String)
(declare-fun ch30F () String)
(declare-fun unch130F () String)
(declare-fun unch230G () String)
(declare-fun ch30G () String)
(declare-fun unch130G () String)
(declare-fun unch230H () String)
(declare-fun ch30H () String)
(declare-fun unch130H () String)
(declare-fun l30 () Int)
(declare-fun sc30A () Int)
(declare-fun sc30B () Int)
(declare-fun sc30C () Int)
(declare-fun sc30D () Int)
(declare-fun sc30E () Int)
(declare-fun sc30F () Int)
(declare-fun sc30G () Int)
(declare-fun sc30H () Int)
(declare-fun var31A () String)
(declare-fun var31B () String)
(declare-fun var31C () String)
(declare-fun var31D () String)
(declare-fun var31E () String)
(declare-fun var31F () String)
(declare-fun var31G () String)
(declare-fun var31H () String)
(declare-fun unch231A () String)
(declare-fun ch31A () String)
(declare-fun unch131A () String)
(declare-fun stem31 () String)
(declare-fun unch231B () String)
(declare-fun ch31B () String)
(declare-fun unch131B () String)
(declare-fun unch231C () String)
(declare-fun ch31C () String)
(declare-fun unch131C () String)
(declare-fun unch231D () String)
(declare-fun ch31D () String)
(declare-fun unch131D () String)
(declare-fun unch231E () String)
(declare-fun ch31E () String)
(declare-fun unch131E () String)
(declare-fun unch231F () String)
(declare-fun ch31F () String)
(declare-fun unch131F () String)
(declare-fun unch231G () String)
(declare-fun ch31G () String)
(declare-fun unch131G () String)
(declare-fun unch231H () String)
(declare-fun ch31H () String)
(declare-fun unch131H () String)
(declare-fun l31 () Int)
(declare-fun sc31A () Int)
(declare-fun sc31B () Int)
(declare-fun sc31C () Int)
(declare-fun sc31D () Int)
(declare-fun sc31E () Int)
(declare-fun sc31F () Int)
(declare-fun sc31G () Int)
(declare-fun sc31H () Int)
(declare-fun var32A () String)
(declare-fun var32B () String)
(declare-fun var32C () String)
(declare-fun var32D () String)
(declare-fun var32E () String)
(declare-fun var32F () String)
(declare-fun var32G () String)
(declare-fun var32H () String)
(declare-fun unch232A () String)
(declare-fun ch32A () String)
(declare-fun unch132A () String)
(declare-fun stem32 () String)
(declare-fun unch232B () String)
(declare-fun ch32B () String)
(declare-fun unch132B () String)
(declare-fun unch232C () String)
(declare-fun ch32C () String)
(declare-fun unch132C () String)
(declare-fun unch232D () String)
(declare-fun ch32D () String)
(declare-fun unch132D () String)
(declare-fun unch232E () String)
(declare-fun ch32E () String)
(declare-fun unch132E () String)
(declare-fun unch232F () String)
(declare-fun ch32F () String)
(declare-fun unch132F () String)
(declare-fun unch232G () String)
(declare-fun ch32G () String)
(declare-fun unch132G () String)
(declare-fun unch232H () String)
(declare-fun ch32H () String)
(declare-fun unch132H () String)
(declare-fun l32 () Int)
(declare-fun sc32A () Int)
(declare-fun sc32B () Int)
(declare-fun sc32C () Int)
(declare-fun sc32D () Int)
(declare-fun sc32E () Int)
(declare-fun sc32F () Int)
(declare-fun sc32G () Int)
(declare-fun sc32H () Int)
(declare-fun var33A () String)
(declare-fun var33B () String)
(declare-fun var33C () String)
(declare-fun var33D () String)
(declare-fun var33E () String)
(declare-fun var33F () String)
(declare-fun var33G () String)
(declare-fun var33H () String)
(declare-fun unch233A () String)
(declare-fun ch33A () String)
(declare-fun unch133A () String)
(declare-fun stem33 () String)
(declare-fun unch233B () String)
(declare-fun ch33B () String)
(declare-fun unch133B () String)
(declare-fun unch233C () String)
(declare-fun ch33C () String)
(declare-fun unch133C () String)
(declare-fun unch233D () String)
(declare-fun ch33D () String)
(declare-fun unch133D () String)
(declare-fun unch233E () String)
(declare-fun ch33E () String)
(declare-fun unch133E () String)
(declare-fun unch233F () String)
(declare-fun ch33F () String)
(declare-fun unch133F () String)
(declare-fun unch233G () String)
(declare-fun ch33G () String)
(declare-fun unch133G () String)
(declare-fun unch233H () String)
(declare-fun ch33H () String)
(declare-fun unch133H () String)
(declare-fun l33 () Int)
(declare-fun sc33A () Int)
(declare-fun sc33B () Int)
(declare-fun sc33C () Int)
(declare-fun sc33D () Int)
(declare-fun sc33E () Int)
(declare-fun sc33F () Int)
(declare-fun sc33G () Int)
(declare-fun sc33H () Int)
(declare-fun var34A () String)
(declare-fun var34B () String)
(declare-fun var34C () String)
(declare-fun var34D () String)
(declare-fun var34E () String)
(declare-fun var34F () String)
(declare-fun var34G () String)
(declare-fun var34H () String)
(declare-fun unch234A () String)
(declare-fun ch34A () String)
(declare-fun unch134A () String)
(declare-fun stem34 () String)
(declare-fun unch234B () String)
(declare-fun ch34B () String)
(declare-fun unch134B () String)
(declare-fun unch234C () String)
(declare-fun ch34C () String)
(declare-fun unch134C () String)
(declare-fun unch234D () String)
(declare-fun ch34D () String)
(declare-fun unch134D () String)
(declare-fun unch234E () String)
(declare-fun ch34E () String)
(declare-fun unch134E () String)
(declare-fun unch234F () String)
(declare-fun ch34F () String)
(declare-fun unch134F () String)
(declare-fun unch234G () String)
(declare-fun ch34G () String)
(declare-fun unch134G () String)
(declare-fun unch234H () String)
(declare-fun ch34H () String)
(declare-fun unch134H () String)
(declare-fun l34 () Int)
(declare-fun sc34A () Int)
(declare-fun sc34B () Int)
(declare-fun sc34C () Int)
(declare-fun sc34D () Int)
(declare-fun sc34E () Int)
(declare-fun sc34F () Int)
(declare-fun sc34G () Int)
(declare-fun sc34H () Int)
(declare-fun var35A () String)
(declare-fun var35B () String)
(declare-fun var35C () String)
(declare-fun var35D () String)
(declare-fun var35E () String)
(declare-fun var35F () String)
(declare-fun var35G () String)
(declare-fun var35H () String)
(declare-fun unch235A () String)
(declare-fun ch35A () String)
(declare-fun unch135A () String)
(declare-fun stem35 () String)
(declare-fun unch235B () String)
(declare-fun ch35B () String)
(declare-fun unch135B () String)
(declare-fun unch235C () String)
(declare-fun ch35C () String)
(declare-fun unch135C () String)
(declare-fun unch235D () String)
(declare-fun ch35D () String)
(declare-fun unch135D () String)
(declare-fun unch235E () String)
(declare-fun ch35E () String)
(declare-fun unch135E () String)
(declare-fun unch235F () String)
(declare-fun ch35F () String)
(declare-fun unch135F () String)
(declare-fun unch235G () String)
(declare-fun ch35G () String)
(declare-fun unch135G () String)
(declare-fun unch235H () String)
(declare-fun ch35H () String)
(declare-fun unch135H () String)
(declare-fun l35 () Int)
(declare-fun sc35A () Int)
(declare-fun sc35B () Int)
(declare-fun sc35C () Int)
(declare-fun sc35D () Int)
(declare-fun sc35E () Int)
(declare-fun sc35F () Int)
(declare-fun sc35G () Int)
(declare-fun sc35H () Int)
(declare-fun var36A () String)
(declare-fun var36B () String)
(declare-fun var36C () String)
(declare-fun var36D () String)
(declare-fun var36E () String)
(declare-fun var36F () String)
(declare-fun var36G () String)
(declare-fun var36H () String)
(declare-fun unch236A () String)
(declare-fun ch36A () String)
(declare-fun unch136A () String)
(declare-fun stem36 () String)
(declare-fun unch236B () String)
(declare-fun ch36B () String)
(declare-fun unch136B () String)
(declare-fun unch236C () String)
(declare-fun ch36C () String)
(declare-fun unch136C () String)
(declare-fun unch236D () String)
(declare-fun ch36D () String)
(declare-fun unch136D () String)
(declare-fun unch236E () String)
(declare-fun ch36E () String)
(declare-fun unch136E () String)
(declare-fun unch236F () String)
(declare-fun ch36F () String)
(declare-fun unch136F () String)
(declare-fun unch236G () String)
(declare-fun ch36G () String)
(declare-fun unch136G () String)
(declare-fun unch236H () String)
(declare-fun ch36H () String)
(declare-fun unch136H () String)
(declare-fun l36 () Int)
(declare-fun sc36A () Int)
(declare-fun sc36B () Int)
(declare-fun sc36C () Int)
(declare-fun sc36D () Int)
(declare-fun sc36E () Int)
(declare-fun sc36F () Int)
(declare-fun sc36G () Int)
(declare-fun sc36H () Int)
(declare-fun var37A () String)
(declare-fun var37B () String)
(declare-fun var37C () String)
(declare-fun var37D () String)
(declare-fun var37E () String)
(declare-fun var37F () String)
(declare-fun var37G () String)
(declare-fun var37H () String)
(declare-fun unch237A () String)
(declare-fun ch37A () String)
(declare-fun unch137A () String)
(declare-fun stem37 () String)
(declare-fun unch237B () String)
(declare-fun ch37B () String)
(declare-fun unch137B () String)
(declare-fun unch237C () String)
(declare-fun ch37C () String)
(declare-fun unch137C () String)
(declare-fun unch237D () String)
(declare-fun ch37D () String)
(declare-fun unch137D () String)
(declare-fun unch237E () String)
(declare-fun ch37E () String)
(declare-fun unch137E () String)
(declare-fun unch237F () String)
(declare-fun ch37F () String)
(declare-fun unch137F () String)
(declare-fun unch237G () String)
(declare-fun ch37G () String)
(declare-fun unch137G () String)
(declare-fun unch237H () String)
(declare-fun ch37H () String)
(declare-fun unch137H () String)
(declare-fun l37 () Int)
(declare-fun sc37A () Int)
(declare-fun sc37B () Int)
(declare-fun sc37C () Int)
(declare-fun sc37D () Int)
(declare-fun sc37E () Int)
(declare-fun sc37F () Int)
(declare-fun sc37G () Int)
(declare-fun sc37H () Int)
(declare-fun var38A () String)
(declare-fun var38B () String)
(declare-fun var38C () String)
(declare-fun var38D () String)
(declare-fun var38E () String)
(declare-fun var38F () String)
(declare-fun var38G () String)
(declare-fun var38H () String)
(declare-fun unch238A () String)
(declare-fun ch38A () String)
(declare-fun unch138A () String)
(declare-fun stem38 () String)
(declare-fun unch238B () String)
(declare-fun ch38B () String)
(declare-fun unch138B () String)
(declare-fun unch238C () String)
(declare-fun ch38C () String)
(declare-fun unch138C () String)
(declare-fun unch238D () String)
(declare-fun ch38D () String)
(declare-fun unch138D () String)
(declare-fun unch238E () String)
(declare-fun ch38E () String)
(declare-fun unch138E () String)
(declare-fun unch238F () String)
(declare-fun ch38F () String)
(declare-fun unch138F () String)
(declare-fun unch238G () String)
(declare-fun ch38G () String)
(declare-fun unch138G () String)
(declare-fun unch238H () String)
(declare-fun ch38H () String)
(declare-fun unch138H () String)
(declare-fun l38 () Int)
(declare-fun sc38A () Int)
(declare-fun sc38B () Int)
(declare-fun sc38C () Int)
(declare-fun sc38D () Int)
(declare-fun sc38E () Int)
(declare-fun sc38F () Int)
(declare-fun sc38G () Int)
(declare-fun sc38H () Int)
(declare-fun var39A () String)
(declare-fun var39B () String)
(declare-fun var39C () String)
(declare-fun var39D () String)
(declare-fun var39E () String)
(declare-fun var39F () String)
(declare-fun var39G () String)
(declare-fun var39H () String)
(declare-fun unch239A () String)
(declare-fun ch39A () String)
(declare-fun unch139A () String)
(declare-fun stem39 () String)
(declare-fun unch239B () String)
(declare-fun ch39B () String)
(declare-fun unch139B () String)
(declare-fun unch239C () String)
(declare-fun ch39C () String)
(declare-fun unch139C () String)
(declare-fun unch239D () String)
(declare-fun ch39D () String)
(declare-fun unch139D () String)
(declare-fun unch239E () String)
(declare-fun ch39E () String)
(declare-fun unch139E () String)
(declare-fun unch239F () String)
(declare-fun ch39F () String)
(declare-fun unch139F () String)
(declare-fun unch239G () String)
(declare-fun ch39G () String)
(declare-fun unch139G () String)
(declare-fun unch239H () String)
(declare-fun ch39H () String)
(declare-fun unch139H () String)
(declare-fun l39 () Int)
(declare-fun sc39A () Int)
(declare-fun sc39B () Int)
(declare-fun sc39C () Int)
(declare-fun sc39D () Int)
(declare-fun sc39E () Int)
(declare-fun sc39F () Int)
(declare-fun sc39G () Int)
(declare-fun sc39H () Int)
(declare-fun var40A () String)
(declare-fun var40B () String)
(declare-fun var40C () String)
(declare-fun var40D () String)
(declare-fun var40E () String)
(declare-fun var40F () String)
(declare-fun var40G () String)
(declare-fun var40H () String)
(declare-fun unch240A () String)
(declare-fun ch40A () String)
(declare-fun unch140A () String)
(declare-fun stem40 () String)
(declare-fun unch240B () String)
(declare-fun ch40B () String)
(declare-fun unch140B () String)
(declare-fun unch240C () String)
(declare-fun ch40C () String)
(declare-fun unch140C () String)
(declare-fun unch240D () String)
(declare-fun ch40D () String)
(declare-fun unch140D () String)
(declare-fun unch240E () String)
(declare-fun ch40E () String)
(declare-fun unch140E () String)
(declare-fun unch240F () String)
(declare-fun ch40F () String)
(declare-fun unch140F () String)
(declare-fun unch240G () String)
(declare-fun ch40G () String)
(declare-fun unch140G () String)
(declare-fun unch240H () String)
(declare-fun ch40H () String)
(declare-fun unch140H () String)
(declare-fun l40 () Int)
(declare-fun sc40A () Int)
(declare-fun sc40B () Int)
(declare-fun sc40C () Int)
(declare-fun sc40D () Int)
(declare-fun sc40E () Int)
(declare-fun sc40F () Int)
(declare-fun sc40G () Int)
(declare-fun sc40H () Int)
(declare-fun var41A () String)
(declare-fun var41B () String)
(declare-fun var41C () String)
(declare-fun var41D () String)
(declare-fun var41E () String)
(declare-fun var41F () String)
(declare-fun var41G () String)
(declare-fun var41H () String)
(declare-fun unch241A () String)
(declare-fun ch41A () String)
(declare-fun unch141A () String)
(declare-fun stem41 () String)
(declare-fun unch241B () String)
(declare-fun ch41B () String)
(declare-fun unch141B () String)
(declare-fun unch241C () String)
(declare-fun ch41C () String)
(declare-fun unch141C () String)
(declare-fun unch241D () String)
(declare-fun ch41D () String)
(declare-fun unch141D () String)
(declare-fun unch241E () String)
(declare-fun ch41E () String)
(declare-fun unch141E () String)
(declare-fun unch241F () String)
(declare-fun ch41F () String)
(declare-fun unch141F () String)
(declare-fun unch241G () String)
(declare-fun ch41G () String)
(declare-fun unch141G () String)
(declare-fun unch241H () String)
(declare-fun ch41H () String)
(declare-fun unch141H () String)
(declare-fun l41 () Int)
(declare-fun sc41A () Int)
(declare-fun sc41B () Int)
(declare-fun sc41C () Int)
(declare-fun sc41D () Int)
(declare-fun sc41E () Int)
(declare-fun sc41F () Int)
(declare-fun sc41G () Int)
(declare-fun sc41H () Int)
(declare-fun var42A () String)
(declare-fun var42B () String)
(declare-fun var42C () String)
(declare-fun var42D () String)
(declare-fun var42E () String)
(declare-fun var42F () String)
(declare-fun var42G () String)
(declare-fun var42H () String)
(declare-fun unch242A () String)
(declare-fun ch42A () String)
(declare-fun unch142A () String)
(declare-fun stem42 () String)
(declare-fun unch242B () String)
(declare-fun ch42B () String)
(declare-fun unch142B () String)
(declare-fun unch242C () String)
(declare-fun ch42C () String)
(declare-fun unch142C () String)
(declare-fun unch242D () String)
(declare-fun ch42D () String)
(declare-fun unch142D () String)
(declare-fun unch242E () String)
(declare-fun ch42E () String)
(declare-fun unch142E () String)
(declare-fun unch242F () String)
(declare-fun ch42F () String)
(declare-fun unch142F () String)
(declare-fun unch242G () String)
(declare-fun ch42G () String)
(declare-fun unch142G () String)
(declare-fun unch242H () String)
(declare-fun ch42H () String)
(declare-fun unch142H () String)
(declare-fun l42 () Int)
(declare-fun sc42A () Int)
(declare-fun sc42B () Int)
(declare-fun sc42C () Int)
(declare-fun sc42D () Int)
(declare-fun sc42E () Int)
(declare-fun sc42F () Int)
(declare-fun sc42G () Int)
(declare-fun sc42H () Int)
(declare-fun var43A () String)
(declare-fun var43B () String)
(declare-fun var43C () String)
(declare-fun var43D () String)
(declare-fun var43E () String)
(declare-fun var43F () String)
(declare-fun var43G () String)
(declare-fun var43H () String)
(declare-fun unch243A () String)
(declare-fun ch43A () String)
(declare-fun unch143A () String)
(declare-fun stem43 () String)
(declare-fun unch243B () String)
(declare-fun ch43B () String)
(declare-fun unch143B () String)
(declare-fun unch243C () String)
(declare-fun ch43C () String)
(declare-fun unch143C () String)
(declare-fun unch243D () String)
(declare-fun ch43D () String)
(declare-fun unch143D () String)
(declare-fun unch243E () String)
(declare-fun ch43E () String)
(declare-fun unch143E () String)
(declare-fun unch243F () String)
(declare-fun ch43F () String)
(declare-fun unch143F () String)
(declare-fun unch243G () String)
(declare-fun ch43G () String)
(declare-fun unch143G () String)
(declare-fun unch243H () String)
(declare-fun ch43H () String)
(declare-fun unch143H () String)
(declare-fun l43 () Int)
(declare-fun sc43A () Int)
(declare-fun sc43B () Int)
(declare-fun sc43C () Int)
(declare-fun sc43D () Int)
(declare-fun sc43E () Int)
(declare-fun sc43F () Int)
(declare-fun sc43G () Int)
(declare-fun sc43H () Int)
(declare-fun var44A () String)
(declare-fun var44B () String)
(declare-fun var44C () String)
(declare-fun var44D () String)
(declare-fun var44E () String)
(declare-fun var44F () String)
(declare-fun var44G () String)
(declare-fun var44H () String)
(declare-fun unch244A () String)
(declare-fun ch44A () String)
(declare-fun unch144A () String)
(declare-fun stem44 () String)
(declare-fun unch244B () String)
(declare-fun ch44B () String)
(declare-fun unch144B () String)
(declare-fun unch244C () String)
(declare-fun ch44C () String)
(declare-fun unch144C () String)
(declare-fun unch244D () String)
(declare-fun ch44D () String)
(declare-fun unch144D () String)
(declare-fun unch244E () String)
(declare-fun ch44E () String)
(declare-fun unch144E () String)
(declare-fun unch244F () String)
(declare-fun ch44F () String)
(declare-fun unch144F () String)
(declare-fun unch244G () String)
(declare-fun ch44G () String)
(declare-fun unch144G () String)
(declare-fun unch244H () String)
(declare-fun ch44H () String)
(declare-fun unch144H () String)
(declare-fun l44 () Int)
(declare-fun sc44A () Int)
(declare-fun sc44B () Int)
(declare-fun sc44C () Int)
(declare-fun sc44D () Int)
(declare-fun sc44E () Int)
(declare-fun sc44F () Int)
(declare-fun sc44G () Int)
(declare-fun sc44H () Int)
(declare-fun var45A () String)
(declare-fun var45B () String)
(declare-fun var45C () String)
(declare-fun var45D () String)
(declare-fun var45E () String)
(declare-fun var45F () String)
(declare-fun var45G () String)
(declare-fun var45H () String)
(declare-fun unch245A () String)
(declare-fun ch45A () String)
(declare-fun unch145A () String)
(declare-fun stem45 () String)
(declare-fun unch245B () String)
(declare-fun ch45B () String)
(declare-fun unch145B () String)
(declare-fun unch245C () String)
(declare-fun ch45C () String)
(declare-fun unch145C () String)
(declare-fun unch245D () String)
(declare-fun ch45D () String)
(declare-fun unch145D () String)
(declare-fun unch245E () String)
(declare-fun ch45E () String)
(declare-fun unch145E () String)
(declare-fun unch245F () String)
(declare-fun ch45F () String)
(declare-fun unch145F () String)
(declare-fun unch245G () String)
(declare-fun ch45G () String)
(declare-fun unch145G () String)
(declare-fun unch245H () String)
(declare-fun ch45H () String)
(declare-fun unch145H () String)
(declare-fun l45 () Int)
(declare-fun sc45A () Int)
(declare-fun sc45B () Int)
(declare-fun sc45C () Int)
(declare-fun sc45D () Int)
(declare-fun sc45E () Int)
(declare-fun sc45F () Int)
(declare-fun sc45G () Int)
(declare-fun sc45H () Int)
(declare-fun var46A () String)
(declare-fun var46B () String)
(declare-fun var46C () String)
(declare-fun var46D () String)
(declare-fun var46E () String)
(declare-fun var46F () String)
(declare-fun var46G () String)
(declare-fun var46H () String)
(declare-fun unch246A () String)
(declare-fun ch46A () String)
(declare-fun unch146A () String)
(declare-fun stem46 () String)
(declare-fun unch246B () String)
(declare-fun ch46B () String)
(declare-fun unch146B () String)
(declare-fun unch246C () String)
(declare-fun ch46C () String)
(declare-fun unch146C () String)
(declare-fun unch246D () String)
(declare-fun ch46D () String)
(declare-fun unch146D () String)
(declare-fun unch246E () String)
(declare-fun ch46E () String)
(declare-fun unch146E () String)
(declare-fun unch246F () String)
(declare-fun ch46F () String)
(declare-fun unch146F () String)
(declare-fun unch246G () String)
(declare-fun ch46G () String)
(declare-fun unch146G () String)
(declare-fun unch246H () String)
(declare-fun ch46H () String)
(declare-fun unch146H () String)
(declare-fun l46 () Int)
(declare-fun sc46A () Int)
(declare-fun sc46B () Int)
(declare-fun sc46C () Int)
(declare-fun sc46D () Int)
(declare-fun sc46E () Int)
(declare-fun sc46F () Int)
(declare-fun sc46G () Int)
(declare-fun sc46H () Int)
(declare-fun var47A () String)
(declare-fun var47B () String)
(declare-fun var47C () String)
(declare-fun var47D () String)
(declare-fun var47E () String)
(declare-fun var47F () String)
(declare-fun var47G () String)
(declare-fun var47H () String)
(declare-fun unch247A () String)
(declare-fun ch47A () String)
(declare-fun unch147A () String)
(declare-fun stem47 () String)
(declare-fun unch247B () String)
(declare-fun ch47B () String)
(declare-fun unch147B () String)
(declare-fun unch247C () String)
(declare-fun ch47C () String)
(declare-fun unch147C () String)
(declare-fun unch247D () String)
(declare-fun ch47D () String)
(declare-fun unch147D () String)
(declare-fun unch247E () String)
(declare-fun ch47E () String)
(declare-fun unch147E () String)
(declare-fun unch247F () String)
(declare-fun ch47F () String)
(declare-fun unch147F () String)
(declare-fun unch247G () String)
(declare-fun ch47G () String)
(declare-fun unch147G () String)
(declare-fun unch247H () String)
(declare-fun ch47H () String)
(declare-fun unch147H () String)
(declare-fun l47 () Int)
(declare-fun sc47A () Int)
(declare-fun sc47B () Int)
(declare-fun sc47C () Int)
(declare-fun sc47D () Int)
(declare-fun sc47E () Int)
(declare-fun sc47F () Int)
(declare-fun sc47G () Int)
(declare-fun sc47H () Int)
(declare-fun var48A () String)
(declare-fun var48B () String)
(declare-fun var48C () String)
(declare-fun var48D () String)
(declare-fun var48E () String)
(declare-fun var48F () String)
(declare-fun var48G () String)
(declare-fun var48H () String)
(declare-fun unch248A () String)
(declare-fun ch48A () String)
(declare-fun unch148A () String)
(declare-fun stem48 () String)
(declare-fun unch248B () String)
(declare-fun ch48B () String)
(declare-fun unch148B () String)
(declare-fun unch248C () String)
(declare-fun ch48C () String)
(declare-fun unch148C () String)
(declare-fun unch248D () String)
(declare-fun ch48D () String)
(declare-fun unch148D () String)
(declare-fun unch248E () String)
(declare-fun ch48E () String)
(declare-fun unch148E () String)
(declare-fun unch248F () String)
(declare-fun ch48F () String)
(declare-fun unch148F () String)
(declare-fun unch248G () String)
(declare-fun ch48G () String)
(declare-fun unch148G () String)
(declare-fun unch248H () String)
(declare-fun ch48H () String)
(declare-fun unch148H () String)
(declare-fun l48 () Int)
(declare-fun sc48A () Int)
(declare-fun sc48B () Int)
(declare-fun sc48C () Int)
(declare-fun sc48D () Int)
(declare-fun sc48E () Int)
(declare-fun sc48F () Int)
(declare-fun sc48G () Int)
(declare-fun sc48H () Int)
(declare-fun var49A () String)
(declare-fun var49B () String)
(declare-fun var49C () String)
(declare-fun var49D () String)
(declare-fun var49E () String)
(declare-fun var49F () String)
(declare-fun var49G () String)
(declare-fun var49H () String)
(declare-fun unch249A () String)
(declare-fun ch49A () String)
(declare-fun unch149A () String)
(declare-fun stem49 () String)
(declare-fun unch249B () String)
(declare-fun ch49B () String)
(declare-fun unch149B () String)
(declare-fun unch249C () String)
(declare-fun ch49C () String)
(declare-fun unch149C () String)
(declare-fun unch249D () String)
(declare-fun ch49D () String)
(declare-fun unch149D () String)
(declare-fun unch249E () String)
(declare-fun ch49E () String)
(declare-fun unch149E () String)
(declare-fun unch249F () String)
(declare-fun ch49F () String)
(declare-fun unch149F () String)
(declare-fun unch249G () String)
(declare-fun ch49G () String)
(declare-fun unch149G () String)
(declare-fun unch249H () String)
(declare-fun ch49H () String)
(declare-fun unch149H () String)
(declare-fun l49 () Int)
(declare-fun sc49A () Int)
(declare-fun sc49B () Int)
(declare-fun sc49C () Int)
(declare-fun sc49D () Int)
(declare-fun sc49E () Int)
(declare-fun sc49F () Int)
(declare-fun sc49G () Int)
(declare-fun sc49H () Int)
(declare-fun var50A () String)
(declare-fun var50B () String)
(declare-fun var50C () String)
(declare-fun var50D () String)
(declare-fun var50E () String)
(declare-fun var50F () String)
(declare-fun var50G () String)
(declare-fun var50H () String)
(declare-fun unch250A () String)
(declare-fun ch50A () String)
(declare-fun unch150A () String)
(declare-fun stem50 () String)
(declare-fun unch250B () String)
(declare-fun ch50B () String)
(declare-fun unch150B () String)
(declare-fun unch250C () String)
(declare-fun ch50C () String)
(declare-fun unch150C () String)
(declare-fun unch250D () String)
(declare-fun ch50D () String)
(declare-fun unch150D () String)
(declare-fun unch250E () String)
(declare-fun ch50E () String)
(declare-fun unch150E () String)
(declare-fun unch250F () String)
(declare-fun ch50F () String)
(declare-fun unch150F () String)
(declare-fun unch250G () String)
(declare-fun ch50G () String)
(declare-fun unch150G () String)
(declare-fun unch250H () String)
(declare-fun ch50H () String)
(declare-fun unch150H () String)
(declare-fun l50 () Int)
(declare-fun sc50A () Int)
(declare-fun sc50B () Int)
(declare-fun sc50C () Int)
(declare-fun sc50D () Int)
(declare-fun sc50E () Int)
(declare-fun sc50F () Int)
(declare-fun sc50G () Int)
(declare-fun sc50H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "plOst" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "plastO" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "plasjkjX" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "skorZx" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "skoruxO" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "skorusjX" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "1jrjXx" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "1jrjixO" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "1jrjisjX" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "pastZx" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "pastuxO" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "pastusjX" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "mjnjZx" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "mjnjZxa" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "mjnjZsji" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "plZ1" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "plZ1a" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "plZzji" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "sjtjX1" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "st21a" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "st2zji" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (<= (str.len var7G) 1))
(assert (<= (str.len var7H) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= (str.++ preG (str.++ stem7 sufG)) (str.++ unch17G (str.++ ch7G unch27G))))
(assert (= (str.++ preH (str.++ stem7 sufH)) (str.++ unch17H (str.++ ch7H unch27H))))
(assert (= "sOk" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "sOka" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "sOtsji" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (= (ite (= ch7G var7G) 0 1) sc7G))
(assert (= (ite (= ch7H var7H) 0 1) sc7H))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= sc7G 1))
(assert (<= sc7H 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (<= (str.len var8G) 1))
(assert (<= (str.len var8H) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= (str.++ preG (str.++ stem8 sufG)) (str.++ unch18G (str.++ ch8G unch28G))))
(assert (= (str.++ preH (str.++ stem8 sufH)) (str.++ unch18H (str.++ ch8H unch28H))))
(assert (= "b3k" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "bHkO" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "bHtsjX" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (= (ite (= ch8G var8G) 0 1) sc8G))
(assert (= (ite (= ch8H var8H) 0 1) sc8H))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= sc8G 1))
(assert (<= sc8H 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (<= (str.len var9G) 1))
(assert (<= (str.len var9H) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= (str.++ preG (str.++ stem9 sufG)) (str.++ unch19G (str.++ ch9G unch29G))))
(assert (= (str.++ preH (str.++ stem9 sufH)) (str.++ unch19H (str.++ ch9H unch29H))))
(assert (= "l3st" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "lHstO" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "lHsjkjX" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (= (ite (= ch9G var9G) 0 1) sc9G))
(assert (= (ite (= ch9H var9H) 0 1) sc9H))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= sc9G 1))
(assert (<= sc9H 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (<= (str.len var10G) 1))
(assert (<= (str.len var10H) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= (str.++ preG (str.++ stem10 sufG)) (str.++ unch110G (str.++ ch10G unch210G))))
(assert (= (str.++ preH (str.++ stem10 sufH)) (str.++ unch110H (str.++ ch10H unch210H))))
(assert (= "l3st" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "l3sta" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "l3sjkji" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (= (ite (= ch10G var10G) 0 1) sc10G))
(assert (= (ite (= ch10H var10H) 0 1) sc10H))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= sc10G 1))
(assert (<= sc10H 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (<= (str.len var11G) 1))
(assert (<= (str.len var11H) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= (str.++ preG (str.++ stem11 sufG)) (str.++ unch111G (str.++ ch11G unch211G))))
(assert (= (str.++ preH (str.++ stem11 sufH)) (str.++ unch111H (str.++ ch11H unch211H))))
(assert (= "pjljXt" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "pl2ta" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "pl2kji" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (= (ite (= ch11G var11G) 0 1) sc11G))
(assert (= (ite (= ch11H var11H) 0 1) sc11H))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= sc11G 1))
(assert (<= sc11H 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (<= (str.len var12G) 1))
(assert (<= (str.len var12H) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= (str.++ preG (str.++ stem12 sufG)) (str.++ unch112G (str.++ ch12G unch212G))))
(assert (= (str.++ preH (str.++ stem12 sufH)) (str.++ unch112H (str.++ ch12H unch212H))))
(assert (= "sjmjrjXd" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "smr2da" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "smr2gji" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (= (ite (= ch12G var12G) 0 1) sc12G))
(assert (= (ite (= ch12H var12H) 0 1) sc12H))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= sc12G 1))
(assert (<= sc12H 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (<= (str.len var13G) 1))
(assert (<= (str.len var13H) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= (str.++ preG (str.++ stem13 sufG)) (str.++ unch113G (str.++ ch13G unch213G))))
(assert (= (str.++ preH (str.++ stem13 sufH)) (str.++ unch113H (str.++ ch13H unch213H))))
(assert (= "fjXst" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "fostO" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "fosjkjX" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (= (ite (= ch13G var13G) 0 1) sc13G))
(assert (= (ite (= ch13H var13H) 0 1) sc13H))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= sc13G 1))
(assert (<= sc13H 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (<= (str.len var14G) 1))
(assert (<= (str.len var14H) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= (str.++ preG (str.++ stem14 sufG)) (str.++ unch114G (str.++ ch14G unch214G))))
(assert (= (str.++ preH (str.++ stem14 sufH)) (str.++ unch114H (str.++ ch14H unch214H))))
(assert (= "mjXst" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "m2sta" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "m2sjkji" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (= (ite (= ch14G var14G) 0 1) sc14G))
(assert (= (ite (= ch14H var14H) 0 1) sc14H))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= sc14G 1))
(assert (<= sc14H 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (<= (str.len var15G) 1))
(assert (<= (str.len var15H) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= (str.++ preG (str.++ stem15 sufG)) (str.++ unch115G (str.++ ch15G unch215G))))
(assert (= (str.++ preH (str.++ stem15 sufH)) (str.++ unch115H (str.++ ch15H unch215H))))
(assert (= "ljXd" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "l4du" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "lHdZ" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (= (ite (= ch15G var15G) 0 1) sc15G))
(assert (= (ite (= ch15H var15H) 0 1) sc15H))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= sc15G 1))
(assert (<= sc15H 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (<= (str.len var16G) 1))
(assert (<= (str.len var16H) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= (str.++ preG (str.++ stem16 sufG)) (str.++ unch116G (str.++ ch16G unch216G))))
(assert (= (str.++ preH (str.++ stem16 sufH)) (str.++ unch116H (str.++ ch16H unch216H))))
(assert (= "djrjXt" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "dr2ta" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "dr2kji" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (= (ite (= ch16G var16G) 0 1) sc16G))
(assert (= (ite (= ch16H var16H) 0 1) sc16H))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= sc16G 1))
(assert (<= sc16H 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (<= (str.len var17G) 1))
(assert (<= (str.len var17H) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= (str.++ preG (str.++ stem17 sufG)) (str.++ unch117G (str.++ ch17G unch217G))))
(assert (= (str.++ preH (str.++ stem17 sufH)) (str.++ unch117H (str.++ ch17H unch217H))))
(assert (= "mjXd" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "m4du" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "mHdZ" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (= (ite (= ch17G var17G) 0 1) sc17G))
(assert (= (ite (= ch17H var17H) 0 1) sc17H))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= sc17G 1))
(assert (<= sc17H 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (<= (str.len var18G) 1))
(assert (<= (str.len var18H) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= (str.++ preG (str.++ stem18 sufG)) (str.++ unch118G (str.++ ch18G unch218G))))
(assert (= (str.++ preH (str.++ stem18 sufH)) (str.++ unch118H (str.++ ch18H unch218H))))
(assert (= "vjXl" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "volO" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "voljX" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (= (ite (= ch18G var18G) 0 1) sc18G))
(assert (= (ite (= ch18H var18H) 0 1) sc18H))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= sc18G 1))
(assert (<= sc18H 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (<= (str.len var19G) 1))
(assert (<= (str.len var19H) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= (str.++ preG (str.++ stem19 sufG)) (str.++ unch119G (str.++ ch19G unch219G))))
(assert (= (str.++ preH (str.++ stem19 sufH)) (str.++ unch119H (str.++ ch19H unch219H))))
(assert (= "vjXz" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "v2za" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "v2zji" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (= (ite (= ch19G var19G) 0 1) sc19G))
(assert (= (ite (= ch19H var19H) 0 1) sc19H))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= sc19G 1))
(assert (<= sc19H 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (<= (str.len var20G) 1))
(assert (<= (str.len var20H) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= (str.++ preG (str.++ stem20 sufG)) (str.++ unch120G (str.++ ch20G unch220G))))
(assert (= (str.++ preH (str.++ stem20 sufH)) (str.++ unch120H (str.++ ch20H unch220H))))
(assert (= "s3r" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "s3ra" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "s3rji" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (= (ite (= ch20G var20G) 0 1) sc20G))
(assert (= (ite (= ch20H var20H) 0 1) sc20H))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= sc20G 1))
(assert (<= sc20H 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (<= (str.len var21G) 1))
(assert (<= (str.len var21H) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= (str.++ preG (str.++ stem21 sufG)) (str.++ unch121G (str.++ ch21G unch221G))))
(assert (= (str.++ preH (str.++ stem21 sufH)) (str.++ unch121H (str.++ ch21H unch221H))))
(assert (= "sjnjXp" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "snopO" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "snopjX" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (= (ite (= ch21G var21G) 0 1) sc21G))
(assert (= (ite (= ch21H var21H) 0 1) sc21H))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= sc21G 1))
(assert (<= sc21H 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (<= (str.len var22G) 1))
(assert (<= (str.len var22H) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= (str.++ preG (str.++ stem22 sufG)) (str.++ unch122G (str.++ ch22G unch222G))))
(assert (= (str.++ preH (str.++ stem22 sufH)) (str.++ unch122H (str.++ ch22H unch222H))))
(assert (= "1r3b" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "1rHbO" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "1rHbjX" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (= (ite (= ch22G var22G) 0 1) sc22G))
(assert (= (ite (= ch22H var22H) 0 1) sc22H))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= sc22G 1))
(assert (<= sc22H 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (<= (str.len var23G) 1))
(assert (<= (str.len var23H) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= (str.++ preG (str.++ stem23 sufG)) (str.++ unch123G (str.++ ch23G unch223G))))
(assert (= (str.++ preH (str.++ stem23 sufH)) (str.++ unch123H (str.++ ch23H unch223H))))
(assert (= "l4bjid" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= "l4bHda" (str.++ unch123B (str.++ var23B unch223B))))
(assert (= "l4bHgji" (str.++ unch123C (str.++ var23C unch223C))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (= (ite (= ch23G var23G) 0 1) sc23G))
(assert (= (ite (= ch23H var23H) 0 1) sc23H))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= sc23G 1))
(assert (<= sc23H 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (<= (str.len var24G) 1))
(assert (<= (str.len var24H) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= (str.++ preG (str.++ stem24 sufG)) (str.++ unch124G (str.++ ch24G unch224G))))
(assert (= (str.++ preH (str.++ stem24 sufH)) (str.++ unch124H (str.++ ch24H unch224H))))
(assert (= "b4rji1" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= "b4rH1a" (str.++ unch124B (str.++ var24B unch224B))))
(assert (= "b4rHzji" (str.++ unch124C (str.++ var24C unch224C))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (= (ite (= ch24G var24G) 0 1) sc24G))
(assert (= (ite (= ch24H var24H) 0 1) sc24H))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= sc24G 1))
(assert (<= sc24H 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (<= (str.len var25G) 1))
(assert (<= (str.len var25H) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= (str.++ preG (str.++ stem25 sufG)) (str.++ unch125G (str.++ ch25G unch225G))))
(assert (= (str.++ preH (str.++ stem25 sufH)) (str.++ unch125H (str.++ ch25H unch225H))))
(assert (= "pHrjX1" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= "pHr21a" (str.++ unch125B (str.++ var25B unch225B))))
(assert (= "pHr2zji" (str.++ unch125C (str.++ var25C unch225C))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (= (ite (= ch25G var25G) 0 1) sc25G))
(assert (= (ite (= ch25H var25H) 0 1) sc25H))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= sc25G 1))
(assert (<= sc25H 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (<= (str.len var26G) 1))
(assert (<= (str.len var26H) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= (str.++ preG (str.++ stem26 sufG)) (str.++ unch126G (str.++ ch26G unch226G))))
(assert (= (str.++ preH (str.++ stem26 sufH)) (str.++ unch126H (str.++ ch26H unch226H))))
(assert (= "porjX1" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= "por21a" (str.++ unch126B (str.++ var26B unch226B))))
(assert (= "por2zji" (str.++ unch126C (str.++ var26C unch226C))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (= (ite (= ch26G var26G) 0 1) sc26G))
(assert (= (ite (= ch26H var26H) 0 1) sc26H))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= sc26G 1))
(assert (<= sc26H 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (<= (str.len var27G) 1))
(assert (<= (str.len var27H) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= (str.++ preG (str.++ stem27 sufG)) (str.++ unch127G (str.++ ch27G unch227G))))
(assert (= (str.++ preH (str.++ stem27 sufH)) (str.++ unch127H (str.++ ch27H unch227H))))
(assert (= "bolj3k" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= "boljHkO" (str.++ unch127B (str.++ var27B unch227B))))
(assert (= "boljHtsjX" (str.++ unch127C (str.++ var27C unch227C))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (= (ite (= ch27G var27G) 0 1) sc27G))
(assert (= (ite (= ch27H var27H) 0 1) sc27H))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= sc27G 1))
(assert (<= sc27H 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (<= (str.len var28G) 1))
(assert (<= (str.len var28H) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= (str.++ preG (str.++ stem28 sufG)) (str.++ unch128G (str.++ ch28G unch228G))))
(assert (= (str.++ preH (str.++ stem28 sufH)) (str.++ unch128H (str.++ ch28H unch228H))))
(assert (= "v2rji1" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= "v2ro1a" (str.++ unch128B (str.++ var28B unch228B))))
(assert (= "v2rozji" (str.++ unch128C (str.++ var28C unch228C))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (= (ite (= ch28G var28G) 0 1) sc28G))
(assert (= (ite (= ch28H var28H) 0 1) sc28H))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= sc28G 1))
(assert (<= sc28H 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (<= (str.len var29G) 1))
(assert (<= (str.len var29H) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= (str.++ preG (str.++ stem29 sufG)) (str.++ unch129G (str.++ ch29G unch229G))))
(assert (= (str.++ preH (str.++ stem29 sufH)) (str.++ unch129H (str.++ ch29H unch229H))))
(assert (= "k2nHk" (str.++ unch129A (str.++ var29A unch229A))))
(assert (= "k2nHka" (str.++ unch129B (str.++ var29B unch229B))))
(assert (= "k2nHtsji" (str.++ unch129C (str.++ var29C unch229C))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (= (ite (= ch29G var29G) 0 1) sc29G))
(assert (= (ite (= ch29H var29H) 0 1) sc29H))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= sc29G 1))
(assert (<= sc29H 1))
(assert (<= (str.len var30A) 1))
(assert (<= (str.len var30B) 1))
(assert (<= (str.len var30C) 1))
(assert (<= (str.len var30D) 1))
(assert (<= (str.len var30E) 1))
(assert (<= (str.len var30F) 1))
(assert (<= (str.len var30G) 1))
(assert (<= (str.len var30H) 1))
(assert (= (str.++ preA (str.++ stem30 sufA)) (str.++ unch130A (str.++ ch30A unch230A))))
(assert (= (str.++ preB (str.++ stem30 sufB)) (str.++ unch130B (str.++ ch30B unch230B))))
(assert (= (str.++ preC (str.++ stem30 sufC)) (str.++ unch130C (str.++ ch30C unch230C))))
(assert (= (str.++ preD (str.++ stem30 sufD)) (str.++ unch130D (str.++ ch30D unch230D))))
(assert (= (str.++ preE (str.++ stem30 sufE)) (str.++ unch130E (str.++ ch30E unch230E))))
(assert (= (str.++ preF (str.++ stem30 sufF)) (str.++ unch130F (str.++ ch30F unch230F))))
(assert (= (str.++ preG (str.++ stem30 sufG)) (str.++ unch130G (str.++ ch30G unch230G))))
(assert (= (str.++ preH (str.++ stem30 sufH)) (str.++ unch130H (str.++ ch30H unch230H))))
(assert (= "p2tjik" (str.++ unch130A (str.++ var30A unch230A))))
(assert (= "pot2ka" (str.++ unch130B (str.++ var30B unch230B))))
(assert (= "pot2tsji" (str.++ unch130C (str.++ var30C unch230C))))
(assert (= (str.len stem30) l30))
(assert (= (ite (= ch30A var30A) 0 1) sc30A))
(assert (= (ite (= ch30B var30B) 0 1) sc30B))
(assert (= (ite (= ch30C var30C) 0 1) sc30C))
(assert (= (ite (= ch30D var30D) 0 1) sc30D))
(assert (= (ite (= ch30E var30E) 0 1) sc30E))
(assert (= (ite (= ch30F var30F) 0 1) sc30F))
(assert (= (ite (= ch30G var30G) 0 1) sc30G))
(assert (= (ite (= ch30H var30H) 0 1) sc30H))
(assert (<= sc30A 1))
(assert (<= sc30B 1))
(assert (<= sc30C 1))
(assert (<= sc30D 1))
(assert (<= sc30E 1))
(assert (<= sc30F 1))
(assert (<= sc30G 1))
(assert (<= sc30H 1))
(assert (<= (str.len var31A) 1))
(assert (<= (str.len var31B) 1))
(assert (<= (str.len var31C) 1))
(assert (<= (str.len var31D) 1))
(assert (<= (str.len var31E) 1))
(assert (<= (str.len var31F) 1))
(assert (<= (str.len var31G) 1))
(assert (<= (str.len var31H) 1))
(assert (= (str.++ preA (str.++ stem31 sufA)) (str.++ unch131A (str.++ ch31A unch231A))))
(assert (= (str.++ preB (str.++ stem31 sufB)) (str.++ unch131B (str.++ ch31B unch231B))))
(assert (= (str.++ preC (str.++ stem31 sufC)) (str.++ unch131C (str.++ ch31C unch231C))))
(assert (= (str.++ preD (str.++ stem31 sufD)) (str.++ unch131D (str.++ ch31D unch231D))))
(assert (= (str.++ preE (str.++ stem31 sufE)) (str.++ unch131E (str.++ ch31E unch231E))))
(assert (= (str.++ preF (str.++ stem31 sufF)) (str.++ unch131F (str.++ ch31F unch231F))))
(assert (= (str.++ preG (str.++ stem31 sufG)) (str.++ unch131G (str.++ ch31G unch231G))))
(assert (= (str.++ preH (str.++ stem31 sufH)) (str.++ unch131H (str.++ ch31H unch231H))))
(assert (= "tjXk" (str.++ unch131A (str.++ var31A unch231A))))
(assert (= "t2ka" (str.++ unch131B (str.++ var31B unch231B))))
(assert (= "t2tsji" (str.++ unch131C (str.++ var31C unch231C))))
(assert (= (str.len stem31) l31))
(assert (= (ite (= ch31A var31A) 0 1) sc31A))
(assert (= (ite (= ch31B var31B) 0 1) sc31B))
(assert (= (ite (= ch31C var31C) 0 1) sc31C))
(assert (= (ite (= ch31D var31D) 0 1) sc31D))
(assert (= (ite (= ch31E var31E) 0 1) sc31E))
(assert (= (ite (= ch31F var31F) 0 1) sc31F))
(assert (= (ite (= ch31G var31G) 0 1) sc31G))
(assert (= (ite (= ch31H var31H) 0 1) sc31H))
(assert (<= sc31A 1))
(assert (<= sc31B 1))
(assert (<= sc31C 1))
(assert (<= sc31D 1))
(assert (<= sc31E 1))
(assert (<= sc31F 1))
(assert (<= sc31G 1))
(assert (<= sc31H 1))
(assert (<= (str.len var32A) 1))
(assert (<= (str.len var32B) 1))
(assert (<= (str.len var32C) 1))
(assert (<= (str.len var32D) 1))
(assert (<= (str.len var32E) 1))
(assert (<= (str.len var32F) 1))
(assert (<= (str.len var32G) 1))
(assert (<= (str.len var32H) 1))
(assert (= (str.++ preA (str.++ stem32 sufA)) (str.++ unch132A (str.++ ch32A unch232A))))
(assert (= (str.++ preB (str.++ stem32 sufB)) (str.++ unch132B (str.++ ch32B unch232B))))
(assert (= (str.++ preC (str.++ stem32 sufC)) (str.++ unch132C (str.++ ch32C unch232C))))
(assert (= (str.++ preD (str.++ stem32 sufD)) (str.++ unch132D (str.++ ch32D unch232D))))
(assert (= (str.++ preE (str.++ stem32 sufE)) (str.++ unch132E (str.++ ch32E unch232E))))
(assert (= (str.++ preF (str.++ stem32 sufF)) (str.++ unch132F (str.++ ch32F unch232F))))
(assert (= (str.++ preG (str.++ stem32 sufG)) (str.++ unch132G (str.++ ch32G unch232G))))
(assert (= (str.++ preH (str.++ stem32 sufH)) (str.++ unch132H (str.++ ch32H unch232H))))
(assert (= "kjXl" (str.++ unch132A (str.++ var32A unch232A))))
(assert (= "kolO" (str.++ unch132B (str.++ var32B unch232B))))
(assert (= "koljX" (str.++ unch132C (str.++ var32C unch232C))))
(assert (= (str.len stem32) l32))
(assert (= (ite (= ch32A var32A) 0 1) sc32A))
(assert (= (ite (= ch32B var32B) 0 1) sc32B))
(assert (= (ite (= ch32C var32C) 0 1) sc32C))
(assert (= (ite (= ch32D var32D) 0 1) sc32D))
(assert (= (ite (= ch32E var32E) 0 1) sc32E))
(assert (= (ite (= ch32F var32F) 0 1) sc32F))
(assert (= (ite (= ch32G var32G) 0 1) sc32G))
(assert (= (ite (= ch32H var32H) 0 1) sc32H))
(assert (<= sc32A 1))
(assert (<= sc32B 1))
(assert (<= sc32C 1))
(assert (<= sc32D 1))
(assert (<= sc32E 1))
(assert (<= sc32F 1))
(assert (<= sc32G 1))
(assert (<= sc32H 1))
(assert (<= (str.len var33A) 1))
(assert (<= (str.len var33B) 1))
(assert (<= (str.len var33C) 1))
(assert (<= (str.len var33D) 1))
(assert (<= (str.len var33E) 1))
(assert (<= (str.len var33F) 1))
(assert (<= (str.len var33G) 1))
(assert (<= (str.len var33H) 1))
(assert (= (str.++ preA (str.++ stem33 sufA)) (str.++ unch133A (str.++ ch33A unch233A))))
(assert (= (str.++ preB (str.++ stem33 sufB)) (str.++ unch133B (str.++ ch33B unch233B))))
(assert (= (str.++ preC (str.++ stem33 sufC)) (str.++ unch133C (str.++ ch33C unch233C))))
(assert (= (str.++ preD (str.++ stem33 sufD)) (str.++ unch133D (str.++ ch33D unch233D))))
(assert (= (str.++ preE (str.++ stem33 sufE)) (str.++ unch133E (str.++ ch33E unch233E))))
(assert (= (str.++ preF (str.++ stem33 sufF)) (str.++ unch133F (str.++ ch33F unch233F))))
(assert (= (str.++ preG (str.++ stem33 sufG)) (str.++ unch133G (str.++ ch33G unch233G))))
(assert (= (str.++ preH (str.++ stem33 sufH)) (str.++ unch133H (str.++ ch33H unch233H))))
(assert (= "kovOlj" (str.++ unch133D (str.++ var33D unch233D))))
(assert (= "kovalj3" (str.++ unch133E (str.++ var33E unch233E))))
(assert (= "koval3" (str.++ unch133F (str.++ var33F unch233F))))
(assert (= (str.len stem33) l33))
(assert (= (ite (= ch33A var33A) 0 1) sc33A))
(assert (= (ite (= ch33B var33B) 0 1) sc33B))
(assert (= (ite (= ch33C var33C) 0 1) sc33C))
(assert (= (ite (= ch33D var33D) 0 1) sc33D))
(assert (= (ite (= ch33E var33E) 0 1) sc33E))
(assert (= (ite (= ch33F var33F) 0 1) sc33F))
(assert (= (ite (= ch33G var33G) 0 1) sc33G))
(assert (= (ite (= ch33H var33H) 0 1) sc33H))
(assert (<= sc33A 1))
(assert (<= sc33B 1))
(assert (<= sc33C 1))
(assert (<= sc33D 1))
(assert (<= sc33E 1))
(assert (<= sc33F 1))
(assert (<= sc33G 1))
(assert (<= sc33H 1))
(assert (<= (str.len var34A) 1))
(assert (<= (str.len var34B) 1))
(assert (<= (str.len var34C) 1))
(assert (<= (str.len var34D) 1))
(assert (<= (str.len var34E) 1))
(assert (<= (str.len var34F) 1))
(assert (<= (str.len var34G) 1))
(assert (<= (str.len var34H) 1))
(assert (= (str.++ preA (str.++ stem34 sufA)) (str.++ unch134A (str.++ ch34A unch234A))))
(assert (= (str.++ preB (str.++ stem34 sufB)) (str.++ unch134B (str.++ ch34B unch234B))))
(assert (= (str.++ preC (str.++ stem34 sufC)) (str.++ unch134C (str.++ ch34C unch234C))))
(assert (= (str.++ preD (str.++ stem34 sufD)) (str.++ unch134D (str.++ ch34D unch234D))))
(assert (= (str.++ preE (str.++ stem34 sufE)) (str.++ unch134E (str.++ ch34E unch234E))))
(assert (= (str.++ preF (str.++ stem34 sufF)) (str.++ unch134F (str.++ ch34F unch234F))))
(assert (= (str.++ preG (str.++ stem34 sufG)) (str.++ unch134G (str.++ ch34G unch234G))))
(assert (= (str.++ preH (str.++ stem34 sufH)) (str.++ unch134H (str.++ ch34H unch234H))))
(assert (= "DmjXlj" (str.++ unch134D (str.++ var34D unch234D))))
(assert (= "Dmjilj3" (str.++ unch134E (str.++ var34E unch234E))))
(assert (= "Dmjil3" (str.++ unch134F (str.++ var34F unch234F))))
(assert (= (str.len stem34) l34))
(assert (= (ite (= ch34A var34A) 0 1) sc34A))
(assert (= (ite (= ch34B var34B) 0 1) sc34B))
(assert (= (ite (= ch34C var34C) 0 1) sc34C))
(assert (= (ite (= ch34D var34D) 0 1) sc34D))
(assert (= (ite (= ch34E var34E) 0 1) sc34E))
(assert (= (ite (= ch34F var34F) 0 1) sc34F))
(assert (= (ite (= ch34G var34G) 0 1) sc34G))
(assert (= (ite (= ch34H var34H) 0 1) sc34H))
(assert (<= sc34A 1))
(assert (<= sc34B 1))
(assert (<= sc34C 1))
(assert (<= sc34D 1))
(assert (<= sc34E 1))
(assert (<= sc34F 1))
(assert (<= sc34G 1))
(assert (<= sc34H 1))
(assert (<= (str.len var35A) 1))
(assert (<= (str.len var35B) 1))
(assert (<= (str.len var35C) 1))
(assert (<= (str.len var35D) 1))
(assert (<= (str.len var35E) 1))
(assert (<= (str.len var35F) 1))
(assert (<= (str.len var35G) 1))
(assert (<= (str.len var35H) 1))
(assert (= (str.++ preA (str.++ stem35 sufA)) (str.++ unch135A (str.++ ch35A unch235A))))
(assert (= (str.++ preB (str.++ stem35 sufB)) (str.++ unch135B (str.++ ch35B unch235B))))
(assert (= (str.++ preC (str.++ stem35 sufC)) (str.++ unch135C (str.++ ch35C unch235C))))
(assert (= (str.++ preD (str.++ stem35 sufD)) (str.++ unch135D (str.++ ch35D unch235D))))
(assert (= (str.++ preE (str.++ stem35 sufE)) (str.++ unch135E (str.++ ch35E unch235E))))
(assert (= (str.++ preF (str.++ stem35 sufF)) (str.++ unch135F (str.++ ch35F unch235F))))
(assert (= (str.++ preG (str.++ stem35 sufG)) (str.++ unch135G (str.++ ch35G unch235G))))
(assert (= (str.++ preH (str.++ stem35 sufH)) (str.++ unch135H (str.++ ch35H unch235H))))
(assert (= "kjrjXlj" (str.++ unch135D (str.++ var35D unch235D))))
(assert (= "kjrjilj3" (str.++ unch135E (str.++ var35E unch235E))))
(assert (= "kjrjil3" (str.++ unch135F (str.++ var35F unch235F))))
(assert (= (str.len stem35) l35))
(assert (= (ite (= ch35A var35A) 0 1) sc35A))
(assert (= (ite (= ch35B var35B) 0 1) sc35B))
(assert (= (ite (= ch35C var35C) 0 1) sc35C))
(assert (= (ite (= ch35D var35D) 0 1) sc35D))
(assert (= (ite (= ch35E var35E) 0 1) sc35E))
(assert (= (ite (= ch35F var35F) 0 1) sc35F))
(assert (= (ite (= ch35G var35G) 0 1) sc35G))
(assert (= (ite (= ch35H var35H) 0 1) sc35H))
(assert (<= sc35A 1))
(assert (<= sc35B 1))
(assert (<= sc35C 1))
(assert (<= sc35D 1))
(assert (<= sc35E 1))
(assert (<= sc35F 1))
(assert (<= sc35G 1))
(assert (<= sc35H 1))
(assert (<= (str.len var36A) 1))
(assert (<= (str.len var36B) 1))
(assert (<= (str.len var36C) 1))
(assert (<= (str.len var36D) 1))
(assert (<= (str.len var36E) 1))
(assert (<= (str.len var36F) 1))
(assert (<= (str.len var36G) 1))
(assert (<= (str.len var36H) 1))
(assert (= (str.++ preA (str.++ stem36 sufA)) (str.++ unch136A (str.++ ch36A unch236A))))
(assert (= (str.++ preB (str.++ stem36 sufB)) (str.++ unch136B (str.++ ch36B unch236B))))
(assert (= (str.++ preC (str.++ stem36 sufC)) (str.++ unch136C (str.++ ch36C unch236C))))
(assert (= (str.++ preD (str.++ stem36 sufD)) (str.++ unch136D (str.++ ch36D unch236D))))
(assert (= (str.++ preE (str.++ stem36 sufE)) (str.++ unch136E (str.++ ch36E unch236E))))
(assert (= (str.++ preF (str.++ stem36 sufF)) (str.++ unch136F (str.++ ch36F unch236F))))
(assert (= (str.++ preG (str.++ stem36 sufG)) (str.++ unch136G (str.++ ch36G unch236G))))
(assert (= (str.++ preH (str.++ stem36 sufH)) (str.++ unch136H (str.++ ch36H unch236H))))
(assert (= "uE3tHlj" (str.++ unch136D (str.++ var36D unch236D))))
(assert (= "uE3tHljH" (str.++ unch136E (str.++ var36E unch236E))))
(assert (= "uE3tHlH" (str.++ unch136F (str.++ var36F unch236F))))
(assert (= (str.len stem36) l36))
(assert (= (ite (= ch36A var36A) 0 1) sc36A))
(assert (= (ite (= ch36B var36B) 0 1) sc36B))
(assert (= (ite (= ch36C var36C) 0 1) sc36C))
(assert (= (ite (= ch36D var36D) 0 1) sc36D))
(assert (= (ite (= ch36E var36E) 0 1) sc36E))
(assert (= (ite (= ch36F var36F) 0 1) sc36F))
(assert (= (ite (= ch36G var36G) 0 1) sc36G))
(assert (= (ite (= ch36H var36H) 0 1) sc36H))
(assert (<= sc36A 1))
(assert (<= sc36B 1))
(assert (<= sc36C 1))
(assert (<= sc36D 1))
(assert (<= sc36E 1))
(assert (<= sc36F 1))
(assert (<= sc36G 1))
(assert (<= sc36H 1))
(assert (<= (str.len var37A) 1))
(assert (<= (str.len var37B) 1))
(assert (<= (str.len var37C) 1))
(assert (<= (str.len var37D) 1))
(assert (<= (str.len var37E) 1))
(assert (<= (str.len var37F) 1))
(assert (<= (str.len var37G) 1))
(assert (<= (str.len var37H) 1))
(assert (= (str.++ preA (str.++ stem37 sufA)) (str.++ unch137A (str.++ ch37A unch237A))))
(assert (= (str.++ preB (str.++ stem37 sufB)) (str.++ unch137B (str.++ ch37B unch237B))))
(assert (= (str.++ preC (str.++ stem37 sufC)) (str.++ unch137C (str.++ ch37C unch237C))))
(assert (= (str.++ preD (str.++ stem37 sufD)) (str.++ unch137D (str.++ ch37D unch237D))))
(assert (= (str.++ preE (str.++ stem37 sufE)) (str.++ unch137E (str.++ ch37E unch237E))))
(assert (= (str.++ preF (str.++ stem37 sufF)) (str.++ unch137F (str.++ ch37F unch237F))))
(assert (= (str.++ preG (str.++ stem37 sufG)) (str.++ unch137G (str.++ ch37G unch237G))))
(assert (= (str.++ preH (str.++ stem37 sufH)) (str.++ unch137H (str.++ ch37H unch237H))))
(assert (= "gr4bjinj" (str.++ unch137D (str.++ var37D unch237D))))
(assert (= "gr4bHnjH" (str.++ unch137E (str.++ var37E unch237E))))
(assert (= "gr4bHnH" (str.++ unch137F (str.++ var37F unch237F))))
(assert (= (str.len stem37) l37))
(assert (= (ite (= ch37A var37A) 0 1) sc37A))
(assert (= (ite (= ch37B var37B) 0 1) sc37B))
(assert (= (ite (= ch37C var37C) 0 1) sc37C))
(assert (= (ite (= ch37D var37D) 0 1) sc37D))
(assert (= (ite (= ch37E var37E) 0 1) sc37E))
(assert (= (ite (= ch37F var37F) 0 1) sc37F))
(assert (= (ite (= ch37G var37G) 0 1) sc37G))
(assert (= (ite (= ch37H var37H) 0 1) sc37H))
(assert (<= sc37A 1))
(assert (<= sc37B 1))
(assert (<= sc37C 1))
(assert (<= sc37D 1))
(assert (<= sc37E 1))
(assert (<= sc37F 1))
(assert (<= sc37G 1))
(assert (<= sc37H 1))
(assert (<= (str.len var38A) 1))
(assert (<= (str.len var38B) 1))
(assert (<= (str.len var38C) 1))
(assert (<= (str.len var38D) 1))
(assert (<= (str.len var38E) 1))
(assert (<= (str.len var38F) 1))
(assert (<= (str.len var38G) 1))
(assert (<= (str.len var38H) 1))
(assert (= (str.++ preA (str.++ stem38 sufA)) (str.++ unch138A (str.++ ch38A unch238A))))
(assert (= (str.++ preB (str.++ stem38 sufB)) (str.++ unch138B (str.++ ch38B unch238B))))
(assert (= (str.++ preC (str.++ stem38 sufC)) (str.++ unch138C (str.++ ch38C unch238C))))
(assert (= (str.++ preD (str.++ stem38 sufD)) (str.++ unch138D (str.++ ch38D unch238D))))
(assert (= (str.++ preE (str.++ stem38 sufE)) (str.++ unch138E (str.++ ch38E unch238E))))
(assert (= (str.++ preF (str.++ stem38 sufF)) (str.++ unch138F (str.++ ch38F unch238F))))
(assert (= (str.++ preG (str.++ stem38 sufG)) (str.++ unch138G (str.++ ch38G unch238G))))
(assert (= (str.++ preH (str.++ stem38 sufH)) (str.++ unch138H (str.++ ch38H unch238H))))
(assert (= "2lHnj" (str.++ unch138D (str.++ var38D unch238D))))
(assert (= "2lHnjH" (str.++ unch138E (str.++ var38E unch238E))))
(assert (= "2lHnH" (str.++ unch138F (str.++ var38F unch238F))))
(assert (= (str.len stem38) l38))
(assert (= (ite (= ch38A var38A) 0 1) sc38A))
(assert (= (ite (= ch38B var38B) 0 1) sc38B))
(assert (= (ite (= ch38C var38C) 0 1) sc38C))
(assert (= (ite (= ch38D var38D) 0 1) sc38D))
(assert (= (ite (= ch38E var38E) 0 1) sc38E))
(assert (= (ite (= ch38F var38F) 0 1) sc38F))
(assert (= (ite (= ch38G var38G) 0 1) sc38G))
(assert (= (ite (= ch38H var38H) 0 1) sc38H))
(assert (<= sc38A 1))
(assert (<= sc38B 1))
(assert (<= sc38C 1))
(assert (<= sc38D 1))
(assert (<= sc38E 1))
(assert (<= sc38F 1))
(assert (<= sc38G 1))
(assert (<= sc38H 1))
(assert (<= (str.len var39A) 1))
(assert (<= (str.len var39B) 1))
(assert (<= (str.len var39C) 1))
(assert (<= (str.len var39D) 1))
(assert (<= (str.len var39E) 1))
(assert (<= (str.len var39F) 1))
(assert (<= (str.len var39G) 1))
(assert (<= (str.len var39H) 1))
(assert (= (str.++ preA (str.++ stem39 sufA)) (str.++ unch139A (str.++ ch39A unch239A))))
(assert (= (str.++ preB (str.++ stem39 sufB)) (str.++ unch139B (str.++ ch39B unch239B))))
(assert (= (str.++ preC (str.++ stem39 sufC)) (str.++ unch139C (str.++ ch39C unch239C))))
(assert (= (str.++ preD (str.++ stem39 sufD)) (str.++ unch139D (str.++ ch39D unch239D))))
(assert (= (str.++ preE (str.++ stem39 sufE)) (str.++ unch139E (str.++ ch39E unch239E))))
(assert (= (str.++ preF (str.++ stem39 sufF)) (str.++ unch139F (str.++ ch39F unch239F))))
(assert (= (str.++ preG (str.++ stem39 sufG)) (str.++ unch139G (str.++ ch39G unch239G))))
(assert (= (str.++ preH (str.++ stem39 sufH)) (str.++ unch139H (str.++ ch39H unch239H))))
(assert (= "jaEjmjXnj" (str.++ unch139D (str.++ var39D unch239D))))
(assert (= "jaEm4njH" (str.++ unch139E (str.++ var39E unch239E))))
(assert (= "jaEm4nH" (str.++ unch139F (str.++ var39F unch239F))))
(assert (= (str.len stem39) l39))
(assert (= (ite (= ch39A var39A) 0 1) sc39A))
(assert (= (ite (= ch39B var39B) 0 1) sc39B))
(assert (= (ite (= ch39C var39C) 0 1) sc39C))
(assert (= (ite (= ch39D var39D) 0 1) sc39D))
(assert (= (ite (= ch39E var39E) 0 1) sc39E))
(assert (= (ite (= ch39F var39F) 0 1) sc39F))
(assert (= (ite (= ch39G var39G) 0 1) sc39G))
(assert (= (ite (= ch39H var39H) 0 1) sc39H))
(assert (<= sc39A 1))
(assert (<= sc39B 1))
(assert (<= sc39C 1))
(assert (<= sc39D 1))
(assert (<= sc39E 1))
(assert (<= sc39F 1))
(assert (<= sc39G 1))
(assert (<= sc39H 1))
(assert (<= (str.len var40A) 1))
(assert (<= (str.len var40B) 1))
(assert (<= (str.len var40C) 1))
(assert (<= (str.len var40D) 1))
(assert (<= (str.len var40E) 1))
(assert (<= (str.len var40F) 1))
(assert (<= (str.len var40G) 1))
(assert (<= (str.len var40H) 1))
(assert (= (str.++ preA (str.++ stem40 sufA)) (str.++ unch140A (str.++ ch40A unch240A))))
(assert (= (str.++ preB (str.++ stem40 sufB)) (str.++ unch140B (str.++ ch40B unch240B))))
(assert (= (str.++ preC (str.++ stem40 sufC)) (str.++ unch140C (str.++ ch40C unch240C))))
(assert (= (str.++ preD (str.++ stem40 sufD)) (str.++ unch140D (str.++ ch40D unch240D))))
(assert (= (str.++ preE (str.++ stem40 sufE)) (str.++ unch140E (str.++ ch40E unch240E))))
(assert (= (str.++ preF (str.++ stem40 sufF)) (str.++ unch140F (str.++ ch40F unch240F))))
(assert (= (str.++ preG (str.++ stem40 sufG)) (str.++ unch140G (str.++ ch40G unch240G))))
(assert (= (str.++ preH (str.++ stem40 sufH)) (str.++ unch140H (str.++ ch40H unch240H))))
(assert (= "jOsjinj" (str.++ unch140D (str.++ var40D unch240D))))
(assert (= "jOsHnjH" (str.++ unch140E (str.++ var40E unch240E))))
(assert (= "jOsHnH" (str.++ unch140F (str.++ var40F unch240F))))
(assert (= (str.len stem40) l40))
(assert (= (ite (= ch40A var40A) 0 1) sc40A))
(assert (= (ite (= ch40B var40B) 0 1) sc40B))
(assert (= (ite (= ch40C var40C) 0 1) sc40C))
(assert (= (ite (= ch40D var40D) 0 1) sc40D))
(assert (= (ite (= ch40E var40E) 0 1) sc40E))
(assert (= (ite (= ch40F var40F) 0 1) sc40F))
(assert (= (ite (= ch40G var40G) 0 1) sc40G))
(assert (= (ite (= ch40H var40H) 0 1) sc40H))
(assert (<= sc40A 1))
(assert (<= sc40B 1))
(assert (<= sc40C 1))
(assert (<= sc40D 1))
(assert (<= sc40E 1))
(assert (<= sc40F 1))
(assert (<= sc40G 1))
(assert (<= sc40H 1))
(assert (<= (str.len var41A) 1))
(assert (<= (str.len var41B) 1))
(assert (<= (str.len var41C) 1))
(assert (<= (str.len var41D) 1))
(assert (<= (str.len var41E) 1))
(assert (<= (str.len var41F) 1))
(assert (<= (str.len var41G) 1))
(assert (<= (str.len var41H) 1))
(assert (= (str.++ preA (str.++ stem41 sufA)) (str.++ unch141A (str.++ ch41A unch241A))))
(assert (= (str.++ preB (str.++ stem41 sufB)) (str.++ unch141B (str.++ ch41B unch241B))))
(assert (= (str.++ preC (str.++ stem41 sufC)) (str.++ unch141C (str.++ ch41C unch241C))))
(assert (= (str.++ preD (str.++ stem41 sufD)) (str.++ unch141D (str.++ ch41D unch241D))))
(assert (= (str.++ preE (str.++ stem41 sufE)) (str.++ unch141E (str.++ ch41E unch241E))))
(assert (= (str.++ preF (str.++ stem41 sufF)) (str.++ unch141F (str.++ ch41F unch241F))))
(assert (= (str.++ preG (str.++ stem41 sufG)) (str.++ unch141G (str.++ ch41G unch241G))))
(assert (= (str.++ preH (str.++ stem41 sufH)) (str.++ unch141H (str.++ ch41H unch241H))))
(assert (= "zj3kj" (str.++ unch141D (str.++ var41D unch241D))))
(assert (= "zj3kjH" (str.++ unch141E (str.++ var41E unch241E))))
(assert (= "zj3tH" (str.++ unch141F (str.++ var41F unch241F))))
(assert (= (str.len stem41) l41))
(assert (= (ite (= ch41A var41A) 0 1) sc41A))
(assert (= (ite (= ch41B var41B) 0 1) sc41B))
(assert (= (ite (= ch41C var41C) 0 1) sc41C))
(assert (= (ite (= ch41D var41D) 0 1) sc41D))
(assert (= (ite (= ch41E var41E) 0 1) sc41E))
(assert (= (ite (= ch41F var41F) 0 1) sc41F))
(assert (= (ite (= ch41G var41G) 0 1) sc41G))
(assert (= (ite (= ch41H var41H) 0 1) sc41H))
(assert (<= sc41A 1))
(assert (<= sc41B 1))
(assert (<= sc41C 1))
(assert (<= sc41D 1))
(assert (<= sc41E 1))
(assert (<= sc41F 1))
(assert (<= sc41G 1))
(assert (<= sc41H 1))
(assert (<= (str.len var42A) 1))
(assert (<= (str.len var42B) 1))
(assert (<= (str.len var42C) 1))
(assert (<= (str.len var42D) 1))
(assert (<= (str.len var42E) 1))
(assert (<= (str.len var42F) 1))
(assert (<= (str.len var42G) 1))
(assert (<= (str.len var42H) 1))
(assert (= (str.++ preA (str.++ stem42 sufA)) (str.++ unch142A (str.++ ch42A unch242A))))
(assert (= (str.++ preB (str.++ stem42 sufB)) (str.++ unch142B (str.++ ch42B unch242B))))
(assert (= (str.++ preC (str.++ stem42 sufC)) (str.++ unch142C (str.++ ch42C unch242C))))
(assert (= (str.++ preD (str.++ stem42 sufD)) (str.++ unch142D (str.++ ch42D unch242D))))
(assert (= (str.++ preE (str.++ stem42 sufE)) (str.++ unch142E (str.++ ch42E unch242E))))
(assert (= (str.++ preF (str.++ stem42 sufF)) (str.++ unch142F (str.++ ch42F unch242F))))
(assert (= (str.++ preG (str.++ stem42 sufG)) (str.++ unch142G (str.++ ch42G unch242G))))
(assert (= (str.++ preH (str.++ stem42 sufH)) (str.++ unch142H (str.++ ch42H unch242H))))
(assert (= "mOsjkj" (str.++ unch142G (str.++ var42G unch242G))))
(assert (= "mOstH" (str.++ unch142H (str.++ var42H unch242H))))
(assert (= (str.len stem42) l42))
(assert (= (ite (= ch42A var42A) 0 1) sc42A))
(assert (= (ite (= ch42B var42B) 0 1) sc42B))
(assert (= (ite (= ch42C var42C) 0 1) sc42C))
(assert (= (ite (= ch42D var42D) 0 1) sc42D))
(assert (= (ite (= ch42E var42E) 0 1) sc42E))
(assert (= (ite (= ch42F var42F) 0 1) sc42F))
(assert (= (ite (= ch42G var42G) 0 1) sc42G))
(assert (= (ite (= ch42H var42H) 0 1) sc42H))
(assert (<= sc42A 1))
(assert (<= sc42B 1))
(assert (<= sc42C 1))
(assert (<= sc42D 1))
(assert (<= sc42E 1))
(assert (<= sc42F 1))
(assert (<= sc42G 1))
(assert (<= sc42H 1))
(assert (<= (str.len var43A) 1))
(assert (<= (str.len var43B) 1))
(assert (<= (str.len var43C) 1))
(assert (<= (str.len var43D) 1))
(assert (<= (str.len var43E) 1))
(assert (<= (str.len var43F) 1))
(assert (<= (str.len var43G) 1))
(assert (<= (str.len var43H) 1))
(assert (= (str.++ preA (str.++ stem43 sufA)) (str.++ unch143A (str.++ ch43A unch243A))))
(assert (= (str.++ preB (str.++ stem43 sufB)) (str.++ unch143B (str.++ ch43B unch243B))))
(assert (= (str.++ preC (str.++ stem43 sufC)) (str.++ unch143C (str.++ ch43C unch243C))))
(assert (= (str.++ preD (str.++ stem43 sufD)) (str.++ unch143D (str.++ ch43D unch243D))))
(assert (= (str.++ preE (str.++ stem43 sufE)) (str.++ unch143E (str.++ ch43E unch243E))))
(assert (= (str.++ preF (str.++ stem43 sufF)) (str.++ unch143F (str.++ ch43F unch243F))))
(assert (= (str.++ preG (str.++ stem43 sufG)) (str.++ unch143G (str.++ ch43G unch243G))))
(assert (= (str.++ preH (str.++ stem43 sufH)) (str.++ unch143H (str.++ ch43H unch243H))))
(assert (= "sjmjXrjkj" (str.++ unch143G (str.++ var43G unch243G))))
(assert (= "sm4rtH" (str.++ unch143H (str.++ var43H unch243H))))
(assert (= (str.len stem43) l43))
(assert (= (ite (= ch43A var43A) 0 1) sc43A))
(assert (= (ite (= ch43B var43B) 0 1) sc43B))
(assert (= (ite (= ch43C var43C) 0 1) sc43C))
(assert (= (ite (= ch43D var43D) 0 1) sc43D))
(assert (= (ite (= ch43E var43E) 0 1) sc43E))
(assert (= (ite (= ch43F var43F) 0 1) sc43F))
(assert (= (ite (= ch43G var43G) 0 1) sc43G))
(assert (= (ite (= ch43H var43H) 0 1) sc43H))
(assert (<= sc43A 1))
(assert (<= sc43B 1))
(assert (<= sc43C 1))
(assert (<= sc43D 1))
(assert (<= sc43E 1))
(assert (<= sc43F 1))
(assert (<= sc43G 1))
(assert (<= sc43H 1))
(assert (<= (str.len var44A) 1))
(assert (<= (str.len var44B) 1))
(assert (<= (str.len var44C) 1))
(assert (<= (str.len var44D) 1))
(assert (<= (str.len var44E) 1))
(assert (<= (str.len var44F) 1))
(assert (<= (str.len var44G) 1))
(assert (<= (str.len var44H) 1))
(assert (= (str.++ preA (str.++ stem44 sufA)) (str.++ unch144A (str.++ ch44A unch244A))))
(assert (= (str.++ preB (str.++ stem44 sufB)) (str.++ unch144B (str.++ ch44B unch244B))))
(assert (= (str.++ preC (str.++ stem44 sufC)) (str.++ unch144C (str.++ ch44C unch244C))))
(assert (= (str.++ preD (str.++ stem44 sufD)) (str.++ unch144D (str.++ ch44D unch244D))))
(assert (= (str.++ preE (str.++ stem44 sufE)) (str.++ unch144E (str.++ ch44E unch244E))))
(assert (= (str.++ preF (str.++ stem44 sufF)) (str.++ unch144F (str.++ ch44F unch244F))))
(assert (= (str.++ preG (str.++ stem44 sufG)) (str.++ unch144G (str.++ ch44G unch244G))))
(assert (= (str.++ preH (str.++ stem44 sufH)) (str.++ unch144H (str.++ ch44H unch244H))))
(assert (= "vjXsjkj" (str.++ unch144G (str.++ var44G unch244G))))
(assert (= "vjXstH" (str.++ unch144H (str.++ var44H unch244H))))
(assert (= (str.len stem44) l44))
(assert (= (ite (= ch44A var44A) 0 1) sc44A))
(assert (= (ite (= ch44B var44B) 0 1) sc44B))
(assert (= (ite (= ch44C var44C) 0 1) sc44C))
(assert (= (ite (= ch44D var44D) 0 1) sc44D))
(assert (= (ite (= ch44E var44E) 0 1) sc44E))
(assert (= (ite (= ch44F var44F) 0 1) sc44F))
(assert (= (ite (= ch44G var44G) 0 1) sc44G))
(assert (= (ite (= ch44H var44H) 0 1) sc44H))
(assert (<= sc44A 1))
(assert (<= sc44B 1))
(assert (<= sc44C 1))
(assert (<= sc44D 1))
(assert (<= sc44E 1))
(assert (<= sc44F 1))
(assert (<= sc44G 1))
(assert (<= sc44H 1))
(assert (<= (str.len var45A) 1))
(assert (<= (str.len var45B) 1))
(assert (<= (str.len var45C) 1))
(assert (<= (str.len var45D) 1))
(assert (<= (str.len var45E) 1))
(assert (<= (str.len var45F) 1))
(assert (<= (str.len var45G) 1))
(assert (<= (str.len var45H) 1))
(assert (= (str.++ preA (str.++ stem45 sufA)) (str.++ unch145A (str.++ ch45A unch245A))))
(assert (= (str.++ preB (str.++ stem45 sufB)) (str.++ unch145B (str.++ ch45B unch245B))))
(assert (= (str.++ preC (str.++ stem45 sufC)) (str.++ unch145C (str.++ ch45C unch245C))))
(assert (= (str.++ preD (str.++ stem45 sufD)) (str.++ unch145D (str.++ ch45D unch245D))))
(assert (= (str.++ preE (str.++ stem45 sufE)) (str.++ unch145E (str.++ ch45E unch245E))))
(assert (= (str.++ preF (str.++ stem45 sufF)) (str.++ unch145F (str.++ ch45F unch245F))))
(assert (= (str.++ preG (str.++ stem45 sufG)) (str.++ unch145G (str.++ ch45G unch245G))))
(assert (= (str.++ preH (str.++ stem45 sufH)) (str.++ unch145H (str.++ ch45H unch245H))))
(assert (= "rOgjisjkj" (str.++ unch145G (str.++ var45G unch245G))))
(assert (= "rOdostH" (str.++ unch145H (str.++ var45H unch245H))))
(assert (= (str.len stem45) l45))
(assert (= (ite (= ch45A var45A) 0 1) sc45A))
(assert (= (ite (= ch45B var45B) 0 1) sc45B))
(assert (= (ite (= ch45C var45C) 0 1) sc45C))
(assert (= (ite (= ch45D var45D) 0 1) sc45D))
(assert (= (ite (= ch45E var45E) 0 1) sc45E))
(assert (= (ite (= ch45F var45F) 0 1) sc45F))
(assert (= (ite (= ch45G var45G) 0 1) sc45G))
(assert (= (ite (= ch45H var45H) 0 1) sc45H))
(assert (<= sc45A 1))
(assert (<= sc45B 1))
(assert (<= sc45C 1))
(assert (<= sc45D 1))
(assert (<= sc45E 1))
(assert (<= sc45F 1))
(assert (<= sc45G 1))
(assert (<= sc45H 1))
(assert (<= (str.len var46A) 1))
(assert (<= (str.len var46B) 1))
(assert (<= (str.len var46C) 1))
(assert (<= (str.len var46D) 1))
(assert (<= (str.len var46E) 1))
(assert (<= (str.len var46F) 1))
(assert (<= (str.len var46G) 1))
(assert (<= (str.len var46H) 1))
(assert (= (str.++ preA (str.++ stem46 sufA)) (str.++ unch146A (str.++ ch46A unch246A))))
(assert (= (str.++ preB (str.++ stem46 sufB)) (str.++ unch146B (str.++ ch46B unch246B))))
(assert (= (str.++ preC (str.++ stem46 sufC)) (str.++ unch146C (str.++ ch46C unch246C))))
(assert (= (str.++ preD (str.++ stem46 sufD)) (str.++ unch146D (str.++ ch46D unch246D))))
(assert (= (str.++ preE (str.++ stem46 sufE)) (str.++ unch146E (str.++ ch46E unch246E))))
(assert (= (str.++ preF (str.++ stem46 sufF)) (str.++ unch146F (str.++ ch46F unch246F))))
(assert (= (str.++ preG (str.++ stem46 sufG)) (str.++ unch146G (str.++ ch46G unch246G))))
(assert (= (str.++ preH (str.++ stem46 sufH)) (str.++ unch146H (str.++ ch46H unch246H))))
(assert (= "sjXlj" (str.++ unch146G (str.++ var46G unch246G))))
(assert (= "s2lH" (str.++ unch146H (str.++ var46H unch246H))))
(assert (= (str.len stem46) l46))
(assert (= (ite (= ch46A var46A) 0 1) sc46A))
(assert (= (ite (= ch46B var46B) 0 1) sc46B))
(assert (= (ite (= ch46C var46C) 0 1) sc46C))
(assert (= (ite (= ch46D var46D) 0 1) sc46D))
(assert (= (ite (= ch46E var46E) 0 1) sc46E))
(assert (= (ite (= ch46F var46F) 0 1) sc46F))
(assert (= (ite (= ch46G var46G) 0 1) sc46G))
(assert (= (ite (= ch46H var46H) 0 1) sc46H))
(assert (<= sc46A 1))
(assert (<= sc46B 1))
(assert (<= sc46C 1))
(assert (<= sc46D 1))
(assert (<= sc46E 1))
(assert (<= sc46F 1))
(assert (<= sc46G 1))
(assert (<= sc46H 1))
(assert (<= (str.len var47A) 1))
(assert (<= (str.len var47B) 1))
(assert (<= (str.len var47C) 1))
(assert (<= (str.len var47D) 1))
(assert (<= (str.len var47E) 1))
(assert (<= (str.len var47F) 1))
(assert (<= (str.len var47G) 1))
(assert (<= (str.len var47H) 1))
(assert (= (str.++ preA (str.++ stem47 sufA)) (str.++ unch147A (str.++ ch47A unch247A))))
(assert (= (str.++ preB (str.++ stem47 sufB)) (str.++ unch147B (str.++ ch47B unch247B))))
(assert (= (str.++ preC (str.++ stem47 sufC)) (str.++ unch147C (str.++ ch47C unch247C))))
(assert (= (str.++ preD (str.++ stem47 sufD)) (str.++ unch147D (str.++ ch47D unch247D))))
(assert (= (str.++ preE (str.++ stem47 sufE)) (str.++ unch147E (str.++ ch47E unch247E))))
(assert (= (str.++ preF (str.++ stem47 sufF)) (str.++ unch147F (str.++ ch47F unch247F))))
(assert (= (str.++ preG (str.++ stem47 sufG)) (str.++ unch147G (str.++ ch47G unch247G))))
(assert (= (str.++ preH (str.++ stem47 sufH)) (str.++ unch147H (str.++ ch47H unch247H))))
(assert (= "p2Bjisjkj" (str.++ unch147G (str.++ var47G unch247G))))
(assert (= "p2BHstH" (str.++ unch147H (str.++ var47H unch247H))))
(assert (= (str.len stem47) l47))
(assert (= (ite (= ch47A var47A) 0 1) sc47A))
(assert (= (ite (= ch47B var47B) 0 1) sc47B))
(assert (= (ite (= ch47C var47C) 0 1) sc47C))
(assert (= (ite (= ch47D var47D) 0 1) sc47D))
(assert (= (ite (= ch47E var47E) 0 1) sc47E))
(assert (= (ite (= ch47F var47F) 0 1) sc47F))
(assert (= (ite (= ch47G var47G) 0 1) sc47G))
(assert (= (ite (= ch47H var47H) 0 1) sc47H))
(assert (<= sc47A 1))
(assert (<= sc47B 1))
(assert (<= sc47C 1))
(assert (<= sc47D 1))
(assert (<= sc47E 1))
(assert (<= sc47F 1))
(assert (<= sc47G 1))
(assert (<= sc47H 1))
(assert (<= (str.len var48A) 1))
(assert (<= (str.len var48B) 1))
(assert (<= (str.len var48C) 1))
(assert (<= (str.len var48D) 1))
(assert (<= (str.len var48E) 1))
(assert (<= (str.len var48F) 1))
(assert (<= (str.len var48G) 1))
(assert (<= (str.len var48H) 1))
(assert (= (str.++ preA (str.++ stem48 sufA)) (str.++ unch148A (str.++ ch48A unch248A))))
(assert (= (str.++ preB (str.++ stem48 sufB)) (str.++ unch148B (str.++ ch48B unch248B))))
(assert (= (str.++ preC (str.++ stem48 sufC)) (str.++ unch148C (str.++ ch48C unch248C))))
(assert (= (str.++ preD (str.++ stem48 sufD)) (str.++ unch148D (str.++ ch48D unch248D))))
(assert (= (str.++ preE (str.++ stem48 sufE)) (str.++ unch148E (str.++ ch48E unch248E))))
(assert (= (str.++ preF (str.++ stem48 sufF)) (str.++ unch148F (str.++ ch48F unch248F))))
(assert (= (str.++ preG (str.++ stem48 sufG)) (str.++ unch148G (str.++ ch48G unch248G))))
(assert (= (str.++ preH (str.++ stem48 sufH)) (str.++ unch148H (str.++ ch48H unch248H))))
(assert (= "zOmjikj" (str.++ unch148G (str.++ var48G unch248G))))
(assert (= "zOmHtH" (str.++ unch148H (str.++ var48H unch248H))))
(assert (= (str.len stem48) l48))
(assert (= (ite (= ch48A var48A) 0 1) sc48A))
(assert (= (ite (= ch48B var48B) 0 1) sc48B))
(assert (= (ite (= ch48C var48C) 0 1) sc48C))
(assert (= (ite (= ch48D var48D) 0 1) sc48D))
(assert (= (ite (= ch48E var48E) 0 1) sc48E))
(assert (= (ite (= ch48F var48F) 0 1) sc48F))
(assert (= (ite (= ch48G var48G) 0 1) sc48G))
(assert (= (ite (= ch48H var48H) 0 1) sc48H))
(assert (<= sc48A 1))
(assert (<= sc48B 1))
(assert (<= sc48C 1))
(assert (<= sc48D 1))
(assert (<= sc48E 1))
(assert (<= sc48F 1))
(assert (<= sc48G 1))
(assert (<= sc48H 1))
(assert (<= (str.len var49A) 1))
(assert (<= (str.len var49B) 1))
(assert (<= (str.len var49C) 1))
(assert (<= (str.len var49D) 1))
(assert (<= (str.len var49E) 1))
(assert (<= (str.len var49F) 1))
(assert (<= (str.len var49G) 1))
(assert (<= (str.len var49H) 1))
(assert (= (str.++ preA (str.++ stem49 sufA)) (str.++ unch149A (str.++ ch49A unch249A))))
(assert (= (str.++ preB (str.++ stem49 sufB)) (str.++ unch149B (str.++ ch49B unch249B))))
(assert (= (str.++ preC (str.++ stem49 sufC)) (str.++ unch149C (str.++ ch49C unch249C))))
(assert (= (str.++ preD (str.++ stem49 sufD)) (str.++ unch149D (str.++ ch49D unch249D))))
(assert (= (str.++ preE (str.++ stem49 sufE)) (str.++ unch149E (str.++ ch49E unch249E))))
(assert (= (str.++ preF (str.++ stem49 sufF)) (str.++ unch149F (str.++ ch49F unch249F))))
(assert (= (str.++ preG (str.++ stem49 sufG)) (str.++ unch149G (str.++ ch49G unch249G))))
(assert (= (str.++ preH (str.++ stem49 sufH)) (str.++ unch149H (str.++ ch49H unch249H))))
(assert (= "skOtHrjkj" (str.++ unch149G (str.++ var49G unch249G))))
(assert (= "skOtHrtH" (str.++ unch149H (str.++ var49H unch249H))))
(assert (= (str.len stem49) l49))
(assert (= (ite (= ch49A var49A) 0 1) sc49A))
(assert (= (ite (= ch49B var49B) 0 1) sc49B))
(assert (= (ite (= ch49C var49C) 0 1) sc49C))
(assert (= (ite (= ch49D var49D) 0 1) sc49D))
(assert (= (ite (= ch49E var49E) 0 1) sc49E))
(assert (= (ite (= ch49F var49F) 0 1) sc49F))
(assert (= (ite (= ch49G var49G) 0 1) sc49G))
(assert (= (ite (= ch49H var49H) 0 1) sc49H))
(assert (<= sc49A 1))
(assert (<= sc49B 1))
(assert (<= sc49C 1))
(assert (<= sc49D 1))
(assert (<= sc49E 1))
(assert (<= sc49F 1))
(assert (<= sc49G 1))
(assert (<= sc49H 1))
(assert (<= (str.len var50A) 1))
(assert (<= (str.len var50B) 1))
(assert (<= (str.len var50C) 1))
(assert (<= (str.len var50D) 1))
(assert (<= (str.len var50E) 1))
(assert (<= (str.len var50F) 1))
(assert (<= (str.len var50G) 1))
(assert (<= (str.len var50H) 1))
(assert (= (str.++ preA (str.++ stem50 sufA)) (str.++ unch150A (str.++ ch50A unch250A))))
(assert (= (str.++ preB (str.++ stem50 sufB)) (str.++ unch150B (str.++ ch50B unch250B))))
(assert (= (str.++ preC (str.++ stem50 sufC)) (str.++ unch150C (str.++ ch50C unch250C))))
(assert (= (str.++ preD (str.++ stem50 sufD)) (str.++ unch150D (str.++ ch50D unch250D))))
(assert (= (str.++ preE (str.++ stem50 sufE)) (str.++ unch150E (str.++ ch50E unch250E))))
(assert (= (str.++ preF (str.++ stem50 sufF)) (str.++ unch150F (str.++ ch50F unch250F))))
(assert (= (str.++ preG (str.++ stem50 sufG)) (str.++ unch150G (str.++ ch50G unch250G))))
(assert (= (str.++ preH (str.++ stem50 sufH)) (str.++ unch150H (str.++ ch50H unch250H))))
(assert (= "kjXsjkj" (str.++ unch150G (str.++ var50G unch250G))))
(assert (= "k2stH" (str.++ unch150H (str.++ var50H unch250H))))
(assert (= (str.len stem50) l50))
(assert (= (ite (= ch50A var50A) 0 1) sc50A))
(assert (= (ite (= ch50B var50B) 0 1) sc50B))
(assert (= (ite (= ch50C var50C) 0 1) sc50C))
(assert (= (ite (= ch50D var50D) 0 1) sc50D))
(assert (= (ite (= ch50E var50E) 0 1) sc50E))
(assert (= (ite (= ch50F var50F) 0 1) sc50F))
(assert (= (ite (= ch50G var50G) 0 1) sc50G))
(assert (= (ite (= ch50H var50H) 0 1) sc50H))
(assert (<= sc50A 1))
(assert (<= sc50B 1))
(assert (<= sc50C 1))
(assert (<= sc50D 1))
(assert (<= sc50E 1))
(assert (<= sc50F 1))
(assert (<= sc50G 1))
(assert (<= sc50H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      sc7G
      sc7H
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      sc8G
      sc8H
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      sc9G
      sc9H
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      sc10G
      sc10H
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      sc11G
      sc11H
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      sc12G
      sc12H
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      sc13G
      sc13H
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      sc14G
      sc14H
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      sc15G
      sc15H
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      sc16G
      sc16H
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      sc17G
      sc17H
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      sc18G
      sc18H
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      sc19G
      sc19H
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      sc20G
      sc20H
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      sc21G
      sc21H
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      sc22G
      sc22H
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      sc23G
      sc23H
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      sc24G
      sc24H
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      sc25G
      sc25H
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      sc26G
      sc26H
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      sc27G
      sc27H
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      sc28G
      sc28H
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      sc29G
      sc29H
      0
      sc30A
      sc30B
      sc30C
      sc30D
      sc30E
      sc30F
      sc30G
      sc30H
      0
      sc31A
      sc31B
      sc31C
      sc31D
      sc31E
      sc31F
      sc31G
      sc31H
      0
      sc32A
      sc32B
      sc32C
      sc32D
      sc32E
      sc32F
      sc32G
      sc32H
      0
      sc33A
      sc33B
      sc33C
      sc33D
      sc33E
      sc33F
      sc33G
      sc33H
      0
      sc34A
      sc34B
      sc34C
      sc34D
      sc34E
      sc34F
      sc34G
      sc34H
      0
      sc35A
      sc35B
      sc35C
      sc35D
      sc35E
      sc35F
      sc35G
      sc35H
      0
      sc36A
      sc36B
      sc36C
      sc36D
      sc36E
      sc36F
      sc36G
      sc36H
      0
      sc37A
      sc37B
      sc37C
      sc37D
      sc37E
      sc37F
      sc37G
      sc37H
      0
      sc38A
      sc38B
      sc38C
      sc38D
      sc38E
      sc38F
      sc38G
      sc38H
      0
      sc39A
      sc39B
      sc39C
      sc39D
      sc39E
      sc39F
      sc39G
      sc39H
      0
      sc40A
      sc40B
      sc40C
      sc40D
      sc40E
      sc40F
      sc40G
      sc40H
      0
      sc41A
      sc41B
      sc41C
      sc41D
      sc41E
      sc41F
      sc41G
      sc41H
      0
      sc42A
      sc42B
      sc42C
      sc42D
      sc42E
      sc42F
      sc42G
      sc42H
      0
      sc43A
      sc43B
      sc43C
      sc43D
      sc43E
      sc43F
      sc43G
      sc43H
      0
      sc44A
      sc44B
      sc44C
      sc44D
      sc44E
      sc44F
      sc44G
      sc44H
      0
      sc45A
      sc45B
      sc45C
      sc45D
      sc45E
      sc45F
      sc45G
      sc45H
      0
      sc46A
      sc46B
      sc46C
      sc46D
      sc46E
      sc46F
      sc46G
      sc46H
      0
      sc47A
      sc47B
      sc47C
      sc47D
      sc47E
      sc47F
      sc47G
      sc47H
      0
      sc48A
      sc48B
      sc48C
      sc48D
      sc48E
      sc48F
      sc48G
      sc48H
      0
      sc49A
      sc49B
      sc49C
      sc49D
      sc49E
      sc49F
      sc49G
      sc49H
      0
      sc50A
      sc50B
      sc50C
      sc50D
      sc50E
      sc50F
      sc50G
      sc50H)
   4))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun var7G () String)
(declare-fun var7H () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun unch27G () String)
(declare-fun ch7G () String)
(declare-fun unch17G () String)
(declare-fun unch27H () String)
(declare-fun ch7H () String)
(declare-fun unch17H () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun sc7G () Int)
(declare-fun sc7H () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun var8G () String)
(declare-fun var8H () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun unch28G () String)
(declare-fun ch8G () String)
(declare-fun unch18G () String)
(declare-fun unch28H () String)
(declare-fun ch8H () String)
(declare-fun unch18H () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun sc8G () Int)
(declare-fun sc8H () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun var9G () String)
(declare-fun var9H () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun unch29G () String)
(declare-fun ch9G () String)
(declare-fun unch19G () String)
(declare-fun unch29H () String)
(declare-fun ch9H () String)
(declare-fun unch19H () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun sc9G () Int)
(declare-fun sc9H () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun var10G () String)
(declare-fun var10H () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun unch210G () String)
(declare-fun ch10G () String)
(declare-fun unch110G () String)
(declare-fun unch210H () String)
(declare-fun ch10H () String)
(declare-fun unch110H () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun sc10G () Int)
(declare-fun sc10H () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun var11G () String)
(declare-fun var11H () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun unch211G () String)
(declare-fun ch11G () String)
(declare-fun unch111G () String)
(declare-fun unch211H () String)
(declare-fun ch11H () String)
(declare-fun unch111H () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun sc11G () Int)
(declare-fun sc11H () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun var12G () String)
(declare-fun var12H () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun unch212G () String)
(declare-fun ch12G () String)
(declare-fun unch112G () String)
(declare-fun unch212H () String)
(declare-fun ch12H () String)
(declare-fun unch112H () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun sc12G () Int)
(declare-fun sc12H () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun var13G () String)
(declare-fun var13H () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun unch213G () String)
(declare-fun ch13G () String)
(declare-fun unch113G () String)
(declare-fun unch213H () String)
(declare-fun ch13H () String)
(declare-fun unch113H () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun sc13G () Int)
(declare-fun sc13H () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun var14G () String)
(declare-fun var14H () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun unch214G () String)
(declare-fun ch14G () String)
(declare-fun unch114G () String)
(declare-fun unch214H () String)
(declare-fun ch14H () String)
(declare-fun unch114H () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun sc14G () Int)
(declare-fun sc14H () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun var15G () String)
(declare-fun var15H () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun unch215G () String)
(declare-fun ch15G () String)
(declare-fun unch115G () String)
(declare-fun unch215H () String)
(declare-fun ch15H () String)
(declare-fun unch115H () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun sc15G () Int)
(declare-fun sc15H () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun var16G () String)
(declare-fun var16H () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun unch216G () String)
(declare-fun ch16G () String)
(declare-fun unch116G () String)
(declare-fun unch216H () String)
(declare-fun ch16H () String)
(declare-fun unch116H () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun sc16G () Int)
(declare-fun sc16H () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun var17G () String)
(declare-fun var17H () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun unch217G () String)
(declare-fun ch17G () String)
(declare-fun unch117G () String)
(declare-fun unch217H () String)
(declare-fun ch17H () String)
(declare-fun unch117H () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun sc17G () Int)
(declare-fun sc17H () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun var18G () String)
(declare-fun var18H () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun unch218G () String)
(declare-fun ch18G () String)
(declare-fun unch118G () String)
(declare-fun unch218H () String)
(declare-fun ch18H () String)
(declare-fun unch118H () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun sc18G () Int)
(declare-fun sc18H () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun var19G () String)
(declare-fun var19H () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun unch219G () String)
(declare-fun ch19G () String)
(declare-fun unch119G () String)
(declare-fun unch219H () String)
(declare-fun ch19H () String)
(declare-fun unch119H () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun sc19G () Int)
(declare-fun sc19H () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun var20G () String)
(declare-fun var20H () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun unch220G () String)
(declare-fun ch20G () String)
(declare-fun unch120G () String)
(declare-fun unch220H () String)
(declare-fun ch20H () String)
(declare-fun unch120H () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun sc20G () Int)
(declare-fun sc20H () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun var21G () String)
(declare-fun var21H () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun unch221G () String)
(declare-fun ch21G () String)
(declare-fun unch121G () String)
(declare-fun unch221H () String)
(declare-fun ch21H () String)
(declare-fun unch121H () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun sc21G () Int)
(declare-fun sc21H () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun var22G () String)
(declare-fun var22H () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun unch222G () String)
(declare-fun ch22G () String)
(declare-fun unch122G () String)
(declare-fun unch222H () String)
(declare-fun ch22H () String)
(declare-fun unch122H () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun sc22G () Int)
(declare-fun sc22H () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun var23G () String)
(declare-fun var23H () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun unch223G () String)
(declare-fun ch23G () String)
(declare-fun unch123G () String)
(declare-fun unch223H () String)
(declare-fun ch23H () String)
(declare-fun unch123H () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun sc23G () Int)
(declare-fun sc23H () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun var24G () String)
(declare-fun var24H () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun unch224G () String)
(declare-fun ch24G () String)
(declare-fun unch124G () String)
(declare-fun unch224H () String)
(declare-fun ch24H () String)
(declare-fun unch124H () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun sc24G () Int)
(declare-fun sc24H () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun var25G () String)
(declare-fun var25H () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun unch225G () String)
(declare-fun ch25G () String)
(declare-fun unch125G () String)
(declare-fun unch225H () String)
(declare-fun ch25H () String)
(declare-fun unch125H () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun sc25G () Int)
(declare-fun sc25H () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun var26G () String)
(declare-fun var26H () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun unch226G () String)
(declare-fun ch26G () String)
(declare-fun unch126G () String)
(declare-fun unch226H () String)
(declare-fun ch26H () String)
(declare-fun unch126H () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun sc26G () Int)
(declare-fun sc26H () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun var27G () String)
(declare-fun var27H () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun unch227G () String)
(declare-fun ch27G () String)
(declare-fun unch127G () String)
(declare-fun unch227H () String)
(declare-fun ch27H () String)
(declare-fun unch127H () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun sc27G () Int)
(declare-fun sc27H () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun var28G () String)
(declare-fun var28H () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun unch228G () String)
(declare-fun ch28G () String)
(declare-fun unch128G () String)
(declare-fun unch228H () String)
(declare-fun ch28H () String)
(declare-fun unch128H () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun sc28G () Int)
(declare-fun sc28H () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun var29G () String)
(declare-fun var29H () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun unch229G () String)
(declare-fun ch29G () String)
(declare-fun unch129G () String)
(declare-fun unch229H () String)
(declare-fun ch29H () String)
(declare-fun unch129H () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun sc29G () Int)
(declare-fun sc29H () Int)
(declare-fun var30A () String)
(declare-fun var30B () String)
(declare-fun var30C () String)
(declare-fun var30D () String)
(declare-fun var30E () String)
(declare-fun var30F () String)
(declare-fun var30G () String)
(declare-fun var30H () String)
(declare-fun unch230A () String)
(declare-fun ch30A () String)
(declare-fun unch130A () String)
(declare-fun stem30 () String)
(declare-fun unch230B () String)
(declare-fun ch30B () String)
(declare-fun unch130B () String)
(declare-fun unch230C () String)
(declare-fun ch30C () String)
(declare-fun unch130C () String)
(declare-fun unch230D () String)
(declare-fun ch30D () String)
(declare-fun unch130D () String)
(declare-fun unch230E () String)
(declare-fun ch30E () String)
(declare-fun unch130E () String)
(declare-fun unch230F () String)
(declare-fun ch30F () String)
(declare-fun unch130F () String)
(declare-fun unch230G () String)
(declare-fun ch30G () String)
(declare-fun unch130G () String)
(declare-fun unch230H () String)
(declare-fun ch30H () String)
(declare-fun unch130H () String)
(declare-fun l30 () Int)
(declare-fun sc30A () Int)
(declare-fun sc30B () Int)
(declare-fun sc30C () Int)
(declare-fun sc30D () Int)
(declare-fun sc30E () Int)
(declare-fun sc30F () Int)
(declare-fun sc30G () Int)
(declare-fun sc30H () Int)
(declare-fun var31A () String)
(declare-fun var31B () String)
(declare-fun var31C () String)
(declare-fun var31D () String)
(declare-fun var31E () String)
(declare-fun var31F () String)
(declare-fun var31G () String)
(declare-fun var31H () String)
(declare-fun unch231A () String)
(declare-fun ch31A () String)
(declare-fun unch131A () String)
(declare-fun stem31 () String)
(declare-fun unch231B () String)
(declare-fun ch31B () String)
(declare-fun unch131B () String)
(declare-fun unch231C () String)
(declare-fun ch31C () String)
(declare-fun unch131C () String)
(declare-fun unch231D () String)
(declare-fun ch31D () String)
(declare-fun unch131D () String)
(declare-fun unch231E () String)
(declare-fun ch31E () String)
(declare-fun unch131E () String)
(declare-fun unch231F () String)
(declare-fun ch31F () String)
(declare-fun unch131F () String)
(declare-fun unch231G () String)
(declare-fun ch31G () String)
(declare-fun unch131G () String)
(declare-fun unch231H () String)
(declare-fun ch31H () String)
(declare-fun unch131H () String)
(declare-fun l31 () Int)
(declare-fun sc31A () Int)
(declare-fun sc31B () Int)
(declare-fun sc31C () Int)
(declare-fun sc31D () Int)
(declare-fun sc31E () Int)
(declare-fun sc31F () Int)
(declare-fun sc31G () Int)
(declare-fun sc31H () Int)
(declare-fun var32A () String)
(declare-fun var32B () String)
(declare-fun var32C () String)
(declare-fun var32D () String)
(declare-fun var32E () String)
(declare-fun var32F () String)
(declare-fun var32G () String)
(declare-fun var32H () String)
(declare-fun unch232A () String)
(declare-fun ch32A () String)
(declare-fun unch132A () String)
(declare-fun stem32 () String)
(declare-fun unch232B () String)
(declare-fun ch32B () String)
(declare-fun unch132B () String)
(declare-fun unch232C () String)
(declare-fun ch32C () String)
(declare-fun unch132C () String)
(declare-fun unch232D () String)
(declare-fun ch32D () String)
(declare-fun unch132D () String)
(declare-fun unch232E () String)
(declare-fun ch32E () String)
(declare-fun unch132E () String)
(declare-fun unch232F () String)
(declare-fun ch32F () String)
(declare-fun unch132F () String)
(declare-fun unch232G () String)
(declare-fun ch32G () String)
(declare-fun unch132G () String)
(declare-fun unch232H () String)
(declare-fun ch32H () String)
(declare-fun unch132H () String)
(declare-fun l32 () Int)
(declare-fun sc32A () Int)
(declare-fun sc32B () Int)
(declare-fun sc32C () Int)
(declare-fun sc32D () Int)
(declare-fun sc32E () Int)
(declare-fun sc32F () Int)
(declare-fun sc32G () Int)
(declare-fun sc32H () Int)
(declare-fun var33A () String)
(declare-fun var33B () String)
(declare-fun var33C () String)
(declare-fun var33D () String)
(declare-fun var33E () String)
(declare-fun var33F () String)
(declare-fun var33G () String)
(declare-fun var33H () String)
(declare-fun unch233A () String)
(declare-fun ch33A () String)
(declare-fun unch133A () String)
(declare-fun stem33 () String)
(declare-fun unch233B () String)
(declare-fun ch33B () String)
(declare-fun unch133B () String)
(declare-fun unch233C () String)
(declare-fun ch33C () String)
(declare-fun unch133C () String)
(declare-fun unch233D () String)
(declare-fun ch33D () String)
(declare-fun unch133D () String)
(declare-fun unch233E () String)
(declare-fun ch33E () String)
(declare-fun unch133E () String)
(declare-fun unch233F () String)
(declare-fun ch33F () String)
(declare-fun unch133F () String)
(declare-fun unch233G () String)
(declare-fun ch33G () String)
(declare-fun unch133G () String)
(declare-fun unch233H () String)
(declare-fun ch33H () String)
(declare-fun unch133H () String)
(declare-fun l33 () Int)
(declare-fun sc33A () Int)
(declare-fun sc33B () Int)
(declare-fun sc33C () Int)
(declare-fun sc33D () Int)
(declare-fun sc33E () Int)
(declare-fun sc33F () Int)
(declare-fun sc33G () Int)
(declare-fun sc33H () Int)
(declare-fun var34A () String)
(declare-fun var34B () String)
(declare-fun var34C () String)
(declare-fun var34D () String)
(declare-fun var34E () String)
(declare-fun var34F () String)
(declare-fun var34G () String)
(declare-fun var34H () String)
(declare-fun unch234A () String)
(declare-fun ch34A () String)
(declare-fun unch134A () String)
(declare-fun stem34 () String)
(declare-fun unch234B () String)
(declare-fun ch34B () String)
(declare-fun unch134B () String)
(declare-fun unch234C () String)
(declare-fun ch34C () String)
(declare-fun unch134C () String)
(declare-fun unch234D () String)
(declare-fun ch34D () String)
(declare-fun unch134D () String)
(declare-fun unch234E () String)
(declare-fun ch34E () String)
(declare-fun unch134E () String)
(declare-fun unch234F () String)
(declare-fun ch34F () String)
(declare-fun unch134F () String)
(declare-fun unch234G () String)
(declare-fun ch34G () String)
(declare-fun unch134G () String)
(declare-fun unch234H () String)
(declare-fun ch34H () String)
(declare-fun unch134H () String)
(declare-fun l34 () Int)
(declare-fun sc34A () Int)
(declare-fun sc34B () Int)
(declare-fun sc34C () Int)
(declare-fun sc34D () Int)
(declare-fun sc34E () Int)
(declare-fun sc34F () Int)
(declare-fun sc34G () Int)
(declare-fun sc34H () Int)
(declare-fun var35A () String)
(declare-fun var35B () String)
(declare-fun var35C () String)
(declare-fun var35D () String)
(declare-fun var35E () String)
(declare-fun var35F () String)
(declare-fun var35G () String)
(declare-fun var35H () String)
(declare-fun unch235A () String)
(declare-fun ch35A () String)
(declare-fun unch135A () String)
(declare-fun stem35 () String)
(declare-fun unch235B () String)
(declare-fun ch35B () String)
(declare-fun unch135B () String)
(declare-fun unch235C () String)
(declare-fun ch35C () String)
(declare-fun unch135C () String)
(declare-fun unch235D () String)
(declare-fun ch35D () String)
(declare-fun unch135D () String)
(declare-fun unch235E () String)
(declare-fun ch35E () String)
(declare-fun unch135E () String)
(declare-fun unch235F () String)
(declare-fun ch35F () String)
(declare-fun unch135F () String)
(declare-fun unch235G () String)
(declare-fun ch35G () String)
(declare-fun unch135G () String)
(declare-fun unch235H () String)
(declare-fun ch35H () String)
(declare-fun unch135H () String)
(declare-fun l35 () Int)
(declare-fun sc35A () Int)
(declare-fun sc35B () Int)
(declare-fun sc35C () Int)
(declare-fun sc35D () Int)
(declare-fun sc35E () Int)
(declare-fun sc35F () Int)
(declare-fun sc35G () Int)
(declare-fun sc35H () Int)
(declare-fun var36A () String)
(declare-fun var36B () String)
(declare-fun var36C () String)
(declare-fun var36D () String)
(declare-fun var36E () String)
(declare-fun var36F () String)
(declare-fun var36G () String)
(declare-fun var36H () String)
(declare-fun unch236A () String)
(declare-fun ch36A () String)
(declare-fun unch136A () String)
(declare-fun stem36 () String)
(declare-fun unch236B () String)
(declare-fun ch36B () String)
(declare-fun unch136B () String)
(declare-fun unch236C () String)
(declare-fun ch36C () String)
(declare-fun unch136C () String)
(declare-fun unch236D () String)
(declare-fun ch36D () String)
(declare-fun unch136D () String)
(declare-fun unch236E () String)
(declare-fun ch36E () String)
(declare-fun unch136E () String)
(declare-fun unch236F () String)
(declare-fun ch36F () String)
(declare-fun unch136F () String)
(declare-fun unch236G () String)
(declare-fun ch36G () String)
(declare-fun unch136G () String)
(declare-fun unch236H () String)
(declare-fun ch36H () String)
(declare-fun unch136H () String)
(declare-fun l36 () Int)
(declare-fun sc36A () Int)
(declare-fun sc36B () Int)
(declare-fun sc36C () Int)
(declare-fun sc36D () Int)
(declare-fun sc36E () Int)
(declare-fun sc36F () Int)
(declare-fun sc36G () Int)
(declare-fun sc36H () Int)
(declare-fun var37A () String)
(declare-fun var37B () String)
(declare-fun var37C () String)
(declare-fun var37D () String)
(declare-fun var37E () String)
(declare-fun var37F () String)
(declare-fun var37G () String)
(declare-fun var37H () String)
(declare-fun unch237A () String)
(declare-fun ch37A () String)
(declare-fun unch137A () String)
(declare-fun stem37 () String)
(declare-fun unch237B () String)
(declare-fun ch37B () String)
(declare-fun unch137B () String)
(declare-fun unch237C () String)
(declare-fun ch37C () String)
(declare-fun unch137C () String)
(declare-fun unch237D () String)
(declare-fun ch37D () String)
(declare-fun unch137D () String)
(declare-fun unch237E () String)
(declare-fun ch37E () String)
(declare-fun unch137E () String)
(declare-fun unch237F () String)
(declare-fun ch37F () String)
(declare-fun unch137F () String)
(declare-fun unch237G () String)
(declare-fun ch37G () String)
(declare-fun unch137G () String)
(declare-fun unch237H () String)
(declare-fun ch37H () String)
(declare-fun unch137H () String)
(declare-fun l37 () Int)
(declare-fun sc37A () Int)
(declare-fun sc37B () Int)
(declare-fun sc37C () Int)
(declare-fun sc37D () Int)
(declare-fun sc37E () Int)
(declare-fun sc37F () Int)
(declare-fun sc37G () Int)
(declare-fun sc37H () Int)
(declare-fun var38A () String)
(declare-fun var38B () String)
(declare-fun var38C () String)
(declare-fun var38D () String)
(declare-fun var38E () String)
(declare-fun var38F () String)
(declare-fun var38G () String)
(declare-fun var38H () String)
(declare-fun unch238A () String)
(declare-fun ch38A () String)
(declare-fun unch138A () String)
(declare-fun stem38 () String)
(declare-fun unch238B () String)
(declare-fun ch38B () String)
(declare-fun unch138B () String)
(declare-fun unch238C () String)
(declare-fun ch38C () String)
(declare-fun unch138C () String)
(declare-fun unch238D () String)
(declare-fun ch38D () String)
(declare-fun unch138D () String)
(declare-fun unch238E () String)
(declare-fun ch38E () String)
(declare-fun unch138E () String)
(declare-fun unch238F () String)
(declare-fun ch38F () String)
(declare-fun unch138F () String)
(declare-fun unch238G () String)
(declare-fun ch38G () String)
(declare-fun unch138G () String)
(declare-fun unch238H () String)
(declare-fun ch38H () String)
(declare-fun unch138H () String)
(declare-fun l38 () Int)
(declare-fun sc38A () Int)
(declare-fun sc38B () Int)
(declare-fun sc38C () Int)
(declare-fun sc38D () Int)
(declare-fun sc38E () Int)
(declare-fun sc38F () Int)
(declare-fun sc38G () Int)
(declare-fun sc38H () Int)
(declare-fun var39A () String)
(declare-fun var39B () String)
(declare-fun var39C () String)
(declare-fun var39D () String)
(declare-fun var39E () String)
(declare-fun var39F () String)
(declare-fun var39G () String)
(declare-fun var39H () String)
(declare-fun unch239A () String)
(declare-fun ch39A () String)
(declare-fun unch139A () String)
(declare-fun stem39 () String)
(declare-fun unch239B () String)
(declare-fun ch39B () String)
(declare-fun unch139B () String)
(declare-fun unch239C () String)
(declare-fun ch39C () String)
(declare-fun unch139C () String)
(declare-fun unch239D () String)
(declare-fun ch39D () String)
(declare-fun unch139D () String)
(declare-fun unch239E () String)
(declare-fun ch39E () String)
(declare-fun unch139E () String)
(declare-fun unch239F () String)
(declare-fun ch39F () String)
(declare-fun unch139F () String)
(declare-fun unch239G () String)
(declare-fun ch39G () String)
(declare-fun unch139G () String)
(declare-fun unch239H () String)
(declare-fun ch39H () String)
(declare-fun unch139H () String)
(declare-fun l39 () Int)
(declare-fun sc39A () Int)
(declare-fun sc39B () Int)
(declare-fun sc39C () Int)
(declare-fun sc39D () Int)
(declare-fun sc39E () Int)
(declare-fun sc39F () Int)
(declare-fun sc39G () Int)
(declare-fun sc39H () Int)
(declare-fun var40A () String)
(declare-fun var40B () String)
(declare-fun var40C () String)
(declare-fun var40D () String)
(declare-fun var40E () String)
(declare-fun var40F () String)
(declare-fun var40G () String)
(declare-fun var40H () String)
(declare-fun unch240A () String)
(declare-fun ch40A () String)
(declare-fun unch140A () String)
(declare-fun stem40 () String)
(declare-fun unch240B () String)
(declare-fun ch40B () String)
(declare-fun unch140B () String)
(declare-fun unch240C () String)
(declare-fun ch40C () String)
(declare-fun unch140C () String)
(declare-fun unch240D () String)
(declare-fun ch40D () String)
(declare-fun unch140D () String)
(declare-fun unch240E () String)
(declare-fun ch40E () String)
(declare-fun unch140E () String)
(declare-fun unch240F () String)
(declare-fun ch40F () String)
(declare-fun unch140F () String)
(declare-fun unch240G () String)
(declare-fun ch40G () String)
(declare-fun unch140G () String)
(declare-fun unch240H () String)
(declare-fun ch40H () String)
(declare-fun unch140H () String)
(declare-fun l40 () Int)
(declare-fun sc40A () Int)
(declare-fun sc40B () Int)
(declare-fun sc40C () Int)
(declare-fun sc40D () Int)
(declare-fun sc40E () Int)
(declare-fun sc40F () Int)
(declare-fun sc40G () Int)
(declare-fun sc40H () Int)
(declare-fun var41A () String)
(declare-fun var41B () String)
(declare-fun var41C () String)
(declare-fun var41D () String)
(declare-fun var41E () String)
(declare-fun var41F () String)
(declare-fun var41G () String)
(declare-fun var41H () String)
(declare-fun unch241A () String)
(declare-fun ch41A () String)
(declare-fun unch141A () String)
(declare-fun stem41 () String)
(declare-fun unch241B () String)
(declare-fun ch41B () String)
(declare-fun unch141B () String)
(declare-fun unch241C () String)
(declare-fun ch41C () String)
(declare-fun unch141C () String)
(declare-fun unch241D () String)
(declare-fun ch41D () String)
(declare-fun unch141D () String)
(declare-fun unch241E () String)
(declare-fun ch41E () String)
(declare-fun unch141E () String)
(declare-fun unch241F () String)
(declare-fun ch41F () String)
(declare-fun unch141F () String)
(declare-fun unch241G () String)
(declare-fun ch41G () String)
(declare-fun unch141G () String)
(declare-fun unch241H () String)
(declare-fun ch41H () String)
(declare-fun unch141H () String)
(declare-fun l41 () Int)
(declare-fun sc41A () Int)
(declare-fun sc41B () Int)
(declare-fun sc41C () Int)
(declare-fun sc41D () Int)
(declare-fun sc41E () Int)
(declare-fun sc41F () Int)
(declare-fun sc41G () Int)
(declare-fun sc41H () Int)
(declare-fun var42A () String)
(declare-fun var42B () String)
(declare-fun var42C () String)
(declare-fun var42D () String)
(declare-fun var42E () String)
(declare-fun var42F () String)
(declare-fun var42G () String)
(declare-fun var42H () String)
(declare-fun unch242A () String)
(declare-fun ch42A () String)
(declare-fun unch142A () String)
(declare-fun stem42 () String)
(declare-fun unch242B () String)
(declare-fun ch42B () String)
(declare-fun unch142B () String)
(declare-fun unch242C () String)
(declare-fun ch42C () String)
(declare-fun unch142C () String)
(declare-fun unch242D () String)
(declare-fun ch42D () String)
(declare-fun unch142D () String)
(declare-fun unch242E () String)
(declare-fun ch42E () String)
(declare-fun unch142E () String)
(declare-fun unch242F () String)
(declare-fun ch42F () String)
(declare-fun unch142F () String)
(declare-fun unch242G () String)
(declare-fun ch42G () String)
(declare-fun unch142G () String)
(declare-fun unch242H () String)
(declare-fun ch42H () String)
(declare-fun unch142H () String)
(declare-fun l42 () Int)
(declare-fun sc42A () Int)
(declare-fun sc42B () Int)
(declare-fun sc42C () Int)
(declare-fun sc42D () Int)
(declare-fun sc42E () Int)
(declare-fun sc42F () Int)
(declare-fun sc42G () Int)
(declare-fun sc42H () Int)
(declare-fun var43A () String)
(declare-fun var43B () String)
(declare-fun var43C () String)
(declare-fun var43D () String)
(declare-fun var43E () String)
(declare-fun var43F () String)
(declare-fun var43G () String)
(declare-fun var43H () String)
(declare-fun unch243A () String)
(declare-fun ch43A () String)
(declare-fun unch143A () String)
(declare-fun stem43 () String)
(declare-fun unch243B () String)
(declare-fun ch43B () String)
(declare-fun unch143B () String)
(declare-fun unch243C () String)
(declare-fun ch43C () String)
(declare-fun unch143C () String)
(declare-fun unch243D () String)
(declare-fun ch43D () String)
(declare-fun unch143D () String)
(declare-fun unch243E () String)
(declare-fun ch43E () String)
(declare-fun unch143E () String)
(declare-fun unch243F () String)
(declare-fun ch43F () String)
(declare-fun unch143F () String)
(declare-fun unch243G () String)
(declare-fun ch43G () String)
(declare-fun unch143G () String)
(declare-fun unch243H () String)
(declare-fun ch43H () String)
(declare-fun unch143H () String)
(declare-fun l43 () Int)
(declare-fun sc43A () Int)
(declare-fun sc43B () Int)
(declare-fun sc43C () Int)
(declare-fun sc43D () Int)
(declare-fun sc43E () Int)
(declare-fun sc43F () Int)
(declare-fun sc43G () Int)
(declare-fun sc43H () Int)
(declare-fun var44A () String)
(declare-fun var44B () String)
(declare-fun var44C () String)
(declare-fun var44D () String)
(declare-fun var44E () String)
(declare-fun var44F () String)
(declare-fun var44G () String)
(declare-fun var44H () String)
(declare-fun unch244A () String)
(declare-fun ch44A () String)
(declare-fun unch144A () String)
(declare-fun stem44 () String)
(declare-fun unch244B () String)
(declare-fun ch44B () String)
(declare-fun unch144B () String)
(declare-fun unch244C () String)
(declare-fun ch44C () String)
(declare-fun unch144C () String)
(declare-fun unch244D () String)
(declare-fun ch44D () String)
(declare-fun unch144D () String)
(declare-fun unch244E () String)
(declare-fun ch44E () String)
(declare-fun unch144E () String)
(declare-fun unch244F () String)
(declare-fun ch44F () String)
(declare-fun unch144F () String)
(declare-fun unch244G () String)
(declare-fun ch44G () String)
(declare-fun unch144G () String)
(declare-fun unch244H () String)
(declare-fun ch44H () String)
(declare-fun unch144H () String)
(declare-fun l44 () Int)
(declare-fun sc44A () Int)
(declare-fun sc44B () Int)
(declare-fun sc44C () Int)
(declare-fun sc44D () Int)
(declare-fun sc44E () Int)
(declare-fun sc44F () Int)
(declare-fun sc44G () Int)
(declare-fun sc44H () Int)
(declare-fun var45A () String)
(declare-fun var45B () String)
(declare-fun var45C () String)
(declare-fun var45D () String)
(declare-fun var45E () String)
(declare-fun var45F () String)
(declare-fun var45G () String)
(declare-fun var45H () String)
(declare-fun unch245A () String)
(declare-fun ch45A () String)
(declare-fun unch145A () String)
(declare-fun stem45 () String)
(declare-fun unch245B () String)
(declare-fun ch45B () String)
(declare-fun unch145B () String)
(declare-fun unch245C () String)
(declare-fun ch45C () String)
(declare-fun unch145C () String)
(declare-fun unch245D () String)
(declare-fun ch45D () String)
(declare-fun unch145D () String)
(declare-fun unch245E () String)
(declare-fun ch45E () String)
(declare-fun unch145E () String)
(declare-fun unch245F () String)
(declare-fun ch45F () String)
(declare-fun unch145F () String)
(declare-fun unch245G () String)
(declare-fun ch45G () String)
(declare-fun unch145G () String)
(declare-fun unch245H () String)
(declare-fun ch45H () String)
(declare-fun unch145H () String)
(declare-fun l45 () Int)
(declare-fun sc45A () Int)
(declare-fun sc45B () Int)
(declare-fun sc45C () Int)
(declare-fun sc45D () Int)
(declare-fun sc45E () Int)
(declare-fun sc45F () Int)
(declare-fun sc45G () Int)
(declare-fun sc45H () Int)
(declare-fun var46A () String)
(declare-fun var46B () String)
(declare-fun var46C () String)
(declare-fun var46D () String)
(declare-fun var46E () String)
(declare-fun var46F () String)
(declare-fun var46G () String)
(declare-fun var46H () String)
(declare-fun unch246A () String)
(declare-fun ch46A () String)
(declare-fun unch146A () String)
(declare-fun stem46 () String)
(declare-fun unch246B () String)
(declare-fun ch46B () String)
(declare-fun unch146B () String)
(declare-fun unch246C () String)
(declare-fun ch46C () String)
(declare-fun unch146C () String)
(declare-fun unch246D () String)
(declare-fun ch46D () String)
(declare-fun unch146D () String)
(declare-fun unch246E () String)
(declare-fun ch46E () String)
(declare-fun unch146E () String)
(declare-fun unch246F () String)
(declare-fun ch46F () String)
(declare-fun unch146F () String)
(declare-fun unch246G () String)
(declare-fun ch46G () String)
(declare-fun unch146G () String)
(declare-fun unch246H () String)
(declare-fun ch46H () String)
(declare-fun unch146H () String)
(declare-fun l46 () Int)
(declare-fun sc46A () Int)
(declare-fun sc46B () Int)
(declare-fun sc46C () Int)
(declare-fun sc46D () Int)
(declare-fun sc46E () Int)
(declare-fun sc46F () Int)
(declare-fun sc46G () Int)
(declare-fun sc46H () Int)
(declare-fun var47A () String)
(declare-fun var47B () String)
(declare-fun var47C () String)
(declare-fun var47D () String)
(declare-fun var47E () String)
(declare-fun var47F () String)
(declare-fun var47G () String)
(declare-fun var47H () String)
(declare-fun unch247A () String)
(declare-fun ch47A () String)
(declare-fun unch147A () String)
(declare-fun stem47 () String)
(declare-fun unch247B () String)
(declare-fun ch47B () String)
(declare-fun unch147B () String)
(declare-fun unch247C () String)
(declare-fun ch47C () String)
(declare-fun unch147C () String)
(declare-fun unch247D () String)
(declare-fun ch47D () String)
(declare-fun unch147D () String)
(declare-fun unch247E () String)
(declare-fun ch47E () String)
(declare-fun unch147E () String)
(declare-fun unch247F () String)
(declare-fun ch47F () String)
(declare-fun unch147F () String)
(declare-fun unch247G () String)
(declare-fun ch47G () String)
(declare-fun unch147G () String)
(declare-fun unch247H () String)
(declare-fun ch47H () String)
(declare-fun unch147H () String)
(declare-fun l47 () Int)
(declare-fun sc47A () Int)
(declare-fun sc47B () Int)
(declare-fun sc47C () Int)
(declare-fun sc47D () Int)
(declare-fun sc47E () Int)
(declare-fun sc47F () Int)
(declare-fun sc47G () Int)
(declare-fun sc47H () Int)
(declare-fun var48A () String)
(declare-fun var48B () String)
(declare-fun var48C () String)
(declare-fun var48D () String)
(declare-fun var48E () String)
(declare-fun var48F () String)
(declare-fun var48G () String)
(declare-fun var48H () String)
(declare-fun unch248A () String)
(declare-fun ch48A () String)
(declare-fun unch148A () String)
(declare-fun stem48 () String)
(declare-fun unch248B () String)
(declare-fun ch48B () String)
(declare-fun unch148B () String)
(declare-fun unch248C () String)
(declare-fun ch48C () String)
(declare-fun unch148C () String)
(declare-fun unch248D () String)
(declare-fun ch48D () String)
(declare-fun unch148D () String)
(declare-fun unch248E () String)
(declare-fun ch48E () String)
(declare-fun unch148E () String)
(declare-fun unch248F () String)
(declare-fun ch48F () String)
(declare-fun unch148F () String)
(declare-fun unch248G () String)
(declare-fun ch48G () String)
(declare-fun unch148G () String)
(declare-fun unch248H () String)
(declare-fun ch48H () String)
(declare-fun unch148H () String)
(declare-fun l48 () Int)
(declare-fun sc48A () Int)
(declare-fun sc48B () Int)
(declare-fun sc48C () Int)
(declare-fun sc48D () Int)
(declare-fun sc48E () Int)
(declare-fun sc48F () Int)
(declare-fun sc48G () Int)
(declare-fun sc48H () Int)
(declare-fun var49A () String)
(declare-fun var49B () String)
(declare-fun var49C () String)
(declare-fun var49D () String)
(declare-fun var49E () String)
(declare-fun var49F () String)
(declare-fun var49G () String)
(declare-fun var49H () String)
(declare-fun unch249A () String)
(declare-fun ch49A () String)
(declare-fun unch149A () String)
(declare-fun stem49 () String)
(declare-fun unch249B () String)
(declare-fun ch49B () String)
(declare-fun unch149B () String)
(declare-fun unch249C () String)
(declare-fun ch49C () String)
(declare-fun unch149C () String)
(declare-fun unch249D () String)
(declare-fun ch49D () String)
(declare-fun unch149D () String)
(declare-fun unch249E () String)
(declare-fun ch49E () String)
(declare-fun unch149E () String)
(declare-fun unch249F () String)
(declare-fun ch49F () String)
(declare-fun unch149F () String)
(declare-fun unch249G () String)
(declare-fun ch49G () String)
(declare-fun unch149G () String)
(declare-fun unch249H () String)
(declare-fun ch49H () String)
(declare-fun unch149H () String)
(declare-fun l49 () Int)
(declare-fun sc49A () Int)
(declare-fun sc49B () Int)
(declare-fun sc49C () Int)
(declare-fun sc49D () Int)
(declare-fun sc49E () Int)
(declare-fun sc49F () Int)
(declare-fun sc49G () Int)
(declare-fun sc49H () Int)
(declare-fun var50A () String)
(declare-fun var50B () String)
(declare-fun var50C () String)
(declare-fun var50D () String)
(declare-fun var50E () String)
(declare-fun var50F () String)
(declare-fun var50G () String)
(declare-fun var50H () String)
(declare-fun unch250A () String)
(declare-fun ch50A () String)
(declare-fun unch150A () String)
(declare-fun stem50 () String)
(declare-fun unch250B () String)
(declare-fun ch50B () String)
(declare-fun unch150B () String)
(declare-fun unch250C () String)
(declare-fun ch50C () String)
(declare-fun unch150C () String)
(declare-fun unch250D () String)
(declare-fun ch50D () String)
(declare-fun unch150D () String)
(declare-fun unch250E () String)
(declare-fun ch50E () String)
(declare-fun unch150E () String)
(declare-fun unch250F () String)
(declare-fun ch50F () String)
(declare-fun unch150F () String)
(declare-fun unch250G () String)
(declare-fun ch50G () String)
(declare-fun unch150G () String)
(declare-fun unch250H () String)
(declare-fun ch50H () String)
(declare-fun unch150H () String)
(declare-fun l50 () Int)
(declare-fun sc50A () Int)
(declare-fun sc50B () Int)
(declare-fun sc50C () Int)
(declare-fun sc50D () Int)
(declare-fun sc50E () Int)
(declare-fun sc50F () Int)
(declare-fun sc50G () Int)
(declare-fun sc50H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "plOst" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "plastO" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "plasjkjX" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "skorZx" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "skoruxO" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "skorusjX" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "1jrjXx" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "1jrjixO" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "1jrjisjX" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "pastZx" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "pastuxO" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "pastusjX" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "mjnjZx" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "mjnjZxa" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "mjnjZsji" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "plZ1" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "plZ1a" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "plZzji" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "sjtjX1" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "st21a" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "st2zji" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (<= (str.len var7G) 1))
(assert (<= (str.len var7H) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= (str.++ preG (str.++ stem7 sufG)) (str.++ unch17G (str.++ ch7G unch27G))))
(assert (= (str.++ preH (str.++ stem7 sufH)) (str.++ unch17H (str.++ ch7H unch27H))))
(assert (= "sOk" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "sOka" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "sOtsji" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (= (ite (= ch7G var7G) 0 1) sc7G))
(assert (= (ite (= ch7H var7H) 0 1) sc7H))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= sc7G 1))
(assert (<= sc7H 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (<= (str.len var8G) 1))
(assert (<= (str.len var8H) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= (str.++ preG (str.++ stem8 sufG)) (str.++ unch18G (str.++ ch8G unch28G))))
(assert (= (str.++ preH (str.++ stem8 sufH)) (str.++ unch18H (str.++ ch8H unch28H))))
(assert (= "b3k" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "bHkO" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "bHtsjX" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (= (ite (= ch8G var8G) 0 1) sc8G))
(assert (= (ite (= ch8H var8H) 0 1) sc8H))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= sc8G 1))
(assert (<= sc8H 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (<= (str.len var9G) 1))
(assert (<= (str.len var9H) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= (str.++ preG (str.++ stem9 sufG)) (str.++ unch19G (str.++ ch9G unch29G))))
(assert (= (str.++ preH (str.++ stem9 sufH)) (str.++ unch19H (str.++ ch9H unch29H))))
(assert (= "l3st" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "lHstO" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "lHsjkjX" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (= (ite (= ch9G var9G) 0 1) sc9G))
(assert (= (ite (= ch9H var9H) 0 1) sc9H))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= sc9G 1))
(assert (<= sc9H 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (<= (str.len var10G) 1))
(assert (<= (str.len var10H) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= (str.++ preG (str.++ stem10 sufG)) (str.++ unch110G (str.++ ch10G unch210G))))
(assert (= (str.++ preH (str.++ stem10 sufH)) (str.++ unch110H (str.++ ch10H unch210H))))
(assert (= "l3st" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "l3sta" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "l3sjkji" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (= (ite (= ch10G var10G) 0 1) sc10G))
(assert (= (ite (= ch10H var10H) 0 1) sc10H))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= sc10G 1))
(assert (<= sc10H 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (<= (str.len var11G) 1))
(assert (<= (str.len var11H) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= (str.++ preG (str.++ stem11 sufG)) (str.++ unch111G (str.++ ch11G unch211G))))
(assert (= (str.++ preH (str.++ stem11 sufH)) (str.++ unch111H (str.++ ch11H unch211H))))
(assert (= "pjljXt" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "pl2ta" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "pl2kji" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (= (ite (= ch11G var11G) 0 1) sc11G))
(assert (= (ite (= ch11H var11H) 0 1) sc11H))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= sc11G 1))
(assert (<= sc11H 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (<= (str.len var12G) 1))
(assert (<= (str.len var12H) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= (str.++ preG (str.++ stem12 sufG)) (str.++ unch112G (str.++ ch12G unch212G))))
(assert (= (str.++ preH (str.++ stem12 sufH)) (str.++ unch112H (str.++ ch12H unch212H))))
(assert (= "sjmjrjXd" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "smr2da" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "smr2gji" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (= (ite (= ch12G var12G) 0 1) sc12G))
(assert (= (ite (= ch12H var12H) 0 1) sc12H))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= sc12G 1))
(assert (<= sc12H 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (<= (str.len var13G) 1))
(assert (<= (str.len var13H) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= (str.++ preG (str.++ stem13 sufG)) (str.++ unch113G (str.++ ch13G unch213G))))
(assert (= (str.++ preH (str.++ stem13 sufH)) (str.++ unch113H (str.++ ch13H unch213H))))
(assert (= "fjXst" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "fostO" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "fosjkjX" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (= (ite (= ch13G var13G) 0 1) sc13G))
(assert (= (ite (= ch13H var13H) 0 1) sc13H))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= sc13G 1))
(assert (<= sc13H 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (<= (str.len var14G) 1))
(assert (<= (str.len var14H) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= (str.++ preG (str.++ stem14 sufG)) (str.++ unch114G (str.++ ch14G unch214G))))
(assert (= (str.++ preH (str.++ stem14 sufH)) (str.++ unch114H (str.++ ch14H unch214H))))
(assert (= "mjXst" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "m2sta" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "m2sjkji" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (= (ite (= ch14G var14G) 0 1) sc14G))
(assert (= (ite (= ch14H var14H) 0 1) sc14H))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= sc14G 1))
(assert (<= sc14H 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (<= (str.len var15G) 1))
(assert (<= (str.len var15H) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= (str.++ preG (str.++ stem15 sufG)) (str.++ unch115G (str.++ ch15G unch215G))))
(assert (= (str.++ preH (str.++ stem15 sufH)) (str.++ unch115H (str.++ ch15H unch215H))))
(assert (= "ljXd" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "l4du" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "lHdZ" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (= (ite (= ch15G var15G) 0 1) sc15G))
(assert (= (ite (= ch15H var15H) 0 1) sc15H))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= sc15G 1))
(assert (<= sc15H 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (<= (str.len var16G) 1))
(assert (<= (str.len var16H) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= (str.++ preG (str.++ stem16 sufG)) (str.++ unch116G (str.++ ch16G unch216G))))
(assert (= (str.++ preH (str.++ stem16 sufH)) (str.++ unch116H (str.++ ch16H unch216H))))
(assert (= "djrjXt" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "dr2ta" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "dr2kji" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (= (ite (= ch16G var16G) 0 1) sc16G))
(assert (= (ite (= ch16H var16H) 0 1) sc16H))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= sc16G 1))
(assert (<= sc16H 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (<= (str.len var17G) 1))
(assert (<= (str.len var17H) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= (str.++ preG (str.++ stem17 sufG)) (str.++ unch117G (str.++ ch17G unch217G))))
(assert (= (str.++ preH (str.++ stem17 sufH)) (str.++ unch117H (str.++ ch17H unch217H))))
(assert (= "mjXd" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "m4du" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "mHdZ" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (= (ite (= ch17G var17G) 0 1) sc17G))
(assert (= (ite (= ch17H var17H) 0 1) sc17H))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= sc17G 1))
(assert (<= sc17H 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (<= (str.len var18G) 1))
(assert (<= (str.len var18H) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= (str.++ preG (str.++ stem18 sufG)) (str.++ unch118G (str.++ ch18G unch218G))))
(assert (= (str.++ preH (str.++ stem18 sufH)) (str.++ unch118H (str.++ ch18H unch218H))))
(assert (= "vjXl" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "volO" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "voljX" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (= (ite (= ch18G var18G) 0 1) sc18G))
(assert (= (ite (= ch18H var18H) 0 1) sc18H))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= sc18G 1))
(assert (<= sc18H 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (<= (str.len var19G) 1))
(assert (<= (str.len var19H) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= (str.++ preG (str.++ stem19 sufG)) (str.++ unch119G (str.++ ch19G unch219G))))
(assert (= (str.++ preH (str.++ stem19 sufH)) (str.++ unch119H (str.++ ch19H unch219H))))
(assert (= "vjXz" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "v2za" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "v2zji" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (= (ite (= ch19G var19G) 0 1) sc19G))
(assert (= (ite (= ch19H var19H) 0 1) sc19H))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= sc19G 1))
(assert (<= sc19H 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (<= (str.len var20G) 1))
(assert (<= (str.len var20H) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= (str.++ preG (str.++ stem20 sufG)) (str.++ unch120G (str.++ ch20G unch220G))))
(assert (= (str.++ preH (str.++ stem20 sufH)) (str.++ unch120H (str.++ ch20H unch220H))))
(assert (= "s3r" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "s3ra" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "s3rji" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (= (ite (= ch20G var20G) 0 1) sc20G))
(assert (= (ite (= ch20H var20H) 0 1) sc20H))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= sc20G 1))
(assert (<= sc20H 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (<= (str.len var21G) 1))
(assert (<= (str.len var21H) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= (str.++ preG (str.++ stem21 sufG)) (str.++ unch121G (str.++ ch21G unch221G))))
(assert (= (str.++ preH (str.++ stem21 sufH)) (str.++ unch121H (str.++ ch21H unch221H))))
(assert (= "sjnjXp" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "snopO" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "snopjX" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (= (ite (= ch21G var21G) 0 1) sc21G))
(assert (= (ite (= ch21H var21H) 0 1) sc21H))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= sc21G 1))
(assert (<= sc21H 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (<= (str.len var22G) 1))
(assert (<= (str.len var22H) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= (str.++ preG (str.++ stem22 sufG)) (str.++ unch122G (str.++ ch22G unch222G))))
(assert (= (str.++ preH (str.++ stem22 sufH)) (str.++ unch122H (str.++ ch22H unch222H))))
(assert (= "1r3b" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "1rHbO" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "1rHbjX" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (= (ite (= ch22G var22G) 0 1) sc22G))
(assert (= (ite (= ch22H var22H) 0 1) sc22H))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= sc22G 1))
(assert (<= sc22H 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (<= (str.len var23G) 1))
(assert (<= (str.len var23H) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= (str.++ preG (str.++ stem23 sufG)) (str.++ unch123G (str.++ ch23G unch223G))))
(assert (= (str.++ preH (str.++ stem23 sufH)) (str.++ unch123H (str.++ ch23H unch223H))))
(assert (= "l4bjid" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= "l4bHda" (str.++ unch123B (str.++ var23B unch223B))))
(assert (= "l4bHgji" (str.++ unch123C (str.++ var23C unch223C))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (= (ite (= ch23G var23G) 0 1) sc23G))
(assert (= (ite (= ch23H var23H) 0 1) sc23H))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= sc23G 1))
(assert (<= sc23H 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (<= (str.len var24G) 1))
(assert (<= (str.len var24H) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= (str.++ preG (str.++ stem24 sufG)) (str.++ unch124G (str.++ ch24G unch224G))))
(assert (= (str.++ preH (str.++ stem24 sufH)) (str.++ unch124H (str.++ ch24H unch224H))))
(assert (= "b4rji1" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= "b4rH1a" (str.++ unch124B (str.++ var24B unch224B))))
(assert (= "b4rHzji" (str.++ unch124C (str.++ var24C unch224C))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (= (ite (= ch24G var24G) 0 1) sc24G))
(assert (= (ite (= ch24H var24H) 0 1) sc24H))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= sc24G 1))
(assert (<= sc24H 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (<= (str.len var25G) 1))
(assert (<= (str.len var25H) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= (str.++ preG (str.++ stem25 sufG)) (str.++ unch125G (str.++ ch25G unch225G))))
(assert (= (str.++ preH (str.++ stem25 sufH)) (str.++ unch125H (str.++ ch25H unch225H))))
(assert (= "pHrjX1" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= "pHr21a" (str.++ unch125B (str.++ var25B unch225B))))
(assert (= "pHr2zji" (str.++ unch125C (str.++ var25C unch225C))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (= (ite (= ch25G var25G) 0 1) sc25G))
(assert (= (ite (= ch25H var25H) 0 1) sc25H))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= sc25G 1))
(assert (<= sc25H 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (<= (str.len var26G) 1))
(assert (<= (str.len var26H) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= (str.++ preG (str.++ stem26 sufG)) (str.++ unch126G (str.++ ch26G unch226G))))
(assert (= (str.++ preH (str.++ stem26 sufH)) (str.++ unch126H (str.++ ch26H unch226H))))
(assert (= "porjX1" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= "por21a" (str.++ unch126B (str.++ var26B unch226B))))
(assert (= "por2zji" (str.++ unch126C (str.++ var26C unch226C))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (= (ite (= ch26G var26G) 0 1) sc26G))
(assert (= (ite (= ch26H var26H) 0 1) sc26H))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= sc26G 1))
(assert (<= sc26H 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (<= (str.len var27G) 1))
(assert (<= (str.len var27H) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= (str.++ preG (str.++ stem27 sufG)) (str.++ unch127G (str.++ ch27G unch227G))))
(assert (= (str.++ preH (str.++ stem27 sufH)) (str.++ unch127H (str.++ ch27H unch227H))))
(assert (= "bolj3k" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= "boljHkO" (str.++ unch127B (str.++ var27B unch227B))))
(assert (= "boljHtsjX" (str.++ unch127C (str.++ var27C unch227C))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (= (ite (= ch27G var27G) 0 1) sc27G))
(assert (= (ite (= ch27H var27H) 0 1) sc27H))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= sc27G 1))
(assert (<= sc27H 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (<= (str.len var28G) 1))
(assert (<= (str.len var28H) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= (str.++ preG (str.++ stem28 sufG)) (str.++ unch128G (str.++ ch28G unch228G))))
(assert (= (str.++ preH (str.++ stem28 sufH)) (str.++ unch128H (str.++ ch28H unch228H))))
(assert (= "v2rji1" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= "v2ro1a" (str.++ unch128B (str.++ var28B unch228B))))
(assert (= "v2rozji" (str.++ unch128C (str.++ var28C unch228C))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (= (ite (= ch28G var28G) 0 1) sc28G))
(assert (= (ite (= ch28H var28H) 0 1) sc28H))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= sc28G 1))
(assert (<= sc28H 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (<= (str.len var29G) 1))
(assert (<= (str.len var29H) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= (str.++ preG (str.++ stem29 sufG)) (str.++ unch129G (str.++ ch29G unch229G))))
(assert (= (str.++ preH (str.++ stem29 sufH)) (str.++ unch129H (str.++ ch29H unch229H))))
(assert (= "k2nHk" (str.++ unch129A (str.++ var29A unch229A))))
(assert (= "k2nHka" (str.++ unch129B (str.++ var29B unch229B))))
(assert (= "k2nHtsji" (str.++ unch129C (str.++ var29C unch229C))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (= (ite (= ch29G var29G) 0 1) sc29G))
(assert (= (ite (= ch29H var29H) 0 1) sc29H))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= sc29G 1))
(assert (<= sc29H 1))
(assert (<= (str.len var30A) 1))
(assert (<= (str.len var30B) 1))
(assert (<= (str.len var30C) 1))
(assert (<= (str.len var30D) 1))
(assert (<= (str.len var30E) 1))
(assert (<= (str.len var30F) 1))
(assert (<= (str.len var30G) 1))
(assert (<= (str.len var30H) 1))
(assert (= (str.++ preA (str.++ stem30 sufA)) (str.++ unch130A (str.++ ch30A unch230A))))
(assert (= (str.++ preB (str.++ stem30 sufB)) (str.++ unch130B (str.++ ch30B unch230B))))
(assert (= (str.++ preC (str.++ stem30 sufC)) (str.++ unch130C (str.++ ch30C unch230C))))
(assert (= (str.++ preD (str.++ stem30 sufD)) (str.++ unch130D (str.++ ch30D unch230D))))
(assert (= (str.++ preE (str.++ stem30 sufE)) (str.++ unch130E (str.++ ch30E unch230E))))
(assert (= (str.++ preF (str.++ stem30 sufF)) (str.++ unch130F (str.++ ch30F unch230F))))
(assert (= (str.++ preG (str.++ stem30 sufG)) (str.++ unch130G (str.++ ch30G unch230G))))
(assert (= (str.++ preH (str.++ stem30 sufH)) (str.++ unch130H (str.++ ch30H unch230H))))
(assert (= "p2tjik" (str.++ unch130A (str.++ var30A unch230A))))
(assert (= "pot2ka" (str.++ unch130B (str.++ var30B unch230B))))
(assert (= "pot2tsji" (str.++ unch130C (str.++ var30C unch230C))))
(assert (= (str.len stem30) l30))
(assert (= (ite (= ch30A var30A) 0 1) sc30A))
(assert (= (ite (= ch30B var30B) 0 1) sc30B))
(assert (= (ite (= ch30C var30C) 0 1) sc30C))
(assert (= (ite (= ch30D var30D) 0 1) sc30D))
(assert (= (ite (= ch30E var30E) 0 1) sc30E))
(assert (= (ite (= ch30F var30F) 0 1) sc30F))
(assert (= (ite (= ch30G var30G) 0 1) sc30G))
(assert (= (ite (= ch30H var30H) 0 1) sc30H))
(assert (<= sc30A 1))
(assert (<= sc30B 1))
(assert (<= sc30C 1))
(assert (<= sc30D 1))
(assert (<= sc30E 1))
(assert (<= sc30F 1))
(assert (<= sc30G 1))
(assert (<= sc30H 1))
(assert (<= (str.len var31A) 1))
(assert (<= (str.len var31B) 1))
(assert (<= (str.len var31C) 1))
(assert (<= (str.len var31D) 1))
(assert (<= (str.len var31E) 1))
(assert (<= (str.len var31F) 1))
(assert (<= (str.len var31G) 1))
(assert (<= (str.len var31H) 1))
(assert (= (str.++ preA (str.++ stem31 sufA)) (str.++ unch131A (str.++ ch31A unch231A))))
(assert (= (str.++ preB (str.++ stem31 sufB)) (str.++ unch131B (str.++ ch31B unch231B))))
(assert (= (str.++ preC (str.++ stem31 sufC)) (str.++ unch131C (str.++ ch31C unch231C))))
(assert (= (str.++ preD (str.++ stem31 sufD)) (str.++ unch131D (str.++ ch31D unch231D))))
(assert (= (str.++ preE (str.++ stem31 sufE)) (str.++ unch131E (str.++ ch31E unch231E))))
(assert (= (str.++ preF (str.++ stem31 sufF)) (str.++ unch131F (str.++ ch31F unch231F))))
(assert (= (str.++ preG (str.++ stem31 sufG)) (str.++ unch131G (str.++ ch31G unch231G))))
(assert (= (str.++ preH (str.++ stem31 sufH)) (str.++ unch131H (str.++ ch31H unch231H))))
(assert (= "tjXk" (str.++ unch131A (str.++ var31A unch231A))))
(assert (= "t2ka" (str.++ unch131B (str.++ var31B unch231B))))
(assert (= "t2tsji" (str.++ unch131C (str.++ var31C unch231C))))
(assert (= (str.len stem31) l31))
(assert (= (ite (= ch31A var31A) 0 1) sc31A))
(assert (= (ite (= ch31B var31B) 0 1) sc31B))
(assert (= (ite (= ch31C var31C) 0 1) sc31C))
(assert (= (ite (= ch31D var31D) 0 1) sc31D))
(assert (= (ite (= ch31E var31E) 0 1) sc31E))
(assert (= (ite (= ch31F var31F) 0 1) sc31F))
(assert (= (ite (= ch31G var31G) 0 1) sc31G))
(assert (= (ite (= ch31H var31H) 0 1) sc31H))
(assert (<= sc31A 1))
(assert (<= sc31B 1))
(assert (<= sc31C 1))
(assert (<= sc31D 1))
(assert (<= sc31E 1))
(assert (<= sc31F 1))
(assert (<= sc31G 1))
(assert (<= sc31H 1))
(assert (<= (str.len var32A) 1))
(assert (<= (str.len var32B) 1))
(assert (<= (str.len var32C) 1))
(assert (<= (str.len var32D) 1))
(assert (<= (str.len var32E) 1))
(assert (<= (str.len var32F) 1))
(assert (<= (str.len var32G) 1))
(assert (<= (str.len var32H) 1))
(assert (= (str.++ preA (str.++ stem32 sufA)) (str.++ unch132A (str.++ ch32A unch232A))))
(assert (= (str.++ preB (str.++ stem32 sufB)) (str.++ unch132B (str.++ ch32B unch232B))))
(assert (= (str.++ preC (str.++ stem32 sufC)) (str.++ unch132C (str.++ ch32C unch232C))))
(assert (= (str.++ preD (str.++ stem32 sufD)) (str.++ unch132D (str.++ ch32D unch232D))))
(assert (= (str.++ preE (str.++ stem32 sufE)) (str.++ unch132E (str.++ ch32E unch232E))))
(assert (= (str.++ preF (str.++ stem32 sufF)) (str.++ unch132F (str.++ ch32F unch232F))))
(assert (= (str.++ preG (str.++ stem32 sufG)) (str.++ unch132G (str.++ ch32G unch232G))))
(assert (= (str.++ preH (str.++ stem32 sufH)) (str.++ unch132H (str.++ ch32H unch232H))))
(assert (= "kjXl" (str.++ unch132A (str.++ var32A unch232A))))
(assert (= "kolO" (str.++ unch132B (str.++ var32B unch232B))))
(assert (= "koljX" (str.++ unch132C (str.++ var32C unch232C))))
(assert (= (str.len stem32) l32))
(assert (= (ite (= ch32A var32A) 0 1) sc32A))
(assert (= (ite (= ch32B var32B) 0 1) sc32B))
(assert (= (ite (= ch32C var32C) 0 1) sc32C))
(assert (= (ite (= ch32D var32D) 0 1) sc32D))
(assert (= (ite (= ch32E var32E) 0 1) sc32E))
(assert (= (ite (= ch32F var32F) 0 1) sc32F))
(assert (= (ite (= ch32G var32G) 0 1) sc32G))
(assert (= (ite (= ch32H var32H) 0 1) sc32H))
(assert (<= sc32A 1))
(assert (<= sc32B 1))
(assert (<= sc32C 1))
(assert (<= sc32D 1))
(assert (<= sc32E 1))
(assert (<= sc32F 1))
(assert (<= sc32G 1))
(assert (<= sc32H 1))
(assert (<= (str.len var33A) 1))
(assert (<= (str.len var33B) 1))
(assert (<= (str.len var33C) 1))
(assert (<= (str.len var33D) 1))
(assert (<= (str.len var33E) 1))
(assert (<= (str.len var33F) 1))
(assert (<= (str.len var33G) 1))
(assert (<= (str.len var33H) 1))
(assert (= (str.++ preA (str.++ stem33 sufA)) (str.++ unch133A (str.++ ch33A unch233A))))
(assert (= (str.++ preB (str.++ stem33 sufB)) (str.++ unch133B (str.++ ch33B unch233B))))
(assert (= (str.++ preC (str.++ stem33 sufC)) (str.++ unch133C (str.++ ch33C unch233C))))
(assert (= (str.++ preD (str.++ stem33 sufD)) (str.++ unch133D (str.++ ch33D unch233D))))
(assert (= (str.++ preE (str.++ stem33 sufE)) (str.++ unch133E (str.++ ch33E unch233E))))
(assert (= (str.++ preF (str.++ stem33 sufF)) (str.++ unch133F (str.++ ch33F unch233F))))
(assert (= (str.++ preG (str.++ stem33 sufG)) (str.++ unch133G (str.++ ch33G unch233G))))
(assert (= (str.++ preH (str.++ stem33 sufH)) (str.++ unch133H (str.++ ch33H unch233H))))
(assert (= "kovOlj" (str.++ unch133D (str.++ var33D unch233D))))
(assert (= "kovalj3" (str.++ unch133E (str.++ var33E unch233E))))
(assert (= "koval3" (str.++ unch133F (str.++ var33F unch233F))))
(assert (= (str.len stem33) l33))
(assert (= (ite (= ch33A var33A) 0 1) sc33A))
(assert (= (ite (= ch33B var33B) 0 1) sc33B))
(assert (= (ite (= ch33C var33C) 0 1) sc33C))
(assert (= (ite (= ch33D var33D) 0 1) sc33D))
(assert (= (ite (= ch33E var33E) 0 1) sc33E))
(assert (= (ite (= ch33F var33F) 0 1) sc33F))
(assert (= (ite (= ch33G var33G) 0 1) sc33G))
(assert (= (ite (= ch33H var33H) 0 1) sc33H))
(assert (<= sc33A 1))
(assert (<= sc33B 1))
(assert (<= sc33C 1))
(assert (<= sc33D 1))
(assert (<= sc33E 1))
(assert (<= sc33F 1))
(assert (<= sc33G 1))
(assert (<= sc33H 1))
(assert (<= (str.len var34A) 1))
(assert (<= (str.len var34B) 1))
(assert (<= (str.len var34C) 1))
(assert (<= (str.len var34D) 1))
(assert (<= (str.len var34E) 1))
(assert (<= (str.len var34F) 1))
(assert (<= (str.len var34G) 1))
(assert (<= (str.len var34H) 1))
(assert (= (str.++ preA (str.++ stem34 sufA)) (str.++ unch134A (str.++ ch34A unch234A))))
(assert (= (str.++ preB (str.++ stem34 sufB)) (str.++ unch134B (str.++ ch34B unch234B))))
(assert (= (str.++ preC (str.++ stem34 sufC)) (str.++ unch134C (str.++ ch34C unch234C))))
(assert (= (str.++ preD (str.++ stem34 sufD)) (str.++ unch134D (str.++ ch34D unch234D))))
(assert (= (str.++ preE (str.++ stem34 sufE)) (str.++ unch134E (str.++ ch34E unch234E))))
(assert (= (str.++ preF (str.++ stem34 sufF)) (str.++ unch134F (str.++ ch34F unch234F))))
(assert (= (str.++ preG (str.++ stem34 sufG)) (str.++ unch134G (str.++ ch34G unch234G))))
(assert (= (str.++ preH (str.++ stem34 sufH)) (str.++ unch134H (str.++ ch34H unch234H))))
(assert (= "DmjXlj" (str.++ unch134D (str.++ var34D unch234D))))
(assert (= "Dmjilj3" (str.++ unch134E (str.++ var34E unch234E))))
(assert (= "Dmjil3" (str.++ unch134F (str.++ var34F unch234F))))
(assert (= (str.len stem34) l34))
(assert (= (ite (= ch34A var34A) 0 1) sc34A))
(assert (= (ite (= ch34B var34B) 0 1) sc34B))
(assert (= (ite (= ch34C var34C) 0 1) sc34C))
(assert (= (ite (= ch34D var34D) 0 1) sc34D))
(assert (= (ite (= ch34E var34E) 0 1) sc34E))
(assert (= (ite (= ch34F var34F) 0 1) sc34F))
(assert (= (ite (= ch34G var34G) 0 1) sc34G))
(assert (= (ite (= ch34H var34H) 0 1) sc34H))
(assert (<= sc34A 1))
(assert (<= sc34B 1))
(assert (<= sc34C 1))
(assert (<= sc34D 1))
(assert (<= sc34E 1))
(assert (<= sc34F 1))
(assert (<= sc34G 1))
(assert (<= sc34H 1))
(assert (<= (str.len var35A) 1))
(assert (<= (str.len var35B) 1))
(assert (<= (str.len var35C) 1))
(assert (<= (str.len var35D) 1))
(assert (<= (str.len var35E) 1))
(assert (<= (str.len var35F) 1))
(assert (<= (str.len var35G) 1))
(assert (<= (str.len var35H) 1))
(assert (= (str.++ preA (str.++ stem35 sufA)) (str.++ unch135A (str.++ ch35A unch235A))))
(assert (= (str.++ preB (str.++ stem35 sufB)) (str.++ unch135B (str.++ ch35B unch235B))))
(assert (= (str.++ preC (str.++ stem35 sufC)) (str.++ unch135C (str.++ ch35C unch235C))))
(assert (= (str.++ preD (str.++ stem35 sufD)) (str.++ unch135D (str.++ ch35D unch235D))))
(assert (= (str.++ preE (str.++ stem35 sufE)) (str.++ unch135E (str.++ ch35E unch235E))))
(assert (= (str.++ preF (str.++ stem35 sufF)) (str.++ unch135F (str.++ ch35F unch235F))))
(assert (= (str.++ preG (str.++ stem35 sufG)) (str.++ unch135G (str.++ ch35G unch235G))))
(assert (= (str.++ preH (str.++ stem35 sufH)) (str.++ unch135H (str.++ ch35H unch235H))))
(assert (= "kjrjXlj" (str.++ unch135D (str.++ var35D unch235D))))
(assert (= "kjrjilj3" (str.++ unch135E (str.++ var35E unch235E))))
(assert (= "kjrjil3" (str.++ unch135F (str.++ var35F unch235F))))
(assert (= (str.len stem35) l35))
(assert (= (ite (= ch35A var35A) 0 1) sc35A))
(assert (= (ite (= ch35B var35B) 0 1) sc35B))
(assert (= (ite (= ch35C var35C) 0 1) sc35C))
(assert (= (ite (= ch35D var35D) 0 1) sc35D))
(assert (= (ite (= ch35E var35E) 0 1) sc35E))
(assert (= (ite (= ch35F var35F) 0 1) sc35F))
(assert (= (ite (= ch35G var35G) 0 1) sc35G))
(assert (= (ite (= ch35H var35H) 0 1) sc35H))
(assert (<= sc35A 1))
(assert (<= sc35B 1))
(assert (<= sc35C 1))
(assert (<= sc35D 1))
(assert (<= sc35E 1))
(assert (<= sc35F 1))
(assert (<= sc35G 1))
(assert (<= sc35H 1))
(assert (<= (str.len var36A) 1))
(assert (<= (str.len var36B) 1))
(assert (<= (str.len var36C) 1))
(assert (<= (str.len var36D) 1))
(assert (<= (str.len var36E) 1))
(assert (<= (str.len var36F) 1))
(assert (<= (str.len var36G) 1))
(assert (<= (str.len var36H) 1))
(assert (= (str.++ preA (str.++ stem36 sufA)) (str.++ unch136A (str.++ ch36A unch236A))))
(assert (= (str.++ preB (str.++ stem36 sufB)) (str.++ unch136B (str.++ ch36B unch236B))))
(assert (= (str.++ preC (str.++ stem36 sufC)) (str.++ unch136C (str.++ ch36C unch236C))))
(assert (= (str.++ preD (str.++ stem36 sufD)) (str.++ unch136D (str.++ ch36D unch236D))))
(assert (= (str.++ preE (str.++ stem36 sufE)) (str.++ unch136E (str.++ ch36E unch236E))))
(assert (= (str.++ preF (str.++ stem36 sufF)) (str.++ unch136F (str.++ ch36F unch236F))))
(assert (= (str.++ preG (str.++ stem36 sufG)) (str.++ unch136G (str.++ ch36G unch236G))))
(assert (= (str.++ preH (str.++ stem36 sufH)) (str.++ unch136H (str.++ ch36H unch236H))))
(assert (= "uE3tHlj" (str.++ unch136D (str.++ var36D unch236D))))
(assert (= "uE3tHljH" (str.++ unch136E (str.++ var36E unch236E))))
(assert (= "uE3tHlH" (str.++ unch136F (str.++ var36F unch236F))))
(assert (= (str.len stem36) l36))
(assert (= (ite (= ch36A var36A) 0 1) sc36A))
(assert (= (ite (= ch36B var36B) 0 1) sc36B))
(assert (= (ite (= ch36C var36C) 0 1) sc36C))
(assert (= (ite (= ch36D var36D) 0 1) sc36D))
(assert (= (ite (= ch36E var36E) 0 1) sc36E))
(assert (= (ite (= ch36F var36F) 0 1) sc36F))
(assert (= (ite (= ch36G var36G) 0 1) sc36G))
(assert (= (ite (= ch36H var36H) 0 1) sc36H))
(assert (<= sc36A 1))
(assert (<= sc36B 1))
(assert (<= sc36C 1))
(assert (<= sc36D 1))
(assert (<= sc36E 1))
(assert (<= sc36F 1))
(assert (<= sc36G 1))
(assert (<= sc36H 1))
(assert (<= (str.len var37A) 1))
(assert (<= (str.len var37B) 1))
(assert (<= (str.len var37C) 1))
(assert (<= (str.len var37D) 1))
(assert (<= (str.len var37E) 1))
(assert (<= (str.len var37F) 1))
(assert (<= (str.len var37G) 1))
(assert (<= (str.len var37H) 1))
(assert (= (str.++ preA (str.++ stem37 sufA)) (str.++ unch137A (str.++ ch37A unch237A))))
(assert (= (str.++ preB (str.++ stem37 sufB)) (str.++ unch137B (str.++ ch37B unch237B))))
(assert (= (str.++ preC (str.++ stem37 sufC)) (str.++ unch137C (str.++ ch37C unch237C))))
(assert (= (str.++ preD (str.++ stem37 sufD)) (str.++ unch137D (str.++ ch37D unch237D))))
(assert (= (str.++ preE (str.++ stem37 sufE)) (str.++ unch137E (str.++ ch37E unch237E))))
(assert (= (str.++ preF (str.++ stem37 sufF)) (str.++ unch137F (str.++ ch37F unch237F))))
(assert (= (str.++ preG (str.++ stem37 sufG)) (str.++ unch137G (str.++ ch37G unch237G))))
(assert (= (str.++ preH (str.++ stem37 sufH)) (str.++ unch137H (str.++ ch37H unch237H))))
(assert (= "gr4bjinj" (str.++ unch137D (str.++ var37D unch237D))))
(assert (= "gr4bHnjH" (str.++ unch137E (str.++ var37E unch237E))))
(assert (= "gr4bHnH" (str.++ unch137F (str.++ var37F unch237F))))
(assert (= (str.len stem37) l37))
(assert (= (ite (= ch37A var37A) 0 1) sc37A))
(assert (= (ite (= ch37B var37B) 0 1) sc37B))
(assert (= (ite (= ch37C var37C) 0 1) sc37C))
(assert (= (ite (= ch37D var37D) 0 1) sc37D))
(assert (= (ite (= ch37E var37E) 0 1) sc37E))
(assert (= (ite (= ch37F var37F) 0 1) sc37F))
(assert (= (ite (= ch37G var37G) 0 1) sc37G))
(assert (= (ite (= ch37H var37H) 0 1) sc37H))
(assert (<= sc37A 1))
(assert (<= sc37B 1))
(assert (<= sc37C 1))
(assert (<= sc37D 1))
(assert (<= sc37E 1))
(assert (<= sc37F 1))
(assert (<= sc37G 1))
(assert (<= sc37H 1))
(assert (<= (str.len var38A) 1))
(assert (<= (str.len var38B) 1))
(assert (<= (str.len var38C) 1))
(assert (<= (str.len var38D) 1))
(assert (<= (str.len var38E) 1))
(assert (<= (str.len var38F) 1))
(assert (<= (str.len var38G) 1))
(assert (<= (str.len var38H) 1))
(assert (= (str.++ preA (str.++ stem38 sufA)) (str.++ unch138A (str.++ ch38A unch238A))))
(assert (= (str.++ preB (str.++ stem38 sufB)) (str.++ unch138B (str.++ ch38B unch238B))))
(assert (= (str.++ preC (str.++ stem38 sufC)) (str.++ unch138C (str.++ ch38C unch238C))))
(assert (= (str.++ preD (str.++ stem38 sufD)) (str.++ unch138D (str.++ ch38D unch238D))))
(assert (= (str.++ preE (str.++ stem38 sufE)) (str.++ unch138E (str.++ ch38E unch238E))))
(assert (= (str.++ preF (str.++ stem38 sufF)) (str.++ unch138F (str.++ ch38F unch238F))))
(assert (= (str.++ preG (str.++ stem38 sufG)) (str.++ unch138G (str.++ ch38G unch238G))))
(assert (= (str.++ preH (str.++ stem38 sufH)) (str.++ unch138H (str.++ ch38H unch238H))))
(assert (= "2lHnj" (str.++ unch138D (str.++ var38D unch238D))))
(assert (= "2lHnjH" (str.++ unch138E (str.++ var38E unch238E))))
(assert (= "2lHnH" (str.++ unch138F (str.++ var38F unch238F))))
(assert (= (str.len stem38) l38))
(assert (= (ite (= ch38A var38A) 0 1) sc38A))
(assert (= (ite (= ch38B var38B) 0 1) sc38B))
(assert (= (ite (= ch38C var38C) 0 1) sc38C))
(assert (= (ite (= ch38D var38D) 0 1) sc38D))
(assert (= (ite (= ch38E var38E) 0 1) sc38E))
(assert (= (ite (= ch38F var38F) 0 1) sc38F))
(assert (= (ite (= ch38G var38G) 0 1) sc38G))
(assert (= (ite (= ch38H var38H) 0 1) sc38H))
(assert (<= sc38A 1))
(assert (<= sc38B 1))
(assert (<= sc38C 1))
(assert (<= sc38D 1))
(assert (<= sc38E 1))
(assert (<= sc38F 1))
(assert (<= sc38G 1))
(assert (<= sc38H 1))
(assert (<= (str.len var39A) 1))
(assert (<= (str.len var39B) 1))
(assert (<= (str.len var39C) 1))
(assert (<= (str.len var39D) 1))
(assert (<= (str.len var39E) 1))
(assert (<= (str.len var39F) 1))
(assert (<= (str.len var39G) 1))
(assert (<= (str.len var39H) 1))
(assert (= (str.++ preA (str.++ stem39 sufA)) (str.++ unch139A (str.++ ch39A unch239A))))
(assert (= (str.++ preB (str.++ stem39 sufB)) (str.++ unch139B (str.++ ch39B unch239B))))
(assert (= (str.++ preC (str.++ stem39 sufC)) (str.++ unch139C (str.++ ch39C unch239C))))
(assert (= (str.++ preD (str.++ stem39 sufD)) (str.++ unch139D (str.++ ch39D unch239D))))
(assert (= (str.++ preE (str.++ stem39 sufE)) (str.++ unch139E (str.++ ch39E unch239E))))
(assert (= (str.++ preF (str.++ stem39 sufF)) (str.++ unch139F (str.++ ch39F unch239F))))
(assert (= (str.++ preG (str.++ stem39 sufG)) (str.++ unch139G (str.++ ch39G unch239G))))
(assert (= (str.++ preH (str.++ stem39 sufH)) (str.++ unch139H (str.++ ch39H unch239H))))
(assert (= "jaEjmjXnj" (str.++ unch139D (str.++ var39D unch239D))))
(assert (= "jaEm4njH" (str.++ unch139E (str.++ var39E unch239E))))
(assert (= "jaEm4nH" (str.++ unch139F (str.++ var39F unch239F))))
(assert (= (str.len stem39) l39))
(assert (= (ite (= ch39A var39A) 0 1) sc39A))
(assert (= (ite (= ch39B var39B) 0 1) sc39B))
(assert (= (ite (= ch39C var39C) 0 1) sc39C))
(assert (= (ite (= ch39D var39D) 0 1) sc39D))
(assert (= (ite (= ch39E var39E) 0 1) sc39E))
(assert (= (ite (= ch39F var39F) 0 1) sc39F))
(assert (= (ite (= ch39G var39G) 0 1) sc39G))
(assert (= (ite (= ch39H var39H) 0 1) sc39H))
(assert (<= sc39A 1))
(assert (<= sc39B 1))
(assert (<= sc39C 1))
(assert (<= sc39D 1))
(assert (<= sc39E 1))
(assert (<= sc39F 1))
(assert (<= sc39G 1))
(assert (<= sc39H 1))
(assert (<= (str.len var40A) 1))
(assert (<= (str.len var40B) 1))
(assert (<= (str.len var40C) 1))
(assert (<= (str.len var40D) 1))
(assert (<= (str.len var40E) 1))
(assert (<= (str.len var40F) 1))
(assert (<= (str.len var40G) 1))
(assert (<= (str.len var40H) 1))
(assert (= (str.++ preA (str.++ stem40 sufA)) (str.++ unch140A (str.++ ch40A unch240A))))
(assert (= (str.++ preB (str.++ stem40 sufB)) (str.++ unch140B (str.++ ch40B unch240B))))
(assert (= (str.++ preC (str.++ stem40 sufC)) (str.++ unch140C (str.++ ch40C unch240C))))
(assert (= (str.++ preD (str.++ stem40 sufD)) (str.++ unch140D (str.++ ch40D unch240D))))
(assert (= (str.++ preE (str.++ stem40 sufE)) (str.++ unch140E (str.++ ch40E unch240E))))
(assert (= (str.++ preF (str.++ stem40 sufF)) (str.++ unch140F (str.++ ch40F unch240F))))
(assert (= (str.++ preG (str.++ stem40 sufG)) (str.++ unch140G (str.++ ch40G unch240G))))
(assert (= (str.++ preH (str.++ stem40 sufH)) (str.++ unch140H (str.++ ch40H unch240H))))
(assert (= "jOsjinj" (str.++ unch140D (str.++ var40D unch240D))))
(assert (= "jOsHnjH" (str.++ unch140E (str.++ var40E unch240E))))
(assert (= "jOsHnH" (str.++ unch140F (str.++ var40F unch240F))))
(assert (= (str.len stem40) l40))
(assert (= (ite (= ch40A var40A) 0 1) sc40A))
(assert (= (ite (= ch40B var40B) 0 1) sc40B))
(assert (= (ite (= ch40C var40C) 0 1) sc40C))
(assert (= (ite (= ch40D var40D) 0 1) sc40D))
(assert (= (ite (= ch40E var40E) 0 1) sc40E))
(assert (= (ite (= ch40F var40F) 0 1) sc40F))
(assert (= (ite (= ch40G var40G) 0 1) sc40G))
(assert (= (ite (= ch40H var40H) 0 1) sc40H))
(assert (<= sc40A 1))
(assert (<= sc40B 1))
(assert (<= sc40C 1))
(assert (<= sc40D 1))
(assert (<= sc40E 1))
(assert (<= sc40F 1))
(assert (<= sc40G 1))
(assert (<= sc40H 1))
(assert (<= (str.len var41A) 1))
(assert (<= (str.len var41B) 1))
(assert (<= (str.len var41C) 1))
(assert (<= (str.len var41D) 1))
(assert (<= (str.len var41E) 1))
(assert (<= (str.len var41F) 1))
(assert (<= (str.len var41G) 1))
(assert (<= (str.len var41H) 1))
(assert (= (str.++ preA (str.++ stem41 sufA)) (str.++ unch141A (str.++ ch41A unch241A))))
(assert (= (str.++ preB (str.++ stem41 sufB)) (str.++ unch141B (str.++ ch41B unch241B))))
(assert (= (str.++ preC (str.++ stem41 sufC)) (str.++ unch141C (str.++ ch41C unch241C))))
(assert (= (str.++ preD (str.++ stem41 sufD)) (str.++ unch141D (str.++ ch41D unch241D))))
(assert (= (str.++ preE (str.++ stem41 sufE)) (str.++ unch141E (str.++ ch41E unch241E))))
(assert (= (str.++ preF (str.++ stem41 sufF)) (str.++ unch141F (str.++ ch41F unch241F))))
(assert (= (str.++ preG (str.++ stem41 sufG)) (str.++ unch141G (str.++ ch41G unch241G))))
(assert (= (str.++ preH (str.++ stem41 sufH)) (str.++ unch141H (str.++ ch41H unch241H))))
(assert (= "zj3kj" (str.++ unch141D (str.++ var41D unch241D))))
(assert (= "zj3kjH" (str.++ unch141E (str.++ var41E unch241E))))
(assert (= "zj3tH" (str.++ unch141F (str.++ var41F unch241F))))
(assert (= (str.len stem41) l41))
(assert (= (ite (= ch41A var41A) 0 1) sc41A))
(assert (= (ite (= ch41B var41B) 0 1) sc41B))
(assert (= (ite (= ch41C var41C) 0 1) sc41C))
(assert (= (ite (= ch41D var41D) 0 1) sc41D))
(assert (= (ite (= ch41E var41E) 0 1) sc41E))
(assert (= (ite (= ch41F var41F) 0 1) sc41F))
(assert (= (ite (= ch41G var41G) 0 1) sc41G))
(assert (= (ite (= ch41H var41H) 0 1) sc41H))
(assert (<= sc41A 1))
(assert (<= sc41B 1))
(assert (<= sc41C 1))
(assert (<= sc41D 1))
(assert (<= sc41E 1))
(assert (<= sc41F 1))
(assert (<= sc41G 1))
(assert (<= sc41H 1))
(assert (<= (str.len var42A) 1))
(assert (<= (str.len var42B) 1))
(assert (<= (str.len var42C) 1))
(assert (<= (str.len var42D) 1))
(assert (<= (str.len var42E) 1))
(assert (<= (str.len var42F) 1))
(assert (<= (str.len var42G) 1))
(assert (<= (str.len var42H) 1))
(assert (= (str.++ preA (str.++ stem42 sufA)) (str.++ unch142A (str.++ ch42A unch242A))))
(assert (= (str.++ preB (str.++ stem42 sufB)) (str.++ unch142B (str.++ ch42B unch242B))))
(assert (= (str.++ preC (str.++ stem42 sufC)) (str.++ unch142C (str.++ ch42C unch242C))))
(assert (= (str.++ preD (str.++ stem42 sufD)) (str.++ unch142D (str.++ ch42D unch242D))))
(assert (= (str.++ preE (str.++ stem42 sufE)) (str.++ unch142E (str.++ ch42E unch242E))))
(assert (= (str.++ preF (str.++ stem42 sufF)) (str.++ unch142F (str.++ ch42F unch242F))))
(assert (= (str.++ preG (str.++ stem42 sufG)) (str.++ unch142G (str.++ ch42G unch242G))))
(assert (= (str.++ preH (str.++ stem42 sufH)) (str.++ unch142H (str.++ ch42H unch242H))))
(assert (= "mOsjkj" (str.++ unch142G (str.++ var42G unch242G))))
(assert (= "mOstH" (str.++ unch142H (str.++ var42H unch242H))))
(assert (= (str.len stem42) l42))
(assert (= (ite (= ch42A var42A) 0 1) sc42A))
(assert (= (ite (= ch42B var42B) 0 1) sc42B))
(assert (= (ite (= ch42C var42C) 0 1) sc42C))
(assert (= (ite (= ch42D var42D) 0 1) sc42D))
(assert (= (ite (= ch42E var42E) 0 1) sc42E))
(assert (= (ite (= ch42F var42F) 0 1) sc42F))
(assert (= (ite (= ch42G var42G) 0 1) sc42G))
(assert (= (ite (= ch42H var42H) 0 1) sc42H))
(assert (<= sc42A 1))
(assert (<= sc42B 1))
(assert (<= sc42C 1))
(assert (<= sc42D 1))
(assert (<= sc42E 1))
(assert (<= sc42F 1))
(assert (<= sc42G 1))
(assert (<= sc42H 1))
(assert (<= (str.len var43A) 1))
(assert (<= (str.len var43B) 1))
(assert (<= (str.len var43C) 1))
(assert (<= (str.len var43D) 1))
(assert (<= (str.len var43E) 1))
(assert (<= (str.len var43F) 1))
(assert (<= (str.len var43G) 1))
(assert (<= (str.len var43H) 1))
(assert (= (str.++ preA (str.++ stem43 sufA)) (str.++ unch143A (str.++ ch43A unch243A))))
(assert (= (str.++ preB (str.++ stem43 sufB)) (str.++ unch143B (str.++ ch43B unch243B))))
(assert (= (str.++ preC (str.++ stem43 sufC)) (str.++ unch143C (str.++ ch43C unch243C))))
(assert (= (str.++ preD (str.++ stem43 sufD)) (str.++ unch143D (str.++ ch43D unch243D))))
(assert (= (str.++ preE (str.++ stem43 sufE)) (str.++ unch143E (str.++ ch43E unch243E))))
(assert (= (str.++ preF (str.++ stem43 sufF)) (str.++ unch143F (str.++ ch43F unch243F))))
(assert (= (str.++ preG (str.++ stem43 sufG)) (str.++ unch143G (str.++ ch43G unch243G))))
(assert (= (str.++ preH (str.++ stem43 sufH)) (str.++ unch143H (str.++ ch43H unch243H))))
(assert (= "sjmjXrjkj" (str.++ unch143G (str.++ var43G unch243G))))
(assert (= "sm4rtH" (str.++ unch143H (str.++ var43H unch243H))))
(assert (= (str.len stem43) l43))
(assert (= (ite (= ch43A var43A) 0 1) sc43A))
(assert (= (ite (= ch43B var43B) 0 1) sc43B))
(assert (= (ite (= ch43C var43C) 0 1) sc43C))
(assert (= (ite (= ch43D var43D) 0 1) sc43D))
(assert (= (ite (= ch43E var43E) 0 1) sc43E))
(assert (= (ite (= ch43F var43F) 0 1) sc43F))
(assert (= (ite (= ch43G var43G) 0 1) sc43G))
(assert (= (ite (= ch43H var43H) 0 1) sc43H))
(assert (<= sc43A 1))
(assert (<= sc43B 1))
(assert (<= sc43C 1))
(assert (<= sc43D 1))
(assert (<= sc43E 1))
(assert (<= sc43F 1))
(assert (<= sc43G 1))
(assert (<= sc43H 1))
(assert (<= (str.len var44A) 1))
(assert (<= (str.len var44B) 1))
(assert (<= (str.len var44C) 1))
(assert (<= (str.len var44D) 1))
(assert (<= (str.len var44E) 1))
(assert (<= (str.len var44F) 1))
(assert (<= (str.len var44G) 1))
(assert (<= (str.len var44H) 1))
(assert (= (str.++ preA (str.++ stem44 sufA)) (str.++ unch144A (str.++ ch44A unch244A))))
(assert (= (str.++ preB (str.++ stem44 sufB)) (str.++ unch144B (str.++ ch44B unch244B))))
(assert (= (str.++ preC (str.++ stem44 sufC)) (str.++ unch144C (str.++ ch44C unch244C))))
(assert (= (str.++ preD (str.++ stem44 sufD)) (str.++ unch144D (str.++ ch44D unch244D))))
(assert (= (str.++ preE (str.++ stem44 sufE)) (str.++ unch144E (str.++ ch44E unch244E))))
(assert (= (str.++ preF (str.++ stem44 sufF)) (str.++ unch144F (str.++ ch44F unch244F))))
(assert (= (str.++ preG (str.++ stem44 sufG)) (str.++ unch144G (str.++ ch44G unch244G))))
(assert (= (str.++ preH (str.++ stem44 sufH)) (str.++ unch144H (str.++ ch44H unch244H))))
(assert (= "vjXsjkj" (str.++ unch144G (str.++ var44G unch244G))))
(assert (= "vjXstH" (str.++ unch144H (str.++ var44H unch244H))))
(assert (= (str.len stem44) l44))
(assert (= (ite (= ch44A var44A) 0 1) sc44A))
(assert (= (ite (= ch44B var44B) 0 1) sc44B))
(assert (= (ite (= ch44C var44C) 0 1) sc44C))
(assert (= (ite (= ch44D var44D) 0 1) sc44D))
(assert (= (ite (= ch44E var44E) 0 1) sc44E))
(assert (= (ite (= ch44F var44F) 0 1) sc44F))
(assert (= (ite (= ch44G var44G) 0 1) sc44G))
(assert (= (ite (= ch44H var44H) 0 1) sc44H))
(assert (<= sc44A 1))
(assert (<= sc44B 1))
(assert (<= sc44C 1))
(assert (<= sc44D 1))
(assert (<= sc44E 1))
(assert (<= sc44F 1))
(assert (<= sc44G 1))
(assert (<= sc44H 1))
(assert (<= (str.len var45A) 1))
(assert (<= (str.len var45B) 1))
(assert (<= (str.len var45C) 1))
(assert (<= (str.len var45D) 1))
(assert (<= (str.len var45E) 1))
(assert (<= (str.len var45F) 1))
(assert (<= (str.len var45G) 1))
(assert (<= (str.len var45H) 1))
(assert (= (str.++ preA (str.++ stem45 sufA)) (str.++ unch145A (str.++ ch45A unch245A))))
(assert (= (str.++ preB (str.++ stem45 sufB)) (str.++ unch145B (str.++ ch45B unch245B))))
(assert (= (str.++ preC (str.++ stem45 sufC)) (str.++ unch145C (str.++ ch45C unch245C))))
(assert (= (str.++ preD (str.++ stem45 sufD)) (str.++ unch145D (str.++ ch45D unch245D))))
(assert (= (str.++ preE (str.++ stem45 sufE)) (str.++ unch145E (str.++ ch45E unch245E))))
(assert (= (str.++ preF (str.++ stem45 sufF)) (str.++ unch145F (str.++ ch45F unch245F))))
(assert (= (str.++ preG (str.++ stem45 sufG)) (str.++ unch145G (str.++ ch45G unch245G))))
(assert (= (str.++ preH (str.++ stem45 sufH)) (str.++ unch145H (str.++ ch45H unch245H))))
(assert (= "rOgjisjkj" (str.++ unch145G (str.++ var45G unch245G))))
(assert (= "rOdostH" (str.++ unch145H (str.++ var45H unch245H))))
(assert (= (str.len stem45) l45))
(assert (= (ite (= ch45A var45A) 0 1) sc45A))
(assert (= (ite (= ch45B var45B) 0 1) sc45B))
(assert (= (ite (= ch45C var45C) 0 1) sc45C))
(assert (= (ite (= ch45D var45D) 0 1) sc45D))
(assert (= (ite (= ch45E var45E) 0 1) sc45E))
(assert (= (ite (= ch45F var45F) 0 1) sc45F))
(assert (= (ite (= ch45G var45G) 0 1) sc45G))
(assert (= (ite (= ch45H var45H) 0 1) sc45H))
(assert (<= sc45A 1))
(assert (<= sc45B 1))
(assert (<= sc45C 1))
(assert (<= sc45D 1))
(assert (<= sc45E 1))
(assert (<= sc45F 1))
(assert (<= sc45G 1))
(assert (<= sc45H 1))
(assert (<= (str.len var46A) 1))
(assert (<= (str.len var46B) 1))
(assert (<= (str.len var46C) 1))
(assert (<= (str.len var46D) 1))
(assert (<= (str.len var46E) 1))
(assert (<= (str.len var46F) 1))
(assert (<= (str.len var46G) 1))
(assert (<= (str.len var46H) 1))
(assert (= (str.++ preA (str.++ stem46 sufA)) (str.++ unch146A (str.++ ch46A unch246A))))
(assert (= (str.++ preB (str.++ stem46 sufB)) (str.++ unch146B (str.++ ch46B unch246B))))
(assert (= (str.++ preC (str.++ stem46 sufC)) (str.++ unch146C (str.++ ch46C unch246C))))
(assert (= (str.++ preD (str.++ stem46 sufD)) (str.++ unch146D (str.++ ch46D unch246D))))
(assert (= (str.++ preE (str.++ stem46 sufE)) (str.++ unch146E (str.++ ch46E unch246E))))
(assert (= (str.++ preF (str.++ stem46 sufF)) (str.++ unch146F (str.++ ch46F unch246F))))
(assert (= (str.++ preG (str.++ stem46 sufG)) (str.++ unch146G (str.++ ch46G unch246G))))
(assert (= (str.++ preH (str.++ stem46 sufH)) (str.++ unch146H (str.++ ch46H unch246H))))
(assert (= "sjXlj" (str.++ unch146G (str.++ var46G unch246G))))
(assert (= "s2lH" (str.++ unch146H (str.++ var46H unch246H))))
(assert (= (str.len stem46) l46))
(assert (= (ite (= ch46A var46A) 0 1) sc46A))
(assert (= (ite (= ch46B var46B) 0 1) sc46B))
(assert (= (ite (= ch46C var46C) 0 1) sc46C))
(assert (= (ite (= ch46D var46D) 0 1) sc46D))
(assert (= (ite (= ch46E var46E) 0 1) sc46E))
(assert (= (ite (= ch46F var46F) 0 1) sc46F))
(assert (= (ite (= ch46G var46G) 0 1) sc46G))
(assert (= (ite (= ch46H var46H) 0 1) sc46H))
(assert (<= sc46A 1))
(assert (<= sc46B 1))
(assert (<= sc46C 1))
(assert (<= sc46D 1))
(assert (<= sc46E 1))
(assert (<= sc46F 1))
(assert (<= sc46G 1))
(assert (<= sc46H 1))
(assert (<= (str.len var47A) 1))
(assert (<= (str.len var47B) 1))
(assert (<= (str.len var47C) 1))
(assert (<= (str.len var47D) 1))
(assert (<= (str.len var47E) 1))
(assert (<= (str.len var47F) 1))
(assert (<= (str.len var47G) 1))
(assert (<= (str.len var47H) 1))
(assert (= (str.++ preA (str.++ stem47 sufA)) (str.++ unch147A (str.++ ch47A unch247A))))
(assert (= (str.++ preB (str.++ stem47 sufB)) (str.++ unch147B (str.++ ch47B unch247B))))
(assert (= (str.++ preC (str.++ stem47 sufC)) (str.++ unch147C (str.++ ch47C unch247C))))
(assert (= (str.++ preD (str.++ stem47 sufD)) (str.++ unch147D (str.++ ch47D unch247D))))
(assert (= (str.++ preE (str.++ stem47 sufE)) (str.++ unch147E (str.++ ch47E unch247E))))
(assert (= (str.++ preF (str.++ stem47 sufF)) (str.++ unch147F (str.++ ch47F unch247F))))
(assert (= (str.++ preG (str.++ stem47 sufG)) (str.++ unch147G (str.++ ch47G unch247G))))
(assert (= (str.++ preH (str.++ stem47 sufH)) (str.++ unch147H (str.++ ch47H unch247H))))
(assert (= "p2Bjisjkj" (str.++ unch147G (str.++ var47G unch247G))))
(assert (= "p2BHstH" (str.++ unch147H (str.++ var47H unch247H))))
(assert (= (str.len stem47) l47))
(assert (= (ite (= ch47A var47A) 0 1) sc47A))
(assert (= (ite (= ch47B var47B) 0 1) sc47B))
(assert (= (ite (= ch47C var47C) 0 1) sc47C))
(assert (= (ite (= ch47D var47D) 0 1) sc47D))
(assert (= (ite (= ch47E var47E) 0 1) sc47E))
(assert (= (ite (= ch47F var47F) 0 1) sc47F))
(assert (= (ite (= ch47G var47G) 0 1) sc47G))
(assert (= (ite (= ch47H var47H) 0 1) sc47H))
(assert (<= sc47A 1))
(assert (<= sc47B 1))
(assert (<= sc47C 1))
(assert (<= sc47D 1))
(assert (<= sc47E 1))
(assert (<= sc47F 1))
(assert (<= sc47G 1))
(assert (<= sc47H 1))
(assert (<= (str.len var48A) 1))
(assert (<= (str.len var48B) 1))
(assert (<= (str.len var48C) 1))
(assert (<= (str.len var48D) 1))
(assert (<= (str.len var48E) 1))
(assert (<= (str.len var48F) 1))
(assert (<= (str.len var48G) 1))
(assert (<= (str.len var48H) 1))
(assert (= (str.++ preA (str.++ stem48 sufA)) (str.++ unch148A (str.++ ch48A unch248A))))
(assert (= (str.++ preB (str.++ stem48 sufB)) (str.++ unch148B (str.++ ch48B unch248B))))
(assert (= (str.++ preC (str.++ stem48 sufC)) (str.++ unch148C (str.++ ch48C unch248C))))
(assert (= (str.++ preD (str.++ stem48 sufD)) (str.++ unch148D (str.++ ch48D unch248D))))
(assert (= (str.++ preE (str.++ stem48 sufE)) (str.++ unch148E (str.++ ch48E unch248E))))
(assert (= (str.++ preF (str.++ stem48 sufF)) (str.++ unch148F (str.++ ch48F unch248F))))
(assert (= (str.++ preG (str.++ stem48 sufG)) (str.++ unch148G (str.++ ch48G unch248G))))
(assert (= (str.++ preH (str.++ stem48 sufH)) (str.++ unch148H (str.++ ch48H unch248H))))
(assert (= "zOmjikj" (str.++ unch148G (str.++ var48G unch248G))))
(assert (= "zOmHtH" (str.++ unch148H (str.++ var48H unch248H))))
(assert (= (str.len stem48) l48))
(assert (= (ite (= ch48A var48A) 0 1) sc48A))
(assert (= (ite (= ch48B var48B) 0 1) sc48B))
(assert (= (ite (= ch48C var48C) 0 1) sc48C))
(assert (= (ite (= ch48D var48D) 0 1) sc48D))
(assert (= (ite (= ch48E var48E) 0 1) sc48E))
(assert (= (ite (= ch48F var48F) 0 1) sc48F))
(assert (= (ite (= ch48G var48G) 0 1) sc48G))
(assert (= (ite (= ch48H var48H) 0 1) sc48H))
(assert (<= sc48A 1))
(assert (<= sc48B 1))
(assert (<= sc48C 1))
(assert (<= sc48D 1))
(assert (<= sc48E 1))
(assert (<= sc48F 1))
(assert (<= sc48G 1))
(assert (<= sc48H 1))
(assert (<= (str.len var49A) 1))
(assert (<= (str.len var49B) 1))
(assert (<= (str.len var49C) 1))
(assert (<= (str.len var49D) 1))
(assert (<= (str.len var49E) 1))
(assert (<= (str.len var49F) 1))
(assert (<= (str.len var49G) 1))
(assert (<= (str.len var49H) 1))
(assert (= (str.++ preA (str.++ stem49 sufA)) (str.++ unch149A (str.++ ch49A unch249A))))
(assert (= (str.++ preB (str.++ stem49 sufB)) (str.++ unch149B (str.++ ch49B unch249B))))
(assert (= (str.++ preC (str.++ stem49 sufC)) (str.++ unch149C (str.++ ch49C unch249C))))
(assert (= (str.++ preD (str.++ stem49 sufD)) (str.++ unch149D (str.++ ch49D unch249D))))
(assert (= (str.++ preE (str.++ stem49 sufE)) (str.++ unch149E (str.++ ch49E unch249E))))
(assert (= (str.++ preF (str.++ stem49 sufF)) (str.++ unch149F (str.++ ch49F unch249F))))
(assert (= (str.++ preG (str.++ stem49 sufG)) (str.++ unch149G (str.++ ch49G unch249G))))
(assert (= (str.++ preH (str.++ stem49 sufH)) (str.++ unch149H (str.++ ch49H unch249H))))
(assert (= "skOtHrjkj" (str.++ unch149G (str.++ var49G unch249G))))
(assert (= "skOtHrtH" (str.++ unch149H (str.++ var49H unch249H))))
(assert (= (str.len stem49) l49))
(assert (= (ite (= ch49A var49A) 0 1) sc49A))
(assert (= (ite (= ch49B var49B) 0 1) sc49B))
(assert (= (ite (= ch49C var49C) 0 1) sc49C))
(assert (= (ite (= ch49D var49D) 0 1) sc49D))
(assert (= (ite (= ch49E var49E) 0 1) sc49E))
(assert (= (ite (= ch49F var49F) 0 1) sc49F))
(assert (= (ite (= ch49G var49G) 0 1) sc49G))
(assert (= (ite (= ch49H var49H) 0 1) sc49H))
(assert (<= sc49A 1))
(assert (<= sc49B 1))
(assert (<= sc49C 1))
(assert (<= sc49D 1))
(assert (<= sc49E 1))
(assert (<= sc49F 1))
(assert (<= sc49G 1))
(assert (<= sc49H 1))
(assert (<= (str.len var50A) 1))
(assert (<= (str.len var50B) 1))
(assert (<= (str.len var50C) 1))
(assert (<= (str.len var50D) 1))
(assert (<= (str.len var50E) 1))
(assert (<= (str.len var50F) 1))
(assert (<= (str.len var50G) 1))
(assert (<= (str.len var50H) 1))
(assert (= (str.++ preA (str.++ stem50 sufA)) (str.++ unch150A (str.++ ch50A unch250A))))
(assert (= (str.++ preB (str.++ stem50 sufB)) (str.++ unch150B (str.++ ch50B unch250B))))
(assert (= (str.++ preC (str.++ stem50 sufC)) (str.++ unch150C (str.++ ch50C unch250C))))
(assert (= (str.++ preD (str.++ stem50 sufD)) (str.++ unch150D (str.++ ch50D unch250D))))
(assert (= (str.++ preE (str.++ stem50 sufE)) (str.++ unch150E (str.++ ch50E unch250E))))
(assert (= (str.++ preF (str.++ stem50 sufF)) (str.++ unch150F (str.++ ch50F unch250F))))
(assert (= (str.++ preG (str.++ stem50 sufG)) (str.++ unch150G (str.++ ch50G unch250G))))
(assert (= (str.++ preH (str.++ stem50 sufH)) (str.++ unch150H (str.++ ch50H unch250H))))
(assert (= "kjXsjkj" (str.++ unch150G (str.++ var50G unch250G))))
(assert (= "k2stH" (str.++ unch150H (str.++ var50H unch250H))))
(assert (= (str.len stem50) l50))
(assert (= (ite (= ch50A var50A) 0 1) sc50A))
(assert (= (ite (= ch50B var50B) 0 1) sc50B))
(assert (= (ite (= ch50C var50C) 0 1) sc50C))
(assert (= (ite (= ch50D var50D) 0 1) sc50D))
(assert (= (ite (= ch50E var50E) 0 1) sc50E))
(assert (= (ite (= ch50F var50F) 0 1) sc50F))
(assert (= (ite (= ch50G var50G) 0 1) sc50G))
(assert (= (ite (= ch50H var50H) 0 1) sc50H))
(assert (<= sc50A 1))
(assert (<= sc50B 1))
(assert (<= sc50C 1))
(assert (<= sc50D 1))
(assert (<= sc50E 1))
(assert (<= sc50F 1))
(assert (<= sc50G 1))
(assert (<= sc50H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      sc7G
      sc7H
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      sc8G
      sc8H
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      sc9G
      sc9H
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      sc10G
      sc10H
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      sc11G
      sc11H
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      sc12G
      sc12H
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      sc13G
      sc13H
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      sc14G
      sc14H
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      sc15G
      sc15H
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      sc16G
      sc16H
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      sc17G
      sc17H
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      sc18G
      sc18H
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      sc19G
      sc19H
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      sc20G
      sc20H
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      sc21G
      sc21H
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      sc22G
      sc22H
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      sc23G
      sc23H
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      sc24G
      sc24H
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      sc25G
      sc25H
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      sc26G
      sc26H
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      sc27G
      sc27H
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      sc28G
      sc28H
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      sc29G
      sc29H
      0
      sc30A
      sc30B
      sc30C
      sc30D
      sc30E
      sc30F
      sc30G
      sc30H
      0
      sc31A
      sc31B
      sc31C
      sc31D
      sc31E
      sc31F
      sc31G
      sc31H
      0
      sc32A
      sc32B
      sc32C
      sc32D
      sc32E
      sc32F
      sc32G
      sc32H
      0
      sc33A
      sc33B
      sc33C
      sc33D
      sc33E
      sc33F
      sc33G
      sc33H
      0
      sc34A
      sc34B
      sc34C
      sc34D
      sc34E
      sc34F
      sc34G
      sc34H
      0
      sc35A
      sc35B
      sc35C
      sc35D
      sc35E
      sc35F
      sc35G
      sc35H
      0
      sc36A
      sc36B
      sc36C
      sc36D
      sc36E
      sc36F
      sc36G
      sc36H
      0
      sc37A
      sc37B
      sc37C
      sc37D
      sc37E
      sc37F
      sc37G
      sc37H
      0
      sc38A
      sc38B
      sc38C
      sc38D
      sc38E
      sc38F
      sc38G
      sc38H
      0
      sc39A
      sc39B
      sc39C
      sc39D
      sc39E
      sc39F
      sc39G
      sc39H
      0
      sc40A
      sc40B
      sc40C
      sc40D
      sc40E
      sc40F
      sc40G
      sc40H
      0
      sc41A
      sc41B
      sc41C
      sc41D
      sc41E
      sc41F
      sc41G
      sc41H
      0
      sc42A
      sc42B
      sc42C
      sc42D
      sc42E
      sc42F
      sc42G
      sc42H
      0
      sc43A
      sc43B
      sc43C
      sc43D
      sc43E
      sc43F
      sc43G
      sc43H
      0
      sc44A
      sc44B
      sc44C
      sc44D
      sc44E
      sc44F
      sc44G
      sc44H
      0
      sc45A
      sc45B
      sc45C
      sc45D
      sc45E
      sc45F
      sc45G
      sc45H
      0
      sc46A
      sc46B
      sc46C
      sc46D
      sc46E
      sc46F
      sc46G
      sc46H
      0
      sc47A
      sc47B
      sc47C
      sc47D
      sc47E
      sc47F
      sc47G
      sc47H
      0
      sc48A
      sc48B
      sc48C
      sc48D
      sc48E
      sc48F
      sc48G
      sc48H
      0
      sc49A
      sc49B
      sc49C
      sc49D
      sc49E
      sc49F
      sc49G
      sc49H
      0
      sc50A
      sc50B
      sc50C
      sc50D
      sc50E
      sc50F
      sc50G
      sc50H)
   5))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun var7G () String)
(declare-fun var7H () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun unch27G () String)
(declare-fun ch7G () String)
(declare-fun unch17G () String)
(declare-fun unch27H () String)
(declare-fun ch7H () String)
(declare-fun unch17H () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun sc7G () Int)
(declare-fun sc7H () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun var8G () String)
(declare-fun var8H () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun unch28G () String)
(declare-fun ch8G () String)
(declare-fun unch18G () String)
(declare-fun unch28H () String)
(declare-fun ch8H () String)
(declare-fun unch18H () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun sc8G () Int)
(declare-fun sc8H () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun var9G () String)
(declare-fun var9H () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun unch29G () String)
(declare-fun ch9G () String)
(declare-fun unch19G () String)
(declare-fun unch29H () String)
(declare-fun ch9H () String)
(declare-fun unch19H () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun sc9G () Int)
(declare-fun sc9H () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun var10G () String)
(declare-fun var10H () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun unch210G () String)
(declare-fun ch10G () String)
(declare-fun unch110G () String)
(declare-fun unch210H () String)
(declare-fun ch10H () String)
(declare-fun unch110H () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun sc10G () Int)
(declare-fun sc10H () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun var11G () String)
(declare-fun var11H () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun unch211G () String)
(declare-fun ch11G () String)
(declare-fun unch111G () String)
(declare-fun unch211H () String)
(declare-fun ch11H () String)
(declare-fun unch111H () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun sc11G () Int)
(declare-fun sc11H () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun var12G () String)
(declare-fun var12H () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun unch212G () String)
(declare-fun ch12G () String)
(declare-fun unch112G () String)
(declare-fun unch212H () String)
(declare-fun ch12H () String)
(declare-fun unch112H () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun sc12G () Int)
(declare-fun sc12H () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun var13G () String)
(declare-fun var13H () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun unch213G () String)
(declare-fun ch13G () String)
(declare-fun unch113G () String)
(declare-fun unch213H () String)
(declare-fun ch13H () String)
(declare-fun unch113H () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun sc13G () Int)
(declare-fun sc13H () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun var14G () String)
(declare-fun var14H () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun unch214G () String)
(declare-fun ch14G () String)
(declare-fun unch114G () String)
(declare-fun unch214H () String)
(declare-fun ch14H () String)
(declare-fun unch114H () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun sc14G () Int)
(declare-fun sc14H () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun var15G () String)
(declare-fun var15H () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun unch215G () String)
(declare-fun ch15G () String)
(declare-fun unch115G () String)
(declare-fun unch215H () String)
(declare-fun ch15H () String)
(declare-fun unch115H () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun sc15G () Int)
(declare-fun sc15H () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun var16G () String)
(declare-fun var16H () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun unch216G () String)
(declare-fun ch16G () String)
(declare-fun unch116G () String)
(declare-fun unch216H () String)
(declare-fun ch16H () String)
(declare-fun unch116H () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun sc16G () Int)
(declare-fun sc16H () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun var17G () String)
(declare-fun var17H () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun unch217G () String)
(declare-fun ch17G () String)
(declare-fun unch117G () String)
(declare-fun unch217H () String)
(declare-fun ch17H () String)
(declare-fun unch117H () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun sc17G () Int)
(declare-fun sc17H () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun var18G () String)
(declare-fun var18H () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun unch218G () String)
(declare-fun ch18G () String)
(declare-fun unch118G () String)
(declare-fun unch218H () String)
(declare-fun ch18H () String)
(declare-fun unch118H () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun sc18G () Int)
(declare-fun sc18H () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun var19G () String)
(declare-fun var19H () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun unch219G () String)
(declare-fun ch19G () String)
(declare-fun unch119G () String)
(declare-fun unch219H () String)
(declare-fun ch19H () String)
(declare-fun unch119H () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun sc19G () Int)
(declare-fun sc19H () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun var20G () String)
(declare-fun var20H () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun unch220G () String)
(declare-fun ch20G () String)
(declare-fun unch120G () String)
(declare-fun unch220H () String)
(declare-fun ch20H () String)
(declare-fun unch120H () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun sc20G () Int)
(declare-fun sc20H () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun var21G () String)
(declare-fun var21H () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun unch221G () String)
(declare-fun ch21G () String)
(declare-fun unch121G () String)
(declare-fun unch221H () String)
(declare-fun ch21H () String)
(declare-fun unch121H () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun sc21G () Int)
(declare-fun sc21H () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun var22G () String)
(declare-fun var22H () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun unch222G () String)
(declare-fun ch22G () String)
(declare-fun unch122G () String)
(declare-fun unch222H () String)
(declare-fun ch22H () String)
(declare-fun unch122H () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun sc22G () Int)
(declare-fun sc22H () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun var23G () String)
(declare-fun var23H () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun unch223G () String)
(declare-fun ch23G () String)
(declare-fun unch123G () String)
(declare-fun unch223H () String)
(declare-fun ch23H () String)
(declare-fun unch123H () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun sc23G () Int)
(declare-fun sc23H () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun var24G () String)
(declare-fun var24H () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun unch224G () String)
(declare-fun ch24G () String)
(declare-fun unch124G () String)
(declare-fun unch224H () String)
(declare-fun ch24H () String)
(declare-fun unch124H () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun sc24G () Int)
(declare-fun sc24H () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun var25G () String)
(declare-fun var25H () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun unch225G () String)
(declare-fun ch25G () String)
(declare-fun unch125G () String)
(declare-fun unch225H () String)
(declare-fun ch25H () String)
(declare-fun unch125H () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun sc25G () Int)
(declare-fun sc25H () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun var26G () String)
(declare-fun var26H () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun unch226G () String)
(declare-fun ch26G () String)
(declare-fun unch126G () String)
(declare-fun unch226H () String)
(declare-fun ch26H () String)
(declare-fun unch126H () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun sc26G () Int)
(declare-fun sc26H () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun var27G () String)
(declare-fun var27H () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun unch227G () String)
(declare-fun ch27G () String)
(declare-fun unch127G () String)
(declare-fun unch227H () String)
(declare-fun ch27H () String)
(declare-fun unch127H () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun sc27G () Int)
(declare-fun sc27H () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun var28G () String)
(declare-fun var28H () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun unch228G () String)
(declare-fun ch28G () String)
(declare-fun unch128G () String)
(declare-fun unch228H () String)
(declare-fun ch28H () String)
(declare-fun unch128H () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun sc28G () Int)
(declare-fun sc28H () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun var29G () String)
(declare-fun var29H () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun unch229G () String)
(declare-fun ch29G () String)
(declare-fun unch129G () String)
(declare-fun unch229H () String)
(declare-fun ch29H () String)
(declare-fun unch129H () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun sc29G () Int)
(declare-fun sc29H () Int)
(declare-fun var30A () String)
(declare-fun var30B () String)
(declare-fun var30C () String)
(declare-fun var30D () String)
(declare-fun var30E () String)
(declare-fun var30F () String)
(declare-fun var30G () String)
(declare-fun var30H () String)
(declare-fun unch230A () String)
(declare-fun ch30A () String)
(declare-fun unch130A () String)
(declare-fun stem30 () String)
(declare-fun unch230B () String)
(declare-fun ch30B () String)
(declare-fun unch130B () String)
(declare-fun unch230C () String)
(declare-fun ch30C () String)
(declare-fun unch130C () String)
(declare-fun unch230D () String)
(declare-fun ch30D () String)
(declare-fun unch130D () String)
(declare-fun unch230E () String)
(declare-fun ch30E () String)
(declare-fun unch130E () String)
(declare-fun unch230F () String)
(declare-fun ch30F () String)
(declare-fun unch130F () String)
(declare-fun unch230G () String)
(declare-fun ch30G () String)
(declare-fun unch130G () String)
(declare-fun unch230H () String)
(declare-fun ch30H () String)
(declare-fun unch130H () String)
(declare-fun l30 () Int)
(declare-fun sc30A () Int)
(declare-fun sc30B () Int)
(declare-fun sc30C () Int)
(declare-fun sc30D () Int)
(declare-fun sc30E () Int)
(declare-fun sc30F () Int)
(declare-fun sc30G () Int)
(declare-fun sc30H () Int)
(declare-fun var31A () String)
(declare-fun var31B () String)
(declare-fun var31C () String)
(declare-fun var31D () String)
(declare-fun var31E () String)
(declare-fun var31F () String)
(declare-fun var31G () String)
(declare-fun var31H () String)
(declare-fun unch231A () String)
(declare-fun ch31A () String)
(declare-fun unch131A () String)
(declare-fun stem31 () String)
(declare-fun unch231B () String)
(declare-fun ch31B () String)
(declare-fun unch131B () String)
(declare-fun unch231C () String)
(declare-fun ch31C () String)
(declare-fun unch131C () String)
(declare-fun unch231D () String)
(declare-fun ch31D () String)
(declare-fun unch131D () String)
(declare-fun unch231E () String)
(declare-fun ch31E () String)
(declare-fun unch131E () String)
(declare-fun unch231F () String)
(declare-fun ch31F () String)
(declare-fun unch131F () String)
(declare-fun unch231G () String)
(declare-fun ch31G () String)
(declare-fun unch131G () String)
(declare-fun unch231H () String)
(declare-fun ch31H () String)
(declare-fun unch131H () String)
(declare-fun l31 () Int)
(declare-fun sc31A () Int)
(declare-fun sc31B () Int)
(declare-fun sc31C () Int)
(declare-fun sc31D () Int)
(declare-fun sc31E () Int)
(declare-fun sc31F () Int)
(declare-fun sc31G () Int)
(declare-fun sc31H () Int)
(declare-fun var32A () String)
(declare-fun var32B () String)
(declare-fun var32C () String)
(declare-fun var32D () String)
(declare-fun var32E () String)
(declare-fun var32F () String)
(declare-fun var32G () String)
(declare-fun var32H () String)
(declare-fun unch232A () String)
(declare-fun ch32A () String)
(declare-fun unch132A () String)
(declare-fun stem32 () String)
(declare-fun unch232B () String)
(declare-fun ch32B () String)
(declare-fun unch132B () String)
(declare-fun unch232C () String)
(declare-fun ch32C () String)
(declare-fun unch132C () String)
(declare-fun unch232D () String)
(declare-fun ch32D () String)
(declare-fun unch132D () String)
(declare-fun unch232E () String)
(declare-fun ch32E () String)
(declare-fun unch132E () String)
(declare-fun unch232F () String)
(declare-fun ch32F () String)
(declare-fun unch132F () String)
(declare-fun unch232G () String)
(declare-fun ch32G () String)
(declare-fun unch132G () String)
(declare-fun unch232H () String)
(declare-fun ch32H () String)
(declare-fun unch132H () String)
(declare-fun l32 () Int)
(declare-fun sc32A () Int)
(declare-fun sc32B () Int)
(declare-fun sc32C () Int)
(declare-fun sc32D () Int)
(declare-fun sc32E () Int)
(declare-fun sc32F () Int)
(declare-fun sc32G () Int)
(declare-fun sc32H () Int)
(declare-fun var33A () String)
(declare-fun var33B () String)
(declare-fun var33C () String)
(declare-fun var33D () String)
(declare-fun var33E () String)
(declare-fun var33F () String)
(declare-fun var33G () String)
(declare-fun var33H () String)
(declare-fun unch233A () String)
(declare-fun ch33A () String)
(declare-fun unch133A () String)
(declare-fun stem33 () String)
(declare-fun unch233B () String)
(declare-fun ch33B () String)
(declare-fun unch133B () String)
(declare-fun unch233C () String)
(declare-fun ch33C () String)
(declare-fun unch133C () String)
(declare-fun unch233D () String)
(declare-fun ch33D () String)
(declare-fun unch133D () String)
(declare-fun unch233E () String)
(declare-fun ch33E () String)
(declare-fun unch133E () String)
(declare-fun unch233F () String)
(declare-fun ch33F () String)
(declare-fun unch133F () String)
(declare-fun unch233G () String)
(declare-fun ch33G () String)
(declare-fun unch133G () String)
(declare-fun unch233H () String)
(declare-fun ch33H () String)
(declare-fun unch133H () String)
(declare-fun l33 () Int)
(declare-fun sc33A () Int)
(declare-fun sc33B () Int)
(declare-fun sc33C () Int)
(declare-fun sc33D () Int)
(declare-fun sc33E () Int)
(declare-fun sc33F () Int)
(declare-fun sc33G () Int)
(declare-fun sc33H () Int)
(declare-fun var34A () String)
(declare-fun var34B () String)
(declare-fun var34C () String)
(declare-fun var34D () String)
(declare-fun var34E () String)
(declare-fun var34F () String)
(declare-fun var34G () String)
(declare-fun var34H () String)
(declare-fun unch234A () String)
(declare-fun ch34A () String)
(declare-fun unch134A () String)
(declare-fun stem34 () String)
(declare-fun unch234B () String)
(declare-fun ch34B () String)
(declare-fun unch134B () String)
(declare-fun unch234C () String)
(declare-fun ch34C () String)
(declare-fun unch134C () String)
(declare-fun unch234D () String)
(declare-fun ch34D () String)
(declare-fun unch134D () String)
(declare-fun unch234E () String)
(declare-fun ch34E () String)
(declare-fun unch134E () String)
(declare-fun unch234F () String)
(declare-fun ch34F () String)
(declare-fun unch134F () String)
(declare-fun unch234G () String)
(declare-fun ch34G () String)
(declare-fun unch134G () String)
(declare-fun unch234H () String)
(declare-fun ch34H () String)
(declare-fun unch134H () String)
(declare-fun l34 () Int)
(declare-fun sc34A () Int)
(declare-fun sc34B () Int)
(declare-fun sc34C () Int)
(declare-fun sc34D () Int)
(declare-fun sc34E () Int)
(declare-fun sc34F () Int)
(declare-fun sc34G () Int)
(declare-fun sc34H () Int)
(declare-fun var35A () String)
(declare-fun var35B () String)
(declare-fun var35C () String)
(declare-fun var35D () String)
(declare-fun var35E () String)
(declare-fun var35F () String)
(declare-fun var35G () String)
(declare-fun var35H () String)
(declare-fun unch235A () String)
(declare-fun ch35A () String)
(declare-fun unch135A () String)
(declare-fun stem35 () String)
(declare-fun unch235B () String)
(declare-fun ch35B () String)
(declare-fun unch135B () String)
(declare-fun unch235C () String)
(declare-fun ch35C () String)
(declare-fun unch135C () String)
(declare-fun unch235D () String)
(declare-fun ch35D () String)
(declare-fun unch135D () String)
(declare-fun unch235E () String)
(declare-fun ch35E () String)
(declare-fun unch135E () String)
(declare-fun unch235F () String)
(declare-fun ch35F () String)
(declare-fun unch135F () String)
(declare-fun unch235G () String)
(declare-fun ch35G () String)
(declare-fun unch135G () String)
(declare-fun unch235H () String)
(declare-fun ch35H () String)
(declare-fun unch135H () String)
(declare-fun l35 () Int)
(declare-fun sc35A () Int)
(declare-fun sc35B () Int)
(declare-fun sc35C () Int)
(declare-fun sc35D () Int)
(declare-fun sc35E () Int)
(declare-fun sc35F () Int)
(declare-fun sc35G () Int)
(declare-fun sc35H () Int)
(declare-fun var36A () String)
(declare-fun var36B () String)
(declare-fun var36C () String)
(declare-fun var36D () String)
(declare-fun var36E () String)
(declare-fun var36F () String)
(declare-fun var36G () String)
(declare-fun var36H () String)
(declare-fun unch236A () String)
(declare-fun ch36A () String)
(declare-fun unch136A () String)
(declare-fun stem36 () String)
(declare-fun unch236B () String)
(declare-fun ch36B () String)
(declare-fun unch136B () String)
(declare-fun unch236C () String)
(declare-fun ch36C () String)
(declare-fun unch136C () String)
(declare-fun unch236D () String)
(declare-fun ch36D () String)
(declare-fun unch136D () String)
(declare-fun unch236E () String)
(declare-fun ch36E () String)
(declare-fun unch136E () String)
(declare-fun unch236F () String)
(declare-fun ch36F () String)
(declare-fun unch136F () String)
(declare-fun unch236G () String)
(declare-fun ch36G () String)
(declare-fun unch136G () String)
(declare-fun unch236H () String)
(declare-fun ch36H () String)
(declare-fun unch136H () String)
(declare-fun l36 () Int)
(declare-fun sc36A () Int)
(declare-fun sc36B () Int)
(declare-fun sc36C () Int)
(declare-fun sc36D () Int)
(declare-fun sc36E () Int)
(declare-fun sc36F () Int)
(declare-fun sc36G () Int)
(declare-fun sc36H () Int)
(declare-fun var37A () String)
(declare-fun var37B () String)
(declare-fun var37C () String)
(declare-fun var37D () String)
(declare-fun var37E () String)
(declare-fun var37F () String)
(declare-fun var37G () String)
(declare-fun var37H () String)
(declare-fun unch237A () String)
(declare-fun ch37A () String)
(declare-fun unch137A () String)
(declare-fun stem37 () String)
(declare-fun unch237B () String)
(declare-fun ch37B () String)
(declare-fun unch137B () String)
(declare-fun unch237C () String)
(declare-fun ch37C () String)
(declare-fun unch137C () String)
(declare-fun unch237D () String)
(declare-fun ch37D () String)
(declare-fun unch137D () String)
(declare-fun unch237E () String)
(declare-fun ch37E () String)
(declare-fun unch137E () String)
(declare-fun unch237F () String)
(declare-fun ch37F () String)
(declare-fun unch137F () String)
(declare-fun unch237G () String)
(declare-fun ch37G () String)
(declare-fun unch137G () String)
(declare-fun unch237H () String)
(declare-fun ch37H () String)
(declare-fun unch137H () String)
(declare-fun l37 () Int)
(declare-fun sc37A () Int)
(declare-fun sc37B () Int)
(declare-fun sc37C () Int)
(declare-fun sc37D () Int)
(declare-fun sc37E () Int)
(declare-fun sc37F () Int)
(declare-fun sc37G () Int)
(declare-fun sc37H () Int)
(declare-fun var38A () String)
(declare-fun var38B () String)
(declare-fun var38C () String)
(declare-fun var38D () String)
(declare-fun var38E () String)
(declare-fun var38F () String)
(declare-fun var38G () String)
(declare-fun var38H () String)
(declare-fun unch238A () String)
(declare-fun ch38A () String)
(declare-fun unch138A () String)
(declare-fun stem38 () String)
(declare-fun unch238B () String)
(declare-fun ch38B () String)
(declare-fun unch138B () String)
(declare-fun unch238C () String)
(declare-fun ch38C () String)
(declare-fun unch138C () String)
(declare-fun unch238D () String)
(declare-fun ch38D () String)
(declare-fun unch138D () String)
(declare-fun unch238E () String)
(declare-fun ch38E () String)
(declare-fun unch138E () String)
(declare-fun unch238F () String)
(declare-fun ch38F () String)
(declare-fun unch138F () String)
(declare-fun unch238G () String)
(declare-fun ch38G () String)
(declare-fun unch138G () String)
(declare-fun unch238H () String)
(declare-fun ch38H () String)
(declare-fun unch138H () String)
(declare-fun l38 () Int)
(declare-fun sc38A () Int)
(declare-fun sc38B () Int)
(declare-fun sc38C () Int)
(declare-fun sc38D () Int)
(declare-fun sc38E () Int)
(declare-fun sc38F () Int)
(declare-fun sc38G () Int)
(declare-fun sc38H () Int)
(declare-fun var39A () String)
(declare-fun var39B () String)
(declare-fun var39C () String)
(declare-fun var39D () String)
(declare-fun var39E () String)
(declare-fun var39F () String)
(declare-fun var39G () String)
(declare-fun var39H () String)
(declare-fun unch239A () String)
(declare-fun ch39A () String)
(declare-fun unch139A () String)
(declare-fun stem39 () String)
(declare-fun unch239B () String)
(declare-fun ch39B () String)
(declare-fun unch139B () String)
(declare-fun unch239C () String)
(declare-fun ch39C () String)
(declare-fun unch139C () String)
(declare-fun unch239D () String)
(declare-fun ch39D () String)
(declare-fun unch139D () String)
(declare-fun unch239E () String)
(declare-fun ch39E () String)
(declare-fun unch139E () String)
(declare-fun unch239F () String)
(declare-fun ch39F () String)
(declare-fun unch139F () String)
(declare-fun unch239G () String)
(declare-fun ch39G () String)
(declare-fun unch139G () String)
(declare-fun unch239H () String)
(declare-fun ch39H () String)
(declare-fun unch139H () String)
(declare-fun l39 () Int)
(declare-fun sc39A () Int)
(declare-fun sc39B () Int)
(declare-fun sc39C () Int)
(declare-fun sc39D () Int)
(declare-fun sc39E () Int)
(declare-fun sc39F () Int)
(declare-fun sc39G () Int)
(declare-fun sc39H () Int)
(declare-fun var40A () String)
(declare-fun var40B () String)
(declare-fun var40C () String)
(declare-fun var40D () String)
(declare-fun var40E () String)
(declare-fun var40F () String)
(declare-fun var40G () String)
(declare-fun var40H () String)
(declare-fun unch240A () String)
(declare-fun ch40A () String)
(declare-fun unch140A () String)
(declare-fun stem40 () String)
(declare-fun unch240B () String)
(declare-fun ch40B () String)
(declare-fun unch140B () String)
(declare-fun unch240C () String)
(declare-fun ch40C () String)
(declare-fun unch140C () String)
(declare-fun unch240D () String)
(declare-fun ch40D () String)
(declare-fun unch140D () String)
(declare-fun unch240E () String)
(declare-fun ch40E () String)
(declare-fun unch140E () String)
(declare-fun unch240F () String)
(declare-fun ch40F () String)
(declare-fun unch140F () String)
(declare-fun unch240G () String)
(declare-fun ch40G () String)
(declare-fun unch140G () String)
(declare-fun unch240H () String)
(declare-fun ch40H () String)
(declare-fun unch140H () String)
(declare-fun l40 () Int)
(declare-fun sc40A () Int)
(declare-fun sc40B () Int)
(declare-fun sc40C () Int)
(declare-fun sc40D () Int)
(declare-fun sc40E () Int)
(declare-fun sc40F () Int)
(declare-fun sc40G () Int)
(declare-fun sc40H () Int)
(declare-fun var41A () String)
(declare-fun var41B () String)
(declare-fun var41C () String)
(declare-fun var41D () String)
(declare-fun var41E () String)
(declare-fun var41F () String)
(declare-fun var41G () String)
(declare-fun var41H () String)
(declare-fun unch241A () String)
(declare-fun ch41A () String)
(declare-fun unch141A () String)
(declare-fun stem41 () String)
(declare-fun unch241B () String)
(declare-fun ch41B () String)
(declare-fun unch141B () String)
(declare-fun unch241C () String)
(declare-fun ch41C () String)
(declare-fun unch141C () String)
(declare-fun unch241D () String)
(declare-fun ch41D () String)
(declare-fun unch141D () String)
(declare-fun unch241E () String)
(declare-fun ch41E () String)
(declare-fun unch141E () String)
(declare-fun unch241F () String)
(declare-fun ch41F () String)
(declare-fun unch141F () String)
(declare-fun unch241G () String)
(declare-fun ch41G () String)
(declare-fun unch141G () String)
(declare-fun unch241H () String)
(declare-fun ch41H () String)
(declare-fun unch141H () String)
(declare-fun l41 () Int)
(declare-fun sc41A () Int)
(declare-fun sc41B () Int)
(declare-fun sc41C () Int)
(declare-fun sc41D () Int)
(declare-fun sc41E () Int)
(declare-fun sc41F () Int)
(declare-fun sc41G () Int)
(declare-fun sc41H () Int)
(declare-fun var42A () String)
(declare-fun var42B () String)
(declare-fun var42C () String)
(declare-fun var42D () String)
(declare-fun var42E () String)
(declare-fun var42F () String)
(declare-fun var42G () String)
(declare-fun var42H () String)
(declare-fun unch242A () String)
(declare-fun ch42A () String)
(declare-fun unch142A () String)
(declare-fun stem42 () String)
(declare-fun unch242B () String)
(declare-fun ch42B () String)
(declare-fun unch142B () String)
(declare-fun unch242C () String)
(declare-fun ch42C () String)
(declare-fun unch142C () String)
(declare-fun unch242D () String)
(declare-fun ch42D () String)
(declare-fun unch142D () String)
(declare-fun unch242E () String)
(declare-fun ch42E () String)
(declare-fun unch142E () String)
(declare-fun unch242F () String)
(declare-fun ch42F () String)
(declare-fun unch142F () String)
(declare-fun unch242G () String)
(declare-fun ch42G () String)
(declare-fun unch142G () String)
(declare-fun unch242H () String)
(declare-fun ch42H () String)
(declare-fun unch142H () String)
(declare-fun l42 () Int)
(declare-fun sc42A () Int)
(declare-fun sc42B () Int)
(declare-fun sc42C () Int)
(declare-fun sc42D () Int)
(declare-fun sc42E () Int)
(declare-fun sc42F () Int)
(declare-fun sc42G () Int)
(declare-fun sc42H () Int)
(declare-fun var43A () String)
(declare-fun var43B () String)
(declare-fun var43C () String)
(declare-fun var43D () String)
(declare-fun var43E () String)
(declare-fun var43F () String)
(declare-fun var43G () String)
(declare-fun var43H () String)
(declare-fun unch243A () String)
(declare-fun ch43A () String)
(declare-fun unch143A () String)
(declare-fun stem43 () String)
(declare-fun unch243B () String)
(declare-fun ch43B () String)
(declare-fun unch143B () String)
(declare-fun unch243C () String)
(declare-fun ch43C () String)
(declare-fun unch143C () String)
(declare-fun unch243D () String)
(declare-fun ch43D () String)
(declare-fun unch143D () String)
(declare-fun unch243E () String)
(declare-fun ch43E () String)
(declare-fun unch143E () String)
(declare-fun unch243F () String)
(declare-fun ch43F () String)
(declare-fun unch143F () String)
(declare-fun unch243G () String)
(declare-fun ch43G () String)
(declare-fun unch143G () String)
(declare-fun unch243H () String)
(declare-fun ch43H () String)
(declare-fun unch143H () String)
(declare-fun l43 () Int)
(declare-fun sc43A () Int)
(declare-fun sc43B () Int)
(declare-fun sc43C () Int)
(declare-fun sc43D () Int)
(declare-fun sc43E () Int)
(declare-fun sc43F () Int)
(declare-fun sc43G () Int)
(declare-fun sc43H () Int)
(declare-fun var44A () String)
(declare-fun var44B () String)
(declare-fun var44C () String)
(declare-fun var44D () String)
(declare-fun var44E () String)
(declare-fun var44F () String)
(declare-fun var44G () String)
(declare-fun var44H () String)
(declare-fun unch244A () String)
(declare-fun ch44A () String)
(declare-fun unch144A () String)
(declare-fun stem44 () String)
(declare-fun unch244B () String)
(declare-fun ch44B () String)
(declare-fun unch144B () String)
(declare-fun unch244C () String)
(declare-fun ch44C () String)
(declare-fun unch144C () String)
(declare-fun unch244D () String)
(declare-fun ch44D () String)
(declare-fun unch144D () String)
(declare-fun unch244E () String)
(declare-fun ch44E () String)
(declare-fun unch144E () String)
(declare-fun unch244F () String)
(declare-fun ch44F () String)
(declare-fun unch144F () String)
(declare-fun unch244G () String)
(declare-fun ch44G () String)
(declare-fun unch144G () String)
(declare-fun unch244H () String)
(declare-fun ch44H () String)
(declare-fun unch144H () String)
(declare-fun l44 () Int)
(declare-fun sc44A () Int)
(declare-fun sc44B () Int)
(declare-fun sc44C () Int)
(declare-fun sc44D () Int)
(declare-fun sc44E () Int)
(declare-fun sc44F () Int)
(declare-fun sc44G () Int)
(declare-fun sc44H () Int)
(declare-fun var45A () String)
(declare-fun var45B () String)
(declare-fun var45C () String)
(declare-fun var45D () String)
(declare-fun var45E () String)
(declare-fun var45F () String)
(declare-fun var45G () String)
(declare-fun var45H () String)
(declare-fun unch245A () String)
(declare-fun ch45A () String)
(declare-fun unch145A () String)
(declare-fun stem45 () String)
(declare-fun unch245B () String)
(declare-fun ch45B () String)
(declare-fun unch145B () String)
(declare-fun unch245C () String)
(declare-fun ch45C () String)
(declare-fun unch145C () String)
(declare-fun unch245D () String)
(declare-fun ch45D () String)
(declare-fun unch145D () String)
(declare-fun unch245E () String)
(declare-fun ch45E () String)
(declare-fun unch145E () String)
(declare-fun unch245F () String)
(declare-fun ch45F () String)
(declare-fun unch145F () String)
(declare-fun unch245G () String)
(declare-fun ch45G () String)
(declare-fun unch145G () String)
(declare-fun unch245H () String)
(declare-fun ch45H () String)
(declare-fun unch145H () String)
(declare-fun l45 () Int)
(declare-fun sc45A () Int)
(declare-fun sc45B () Int)
(declare-fun sc45C () Int)
(declare-fun sc45D () Int)
(declare-fun sc45E () Int)
(declare-fun sc45F () Int)
(declare-fun sc45G () Int)
(declare-fun sc45H () Int)
(declare-fun var46A () String)
(declare-fun var46B () String)
(declare-fun var46C () String)
(declare-fun var46D () String)
(declare-fun var46E () String)
(declare-fun var46F () String)
(declare-fun var46G () String)
(declare-fun var46H () String)
(declare-fun unch246A () String)
(declare-fun ch46A () String)
(declare-fun unch146A () String)
(declare-fun stem46 () String)
(declare-fun unch246B () String)
(declare-fun ch46B () String)
(declare-fun unch146B () String)
(declare-fun unch246C () String)
(declare-fun ch46C () String)
(declare-fun unch146C () String)
(declare-fun unch246D () String)
(declare-fun ch46D () String)
(declare-fun unch146D () String)
(declare-fun unch246E () String)
(declare-fun ch46E () String)
(declare-fun unch146E () String)
(declare-fun unch246F () String)
(declare-fun ch46F () String)
(declare-fun unch146F () String)
(declare-fun unch246G () String)
(declare-fun ch46G () String)
(declare-fun unch146G () String)
(declare-fun unch246H () String)
(declare-fun ch46H () String)
(declare-fun unch146H () String)
(declare-fun l46 () Int)
(declare-fun sc46A () Int)
(declare-fun sc46B () Int)
(declare-fun sc46C () Int)
(declare-fun sc46D () Int)
(declare-fun sc46E () Int)
(declare-fun sc46F () Int)
(declare-fun sc46G () Int)
(declare-fun sc46H () Int)
(declare-fun var47A () String)
(declare-fun var47B () String)
(declare-fun var47C () String)
(declare-fun var47D () String)
(declare-fun var47E () String)
(declare-fun var47F () String)
(declare-fun var47G () String)
(declare-fun var47H () String)
(declare-fun unch247A () String)
(declare-fun ch47A () String)
(declare-fun unch147A () String)
(declare-fun stem47 () String)
(declare-fun unch247B () String)
(declare-fun ch47B () String)
(declare-fun unch147B () String)
(declare-fun unch247C () String)
(declare-fun ch47C () String)
(declare-fun unch147C () String)
(declare-fun unch247D () String)
(declare-fun ch47D () String)
(declare-fun unch147D () String)
(declare-fun unch247E () String)
(declare-fun ch47E () String)
(declare-fun unch147E () String)
(declare-fun unch247F () String)
(declare-fun ch47F () String)
(declare-fun unch147F () String)
(declare-fun unch247G () String)
(declare-fun ch47G () String)
(declare-fun unch147G () String)
(declare-fun unch247H () String)
(declare-fun ch47H () String)
(declare-fun unch147H () String)
(declare-fun l47 () Int)
(declare-fun sc47A () Int)
(declare-fun sc47B () Int)
(declare-fun sc47C () Int)
(declare-fun sc47D () Int)
(declare-fun sc47E () Int)
(declare-fun sc47F () Int)
(declare-fun sc47G () Int)
(declare-fun sc47H () Int)
(declare-fun var48A () String)
(declare-fun var48B () String)
(declare-fun var48C () String)
(declare-fun var48D () String)
(declare-fun var48E () String)
(declare-fun var48F () String)
(declare-fun var48G () String)
(declare-fun var48H () String)
(declare-fun unch248A () String)
(declare-fun ch48A () String)
(declare-fun unch148A () String)
(declare-fun stem48 () String)
(declare-fun unch248B () String)
(declare-fun ch48B () String)
(declare-fun unch148B () String)
(declare-fun unch248C () String)
(declare-fun ch48C () String)
(declare-fun unch148C () String)
(declare-fun unch248D () String)
(declare-fun ch48D () String)
(declare-fun unch148D () String)
(declare-fun unch248E () String)
(declare-fun ch48E () String)
(declare-fun unch148E () String)
(declare-fun unch248F () String)
(declare-fun ch48F () String)
(declare-fun unch148F () String)
(declare-fun unch248G () String)
(declare-fun ch48G () String)
(declare-fun unch148G () String)
(declare-fun unch248H () String)
(declare-fun ch48H () String)
(declare-fun unch148H () String)
(declare-fun l48 () Int)
(declare-fun sc48A () Int)
(declare-fun sc48B () Int)
(declare-fun sc48C () Int)
(declare-fun sc48D () Int)
(declare-fun sc48E () Int)
(declare-fun sc48F () Int)
(declare-fun sc48G () Int)
(declare-fun sc48H () Int)
(declare-fun var49A () String)
(declare-fun var49B () String)
(declare-fun var49C () String)
(declare-fun var49D () String)
(declare-fun var49E () String)
(declare-fun var49F () String)
(declare-fun var49G () String)
(declare-fun var49H () String)
(declare-fun unch249A () String)
(declare-fun ch49A () String)
(declare-fun unch149A () String)
(declare-fun stem49 () String)
(declare-fun unch249B () String)
(declare-fun ch49B () String)
(declare-fun unch149B () String)
(declare-fun unch249C () String)
(declare-fun ch49C () String)
(declare-fun unch149C () String)
(declare-fun unch249D () String)
(declare-fun ch49D () String)
(declare-fun unch149D () String)
(declare-fun unch249E () String)
(declare-fun ch49E () String)
(declare-fun unch149E () String)
(declare-fun unch249F () String)
(declare-fun ch49F () String)
(declare-fun unch149F () String)
(declare-fun unch249G () String)
(declare-fun ch49G () String)
(declare-fun unch149G () String)
(declare-fun unch249H () String)
(declare-fun ch49H () String)
(declare-fun unch149H () String)
(declare-fun l49 () Int)
(declare-fun sc49A () Int)
(declare-fun sc49B () Int)
(declare-fun sc49C () Int)
(declare-fun sc49D () Int)
(declare-fun sc49E () Int)
(declare-fun sc49F () Int)
(declare-fun sc49G () Int)
(declare-fun sc49H () Int)
(declare-fun var50A () String)
(declare-fun var50B () String)
(declare-fun var50C () String)
(declare-fun var50D () String)
(declare-fun var50E () String)
(declare-fun var50F () String)
(declare-fun var50G () String)
(declare-fun var50H () String)
(declare-fun unch250A () String)
(declare-fun ch50A () String)
(declare-fun unch150A () String)
(declare-fun stem50 () String)
(declare-fun unch250B () String)
(declare-fun ch50B () String)
(declare-fun unch150B () String)
(declare-fun unch250C () String)
(declare-fun ch50C () String)
(declare-fun unch150C () String)
(declare-fun unch250D () String)
(declare-fun ch50D () String)
(declare-fun unch150D () String)
(declare-fun unch250E () String)
(declare-fun ch50E () String)
(declare-fun unch150E () String)
(declare-fun unch250F () String)
(declare-fun ch50F () String)
(declare-fun unch150F () String)
(declare-fun unch250G () String)
(declare-fun ch50G () String)
(declare-fun unch150G () String)
(declare-fun unch250H () String)
(declare-fun ch50H () String)
(declare-fun unch150H () String)
(declare-fun l50 () Int)
(declare-fun sc50A () Int)
(declare-fun sc50B () Int)
(declare-fun sc50C () Int)
(declare-fun sc50D () Int)
(declare-fun sc50E () Int)
(declare-fun sc50F () Int)
(declare-fun sc50G () Int)
(declare-fun sc50H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "plOst" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "plastO" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "plasjkjX" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "skorZx" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "skoruxO" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "skorusjX" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "1jrjXx" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "1jrjixO" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "1jrjisjX" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "pastZx" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "pastuxO" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "pastusjX" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "mjnjZx" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "mjnjZxa" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "mjnjZsji" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "plZ1" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "plZ1a" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "plZzji" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "sjtjX1" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "st21a" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "st2zji" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (<= (str.len var7G) 1))
(assert (<= (str.len var7H) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= (str.++ preG (str.++ stem7 sufG)) (str.++ unch17G (str.++ ch7G unch27G))))
(assert (= (str.++ preH (str.++ stem7 sufH)) (str.++ unch17H (str.++ ch7H unch27H))))
(assert (= "sOk" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "sOka" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "sOtsji" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (= (ite (= ch7G var7G) 0 1) sc7G))
(assert (= (ite (= ch7H var7H) 0 1) sc7H))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= sc7G 1))
(assert (<= sc7H 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (<= (str.len var8G) 1))
(assert (<= (str.len var8H) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= (str.++ preG (str.++ stem8 sufG)) (str.++ unch18G (str.++ ch8G unch28G))))
(assert (= (str.++ preH (str.++ stem8 sufH)) (str.++ unch18H (str.++ ch8H unch28H))))
(assert (= "b3k" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "bHkO" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "bHtsjX" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (= (ite (= ch8G var8G) 0 1) sc8G))
(assert (= (ite (= ch8H var8H) 0 1) sc8H))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= sc8G 1))
(assert (<= sc8H 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (<= (str.len var9G) 1))
(assert (<= (str.len var9H) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= (str.++ preG (str.++ stem9 sufG)) (str.++ unch19G (str.++ ch9G unch29G))))
(assert (= (str.++ preH (str.++ stem9 sufH)) (str.++ unch19H (str.++ ch9H unch29H))))
(assert (= "l3st" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "lHstO" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "lHsjkjX" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (= (ite (= ch9G var9G) 0 1) sc9G))
(assert (= (ite (= ch9H var9H) 0 1) sc9H))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= sc9G 1))
(assert (<= sc9H 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (<= (str.len var10G) 1))
(assert (<= (str.len var10H) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= (str.++ preG (str.++ stem10 sufG)) (str.++ unch110G (str.++ ch10G unch210G))))
(assert (= (str.++ preH (str.++ stem10 sufH)) (str.++ unch110H (str.++ ch10H unch210H))))
(assert (= "l3st" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "l3sta" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "l3sjkji" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (= (ite (= ch10G var10G) 0 1) sc10G))
(assert (= (ite (= ch10H var10H) 0 1) sc10H))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= sc10G 1))
(assert (<= sc10H 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (<= (str.len var11G) 1))
(assert (<= (str.len var11H) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= (str.++ preG (str.++ stem11 sufG)) (str.++ unch111G (str.++ ch11G unch211G))))
(assert (= (str.++ preH (str.++ stem11 sufH)) (str.++ unch111H (str.++ ch11H unch211H))))
(assert (= "pjljXt" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "pl2ta" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "pl2kji" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (= (ite (= ch11G var11G) 0 1) sc11G))
(assert (= (ite (= ch11H var11H) 0 1) sc11H))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= sc11G 1))
(assert (<= sc11H 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (<= (str.len var12G) 1))
(assert (<= (str.len var12H) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= (str.++ preG (str.++ stem12 sufG)) (str.++ unch112G (str.++ ch12G unch212G))))
(assert (= (str.++ preH (str.++ stem12 sufH)) (str.++ unch112H (str.++ ch12H unch212H))))
(assert (= "sjmjrjXd" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "smr2da" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "smr2gji" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (= (ite (= ch12G var12G) 0 1) sc12G))
(assert (= (ite (= ch12H var12H) 0 1) sc12H))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= sc12G 1))
(assert (<= sc12H 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (<= (str.len var13G) 1))
(assert (<= (str.len var13H) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= (str.++ preG (str.++ stem13 sufG)) (str.++ unch113G (str.++ ch13G unch213G))))
(assert (= (str.++ preH (str.++ stem13 sufH)) (str.++ unch113H (str.++ ch13H unch213H))))
(assert (= "fjXst" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "fostO" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "fosjkjX" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (= (ite (= ch13G var13G) 0 1) sc13G))
(assert (= (ite (= ch13H var13H) 0 1) sc13H))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= sc13G 1))
(assert (<= sc13H 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (<= (str.len var14G) 1))
(assert (<= (str.len var14H) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= (str.++ preG (str.++ stem14 sufG)) (str.++ unch114G (str.++ ch14G unch214G))))
(assert (= (str.++ preH (str.++ stem14 sufH)) (str.++ unch114H (str.++ ch14H unch214H))))
(assert (= "mjXst" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "m2sta" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "m2sjkji" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (= (ite (= ch14G var14G) 0 1) sc14G))
(assert (= (ite (= ch14H var14H) 0 1) sc14H))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= sc14G 1))
(assert (<= sc14H 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (<= (str.len var15G) 1))
(assert (<= (str.len var15H) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= (str.++ preG (str.++ stem15 sufG)) (str.++ unch115G (str.++ ch15G unch215G))))
(assert (= (str.++ preH (str.++ stem15 sufH)) (str.++ unch115H (str.++ ch15H unch215H))))
(assert (= "ljXd" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "l4du" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "lHdZ" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (= (ite (= ch15G var15G) 0 1) sc15G))
(assert (= (ite (= ch15H var15H) 0 1) sc15H))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= sc15G 1))
(assert (<= sc15H 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (<= (str.len var16G) 1))
(assert (<= (str.len var16H) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= (str.++ preG (str.++ stem16 sufG)) (str.++ unch116G (str.++ ch16G unch216G))))
(assert (= (str.++ preH (str.++ stem16 sufH)) (str.++ unch116H (str.++ ch16H unch216H))))
(assert (= "djrjXt" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "dr2ta" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "dr2kji" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (= (ite (= ch16G var16G) 0 1) sc16G))
(assert (= (ite (= ch16H var16H) 0 1) sc16H))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= sc16G 1))
(assert (<= sc16H 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (<= (str.len var17G) 1))
(assert (<= (str.len var17H) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= (str.++ preG (str.++ stem17 sufG)) (str.++ unch117G (str.++ ch17G unch217G))))
(assert (= (str.++ preH (str.++ stem17 sufH)) (str.++ unch117H (str.++ ch17H unch217H))))
(assert (= "mjXd" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "m4du" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "mHdZ" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (= (ite (= ch17G var17G) 0 1) sc17G))
(assert (= (ite (= ch17H var17H) 0 1) sc17H))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= sc17G 1))
(assert (<= sc17H 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (<= (str.len var18G) 1))
(assert (<= (str.len var18H) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= (str.++ preG (str.++ stem18 sufG)) (str.++ unch118G (str.++ ch18G unch218G))))
(assert (= (str.++ preH (str.++ stem18 sufH)) (str.++ unch118H (str.++ ch18H unch218H))))
(assert (= "vjXl" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "volO" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "voljX" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (= (ite (= ch18G var18G) 0 1) sc18G))
(assert (= (ite (= ch18H var18H) 0 1) sc18H))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= sc18G 1))
(assert (<= sc18H 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (<= (str.len var19G) 1))
(assert (<= (str.len var19H) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= (str.++ preG (str.++ stem19 sufG)) (str.++ unch119G (str.++ ch19G unch219G))))
(assert (= (str.++ preH (str.++ stem19 sufH)) (str.++ unch119H (str.++ ch19H unch219H))))
(assert (= "vjXz" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "v2za" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "v2zji" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (= (ite (= ch19G var19G) 0 1) sc19G))
(assert (= (ite (= ch19H var19H) 0 1) sc19H))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= sc19G 1))
(assert (<= sc19H 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (<= (str.len var20G) 1))
(assert (<= (str.len var20H) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= (str.++ preG (str.++ stem20 sufG)) (str.++ unch120G (str.++ ch20G unch220G))))
(assert (= (str.++ preH (str.++ stem20 sufH)) (str.++ unch120H (str.++ ch20H unch220H))))
(assert (= "s3r" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "s3ra" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "s3rji" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (= (ite (= ch20G var20G) 0 1) sc20G))
(assert (= (ite (= ch20H var20H) 0 1) sc20H))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= sc20G 1))
(assert (<= sc20H 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (<= (str.len var21G) 1))
(assert (<= (str.len var21H) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= (str.++ preG (str.++ stem21 sufG)) (str.++ unch121G (str.++ ch21G unch221G))))
(assert (= (str.++ preH (str.++ stem21 sufH)) (str.++ unch121H (str.++ ch21H unch221H))))
(assert (= "sjnjXp" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "snopO" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "snopjX" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (= (ite (= ch21G var21G) 0 1) sc21G))
(assert (= (ite (= ch21H var21H) 0 1) sc21H))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= sc21G 1))
(assert (<= sc21H 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (<= (str.len var22G) 1))
(assert (<= (str.len var22H) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= (str.++ preG (str.++ stem22 sufG)) (str.++ unch122G (str.++ ch22G unch222G))))
(assert (= (str.++ preH (str.++ stem22 sufH)) (str.++ unch122H (str.++ ch22H unch222H))))
(assert (= "1r3b" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "1rHbO" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "1rHbjX" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (= (ite (= ch22G var22G) 0 1) sc22G))
(assert (= (ite (= ch22H var22H) 0 1) sc22H))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= sc22G 1))
(assert (<= sc22H 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (<= (str.len var23G) 1))
(assert (<= (str.len var23H) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= (str.++ preG (str.++ stem23 sufG)) (str.++ unch123G (str.++ ch23G unch223G))))
(assert (= (str.++ preH (str.++ stem23 sufH)) (str.++ unch123H (str.++ ch23H unch223H))))
(assert (= "l4bjid" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= "l4bHda" (str.++ unch123B (str.++ var23B unch223B))))
(assert (= "l4bHgji" (str.++ unch123C (str.++ var23C unch223C))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (= (ite (= ch23G var23G) 0 1) sc23G))
(assert (= (ite (= ch23H var23H) 0 1) sc23H))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= sc23G 1))
(assert (<= sc23H 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (<= (str.len var24G) 1))
(assert (<= (str.len var24H) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= (str.++ preG (str.++ stem24 sufG)) (str.++ unch124G (str.++ ch24G unch224G))))
(assert (= (str.++ preH (str.++ stem24 sufH)) (str.++ unch124H (str.++ ch24H unch224H))))
(assert (= "b4rji1" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= "b4rH1a" (str.++ unch124B (str.++ var24B unch224B))))
(assert (= "b4rHzji" (str.++ unch124C (str.++ var24C unch224C))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (= (ite (= ch24G var24G) 0 1) sc24G))
(assert (= (ite (= ch24H var24H) 0 1) sc24H))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= sc24G 1))
(assert (<= sc24H 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (<= (str.len var25G) 1))
(assert (<= (str.len var25H) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= (str.++ preG (str.++ stem25 sufG)) (str.++ unch125G (str.++ ch25G unch225G))))
(assert (= (str.++ preH (str.++ stem25 sufH)) (str.++ unch125H (str.++ ch25H unch225H))))
(assert (= "pHrjX1" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= "pHr21a" (str.++ unch125B (str.++ var25B unch225B))))
(assert (= "pHr2zji" (str.++ unch125C (str.++ var25C unch225C))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (= (ite (= ch25G var25G) 0 1) sc25G))
(assert (= (ite (= ch25H var25H) 0 1) sc25H))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= sc25G 1))
(assert (<= sc25H 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (<= (str.len var26G) 1))
(assert (<= (str.len var26H) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= (str.++ preG (str.++ stem26 sufG)) (str.++ unch126G (str.++ ch26G unch226G))))
(assert (= (str.++ preH (str.++ stem26 sufH)) (str.++ unch126H (str.++ ch26H unch226H))))
(assert (= "porjX1" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= "por21a" (str.++ unch126B (str.++ var26B unch226B))))
(assert (= "por2zji" (str.++ unch126C (str.++ var26C unch226C))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (= (ite (= ch26G var26G) 0 1) sc26G))
(assert (= (ite (= ch26H var26H) 0 1) sc26H))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= sc26G 1))
(assert (<= sc26H 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (<= (str.len var27G) 1))
(assert (<= (str.len var27H) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= (str.++ preG (str.++ stem27 sufG)) (str.++ unch127G (str.++ ch27G unch227G))))
(assert (= (str.++ preH (str.++ stem27 sufH)) (str.++ unch127H (str.++ ch27H unch227H))))
(assert (= "bolj3k" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= "boljHkO" (str.++ unch127B (str.++ var27B unch227B))))
(assert (= "boljHtsjX" (str.++ unch127C (str.++ var27C unch227C))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (= (ite (= ch27G var27G) 0 1) sc27G))
(assert (= (ite (= ch27H var27H) 0 1) sc27H))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= sc27G 1))
(assert (<= sc27H 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (<= (str.len var28G) 1))
(assert (<= (str.len var28H) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= (str.++ preG (str.++ stem28 sufG)) (str.++ unch128G (str.++ ch28G unch228G))))
(assert (= (str.++ preH (str.++ stem28 sufH)) (str.++ unch128H (str.++ ch28H unch228H))))
(assert (= "v2rji1" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= "v2ro1a" (str.++ unch128B (str.++ var28B unch228B))))
(assert (= "v2rozji" (str.++ unch128C (str.++ var28C unch228C))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (= (ite (= ch28G var28G) 0 1) sc28G))
(assert (= (ite (= ch28H var28H) 0 1) sc28H))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= sc28G 1))
(assert (<= sc28H 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (<= (str.len var29G) 1))
(assert (<= (str.len var29H) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= (str.++ preG (str.++ stem29 sufG)) (str.++ unch129G (str.++ ch29G unch229G))))
(assert (= (str.++ preH (str.++ stem29 sufH)) (str.++ unch129H (str.++ ch29H unch229H))))
(assert (= "k2nHk" (str.++ unch129A (str.++ var29A unch229A))))
(assert (= "k2nHka" (str.++ unch129B (str.++ var29B unch229B))))
(assert (= "k2nHtsji" (str.++ unch129C (str.++ var29C unch229C))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (= (ite (= ch29G var29G) 0 1) sc29G))
(assert (= (ite (= ch29H var29H) 0 1) sc29H))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= sc29G 1))
(assert (<= sc29H 1))
(assert (<= (str.len var30A) 1))
(assert (<= (str.len var30B) 1))
(assert (<= (str.len var30C) 1))
(assert (<= (str.len var30D) 1))
(assert (<= (str.len var30E) 1))
(assert (<= (str.len var30F) 1))
(assert (<= (str.len var30G) 1))
(assert (<= (str.len var30H) 1))
(assert (= (str.++ preA (str.++ stem30 sufA)) (str.++ unch130A (str.++ ch30A unch230A))))
(assert (= (str.++ preB (str.++ stem30 sufB)) (str.++ unch130B (str.++ ch30B unch230B))))
(assert (= (str.++ preC (str.++ stem30 sufC)) (str.++ unch130C (str.++ ch30C unch230C))))
(assert (= (str.++ preD (str.++ stem30 sufD)) (str.++ unch130D (str.++ ch30D unch230D))))
(assert (= (str.++ preE (str.++ stem30 sufE)) (str.++ unch130E (str.++ ch30E unch230E))))
(assert (= (str.++ preF (str.++ stem30 sufF)) (str.++ unch130F (str.++ ch30F unch230F))))
(assert (= (str.++ preG (str.++ stem30 sufG)) (str.++ unch130G (str.++ ch30G unch230G))))
(assert (= (str.++ preH (str.++ stem30 sufH)) (str.++ unch130H (str.++ ch30H unch230H))))
(assert (= "p2tjik" (str.++ unch130A (str.++ var30A unch230A))))
(assert (= "pot2ka" (str.++ unch130B (str.++ var30B unch230B))))
(assert (= "pot2tsji" (str.++ unch130C (str.++ var30C unch230C))))
(assert (= (str.len stem30) l30))
(assert (= (ite (= ch30A var30A) 0 1) sc30A))
(assert (= (ite (= ch30B var30B) 0 1) sc30B))
(assert (= (ite (= ch30C var30C) 0 1) sc30C))
(assert (= (ite (= ch30D var30D) 0 1) sc30D))
(assert (= (ite (= ch30E var30E) 0 1) sc30E))
(assert (= (ite (= ch30F var30F) 0 1) sc30F))
(assert (= (ite (= ch30G var30G) 0 1) sc30G))
(assert (= (ite (= ch30H var30H) 0 1) sc30H))
(assert (<= sc30A 1))
(assert (<= sc30B 1))
(assert (<= sc30C 1))
(assert (<= sc30D 1))
(assert (<= sc30E 1))
(assert (<= sc30F 1))
(assert (<= sc30G 1))
(assert (<= sc30H 1))
(assert (<= (str.len var31A) 1))
(assert (<= (str.len var31B) 1))
(assert (<= (str.len var31C) 1))
(assert (<= (str.len var31D) 1))
(assert (<= (str.len var31E) 1))
(assert (<= (str.len var31F) 1))
(assert (<= (str.len var31G) 1))
(assert (<= (str.len var31H) 1))
(assert (= (str.++ preA (str.++ stem31 sufA)) (str.++ unch131A (str.++ ch31A unch231A))))
(assert (= (str.++ preB (str.++ stem31 sufB)) (str.++ unch131B (str.++ ch31B unch231B))))
(assert (= (str.++ preC (str.++ stem31 sufC)) (str.++ unch131C (str.++ ch31C unch231C))))
(assert (= (str.++ preD (str.++ stem31 sufD)) (str.++ unch131D (str.++ ch31D unch231D))))
(assert (= (str.++ preE (str.++ stem31 sufE)) (str.++ unch131E (str.++ ch31E unch231E))))
(assert (= (str.++ preF (str.++ stem31 sufF)) (str.++ unch131F (str.++ ch31F unch231F))))
(assert (= (str.++ preG (str.++ stem31 sufG)) (str.++ unch131G (str.++ ch31G unch231G))))
(assert (= (str.++ preH (str.++ stem31 sufH)) (str.++ unch131H (str.++ ch31H unch231H))))
(assert (= "tjXk" (str.++ unch131A (str.++ var31A unch231A))))
(assert (= "t2ka" (str.++ unch131B (str.++ var31B unch231B))))
(assert (= "t2tsji" (str.++ unch131C (str.++ var31C unch231C))))
(assert (= (str.len stem31) l31))
(assert (= (ite (= ch31A var31A) 0 1) sc31A))
(assert (= (ite (= ch31B var31B) 0 1) sc31B))
(assert (= (ite (= ch31C var31C) 0 1) sc31C))
(assert (= (ite (= ch31D var31D) 0 1) sc31D))
(assert (= (ite (= ch31E var31E) 0 1) sc31E))
(assert (= (ite (= ch31F var31F) 0 1) sc31F))
(assert (= (ite (= ch31G var31G) 0 1) sc31G))
(assert (= (ite (= ch31H var31H) 0 1) sc31H))
(assert (<= sc31A 1))
(assert (<= sc31B 1))
(assert (<= sc31C 1))
(assert (<= sc31D 1))
(assert (<= sc31E 1))
(assert (<= sc31F 1))
(assert (<= sc31G 1))
(assert (<= sc31H 1))
(assert (<= (str.len var32A) 1))
(assert (<= (str.len var32B) 1))
(assert (<= (str.len var32C) 1))
(assert (<= (str.len var32D) 1))
(assert (<= (str.len var32E) 1))
(assert (<= (str.len var32F) 1))
(assert (<= (str.len var32G) 1))
(assert (<= (str.len var32H) 1))
(assert (= (str.++ preA (str.++ stem32 sufA)) (str.++ unch132A (str.++ ch32A unch232A))))
(assert (= (str.++ preB (str.++ stem32 sufB)) (str.++ unch132B (str.++ ch32B unch232B))))
(assert (= (str.++ preC (str.++ stem32 sufC)) (str.++ unch132C (str.++ ch32C unch232C))))
(assert (= (str.++ preD (str.++ stem32 sufD)) (str.++ unch132D (str.++ ch32D unch232D))))
(assert (= (str.++ preE (str.++ stem32 sufE)) (str.++ unch132E (str.++ ch32E unch232E))))
(assert (= (str.++ preF (str.++ stem32 sufF)) (str.++ unch132F (str.++ ch32F unch232F))))
(assert (= (str.++ preG (str.++ stem32 sufG)) (str.++ unch132G (str.++ ch32G unch232G))))
(assert (= (str.++ preH (str.++ stem32 sufH)) (str.++ unch132H (str.++ ch32H unch232H))))
(assert (= "kjXl" (str.++ unch132A (str.++ var32A unch232A))))
(assert (= "kolO" (str.++ unch132B (str.++ var32B unch232B))))
(assert (= "koljX" (str.++ unch132C (str.++ var32C unch232C))))
(assert (= (str.len stem32) l32))
(assert (= (ite (= ch32A var32A) 0 1) sc32A))
(assert (= (ite (= ch32B var32B) 0 1) sc32B))
(assert (= (ite (= ch32C var32C) 0 1) sc32C))
(assert (= (ite (= ch32D var32D) 0 1) sc32D))
(assert (= (ite (= ch32E var32E) 0 1) sc32E))
(assert (= (ite (= ch32F var32F) 0 1) sc32F))
(assert (= (ite (= ch32G var32G) 0 1) sc32G))
(assert (= (ite (= ch32H var32H) 0 1) sc32H))
(assert (<= sc32A 1))
(assert (<= sc32B 1))
(assert (<= sc32C 1))
(assert (<= sc32D 1))
(assert (<= sc32E 1))
(assert (<= sc32F 1))
(assert (<= sc32G 1))
(assert (<= sc32H 1))
(assert (<= (str.len var33A) 1))
(assert (<= (str.len var33B) 1))
(assert (<= (str.len var33C) 1))
(assert (<= (str.len var33D) 1))
(assert (<= (str.len var33E) 1))
(assert (<= (str.len var33F) 1))
(assert (<= (str.len var33G) 1))
(assert (<= (str.len var33H) 1))
(assert (= (str.++ preA (str.++ stem33 sufA)) (str.++ unch133A (str.++ ch33A unch233A))))
(assert (= (str.++ preB (str.++ stem33 sufB)) (str.++ unch133B (str.++ ch33B unch233B))))
(assert (= (str.++ preC (str.++ stem33 sufC)) (str.++ unch133C (str.++ ch33C unch233C))))
(assert (= (str.++ preD (str.++ stem33 sufD)) (str.++ unch133D (str.++ ch33D unch233D))))
(assert (= (str.++ preE (str.++ stem33 sufE)) (str.++ unch133E (str.++ ch33E unch233E))))
(assert (= (str.++ preF (str.++ stem33 sufF)) (str.++ unch133F (str.++ ch33F unch233F))))
(assert (= (str.++ preG (str.++ stem33 sufG)) (str.++ unch133G (str.++ ch33G unch233G))))
(assert (= (str.++ preH (str.++ stem33 sufH)) (str.++ unch133H (str.++ ch33H unch233H))))
(assert (= "kovOlj" (str.++ unch133D (str.++ var33D unch233D))))
(assert (= "kovalj3" (str.++ unch133E (str.++ var33E unch233E))))
(assert (= "koval3" (str.++ unch133F (str.++ var33F unch233F))))
(assert (= (str.len stem33) l33))
(assert (= (ite (= ch33A var33A) 0 1) sc33A))
(assert (= (ite (= ch33B var33B) 0 1) sc33B))
(assert (= (ite (= ch33C var33C) 0 1) sc33C))
(assert (= (ite (= ch33D var33D) 0 1) sc33D))
(assert (= (ite (= ch33E var33E) 0 1) sc33E))
(assert (= (ite (= ch33F var33F) 0 1) sc33F))
(assert (= (ite (= ch33G var33G) 0 1) sc33G))
(assert (= (ite (= ch33H var33H) 0 1) sc33H))
(assert (<= sc33A 1))
(assert (<= sc33B 1))
(assert (<= sc33C 1))
(assert (<= sc33D 1))
(assert (<= sc33E 1))
(assert (<= sc33F 1))
(assert (<= sc33G 1))
(assert (<= sc33H 1))
(assert (<= (str.len var34A) 1))
(assert (<= (str.len var34B) 1))
(assert (<= (str.len var34C) 1))
(assert (<= (str.len var34D) 1))
(assert (<= (str.len var34E) 1))
(assert (<= (str.len var34F) 1))
(assert (<= (str.len var34G) 1))
(assert (<= (str.len var34H) 1))
(assert (= (str.++ preA (str.++ stem34 sufA)) (str.++ unch134A (str.++ ch34A unch234A))))
(assert (= (str.++ preB (str.++ stem34 sufB)) (str.++ unch134B (str.++ ch34B unch234B))))
(assert (= (str.++ preC (str.++ stem34 sufC)) (str.++ unch134C (str.++ ch34C unch234C))))
(assert (= (str.++ preD (str.++ stem34 sufD)) (str.++ unch134D (str.++ ch34D unch234D))))
(assert (= (str.++ preE (str.++ stem34 sufE)) (str.++ unch134E (str.++ ch34E unch234E))))
(assert (= (str.++ preF (str.++ stem34 sufF)) (str.++ unch134F (str.++ ch34F unch234F))))
(assert (= (str.++ preG (str.++ stem34 sufG)) (str.++ unch134G (str.++ ch34G unch234G))))
(assert (= (str.++ preH (str.++ stem34 sufH)) (str.++ unch134H (str.++ ch34H unch234H))))
(assert (= "DmjXlj" (str.++ unch134D (str.++ var34D unch234D))))
(assert (= "Dmjilj3" (str.++ unch134E (str.++ var34E unch234E))))
(assert (= "Dmjil3" (str.++ unch134F (str.++ var34F unch234F))))
(assert (= (str.len stem34) l34))
(assert (= (ite (= ch34A var34A) 0 1) sc34A))
(assert (= (ite (= ch34B var34B) 0 1) sc34B))
(assert (= (ite (= ch34C var34C) 0 1) sc34C))
(assert (= (ite (= ch34D var34D) 0 1) sc34D))
(assert (= (ite (= ch34E var34E) 0 1) sc34E))
(assert (= (ite (= ch34F var34F) 0 1) sc34F))
(assert (= (ite (= ch34G var34G) 0 1) sc34G))
(assert (= (ite (= ch34H var34H) 0 1) sc34H))
(assert (<= sc34A 1))
(assert (<= sc34B 1))
(assert (<= sc34C 1))
(assert (<= sc34D 1))
(assert (<= sc34E 1))
(assert (<= sc34F 1))
(assert (<= sc34G 1))
(assert (<= sc34H 1))
(assert (<= (str.len var35A) 1))
(assert (<= (str.len var35B) 1))
(assert (<= (str.len var35C) 1))
(assert (<= (str.len var35D) 1))
(assert (<= (str.len var35E) 1))
(assert (<= (str.len var35F) 1))
(assert (<= (str.len var35G) 1))
(assert (<= (str.len var35H) 1))
(assert (= (str.++ preA (str.++ stem35 sufA)) (str.++ unch135A (str.++ ch35A unch235A))))
(assert (= (str.++ preB (str.++ stem35 sufB)) (str.++ unch135B (str.++ ch35B unch235B))))
(assert (= (str.++ preC (str.++ stem35 sufC)) (str.++ unch135C (str.++ ch35C unch235C))))
(assert (= (str.++ preD (str.++ stem35 sufD)) (str.++ unch135D (str.++ ch35D unch235D))))
(assert (= (str.++ preE (str.++ stem35 sufE)) (str.++ unch135E (str.++ ch35E unch235E))))
(assert (= (str.++ preF (str.++ stem35 sufF)) (str.++ unch135F (str.++ ch35F unch235F))))
(assert (= (str.++ preG (str.++ stem35 sufG)) (str.++ unch135G (str.++ ch35G unch235G))))
(assert (= (str.++ preH (str.++ stem35 sufH)) (str.++ unch135H (str.++ ch35H unch235H))))
(assert (= "kjrjXlj" (str.++ unch135D (str.++ var35D unch235D))))
(assert (= "kjrjilj3" (str.++ unch135E (str.++ var35E unch235E))))
(assert (= "kjrjil3" (str.++ unch135F (str.++ var35F unch235F))))
(assert (= (str.len stem35) l35))
(assert (= (ite (= ch35A var35A) 0 1) sc35A))
(assert (= (ite (= ch35B var35B) 0 1) sc35B))
(assert (= (ite (= ch35C var35C) 0 1) sc35C))
(assert (= (ite (= ch35D var35D) 0 1) sc35D))
(assert (= (ite (= ch35E var35E) 0 1) sc35E))
(assert (= (ite (= ch35F var35F) 0 1) sc35F))
(assert (= (ite (= ch35G var35G) 0 1) sc35G))
(assert (= (ite (= ch35H var35H) 0 1) sc35H))
(assert (<= sc35A 1))
(assert (<= sc35B 1))
(assert (<= sc35C 1))
(assert (<= sc35D 1))
(assert (<= sc35E 1))
(assert (<= sc35F 1))
(assert (<= sc35G 1))
(assert (<= sc35H 1))
(assert (<= (str.len var36A) 1))
(assert (<= (str.len var36B) 1))
(assert (<= (str.len var36C) 1))
(assert (<= (str.len var36D) 1))
(assert (<= (str.len var36E) 1))
(assert (<= (str.len var36F) 1))
(assert (<= (str.len var36G) 1))
(assert (<= (str.len var36H) 1))
(assert (= (str.++ preA (str.++ stem36 sufA)) (str.++ unch136A (str.++ ch36A unch236A))))
(assert (= (str.++ preB (str.++ stem36 sufB)) (str.++ unch136B (str.++ ch36B unch236B))))
(assert (= (str.++ preC (str.++ stem36 sufC)) (str.++ unch136C (str.++ ch36C unch236C))))
(assert (= (str.++ preD (str.++ stem36 sufD)) (str.++ unch136D (str.++ ch36D unch236D))))
(assert (= (str.++ preE (str.++ stem36 sufE)) (str.++ unch136E (str.++ ch36E unch236E))))
(assert (= (str.++ preF (str.++ stem36 sufF)) (str.++ unch136F (str.++ ch36F unch236F))))
(assert (= (str.++ preG (str.++ stem36 sufG)) (str.++ unch136G (str.++ ch36G unch236G))))
(assert (= (str.++ preH (str.++ stem36 sufH)) (str.++ unch136H (str.++ ch36H unch236H))))
(assert (= "uE3tHlj" (str.++ unch136D (str.++ var36D unch236D))))
(assert (= "uE3tHljH" (str.++ unch136E (str.++ var36E unch236E))))
(assert (= "uE3tHlH" (str.++ unch136F (str.++ var36F unch236F))))
(assert (= (str.len stem36) l36))
(assert (= (ite (= ch36A var36A) 0 1) sc36A))
(assert (= (ite (= ch36B var36B) 0 1) sc36B))
(assert (= (ite (= ch36C var36C) 0 1) sc36C))
(assert (= (ite (= ch36D var36D) 0 1) sc36D))
(assert (= (ite (= ch36E var36E) 0 1) sc36E))
(assert (= (ite (= ch36F var36F) 0 1) sc36F))
(assert (= (ite (= ch36G var36G) 0 1) sc36G))
(assert (= (ite (= ch36H var36H) 0 1) sc36H))
(assert (<= sc36A 1))
(assert (<= sc36B 1))
(assert (<= sc36C 1))
(assert (<= sc36D 1))
(assert (<= sc36E 1))
(assert (<= sc36F 1))
(assert (<= sc36G 1))
(assert (<= sc36H 1))
(assert (<= (str.len var37A) 1))
(assert (<= (str.len var37B) 1))
(assert (<= (str.len var37C) 1))
(assert (<= (str.len var37D) 1))
(assert (<= (str.len var37E) 1))
(assert (<= (str.len var37F) 1))
(assert (<= (str.len var37G) 1))
(assert (<= (str.len var37H) 1))
(assert (= (str.++ preA (str.++ stem37 sufA)) (str.++ unch137A (str.++ ch37A unch237A))))
(assert (= (str.++ preB (str.++ stem37 sufB)) (str.++ unch137B (str.++ ch37B unch237B))))
(assert (= (str.++ preC (str.++ stem37 sufC)) (str.++ unch137C (str.++ ch37C unch237C))))
(assert (= (str.++ preD (str.++ stem37 sufD)) (str.++ unch137D (str.++ ch37D unch237D))))
(assert (= (str.++ preE (str.++ stem37 sufE)) (str.++ unch137E (str.++ ch37E unch237E))))
(assert (= (str.++ preF (str.++ stem37 sufF)) (str.++ unch137F (str.++ ch37F unch237F))))
(assert (= (str.++ preG (str.++ stem37 sufG)) (str.++ unch137G (str.++ ch37G unch237G))))
(assert (= (str.++ preH (str.++ stem37 sufH)) (str.++ unch137H (str.++ ch37H unch237H))))
(assert (= "gr4bjinj" (str.++ unch137D (str.++ var37D unch237D))))
(assert (= "gr4bHnjH" (str.++ unch137E (str.++ var37E unch237E))))
(assert (= "gr4bHnH" (str.++ unch137F (str.++ var37F unch237F))))
(assert (= (str.len stem37) l37))
(assert (= (ite (= ch37A var37A) 0 1) sc37A))
(assert (= (ite (= ch37B var37B) 0 1) sc37B))
(assert (= (ite (= ch37C var37C) 0 1) sc37C))
(assert (= (ite (= ch37D var37D) 0 1) sc37D))
(assert (= (ite (= ch37E var37E) 0 1) sc37E))
(assert (= (ite (= ch37F var37F) 0 1) sc37F))
(assert (= (ite (= ch37G var37G) 0 1) sc37G))
(assert (= (ite (= ch37H var37H) 0 1) sc37H))
(assert (<= sc37A 1))
(assert (<= sc37B 1))
(assert (<= sc37C 1))
(assert (<= sc37D 1))
(assert (<= sc37E 1))
(assert (<= sc37F 1))
(assert (<= sc37G 1))
(assert (<= sc37H 1))
(assert (<= (str.len var38A) 1))
(assert (<= (str.len var38B) 1))
(assert (<= (str.len var38C) 1))
(assert (<= (str.len var38D) 1))
(assert (<= (str.len var38E) 1))
(assert (<= (str.len var38F) 1))
(assert (<= (str.len var38G) 1))
(assert (<= (str.len var38H) 1))
(assert (= (str.++ preA (str.++ stem38 sufA)) (str.++ unch138A (str.++ ch38A unch238A))))
(assert (= (str.++ preB (str.++ stem38 sufB)) (str.++ unch138B (str.++ ch38B unch238B))))
(assert (= (str.++ preC (str.++ stem38 sufC)) (str.++ unch138C (str.++ ch38C unch238C))))
(assert (= (str.++ preD (str.++ stem38 sufD)) (str.++ unch138D (str.++ ch38D unch238D))))
(assert (= (str.++ preE (str.++ stem38 sufE)) (str.++ unch138E (str.++ ch38E unch238E))))
(assert (= (str.++ preF (str.++ stem38 sufF)) (str.++ unch138F (str.++ ch38F unch238F))))
(assert (= (str.++ preG (str.++ stem38 sufG)) (str.++ unch138G (str.++ ch38G unch238G))))
(assert (= (str.++ preH (str.++ stem38 sufH)) (str.++ unch138H (str.++ ch38H unch238H))))
(assert (= "2lHnj" (str.++ unch138D (str.++ var38D unch238D))))
(assert (= "2lHnjH" (str.++ unch138E (str.++ var38E unch238E))))
(assert (= "2lHnH" (str.++ unch138F (str.++ var38F unch238F))))
(assert (= (str.len stem38) l38))
(assert (= (ite (= ch38A var38A) 0 1) sc38A))
(assert (= (ite (= ch38B var38B) 0 1) sc38B))
(assert (= (ite (= ch38C var38C) 0 1) sc38C))
(assert (= (ite (= ch38D var38D) 0 1) sc38D))
(assert (= (ite (= ch38E var38E) 0 1) sc38E))
(assert (= (ite (= ch38F var38F) 0 1) sc38F))
(assert (= (ite (= ch38G var38G) 0 1) sc38G))
(assert (= (ite (= ch38H var38H) 0 1) sc38H))
(assert (<= sc38A 1))
(assert (<= sc38B 1))
(assert (<= sc38C 1))
(assert (<= sc38D 1))
(assert (<= sc38E 1))
(assert (<= sc38F 1))
(assert (<= sc38G 1))
(assert (<= sc38H 1))
(assert (<= (str.len var39A) 1))
(assert (<= (str.len var39B) 1))
(assert (<= (str.len var39C) 1))
(assert (<= (str.len var39D) 1))
(assert (<= (str.len var39E) 1))
(assert (<= (str.len var39F) 1))
(assert (<= (str.len var39G) 1))
(assert (<= (str.len var39H) 1))
(assert (= (str.++ preA (str.++ stem39 sufA)) (str.++ unch139A (str.++ ch39A unch239A))))
(assert (= (str.++ preB (str.++ stem39 sufB)) (str.++ unch139B (str.++ ch39B unch239B))))
(assert (= (str.++ preC (str.++ stem39 sufC)) (str.++ unch139C (str.++ ch39C unch239C))))
(assert (= (str.++ preD (str.++ stem39 sufD)) (str.++ unch139D (str.++ ch39D unch239D))))
(assert (= (str.++ preE (str.++ stem39 sufE)) (str.++ unch139E (str.++ ch39E unch239E))))
(assert (= (str.++ preF (str.++ stem39 sufF)) (str.++ unch139F (str.++ ch39F unch239F))))
(assert (= (str.++ preG (str.++ stem39 sufG)) (str.++ unch139G (str.++ ch39G unch239G))))
(assert (= (str.++ preH (str.++ stem39 sufH)) (str.++ unch139H (str.++ ch39H unch239H))))
(assert (= "jaEjmjXnj" (str.++ unch139D (str.++ var39D unch239D))))
(assert (= "jaEm4njH" (str.++ unch139E (str.++ var39E unch239E))))
(assert (= "jaEm4nH" (str.++ unch139F (str.++ var39F unch239F))))
(assert (= (str.len stem39) l39))
(assert (= (ite (= ch39A var39A) 0 1) sc39A))
(assert (= (ite (= ch39B var39B) 0 1) sc39B))
(assert (= (ite (= ch39C var39C) 0 1) sc39C))
(assert (= (ite (= ch39D var39D) 0 1) sc39D))
(assert (= (ite (= ch39E var39E) 0 1) sc39E))
(assert (= (ite (= ch39F var39F) 0 1) sc39F))
(assert (= (ite (= ch39G var39G) 0 1) sc39G))
(assert (= (ite (= ch39H var39H) 0 1) sc39H))
(assert (<= sc39A 1))
(assert (<= sc39B 1))
(assert (<= sc39C 1))
(assert (<= sc39D 1))
(assert (<= sc39E 1))
(assert (<= sc39F 1))
(assert (<= sc39G 1))
(assert (<= sc39H 1))
(assert (<= (str.len var40A) 1))
(assert (<= (str.len var40B) 1))
(assert (<= (str.len var40C) 1))
(assert (<= (str.len var40D) 1))
(assert (<= (str.len var40E) 1))
(assert (<= (str.len var40F) 1))
(assert (<= (str.len var40G) 1))
(assert (<= (str.len var40H) 1))
(assert (= (str.++ preA (str.++ stem40 sufA)) (str.++ unch140A (str.++ ch40A unch240A))))
(assert (= (str.++ preB (str.++ stem40 sufB)) (str.++ unch140B (str.++ ch40B unch240B))))
(assert (= (str.++ preC (str.++ stem40 sufC)) (str.++ unch140C (str.++ ch40C unch240C))))
(assert (= (str.++ preD (str.++ stem40 sufD)) (str.++ unch140D (str.++ ch40D unch240D))))
(assert (= (str.++ preE (str.++ stem40 sufE)) (str.++ unch140E (str.++ ch40E unch240E))))
(assert (= (str.++ preF (str.++ stem40 sufF)) (str.++ unch140F (str.++ ch40F unch240F))))
(assert (= (str.++ preG (str.++ stem40 sufG)) (str.++ unch140G (str.++ ch40G unch240G))))
(assert (= (str.++ preH (str.++ stem40 sufH)) (str.++ unch140H (str.++ ch40H unch240H))))
(assert (= "jOsjinj" (str.++ unch140D (str.++ var40D unch240D))))
(assert (= "jOsHnjH" (str.++ unch140E (str.++ var40E unch240E))))
(assert (= "jOsHnH" (str.++ unch140F (str.++ var40F unch240F))))
(assert (= (str.len stem40) l40))
(assert (= (ite (= ch40A var40A) 0 1) sc40A))
(assert (= (ite (= ch40B var40B) 0 1) sc40B))
(assert (= (ite (= ch40C var40C) 0 1) sc40C))
(assert (= (ite (= ch40D var40D) 0 1) sc40D))
(assert (= (ite (= ch40E var40E) 0 1) sc40E))
(assert (= (ite (= ch40F var40F) 0 1) sc40F))
(assert (= (ite (= ch40G var40G) 0 1) sc40G))
(assert (= (ite (= ch40H var40H) 0 1) sc40H))
(assert (<= sc40A 1))
(assert (<= sc40B 1))
(assert (<= sc40C 1))
(assert (<= sc40D 1))
(assert (<= sc40E 1))
(assert (<= sc40F 1))
(assert (<= sc40G 1))
(assert (<= sc40H 1))
(assert (<= (str.len var41A) 1))
(assert (<= (str.len var41B) 1))
(assert (<= (str.len var41C) 1))
(assert (<= (str.len var41D) 1))
(assert (<= (str.len var41E) 1))
(assert (<= (str.len var41F) 1))
(assert (<= (str.len var41G) 1))
(assert (<= (str.len var41H) 1))
(assert (= (str.++ preA (str.++ stem41 sufA)) (str.++ unch141A (str.++ ch41A unch241A))))
(assert (= (str.++ preB (str.++ stem41 sufB)) (str.++ unch141B (str.++ ch41B unch241B))))
(assert (= (str.++ preC (str.++ stem41 sufC)) (str.++ unch141C (str.++ ch41C unch241C))))
(assert (= (str.++ preD (str.++ stem41 sufD)) (str.++ unch141D (str.++ ch41D unch241D))))
(assert (= (str.++ preE (str.++ stem41 sufE)) (str.++ unch141E (str.++ ch41E unch241E))))
(assert (= (str.++ preF (str.++ stem41 sufF)) (str.++ unch141F (str.++ ch41F unch241F))))
(assert (= (str.++ preG (str.++ stem41 sufG)) (str.++ unch141G (str.++ ch41G unch241G))))
(assert (= (str.++ preH (str.++ stem41 sufH)) (str.++ unch141H (str.++ ch41H unch241H))))
(assert (= "zj3kj" (str.++ unch141D (str.++ var41D unch241D))))
(assert (= "zj3kjH" (str.++ unch141E (str.++ var41E unch241E))))
(assert (= "zj3tH" (str.++ unch141F (str.++ var41F unch241F))))
(assert (= (str.len stem41) l41))
(assert (= (ite (= ch41A var41A) 0 1) sc41A))
(assert (= (ite (= ch41B var41B) 0 1) sc41B))
(assert (= (ite (= ch41C var41C) 0 1) sc41C))
(assert (= (ite (= ch41D var41D) 0 1) sc41D))
(assert (= (ite (= ch41E var41E) 0 1) sc41E))
(assert (= (ite (= ch41F var41F) 0 1) sc41F))
(assert (= (ite (= ch41G var41G) 0 1) sc41G))
(assert (= (ite (= ch41H var41H) 0 1) sc41H))
(assert (<= sc41A 1))
(assert (<= sc41B 1))
(assert (<= sc41C 1))
(assert (<= sc41D 1))
(assert (<= sc41E 1))
(assert (<= sc41F 1))
(assert (<= sc41G 1))
(assert (<= sc41H 1))
(assert (<= (str.len var42A) 1))
(assert (<= (str.len var42B) 1))
(assert (<= (str.len var42C) 1))
(assert (<= (str.len var42D) 1))
(assert (<= (str.len var42E) 1))
(assert (<= (str.len var42F) 1))
(assert (<= (str.len var42G) 1))
(assert (<= (str.len var42H) 1))
(assert (= (str.++ preA (str.++ stem42 sufA)) (str.++ unch142A (str.++ ch42A unch242A))))
(assert (= (str.++ preB (str.++ stem42 sufB)) (str.++ unch142B (str.++ ch42B unch242B))))
(assert (= (str.++ preC (str.++ stem42 sufC)) (str.++ unch142C (str.++ ch42C unch242C))))
(assert (= (str.++ preD (str.++ stem42 sufD)) (str.++ unch142D (str.++ ch42D unch242D))))
(assert (= (str.++ preE (str.++ stem42 sufE)) (str.++ unch142E (str.++ ch42E unch242E))))
(assert (= (str.++ preF (str.++ stem42 sufF)) (str.++ unch142F (str.++ ch42F unch242F))))
(assert (= (str.++ preG (str.++ stem42 sufG)) (str.++ unch142G (str.++ ch42G unch242G))))
(assert (= (str.++ preH (str.++ stem42 sufH)) (str.++ unch142H (str.++ ch42H unch242H))))
(assert (= "mOsjkj" (str.++ unch142G (str.++ var42G unch242G))))
(assert (= "mOstH" (str.++ unch142H (str.++ var42H unch242H))))
(assert (= (str.len stem42) l42))
(assert (= (ite (= ch42A var42A) 0 1) sc42A))
(assert (= (ite (= ch42B var42B) 0 1) sc42B))
(assert (= (ite (= ch42C var42C) 0 1) sc42C))
(assert (= (ite (= ch42D var42D) 0 1) sc42D))
(assert (= (ite (= ch42E var42E) 0 1) sc42E))
(assert (= (ite (= ch42F var42F) 0 1) sc42F))
(assert (= (ite (= ch42G var42G) 0 1) sc42G))
(assert (= (ite (= ch42H var42H) 0 1) sc42H))
(assert (<= sc42A 1))
(assert (<= sc42B 1))
(assert (<= sc42C 1))
(assert (<= sc42D 1))
(assert (<= sc42E 1))
(assert (<= sc42F 1))
(assert (<= sc42G 1))
(assert (<= sc42H 1))
(assert (<= (str.len var43A) 1))
(assert (<= (str.len var43B) 1))
(assert (<= (str.len var43C) 1))
(assert (<= (str.len var43D) 1))
(assert (<= (str.len var43E) 1))
(assert (<= (str.len var43F) 1))
(assert (<= (str.len var43G) 1))
(assert (<= (str.len var43H) 1))
(assert (= (str.++ preA (str.++ stem43 sufA)) (str.++ unch143A (str.++ ch43A unch243A))))
(assert (= (str.++ preB (str.++ stem43 sufB)) (str.++ unch143B (str.++ ch43B unch243B))))
(assert (= (str.++ preC (str.++ stem43 sufC)) (str.++ unch143C (str.++ ch43C unch243C))))
(assert (= (str.++ preD (str.++ stem43 sufD)) (str.++ unch143D (str.++ ch43D unch243D))))
(assert (= (str.++ preE (str.++ stem43 sufE)) (str.++ unch143E (str.++ ch43E unch243E))))
(assert (= (str.++ preF (str.++ stem43 sufF)) (str.++ unch143F (str.++ ch43F unch243F))))
(assert (= (str.++ preG (str.++ stem43 sufG)) (str.++ unch143G (str.++ ch43G unch243G))))
(assert (= (str.++ preH (str.++ stem43 sufH)) (str.++ unch143H (str.++ ch43H unch243H))))
(assert (= "sjmjXrjkj" (str.++ unch143G (str.++ var43G unch243G))))
(assert (= "sm4rtH" (str.++ unch143H (str.++ var43H unch243H))))
(assert (= (str.len stem43) l43))
(assert (= (ite (= ch43A var43A) 0 1) sc43A))
(assert (= (ite (= ch43B var43B) 0 1) sc43B))
(assert (= (ite (= ch43C var43C) 0 1) sc43C))
(assert (= (ite (= ch43D var43D) 0 1) sc43D))
(assert (= (ite (= ch43E var43E) 0 1) sc43E))
(assert (= (ite (= ch43F var43F) 0 1) sc43F))
(assert (= (ite (= ch43G var43G) 0 1) sc43G))
(assert (= (ite (= ch43H var43H) 0 1) sc43H))
(assert (<= sc43A 1))
(assert (<= sc43B 1))
(assert (<= sc43C 1))
(assert (<= sc43D 1))
(assert (<= sc43E 1))
(assert (<= sc43F 1))
(assert (<= sc43G 1))
(assert (<= sc43H 1))
(assert (<= (str.len var44A) 1))
(assert (<= (str.len var44B) 1))
(assert (<= (str.len var44C) 1))
(assert (<= (str.len var44D) 1))
(assert (<= (str.len var44E) 1))
(assert (<= (str.len var44F) 1))
(assert (<= (str.len var44G) 1))
(assert (<= (str.len var44H) 1))
(assert (= (str.++ preA (str.++ stem44 sufA)) (str.++ unch144A (str.++ ch44A unch244A))))
(assert (= (str.++ preB (str.++ stem44 sufB)) (str.++ unch144B (str.++ ch44B unch244B))))
(assert (= (str.++ preC (str.++ stem44 sufC)) (str.++ unch144C (str.++ ch44C unch244C))))
(assert (= (str.++ preD (str.++ stem44 sufD)) (str.++ unch144D (str.++ ch44D unch244D))))
(assert (= (str.++ preE (str.++ stem44 sufE)) (str.++ unch144E (str.++ ch44E unch244E))))
(assert (= (str.++ preF (str.++ stem44 sufF)) (str.++ unch144F (str.++ ch44F unch244F))))
(assert (= (str.++ preG (str.++ stem44 sufG)) (str.++ unch144G (str.++ ch44G unch244G))))
(assert (= (str.++ preH (str.++ stem44 sufH)) (str.++ unch144H (str.++ ch44H unch244H))))
(assert (= "vjXsjkj" (str.++ unch144G (str.++ var44G unch244G))))
(assert (= "vjXstH" (str.++ unch144H (str.++ var44H unch244H))))
(assert (= (str.len stem44) l44))
(assert (= (ite (= ch44A var44A) 0 1) sc44A))
(assert (= (ite (= ch44B var44B) 0 1) sc44B))
(assert (= (ite (= ch44C var44C) 0 1) sc44C))
(assert (= (ite (= ch44D var44D) 0 1) sc44D))
(assert (= (ite (= ch44E var44E) 0 1) sc44E))
(assert (= (ite (= ch44F var44F) 0 1) sc44F))
(assert (= (ite (= ch44G var44G) 0 1) sc44G))
(assert (= (ite (= ch44H var44H) 0 1) sc44H))
(assert (<= sc44A 1))
(assert (<= sc44B 1))
(assert (<= sc44C 1))
(assert (<= sc44D 1))
(assert (<= sc44E 1))
(assert (<= sc44F 1))
(assert (<= sc44G 1))
(assert (<= sc44H 1))
(assert (<= (str.len var45A) 1))
(assert (<= (str.len var45B) 1))
(assert (<= (str.len var45C) 1))
(assert (<= (str.len var45D) 1))
(assert (<= (str.len var45E) 1))
(assert (<= (str.len var45F) 1))
(assert (<= (str.len var45G) 1))
(assert (<= (str.len var45H) 1))
(assert (= (str.++ preA (str.++ stem45 sufA)) (str.++ unch145A (str.++ ch45A unch245A))))
(assert (= (str.++ preB (str.++ stem45 sufB)) (str.++ unch145B (str.++ ch45B unch245B))))
(assert (= (str.++ preC (str.++ stem45 sufC)) (str.++ unch145C (str.++ ch45C unch245C))))
(assert (= (str.++ preD (str.++ stem45 sufD)) (str.++ unch145D (str.++ ch45D unch245D))))
(assert (= (str.++ preE (str.++ stem45 sufE)) (str.++ unch145E (str.++ ch45E unch245E))))
(assert (= (str.++ preF (str.++ stem45 sufF)) (str.++ unch145F (str.++ ch45F unch245F))))
(assert (= (str.++ preG (str.++ stem45 sufG)) (str.++ unch145G (str.++ ch45G unch245G))))
(assert (= (str.++ preH (str.++ stem45 sufH)) (str.++ unch145H (str.++ ch45H unch245H))))
(assert (= "rOgjisjkj" (str.++ unch145G (str.++ var45G unch245G))))
(assert (= "rOdostH" (str.++ unch145H (str.++ var45H unch245H))))
(assert (= (str.len stem45) l45))
(assert (= (ite (= ch45A var45A) 0 1) sc45A))
(assert (= (ite (= ch45B var45B) 0 1) sc45B))
(assert (= (ite (= ch45C var45C) 0 1) sc45C))
(assert (= (ite (= ch45D var45D) 0 1) sc45D))
(assert (= (ite (= ch45E var45E) 0 1) sc45E))
(assert (= (ite (= ch45F var45F) 0 1) sc45F))
(assert (= (ite (= ch45G var45G) 0 1) sc45G))
(assert (= (ite (= ch45H var45H) 0 1) sc45H))
(assert (<= sc45A 1))
(assert (<= sc45B 1))
(assert (<= sc45C 1))
(assert (<= sc45D 1))
(assert (<= sc45E 1))
(assert (<= sc45F 1))
(assert (<= sc45G 1))
(assert (<= sc45H 1))
(assert (<= (str.len var46A) 1))
(assert (<= (str.len var46B) 1))
(assert (<= (str.len var46C) 1))
(assert (<= (str.len var46D) 1))
(assert (<= (str.len var46E) 1))
(assert (<= (str.len var46F) 1))
(assert (<= (str.len var46G) 1))
(assert (<= (str.len var46H) 1))
(assert (= (str.++ preA (str.++ stem46 sufA)) (str.++ unch146A (str.++ ch46A unch246A))))
(assert (= (str.++ preB (str.++ stem46 sufB)) (str.++ unch146B (str.++ ch46B unch246B))))
(assert (= (str.++ preC (str.++ stem46 sufC)) (str.++ unch146C (str.++ ch46C unch246C))))
(assert (= (str.++ preD (str.++ stem46 sufD)) (str.++ unch146D (str.++ ch46D unch246D))))
(assert (= (str.++ preE (str.++ stem46 sufE)) (str.++ unch146E (str.++ ch46E unch246E))))
(assert (= (str.++ preF (str.++ stem46 sufF)) (str.++ unch146F (str.++ ch46F unch246F))))
(assert (= (str.++ preG (str.++ stem46 sufG)) (str.++ unch146G (str.++ ch46G unch246G))))
(assert (= (str.++ preH (str.++ stem46 sufH)) (str.++ unch146H (str.++ ch46H unch246H))))
(assert (= "sjXlj" (str.++ unch146G (str.++ var46G unch246G))))
(assert (= "s2lH" (str.++ unch146H (str.++ var46H unch246H))))
(assert (= (str.len stem46) l46))
(assert (= (ite (= ch46A var46A) 0 1) sc46A))
(assert (= (ite (= ch46B var46B) 0 1) sc46B))
(assert (= (ite (= ch46C var46C) 0 1) sc46C))
(assert (= (ite (= ch46D var46D) 0 1) sc46D))
(assert (= (ite (= ch46E var46E) 0 1) sc46E))
(assert (= (ite (= ch46F var46F) 0 1) sc46F))
(assert (= (ite (= ch46G var46G) 0 1) sc46G))
(assert (= (ite (= ch46H var46H) 0 1) sc46H))
(assert (<= sc46A 1))
(assert (<= sc46B 1))
(assert (<= sc46C 1))
(assert (<= sc46D 1))
(assert (<= sc46E 1))
(assert (<= sc46F 1))
(assert (<= sc46G 1))
(assert (<= sc46H 1))
(assert (<= (str.len var47A) 1))
(assert (<= (str.len var47B) 1))
(assert (<= (str.len var47C) 1))
(assert (<= (str.len var47D) 1))
(assert (<= (str.len var47E) 1))
(assert (<= (str.len var47F) 1))
(assert (<= (str.len var47G) 1))
(assert (<= (str.len var47H) 1))
(assert (= (str.++ preA (str.++ stem47 sufA)) (str.++ unch147A (str.++ ch47A unch247A))))
(assert (= (str.++ preB (str.++ stem47 sufB)) (str.++ unch147B (str.++ ch47B unch247B))))
(assert (= (str.++ preC (str.++ stem47 sufC)) (str.++ unch147C (str.++ ch47C unch247C))))
(assert (= (str.++ preD (str.++ stem47 sufD)) (str.++ unch147D (str.++ ch47D unch247D))))
(assert (= (str.++ preE (str.++ stem47 sufE)) (str.++ unch147E (str.++ ch47E unch247E))))
(assert (= (str.++ preF (str.++ stem47 sufF)) (str.++ unch147F (str.++ ch47F unch247F))))
(assert (= (str.++ preG (str.++ stem47 sufG)) (str.++ unch147G (str.++ ch47G unch247G))))
(assert (= (str.++ preH (str.++ stem47 sufH)) (str.++ unch147H (str.++ ch47H unch247H))))
(assert (= "p2Bjisjkj" (str.++ unch147G (str.++ var47G unch247G))))
(assert (= "p2BHstH" (str.++ unch147H (str.++ var47H unch247H))))
(assert (= (str.len stem47) l47))
(assert (= (ite (= ch47A var47A) 0 1) sc47A))
(assert (= (ite (= ch47B var47B) 0 1) sc47B))
(assert (= (ite (= ch47C var47C) 0 1) sc47C))
(assert (= (ite (= ch47D var47D) 0 1) sc47D))
(assert (= (ite (= ch47E var47E) 0 1) sc47E))
(assert (= (ite (= ch47F var47F) 0 1) sc47F))
(assert (= (ite (= ch47G var47G) 0 1) sc47G))
(assert (= (ite (= ch47H var47H) 0 1) sc47H))
(assert (<= sc47A 1))
(assert (<= sc47B 1))
(assert (<= sc47C 1))
(assert (<= sc47D 1))
(assert (<= sc47E 1))
(assert (<= sc47F 1))
(assert (<= sc47G 1))
(assert (<= sc47H 1))
(assert (<= (str.len var48A) 1))
(assert (<= (str.len var48B) 1))
(assert (<= (str.len var48C) 1))
(assert (<= (str.len var48D) 1))
(assert (<= (str.len var48E) 1))
(assert (<= (str.len var48F) 1))
(assert (<= (str.len var48G) 1))
(assert (<= (str.len var48H) 1))
(assert (= (str.++ preA (str.++ stem48 sufA)) (str.++ unch148A (str.++ ch48A unch248A))))
(assert (= (str.++ preB (str.++ stem48 sufB)) (str.++ unch148B (str.++ ch48B unch248B))))
(assert (= (str.++ preC (str.++ stem48 sufC)) (str.++ unch148C (str.++ ch48C unch248C))))
(assert (= (str.++ preD (str.++ stem48 sufD)) (str.++ unch148D (str.++ ch48D unch248D))))
(assert (= (str.++ preE (str.++ stem48 sufE)) (str.++ unch148E (str.++ ch48E unch248E))))
(assert (= (str.++ preF (str.++ stem48 sufF)) (str.++ unch148F (str.++ ch48F unch248F))))
(assert (= (str.++ preG (str.++ stem48 sufG)) (str.++ unch148G (str.++ ch48G unch248G))))
(assert (= (str.++ preH (str.++ stem48 sufH)) (str.++ unch148H (str.++ ch48H unch248H))))
(assert (= "zOmjikj" (str.++ unch148G (str.++ var48G unch248G))))
(assert (= "zOmHtH" (str.++ unch148H (str.++ var48H unch248H))))
(assert (= (str.len stem48) l48))
(assert (= (ite (= ch48A var48A) 0 1) sc48A))
(assert (= (ite (= ch48B var48B) 0 1) sc48B))
(assert (= (ite (= ch48C var48C) 0 1) sc48C))
(assert (= (ite (= ch48D var48D) 0 1) sc48D))
(assert (= (ite (= ch48E var48E) 0 1) sc48E))
(assert (= (ite (= ch48F var48F) 0 1) sc48F))
(assert (= (ite (= ch48G var48G) 0 1) sc48G))
(assert (= (ite (= ch48H var48H) 0 1) sc48H))
(assert (<= sc48A 1))
(assert (<= sc48B 1))
(assert (<= sc48C 1))
(assert (<= sc48D 1))
(assert (<= sc48E 1))
(assert (<= sc48F 1))
(assert (<= sc48G 1))
(assert (<= sc48H 1))
(assert (<= (str.len var49A) 1))
(assert (<= (str.len var49B) 1))
(assert (<= (str.len var49C) 1))
(assert (<= (str.len var49D) 1))
(assert (<= (str.len var49E) 1))
(assert (<= (str.len var49F) 1))
(assert (<= (str.len var49G) 1))
(assert (<= (str.len var49H) 1))
(assert (= (str.++ preA (str.++ stem49 sufA)) (str.++ unch149A (str.++ ch49A unch249A))))
(assert (= (str.++ preB (str.++ stem49 sufB)) (str.++ unch149B (str.++ ch49B unch249B))))
(assert (= (str.++ preC (str.++ stem49 sufC)) (str.++ unch149C (str.++ ch49C unch249C))))
(assert (= (str.++ preD (str.++ stem49 sufD)) (str.++ unch149D (str.++ ch49D unch249D))))
(assert (= (str.++ preE (str.++ stem49 sufE)) (str.++ unch149E (str.++ ch49E unch249E))))
(assert (= (str.++ preF (str.++ stem49 sufF)) (str.++ unch149F (str.++ ch49F unch249F))))
(assert (= (str.++ preG (str.++ stem49 sufG)) (str.++ unch149G (str.++ ch49G unch249G))))
(assert (= (str.++ preH (str.++ stem49 sufH)) (str.++ unch149H (str.++ ch49H unch249H))))
(assert (= "skOtHrjkj" (str.++ unch149G (str.++ var49G unch249G))))
(assert (= "skOtHrtH" (str.++ unch149H (str.++ var49H unch249H))))
(assert (= (str.len stem49) l49))
(assert (= (ite (= ch49A var49A) 0 1) sc49A))
(assert (= (ite (= ch49B var49B) 0 1) sc49B))
(assert (= (ite (= ch49C var49C) 0 1) sc49C))
(assert (= (ite (= ch49D var49D) 0 1) sc49D))
(assert (= (ite (= ch49E var49E) 0 1) sc49E))
(assert (= (ite (= ch49F var49F) 0 1) sc49F))
(assert (= (ite (= ch49G var49G) 0 1) sc49G))
(assert (= (ite (= ch49H var49H) 0 1) sc49H))
(assert (<= sc49A 1))
(assert (<= sc49B 1))
(assert (<= sc49C 1))
(assert (<= sc49D 1))
(assert (<= sc49E 1))
(assert (<= sc49F 1))
(assert (<= sc49G 1))
(assert (<= sc49H 1))
(assert (<= (str.len var50A) 1))
(assert (<= (str.len var50B) 1))
(assert (<= (str.len var50C) 1))
(assert (<= (str.len var50D) 1))
(assert (<= (str.len var50E) 1))
(assert (<= (str.len var50F) 1))
(assert (<= (str.len var50G) 1))
(assert (<= (str.len var50H) 1))
(assert (= (str.++ preA (str.++ stem50 sufA)) (str.++ unch150A (str.++ ch50A unch250A))))
(assert (= (str.++ preB (str.++ stem50 sufB)) (str.++ unch150B (str.++ ch50B unch250B))))
(assert (= (str.++ preC (str.++ stem50 sufC)) (str.++ unch150C (str.++ ch50C unch250C))))
(assert (= (str.++ preD (str.++ stem50 sufD)) (str.++ unch150D (str.++ ch50D unch250D))))
(assert (= (str.++ preE (str.++ stem50 sufE)) (str.++ unch150E (str.++ ch50E unch250E))))
(assert (= (str.++ preF (str.++ stem50 sufF)) (str.++ unch150F (str.++ ch50F unch250F))))
(assert (= (str.++ preG (str.++ stem50 sufG)) (str.++ unch150G (str.++ ch50G unch250G))))
(assert (= (str.++ preH (str.++ stem50 sufH)) (str.++ unch150H (str.++ ch50H unch250H))))
(assert (= "kjXsjkj" (str.++ unch150G (str.++ var50G unch250G))))
(assert (= "k2stH" (str.++ unch150H (str.++ var50H unch250H))))
(assert (= (str.len stem50) l50))
(assert (= (ite (= ch50A var50A) 0 1) sc50A))
(assert (= (ite (= ch50B var50B) 0 1) sc50B))
(assert (= (ite (= ch50C var50C) 0 1) sc50C))
(assert (= (ite (= ch50D var50D) 0 1) sc50D))
(assert (= (ite (= ch50E var50E) 0 1) sc50E))
(assert (= (ite (= ch50F var50F) 0 1) sc50F))
(assert (= (ite (= ch50G var50G) 0 1) sc50G))
(assert (= (ite (= ch50H var50H) 0 1) sc50H))
(assert (<= sc50A 1))
(assert (<= sc50B 1))
(assert (<= sc50C 1))
(assert (<= sc50D 1))
(assert (<= sc50E 1))
(assert (<= sc50F 1))
(assert (<= sc50G 1))
(assert (<= sc50H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      sc7G
      sc7H
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      sc8G
      sc8H
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      sc9G
      sc9H
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      sc10G
      sc10H
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      sc11G
      sc11H
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      sc12G
      sc12H
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      sc13G
      sc13H
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      sc14G
      sc14H
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      sc15G
      sc15H
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      sc16G
      sc16H
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      sc17G
      sc17H
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      sc18G
      sc18H
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      sc19G
      sc19H
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      sc20G
      sc20H
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      sc21G
      sc21H
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      sc22G
      sc22H
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      sc23G
      sc23H
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      sc24G
      sc24H
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      sc25G
      sc25H
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      sc26G
      sc26H
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      sc27G
      sc27H
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      sc28G
      sc28H
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      sc29G
      sc29H
      0
      sc30A
      sc30B
      sc30C
      sc30D
      sc30E
      sc30F
      sc30G
      sc30H
      0
      sc31A
      sc31B
      sc31C
      sc31D
      sc31E
      sc31F
      sc31G
      sc31H
      0
      sc32A
      sc32B
      sc32C
      sc32D
      sc32E
      sc32F
      sc32G
      sc32H
      0
      sc33A
      sc33B
      sc33C
      sc33D
      sc33E
      sc33F
      sc33G
      sc33H
      0
      sc34A
      sc34B
      sc34C
      sc34D
      sc34E
      sc34F
      sc34G
      sc34H
      0
      sc35A
      sc35B
      sc35C
      sc35D
      sc35E
      sc35F
      sc35G
      sc35H
      0
      sc36A
      sc36B
      sc36C
      sc36D
      sc36E
      sc36F
      sc36G
      sc36H
      0
      sc37A
      sc37B
      sc37C
      sc37D
      sc37E
      sc37F
      sc37G
      sc37H
      0
      sc38A
      sc38B
      sc38C
      sc38D
      sc38E
      sc38F
      sc38G
      sc38H
      0
      sc39A
      sc39B
      sc39C
      sc39D
      sc39E
      sc39F
      sc39G
      sc39H
      0
      sc40A
      sc40B
      sc40C
      sc40D
      sc40E
      sc40F
      sc40G
      sc40H
      0
      sc41A
      sc41B
      sc41C
      sc41D
      sc41E
      sc41F
      sc41G
      sc41H
      0
      sc42A
      sc42B
      sc42C
      sc42D
      sc42E
      sc42F
      sc42G
      sc42H
      0
      sc43A
      sc43B
      sc43C
      sc43D
      sc43E
      sc43F
      sc43G
      sc43H
      0
      sc44A
      sc44B
      sc44C
      sc44D
      sc44E
      sc44F
      sc44G
      sc44H
      0
      sc45A
      sc45B
      sc45C
      sc45D
      sc45E
      sc45F
      sc45G
      sc45H
      0
      sc46A
      sc46B
      sc46C
      sc46D
      sc46E
      sc46F
      sc46G
      sc46H
      0
      sc47A
      sc47B
      sc47C
      sc47D
      sc47E
      sc47F
      sc47G
      sc47H
      0
      sc48A
      sc48B
      sc48C
      sc48D
      sc48E
      sc48F
      sc48G
      sc48H
      0
      sc49A
      sc49B
      sc49C
      sc49D
      sc49E
      sc49F
      sc49G
      sc49H
      0
      sc50A
      sc50B
      sc50C
      sc50D
      sc50E
      sc50F
      sc50G
      sc50H)
   6))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun var7G () String)
(declare-fun var7H () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun unch27G () String)
(declare-fun ch7G () String)
(declare-fun unch17G () String)
(declare-fun unch27H () String)
(declare-fun ch7H () String)
(declare-fun unch17H () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun sc7G () Int)
(declare-fun sc7H () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun var8G () String)
(declare-fun var8H () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun unch28G () String)
(declare-fun ch8G () String)
(declare-fun unch18G () String)
(declare-fun unch28H () String)
(declare-fun ch8H () String)
(declare-fun unch18H () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun sc8G () Int)
(declare-fun sc8H () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun var9G () String)
(declare-fun var9H () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun unch29G () String)
(declare-fun ch9G () String)
(declare-fun unch19G () String)
(declare-fun unch29H () String)
(declare-fun ch9H () String)
(declare-fun unch19H () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun sc9G () Int)
(declare-fun sc9H () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun var10G () String)
(declare-fun var10H () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun unch210G () String)
(declare-fun ch10G () String)
(declare-fun unch110G () String)
(declare-fun unch210H () String)
(declare-fun ch10H () String)
(declare-fun unch110H () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun sc10G () Int)
(declare-fun sc10H () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun var11G () String)
(declare-fun var11H () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun unch211G () String)
(declare-fun ch11G () String)
(declare-fun unch111G () String)
(declare-fun unch211H () String)
(declare-fun ch11H () String)
(declare-fun unch111H () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun sc11G () Int)
(declare-fun sc11H () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun var12G () String)
(declare-fun var12H () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun unch212G () String)
(declare-fun ch12G () String)
(declare-fun unch112G () String)
(declare-fun unch212H () String)
(declare-fun ch12H () String)
(declare-fun unch112H () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun sc12G () Int)
(declare-fun sc12H () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun var13G () String)
(declare-fun var13H () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun unch213G () String)
(declare-fun ch13G () String)
(declare-fun unch113G () String)
(declare-fun unch213H () String)
(declare-fun ch13H () String)
(declare-fun unch113H () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun sc13G () Int)
(declare-fun sc13H () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun var14G () String)
(declare-fun var14H () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun unch214G () String)
(declare-fun ch14G () String)
(declare-fun unch114G () String)
(declare-fun unch214H () String)
(declare-fun ch14H () String)
(declare-fun unch114H () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun sc14G () Int)
(declare-fun sc14H () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun var15G () String)
(declare-fun var15H () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun unch215G () String)
(declare-fun ch15G () String)
(declare-fun unch115G () String)
(declare-fun unch215H () String)
(declare-fun ch15H () String)
(declare-fun unch115H () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun sc15G () Int)
(declare-fun sc15H () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun var16G () String)
(declare-fun var16H () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun unch216G () String)
(declare-fun ch16G () String)
(declare-fun unch116G () String)
(declare-fun unch216H () String)
(declare-fun ch16H () String)
(declare-fun unch116H () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun sc16G () Int)
(declare-fun sc16H () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun var17G () String)
(declare-fun var17H () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun unch217G () String)
(declare-fun ch17G () String)
(declare-fun unch117G () String)
(declare-fun unch217H () String)
(declare-fun ch17H () String)
(declare-fun unch117H () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun sc17G () Int)
(declare-fun sc17H () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun var18G () String)
(declare-fun var18H () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun unch218G () String)
(declare-fun ch18G () String)
(declare-fun unch118G () String)
(declare-fun unch218H () String)
(declare-fun ch18H () String)
(declare-fun unch118H () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun sc18G () Int)
(declare-fun sc18H () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun var19G () String)
(declare-fun var19H () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun unch219G () String)
(declare-fun ch19G () String)
(declare-fun unch119G () String)
(declare-fun unch219H () String)
(declare-fun ch19H () String)
(declare-fun unch119H () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun sc19G () Int)
(declare-fun sc19H () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun var20G () String)
(declare-fun var20H () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun unch220G () String)
(declare-fun ch20G () String)
(declare-fun unch120G () String)
(declare-fun unch220H () String)
(declare-fun ch20H () String)
(declare-fun unch120H () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun sc20G () Int)
(declare-fun sc20H () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun var21G () String)
(declare-fun var21H () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun unch221G () String)
(declare-fun ch21G () String)
(declare-fun unch121G () String)
(declare-fun unch221H () String)
(declare-fun ch21H () String)
(declare-fun unch121H () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun sc21G () Int)
(declare-fun sc21H () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun var22G () String)
(declare-fun var22H () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun unch222G () String)
(declare-fun ch22G () String)
(declare-fun unch122G () String)
(declare-fun unch222H () String)
(declare-fun ch22H () String)
(declare-fun unch122H () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun sc22G () Int)
(declare-fun sc22H () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun var23G () String)
(declare-fun var23H () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun unch223G () String)
(declare-fun ch23G () String)
(declare-fun unch123G () String)
(declare-fun unch223H () String)
(declare-fun ch23H () String)
(declare-fun unch123H () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun sc23G () Int)
(declare-fun sc23H () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun var24G () String)
(declare-fun var24H () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun unch224G () String)
(declare-fun ch24G () String)
(declare-fun unch124G () String)
(declare-fun unch224H () String)
(declare-fun ch24H () String)
(declare-fun unch124H () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun sc24G () Int)
(declare-fun sc24H () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun var25G () String)
(declare-fun var25H () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun unch225G () String)
(declare-fun ch25G () String)
(declare-fun unch125G () String)
(declare-fun unch225H () String)
(declare-fun ch25H () String)
(declare-fun unch125H () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun sc25G () Int)
(declare-fun sc25H () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun var26G () String)
(declare-fun var26H () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun unch226G () String)
(declare-fun ch26G () String)
(declare-fun unch126G () String)
(declare-fun unch226H () String)
(declare-fun ch26H () String)
(declare-fun unch126H () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun sc26G () Int)
(declare-fun sc26H () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun var27G () String)
(declare-fun var27H () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun unch227G () String)
(declare-fun ch27G () String)
(declare-fun unch127G () String)
(declare-fun unch227H () String)
(declare-fun ch27H () String)
(declare-fun unch127H () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun sc27G () Int)
(declare-fun sc27H () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun var28G () String)
(declare-fun var28H () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun unch228G () String)
(declare-fun ch28G () String)
(declare-fun unch128G () String)
(declare-fun unch228H () String)
(declare-fun ch28H () String)
(declare-fun unch128H () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun sc28G () Int)
(declare-fun sc28H () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun var29G () String)
(declare-fun var29H () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun unch229G () String)
(declare-fun ch29G () String)
(declare-fun unch129G () String)
(declare-fun unch229H () String)
(declare-fun ch29H () String)
(declare-fun unch129H () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun sc29G () Int)
(declare-fun sc29H () Int)
(declare-fun var30A () String)
(declare-fun var30B () String)
(declare-fun var30C () String)
(declare-fun var30D () String)
(declare-fun var30E () String)
(declare-fun var30F () String)
(declare-fun var30G () String)
(declare-fun var30H () String)
(declare-fun unch230A () String)
(declare-fun ch30A () String)
(declare-fun unch130A () String)
(declare-fun stem30 () String)
(declare-fun unch230B () String)
(declare-fun ch30B () String)
(declare-fun unch130B () String)
(declare-fun unch230C () String)
(declare-fun ch30C () String)
(declare-fun unch130C () String)
(declare-fun unch230D () String)
(declare-fun ch30D () String)
(declare-fun unch130D () String)
(declare-fun unch230E () String)
(declare-fun ch30E () String)
(declare-fun unch130E () String)
(declare-fun unch230F () String)
(declare-fun ch30F () String)
(declare-fun unch130F () String)
(declare-fun unch230G () String)
(declare-fun ch30G () String)
(declare-fun unch130G () String)
(declare-fun unch230H () String)
(declare-fun ch30H () String)
(declare-fun unch130H () String)
(declare-fun l30 () Int)
(declare-fun sc30A () Int)
(declare-fun sc30B () Int)
(declare-fun sc30C () Int)
(declare-fun sc30D () Int)
(declare-fun sc30E () Int)
(declare-fun sc30F () Int)
(declare-fun sc30G () Int)
(declare-fun sc30H () Int)
(declare-fun var31A () String)
(declare-fun var31B () String)
(declare-fun var31C () String)
(declare-fun var31D () String)
(declare-fun var31E () String)
(declare-fun var31F () String)
(declare-fun var31G () String)
(declare-fun var31H () String)
(declare-fun unch231A () String)
(declare-fun ch31A () String)
(declare-fun unch131A () String)
(declare-fun stem31 () String)
(declare-fun unch231B () String)
(declare-fun ch31B () String)
(declare-fun unch131B () String)
(declare-fun unch231C () String)
(declare-fun ch31C () String)
(declare-fun unch131C () String)
(declare-fun unch231D () String)
(declare-fun ch31D () String)
(declare-fun unch131D () String)
(declare-fun unch231E () String)
(declare-fun ch31E () String)
(declare-fun unch131E () String)
(declare-fun unch231F () String)
(declare-fun ch31F () String)
(declare-fun unch131F () String)
(declare-fun unch231G () String)
(declare-fun ch31G () String)
(declare-fun unch131G () String)
(declare-fun unch231H () String)
(declare-fun ch31H () String)
(declare-fun unch131H () String)
(declare-fun l31 () Int)
(declare-fun sc31A () Int)
(declare-fun sc31B () Int)
(declare-fun sc31C () Int)
(declare-fun sc31D () Int)
(declare-fun sc31E () Int)
(declare-fun sc31F () Int)
(declare-fun sc31G () Int)
(declare-fun sc31H () Int)
(declare-fun var32A () String)
(declare-fun var32B () String)
(declare-fun var32C () String)
(declare-fun var32D () String)
(declare-fun var32E () String)
(declare-fun var32F () String)
(declare-fun var32G () String)
(declare-fun var32H () String)
(declare-fun unch232A () String)
(declare-fun ch32A () String)
(declare-fun unch132A () String)
(declare-fun stem32 () String)
(declare-fun unch232B () String)
(declare-fun ch32B () String)
(declare-fun unch132B () String)
(declare-fun unch232C () String)
(declare-fun ch32C () String)
(declare-fun unch132C () String)
(declare-fun unch232D () String)
(declare-fun ch32D () String)
(declare-fun unch132D () String)
(declare-fun unch232E () String)
(declare-fun ch32E () String)
(declare-fun unch132E () String)
(declare-fun unch232F () String)
(declare-fun ch32F () String)
(declare-fun unch132F () String)
(declare-fun unch232G () String)
(declare-fun ch32G () String)
(declare-fun unch132G () String)
(declare-fun unch232H () String)
(declare-fun ch32H () String)
(declare-fun unch132H () String)
(declare-fun l32 () Int)
(declare-fun sc32A () Int)
(declare-fun sc32B () Int)
(declare-fun sc32C () Int)
(declare-fun sc32D () Int)
(declare-fun sc32E () Int)
(declare-fun sc32F () Int)
(declare-fun sc32G () Int)
(declare-fun sc32H () Int)
(declare-fun var33A () String)
(declare-fun var33B () String)
(declare-fun var33C () String)
(declare-fun var33D () String)
(declare-fun var33E () String)
(declare-fun var33F () String)
(declare-fun var33G () String)
(declare-fun var33H () String)
(declare-fun unch233A () String)
(declare-fun ch33A () String)
(declare-fun unch133A () String)
(declare-fun stem33 () String)
(declare-fun unch233B () String)
(declare-fun ch33B () String)
(declare-fun unch133B () String)
(declare-fun unch233C () String)
(declare-fun ch33C () String)
(declare-fun unch133C () String)
(declare-fun unch233D () String)
(declare-fun ch33D () String)
(declare-fun unch133D () String)
(declare-fun unch233E () String)
(declare-fun ch33E () String)
(declare-fun unch133E () String)
(declare-fun unch233F () String)
(declare-fun ch33F () String)
(declare-fun unch133F () String)
(declare-fun unch233G () String)
(declare-fun ch33G () String)
(declare-fun unch133G () String)
(declare-fun unch233H () String)
(declare-fun ch33H () String)
(declare-fun unch133H () String)
(declare-fun l33 () Int)
(declare-fun sc33A () Int)
(declare-fun sc33B () Int)
(declare-fun sc33C () Int)
(declare-fun sc33D () Int)
(declare-fun sc33E () Int)
(declare-fun sc33F () Int)
(declare-fun sc33G () Int)
(declare-fun sc33H () Int)
(declare-fun var34A () String)
(declare-fun var34B () String)
(declare-fun var34C () String)
(declare-fun var34D () String)
(declare-fun var34E () String)
(declare-fun var34F () String)
(declare-fun var34G () String)
(declare-fun var34H () String)
(declare-fun unch234A () String)
(declare-fun ch34A () String)
(declare-fun unch134A () String)
(declare-fun stem34 () String)
(declare-fun unch234B () String)
(declare-fun ch34B () String)
(declare-fun unch134B () String)
(declare-fun unch234C () String)
(declare-fun ch34C () String)
(declare-fun unch134C () String)
(declare-fun unch234D () String)
(declare-fun ch34D () String)
(declare-fun unch134D () String)
(declare-fun unch234E () String)
(declare-fun ch34E () String)
(declare-fun unch134E () String)
(declare-fun unch234F () String)
(declare-fun ch34F () String)
(declare-fun unch134F () String)
(declare-fun unch234G () String)
(declare-fun ch34G () String)
(declare-fun unch134G () String)
(declare-fun unch234H () String)
(declare-fun ch34H () String)
(declare-fun unch134H () String)
(declare-fun l34 () Int)
(declare-fun sc34A () Int)
(declare-fun sc34B () Int)
(declare-fun sc34C () Int)
(declare-fun sc34D () Int)
(declare-fun sc34E () Int)
(declare-fun sc34F () Int)
(declare-fun sc34G () Int)
(declare-fun sc34H () Int)
(declare-fun var35A () String)
(declare-fun var35B () String)
(declare-fun var35C () String)
(declare-fun var35D () String)
(declare-fun var35E () String)
(declare-fun var35F () String)
(declare-fun var35G () String)
(declare-fun var35H () String)
(declare-fun unch235A () String)
(declare-fun ch35A () String)
(declare-fun unch135A () String)
(declare-fun stem35 () String)
(declare-fun unch235B () String)
(declare-fun ch35B () String)
(declare-fun unch135B () String)
(declare-fun unch235C () String)
(declare-fun ch35C () String)
(declare-fun unch135C () String)
(declare-fun unch235D () String)
(declare-fun ch35D () String)
(declare-fun unch135D () String)
(declare-fun unch235E () String)
(declare-fun ch35E () String)
(declare-fun unch135E () String)
(declare-fun unch235F () String)
(declare-fun ch35F () String)
(declare-fun unch135F () String)
(declare-fun unch235G () String)
(declare-fun ch35G () String)
(declare-fun unch135G () String)
(declare-fun unch235H () String)
(declare-fun ch35H () String)
(declare-fun unch135H () String)
(declare-fun l35 () Int)
(declare-fun sc35A () Int)
(declare-fun sc35B () Int)
(declare-fun sc35C () Int)
(declare-fun sc35D () Int)
(declare-fun sc35E () Int)
(declare-fun sc35F () Int)
(declare-fun sc35G () Int)
(declare-fun sc35H () Int)
(declare-fun var36A () String)
(declare-fun var36B () String)
(declare-fun var36C () String)
(declare-fun var36D () String)
(declare-fun var36E () String)
(declare-fun var36F () String)
(declare-fun var36G () String)
(declare-fun var36H () String)
(declare-fun unch236A () String)
(declare-fun ch36A () String)
(declare-fun unch136A () String)
(declare-fun stem36 () String)
(declare-fun unch236B () String)
(declare-fun ch36B () String)
(declare-fun unch136B () String)
(declare-fun unch236C () String)
(declare-fun ch36C () String)
(declare-fun unch136C () String)
(declare-fun unch236D () String)
(declare-fun ch36D () String)
(declare-fun unch136D () String)
(declare-fun unch236E () String)
(declare-fun ch36E () String)
(declare-fun unch136E () String)
(declare-fun unch236F () String)
(declare-fun ch36F () String)
(declare-fun unch136F () String)
(declare-fun unch236G () String)
(declare-fun ch36G () String)
(declare-fun unch136G () String)
(declare-fun unch236H () String)
(declare-fun ch36H () String)
(declare-fun unch136H () String)
(declare-fun l36 () Int)
(declare-fun sc36A () Int)
(declare-fun sc36B () Int)
(declare-fun sc36C () Int)
(declare-fun sc36D () Int)
(declare-fun sc36E () Int)
(declare-fun sc36F () Int)
(declare-fun sc36G () Int)
(declare-fun sc36H () Int)
(declare-fun var37A () String)
(declare-fun var37B () String)
(declare-fun var37C () String)
(declare-fun var37D () String)
(declare-fun var37E () String)
(declare-fun var37F () String)
(declare-fun var37G () String)
(declare-fun var37H () String)
(declare-fun unch237A () String)
(declare-fun ch37A () String)
(declare-fun unch137A () String)
(declare-fun stem37 () String)
(declare-fun unch237B () String)
(declare-fun ch37B () String)
(declare-fun unch137B () String)
(declare-fun unch237C () String)
(declare-fun ch37C () String)
(declare-fun unch137C () String)
(declare-fun unch237D () String)
(declare-fun ch37D () String)
(declare-fun unch137D () String)
(declare-fun unch237E () String)
(declare-fun ch37E () String)
(declare-fun unch137E () String)
(declare-fun unch237F () String)
(declare-fun ch37F () String)
(declare-fun unch137F () String)
(declare-fun unch237G () String)
(declare-fun ch37G () String)
(declare-fun unch137G () String)
(declare-fun unch237H () String)
(declare-fun ch37H () String)
(declare-fun unch137H () String)
(declare-fun l37 () Int)
(declare-fun sc37A () Int)
(declare-fun sc37B () Int)
(declare-fun sc37C () Int)
(declare-fun sc37D () Int)
(declare-fun sc37E () Int)
(declare-fun sc37F () Int)
(declare-fun sc37G () Int)
(declare-fun sc37H () Int)
(declare-fun var38A () String)
(declare-fun var38B () String)
(declare-fun var38C () String)
(declare-fun var38D () String)
(declare-fun var38E () String)
(declare-fun var38F () String)
(declare-fun var38G () String)
(declare-fun var38H () String)
(declare-fun unch238A () String)
(declare-fun ch38A () String)
(declare-fun unch138A () String)
(declare-fun stem38 () String)
(declare-fun unch238B () String)
(declare-fun ch38B () String)
(declare-fun unch138B () String)
(declare-fun unch238C () String)
(declare-fun ch38C () String)
(declare-fun unch138C () String)
(declare-fun unch238D () String)
(declare-fun ch38D () String)
(declare-fun unch138D () String)
(declare-fun unch238E () String)
(declare-fun ch38E () String)
(declare-fun unch138E () String)
(declare-fun unch238F () String)
(declare-fun ch38F () String)
(declare-fun unch138F () String)
(declare-fun unch238G () String)
(declare-fun ch38G () String)
(declare-fun unch138G () String)
(declare-fun unch238H () String)
(declare-fun ch38H () String)
(declare-fun unch138H () String)
(declare-fun l38 () Int)
(declare-fun sc38A () Int)
(declare-fun sc38B () Int)
(declare-fun sc38C () Int)
(declare-fun sc38D () Int)
(declare-fun sc38E () Int)
(declare-fun sc38F () Int)
(declare-fun sc38G () Int)
(declare-fun sc38H () Int)
(declare-fun var39A () String)
(declare-fun var39B () String)
(declare-fun var39C () String)
(declare-fun var39D () String)
(declare-fun var39E () String)
(declare-fun var39F () String)
(declare-fun var39G () String)
(declare-fun var39H () String)
(declare-fun unch239A () String)
(declare-fun ch39A () String)
(declare-fun unch139A () String)
(declare-fun stem39 () String)
(declare-fun unch239B () String)
(declare-fun ch39B () String)
(declare-fun unch139B () String)
(declare-fun unch239C () String)
(declare-fun ch39C () String)
(declare-fun unch139C () String)
(declare-fun unch239D () String)
(declare-fun ch39D () String)
(declare-fun unch139D () String)
(declare-fun unch239E () String)
(declare-fun ch39E () String)
(declare-fun unch139E () String)
(declare-fun unch239F () String)
(declare-fun ch39F () String)
(declare-fun unch139F () String)
(declare-fun unch239G () String)
(declare-fun ch39G () String)
(declare-fun unch139G () String)
(declare-fun unch239H () String)
(declare-fun ch39H () String)
(declare-fun unch139H () String)
(declare-fun l39 () Int)
(declare-fun sc39A () Int)
(declare-fun sc39B () Int)
(declare-fun sc39C () Int)
(declare-fun sc39D () Int)
(declare-fun sc39E () Int)
(declare-fun sc39F () Int)
(declare-fun sc39G () Int)
(declare-fun sc39H () Int)
(declare-fun var40A () String)
(declare-fun var40B () String)
(declare-fun var40C () String)
(declare-fun var40D () String)
(declare-fun var40E () String)
(declare-fun var40F () String)
(declare-fun var40G () String)
(declare-fun var40H () String)
(declare-fun unch240A () String)
(declare-fun ch40A () String)
(declare-fun unch140A () String)
(declare-fun stem40 () String)
(declare-fun unch240B () String)
(declare-fun ch40B () String)
(declare-fun unch140B () String)
(declare-fun unch240C () String)
(declare-fun ch40C () String)
(declare-fun unch140C () String)
(declare-fun unch240D () String)
(declare-fun ch40D () String)
(declare-fun unch140D () String)
(declare-fun unch240E () String)
(declare-fun ch40E () String)
(declare-fun unch140E () String)
(declare-fun unch240F () String)
(declare-fun ch40F () String)
(declare-fun unch140F () String)
(declare-fun unch240G () String)
(declare-fun ch40G () String)
(declare-fun unch140G () String)
(declare-fun unch240H () String)
(declare-fun ch40H () String)
(declare-fun unch140H () String)
(declare-fun l40 () Int)
(declare-fun sc40A () Int)
(declare-fun sc40B () Int)
(declare-fun sc40C () Int)
(declare-fun sc40D () Int)
(declare-fun sc40E () Int)
(declare-fun sc40F () Int)
(declare-fun sc40G () Int)
(declare-fun sc40H () Int)
(declare-fun var41A () String)
(declare-fun var41B () String)
(declare-fun var41C () String)
(declare-fun var41D () String)
(declare-fun var41E () String)
(declare-fun var41F () String)
(declare-fun var41G () String)
(declare-fun var41H () String)
(declare-fun unch241A () String)
(declare-fun ch41A () String)
(declare-fun unch141A () String)
(declare-fun stem41 () String)
(declare-fun unch241B () String)
(declare-fun ch41B () String)
(declare-fun unch141B () String)
(declare-fun unch241C () String)
(declare-fun ch41C () String)
(declare-fun unch141C () String)
(declare-fun unch241D () String)
(declare-fun ch41D () String)
(declare-fun unch141D () String)
(declare-fun unch241E () String)
(declare-fun ch41E () String)
(declare-fun unch141E () String)
(declare-fun unch241F () String)
(declare-fun ch41F () String)
(declare-fun unch141F () String)
(declare-fun unch241G () String)
(declare-fun ch41G () String)
(declare-fun unch141G () String)
(declare-fun unch241H () String)
(declare-fun ch41H () String)
(declare-fun unch141H () String)
(declare-fun l41 () Int)
(declare-fun sc41A () Int)
(declare-fun sc41B () Int)
(declare-fun sc41C () Int)
(declare-fun sc41D () Int)
(declare-fun sc41E () Int)
(declare-fun sc41F () Int)
(declare-fun sc41G () Int)
(declare-fun sc41H () Int)
(declare-fun var42A () String)
(declare-fun var42B () String)
(declare-fun var42C () String)
(declare-fun var42D () String)
(declare-fun var42E () String)
(declare-fun var42F () String)
(declare-fun var42G () String)
(declare-fun var42H () String)
(declare-fun unch242A () String)
(declare-fun ch42A () String)
(declare-fun unch142A () String)
(declare-fun stem42 () String)
(declare-fun unch242B () String)
(declare-fun ch42B () String)
(declare-fun unch142B () String)
(declare-fun unch242C () String)
(declare-fun ch42C () String)
(declare-fun unch142C () String)
(declare-fun unch242D () String)
(declare-fun ch42D () String)
(declare-fun unch142D () String)
(declare-fun unch242E () String)
(declare-fun ch42E () String)
(declare-fun unch142E () String)
(declare-fun unch242F () String)
(declare-fun ch42F () String)
(declare-fun unch142F () String)
(declare-fun unch242G () String)
(declare-fun ch42G () String)
(declare-fun unch142G () String)
(declare-fun unch242H () String)
(declare-fun ch42H () String)
(declare-fun unch142H () String)
(declare-fun l42 () Int)
(declare-fun sc42A () Int)
(declare-fun sc42B () Int)
(declare-fun sc42C () Int)
(declare-fun sc42D () Int)
(declare-fun sc42E () Int)
(declare-fun sc42F () Int)
(declare-fun sc42G () Int)
(declare-fun sc42H () Int)
(declare-fun var43A () String)
(declare-fun var43B () String)
(declare-fun var43C () String)
(declare-fun var43D () String)
(declare-fun var43E () String)
(declare-fun var43F () String)
(declare-fun var43G () String)
(declare-fun var43H () String)
(declare-fun unch243A () String)
(declare-fun ch43A () String)
(declare-fun unch143A () String)
(declare-fun stem43 () String)
(declare-fun unch243B () String)
(declare-fun ch43B () String)
(declare-fun unch143B () String)
(declare-fun unch243C () String)
(declare-fun ch43C () String)
(declare-fun unch143C () String)
(declare-fun unch243D () String)
(declare-fun ch43D () String)
(declare-fun unch143D () String)
(declare-fun unch243E () String)
(declare-fun ch43E () String)
(declare-fun unch143E () String)
(declare-fun unch243F () String)
(declare-fun ch43F () String)
(declare-fun unch143F () String)
(declare-fun unch243G () String)
(declare-fun ch43G () String)
(declare-fun unch143G () String)
(declare-fun unch243H () String)
(declare-fun ch43H () String)
(declare-fun unch143H () String)
(declare-fun l43 () Int)
(declare-fun sc43A () Int)
(declare-fun sc43B () Int)
(declare-fun sc43C () Int)
(declare-fun sc43D () Int)
(declare-fun sc43E () Int)
(declare-fun sc43F () Int)
(declare-fun sc43G () Int)
(declare-fun sc43H () Int)
(declare-fun var44A () String)
(declare-fun var44B () String)
(declare-fun var44C () String)
(declare-fun var44D () String)
(declare-fun var44E () String)
(declare-fun var44F () String)
(declare-fun var44G () String)
(declare-fun var44H () String)
(declare-fun unch244A () String)
(declare-fun ch44A () String)
(declare-fun unch144A () String)
(declare-fun stem44 () String)
(declare-fun unch244B () String)
(declare-fun ch44B () String)
(declare-fun unch144B () String)
(declare-fun unch244C () String)
(declare-fun ch44C () String)
(declare-fun unch144C () String)
(declare-fun unch244D () String)
(declare-fun ch44D () String)
(declare-fun unch144D () String)
(declare-fun unch244E () String)
(declare-fun ch44E () String)
(declare-fun unch144E () String)
(declare-fun unch244F () String)
(declare-fun ch44F () String)
(declare-fun unch144F () String)
(declare-fun unch244G () String)
(declare-fun ch44G () String)
(declare-fun unch144G () String)
(declare-fun unch244H () String)
(declare-fun ch44H () String)
(declare-fun unch144H () String)
(declare-fun l44 () Int)
(declare-fun sc44A () Int)
(declare-fun sc44B () Int)
(declare-fun sc44C () Int)
(declare-fun sc44D () Int)
(declare-fun sc44E () Int)
(declare-fun sc44F () Int)
(declare-fun sc44G () Int)
(declare-fun sc44H () Int)
(declare-fun var45A () String)
(declare-fun var45B () String)
(declare-fun var45C () String)
(declare-fun var45D () String)
(declare-fun var45E () String)
(declare-fun var45F () String)
(declare-fun var45G () String)
(declare-fun var45H () String)
(declare-fun unch245A () String)
(declare-fun ch45A () String)
(declare-fun unch145A () String)
(declare-fun stem45 () String)
(declare-fun unch245B () String)
(declare-fun ch45B () String)
(declare-fun unch145B () String)
(declare-fun unch245C () String)
(declare-fun ch45C () String)
(declare-fun unch145C () String)
(declare-fun unch245D () String)
(declare-fun ch45D () String)
(declare-fun unch145D () String)
(declare-fun unch245E () String)
(declare-fun ch45E () String)
(declare-fun unch145E () String)
(declare-fun unch245F () String)
(declare-fun ch45F () String)
(declare-fun unch145F () String)
(declare-fun unch245G () String)
(declare-fun ch45G () String)
(declare-fun unch145G () String)
(declare-fun unch245H () String)
(declare-fun ch45H () String)
(declare-fun unch145H () String)
(declare-fun l45 () Int)
(declare-fun sc45A () Int)
(declare-fun sc45B () Int)
(declare-fun sc45C () Int)
(declare-fun sc45D () Int)
(declare-fun sc45E () Int)
(declare-fun sc45F () Int)
(declare-fun sc45G () Int)
(declare-fun sc45H () Int)
(declare-fun var46A () String)
(declare-fun var46B () String)
(declare-fun var46C () String)
(declare-fun var46D () String)
(declare-fun var46E () String)
(declare-fun var46F () String)
(declare-fun var46G () String)
(declare-fun var46H () String)
(declare-fun unch246A () String)
(declare-fun ch46A () String)
(declare-fun unch146A () String)
(declare-fun stem46 () String)
(declare-fun unch246B () String)
(declare-fun ch46B () String)
(declare-fun unch146B () String)
(declare-fun unch246C () String)
(declare-fun ch46C () String)
(declare-fun unch146C () String)
(declare-fun unch246D () String)
(declare-fun ch46D () String)
(declare-fun unch146D () String)
(declare-fun unch246E () String)
(declare-fun ch46E () String)
(declare-fun unch146E () String)
(declare-fun unch246F () String)
(declare-fun ch46F () String)
(declare-fun unch146F () String)
(declare-fun unch246G () String)
(declare-fun ch46G () String)
(declare-fun unch146G () String)
(declare-fun unch246H () String)
(declare-fun ch46H () String)
(declare-fun unch146H () String)
(declare-fun l46 () Int)
(declare-fun sc46A () Int)
(declare-fun sc46B () Int)
(declare-fun sc46C () Int)
(declare-fun sc46D () Int)
(declare-fun sc46E () Int)
(declare-fun sc46F () Int)
(declare-fun sc46G () Int)
(declare-fun sc46H () Int)
(declare-fun var47A () String)
(declare-fun var47B () String)
(declare-fun var47C () String)
(declare-fun var47D () String)
(declare-fun var47E () String)
(declare-fun var47F () String)
(declare-fun var47G () String)
(declare-fun var47H () String)
(declare-fun unch247A () String)
(declare-fun ch47A () String)
(declare-fun unch147A () String)
(declare-fun stem47 () String)
(declare-fun unch247B () String)
(declare-fun ch47B () String)
(declare-fun unch147B () String)
(declare-fun unch247C () String)
(declare-fun ch47C () String)
(declare-fun unch147C () String)
(declare-fun unch247D () String)
(declare-fun ch47D () String)
(declare-fun unch147D () String)
(declare-fun unch247E () String)
(declare-fun ch47E () String)
(declare-fun unch147E () String)
(declare-fun unch247F () String)
(declare-fun ch47F () String)
(declare-fun unch147F () String)
(declare-fun unch247G () String)
(declare-fun ch47G () String)
(declare-fun unch147G () String)
(declare-fun unch247H () String)
(declare-fun ch47H () String)
(declare-fun unch147H () String)
(declare-fun l47 () Int)
(declare-fun sc47A () Int)
(declare-fun sc47B () Int)
(declare-fun sc47C () Int)
(declare-fun sc47D () Int)
(declare-fun sc47E () Int)
(declare-fun sc47F () Int)
(declare-fun sc47G () Int)
(declare-fun sc47H () Int)
(declare-fun var48A () String)
(declare-fun var48B () String)
(declare-fun var48C () String)
(declare-fun var48D () String)
(declare-fun var48E () String)
(declare-fun var48F () String)
(declare-fun var48G () String)
(declare-fun var48H () String)
(declare-fun unch248A () String)
(declare-fun ch48A () String)
(declare-fun unch148A () String)
(declare-fun stem48 () String)
(declare-fun unch248B () String)
(declare-fun ch48B () String)
(declare-fun unch148B () String)
(declare-fun unch248C () String)
(declare-fun ch48C () String)
(declare-fun unch148C () String)
(declare-fun unch248D () String)
(declare-fun ch48D () String)
(declare-fun unch148D () String)
(declare-fun unch248E () String)
(declare-fun ch48E () String)
(declare-fun unch148E () String)
(declare-fun unch248F () String)
(declare-fun ch48F () String)
(declare-fun unch148F () String)
(declare-fun unch248G () String)
(declare-fun ch48G () String)
(declare-fun unch148G () String)
(declare-fun unch248H () String)
(declare-fun ch48H () String)
(declare-fun unch148H () String)
(declare-fun l48 () Int)
(declare-fun sc48A () Int)
(declare-fun sc48B () Int)
(declare-fun sc48C () Int)
(declare-fun sc48D () Int)
(declare-fun sc48E () Int)
(declare-fun sc48F () Int)
(declare-fun sc48G () Int)
(declare-fun sc48H () Int)
(declare-fun var49A () String)
(declare-fun var49B () String)
(declare-fun var49C () String)
(declare-fun var49D () String)
(declare-fun var49E () String)
(declare-fun var49F () String)
(declare-fun var49G () String)
(declare-fun var49H () String)
(declare-fun unch249A () String)
(declare-fun ch49A () String)
(declare-fun unch149A () String)
(declare-fun stem49 () String)
(declare-fun unch249B () String)
(declare-fun ch49B () String)
(declare-fun unch149B () String)
(declare-fun unch249C () String)
(declare-fun ch49C () String)
(declare-fun unch149C () String)
(declare-fun unch249D () String)
(declare-fun ch49D () String)
(declare-fun unch149D () String)
(declare-fun unch249E () String)
(declare-fun ch49E () String)
(declare-fun unch149E () String)
(declare-fun unch249F () String)
(declare-fun ch49F () String)
(declare-fun unch149F () String)
(declare-fun unch249G () String)
(declare-fun ch49G () String)
(declare-fun unch149G () String)
(declare-fun unch249H () String)
(declare-fun ch49H () String)
(declare-fun unch149H () String)
(declare-fun l49 () Int)
(declare-fun sc49A () Int)
(declare-fun sc49B () Int)
(declare-fun sc49C () Int)
(declare-fun sc49D () Int)
(declare-fun sc49E () Int)
(declare-fun sc49F () Int)
(declare-fun sc49G () Int)
(declare-fun sc49H () Int)
(declare-fun var50A () String)
(declare-fun var50B () String)
(declare-fun var50C () String)
(declare-fun var50D () String)
(declare-fun var50E () String)
(declare-fun var50F () String)
(declare-fun var50G () String)
(declare-fun var50H () String)
(declare-fun unch250A () String)
(declare-fun ch50A () String)
(declare-fun unch150A () String)
(declare-fun stem50 () String)
(declare-fun unch250B () String)
(declare-fun ch50B () String)
(declare-fun unch150B () String)
(declare-fun unch250C () String)
(declare-fun ch50C () String)
(declare-fun unch150C () String)
(declare-fun unch250D () String)
(declare-fun ch50D () String)
(declare-fun unch150D () String)
(declare-fun unch250E () String)
(declare-fun ch50E () String)
(declare-fun unch150E () String)
(declare-fun unch250F () String)
(declare-fun ch50F () String)
(declare-fun unch150F () String)
(declare-fun unch250G () String)
(declare-fun ch50G () String)
(declare-fun unch150G () String)
(declare-fun unch250H () String)
(declare-fun ch50H () String)
(declare-fun unch150H () String)
(declare-fun l50 () Int)
(declare-fun sc50A () Int)
(declare-fun sc50B () Int)
(declare-fun sc50C () Int)
(declare-fun sc50D () Int)
(declare-fun sc50E () Int)
(declare-fun sc50F () Int)
(declare-fun sc50G () Int)
(declare-fun sc50H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "plOst" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "plastO" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "plasjkjX" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "skorZx" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "skoruxO" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "skorusjX" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "1jrjXx" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "1jrjixO" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "1jrjisjX" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "pastZx" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "pastuxO" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "pastusjX" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "mjnjZx" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "mjnjZxa" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "mjnjZsji" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "plZ1" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "plZ1a" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "plZzji" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "sjtjX1" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "st21a" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "st2zji" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (<= (str.len var7G) 1))
(assert (<= (str.len var7H) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= (str.++ preG (str.++ stem7 sufG)) (str.++ unch17G (str.++ ch7G unch27G))))
(assert (= (str.++ preH (str.++ stem7 sufH)) (str.++ unch17H (str.++ ch7H unch27H))))
(assert (= "sOk" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "sOka" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "sOtsji" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (= (ite (= ch7G var7G) 0 1) sc7G))
(assert (= (ite (= ch7H var7H) 0 1) sc7H))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= sc7G 1))
(assert (<= sc7H 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (<= (str.len var8G) 1))
(assert (<= (str.len var8H) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= (str.++ preG (str.++ stem8 sufG)) (str.++ unch18G (str.++ ch8G unch28G))))
(assert (= (str.++ preH (str.++ stem8 sufH)) (str.++ unch18H (str.++ ch8H unch28H))))
(assert (= "b3k" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "bHkO" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "bHtsjX" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (= (ite (= ch8G var8G) 0 1) sc8G))
(assert (= (ite (= ch8H var8H) 0 1) sc8H))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= sc8G 1))
(assert (<= sc8H 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (<= (str.len var9G) 1))
(assert (<= (str.len var9H) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= (str.++ preG (str.++ stem9 sufG)) (str.++ unch19G (str.++ ch9G unch29G))))
(assert (= (str.++ preH (str.++ stem9 sufH)) (str.++ unch19H (str.++ ch9H unch29H))))
(assert (= "l3st" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "lHstO" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "lHsjkjX" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (= (ite (= ch9G var9G) 0 1) sc9G))
(assert (= (ite (= ch9H var9H) 0 1) sc9H))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= sc9G 1))
(assert (<= sc9H 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (<= (str.len var10G) 1))
(assert (<= (str.len var10H) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= (str.++ preG (str.++ stem10 sufG)) (str.++ unch110G (str.++ ch10G unch210G))))
(assert (= (str.++ preH (str.++ stem10 sufH)) (str.++ unch110H (str.++ ch10H unch210H))))
(assert (= "l3st" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "l3sta" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "l3sjkji" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (= (ite (= ch10G var10G) 0 1) sc10G))
(assert (= (ite (= ch10H var10H) 0 1) sc10H))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= sc10G 1))
(assert (<= sc10H 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (<= (str.len var11G) 1))
(assert (<= (str.len var11H) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= (str.++ preG (str.++ stem11 sufG)) (str.++ unch111G (str.++ ch11G unch211G))))
(assert (= (str.++ preH (str.++ stem11 sufH)) (str.++ unch111H (str.++ ch11H unch211H))))
(assert (= "pjljXt" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "pl2ta" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "pl2kji" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (= (ite (= ch11G var11G) 0 1) sc11G))
(assert (= (ite (= ch11H var11H) 0 1) sc11H))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= sc11G 1))
(assert (<= sc11H 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (<= (str.len var12G) 1))
(assert (<= (str.len var12H) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= (str.++ preG (str.++ stem12 sufG)) (str.++ unch112G (str.++ ch12G unch212G))))
(assert (= (str.++ preH (str.++ stem12 sufH)) (str.++ unch112H (str.++ ch12H unch212H))))
(assert (= "sjmjrjXd" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "smr2da" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "smr2gji" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (= (ite (= ch12G var12G) 0 1) sc12G))
(assert (= (ite (= ch12H var12H) 0 1) sc12H))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= sc12G 1))
(assert (<= sc12H 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (<= (str.len var13G) 1))
(assert (<= (str.len var13H) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= (str.++ preG (str.++ stem13 sufG)) (str.++ unch113G (str.++ ch13G unch213G))))
(assert (= (str.++ preH (str.++ stem13 sufH)) (str.++ unch113H (str.++ ch13H unch213H))))
(assert (= "fjXst" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "fostO" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "fosjkjX" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (= (ite (= ch13G var13G) 0 1) sc13G))
(assert (= (ite (= ch13H var13H) 0 1) sc13H))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= sc13G 1))
(assert (<= sc13H 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (<= (str.len var14G) 1))
(assert (<= (str.len var14H) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= (str.++ preG (str.++ stem14 sufG)) (str.++ unch114G (str.++ ch14G unch214G))))
(assert (= (str.++ preH (str.++ stem14 sufH)) (str.++ unch114H (str.++ ch14H unch214H))))
(assert (= "mjXst" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "m2sta" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "m2sjkji" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (= (ite (= ch14G var14G) 0 1) sc14G))
(assert (= (ite (= ch14H var14H) 0 1) sc14H))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= sc14G 1))
(assert (<= sc14H 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (<= (str.len var15G) 1))
(assert (<= (str.len var15H) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= (str.++ preG (str.++ stem15 sufG)) (str.++ unch115G (str.++ ch15G unch215G))))
(assert (= (str.++ preH (str.++ stem15 sufH)) (str.++ unch115H (str.++ ch15H unch215H))))
(assert (= "ljXd" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "l4du" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "lHdZ" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (= (ite (= ch15G var15G) 0 1) sc15G))
(assert (= (ite (= ch15H var15H) 0 1) sc15H))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= sc15G 1))
(assert (<= sc15H 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (<= (str.len var16G) 1))
(assert (<= (str.len var16H) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= (str.++ preG (str.++ stem16 sufG)) (str.++ unch116G (str.++ ch16G unch216G))))
(assert (= (str.++ preH (str.++ stem16 sufH)) (str.++ unch116H (str.++ ch16H unch216H))))
(assert (= "djrjXt" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "dr2ta" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "dr2kji" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (= (ite (= ch16G var16G) 0 1) sc16G))
(assert (= (ite (= ch16H var16H) 0 1) sc16H))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= sc16G 1))
(assert (<= sc16H 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (<= (str.len var17G) 1))
(assert (<= (str.len var17H) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= (str.++ preG (str.++ stem17 sufG)) (str.++ unch117G (str.++ ch17G unch217G))))
(assert (= (str.++ preH (str.++ stem17 sufH)) (str.++ unch117H (str.++ ch17H unch217H))))
(assert (= "mjXd" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "m4du" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "mHdZ" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (= (ite (= ch17G var17G) 0 1) sc17G))
(assert (= (ite (= ch17H var17H) 0 1) sc17H))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= sc17G 1))
(assert (<= sc17H 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (<= (str.len var18G) 1))
(assert (<= (str.len var18H) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= (str.++ preG (str.++ stem18 sufG)) (str.++ unch118G (str.++ ch18G unch218G))))
(assert (= (str.++ preH (str.++ stem18 sufH)) (str.++ unch118H (str.++ ch18H unch218H))))
(assert (= "vjXl" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "volO" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "voljX" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (= (ite (= ch18G var18G) 0 1) sc18G))
(assert (= (ite (= ch18H var18H) 0 1) sc18H))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= sc18G 1))
(assert (<= sc18H 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (<= (str.len var19G) 1))
(assert (<= (str.len var19H) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= (str.++ preG (str.++ stem19 sufG)) (str.++ unch119G (str.++ ch19G unch219G))))
(assert (= (str.++ preH (str.++ stem19 sufH)) (str.++ unch119H (str.++ ch19H unch219H))))
(assert (= "vjXz" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "v2za" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "v2zji" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (= (ite (= ch19G var19G) 0 1) sc19G))
(assert (= (ite (= ch19H var19H) 0 1) sc19H))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= sc19G 1))
(assert (<= sc19H 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (<= (str.len var20G) 1))
(assert (<= (str.len var20H) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= (str.++ preG (str.++ stem20 sufG)) (str.++ unch120G (str.++ ch20G unch220G))))
(assert (= (str.++ preH (str.++ stem20 sufH)) (str.++ unch120H (str.++ ch20H unch220H))))
(assert (= "s3r" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "s3ra" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "s3rji" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (= (ite (= ch20G var20G) 0 1) sc20G))
(assert (= (ite (= ch20H var20H) 0 1) sc20H))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= sc20G 1))
(assert (<= sc20H 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (<= (str.len var21G) 1))
(assert (<= (str.len var21H) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= (str.++ preG (str.++ stem21 sufG)) (str.++ unch121G (str.++ ch21G unch221G))))
(assert (= (str.++ preH (str.++ stem21 sufH)) (str.++ unch121H (str.++ ch21H unch221H))))
(assert (= "sjnjXp" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "snopO" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "snopjX" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (= (ite (= ch21G var21G) 0 1) sc21G))
(assert (= (ite (= ch21H var21H) 0 1) sc21H))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= sc21G 1))
(assert (<= sc21H 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (<= (str.len var22G) 1))
(assert (<= (str.len var22H) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= (str.++ preG (str.++ stem22 sufG)) (str.++ unch122G (str.++ ch22G unch222G))))
(assert (= (str.++ preH (str.++ stem22 sufH)) (str.++ unch122H (str.++ ch22H unch222H))))
(assert (= "1r3b" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "1rHbO" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "1rHbjX" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (= (ite (= ch22G var22G) 0 1) sc22G))
(assert (= (ite (= ch22H var22H) 0 1) sc22H))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= sc22G 1))
(assert (<= sc22H 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (<= (str.len var23G) 1))
(assert (<= (str.len var23H) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= (str.++ preG (str.++ stem23 sufG)) (str.++ unch123G (str.++ ch23G unch223G))))
(assert (= (str.++ preH (str.++ stem23 sufH)) (str.++ unch123H (str.++ ch23H unch223H))))
(assert (= "l4bjid" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= "l4bHda" (str.++ unch123B (str.++ var23B unch223B))))
(assert (= "l4bHgji" (str.++ unch123C (str.++ var23C unch223C))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (= (ite (= ch23G var23G) 0 1) sc23G))
(assert (= (ite (= ch23H var23H) 0 1) sc23H))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= sc23G 1))
(assert (<= sc23H 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (<= (str.len var24G) 1))
(assert (<= (str.len var24H) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= (str.++ preG (str.++ stem24 sufG)) (str.++ unch124G (str.++ ch24G unch224G))))
(assert (= (str.++ preH (str.++ stem24 sufH)) (str.++ unch124H (str.++ ch24H unch224H))))
(assert (= "b4rji1" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= "b4rH1a" (str.++ unch124B (str.++ var24B unch224B))))
(assert (= "b4rHzji" (str.++ unch124C (str.++ var24C unch224C))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (= (ite (= ch24G var24G) 0 1) sc24G))
(assert (= (ite (= ch24H var24H) 0 1) sc24H))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= sc24G 1))
(assert (<= sc24H 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (<= (str.len var25G) 1))
(assert (<= (str.len var25H) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= (str.++ preG (str.++ stem25 sufG)) (str.++ unch125G (str.++ ch25G unch225G))))
(assert (= (str.++ preH (str.++ stem25 sufH)) (str.++ unch125H (str.++ ch25H unch225H))))
(assert (= "pHrjX1" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= "pHr21a" (str.++ unch125B (str.++ var25B unch225B))))
(assert (= "pHr2zji" (str.++ unch125C (str.++ var25C unch225C))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (= (ite (= ch25G var25G) 0 1) sc25G))
(assert (= (ite (= ch25H var25H) 0 1) sc25H))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= sc25G 1))
(assert (<= sc25H 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (<= (str.len var26G) 1))
(assert (<= (str.len var26H) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= (str.++ preG (str.++ stem26 sufG)) (str.++ unch126G (str.++ ch26G unch226G))))
(assert (= (str.++ preH (str.++ stem26 sufH)) (str.++ unch126H (str.++ ch26H unch226H))))
(assert (= "porjX1" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= "por21a" (str.++ unch126B (str.++ var26B unch226B))))
(assert (= "por2zji" (str.++ unch126C (str.++ var26C unch226C))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (= (ite (= ch26G var26G) 0 1) sc26G))
(assert (= (ite (= ch26H var26H) 0 1) sc26H))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= sc26G 1))
(assert (<= sc26H 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (<= (str.len var27G) 1))
(assert (<= (str.len var27H) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= (str.++ preG (str.++ stem27 sufG)) (str.++ unch127G (str.++ ch27G unch227G))))
(assert (= (str.++ preH (str.++ stem27 sufH)) (str.++ unch127H (str.++ ch27H unch227H))))
(assert (= "bolj3k" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= "boljHkO" (str.++ unch127B (str.++ var27B unch227B))))
(assert (= "boljHtsjX" (str.++ unch127C (str.++ var27C unch227C))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (= (ite (= ch27G var27G) 0 1) sc27G))
(assert (= (ite (= ch27H var27H) 0 1) sc27H))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= sc27G 1))
(assert (<= sc27H 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (<= (str.len var28G) 1))
(assert (<= (str.len var28H) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= (str.++ preG (str.++ stem28 sufG)) (str.++ unch128G (str.++ ch28G unch228G))))
(assert (= (str.++ preH (str.++ stem28 sufH)) (str.++ unch128H (str.++ ch28H unch228H))))
(assert (= "v2rji1" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= "v2ro1a" (str.++ unch128B (str.++ var28B unch228B))))
(assert (= "v2rozji" (str.++ unch128C (str.++ var28C unch228C))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (= (ite (= ch28G var28G) 0 1) sc28G))
(assert (= (ite (= ch28H var28H) 0 1) sc28H))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= sc28G 1))
(assert (<= sc28H 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (<= (str.len var29G) 1))
(assert (<= (str.len var29H) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= (str.++ preG (str.++ stem29 sufG)) (str.++ unch129G (str.++ ch29G unch229G))))
(assert (= (str.++ preH (str.++ stem29 sufH)) (str.++ unch129H (str.++ ch29H unch229H))))
(assert (= "k2nHk" (str.++ unch129A (str.++ var29A unch229A))))
(assert (= "k2nHka" (str.++ unch129B (str.++ var29B unch229B))))
(assert (= "k2nHtsji" (str.++ unch129C (str.++ var29C unch229C))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (= (ite (= ch29G var29G) 0 1) sc29G))
(assert (= (ite (= ch29H var29H) 0 1) sc29H))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= sc29G 1))
(assert (<= sc29H 1))
(assert (<= (str.len var30A) 1))
(assert (<= (str.len var30B) 1))
(assert (<= (str.len var30C) 1))
(assert (<= (str.len var30D) 1))
(assert (<= (str.len var30E) 1))
(assert (<= (str.len var30F) 1))
(assert (<= (str.len var30G) 1))
(assert (<= (str.len var30H) 1))
(assert (= (str.++ preA (str.++ stem30 sufA)) (str.++ unch130A (str.++ ch30A unch230A))))
(assert (= (str.++ preB (str.++ stem30 sufB)) (str.++ unch130B (str.++ ch30B unch230B))))
(assert (= (str.++ preC (str.++ stem30 sufC)) (str.++ unch130C (str.++ ch30C unch230C))))
(assert (= (str.++ preD (str.++ stem30 sufD)) (str.++ unch130D (str.++ ch30D unch230D))))
(assert (= (str.++ preE (str.++ stem30 sufE)) (str.++ unch130E (str.++ ch30E unch230E))))
(assert (= (str.++ preF (str.++ stem30 sufF)) (str.++ unch130F (str.++ ch30F unch230F))))
(assert (= (str.++ preG (str.++ stem30 sufG)) (str.++ unch130G (str.++ ch30G unch230G))))
(assert (= (str.++ preH (str.++ stem30 sufH)) (str.++ unch130H (str.++ ch30H unch230H))))
(assert (= "p2tjik" (str.++ unch130A (str.++ var30A unch230A))))
(assert (= "pot2ka" (str.++ unch130B (str.++ var30B unch230B))))
(assert (= "pot2tsji" (str.++ unch130C (str.++ var30C unch230C))))
(assert (= (str.len stem30) l30))
(assert (= (ite (= ch30A var30A) 0 1) sc30A))
(assert (= (ite (= ch30B var30B) 0 1) sc30B))
(assert (= (ite (= ch30C var30C) 0 1) sc30C))
(assert (= (ite (= ch30D var30D) 0 1) sc30D))
(assert (= (ite (= ch30E var30E) 0 1) sc30E))
(assert (= (ite (= ch30F var30F) 0 1) sc30F))
(assert (= (ite (= ch30G var30G) 0 1) sc30G))
(assert (= (ite (= ch30H var30H) 0 1) sc30H))
(assert (<= sc30A 1))
(assert (<= sc30B 1))
(assert (<= sc30C 1))
(assert (<= sc30D 1))
(assert (<= sc30E 1))
(assert (<= sc30F 1))
(assert (<= sc30G 1))
(assert (<= sc30H 1))
(assert (<= (str.len var31A) 1))
(assert (<= (str.len var31B) 1))
(assert (<= (str.len var31C) 1))
(assert (<= (str.len var31D) 1))
(assert (<= (str.len var31E) 1))
(assert (<= (str.len var31F) 1))
(assert (<= (str.len var31G) 1))
(assert (<= (str.len var31H) 1))
(assert (= (str.++ preA (str.++ stem31 sufA)) (str.++ unch131A (str.++ ch31A unch231A))))
(assert (= (str.++ preB (str.++ stem31 sufB)) (str.++ unch131B (str.++ ch31B unch231B))))
(assert (= (str.++ preC (str.++ stem31 sufC)) (str.++ unch131C (str.++ ch31C unch231C))))
(assert (= (str.++ preD (str.++ stem31 sufD)) (str.++ unch131D (str.++ ch31D unch231D))))
(assert (= (str.++ preE (str.++ stem31 sufE)) (str.++ unch131E (str.++ ch31E unch231E))))
(assert (= (str.++ preF (str.++ stem31 sufF)) (str.++ unch131F (str.++ ch31F unch231F))))
(assert (= (str.++ preG (str.++ stem31 sufG)) (str.++ unch131G (str.++ ch31G unch231G))))
(assert (= (str.++ preH (str.++ stem31 sufH)) (str.++ unch131H (str.++ ch31H unch231H))))
(assert (= "tjXk" (str.++ unch131A (str.++ var31A unch231A))))
(assert (= "t2ka" (str.++ unch131B (str.++ var31B unch231B))))
(assert (= "t2tsji" (str.++ unch131C (str.++ var31C unch231C))))
(assert (= (str.len stem31) l31))
(assert (= (ite (= ch31A var31A) 0 1) sc31A))
(assert (= (ite (= ch31B var31B) 0 1) sc31B))
(assert (= (ite (= ch31C var31C) 0 1) sc31C))
(assert (= (ite (= ch31D var31D) 0 1) sc31D))
(assert (= (ite (= ch31E var31E) 0 1) sc31E))
(assert (= (ite (= ch31F var31F) 0 1) sc31F))
(assert (= (ite (= ch31G var31G) 0 1) sc31G))
(assert (= (ite (= ch31H var31H) 0 1) sc31H))
(assert (<= sc31A 1))
(assert (<= sc31B 1))
(assert (<= sc31C 1))
(assert (<= sc31D 1))
(assert (<= sc31E 1))
(assert (<= sc31F 1))
(assert (<= sc31G 1))
(assert (<= sc31H 1))
(assert (<= (str.len var32A) 1))
(assert (<= (str.len var32B) 1))
(assert (<= (str.len var32C) 1))
(assert (<= (str.len var32D) 1))
(assert (<= (str.len var32E) 1))
(assert (<= (str.len var32F) 1))
(assert (<= (str.len var32G) 1))
(assert (<= (str.len var32H) 1))
(assert (= (str.++ preA (str.++ stem32 sufA)) (str.++ unch132A (str.++ ch32A unch232A))))
(assert (= (str.++ preB (str.++ stem32 sufB)) (str.++ unch132B (str.++ ch32B unch232B))))
(assert (= (str.++ preC (str.++ stem32 sufC)) (str.++ unch132C (str.++ ch32C unch232C))))
(assert (= (str.++ preD (str.++ stem32 sufD)) (str.++ unch132D (str.++ ch32D unch232D))))
(assert (= (str.++ preE (str.++ stem32 sufE)) (str.++ unch132E (str.++ ch32E unch232E))))
(assert (= (str.++ preF (str.++ stem32 sufF)) (str.++ unch132F (str.++ ch32F unch232F))))
(assert (= (str.++ preG (str.++ stem32 sufG)) (str.++ unch132G (str.++ ch32G unch232G))))
(assert (= (str.++ preH (str.++ stem32 sufH)) (str.++ unch132H (str.++ ch32H unch232H))))
(assert (= "kjXl" (str.++ unch132A (str.++ var32A unch232A))))
(assert (= "kolO" (str.++ unch132B (str.++ var32B unch232B))))
(assert (= "koljX" (str.++ unch132C (str.++ var32C unch232C))))
(assert (= (str.len stem32) l32))
(assert (= (ite (= ch32A var32A) 0 1) sc32A))
(assert (= (ite (= ch32B var32B) 0 1) sc32B))
(assert (= (ite (= ch32C var32C) 0 1) sc32C))
(assert (= (ite (= ch32D var32D) 0 1) sc32D))
(assert (= (ite (= ch32E var32E) 0 1) sc32E))
(assert (= (ite (= ch32F var32F) 0 1) sc32F))
(assert (= (ite (= ch32G var32G) 0 1) sc32G))
(assert (= (ite (= ch32H var32H) 0 1) sc32H))
(assert (<= sc32A 1))
(assert (<= sc32B 1))
(assert (<= sc32C 1))
(assert (<= sc32D 1))
(assert (<= sc32E 1))
(assert (<= sc32F 1))
(assert (<= sc32G 1))
(assert (<= sc32H 1))
(assert (<= (str.len var33A) 1))
(assert (<= (str.len var33B) 1))
(assert (<= (str.len var33C) 1))
(assert (<= (str.len var33D) 1))
(assert (<= (str.len var33E) 1))
(assert (<= (str.len var33F) 1))
(assert (<= (str.len var33G) 1))
(assert (<= (str.len var33H) 1))
(assert (= (str.++ preA (str.++ stem33 sufA)) (str.++ unch133A (str.++ ch33A unch233A))))
(assert (= (str.++ preB (str.++ stem33 sufB)) (str.++ unch133B (str.++ ch33B unch233B))))
(assert (= (str.++ preC (str.++ stem33 sufC)) (str.++ unch133C (str.++ ch33C unch233C))))
(assert (= (str.++ preD (str.++ stem33 sufD)) (str.++ unch133D (str.++ ch33D unch233D))))
(assert (= (str.++ preE (str.++ stem33 sufE)) (str.++ unch133E (str.++ ch33E unch233E))))
(assert (= (str.++ preF (str.++ stem33 sufF)) (str.++ unch133F (str.++ ch33F unch233F))))
(assert (= (str.++ preG (str.++ stem33 sufG)) (str.++ unch133G (str.++ ch33G unch233G))))
(assert (= (str.++ preH (str.++ stem33 sufH)) (str.++ unch133H (str.++ ch33H unch233H))))
(assert (= "kovOlj" (str.++ unch133D (str.++ var33D unch233D))))
(assert (= "kovalj3" (str.++ unch133E (str.++ var33E unch233E))))
(assert (= "koval3" (str.++ unch133F (str.++ var33F unch233F))))
(assert (= (str.len stem33) l33))
(assert (= (ite (= ch33A var33A) 0 1) sc33A))
(assert (= (ite (= ch33B var33B) 0 1) sc33B))
(assert (= (ite (= ch33C var33C) 0 1) sc33C))
(assert (= (ite (= ch33D var33D) 0 1) sc33D))
(assert (= (ite (= ch33E var33E) 0 1) sc33E))
(assert (= (ite (= ch33F var33F) 0 1) sc33F))
(assert (= (ite (= ch33G var33G) 0 1) sc33G))
(assert (= (ite (= ch33H var33H) 0 1) sc33H))
(assert (<= sc33A 1))
(assert (<= sc33B 1))
(assert (<= sc33C 1))
(assert (<= sc33D 1))
(assert (<= sc33E 1))
(assert (<= sc33F 1))
(assert (<= sc33G 1))
(assert (<= sc33H 1))
(assert (<= (str.len var34A) 1))
(assert (<= (str.len var34B) 1))
(assert (<= (str.len var34C) 1))
(assert (<= (str.len var34D) 1))
(assert (<= (str.len var34E) 1))
(assert (<= (str.len var34F) 1))
(assert (<= (str.len var34G) 1))
(assert (<= (str.len var34H) 1))
(assert (= (str.++ preA (str.++ stem34 sufA)) (str.++ unch134A (str.++ ch34A unch234A))))
(assert (= (str.++ preB (str.++ stem34 sufB)) (str.++ unch134B (str.++ ch34B unch234B))))
(assert (= (str.++ preC (str.++ stem34 sufC)) (str.++ unch134C (str.++ ch34C unch234C))))
(assert (= (str.++ preD (str.++ stem34 sufD)) (str.++ unch134D (str.++ ch34D unch234D))))
(assert (= (str.++ preE (str.++ stem34 sufE)) (str.++ unch134E (str.++ ch34E unch234E))))
(assert (= (str.++ preF (str.++ stem34 sufF)) (str.++ unch134F (str.++ ch34F unch234F))))
(assert (= (str.++ preG (str.++ stem34 sufG)) (str.++ unch134G (str.++ ch34G unch234G))))
(assert (= (str.++ preH (str.++ stem34 sufH)) (str.++ unch134H (str.++ ch34H unch234H))))
(assert (= "DmjXlj" (str.++ unch134D (str.++ var34D unch234D))))
(assert (= "Dmjilj3" (str.++ unch134E (str.++ var34E unch234E))))
(assert (= "Dmjil3" (str.++ unch134F (str.++ var34F unch234F))))
(assert (= (str.len stem34) l34))
(assert (= (ite (= ch34A var34A) 0 1) sc34A))
(assert (= (ite (= ch34B var34B) 0 1) sc34B))
(assert (= (ite (= ch34C var34C) 0 1) sc34C))
(assert (= (ite (= ch34D var34D) 0 1) sc34D))
(assert (= (ite (= ch34E var34E) 0 1) sc34E))
(assert (= (ite (= ch34F var34F) 0 1) sc34F))
(assert (= (ite (= ch34G var34G) 0 1) sc34G))
(assert (= (ite (= ch34H var34H) 0 1) sc34H))
(assert (<= sc34A 1))
(assert (<= sc34B 1))
(assert (<= sc34C 1))
(assert (<= sc34D 1))
(assert (<= sc34E 1))
(assert (<= sc34F 1))
(assert (<= sc34G 1))
(assert (<= sc34H 1))
(assert (<= (str.len var35A) 1))
(assert (<= (str.len var35B) 1))
(assert (<= (str.len var35C) 1))
(assert (<= (str.len var35D) 1))
(assert (<= (str.len var35E) 1))
(assert (<= (str.len var35F) 1))
(assert (<= (str.len var35G) 1))
(assert (<= (str.len var35H) 1))
(assert (= (str.++ preA (str.++ stem35 sufA)) (str.++ unch135A (str.++ ch35A unch235A))))
(assert (= (str.++ preB (str.++ stem35 sufB)) (str.++ unch135B (str.++ ch35B unch235B))))
(assert (= (str.++ preC (str.++ stem35 sufC)) (str.++ unch135C (str.++ ch35C unch235C))))
(assert (= (str.++ preD (str.++ stem35 sufD)) (str.++ unch135D (str.++ ch35D unch235D))))
(assert (= (str.++ preE (str.++ stem35 sufE)) (str.++ unch135E (str.++ ch35E unch235E))))
(assert (= (str.++ preF (str.++ stem35 sufF)) (str.++ unch135F (str.++ ch35F unch235F))))
(assert (= (str.++ preG (str.++ stem35 sufG)) (str.++ unch135G (str.++ ch35G unch235G))))
(assert (= (str.++ preH (str.++ stem35 sufH)) (str.++ unch135H (str.++ ch35H unch235H))))
(assert (= "kjrjXlj" (str.++ unch135D (str.++ var35D unch235D))))
(assert (= "kjrjilj3" (str.++ unch135E (str.++ var35E unch235E))))
(assert (= "kjrjil3" (str.++ unch135F (str.++ var35F unch235F))))
(assert (= (str.len stem35) l35))
(assert (= (ite (= ch35A var35A) 0 1) sc35A))
(assert (= (ite (= ch35B var35B) 0 1) sc35B))
(assert (= (ite (= ch35C var35C) 0 1) sc35C))
(assert (= (ite (= ch35D var35D) 0 1) sc35D))
(assert (= (ite (= ch35E var35E) 0 1) sc35E))
(assert (= (ite (= ch35F var35F) 0 1) sc35F))
(assert (= (ite (= ch35G var35G) 0 1) sc35G))
(assert (= (ite (= ch35H var35H) 0 1) sc35H))
(assert (<= sc35A 1))
(assert (<= sc35B 1))
(assert (<= sc35C 1))
(assert (<= sc35D 1))
(assert (<= sc35E 1))
(assert (<= sc35F 1))
(assert (<= sc35G 1))
(assert (<= sc35H 1))
(assert (<= (str.len var36A) 1))
(assert (<= (str.len var36B) 1))
(assert (<= (str.len var36C) 1))
(assert (<= (str.len var36D) 1))
(assert (<= (str.len var36E) 1))
(assert (<= (str.len var36F) 1))
(assert (<= (str.len var36G) 1))
(assert (<= (str.len var36H) 1))
(assert (= (str.++ preA (str.++ stem36 sufA)) (str.++ unch136A (str.++ ch36A unch236A))))
(assert (= (str.++ preB (str.++ stem36 sufB)) (str.++ unch136B (str.++ ch36B unch236B))))
(assert (= (str.++ preC (str.++ stem36 sufC)) (str.++ unch136C (str.++ ch36C unch236C))))
(assert (= (str.++ preD (str.++ stem36 sufD)) (str.++ unch136D (str.++ ch36D unch236D))))
(assert (= (str.++ preE (str.++ stem36 sufE)) (str.++ unch136E (str.++ ch36E unch236E))))
(assert (= (str.++ preF (str.++ stem36 sufF)) (str.++ unch136F (str.++ ch36F unch236F))))
(assert (= (str.++ preG (str.++ stem36 sufG)) (str.++ unch136G (str.++ ch36G unch236G))))
(assert (= (str.++ preH (str.++ stem36 sufH)) (str.++ unch136H (str.++ ch36H unch236H))))
(assert (= "uE3tHlj" (str.++ unch136D (str.++ var36D unch236D))))
(assert (= "uE3tHljH" (str.++ unch136E (str.++ var36E unch236E))))
(assert (= "uE3tHlH" (str.++ unch136F (str.++ var36F unch236F))))
(assert (= (str.len stem36) l36))
(assert (= (ite (= ch36A var36A) 0 1) sc36A))
(assert (= (ite (= ch36B var36B) 0 1) sc36B))
(assert (= (ite (= ch36C var36C) 0 1) sc36C))
(assert (= (ite (= ch36D var36D) 0 1) sc36D))
(assert (= (ite (= ch36E var36E) 0 1) sc36E))
(assert (= (ite (= ch36F var36F) 0 1) sc36F))
(assert (= (ite (= ch36G var36G) 0 1) sc36G))
(assert (= (ite (= ch36H var36H) 0 1) sc36H))
(assert (<= sc36A 1))
(assert (<= sc36B 1))
(assert (<= sc36C 1))
(assert (<= sc36D 1))
(assert (<= sc36E 1))
(assert (<= sc36F 1))
(assert (<= sc36G 1))
(assert (<= sc36H 1))
(assert (<= (str.len var37A) 1))
(assert (<= (str.len var37B) 1))
(assert (<= (str.len var37C) 1))
(assert (<= (str.len var37D) 1))
(assert (<= (str.len var37E) 1))
(assert (<= (str.len var37F) 1))
(assert (<= (str.len var37G) 1))
(assert (<= (str.len var37H) 1))
(assert (= (str.++ preA (str.++ stem37 sufA)) (str.++ unch137A (str.++ ch37A unch237A))))
(assert (= (str.++ preB (str.++ stem37 sufB)) (str.++ unch137B (str.++ ch37B unch237B))))
(assert (= (str.++ preC (str.++ stem37 sufC)) (str.++ unch137C (str.++ ch37C unch237C))))
(assert (= (str.++ preD (str.++ stem37 sufD)) (str.++ unch137D (str.++ ch37D unch237D))))
(assert (= (str.++ preE (str.++ stem37 sufE)) (str.++ unch137E (str.++ ch37E unch237E))))
(assert (= (str.++ preF (str.++ stem37 sufF)) (str.++ unch137F (str.++ ch37F unch237F))))
(assert (= (str.++ preG (str.++ stem37 sufG)) (str.++ unch137G (str.++ ch37G unch237G))))
(assert (= (str.++ preH (str.++ stem37 sufH)) (str.++ unch137H (str.++ ch37H unch237H))))
(assert (= "gr4bjinj" (str.++ unch137D (str.++ var37D unch237D))))
(assert (= "gr4bHnjH" (str.++ unch137E (str.++ var37E unch237E))))
(assert (= "gr4bHnH" (str.++ unch137F (str.++ var37F unch237F))))
(assert (= (str.len stem37) l37))
(assert (= (ite (= ch37A var37A) 0 1) sc37A))
(assert (= (ite (= ch37B var37B) 0 1) sc37B))
(assert (= (ite (= ch37C var37C) 0 1) sc37C))
(assert (= (ite (= ch37D var37D) 0 1) sc37D))
(assert (= (ite (= ch37E var37E) 0 1) sc37E))
(assert (= (ite (= ch37F var37F) 0 1) sc37F))
(assert (= (ite (= ch37G var37G) 0 1) sc37G))
(assert (= (ite (= ch37H var37H) 0 1) sc37H))
(assert (<= sc37A 1))
(assert (<= sc37B 1))
(assert (<= sc37C 1))
(assert (<= sc37D 1))
(assert (<= sc37E 1))
(assert (<= sc37F 1))
(assert (<= sc37G 1))
(assert (<= sc37H 1))
(assert (<= (str.len var38A) 1))
(assert (<= (str.len var38B) 1))
(assert (<= (str.len var38C) 1))
(assert (<= (str.len var38D) 1))
(assert (<= (str.len var38E) 1))
(assert (<= (str.len var38F) 1))
(assert (<= (str.len var38G) 1))
(assert (<= (str.len var38H) 1))
(assert (= (str.++ preA (str.++ stem38 sufA)) (str.++ unch138A (str.++ ch38A unch238A))))
(assert (= (str.++ preB (str.++ stem38 sufB)) (str.++ unch138B (str.++ ch38B unch238B))))
(assert (= (str.++ preC (str.++ stem38 sufC)) (str.++ unch138C (str.++ ch38C unch238C))))
(assert (= (str.++ preD (str.++ stem38 sufD)) (str.++ unch138D (str.++ ch38D unch238D))))
(assert (= (str.++ preE (str.++ stem38 sufE)) (str.++ unch138E (str.++ ch38E unch238E))))
(assert (= (str.++ preF (str.++ stem38 sufF)) (str.++ unch138F (str.++ ch38F unch238F))))
(assert (= (str.++ preG (str.++ stem38 sufG)) (str.++ unch138G (str.++ ch38G unch238G))))
(assert (= (str.++ preH (str.++ stem38 sufH)) (str.++ unch138H (str.++ ch38H unch238H))))
(assert (= "2lHnj" (str.++ unch138D (str.++ var38D unch238D))))
(assert (= "2lHnjH" (str.++ unch138E (str.++ var38E unch238E))))
(assert (= "2lHnH" (str.++ unch138F (str.++ var38F unch238F))))
(assert (= (str.len stem38) l38))
(assert (= (ite (= ch38A var38A) 0 1) sc38A))
(assert (= (ite (= ch38B var38B) 0 1) sc38B))
(assert (= (ite (= ch38C var38C) 0 1) sc38C))
(assert (= (ite (= ch38D var38D) 0 1) sc38D))
(assert (= (ite (= ch38E var38E) 0 1) sc38E))
(assert (= (ite (= ch38F var38F) 0 1) sc38F))
(assert (= (ite (= ch38G var38G) 0 1) sc38G))
(assert (= (ite (= ch38H var38H) 0 1) sc38H))
(assert (<= sc38A 1))
(assert (<= sc38B 1))
(assert (<= sc38C 1))
(assert (<= sc38D 1))
(assert (<= sc38E 1))
(assert (<= sc38F 1))
(assert (<= sc38G 1))
(assert (<= sc38H 1))
(assert (<= (str.len var39A) 1))
(assert (<= (str.len var39B) 1))
(assert (<= (str.len var39C) 1))
(assert (<= (str.len var39D) 1))
(assert (<= (str.len var39E) 1))
(assert (<= (str.len var39F) 1))
(assert (<= (str.len var39G) 1))
(assert (<= (str.len var39H) 1))
(assert (= (str.++ preA (str.++ stem39 sufA)) (str.++ unch139A (str.++ ch39A unch239A))))
(assert (= (str.++ preB (str.++ stem39 sufB)) (str.++ unch139B (str.++ ch39B unch239B))))
(assert (= (str.++ preC (str.++ stem39 sufC)) (str.++ unch139C (str.++ ch39C unch239C))))
(assert (= (str.++ preD (str.++ stem39 sufD)) (str.++ unch139D (str.++ ch39D unch239D))))
(assert (= (str.++ preE (str.++ stem39 sufE)) (str.++ unch139E (str.++ ch39E unch239E))))
(assert (= (str.++ preF (str.++ stem39 sufF)) (str.++ unch139F (str.++ ch39F unch239F))))
(assert (= (str.++ preG (str.++ stem39 sufG)) (str.++ unch139G (str.++ ch39G unch239G))))
(assert (= (str.++ preH (str.++ stem39 sufH)) (str.++ unch139H (str.++ ch39H unch239H))))
(assert (= "jaEjmjXnj" (str.++ unch139D (str.++ var39D unch239D))))
(assert (= "jaEm4njH" (str.++ unch139E (str.++ var39E unch239E))))
(assert (= "jaEm4nH" (str.++ unch139F (str.++ var39F unch239F))))
(assert (= (str.len stem39) l39))
(assert (= (ite (= ch39A var39A) 0 1) sc39A))
(assert (= (ite (= ch39B var39B) 0 1) sc39B))
(assert (= (ite (= ch39C var39C) 0 1) sc39C))
(assert (= (ite (= ch39D var39D) 0 1) sc39D))
(assert (= (ite (= ch39E var39E) 0 1) sc39E))
(assert (= (ite (= ch39F var39F) 0 1) sc39F))
(assert (= (ite (= ch39G var39G) 0 1) sc39G))
(assert (= (ite (= ch39H var39H) 0 1) sc39H))
(assert (<= sc39A 1))
(assert (<= sc39B 1))
(assert (<= sc39C 1))
(assert (<= sc39D 1))
(assert (<= sc39E 1))
(assert (<= sc39F 1))
(assert (<= sc39G 1))
(assert (<= sc39H 1))
(assert (<= (str.len var40A) 1))
(assert (<= (str.len var40B) 1))
(assert (<= (str.len var40C) 1))
(assert (<= (str.len var40D) 1))
(assert (<= (str.len var40E) 1))
(assert (<= (str.len var40F) 1))
(assert (<= (str.len var40G) 1))
(assert (<= (str.len var40H) 1))
(assert (= (str.++ preA (str.++ stem40 sufA)) (str.++ unch140A (str.++ ch40A unch240A))))
(assert (= (str.++ preB (str.++ stem40 sufB)) (str.++ unch140B (str.++ ch40B unch240B))))
(assert (= (str.++ preC (str.++ stem40 sufC)) (str.++ unch140C (str.++ ch40C unch240C))))
(assert (= (str.++ preD (str.++ stem40 sufD)) (str.++ unch140D (str.++ ch40D unch240D))))
(assert (= (str.++ preE (str.++ stem40 sufE)) (str.++ unch140E (str.++ ch40E unch240E))))
(assert (= (str.++ preF (str.++ stem40 sufF)) (str.++ unch140F (str.++ ch40F unch240F))))
(assert (= (str.++ preG (str.++ stem40 sufG)) (str.++ unch140G (str.++ ch40G unch240G))))
(assert (= (str.++ preH (str.++ stem40 sufH)) (str.++ unch140H (str.++ ch40H unch240H))))
(assert (= "jOsjinj" (str.++ unch140D (str.++ var40D unch240D))))
(assert (= "jOsHnjH" (str.++ unch140E (str.++ var40E unch240E))))
(assert (= "jOsHnH" (str.++ unch140F (str.++ var40F unch240F))))
(assert (= (str.len stem40) l40))
(assert (= (ite (= ch40A var40A) 0 1) sc40A))
(assert (= (ite (= ch40B var40B) 0 1) sc40B))
(assert (= (ite (= ch40C var40C) 0 1) sc40C))
(assert (= (ite (= ch40D var40D) 0 1) sc40D))
(assert (= (ite (= ch40E var40E) 0 1) sc40E))
(assert (= (ite (= ch40F var40F) 0 1) sc40F))
(assert (= (ite (= ch40G var40G) 0 1) sc40G))
(assert (= (ite (= ch40H var40H) 0 1) sc40H))
(assert (<= sc40A 1))
(assert (<= sc40B 1))
(assert (<= sc40C 1))
(assert (<= sc40D 1))
(assert (<= sc40E 1))
(assert (<= sc40F 1))
(assert (<= sc40G 1))
(assert (<= sc40H 1))
(assert (<= (str.len var41A) 1))
(assert (<= (str.len var41B) 1))
(assert (<= (str.len var41C) 1))
(assert (<= (str.len var41D) 1))
(assert (<= (str.len var41E) 1))
(assert (<= (str.len var41F) 1))
(assert (<= (str.len var41G) 1))
(assert (<= (str.len var41H) 1))
(assert (= (str.++ preA (str.++ stem41 sufA)) (str.++ unch141A (str.++ ch41A unch241A))))
(assert (= (str.++ preB (str.++ stem41 sufB)) (str.++ unch141B (str.++ ch41B unch241B))))
(assert (= (str.++ preC (str.++ stem41 sufC)) (str.++ unch141C (str.++ ch41C unch241C))))
(assert (= (str.++ preD (str.++ stem41 sufD)) (str.++ unch141D (str.++ ch41D unch241D))))
(assert (= (str.++ preE (str.++ stem41 sufE)) (str.++ unch141E (str.++ ch41E unch241E))))
(assert (= (str.++ preF (str.++ stem41 sufF)) (str.++ unch141F (str.++ ch41F unch241F))))
(assert (= (str.++ preG (str.++ stem41 sufG)) (str.++ unch141G (str.++ ch41G unch241G))))
(assert (= (str.++ preH (str.++ stem41 sufH)) (str.++ unch141H (str.++ ch41H unch241H))))
(assert (= "zj3kj" (str.++ unch141D (str.++ var41D unch241D))))
(assert (= "zj3kjH" (str.++ unch141E (str.++ var41E unch241E))))
(assert (= "zj3tH" (str.++ unch141F (str.++ var41F unch241F))))
(assert (= (str.len stem41) l41))
(assert (= (ite (= ch41A var41A) 0 1) sc41A))
(assert (= (ite (= ch41B var41B) 0 1) sc41B))
(assert (= (ite (= ch41C var41C) 0 1) sc41C))
(assert (= (ite (= ch41D var41D) 0 1) sc41D))
(assert (= (ite (= ch41E var41E) 0 1) sc41E))
(assert (= (ite (= ch41F var41F) 0 1) sc41F))
(assert (= (ite (= ch41G var41G) 0 1) sc41G))
(assert (= (ite (= ch41H var41H) 0 1) sc41H))
(assert (<= sc41A 1))
(assert (<= sc41B 1))
(assert (<= sc41C 1))
(assert (<= sc41D 1))
(assert (<= sc41E 1))
(assert (<= sc41F 1))
(assert (<= sc41G 1))
(assert (<= sc41H 1))
(assert (<= (str.len var42A) 1))
(assert (<= (str.len var42B) 1))
(assert (<= (str.len var42C) 1))
(assert (<= (str.len var42D) 1))
(assert (<= (str.len var42E) 1))
(assert (<= (str.len var42F) 1))
(assert (<= (str.len var42G) 1))
(assert (<= (str.len var42H) 1))
(assert (= (str.++ preA (str.++ stem42 sufA)) (str.++ unch142A (str.++ ch42A unch242A))))
(assert (= (str.++ preB (str.++ stem42 sufB)) (str.++ unch142B (str.++ ch42B unch242B))))
(assert (= (str.++ preC (str.++ stem42 sufC)) (str.++ unch142C (str.++ ch42C unch242C))))
(assert (= (str.++ preD (str.++ stem42 sufD)) (str.++ unch142D (str.++ ch42D unch242D))))
(assert (= (str.++ preE (str.++ stem42 sufE)) (str.++ unch142E (str.++ ch42E unch242E))))
(assert (= (str.++ preF (str.++ stem42 sufF)) (str.++ unch142F (str.++ ch42F unch242F))))
(assert (= (str.++ preG (str.++ stem42 sufG)) (str.++ unch142G (str.++ ch42G unch242G))))
(assert (= (str.++ preH (str.++ stem42 sufH)) (str.++ unch142H (str.++ ch42H unch242H))))
(assert (= "mOsjkj" (str.++ unch142G (str.++ var42G unch242G))))
(assert (= "mOstH" (str.++ unch142H (str.++ var42H unch242H))))
(assert (= (str.len stem42) l42))
(assert (= (ite (= ch42A var42A) 0 1) sc42A))
(assert (= (ite (= ch42B var42B) 0 1) sc42B))
(assert (= (ite (= ch42C var42C) 0 1) sc42C))
(assert (= (ite (= ch42D var42D) 0 1) sc42D))
(assert (= (ite (= ch42E var42E) 0 1) sc42E))
(assert (= (ite (= ch42F var42F) 0 1) sc42F))
(assert (= (ite (= ch42G var42G) 0 1) sc42G))
(assert (= (ite (= ch42H var42H) 0 1) sc42H))
(assert (<= sc42A 1))
(assert (<= sc42B 1))
(assert (<= sc42C 1))
(assert (<= sc42D 1))
(assert (<= sc42E 1))
(assert (<= sc42F 1))
(assert (<= sc42G 1))
(assert (<= sc42H 1))
(assert (<= (str.len var43A) 1))
(assert (<= (str.len var43B) 1))
(assert (<= (str.len var43C) 1))
(assert (<= (str.len var43D) 1))
(assert (<= (str.len var43E) 1))
(assert (<= (str.len var43F) 1))
(assert (<= (str.len var43G) 1))
(assert (<= (str.len var43H) 1))
(assert (= (str.++ preA (str.++ stem43 sufA)) (str.++ unch143A (str.++ ch43A unch243A))))
(assert (= (str.++ preB (str.++ stem43 sufB)) (str.++ unch143B (str.++ ch43B unch243B))))
(assert (= (str.++ preC (str.++ stem43 sufC)) (str.++ unch143C (str.++ ch43C unch243C))))
(assert (= (str.++ preD (str.++ stem43 sufD)) (str.++ unch143D (str.++ ch43D unch243D))))
(assert (= (str.++ preE (str.++ stem43 sufE)) (str.++ unch143E (str.++ ch43E unch243E))))
(assert (= (str.++ preF (str.++ stem43 sufF)) (str.++ unch143F (str.++ ch43F unch243F))))
(assert (= (str.++ preG (str.++ stem43 sufG)) (str.++ unch143G (str.++ ch43G unch243G))))
(assert (= (str.++ preH (str.++ stem43 sufH)) (str.++ unch143H (str.++ ch43H unch243H))))
(assert (= "sjmjXrjkj" (str.++ unch143G (str.++ var43G unch243G))))
(assert (= "sm4rtH" (str.++ unch143H (str.++ var43H unch243H))))
(assert (= (str.len stem43) l43))
(assert (= (ite (= ch43A var43A) 0 1) sc43A))
(assert (= (ite (= ch43B var43B) 0 1) sc43B))
(assert (= (ite (= ch43C var43C) 0 1) sc43C))
(assert (= (ite (= ch43D var43D) 0 1) sc43D))
(assert (= (ite (= ch43E var43E) 0 1) sc43E))
(assert (= (ite (= ch43F var43F) 0 1) sc43F))
(assert (= (ite (= ch43G var43G) 0 1) sc43G))
(assert (= (ite (= ch43H var43H) 0 1) sc43H))
(assert (<= sc43A 1))
(assert (<= sc43B 1))
(assert (<= sc43C 1))
(assert (<= sc43D 1))
(assert (<= sc43E 1))
(assert (<= sc43F 1))
(assert (<= sc43G 1))
(assert (<= sc43H 1))
(assert (<= (str.len var44A) 1))
(assert (<= (str.len var44B) 1))
(assert (<= (str.len var44C) 1))
(assert (<= (str.len var44D) 1))
(assert (<= (str.len var44E) 1))
(assert (<= (str.len var44F) 1))
(assert (<= (str.len var44G) 1))
(assert (<= (str.len var44H) 1))
(assert (= (str.++ preA (str.++ stem44 sufA)) (str.++ unch144A (str.++ ch44A unch244A))))
(assert (= (str.++ preB (str.++ stem44 sufB)) (str.++ unch144B (str.++ ch44B unch244B))))
(assert (= (str.++ preC (str.++ stem44 sufC)) (str.++ unch144C (str.++ ch44C unch244C))))
(assert (= (str.++ preD (str.++ stem44 sufD)) (str.++ unch144D (str.++ ch44D unch244D))))
(assert (= (str.++ preE (str.++ stem44 sufE)) (str.++ unch144E (str.++ ch44E unch244E))))
(assert (= (str.++ preF (str.++ stem44 sufF)) (str.++ unch144F (str.++ ch44F unch244F))))
(assert (= (str.++ preG (str.++ stem44 sufG)) (str.++ unch144G (str.++ ch44G unch244G))))
(assert (= (str.++ preH (str.++ stem44 sufH)) (str.++ unch144H (str.++ ch44H unch244H))))
(assert (= "vjXsjkj" (str.++ unch144G (str.++ var44G unch244G))))
(assert (= "vjXstH" (str.++ unch144H (str.++ var44H unch244H))))
(assert (= (str.len stem44) l44))
(assert (= (ite (= ch44A var44A) 0 1) sc44A))
(assert (= (ite (= ch44B var44B) 0 1) sc44B))
(assert (= (ite (= ch44C var44C) 0 1) sc44C))
(assert (= (ite (= ch44D var44D) 0 1) sc44D))
(assert (= (ite (= ch44E var44E) 0 1) sc44E))
(assert (= (ite (= ch44F var44F) 0 1) sc44F))
(assert (= (ite (= ch44G var44G) 0 1) sc44G))
(assert (= (ite (= ch44H var44H) 0 1) sc44H))
(assert (<= sc44A 1))
(assert (<= sc44B 1))
(assert (<= sc44C 1))
(assert (<= sc44D 1))
(assert (<= sc44E 1))
(assert (<= sc44F 1))
(assert (<= sc44G 1))
(assert (<= sc44H 1))
(assert (<= (str.len var45A) 1))
(assert (<= (str.len var45B) 1))
(assert (<= (str.len var45C) 1))
(assert (<= (str.len var45D) 1))
(assert (<= (str.len var45E) 1))
(assert (<= (str.len var45F) 1))
(assert (<= (str.len var45G) 1))
(assert (<= (str.len var45H) 1))
(assert (= (str.++ preA (str.++ stem45 sufA)) (str.++ unch145A (str.++ ch45A unch245A))))
(assert (= (str.++ preB (str.++ stem45 sufB)) (str.++ unch145B (str.++ ch45B unch245B))))
(assert (= (str.++ preC (str.++ stem45 sufC)) (str.++ unch145C (str.++ ch45C unch245C))))
(assert (= (str.++ preD (str.++ stem45 sufD)) (str.++ unch145D (str.++ ch45D unch245D))))
(assert (= (str.++ preE (str.++ stem45 sufE)) (str.++ unch145E (str.++ ch45E unch245E))))
(assert (= (str.++ preF (str.++ stem45 sufF)) (str.++ unch145F (str.++ ch45F unch245F))))
(assert (= (str.++ preG (str.++ stem45 sufG)) (str.++ unch145G (str.++ ch45G unch245G))))
(assert (= (str.++ preH (str.++ stem45 sufH)) (str.++ unch145H (str.++ ch45H unch245H))))
(assert (= "rOgjisjkj" (str.++ unch145G (str.++ var45G unch245G))))
(assert (= "rOdostH" (str.++ unch145H (str.++ var45H unch245H))))
(assert (= (str.len stem45) l45))
(assert (= (ite (= ch45A var45A) 0 1) sc45A))
(assert (= (ite (= ch45B var45B) 0 1) sc45B))
(assert (= (ite (= ch45C var45C) 0 1) sc45C))
(assert (= (ite (= ch45D var45D) 0 1) sc45D))
(assert (= (ite (= ch45E var45E) 0 1) sc45E))
(assert (= (ite (= ch45F var45F) 0 1) sc45F))
(assert (= (ite (= ch45G var45G) 0 1) sc45G))
(assert (= (ite (= ch45H var45H) 0 1) sc45H))
(assert (<= sc45A 1))
(assert (<= sc45B 1))
(assert (<= sc45C 1))
(assert (<= sc45D 1))
(assert (<= sc45E 1))
(assert (<= sc45F 1))
(assert (<= sc45G 1))
(assert (<= sc45H 1))
(assert (<= (str.len var46A) 1))
(assert (<= (str.len var46B) 1))
(assert (<= (str.len var46C) 1))
(assert (<= (str.len var46D) 1))
(assert (<= (str.len var46E) 1))
(assert (<= (str.len var46F) 1))
(assert (<= (str.len var46G) 1))
(assert (<= (str.len var46H) 1))
(assert (= (str.++ preA (str.++ stem46 sufA)) (str.++ unch146A (str.++ ch46A unch246A))))
(assert (= (str.++ preB (str.++ stem46 sufB)) (str.++ unch146B (str.++ ch46B unch246B))))
(assert (= (str.++ preC (str.++ stem46 sufC)) (str.++ unch146C (str.++ ch46C unch246C))))
(assert (= (str.++ preD (str.++ stem46 sufD)) (str.++ unch146D (str.++ ch46D unch246D))))
(assert (= (str.++ preE (str.++ stem46 sufE)) (str.++ unch146E (str.++ ch46E unch246E))))
(assert (= (str.++ preF (str.++ stem46 sufF)) (str.++ unch146F (str.++ ch46F unch246F))))
(assert (= (str.++ preG (str.++ stem46 sufG)) (str.++ unch146G (str.++ ch46G unch246G))))
(assert (= (str.++ preH (str.++ stem46 sufH)) (str.++ unch146H (str.++ ch46H unch246H))))
(assert (= "sjXlj" (str.++ unch146G (str.++ var46G unch246G))))
(assert (= "s2lH" (str.++ unch146H (str.++ var46H unch246H))))
(assert (= (str.len stem46) l46))
(assert (= (ite (= ch46A var46A) 0 1) sc46A))
(assert (= (ite (= ch46B var46B) 0 1) sc46B))
(assert (= (ite (= ch46C var46C) 0 1) sc46C))
(assert (= (ite (= ch46D var46D) 0 1) sc46D))
(assert (= (ite (= ch46E var46E) 0 1) sc46E))
(assert (= (ite (= ch46F var46F) 0 1) sc46F))
(assert (= (ite (= ch46G var46G) 0 1) sc46G))
(assert (= (ite (= ch46H var46H) 0 1) sc46H))
(assert (<= sc46A 1))
(assert (<= sc46B 1))
(assert (<= sc46C 1))
(assert (<= sc46D 1))
(assert (<= sc46E 1))
(assert (<= sc46F 1))
(assert (<= sc46G 1))
(assert (<= sc46H 1))
(assert (<= (str.len var47A) 1))
(assert (<= (str.len var47B) 1))
(assert (<= (str.len var47C) 1))
(assert (<= (str.len var47D) 1))
(assert (<= (str.len var47E) 1))
(assert (<= (str.len var47F) 1))
(assert (<= (str.len var47G) 1))
(assert (<= (str.len var47H) 1))
(assert (= (str.++ preA (str.++ stem47 sufA)) (str.++ unch147A (str.++ ch47A unch247A))))
(assert (= (str.++ preB (str.++ stem47 sufB)) (str.++ unch147B (str.++ ch47B unch247B))))
(assert (= (str.++ preC (str.++ stem47 sufC)) (str.++ unch147C (str.++ ch47C unch247C))))
(assert (= (str.++ preD (str.++ stem47 sufD)) (str.++ unch147D (str.++ ch47D unch247D))))
(assert (= (str.++ preE (str.++ stem47 sufE)) (str.++ unch147E (str.++ ch47E unch247E))))
(assert (= (str.++ preF (str.++ stem47 sufF)) (str.++ unch147F (str.++ ch47F unch247F))))
(assert (= (str.++ preG (str.++ stem47 sufG)) (str.++ unch147G (str.++ ch47G unch247G))))
(assert (= (str.++ preH (str.++ stem47 sufH)) (str.++ unch147H (str.++ ch47H unch247H))))
(assert (= "p2Bjisjkj" (str.++ unch147G (str.++ var47G unch247G))))
(assert (= "p2BHstH" (str.++ unch147H (str.++ var47H unch247H))))
(assert (= (str.len stem47) l47))
(assert (= (ite (= ch47A var47A) 0 1) sc47A))
(assert (= (ite (= ch47B var47B) 0 1) sc47B))
(assert (= (ite (= ch47C var47C) 0 1) sc47C))
(assert (= (ite (= ch47D var47D) 0 1) sc47D))
(assert (= (ite (= ch47E var47E) 0 1) sc47E))
(assert (= (ite (= ch47F var47F) 0 1) sc47F))
(assert (= (ite (= ch47G var47G) 0 1) sc47G))
(assert (= (ite (= ch47H var47H) 0 1) sc47H))
(assert (<= sc47A 1))
(assert (<= sc47B 1))
(assert (<= sc47C 1))
(assert (<= sc47D 1))
(assert (<= sc47E 1))
(assert (<= sc47F 1))
(assert (<= sc47G 1))
(assert (<= sc47H 1))
(assert (<= (str.len var48A) 1))
(assert (<= (str.len var48B) 1))
(assert (<= (str.len var48C) 1))
(assert (<= (str.len var48D) 1))
(assert (<= (str.len var48E) 1))
(assert (<= (str.len var48F) 1))
(assert (<= (str.len var48G) 1))
(assert (<= (str.len var48H) 1))
(assert (= (str.++ preA (str.++ stem48 sufA)) (str.++ unch148A (str.++ ch48A unch248A))))
(assert (= (str.++ preB (str.++ stem48 sufB)) (str.++ unch148B (str.++ ch48B unch248B))))
(assert (= (str.++ preC (str.++ stem48 sufC)) (str.++ unch148C (str.++ ch48C unch248C))))
(assert (= (str.++ preD (str.++ stem48 sufD)) (str.++ unch148D (str.++ ch48D unch248D))))
(assert (= (str.++ preE (str.++ stem48 sufE)) (str.++ unch148E (str.++ ch48E unch248E))))
(assert (= (str.++ preF (str.++ stem48 sufF)) (str.++ unch148F (str.++ ch48F unch248F))))
(assert (= (str.++ preG (str.++ stem48 sufG)) (str.++ unch148G (str.++ ch48G unch248G))))
(assert (= (str.++ preH (str.++ stem48 sufH)) (str.++ unch148H (str.++ ch48H unch248H))))
(assert (= "zOmjikj" (str.++ unch148G (str.++ var48G unch248G))))
(assert (= "zOmHtH" (str.++ unch148H (str.++ var48H unch248H))))
(assert (= (str.len stem48) l48))
(assert (= (ite (= ch48A var48A) 0 1) sc48A))
(assert (= (ite (= ch48B var48B) 0 1) sc48B))
(assert (= (ite (= ch48C var48C) 0 1) sc48C))
(assert (= (ite (= ch48D var48D) 0 1) sc48D))
(assert (= (ite (= ch48E var48E) 0 1) sc48E))
(assert (= (ite (= ch48F var48F) 0 1) sc48F))
(assert (= (ite (= ch48G var48G) 0 1) sc48G))
(assert (= (ite (= ch48H var48H) 0 1) sc48H))
(assert (<= sc48A 1))
(assert (<= sc48B 1))
(assert (<= sc48C 1))
(assert (<= sc48D 1))
(assert (<= sc48E 1))
(assert (<= sc48F 1))
(assert (<= sc48G 1))
(assert (<= sc48H 1))
(assert (<= (str.len var49A) 1))
(assert (<= (str.len var49B) 1))
(assert (<= (str.len var49C) 1))
(assert (<= (str.len var49D) 1))
(assert (<= (str.len var49E) 1))
(assert (<= (str.len var49F) 1))
(assert (<= (str.len var49G) 1))
(assert (<= (str.len var49H) 1))
(assert (= (str.++ preA (str.++ stem49 sufA)) (str.++ unch149A (str.++ ch49A unch249A))))
(assert (= (str.++ preB (str.++ stem49 sufB)) (str.++ unch149B (str.++ ch49B unch249B))))
(assert (= (str.++ preC (str.++ stem49 sufC)) (str.++ unch149C (str.++ ch49C unch249C))))
(assert (= (str.++ preD (str.++ stem49 sufD)) (str.++ unch149D (str.++ ch49D unch249D))))
(assert (= (str.++ preE (str.++ stem49 sufE)) (str.++ unch149E (str.++ ch49E unch249E))))
(assert (= (str.++ preF (str.++ stem49 sufF)) (str.++ unch149F (str.++ ch49F unch249F))))
(assert (= (str.++ preG (str.++ stem49 sufG)) (str.++ unch149G (str.++ ch49G unch249G))))
(assert (= (str.++ preH (str.++ stem49 sufH)) (str.++ unch149H (str.++ ch49H unch249H))))
(assert (= "skOtHrjkj" (str.++ unch149G (str.++ var49G unch249G))))
(assert (= "skOtHrtH" (str.++ unch149H (str.++ var49H unch249H))))
(assert (= (str.len stem49) l49))
(assert (= (ite (= ch49A var49A) 0 1) sc49A))
(assert (= (ite (= ch49B var49B) 0 1) sc49B))
(assert (= (ite (= ch49C var49C) 0 1) sc49C))
(assert (= (ite (= ch49D var49D) 0 1) sc49D))
(assert (= (ite (= ch49E var49E) 0 1) sc49E))
(assert (= (ite (= ch49F var49F) 0 1) sc49F))
(assert (= (ite (= ch49G var49G) 0 1) sc49G))
(assert (= (ite (= ch49H var49H) 0 1) sc49H))
(assert (<= sc49A 1))
(assert (<= sc49B 1))
(assert (<= sc49C 1))
(assert (<= sc49D 1))
(assert (<= sc49E 1))
(assert (<= sc49F 1))
(assert (<= sc49G 1))
(assert (<= sc49H 1))
(assert (<= (str.len var50A) 1))
(assert (<= (str.len var50B) 1))
(assert (<= (str.len var50C) 1))
(assert (<= (str.len var50D) 1))
(assert (<= (str.len var50E) 1))
(assert (<= (str.len var50F) 1))
(assert (<= (str.len var50G) 1))
(assert (<= (str.len var50H) 1))
(assert (= (str.++ preA (str.++ stem50 sufA)) (str.++ unch150A (str.++ ch50A unch250A))))
(assert (= (str.++ preB (str.++ stem50 sufB)) (str.++ unch150B (str.++ ch50B unch250B))))
(assert (= (str.++ preC (str.++ stem50 sufC)) (str.++ unch150C (str.++ ch50C unch250C))))
(assert (= (str.++ preD (str.++ stem50 sufD)) (str.++ unch150D (str.++ ch50D unch250D))))
(assert (= (str.++ preE (str.++ stem50 sufE)) (str.++ unch150E (str.++ ch50E unch250E))))
(assert (= (str.++ preF (str.++ stem50 sufF)) (str.++ unch150F (str.++ ch50F unch250F))))
(assert (= (str.++ preG (str.++ stem50 sufG)) (str.++ unch150G (str.++ ch50G unch250G))))
(assert (= (str.++ preH (str.++ stem50 sufH)) (str.++ unch150H (str.++ ch50H unch250H))))
(assert (= "kjXsjkj" (str.++ unch150G (str.++ var50G unch250G))))
(assert (= "k2stH" (str.++ unch150H (str.++ var50H unch250H))))
(assert (= (str.len stem50) l50))
(assert (= (ite (= ch50A var50A) 0 1) sc50A))
(assert (= (ite (= ch50B var50B) 0 1) sc50B))
(assert (= (ite (= ch50C var50C) 0 1) sc50C))
(assert (= (ite (= ch50D var50D) 0 1) sc50D))
(assert (= (ite (= ch50E var50E) 0 1) sc50E))
(assert (= (ite (= ch50F var50F) 0 1) sc50F))
(assert (= (ite (= ch50G var50G) 0 1) sc50G))
(assert (= (ite (= ch50H var50H) 0 1) sc50H))
(assert (<= sc50A 1))
(assert (<= sc50B 1))
(assert (<= sc50C 1))
(assert (<= sc50D 1))
(assert (<= sc50E 1))
(assert (<= sc50F 1))
(assert (<= sc50G 1))
(assert (<= sc50H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      sc7G
      sc7H
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      sc8G
      sc8H
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      sc9G
      sc9H
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      sc10G
      sc10H
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      sc11G
      sc11H
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      sc12G
      sc12H
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      sc13G
      sc13H
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      sc14G
      sc14H
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      sc15G
      sc15H
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      sc16G
      sc16H
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      sc17G
      sc17H
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      sc18G
      sc18H
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      sc19G
      sc19H
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      sc20G
      sc20H
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      sc21G
      sc21H
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      sc22G
      sc22H
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      sc23G
      sc23H
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      sc24G
      sc24H
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      sc25G
      sc25H
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      sc26G
      sc26H
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      sc27G
      sc27H
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      sc28G
      sc28H
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      sc29G
      sc29H
      0
      sc30A
      sc30B
      sc30C
      sc30D
      sc30E
      sc30F
      sc30G
      sc30H
      0
      sc31A
      sc31B
      sc31C
      sc31D
      sc31E
      sc31F
      sc31G
      sc31H
      0
      sc32A
      sc32B
      sc32C
      sc32D
      sc32E
      sc32F
      sc32G
      sc32H
      0
      sc33A
      sc33B
      sc33C
      sc33D
      sc33E
      sc33F
      sc33G
      sc33H
      0
      sc34A
      sc34B
      sc34C
      sc34D
      sc34E
      sc34F
      sc34G
      sc34H
      0
      sc35A
      sc35B
      sc35C
      sc35D
      sc35E
      sc35F
      sc35G
      sc35H
      0
      sc36A
      sc36B
      sc36C
      sc36D
      sc36E
      sc36F
      sc36G
      sc36H
      0
      sc37A
      sc37B
      sc37C
      sc37D
      sc37E
      sc37F
      sc37G
      sc37H
      0
      sc38A
      sc38B
      sc38C
      sc38D
      sc38E
      sc38F
      sc38G
      sc38H
      0
      sc39A
      sc39B
      sc39C
      sc39D
      sc39E
      sc39F
      sc39G
      sc39H
      0
      sc40A
      sc40B
      sc40C
      sc40D
      sc40E
      sc40F
      sc40G
      sc40H
      0
      sc41A
      sc41B
      sc41C
      sc41D
      sc41E
      sc41F
      sc41G
      sc41H
      0
      sc42A
      sc42B
      sc42C
      sc42D
      sc42E
      sc42F
      sc42G
      sc42H
      0
      sc43A
      sc43B
      sc43C
      sc43D
      sc43E
      sc43F
      sc43G
      sc43H
      0
      sc44A
      sc44B
      sc44C
      sc44D
      sc44E
      sc44F
      sc44G
      sc44H
      0
      sc45A
      sc45B
      sc45C
      sc45D
      sc45E
      sc45F
      sc45G
      sc45H
      0
      sc46A
      sc46B
      sc46C
      sc46D
      sc46E
      sc46F
      sc46G
      sc46H
      0
      sc47A
      sc47B
      sc47C
      sc47D
      sc47E
      sc47F
      sc47G
      sc47H
      0
      sc48A
      sc48B
      sc48C
      sc48D
      sc48E
      sc48F
      sc48G
      sc48H
      0
      sc49A
      sc49B
      sc49C
      sc49D
      sc49E
      sc49F
      sc49G
      sc49H
      0
      sc50A
      sc50B
      sc50C
      sc50D
      sc50E
      sc50F
      sc50G
      sc50H)
   7))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun var7G () String)
(declare-fun var7H () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun unch27G () String)
(declare-fun ch7G () String)
(declare-fun unch17G () String)
(declare-fun unch27H () String)
(declare-fun ch7H () String)
(declare-fun unch17H () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun sc7G () Int)
(declare-fun sc7H () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun var8G () String)
(declare-fun var8H () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun unch28G () String)
(declare-fun ch8G () String)
(declare-fun unch18G () String)
(declare-fun unch28H () String)
(declare-fun ch8H () String)
(declare-fun unch18H () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun sc8G () Int)
(declare-fun sc8H () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun var9G () String)
(declare-fun var9H () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun unch29G () String)
(declare-fun ch9G () String)
(declare-fun unch19G () String)
(declare-fun unch29H () String)
(declare-fun ch9H () String)
(declare-fun unch19H () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun sc9G () Int)
(declare-fun sc9H () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun var10G () String)
(declare-fun var10H () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun unch210G () String)
(declare-fun ch10G () String)
(declare-fun unch110G () String)
(declare-fun unch210H () String)
(declare-fun ch10H () String)
(declare-fun unch110H () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun sc10G () Int)
(declare-fun sc10H () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun var11G () String)
(declare-fun var11H () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun unch211G () String)
(declare-fun ch11G () String)
(declare-fun unch111G () String)
(declare-fun unch211H () String)
(declare-fun ch11H () String)
(declare-fun unch111H () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun sc11G () Int)
(declare-fun sc11H () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun var12G () String)
(declare-fun var12H () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun unch212G () String)
(declare-fun ch12G () String)
(declare-fun unch112G () String)
(declare-fun unch212H () String)
(declare-fun ch12H () String)
(declare-fun unch112H () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun sc12G () Int)
(declare-fun sc12H () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun var13G () String)
(declare-fun var13H () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun unch213G () String)
(declare-fun ch13G () String)
(declare-fun unch113G () String)
(declare-fun unch213H () String)
(declare-fun ch13H () String)
(declare-fun unch113H () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun sc13G () Int)
(declare-fun sc13H () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun var14G () String)
(declare-fun var14H () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun unch214G () String)
(declare-fun ch14G () String)
(declare-fun unch114G () String)
(declare-fun unch214H () String)
(declare-fun ch14H () String)
(declare-fun unch114H () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun sc14G () Int)
(declare-fun sc14H () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun var15G () String)
(declare-fun var15H () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun unch215G () String)
(declare-fun ch15G () String)
(declare-fun unch115G () String)
(declare-fun unch215H () String)
(declare-fun ch15H () String)
(declare-fun unch115H () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun sc15G () Int)
(declare-fun sc15H () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun var16G () String)
(declare-fun var16H () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun unch216G () String)
(declare-fun ch16G () String)
(declare-fun unch116G () String)
(declare-fun unch216H () String)
(declare-fun ch16H () String)
(declare-fun unch116H () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun sc16G () Int)
(declare-fun sc16H () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun var17G () String)
(declare-fun var17H () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun unch217G () String)
(declare-fun ch17G () String)
(declare-fun unch117G () String)
(declare-fun unch217H () String)
(declare-fun ch17H () String)
(declare-fun unch117H () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun sc17G () Int)
(declare-fun sc17H () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun var18G () String)
(declare-fun var18H () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun unch218G () String)
(declare-fun ch18G () String)
(declare-fun unch118G () String)
(declare-fun unch218H () String)
(declare-fun ch18H () String)
(declare-fun unch118H () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun sc18G () Int)
(declare-fun sc18H () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun var19G () String)
(declare-fun var19H () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun unch219G () String)
(declare-fun ch19G () String)
(declare-fun unch119G () String)
(declare-fun unch219H () String)
(declare-fun ch19H () String)
(declare-fun unch119H () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun sc19G () Int)
(declare-fun sc19H () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun var20G () String)
(declare-fun var20H () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun unch220G () String)
(declare-fun ch20G () String)
(declare-fun unch120G () String)
(declare-fun unch220H () String)
(declare-fun ch20H () String)
(declare-fun unch120H () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun sc20G () Int)
(declare-fun sc20H () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun var21G () String)
(declare-fun var21H () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun unch221G () String)
(declare-fun ch21G () String)
(declare-fun unch121G () String)
(declare-fun unch221H () String)
(declare-fun ch21H () String)
(declare-fun unch121H () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun sc21G () Int)
(declare-fun sc21H () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun var22G () String)
(declare-fun var22H () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun unch222G () String)
(declare-fun ch22G () String)
(declare-fun unch122G () String)
(declare-fun unch222H () String)
(declare-fun ch22H () String)
(declare-fun unch122H () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun sc22G () Int)
(declare-fun sc22H () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun var23G () String)
(declare-fun var23H () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun unch223G () String)
(declare-fun ch23G () String)
(declare-fun unch123G () String)
(declare-fun unch223H () String)
(declare-fun ch23H () String)
(declare-fun unch123H () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun sc23G () Int)
(declare-fun sc23H () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun var24G () String)
(declare-fun var24H () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun unch224G () String)
(declare-fun ch24G () String)
(declare-fun unch124G () String)
(declare-fun unch224H () String)
(declare-fun ch24H () String)
(declare-fun unch124H () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun sc24G () Int)
(declare-fun sc24H () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun var25G () String)
(declare-fun var25H () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun unch225G () String)
(declare-fun ch25G () String)
(declare-fun unch125G () String)
(declare-fun unch225H () String)
(declare-fun ch25H () String)
(declare-fun unch125H () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun sc25G () Int)
(declare-fun sc25H () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun var26G () String)
(declare-fun var26H () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun unch226G () String)
(declare-fun ch26G () String)
(declare-fun unch126G () String)
(declare-fun unch226H () String)
(declare-fun ch26H () String)
(declare-fun unch126H () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun sc26G () Int)
(declare-fun sc26H () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun var27G () String)
(declare-fun var27H () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun unch227G () String)
(declare-fun ch27G () String)
(declare-fun unch127G () String)
(declare-fun unch227H () String)
(declare-fun ch27H () String)
(declare-fun unch127H () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun sc27G () Int)
(declare-fun sc27H () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun var28G () String)
(declare-fun var28H () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun unch228G () String)
(declare-fun ch28G () String)
(declare-fun unch128G () String)
(declare-fun unch228H () String)
(declare-fun ch28H () String)
(declare-fun unch128H () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun sc28G () Int)
(declare-fun sc28H () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun var29G () String)
(declare-fun var29H () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun unch229G () String)
(declare-fun ch29G () String)
(declare-fun unch129G () String)
(declare-fun unch229H () String)
(declare-fun ch29H () String)
(declare-fun unch129H () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun sc29G () Int)
(declare-fun sc29H () Int)
(declare-fun var30A () String)
(declare-fun var30B () String)
(declare-fun var30C () String)
(declare-fun var30D () String)
(declare-fun var30E () String)
(declare-fun var30F () String)
(declare-fun var30G () String)
(declare-fun var30H () String)
(declare-fun unch230A () String)
(declare-fun ch30A () String)
(declare-fun unch130A () String)
(declare-fun stem30 () String)
(declare-fun unch230B () String)
(declare-fun ch30B () String)
(declare-fun unch130B () String)
(declare-fun unch230C () String)
(declare-fun ch30C () String)
(declare-fun unch130C () String)
(declare-fun unch230D () String)
(declare-fun ch30D () String)
(declare-fun unch130D () String)
(declare-fun unch230E () String)
(declare-fun ch30E () String)
(declare-fun unch130E () String)
(declare-fun unch230F () String)
(declare-fun ch30F () String)
(declare-fun unch130F () String)
(declare-fun unch230G () String)
(declare-fun ch30G () String)
(declare-fun unch130G () String)
(declare-fun unch230H () String)
(declare-fun ch30H () String)
(declare-fun unch130H () String)
(declare-fun l30 () Int)
(declare-fun sc30A () Int)
(declare-fun sc30B () Int)
(declare-fun sc30C () Int)
(declare-fun sc30D () Int)
(declare-fun sc30E () Int)
(declare-fun sc30F () Int)
(declare-fun sc30G () Int)
(declare-fun sc30H () Int)
(declare-fun var31A () String)
(declare-fun var31B () String)
(declare-fun var31C () String)
(declare-fun var31D () String)
(declare-fun var31E () String)
(declare-fun var31F () String)
(declare-fun var31G () String)
(declare-fun var31H () String)
(declare-fun unch231A () String)
(declare-fun ch31A () String)
(declare-fun unch131A () String)
(declare-fun stem31 () String)
(declare-fun unch231B () String)
(declare-fun ch31B () String)
(declare-fun unch131B () String)
(declare-fun unch231C () String)
(declare-fun ch31C () String)
(declare-fun unch131C () String)
(declare-fun unch231D () String)
(declare-fun ch31D () String)
(declare-fun unch131D () String)
(declare-fun unch231E () String)
(declare-fun ch31E () String)
(declare-fun unch131E () String)
(declare-fun unch231F () String)
(declare-fun ch31F () String)
(declare-fun unch131F () String)
(declare-fun unch231G () String)
(declare-fun ch31G () String)
(declare-fun unch131G () String)
(declare-fun unch231H () String)
(declare-fun ch31H () String)
(declare-fun unch131H () String)
(declare-fun l31 () Int)
(declare-fun sc31A () Int)
(declare-fun sc31B () Int)
(declare-fun sc31C () Int)
(declare-fun sc31D () Int)
(declare-fun sc31E () Int)
(declare-fun sc31F () Int)
(declare-fun sc31G () Int)
(declare-fun sc31H () Int)
(declare-fun var32A () String)
(declare-fun var32B () String)
(declare-fun var32C () String)
(declare-fun var32D () String)
(declare-fun var32E () String)
(declare-fun var32F () String)
(declare-fun var32G () String)
(declare-fun var32H () String)
(declare-fun unch232A () String)
(declare-fun ch32A () String)
(declare-fun unch132A () String)
(declare-fun stem32 () String)
(declare-fun unch232B () String)
(declare-fun ch32B () String)
(declare-fun unch132B () String)
(declare-fun unch232C () String)
(declare-fun ch32C () String)
(declare-fun unch132C () String)
(declare-fun unch232D () String)
(declare-fun ch32D () String)
(declare-fun unch132D () String)
(declare-fun unch232E () String)
(declare-fun ch32E () String)
(declare-fun unch132E () String)
(declare-fun unch232F () String)
(declare-fun ch32F () String)
(declare-fun unch132F () String)
(declare-fun unch232G () String)
(declare-fun ch32G () String)
(declare-fun unch132G () String)
(declare-fun unch232H () String)
(declare-fun ch32H () String)
(declare-fun unch132H () String)
(declare-fun l32 () Int)
(declare-fun sc32A () Int)
(declare-fun sc32B () Int)
(declare-fun sc32C () Int)
(declare-fun sc32D () Int)
(declare-fun sc32E () Int)
(declare-fun sc32F () Int)
(declare-fun sc32G () Int)
(declare-fun sc32H () Int)
(declare-fun var33A () String)
(declare-fun var33B () String)
(declare-fun var33C () String)
(declare-fun var33D () String)
(declare-fun var33E () String)
(declare-fun var33F () String)
(declare-fun var33G () String)
(declare-fun var33H () String)
(declare-fun unch233A () String)
(declare-fun ch33A () String)
(declare-fun unch133A () String)
(declare-fun stem33 () String)
(declare-fun unch233B () String)
(declare-fun ch33B () String)
(declare-fun unch133B () String)
(declare-fun unch233C () String)
(declare-fun ch33C () String)
(declare-fun unch133C () String)
(declare-fun unch233D () String)
(declare-fun ch33D () String)
(declare-fun unch133D () String)
(declare-fun unch233E () String)
(declare-fun ch33E () String)
(declare-fun unch133E () String)
(declare-fun unch233F () String)
(declare-fun ch33F () String)
(declare-fun unch133F () String)
(declare-fun unch233G () String)
(declare-fun ch33G () String)
(declare-fun unch133G () String)
(declare-fun unch233H () String)
(declare-fun ch33H () String)
(declare-fun unch133H () String)
(declare-fun l33 () Int)
(declare-fun sc33A () Int)
(declare-fun sc33B () Int)
(declare-fun sc33C () Int)
(declare-fun sc33D () Int)
(declare-fun sc33E () Int)
(declare-fun sc33F () Int)
(declare-fun sc33G () Int)
(declare-fun sc33H () Int)
(declare-fun var34A () String)
(declare-fun var34B () String)
(declare-fun var34C () String)
(declare-fun var34D () String)
(declare-fun var34E () String)
(declare-fun var34F () String)
(declare-fun var34G () String)
(declare-fun var34H () String)
(declare-fun unch234A () String)
(declare-fun ch34A () String)
(declare-fun unch134A () String)
(declare-fun stem34 () String)
(declare-fun unch234B () String)
(declare-fun ch34B () String)
(declare-fun unch134B () String)
(declare-fun unch234C () String)
(declare-fun ch34C () String)
(declare-fun unch134C () String)
(declare-fun unch234D () String)
(declare-fun ch34D () String)
(declare-fun unch134D () String)
(declare-fun unch234E () String)
(declare-fun ch34E () String)
(declare-fun unch134E () String)
(declare-fun unch234F () String)
(declare-fun ch34F () String)
(declare-fun unch134F () String)
(declare-fun unch234G () String)
(declare-fun ch34G () String)
(declare-fun unch134G () String)
(declare-fun unch234H () String)
(declare-fun ch34H () String)
(declare-fun unch134H () String)
(declare-fun l34 () Int)
(declare-fun sc34A () Int)
(declare-fun sc34B () Int)
(declare-fun sc34C () Int)
(declare-fun sc34D () Int)
(declare-fun sc34E () Int)
(declare-fun sc34F () Int)
(declare-fun sc34G () Int)
(declare-fun sc34H () Int)
(declare-fun var35A () String)
(declare-fun var35B () String)
(declare-fun var35C () String)
(declare-fun var35D () String)
(declare-fun var35E () String)
(declare-fun var35F () String)
(declare-fun var35G () String)
(declare-fun var35H () String)
(declare-fun unch235A () String)
(declare-fun ch35A () String)
(declare-fun unch135A () String)
(declare-fun stem35 () String)
(declare-fun unch235B () String)
(declare-fun ch35B () String)
(declare-fun unch135B () String)
(declare-fun unch235C () String)
(declare-fun ch35C () String)
(declare-fun unch135C () String)
(declare-fun unch235D () String)
(declare-fun ch35D () String)
(declare-fun unch135D () String)
(declare-fun unch235E () String)
(declare-fun ch35E () String)
(declare-fun unch135E () String)
(declare-fun unch235F () String)
(declare-fun ch35F () String)
(declare-fun unch135F () String)
(declare-fun unch235G () String)
(declare-fun ch35G () String)
(declare-fun unch135G () String)
(declare-fun unch235H () String)
(declare-fun ch35H () String)
(declare-fun unch135H () String)
(declare-fun l35 () Int)
(declare-fun sc35A () Int)
(declare-fun sc35B () Int)
(declare-fun sc35C () Int)
(declare-fun sc35D () Int)
(declare-fun sc35E () Int)
(declare-fun sc35F () Int)
(declare-fun sc35G () Int)
(declare-fun sc35H () Int)
(declare-fun var36A () String)
(declare-fun var36B () String)
(declare-fun var36C () String)
(declare-fun var36D () String)
(declare-fun var36E () String)
(declare-fun var36F () String)
(declare-fun var36G () String)
(declare-fun var36H () String)
(declare-fun unch236A () String)
(declare-fun ch36A () String)
(declare-fun unch136A () String)
(declare-fun stem36 () String)
(declare-fun unch236B () String)
(declare-fun ch36B () String)
(declare-fun unch136B () String)
(declare-fun unch236C () String)
(declare-fun ch36C () String)
(declare-fun unch136C () String)
(declare-fun unch236D () String)
(declare-fun ch36D () String)
(declare-fun unch136D () String)
(declare-fun unch236E () String)
(declare-fun ch36E () String)
(declare-fun unch136E () String)
(declare-fun unch236F () String)
(declare-fun ch36F () String)
(declare-fun unch136F () String)
(declare-fun unch236G () String)
(declare-fun ch36G () String)
(declare-fun unch136G () String)
(declare-fun unch236H () String)
(declare-fun ch36H () String)
(declare-fun unch136H () String)
(declare-fun l36 () Int)
(declare-fun sc36A () Int)
(declare-fun sc36B () Int)
(declare-fun sc36C () Int)
(declare-fun sc36D () Int)
(declare-fun sc36E () Int)
(declare-fun sc36F () Int)
(declare-fun sc36G () Int)
(declare-fun sc36H () Int)
(declare-fun var37A () String)
(declare-fun var37B () String)
(declare-fun var37C () String)
(declare-fun var37D () String)
(declare-fun var37E () String)
(declare-fun var37F () String)
(declare-fun var37G () String)
(declare-fun var37H () String)
(declare-fun unch237A () String)
(declare-fun ch37A () String)
(declare-fun unch137A () String)
(declare-fun stem37 () String)
(declare-fun unch237B () String)
(declare-fun ch37B () String)
(declare-fun unch137B () String)
(declare-fun unch237C () String)
(declare-fun ch37C () String)
(declare-fun unch137C () String)
(declare-fun unch237D () String)
(declare-fun ch37D () String)
(declare-fun unch137D () String)
(declare-fun unch237E () String)
(declare-fun ch37E () String)
(declare-fun unch137E () String)
(declare-fun unch237F () String)
(declare-fun ch37F () String)
(declare-fun unch137F () String)
(declare-fun unch237G () String)
(declare-fun ch37G () String)
(declare-fun unch137G () String)
(declare-fun unch237H () String)
(declare-fun ch37H () String)
(declare-fun unch137H () String)
(declare-fun l37 () Int)
(declare-fun sc37A () Int)
(declare-fun sc37B () Int)
(declare-fun sc37C () Int)
(declare-fun sc37D () Int)
(declare-fun sc37E () Int)
(declare-fun sc37F () Int)
(declare-fun sc37G () Int)
(declare-fun sc37H () Int)
(declare-fun var38A () String)
(declare-fun var38B () String)
(declare-fun var38C () String)
(declare-fun var38D () String)
(declare-fun var38E () String)
(declare-fun var38F () String)
(declare-fun var38G () String)
(declare-fun var38H () String)
(declare-fun unch238A () String)
(declare-fun ch38A () String)
(declare-fun unch138A () String)
(declare-fun stem38 () String)
(declare-fun unch238B () String)
(declare-fun ch38B () String)
(declare-fun unch138B () String)
(declare-fun unch238C () String)
(declare-fun ch38C () String)
(declare-fun unch138C () String)
(declare-fun unch238D () String)
(declare-fun ch38D () String)
(declare-fun unch138D () String)
(declare-fun unch238E () String)
(declare-fun ch38E () String)
(declare-fun unch138E () String)
(declare-fun unch238F () String)
(declare-fun ch38F () String)
(declare-fun unch138F () String)
(declare-fun unch238G () String)
(declare-fun ch38G () String)
(declare-fun unch138G () String)
(declare-fun unch238H () String)
(declare-fun ch38H () String)
(declare-fun unch138H () String)
(declare-fun l38 () Int)
(declare-fun sc38A () Int)
(declare-fun sc38B () Int)
(declare-fun sc38C () Int)
(declare-fun sc38D () Int)
(declare-fun sc38E () Int)
(declare-fun sc38F () Int)
(declare-fun sc38G () Int)
(declare-fun sc38H () Int)
(declare-fun var39A () String)
(declare-fun var39B () String)
(declare-fun var39C () String)
(declare-fun var39D () String)
(declare-fun var39E () String)
(declare-fun var39F () String)
(declare-fun var39G () String)
(declare-fun var39H () String)
(declare-fun unch239A () String)
(declare-fun ch39A () String)
(declare-fun unch139A () String)
(declare-fun stem39 () String)
(declare-fun unch239B () String)
(declare-fun ch39B () String)
(declare-fun unch139B () String)
(declare-fun unch239C () String)
(declare-fun ch39C () String)
(declare-fun unch139C () String)
(declare-fun unch239D () String)
(declare-fun ch39D () String)
(declare-fun unch139D () String)
(declare-fun unch239E () String)
(declare-fun ch39E () String)
(declare-fun unch139E () String)
(declare-fun unch239F () String)
(declare-fun ch39F () String)
(declare-fun unch139F () String)
(declare-fun unch239G () String)
(declare-fun ch39G () String)
(declare-fun unch139G () String)
(declare-fun unch239H () String)
(declare-fun ch39H () String)
(declare-fun unch139H () String)
(declare-fun l39 () Int)
(declare-fun sc39A () Int)
(declare-fun sc39B () Int)
(declare-fun sc39C () Int)
(declare-fun sc39D () Int)
(declare-fun sc39E () Int)
(declare-fun sc39F () Int)
(declare-fun sc39G () Int)
(declare-fun sc39H () Int)
(declare-fun var40A () String)
(declare-fun var40B () String)
(declare-fun var40C () String)
(declare-fun var40D () String)
(declare-fun var40E () String)
(declare-fun var40F () String)
(declare-fun var40G () String)
(declare-fun var40H () String)
(declare-fun unch240A () String)
(declare-fun ch40A () String)
(declare-fun unch140A () String)
(declare-fun stem40 () String)
(declare-fun unch240B () String)
(declare-fun ch40B () String)
(declare-fun unch140B () String)
(declare-fun unch240C () String)
(declare-fun ch40C () String)
(declare-fun unch140C () String)
(declare-fun unch240D () String)
(declare-fun ch40D () String)
(declare-fun unch140D () String)
(declare-fun unch240E () String)
(declare-fun ch40E () String)
(declare-fun unch140E () String)
(declare-fun unch240F () String)
(declare-fun ch40F () String)
(declare-fun unch140F () String)
(declare-fun unch240G () String)
(declare-fun ch40G () String)
(declare-fun unch140G () String)
(declare-fun unch240H () String)
(declare-fun ch40H () String)
(declare-fun unch140H () String)
(declare-fun l40 () Int)
(declare-fun sc40A () Int)
(declare-fun sc40B () Int)
(declare-fun sc40C () Int)
(declare-fun sc40D () Int)
(declare-fun sc40E () Int)
(declare-fun sc40F () Int)
(declare-fun sc40G () Int)
(declare-fun sc40H () Int)
(declare-fun var41A () String)
(declare-fun var41B () String)
(declare-fun var41C () String)
(declare-fun var41D () String)
(declare-fun var41E () String)
(declare-fun var41F () String)
(declare-fun var41G () String)
(declare-fun var41H () String)
(declare-fun unch241A () String)
(declare-fun ch41A () String)
(declare-fun unch141A () String)
(declare-fun stem41 () String)
(declare-fun unch241B () String)
(declare-fun ch41B () String)
(declare-fun unch141B () String)
(declare-fun unch241C () String)
(declare-fun ch41C () String)
(declare-fun unch141C () String)
(declare-fun unch241D () String)
(declare-fun ch41D () String)
(declare-fun unch141D () String)
(declare-fun unch241E () String)
(declare-fun ch41E () String)
(declare-fun unch141E () String)
(declare-fun unch241F () String)
(declare-fun ch41F () String)
(declare-fun unch141F () String)
(declare-fun unch241G () String)
(declare-fun ch41G () String)
(declare-fun unch141G () String)
(declare-fun unch241H () String)
(declare-fun ch41H () String)
(declare-fun unch141H () String)
(declare-fun l41 () Int)
(declare-fun sc41A () Int)
(declare-fun sc41B () Int)
(declare-fun sc41C () Int)
(declare-fun sc41D () Int)
(declare-fun sc41E () Int)
(declare-fun sc41F () Int)
(declare-fun sc41G () Int)
(declare-fun sc41H () Int)
(declare-fun var42A () String)
(declare-fun var42B () String)
(declare-fun var42C () String)
(declare-fun var42D () String)
(declare-fun var42E () String)
(declare-fun var42F () String)
(declare-fun var42G () String)
(declare-fun var42H () String)
(declare-fun unch242A () String)
(declare-fun ch42A () String)
(declare-fun unch142A () String)
(declare-fun stem42 () String)
(declare-fun unch242B () String)
(declare-fun ch42B () String)
(declare-fun unch142B () String)
(declare-fun unch242C () String)
(declare-fun ch42C () String)
(declare-fun unch142C () String)
(declare-fun unch242D () String)
(declare-fun ch42D () String)
(declare-fun unch142D () String)
(declare-fun unch242E () String)
(declare-fun ch42E () String)
(declare-fun unch142E () String)
(declare-fun unch242F () String)
(declare-fun ch42F () String)
(declare-fun unch142F () String)
(declare-fun unch242G () String)
(declare-fun ch42G () String)
(declare-fun unch142G () String)
(declare-fun unch242H () String)
(declare-fun ch42H () String)
(declare-fun unch142H () String)
(declare-fun l42 () Int)
(declare-fun sc42A () Int)
(declare-fun sc42B () Int)
(declare-fun sc42C () Int)
(declare-fun sc42D () Int)
(declare-fun sc42E () Int)
(declare-fun sc42F () Int)
(declare-fun sc42G () Int)
(declare-fun sc42H () Int)
(declare-fun var43A () String)
(declare-fun var43B () String)
(declare-fun var43C () String)
(declare-fun var43D () String)
(declare-fun var43E () String)
(declare-fun var43F () String)
(declare-fun var43G () String)
(declare-fun var43H () String)
(declare-fun unch243A () String)
(declare-fun ch43A () String)
(declare-fun unch143A () String)
(declare-fun stem43 () String)
(declare-fun unch243B () String)
(declare-fun ch43B () String)
(declare-fun unch143B () String)
(declare-fun unch243C () String)
(declare-fun ch43C () String)
(declare-fun unch143C () String)
(declare-fun unch243D () String)
(declare-fun ch43D () String)
(declare-fun unch143D () String)
(declare-fun unch243E () String)
(declare-fun ch43E () String)
(declare-fun unch143E () String)
(declare-fun unch243F () String)
(declare-fun ch43F () String)
(declare-fun unch143F () String)
(declare-fun unch243G () String)
(declare-fun ch43G () String)
(declare-fun unch143G () String)
(declare-fun unch243H () String)
(declare-fun ch43H () String)
(declare-fun unch143H () String)
(declare-fun l43 () Int)
(declare-fun sc43A () Int)
(declare-fun sc43B () Int)
(declare-fun sc43C () Int)
(declare-fun sc43D () Int)
(declare-fun sc43E () Int)
(declare-fun sc43F () Int)
(declare-fun sc43G () Int)
(declare-fun sc43H () Int)
(declare-fun var44A () String)
(declare-fun var44B () String)
(declare-fun var44C () String)
(declare-fun var44D () String)
(declare-fun var44E () String)
(declare-fun var44F () String)
(declare-fun var44G () String)
(declare-fun var44H () String)
(declare-fun unch244A () String)
(declare-fun ch44A () String)
(declare-fun unch144A () String)
(declare-fun stem44 () String)
(declare-fun unch244B () String)
(declare-fun ch44B () String)
(declare-fun unch144B () String)
(declare-fun unch244C () String)
(declare-fun ch44C () String)
(declare-fun unch144C () String)
(declare-fun unch244D () String)
(declare-fun ch44D () String)
(declare-fun unch144D () String)
(declare-fun unch244E () String)
(declare-fun ch44E () String)
(declare-fun unch144E () String)
(declare-fun unch244F () String)
(declare-fun ch44F () String)
(declare-fun unch144F () String)
(declare-fun unch244G () String)
(declare-fun ch44G () String)
(declare-fun unch144G () String)
(declare-fun unch244H () String)
(declare-fun ch44H () String)
(declare-fun unch144H () String)
(declare-fun l44 () Int)
(declare-fun sc44A () Int)
(declare-fun sc44B () Int)
(declare-fun sc44C () Int)
(declare-fun sc44D () Int)
(declare-fun sc44E () Int)
(declare-fun sc44F () Int)
(declare-fun sc44G () Int)
(declare-fun sc44H () Int)
(declare-fun var45A () String)
(declare-fun var45B () String)
(declare-fun var45C () String)
(declare-fun var45D () String)
(declare-fun var45E () String)
(declare-fun var45F () String)
(declare-fun var45G () String)
(declare-fun var45H () String)
(declare-fun unch245A () String)
(declare-fun ch45A () String)
(declare-fun unch145A () String)
(declare-fun stem45 () String)
(declare-fun unch245B () String)
(declare-fun ch45B () String)
(declare-fun unch145B () String)
(declare-fun unch245C () String)
(declare-fun ch45C () String)
(declare-fun unch145C () String)
(declare-fun unch245D () String)
(declare-fun ch45D () String)
(declare-fun unch145D () String)
(declare-fun unch245E () String)
(declare-fun ch45E () String)
(declare-fun unch145E () String)
(declare-fun unch245F () String)
(declare-fun ch45F () String)
(declare-fun unch145F () String)
(declare-fun unch245G () String)
(declare-fun ch45G () String)
(declare-fun unch145G () String)
(declare-fun unch245H () String)
(declare-fun ch45H () String)
(declare-fun unch145H () String)
(declare-fun l45 () Int)
(declare-fun sc45A () Int)
(declare-fun sc45B () Int)
(declare-fun sc45C () Int)
(declare-fun sc45D () Int)
(declare-fun sc45E () Int)
(declare-fun sc45F () Int)
(declare-fun sc45G () Int)
(declare-fun sc45H () Int)
(declare-fun var46A () String)
(declare-fun var46B () String)
(declare-fun var46C () String)
(declare-fun var46D () String)
(declare-fun var46E () String)
(declare-fun var46F () String)
(declare-fun var46G () String)
(declare-fun var46H () String)
(declare-fun unch246A () String)
(declare-fun ch46A () String)
(declare-fun unch146A () String)
(declare-fun stem46 () String)
(declare-fun unch246B () String)
(declare-fun ch46B () String)
(declare-fun unch146B () String)
(declare-fun unch246C () String)
(declare-fun ch46C () String)
(declare-fun unch146C () String)
(declare-fun unch246D () String)
(declare-fun ch46D () String)
(declare-fun unch146D () String)
(declare-fun unch246E () String)
(declare-fun ch46E () String)
(declare-fun unch146E () String)
(declare-fun unch246F () String)
(declare-fun ch46F () String)
(declare-fun unch146F () String)
(declare-fun unch246G () String)
(declare-fun ch46G () String)
(declare-fun unch146G () String)
(declare-fun unch246H () String)
(declare-fun ch46H () String)
(declare-fun unch146H () String)
(declare-fun l46 () Int)
(declare-fun sc46A () Int)
(declare-fun sc46B () Int)
(declare-fun sc46C () Int)
(declare-fun sc46D () Int)
(declare-fun sc46E () Int)
(declare-fun sc46F () Int)
(declare-fun sc46G () Int)
(declare-fun sc46H () Int)
(declare-fun var47A () String)
(declare-fun var47B () String)
(declare-fun var47C () String)
(declare-fun var47D () String)
(declare-fun var47E () String)
(declare-fun var47F () String)
(declare-fun var47G () String)
(declare-fun var47H () String)
(declare-fun unch247A () String)
(declare-fun ch47A () String)
(declare-fun unch147A () String)
(declare-fun stem47 () String)
(declare-fun unch247B () String)
(declare-fun ch47B () String)
(declare-fun unch147B () String)
(declare-fun unch247C () String)
(declare-fun ch47C () String)
(declare-fun unch147C () String)
(declare-fun unch247D () String)
(declare-fun ch47D () String)
(declare-fun unch147D () String)
(declare-fun unch247E () String)
(declare-fun ch47E () String)
(declare-fun unch147E () String)
(declare-fun unch247F () String)
(declare-fun ch47F () String)
(declare-fun unch147F () String)
(declare-fun unch247G () String)
(declare-fun ch47G () String)
(declare-fun unch147G () String)
(declare-fun unch247H () String)
(declare-fun ch47H () String)
(declare-fun unch147H () String)
(declare-fun l47 () Int)
(declare-fun sc47A () Int)
(declare-fun sc47B () Int)
(declare-fun sc47C () Int)
(declare-fun sc47D () Int)
(declare-fun sc47E () Int)
(declare-fun sc47F () Int)
(declare-fun sc47G () Int)
(declare-fun sc47H () Int)
(declare-fun var48A () String)
(declare-fun var48B () String)
(declare-fun var48C () String)
(declare-fun var48D () String)
(declare-fun var48E () String)
(declare-fun var48F () String)
(declare-fun var48G () String)
(declare-fun var48H () String)
(declare-fun unch248A () String)
(declare-fun ch48A () String)
(declare-fun unch148A () String)
(declare-fun stem48 () String)
(declare-fun unch248B () String)
(declare-fun ch48B () String)
(declare-fun unch148B () String)
(declare-fun unch248C () String)
(declare-fun ch48C () String)
(declare-fun unch148C () String)
(declare-fun unch248D () String)
(declare-fun ch48D () String)
(declare-fun unch148D () String)
(declare-fun unch248E () String)
(declare-fun ch48E () String)
(declare-fun unch148E () String)
(declare-fun unch248F () String)
(declare-fun ch48F () String)
(declare-fun unch148F () String)
(declare-fun unch248G () String)
(declare-fun ch48G () String)
(declare-fun unch148G () String)
(declare-fun unch248H () String)
(declare-fun ch48H () String)
(declare-fun unch148H () String)
(declare-fun l48 () Int)
(declare-fun sc48A () Int)
(declare-fun sc48B () Int)
(declare-fun sc48C () Int)
(declare-fun sc48D () Int)
(declare-fun sc48E () Int)
(declare-fun sc48F () Int)
(declare-fun sc48G () Int)
(declare-fun sc48H () Int)
(declare-fun var49A () String)
(declare-fun var49B () String)
(declare-fun var49C () String)
(declare-fun var49D () String)
(declare-fun var49E () String)
(declare-fun var49F () String)
(declare-fun var49G () String)
(declare-fun var49H () String)
(declare-fun unch249A () String)
(declare-fun ch49A () String)
(declare-fun unch149A () String)
(declare-fun stem49 () String)
(declare-fun unch249B () String)
(declare-fun ch49B () String)
(declare-fun unch149B () String)
(declare-fun unch249C () String)
(declare-fun ch49C () String)
(declare-fun unch149C () String)
(declare-fun unch249D () String)
(declare-fun ch49D () String)
(declare-fun unch149D () String)
(declare-fun unch249E () String)
(declare-fun ch49E () String)
(declare-fun unch149E () String)
(declare-fun unch249F () String)
(declare-fun ch49F () String)
(declare-fun unch149F () String)
(declare-fun unch249G () String)
(declare-fun ch49G () String)
(declare-fun unch149G () String)
(declare-fun unch249H () String)
(declare-fun ch49H () String)
(declare-fun unch149H () String)
(declare-fun l49 () Int)
(declare-fun sc49A () Int)
(declare-fun sc49B () Int)
(declare-fun sc49C () Int)
(declare-fun sc49D () Int)
(declare-fun sc49E () Int)
(declare-fun sc49F () Int)
(declare-fun sc49G () Int)
(declare-fun sc49H () Int)
(declare-fun var50A () String)
(declare-fun var50B () String)
(declare-fun var50C () String)
(declare-fun var50D () String)
(declare-fun var50E () String)
(declare-fun var50F () String)
(declare-fun var50G () String)
(declare-fun var50H () String)
(declare-fun unch250A () String)
(declare-fun ch50A () String)
(declare-fun unch150A () String)
(declare-fun stem50 () String)
(declare-fun unch250B () String)
(declare-fun ch50B () String)
(declare-fun unch150B () String)
(declare-fun unch250C () String)
(declare-fun ch50C () String)
(declare-fun unch150C () String)
(declare-fun unch250D () String)
(declare-fun ch50D () String)
(declare-fun unch150D () String)
(declare-fun unch250E () String)
(declare-fun ch50E () String)
(declare-fun unch150E () String)
(declare-fun unch250F () String)
(declare-fun ch50F () String)
(declare-fun unch150F () String)
(declare-fun unch250G () String)
(declare-fun ch50G () String)
(declare-fun unch150G () String)
(declare-fun unch250H () String)
(declare-fun ch50H () String)
(declare-fun unch150H () String)
(declare-fun l50 () Int)
(declare-fun sc50A () Int)
(declare-fun sc50B () Int)
(declare-fun sc50C () Int)
(declare-fun sc50D () Int)
(declare-fun sc50E () Int)
(declare-fun sc50F () Int)
(declare-fun sc50G () Int)
(declare-fun sc50H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "plOst" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "plastO" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "plasjkjX" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "skorZx" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "skoruxO" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "skorusjX" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "1jrjXx" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "1jrjixO" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "1jrjisjX" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "pastZx" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "pastuxO" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "pastusjX" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "mjnjZx" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "mjnjZxa" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "mjnjZsji" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "plZ1" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "plZ1a" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "plZzji" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "sjtjX1" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "st21a" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "st2zji" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (<= (str.len var7G) 1))
(assert (<= (str.len var7H) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= (str.++ preG (str.++ stem7 sufG)) (str.++ unch17G (str.++ ch7G unch27G))))
(assert (= (str.++ preH (str.++ stem7 sufH)) (str.++ unch17H (str.++ ch7H unch27H))))
(assert (= "sOk" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "sOka" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "sOtsji" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (= (ite (= ch7G var7G) 0 1) sc7G))
(assert (= (ite (= ch7H var7H) 0 1) sc7H))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= sc7G 1))
(assert (<= sc7H 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (<= (str.len var8G) 1))
(assert (<= (str.len var8H) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= (str.++ preG (str.++ stem8 sufG)) (str.++ unch18G (str.++ ch8G unch28G))))
(assert (= (str.++ preH (str.++ stem8 sufH)) (str.++ unch18H (str.++ ch8H unch28H))))
(assert (= "b3k" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "bHkO" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "bHtsjX" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (= (ite (= ch8G var8G) 0 1) sc8G))
(assert (= (ite (= ch8H var8H) 0 1) sc8H))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= sc8G 1))
(assert (<= sc8H 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (<= (str.len var9G) 1))
(assert (<= (str.len var9H) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= (str.++ preG (str.++ stem9 sufG)) (str.++ unch19G (str.++ ch9G unch29G))))
(assert (= (str.++ preH (str.++ stem9 sufH)) (str.++ unch19H (str.++ ch9H unch29H))))
(assert (= "l3st" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "lHstO" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "lHsjkjX" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (= (ite (= ch9G var9G) 0 1) sc9G))
(assert (= (ite (= ch9H var9H) 0 1) sc9H))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= sc9G 1))
(assert (<= sc9H 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (<= (str.len var10G) 1))
(assert (<= (str.len var10H) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= (str.++ preG (str.++ stem10 sufG)) (str.++ unch110G (str.++ ch10G unch210G))))
(assert (= (str.++ preH (str.++ stem10 sufH)) (str.++ unch110H (str.++ ch10H unch210H))))
(assert (= "l3st" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "l3sta" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "l3sjkji" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (= (ite (= ch10G var10G) 0 1) sc10G))
(assert (= (ite (= ch10H var10H) 0 1) sc10H))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= sc10G 1))
(assert (<= sc10H 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (<= (str.len var11G) 1))
(assert (<= (str.len var11H) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= (str.++ preG (str.++ stem11 sufG)) (str.++ unch111G (str.++ ch11G unch211G))))
(assert (= (str.++ preH (str.++ stem11 sufH)) (str.++ unch111H (str.++ ch11H unch211H))))
(assert (= "pjljXt" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "pl2ta" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "pl2kji" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (= (ite (= ch11G var11G) 0 1) sc11G))
(assert (= (ite (= ch11H var11H) 0 1) sc11H))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= sc11G 1))
(assert (<= sc11H 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (<= (str.len var12G) 1))
(assert (<= (str.len var12H) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= (str.++ preG (str.++ stem12 sufG)) (str.++ unch112G (str.++ ch12G unch212G))))
(assert (= (str.++ preH (str.++ stem12 sufH)) (str.++ unch112H (str.++ ch12H unch212H))))
(assert (= "sjmjrjXd" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "smr2da" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "smr2gji" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (= (ite (= ch12G var12G) 0 1) sc12G))
(assert (= (ite (= ch12H var12H) 0 1) sc12H))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= sc12G 1))
(assert (<= sc12H 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (<= (str.len var13G) 1))
(assert (<= (str.len var13H) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= (str.++ preG (str.++ stem13 sufG)) (str.++ unch113G (str.++ ch13G unch213G))))
(assert (= (str.++ preH (str.++ stem13 sufH)) (str.++ unch113H (str.++ ch13H unch213H))))
(assert (= "fjXst" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "fostO" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "fosjkjX" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (= (ite (= ch13G var13G) 0 1) sc13G))
(assert (= (ite (= ch13H var13H) 0 1) sc13H))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= sc13G 1))
(assert (<= sc13H 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (<= (str.len var14G) 1))
(assert (<= (str.len var14H) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= (str.++ preG (str.++ stem14 sufG)) (str.++ unch114G (str.++ ch14G unch214G))))
(assert (= (str.++ preH (str.++ stem14 sufH)) (str.++ unch114H (str.++ ch14H unch214H))))
(assert (= "mjXst" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "m2sta" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "m2sjkji" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (= (ite (= ch14G var14G) 0 1) sc14G))
(assert (= (ite (= ch14H var14H) 0 1) sc14H))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= sc14G 1))
(assert (<= sc14H 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (<= (str.len var15G) 1))
(assert (<= (str.len var15H) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= (str.++ preG (str.++ stem15 sufG)) (str.++ unch115G (str.++ ch15G unch215G))))
(assert (= (str.++ preH (str.++ stem15 sufH)) (str.++ unch115H (str.++ ch15H unch215H))))
(assert (= "ljXd" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "l4du" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "lHdZ" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (= (ite (= ch15G var15G) 0 1) sc15G))
(assert (= (ite (= ch15H var15H) 0 1) sc15H))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= sc15G 1))
(assert (<= sc15H 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (<= (str.len var16G) 1))
(assert (<= (str.len var16H) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= (str.++ preG (str.++ stem16 sufG)) (str.++ unch116G (str.++ ch16G unch216G))))
(assert (= (str.++ preH (str.++ stem16 sufH)) (str.++ unch116H (str.++ ch16H unch216H))))
(assert (= "djrjXt" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "dr2ta" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "dr2kji" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (= (ite (= ch16G var16G) 0 1) sc16G))
(assert (= (ite (= ch16H var16H) 0 1) sc16H))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= sc16G 1))
(assert (<= sc16H 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (<= (str.len var17G) 1))
(assert (<= (str.len var17H) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= (str.++ preG (str.++ stem17 sufG)) (str.++ unch117G (str.++ ch17G unch217G))))
(assert (= (str.++ preH (str.++ stem17 sufH)) (str.++ unch117H (str.++ ch17H unch217H))))
(assert (= "mjXd" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "m4du" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "mHdZ" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (= (ite (= ch17G var17G) 0 1) sc17G))
(assert (= (ite (= ch17H var17H) 0 1) sc17H))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= sc17G 1))
(assert (<= sc17H 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (<= (str.len var18G) 1))
(assert (<= (str.len var18H) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= (str.++ preG (str.++ stem18 sufG)) (str.++ unch118G (str.++ ch18G unch218G))))
(assert (= (str.++ preH (str.++ stem18 sufH)) (str.++ unch118H (str.++ ch18H unch218H))))
(assert (= "vjXl" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "volO" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "voljX" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (= (ite (= ch18G var18G) 0 1) sc18G))
(assert (= (ite (= ch18H var18H) 0 1) sc18H))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= sc18G 1))
(assert (<= sc18H 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (<= (str.len var19G) 1))
(assert (<= (str.len var19H) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= (str.++ preG (str.++ stem19 sufG)) (str.++ unch119G (str.++ ch19G unch219G))))
(assert (= (str.++ preH (str.++ stem19 sufH)) (str.++ unch119H (str.++ ch19H unch219H))))
(assert (= "vjXz" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "v2za" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "v2zji" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (= (ite (= ch19G var19G) 0 1) sc19G))
(assert (= (ite (= ch19H var19H) 0 1) sc19H))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= sc19G 1))
(assert (<= sc19H 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (<= (str.len var20G) 1))
(assert (<= (str.len var20H) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= (str.++ preG (str.++ stem20 sufG)) (str.++ unch120G (str.++ ch20G unch220G))))
(assert (= (str.++ preH (str.++ stem20 sufH)) (str.++ unch120H (str.++ ch20H unch220H))))
(assert (= "s3r" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "s3ra" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "s3rji" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (= (ite (= ch20G var20G) 0 1) sc20G))
(assert (= (ite (= ch20H var20H) 0 1) sc20H))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= sc20G 1))
(assert (<= sc20H 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (<= (str.len var21G) 1))
(assert (<= (str.len var21H) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= (str.++ preG (str.++ stem21 sufG)) (str.++ unch121G (str.++ ch21G unch221G))))
(assert (= (str.++ preH (str.++ stem21 sufH)) (str.++ unch121H (str.++ ch21H unch221H))))
(assert (= "sjnjXp" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "snopO" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "snopjX" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (= (ite (= ch21G var21G) 0 1) sc21G))
(assert (= (ite (= ch21H var21H) 0 1) sc21H))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= sc21G 1))
(assert (<= sc21H 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (<= (str.len var22G) 1))
(assert (<= (str.len var22H) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= (str.++ preG (str.++ stem22 sufG)) (str.++ unch122G (str.++ ch22G unch222G))))
(assert (= (str.++ preH (str.++ stem22 sufH)) (str.++ unch122H (str.++ ch22H unch222H))))
(assert (= "1r3b" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "1rHbO" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "1rHbjX" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (= (ite (= ch22G var22G) 0 1) sc22G))
(assert (= (ite (= ch22H var22H) 0 1) sc22H))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= sc22G 1))
(assert (<= sc22H 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (<= (str.len var23G) 1))
(assert (<= (str.len var23H) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= (str.++ preG (str.++ stem23 sufG)) (str.++ unch123G (str.++ ch23G unch223G))))
(assert (= (str.++ preH (str.++ stem23 sufH)) (str.++ unch123H (str.++ ch23H unch223H))))
(assert (= "l4bjid" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= "l4bHda" (str.++ unch123B (str.++ var23B unch223B))))
(assert (= "l4bHgji" (str.++ unch123C (str.++ var23C unch223C))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (= (ite (= ch23G var23G) 0 1) sc23G))
(assert (= (ite (= ch23H var23H) 0 1) sc23H))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= sc23G 1))
(assert (<= sc23H 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (<= (str.len var24G) 1))
(assert (<= (str.len var24H) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= (str.++ preG (str.++ stem24 sufG)) (str.++ unch124G (str.++ ch24G unch224G))))
(assert (= (str.++ preH (str.++ stem24 sufH)) (str.++ unch124H (str.++ ch24H unch224H))))
(assert (= "b4rji1" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= "b4rH1a" (str.++ unch124B (str.++ var24B unch224B))))
(assert (= "b4rHzji" (str.++ unch124C (str.++ var24C unch224C))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (= (ite (= ch24G var24G) 0 1) sc24G))
(assert (= (ite (= ch24H var24H) 0 1) sc24H))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= sc24G 1))
(assert (<= sc24H 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (<= (str.len var25G) 1))
(assert (<= (str.len var25H) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= (str.++ preG (str.++ stem25 sufG)) (str.++ unch125G (str.++ ch25G unch225G))))
(assert (= (str.++ preH (str.++ stem25 sufH)) (str.++ unch125H (str.++ ch25H unch225H))))
(assert (= "pHrjX1" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= "pHr21a" (str.++ unch125B (str.++ var25B unch225B))))
(assert (= "pHr2zji" (str.++ unch125C (str.++ var25C unch225C))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (= (ite (= ch25G var25G) 0 1) sc25G))
(assert (= (ite (= ch25H var25H) 0 1) sc25H))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= sc25G 1))
(assert (<= sc25H 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (<= (str.len var26G) 1))
(assert (<= (str.len var26H) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= (str.++ preG (str.++ stem26 sufG)) (str.++ unch126G (str.++ ch26G unch226G))))
(assert (= (str.++ preH (str.++ stem26 sufH)) (str.++ unch126H (str.++ ch26H unch226H))))
(assert (= "porjX1" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= "por21a" (str.++ unch126B (str.++ var26B unch226B))))
(assert (= "por2zji" (str.++ unch126C (str.++ var26C unch226C))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (= (ite (= ch26G var26G) 0 1) sc26G))
(assert (= (ite (= ch26H var26H) 0 1) sc26H))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= sc26G 1))
(assert (<= sc26H 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (<= (str.len var27G) 1))
(assert (<= (str.len var27H) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= (str.++ preG (str.++ stem27 sufG)) (str.++ unch127G (str.++ ch27G unch227G))))
(assert (= (str.++ preH (str.++ stem27 sufH)) (str.++ unch127H (str.++ ch27H unch227H))))
(assert (= "bolj3k" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= "boljHkO" (str.++ unch127B (str.++ var27B unch227B))))
(assert (= "boljHtsjX" (str.++ unch127C (str.++ var27C unch227C))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (= (ite (= ch27G var27G) 0 1) sc27G))
(assert (= (ite (= ch27H var27H) 0 1) sc27H))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= sc27G 1))
(assert (<= sc27H 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (<= (str.len var28G) 1))
(assert (<= (str.len var28H) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= (str.++ preG (str.++ stem28 sufG)) (str.++ unch128G (str.++ ch28G unch228G))))
(assert (= (str.++ preH (str.++ stem28 sufH)) (str.++ unch128H (str.++ ch28H unch228H))))
(assert (= "v2rji1" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= "v2ro1a" (str.++ unch128B (str.++ var28B unch228B))))
(assert (= "v2rozji" (str.++ unch128C (str.++ var28C unch228C))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (= (ite (= ch28G var28G) 0 1) sc28G))
(assert (= (ite (= ch28H var28H) 0 1) sc28H))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= sc28G 1))
(assert (<= sc28H 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (<= (str.len var29G) 1))
(assert (<= (str.len var29H) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= (str.++ preG (str.++ stem29 sufG)) (str.++ unch129G (str.++ ch29G unch229G))))
(assert (= (str.++ preH (str.++ stem29 sufH)) (str.++ unch129H (str.++ ch29H unch229H))))
(assert (= "k2nHk" (str.++ unch129A (str.++ var29A unch229A))))
(assert (= "k2nHka" (str.++ unch129B (str.++ var29B unch229B))))
(assert (= "k2nHtsji" (str.++ unch129C (str.++ var29C unch229C))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (= (ite (= ch29G var29G) 0 1) sc29G))
(assert (= (ite (= ch29H var29H) 0 1) sc29H))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= sc29G 1))
(assert (<= sc29H 1))
(assert (<= (str.len var30A) 1))
(assert (<= (str.len var30B) 1))
(assert (<= (str.len var30C) 1))
(assert (<= (str.len var30D) 1))
(assert (<= (str.len var30E) 1))
(assert (<= (str.len var30F) 1))
(assert (<= (str.len var30G) 1))
(assert (<= (str.len var30H) 1))
(assert (= (str.++ preA (str.++ stem30 sufA)) (str.++ unch130A (str.++ ch30A unch230A))))
(assert (= (str.++ preB (str.++ stem30 sufB)) (str.++ unch130B (str.++ ch30B unch230B))))
(assert (= (str.++ preC (str.++ stem30 sufC)) (str.++ unch130C (str.++ ch30C unch230C))))
(assert (= (str.++ preD (str.++ stem30 sufD)) (str.++ unch130D (str.++ ch30D unch230D))))
(assert (= (str.++ preE (str.++ stem30 sufE)) (str.++ unch130E (str.++ ch30E unch230E))))
(assert (= (str.++ preF (str.++ stem30 sufF)) (str.++ unch130F (str.++ ch30F unch230F))))
(assert (= (str.++ preG (str.++ stem30 sufG)) (str.++ unch130G (str.++ ch30G unch230G))))
(assert (= (str.++ preH (str.++ stem30 sufH)) (str.++ unch130H (str.++ ch30H unch230H))))
(assert (= "p2tjik" (str.++ unch130A (str.++ var30A unch230A))))
(assert (= "pot2ka" (str.++ unch130B (str.++ var30B unch230B))))
(assert (= "pot2tsji" (str.++ unch130C (str.++ var30C unch230C))))
(assert (= (str.len stem30) l30))
(assert (= (ite (= ch30A var30A) 0 1) sc30A))
(assert (= (ite (= ch30B var30B) 0 1) sc30B))
(assert (= (ite (= ch30C var30C) 0 1) sc30C))
(assert (= (ite (= ch30D var30D) 0 1) sc30D))
(assert (= (ite (= ch30E var30E) 0 1) sc30E))
(assert (= (ite (= ch30F var30F) 0 1) sc30F))
(assert (= (ite (= ch30G var30G) 0 1) sc30G))
(assert (= (ite (= ch30H var30H) 0 1) sc30H))
(assert (<= sc30A 1))
(assert (<= sc30B 1))
(assert (<= sc30C 1))
(assert (<= sc30D 1))
(assert (<= sc30E 1))
(assert (<= sc30F 1))
(assert (<= sc30G 1))
(assert (<= sc30H 1))
(assert (<= (str.len var31A) 1))
(assert (<= (str.len var31B) 1))
(assert (<= (str.len var31C) 1))
(assert (<= (str.len var31D) 1))
(assert (<= (str.len var31E) 1))
(assert (<= (str.len var31F) 1))
(assert (<= (str.len var31G) 1))
(assert (<= (str.len var31H) 1))
(assert (= (str.++ preA (str.++ stem31 sufA)) (str.++ unch131A (str.++ ch31A unch231A))))
(assert (= (str.++ preB (str.++ stem31 sufB)) (str.++ unch131B (str.++ ch31B unch231B))))
(assert (= (str.++ preC (str.++ stem31 sufC)) (str.++ unch131C (str.++ ch31C unch231C))))
(assert (= (str.++ preD (str.++ stem31 sufD)) (str.++ unch131D (str.++ ch31D unch231D))))
(assert (= (str.++ preE (str.++ stem31 sufE)) (str.++ unch131E (str.++ ch31E unch231E))))
(assert (= (str.++ preF (str.++ stem31 sufF)) (str.++ unch131F (str.++ ch31F unch231F))))
(assert (= (str.++ preG (str.++ stem31 sufG)) (str.++ unch131G (str.++ ch31G unch231G))))
(assert (= (str.++ preH (str.++ stem31 sufH)) (str.++ unch131H (str.++ ch31H unch231H))))
(assert (= "tjXk" (str.++ unch131A (str.++ var31A unch231A))))
(assert (= "t2ka" (str.++ unch131B (str.++ var31B unch231B))))
(assert (= "t2tsji" (str.++ unch131C (str.++ var31C unch231C))))
(assert (= (str.len stem31) l31))
(assert (= (ite (= ch31A var31A) 0 1) sc31A))
(assert (= (ite (= ch31B var31B) 0 1) sc31B))
(assert (= (ite (= ch31C var31C) 0 1) sc31C))
(assert (= (ite (= ch31D var31D) 0 1) sc31D))
(assert (= (ite (= ch31E var31E) 0 1) sc31E))
(assert (= (ite (= ch31F var31F) 0 1) sc31F))
(assert (= (ite (= ch31G var31G) 0 1) sc31G))
(assert (= (ite (= ch31H var31H) 0 1) sc31H))
(assert (<= sc31A 1))
(assert (<= sc31B 1))
(assert (<= sc31C 1))
(assert (<= sc31D 1))
(assert (<= sc31E 1))
(assert (<= sc31F 1))
(assert (<= sc31G 1))
(assert (<= sc31H 1))
(assert (<= (str.len var32A) 1))
(assert (<= (str.len var32B) 1))
(assert (<= (str.len var32C) 1))
(assert (<= (str.len var32D) 1))
(assert (<= (str.len var32E) 1))
(assert (<= (str.len var32F) 1))
(assert (<= (str.len var32G) 1))
(assert (<= (str.len var32H) 1))
(assert (= (str.++ preA (str.++ stem32 sufA)) (str.++ unch132A (str.++ ch32A unch232A))))
(assert (= (str.++ preB (str.++ stem32 sufB)) (str.++ unch132B (str.++ ch32B unch232B))))
(assert (= (str.++ preC (str.++ stem32 sufC)) (str.++ unch132C (str.++ ch32C unch232C))))
(assert (= (str.++ preD (str.++ stem32 sufD)) (str.++ unch132D (str.++ ch32D unch232D))))
(assert (= (str.++ preE (str.++ stem32 sufE)) (str.++ unch132E (str.++ ch32E unch232E))))
(assert (= (str.++ preF (str.++ stem32 sufF)) (str.++ unch132F (str.++ ch32F unch232F))))
(assert (= (str.++ preG (str.++ stem32 sufG)) (str.++ unch132G (str.++ ch32G unch232G))))
(assert (= (str.++ preH (str.++ stem32 sufH)) (str.++ unch132H (str.++ ch32H unch232H))))
(assert (= "kjXl" (str.++ unch132A (str.++ var32A unch232A))))
(assert (= "kolO" (str.++ unch132B (str.++ var32B unch232B))))
(assert (= "koljX" (str.++ unch132C (str.++ var32C unch232C))))
(assert (= (str.len stem32) l32))
(assert (= (ite (= ch32A var32A) 0 1) sc32A))
(assert (= (ite (= ch32B var32B) 0 1) sc32B))
(assert (= (ite (= ch32C var32C) 0 1) sc32C))
(assert (= (ite (= ch32D var32D) 0 1) sc32D))
(assert (= (ite (= ch32E var32E) 0 1) sc32E))
(assert (= (ite (= ch32F var32F) 0 1) sc32F))
(assert (= (ite (= ch32G var32G) 0 1) sc32G))
(assert (= (ite (= ch32H var32H) 0 1) sc32H))
(assert (<= sc32A 1))
(assert (<= sc32B 1))
(assert (<= sc32C 1))
(assert (<= sc32D 1))
(assert (<= sc32E 1))
(assert (<= sc32F 1))
(assert (<= sc32G 1))
(assert (<= sc32H 1))
(assert (<= (str.len var33A) 1))
(assert (<= (str.len var33B) 1))
(assert (<= (str.len var33C) 1))
(assert (<= (str.len var33D) 1))
(assert (<= (str.len var33E) 1))
(assert (<= (str.len var33F) 1))
(assert (<= (str.len var33G) 1))
(assert (<= (str.len var33H) 1))
(assert (= (str.++ preA (str.++ stem33 sufA)) (str.++ unch133A (str.++ ch33A unch233A))))
(assert (= (str.++ preB (str.++ stem33 sufB)) (str.++ unch133B (str.++ ch33B unch233B))))
(assert (= (str.++ preC (str.++ stem33 sufC)) (str.++ unch133C (str.++ ch33C unch233C))))
(assert (= (str.++ preD (str.++ stem33 sufD)) (str.++ unch133D (str.++ ch33D unch233D))))
(assert (= (str.++ preE (str.++ stem33 sufE)) (str.++ unch133E (str.++ ch33E unch233E))))
(assert (= (str.++ preF (str.++ stem33 sufF)) (str.++ unch133F (str.++ ch33F unch233F))))
(assert (= (str.++ preG (str.++ stem33 sufG)) (str.++ unch133G (str.++ ch33G unch233G))))
(assert (= (str.++ preH (str.++ stem33 sufH)) (str.++ unch133H (str.++ ch33H unch233H))))
(assert (= "kovOlj" (str.++ unch133D (str.++ var33D unch233D))))
(assert (= "kovalj3" (str.++ unch133E (str.++ var33E unch233E))))
(assert (= "koval3" (str.++ unch133F (str.++ var33F unch233F))))
(assert (= (str.len stem33) l33))
(assert (= (ite (= ch33A var33A) 0 1) sc33A))
(assert (= (ite (= ch33B var33B) 0 1) sc33B))
(assert (= (ite (= ch33C var33C) 0 1) sc33C))
(assert (= (ite (= ch33D var33D) 0 1) sc33D))
(assert (= (ite (= ch33E var33E) 0 1) sc33E))
(assert (= (ite (= ch33F var33F) 0 1) sc33F))
(assert (= (ite (= ch33G var33G) 0 1) sc33G))
(assert (= (ite (= ch33H var33H) 0 1) sc33H))
(assert (<= sc33A 1))
(assert (<= sc33B 1))
(assert (<= sc33C 1))
(assert (<= sc33D 1))
(assert (<= sc33E 1))
(assert (<= sc33F 1))
(assert (<= sc33G 1))
(assert (<= sc33H 1))
(assert (<= (str.len var34A) 1))
(assert (<= (str.len var34B) 1))
(assert (<= (str.len var34C) 1))
(assert (<= (str.len var34D) 1))
(assert (<= (str.len var34E) 1))
(assert (<= (str.len var34F) 1))
(assert (<= (str.len var34G) 1))
(assert (<= (str.len var34H) 1))
(assert (= (str.++ preA (str.++ stem34 sufA)) (str.++ unch134A (str.++ ch34A unch234A))))
(assert (= (str.++ preB (str.++ stem34 sufB)) (str.++ unch134B (str.++ ch34B unch234B))))
(assert (= (str.++ preC (str.++ stem34 sufC)) (str.++ unch134C (str.++ ch34C unch234C))))
(assert (= (str.++ preD (str.++ stem34 sufD)) (str.++ unch134D (str.++ ch34D unch234D))))
(assert (= (str.++ preE (str.++ stem34 sufE)) (str.++ unch134E (str.++ ch34E unch234E))))
(assert (= (str.++ preF (str.++ stem34 sufF)) (str.++ unch134F (str.++ ch34F unch234F))))
(assert (= (str.++ preG (str.++ stem34 sufG)) (str.++ unch134G (str.++ ch34G unch234G))))
(assert (= (str.++ preH (str.++ stem34 sufH)) (str.++ unch134H (str.++ ch34H unch234H))))
(assert (= "DmjXlj" (str.++ unch134D (str.++ var34D unch234D))))
(assert (= "Dmjilj3" (str.++ unch134E (str.++ var34E unch234E))))
(assert (= "Dmjil3" (str.++ unch134F (str.++ var34F unch234F))))
(assert (= (str.len stem34) l34))
(assert (= (ite (= ch34A var34A) 0 1) sc34A))
(assert (= (ite (= ch34B var34B) 0 1) sc34B))
(assert (= (ite (= ch34C var34C) 0 1) sc34C))
(assert (= (ite (= ch34D var34D) 0 1) sc34D))
(assert (= (ite (= ch34E var34E) 0 1) sc34E))
(assert (= (ite (= ch34F var34F) 0 1) sc34F))
(assert (= (ite (= ch34G var34G) 0 1) sc34G))
(assert (= (ite (= ch34H var34H) 0 1) sc34H))
(assert (<= sc34A 1))
(assert (<= sc34B 1))
(assert (<= sc34C 1))
(assert (<= sc34D 1))
(assert (<= sc34E 1))
(assert (<= sc34F 1))
(assert (<= sc34G 1))
(assert (<= sc34H 1))
(assert (<= (str.len var35A) 1))
(assert (<= (str.len var35B) 1))
(assert (<= (str.len var35C) 1))
(assert (<= (str.len var35D) 1))
(assert (<= (str.len var35E) 1))
(assert (<= (str.len var35F) 1))
(assert (<= (str.len var35G) 1))
(assert (<= (str.len var35H) 1))
(assert (= (str.++ preA (str.++ stem35 sufA)) (str.++ unch135A (str.++ ch35A unch235A))))
(assert (= (str.++ preB (str.++ stem35 sufB)) (str.++ unch135B (str.++ ch35B unch235B))))
(assert (= (str.++ preC (str.++ stem35 sufC)) (str.++ unch135C (str.++ ch35C unch235C))))
(assert (= (str.++ preD (str.++ stem35 sufD)) (str.++ unch135D (str.++ ch35D unch235D))))
(assert (= (str.++ preE (str.++ stem35 sufE)) (str.++ unch135E (str.++ ch35E unch235E))))
(assert (= (str.++ preF (str.++ stem35 sufF)) (str.++ unch135F (str.++ ch35F unch235F))))
(assert (= (str.++ preG (str.++ stem35 sufG)) (str.++ unch135G (str.++ ch35G unch235G))))
(assert (= (str.++ preH (str.++ stem35 sufH)) (str.++ unch135H (str.++ ch35H unch235H))))
(assert (= "kjrjXlj" (str.++ unch135D (str.++ var35D unch235D))))
(assert (= "kjrjilj3" (str.++ unch135E (str.++ var35E unch235E))))
(assert (= "kjrjil3" (str.++ unch135F (str.++ var35F unch235F))))
(assert (= (str.len stem35) l35))
(assert (= (ite (= ch35A var35A) 0 1) sc35A))
(assert (= (ite (= ch35B var35B) 0 1) sc35B))
(assert (= (ite (= ch35C var35C) 0 1) sc35C))
(assert (= (ite (= ch35D var35D) 0 1) sc35D))
(assert (= (ite (= ch35E var35E) 0 1) sc35E))
(assert (= (ite (= ch35F var35F) 0 1) sc35F))
(assert (= (ite (= ch35G var35G) 0 1) sc35G))
(assert (= (ite (= ch35H var35H) 0 1) sc35H))
(assert (<= sc35A 1))
(assert (<= sc35B 1))
(assert (<= sc35C 1))
(assert (<= sc35D 1))
(assert (<= sc35E 1))
(assert (<= sc35F 1))
(assert (<= sc35G 1))
(assert (<= sc35H 1))
(assert (<= (str.len var36A) 1))
(assert (<= (str.len var36B) 1))
(assert (<= (str.len var36C) 1))
(assert (<= (str.len var36D) 1))
(assert (<= (str.len var36E) 1))
(assert (<= (str.len var36F) 1))
(assert (<= (str.len var36G) 1))
(assert (<= (str.len var36H) 1))
(assert (= (str.++ preA (str.++ stem36 sufA)) (str.++ unch136A (str.++ ch36A unch236A))))
(assert (= (str.++ preB (str.++ stem36 sufB)) (str.++ unch136B (str.++ ch36B unch236B))))
(assert (= (str.++ preC (str.++ stem36 sufC)) (str.++ unch136C (str.++ ch36C unch236C))))
(assert (= (str.++ preD (str.++ stem36 sufD)) (str.++ unch136D (str.++ ch36D unch236D))))
(assert (= (str.++ preE (str.++ stem36 sufE)) (str.++ unch136E (str.++ ch36E unch236E))))
(assert (= (str.++ preF (str.++ stem36 sufF)) (str.++ unch136F (str.++ ch36F unch236F))))
(assert (= (str.++ preG (str.++ stem36 sufG)) (str.++ unch136G (str.++ ch36G unch236G))))
(assert (= (str.++ preH (str.++ stem36 sufH)) (str.++ unch136H (str.++ ch36H unch236H))))
(assert (= "uE3tHlj" (str.++ unch136D (str.++ var36D unch236D))))
(assert (= "uE3tHljH" (str.++ unch136E (str.++ var36E unch236E))))
(assert (= "uE3tHlH" (str.++ unch136F (str.++ var36F unch236F))))
(assert (= (str.len stem36) l36))
(assert (= (ite (= ch36A var36A) 0 1) sc36A))
(assert (= (ite (= ch36B var36B) 0 1) sc36B))
(assert (= (ite (= ch36C var36C) 0 1) sc36C))
(assert (= (ite (= ch36D var36D) 0 1) sc36D))
(assert (= (ite (= ch36E var36E) 0 1) sc36E))
(assert (= (ite (= ch36F var36F) 0 1) sc36F))
(assert (= (ite (= ch36G var36G) 0 1) sc36G))
(assert (= (ite (= ch36H var36H) 0 1) sc36H))
(assert (<= sc36A 1))
(assert (<= sc36B 1))
(assert (<= sc36C 1))
(assert (<= sc36D 1))
(assert (<= sc36E 1))
(assert (<= sc36F 1))
(assert (<= sc36G 1))
(assert (<= sc36H 1))
(assert (<= (str.len var37A) 1))
(assert (<= (str.len var37B) 1))
(assert (<= (str.len var37C) 1))
(assert (<= (str.len var37D) 1))
(assert (<= (str.len var37E) 1))
(assert (<= (str.len var37F) 1))
(assert (<= (str.len var37G) 1))
(assert (<= (str.len var37H) 1))
(assert (= (str.++ preA (str.++ stem37 sufA)) (str.++ unch137A (str.++ ch37A unch237A))))
(assert (= (str.++ preB (str.++ stem37 sufB)) (str.++ unch137B (str.++ ch37B unch237B))))
(assert (= (str.++ preC (str.++ stem37 sufC)) (str.++ unch137C (str.++ ch37C unch237C))))
(assert (= (str.++ preD (str.++ stem37 sufD)) (str.++ unch137D (str.++ ch37D unch237D))))
(assert (= (str.++ preE (str.++ stem37 sufE)) (str.++ unch137E (str.++ ch37E unch237E))))
(assert (= (str.++ preF (str.++ stem37 sufF)) (str.++ unch137F (str.++ ch37F unch237F))))
(assert (= (str.++ preG (str.++ stem37 sufG)) (str.++ unch137G (str.++ ch37G unch237G))))
(assert (= (str.++ preH (str.++ stem37 sufH)) (str.++ unch137H (str.++ ch37H unch237H))))
(assert (= "gr4bjinj" (str.++ unch137D (str.++ var37D unch237D))))
(assert (= "gr4bHnjH" (str.++ unch137E (str.++ var37E unch237E))))
(assert (= "gr4bHnH" (str.++ unch137F (str.++ var37F unch237F))))
(assert (= (str.len stem37) l37))
(assert (= (ite (= ch37A var37A) 0 1) sc37A))
(assert (= (ite (= ch37B var37B) 0 1) sc37B))
(assert (= (ite (= ch37C var37C) 0 1) sc37C))
(assert (= (ite (= ch37D var37D) 0 1) sc37D))
(assert (= (ite (= ch37E var37E) 0 1) sc37E))
(assert (= (ite (= ch37F var37F) 0 1) sc37F))
(assert (= (ite (= ch37G var37G) 0 1) sc37G))
(assert (= (ite (= ch37H var37H) 0 1) sc37H))
(assert (<= sc37A 1))
(assert (<= sc37B 1))
(assert (<= sc37C 1))
(assert (<= sc37D 1))
(assert (<= sc37E 1))
(assert (<= sc37F 1))
(assert (<= sc37G 1))
(assert (<= sc37H 1))
(assert (<= (str.len var38A) 1))
(assert (<= (str.len var38B) 1))
(assert (<= (str.len var38C) 1))
(assert (<= (str.len var38D) 1))
(assert (<= (str.len var38E) 1))
(assert (<= (str.len var38F) 1))
(assert (<= (str.len var38G) 1))
(assert (<= (str.len var38H) 1))
(assert (= (str.++ preA (str.++ stem38 sufA)) (str.++ unch138A (str.++ ch38A unch238A))))
(assert (= (str.++ preB (str.++ stem38 sufB)) (str.++ unch138B (str.++ ch38B unch238B))))
(assert (= (str.++ preC (str.++ stem38 sufC)) (str.++ unch138C (str.++ ch38C unch238C))))
(assert (= (str.++ preD (str.++ stem38 sufD)) (str.++ unch138D (str.++ ch38D unch238D))))
(assert (= (str.++ preE (str.++ stem38 sufE)) (str.++ unch138E (str.++ ch38E unch238E))))
(assert (= (str.++ preF (str.++ stem38 sufF)) (str.++ unch138F (str.++ ch38F unch238F))))
(assert (= (str.++ preG (str.++ stem38 sufG)) (str.++ unch138G (str.++ ch38G unch238G))))
(assert (= (str.++ preH (str.++ stem38 sufH)) (str.++ unch138H (str.++ ch38H unch238H))))
(assert (= "2lHnj" (str.++ unch138D (str.++ var38D unch238D))))
(assert (= "2lHnjH" (str.++ unch138E (str.++ var38E unch238E))))
(assert (= "2lHnH" (str.++ unch138F (str.++ var38F unch238F))))
(assert (= (str.len stem38) l38))
(assert (= (ite (= ch38A var38A) 0 1) sc38A))
(assert (= (ite (= ch38B var38B) 0 1) sc38B))
(assert (= (ite (= ch38C var38C) 0 1) sc38C))
(assert (= (ite (= ch38D var38D) 0 1) sc38D))
(assert (= (ite (= ch38E var38E) 0 1) sc38E))
(assert (= (ite (= ch38F var38F) 0 1) sc38F))
(assert (= (ite (= ch38G var38G) 0 1) sc38G))
(assert (= (ite (= ch38H var38H) 0 1) sc38H))
(assert (<= sc38A 1))
(assert (<= sc38B 1))
(assert (<= sc38C 1))
(assert (<= sc38D 1))
(assert (<= sc38E 1))
(assert (<= sc38F 1))
(assert (<= sc38G 1))
(assert (<= sc38H 1))
(assert (<= (str.len var39A) 1))
(assert (<= (str.len var39B) 1))
(assert (<= (str.len var39C) 1))
(assert (<= (str.len var39D) 1))
(assert (<= (str.len var39E) 1))
(assert (<= (str.len var39F) 1))
(assert (<= (str.len var39G) 1))
(assert (<= (str.len var39H) 1))
(assert (= (str.++ preA (str.++ stem39 sufA)) (str.++ unch139A (str.++ ch39A unch239A))))
(assert (= (str.++ preB (str.++ stem39 sufB)) (str.++ unch139B (str.++ ch39B unch239B))))
(assert (= (str.++ preC (str.++ stem39 sufC)) (str.++ unch139C (str.++ ch39C unch239C))))
(assert (= (str.++ preD (str.++ stem39 sufD)) (str.++ unch139D (str.++ ch39D unch239D))))
(assert (= (str.++ preE (str.++ stem39 sufE)) (str.++ unch139E (str.++ ch39E unch239E))))
(assert (= (str.++ preF (str.++ stem39 sufF)) (str.++ unch139F (str.++ ch39F unch239F))))
(assert (= (str.++ preG (str.++ stem39 sufG)) (str.++ unch139G (str.++ ch39G unch239G))))
(assert (= (str.++ preH (str.++ stem39 sufH)) (str.++ unch139H (str.++ ch39H unch239H))))
(assert (= "jaEjmjXnj" (str.++ unch139D (str.++ var39D unch239D))))
(assert (= "jaEm4njH" (str.++ unch139E (str.++ var39E unch239E))))
(assert (= "jaEm4nH" (str.++ unch139F (str.++ var39F unch239F))))
(assert (= (str.len stem39) l39))
(assert (= (ite (= ch39A var39A) 0 1) sc39A))
(assert (= (ite (= ch39B var39B) 0 1) sc39B))
(assert (= (ite (= ch39C var39C) 0 1) sc39C))
(assert (= (ite (= ch39D var39D) 0 1) sc39D))
(assert (= (ite (= ch39E var39E) 0 1) sc39E))
(assert (= (ite (= ch39F var39F) 0 1) sc39F))
(assert (= (ite (= ch39G var39G) 0 1) sc39G))
(assert (= (ite (= ch39H var39H) 0 1) sc39H))
(assert (<= sc39A 1))
(assert (<= sc39B 1))
(assert (<= sc39C 1))
(assert (<= sc39D 1))
(assert (<= sc39E 1))
(assert (<= sc39F 1))
(assert (<= sc39G 1))
(assert (<= sc39H 1))
(assert (<= (str.len var40A) 1))
(assert (<= (str.len var40B) 1))
(assert (<= (str.len var40C) 1))
(assert (<= (str.len var40D) 1))
(assert (<= (str.len var40E) 1))
(assert (<= (str.len var40F) 1))
(assert (<= (str.len var40G) 1))
(assert (<= (str.len var40H) 1))
(assert (= (str.++ preA (str.++ stem40 sufA)) (str.++ unch140A (str.++ ch40A unch240A))))
(assert (= (str.++ preB (str.++ stem40 sufB)) (str.++ unch140B (str.++ ch40B unch240B))))
(assert (= (str.++ preC (str.++ stem40 sufC)) (str.++ unch140C (str.++ ch40C unch240C))))
(assert (= (str.++ preD (str.++ stem40 sufD)) (str.++ unch140D (str.++ ch40D unch240D))))
(assert (= (str.++ preE (str.++ stem40 sufE)) (str.++ unch140E (str.++ ch40E unch240E))))
(assert (= (str.++ preF (str.++ stem40 sufF)) (str.++ unch140F (str.++ ch40F unch240F))))
(assert (= (str.++ preG (str.++ stem40 sufG)) (str.++ unch140G (str.++ ch40G unch240G))))
(assert (= (str.++ preH (str.++ stem40 sufH)) (str.++ unch140H (str.++ ch40H unch240H))))
(assert (= "jOsjinj" (str.++ unch140D (str.++ var40D unch240D))))
(assert (= "jOsHnjH" (str.++ unch140E (str.++ var40E unch240E))))
(assert (= "jOsHnH" (str.++ unch140F (str.++ var40F unch240F))))
(assert (= (str.len stem40) l40))
(assert (= (ite (= ch40A var40A) 0 1) sc40A))
(assert (= (ite (= ch40B var40B) 0 1) sc40B))
(assert (= (ite (= ch40C var40C) 0 1) sc40C))
(assert (= (ite (= ch40D var40D) 0 1) sc40D))
(assert (= (ite (= ch40E var40E) 0 1) sc40E))
(assert (= (ite (= ch40F var40F) 0 1) sc40F))
(assert (= (ite (= ch40G var40G) 0 1) sc40G))
(assert (= (ite (= ch40H var40H) 0 1) sc40H))
(assert (<= sc40A 1))
(assert (<= sc40B 1))
(assert (<= sc40C 1))
(assert (<= sc40D 1))
(assert (<= sc40E 1))
(assert (<= sc40F 1))
(assert (<= sc40G 1))
(assert (<= sc40H 1))
(assert (<= (str.len var41A) 1))
(assert (<= (str.len var41B) 1))
(assert (<= (str.len var41C) 1))
(assert (<= (str.len var41D) 1))
(assert (<= (str.len var41E) 1))
(assert (<= (str.len var41F) 1))
(assert (<= (str.len var41G) 1))
(assert (<= (str.len var41H) 1))
(assert (= (str.++ preA (str.++ stem41 sufA)) (str.++ unch141A (str.++ ch41A unch241A))))
(assert (= (str.++ preB (str.++ stem41 sufB)) (str.++ unch141B (str.++ ch41B unch241B))))
(assert (= (str.++ preC (str.++ stem41 sufC)) (str.++ unch141C (str.++ ch41C unch241C))))
(assert (= (str.++ preD (str.++ stem41 sufD)) (str.++ unch141D (str.++ ch41D unch241D))))
(assert (= (str.++ preE (str.++ stem41 sufE)) (str.++ unch141E (str.++ ch41E unch241E))))
(assert (= (str.++ preF (str.++ stem41 sufF)) (str.++ unch141F (str.++ ch41F unch241F))))
(assert (= (str.++ preG (str.++ stem41 sufG)) (str.++ unch141G (str.++ ch41G unch241G))))
(assert (= (str.++ preH (str.++ stem41 sufH)) (str.++ unch141H (str.++ ch41H unch241H))))
(assert (= "zj3kj" (str.++ unch141D (str.++ var41D unch241D))))
(assert (= "zj3kjH" (str.++ unch141E (str.++ var41E unch241E))))
(assert (= "zj3tH" (str.++ unch141F (str.++ var41F unch241F))))
(assert (= (str.len stem41) l41))
(assert (= (ite (= ch41A var41A) 0 1) sc41A))
(assert (= (ite (= ch41B var41B) 0 1) sc41B))
(assert (= (ite (= ch41C var41C) 0 1) sc41C))
(assert (= (ite (= ch41D var41D) 0 1) sc41D))
(assert (= (ite (= ch41E var41E) 0 1) sc41E))
(assert (= (ite (= ch41F var41F) 0 1) sc41F))
(assert (= (ite (= ch41G var41G) 0 1) sc41G))
(assert (= (ite (= ch41H var41H) 0 1) sc41H))
(assert (<= sc41A 1))
(assert (<= sc41B 1))
(assert (<= sc41C 1))
(assert (<= sc41D 1))
(assert (<= sc41E 1))
(assert (<= sc41F 1))
(assert (<= sc41G 1))
(assert (<= sc41H 1))
(assert (<= (str.len var42A) 1))
(assert (<= (str.len var42B) 1))
(assert (<= (str.len var42C) 1))
(assert (<= (str.len var42D) 1))
(assert (<= (str.len var42E) 1))
(assert (<= (str.len var42F) 1))
(assert (<= (str.len var42G) 1))
(assert (<= (str.len var42H) 1))
(assert (= (str.++ preA (str.++ stem42 sufA)) (str.++ unch142A (str.++ ch42A unch242A))))
(assert (= (str.++ preB (str.++ stem42 sufB)) (str.++ unch142B (str.++ ch42B unch242B))))
(assert (= (str.++ preC (str.++ stem42 sufC)) (str.++ unch142C (str.++ ch42C unch242C))))
(assert (= (str.++ preD (str.++ stem42 sufD)) (str.++ unch142D (str.++ ch42D unch242D))))
(assert (= (str.++ preE (str.++ stem42 sufE)) (str.++ unch142E (str.++ ch42E unch242E))))
(assert (= (str.++ preF (str.++ stem42 sufF)) (str.++ unch142F (str.++ ch42F unch242F))))
(assert (= (str.++ preG (str.++ stem42 sufG)) (str.++ unch142G (str.++ ch42G unch242G))))
(assert (= (str.++ preH (str.++ stem42 sufH)) (str.++ unch142H (str.++ ch42H unch242H))))
(assert (= "mOsjkj" (str.++ unch142G (str.++ var42G unch242G))))
(assert (= "mOstH" (str.++ unch142H (str.++ var42H unch242H))))
(assert (= (str.len stem42) l42))
(assert (= (ite (= ch42A var42A) 0 1) sc42A))
(assert (= (ite (= ch42B var42B) 0 1) sc42B))
(assert (= (ite (= ch42C var42C) 0 1) sc42C))
(assert (= (ite (= ch42D var42D) 0 1) sc42D))
(assert (= (ite (= ch42E var42E) 0 1) sc42E))
(assert (= (ite (= ch42F var42F) 0 1) sc42F))
(assert (= (ite (= ch42G var42G) 0 1) sc42G))
(assert (= (ite (= ch42H var42H) 0 1) sc42H))
(assert (<= sc42A 1))
(assert (<= sc42B 1))
(assert (<= sc42C 1))
(assert (<= sc42D 1))
(assert (<= sc42E 1))
(assert (<= sc42F 1))
(assert (<= sc42G 1))
(assert (<= sc42H 1))
(assert (<= (str.len var43A) 1))
(assert (<= (str.len var43B) 1))
(assert (<= (str.len var43C) 1))
(assert (<= (str.len var43D) 1))
(assert (<= (str.len var43E) 1))
(assert (<= (str.len var43F) 1))
(assert (<= (str.len var43G) 1))
(assert (<= (str.len var43H) 1))
(assert (= (str.++ preA (str.++ stem43 sufA)) (str.++ unch143A (str.++ ch43A unch243A))))
(assert (= (str.++ preB (str.++ stem43 sufB)) (str.++ unch143B (str.++ ch43B unch243B))))
(assert (= (str.++ preC (str.++ stem43 sufC)) (str.++ unch143C (str.++ ch43C unch243C))))
(assert (= (str.++ preD (str.++ stem43 sufD)) (str.++ unch143D (str.++ ch43D unch243D))))
(assert (= (str.++ preE (str.++ stem43 sufE)) (str.++ unch143E (str.++ ch43E unch243E))))
(assert (= (str.++ preF (str.++ stem43 sufF)) (str.++ unch143F (str.++ ch43F unch243F))))
(assert (= (str.++ preG (str.++ stem43 sufG)) (str.++ unch143G (str.++ ch43G unch243G))))
(assert (= (str.++ preH (str.++ stem43 sufH)) (str.++ unch143H (str.++ ch43H unch243H))))
(assert (= "sjmjXrjkj" (str.++ unch143G (str.++ var43G unch243G))))
(assert (= "sm4rtH" (str.++ unch143H (str.++ var43H unch243H))))
(assert (= (str.len stem43) l43))
(assert (= (ite (= ch43A var43A) 0 1) sc43A))
(assert (= (ite (= ch43B var43B) 0 1) sc43B))
(assert (= (ite (= ch43C var43C) 0 1) sc43C))
(assert (= (ite (= ch43D var43D) 0 1) sc43D))
(assert (= (ite (= ch43E var43E) 0 1) sc43E))
(assert (= (ite (= ch43F var43F) 0 1) sc43F))
(assert (= (ite (= ch43G var43G) 0 1) sc43G))
(assert (= (ite (= ch43H var43H) 0 1) sc43H))
(assert (<= sc43A 1))
(assert (<= sc43B 1))
(assert (<= sc43C 1))
(assert (<= sc43D 1))
(assert (<= sc43E 1))
(assert (<= sc43F 1))
(assert (<= sc43G 1))
(assert (<= sc43H 1))
(assert (<= (str.len var44A) 1))
(assert (<= (str.len var44B) 1))
(assert (<= (str.len var44C) 1))
(assert (<= (str.len var44D) 1))
(assert (<= (str.len var44E) 1))
(assert (<= (str.len var44F) 1))
(assert (<= (str.len var44G) 1))
(assert (<= (str.len var44H) 1))
(assert (= (str.++ preA (str.++ stem44 sufA)) (str.++ unch144A (str.++ ch44A unch244A))))
(assert (= (str.++ preB (str.++ stem44 sufB)) (str.++ unch144B (str.++ ch44B unch244B))))
(assert (= (str.++ preC (str.++ stem44 sufC)) (str.++ unch144C (str.++ ch44C unch244C))))
(assert (= (str.++ preD (str.++ stem44 sufD)) (str.++ unch144D (str.++ ch44D unch244D))))
(assert (= (str.++ preE (str.++ stem44 sufE)) (str.++ unch144E (str.++ ch44E unch244E))))
(assert (= (str.++ preF (str.++ stem44 sufF)) (str.++ unch144F (str.++ ch44F unch244F))))
(assert (= (str.++ preG (str.++ stem44 sufG)) (str.++ unch144G (str.++ ch44G unch244G))))
(assert (= (str.++ preH (str.++ stem44 sufH)) (str.++ unch144H (str.++ ch44H unch244H))))
(assert (= "vjXsjkj" (str.++ unch144G (str.++ var44G unch244G))))
(assert (= "vjXstH" (str.++ unch144H (str.++ var44H unch244H))))
(assert (= (str.len stem44) l44))
(assert (= (ite (= ch44A var44A) 0 1) sc44A))
(assert (= (ite (= ch44B var44B) 0 1) sc44B))
(assert (= (ite (= ch44C var44C) 0 1) sc44C))
(assert (= (ite (= ch44D var44D) 0 1) sc44D))
(assert (= (ite (= ch44E var44E) 0 1) sc44E))
(assert (= (ite (= ch44F var44F) 0 1) sc44F))
(assert (= (ite (= ch44G var44G) 0 1) sc44G))
(assert (= (ite (= ch44H var44H) 0 1) sc44H))
(assert (<= sc44A 1))
(assert (<= sc44B 1))
(assert (<= sc44C 1))
(assert (<= sc44D 1))
(assert (<= sc44E 1))
(assert (<= sc44F 1))
(assert (<= sc44G 1))
(assert (<= sc44H 1))
(assert (<= (str.len var45A) 1))
(assert (<= (str.len var45B) 1))
(assert (<= (str.len var45C) 1))
(assert (<= (str.len var45D) 1))
(assert (<= (str.len var45E) 1))
(assert (<= (str.len var45F) 1))
(assert (<= (str.len var45G) 1))
(assert (<= (str.len var45H) 1))
(assert (= (str.++ preA (str.++ stem45 sufA)) (str.++ unch145A (str.++ ch45A unch245A))))
(assert (= (str.++ preB (str.++ stem45 sufB)) (str.++ unch145B (str.++ ch45B unch245B))))
(assert (= (str.++ preC (str.++ stem45 sufC)) (str.++ unch145C (str.++ ch45C unch245C))))
(assert (= (str.++ preD (str.++ stem45 sufD)) (str.++ unch145D (str.++ ch45D unch245D))))
(assert (= (str.++ preE (str.++ stem45 sufE)) (str.++ unch145E (str.++ ch45E unch245E))))
(assert (= (str.++ preF (str.++ stem45 sufF)) (str.++ unch145F (str.++ ch45F unch245F))))
(assert (= (str.++ preG (str.++ stem45 sufG)) (str.++ unch145G (str.++ ch45G unch245G))))
(assert (= (str.++ preH (str.++ stem45 sufH)) (str.++ unch145H (str.++ ch45H unch245H))))
(assert (= "rOgjisjkj" (str.++ unch145G (str.++ var45G unch245G))))
(assert (= "rOdostH" (str.++ unch145H (str.++ var45H unch245H))))
(assert (= (str.len stem45) l45))
(assert (= (ite (= ch45A var45A) 0 1) sc45A))
(assert (= (ite (= ch45B var45B) 0 1) sc45B))
(assert (= (ite (= ch45C var45C) 0 1) sc45C))
(assert (= (ite (= ch45D var45D) 0 1) sc45D))
(assert (= (ite (= ch45E var45E) 0 1) sc45E))
(assert (= (ite (= ch45F var45F) 0 1) sc45F))
(assert (= (ite (= ch45G var45G) 0 1) sc45G))
(assert (= (ite (= ch45H var45H) 0 1) sc45H))
(assert (<= sc45A 1))
(assert (<= sc45B 1))
(assert (<= sc45C 1))
(assert (<= sc45D 1))
(assert (<= sc45E 1))
(assert (<= sc45F 1))
(assert (<= sc45G 1))
(assert (<= sc45H 1))
(assert (<= (str.len var46A) 1))
(assert (<= (str.len var46B) 1))
(assert (<= (str.len var46C) 1))
(assert (<= (str.len var46D) 1))
(assert (<= (str.len var46E) 1))
(assert (<= (str.len var46F) 1))
(assert (<= (str.len var46G) 1))
(assert (<= (str.len var46H) 1))
(assert (= (str.++ preA (str.++ stem46 sufA)) (str.++ unch146A (str.++ ch46A unch246A))))
(assert (= (str.++ preB (str.++ stem46 sufB)) (str.++ unch146B (str.++ ch46B unch246B))))
(assert (= (str.++ preC (str.++ stem46 sufC)) (str.++ unch146C (str.++ ch46C unch246C))))
(assert (= (str.++ preD (str.++ stem46 sufD)) (str.++ unch146D (str.++ ch46D unch246D))))
(assert (= (str.++ preE (str.++ stem46 sufE)) (str.++ unch146E (str.++ ch46E unch246E))))
(assert (= (str.++ preF (str.++ stem46 sufF)) (str.++ unch146F (str.++ ch46F unch246F))))
(assert (= (str.++ preG (str.++ stem46 sufG)) (str.++ unch146G (str.++ ch46G unch246G))))
(assert (= (str.++ preH (str.++ stem46 sufH)) (str.++ unch146H (str.++ ch46H unch246H))))
(assert (= "sjXlj" (str.++ unch146G (str.++ var46G unch246G))))
(assert (= "s2lH" (str.++ unch146H (str.++ var46H unch246H))))
(assert (= (str.len stem46) l46))
(assert (= (ite (= ch46A var46A) 0 1) sc46A))
(assert (= (ite (= ch46B var46B) 0 1) sc46B))
(assert (= (ite (= ch46C var46C) 0 1) sc46C))
(assert (= (ite (= ch46D var46D) 0 1) sc46D))
(assert (= (ite (= ch46E var46E) 0 1) sc46E))
(assert (= (ite (= ch46F var46F) 0 1) sc46F))
(assert (= (ite (= ch46G var46G) 0 1) sc46G))
(assert (= (ite (= ch46H var46H) 0 1) sc46H))
(assert (<= sc46A 1))
(assert (<= sc46B 1))
(assert (<= sc46C 1))
(assert (<= sc46D 1))
(assert (<= sc46E 1))
(assert (<= sc46F 1))
(assert (<= sc46G 1))
(assert (<= sc46H 1))
(assert (<= (str.len var47A) 1))
(assert (<= (str.len var47B) 1))
(assert (<= (str.len var47C) 1))
(assert (<= (str.len var47D) 1))
(assert (<= (str.len var47E) 1))
(assert (<= (str.len var47F) 1))
(assert (<= (str.len var47G) 1))
(assert (<= (str.len var47H) 1))
(assert (= (str.++ preA (str.++ stem47 sufA)) (str.++ unch147A (str.++ ch47A unch247A))))
(assert (= (str.++ preB (str.++ stem47 sufB)) (str.++ unch147B (str.++ ch47B unch247B))))
(assert (= (str.++ preC (str.++ stem47 sufC)) (str.++ unch147C (str.++ ch47C unch247C))))
(assert (= (str.++ preD (str.++ stem47 sufD)) (str.++ unch147D (str.++ ch47D unch247D))))
(assert (= (str.++ preE (str.++ stem47 sufE)) (str.++ unch147E (str.++ ch47E unch247E))))
(assert (= (str.++ preF (str.++ stem47 sufF)) (str.++ unch147F (str.++ ch47F unch247F))))
(assert (= (str.++ preG (str.++ stem47 sufG)) (str.++ unch147G (str.++ ch47G unch247G))))
(assert (= (str.++ preH (str.++ stem47 sufH)) (str.++ unch147H (str.++ ch47H unch247H))))
(assert (= "p2Bjisjkj" (str.++ unch147G (str.++ var47G unch247G))))
(assert (= "p2BHstH" (str.++ unch147H (str.++ var47H unch247H))))
(assert (= (str.len stem47) l47))
(assert (= (ite (= ch47A var47A) 0 1) sc47A))
(assert (= (ite (= ch47B var47B) 0 1) sc47B))
(assert (= (ite (= ch47C var47C) 0 1) sc47C))
(assert (= (ite (= ch47D var47D) 0 1) sc47D))
(assert (= (ite (= ch47E var47E) 0 1) sc47E))
(assert (= (ite (= ch47F var47F) 0 1) sc47F))
(assert (= (ite (= ch47G var47G) 0 1) sc47G))
(assert (= (ite (= ch47H var47H) 0 1) sc47H))
(assert (<= sc47A 1))
(assert (<= sc47B 1))
(assert (<= sc47C 1))
(assert (<= sc47D 1))
(assert (<= sc47E 1))
(assert (<= sc47F 1))
(assert (<= sc47G 1))
(assert (<= sc47H 1))
(assert (<= (str.len var48A) 1))
(assert (<= (str.len var48B) 1))
(assert (<= (str.len var48C) 1))
(assert (<= (str.len var48D) 1))
(assert (<= (str.len var48E) 1))
(assert (<= (str.len var48F) 1))
(assert (<= (str.len var48G) 1))
(assert (<= (str.len var48H) 1))
(assert (= (str.++ preA (str.++ stem48 sufA)) (str.++ unch148A (str.++ ch48A unch248A))))
(assert (= (str.++ preB (str.++ stem48 sufB)) (str.++ unch148B (str.++ ch48B unch248B))))
(assert (= (str.++ preC (str.++ stem48 sufC)) (str.++ unch148C (str.++ ch48C unch248C))))
(assert (= (str.++ preD (str.++ stem48 sufD)) (str.++ unch148D (str.++ ch48D unch248D))))
(assert (= (str.++ preE (str.++ stem48 sufE)) (str.++ unch148E (str.++ ch48E unch248E))))
(assert (= (str.++ preF (str.++ stem48 sufF)) (str.++ unch148F (str.++ ch48F unch248F))))
(assert (= (str.++ preG (str.++ stem48 sufG)) (str.++ unch148G (str.++ ch48G unch248G))))
(assert (= (str.++ preH (str.++ stem48 sufH)) (str.++ unch148H (str.++ ch48H unch248H))))
(assert (= "zOmjikj" (str.++ unch148G (str.++ var48G unch248G))))
(assert (= "zOmHtH" (str.++ unch148H (str.++ var48H unch248H))))
(assert (= (str.len stem48) l48))
(assert (= (ite (= ch48A var48A) 0 1) sc48A))
(assert (= (ite (= ch48B var48B) 0 1) sc48B))
(assert (= (ite (= ch48C var48C) 0 1) sc48C))
(assert (= (ite (= ch48D var48D) 0 1) sc48D))
(assert (= (ite (= ch48E var48E) 0 1) sc48E))
(assert (= (ite (= ch48F var48F) 0 1) sc48F))
(assert (= (ite (= ch48G var48G) 0 1) sc48G))
(assert (= (ite (= ch48H var48H) 0 1) sc48H))
(assert (<= sc48A 1))
(assert (<= sc48B 1))
(assert (<= sc48C 1))
(assert (<= sc48D 1))
(assert (<= sc48E 1))
(assert (<= sc48F 1))
(assert (<= sc48G 1))
(assert (<= sc48H 1))
(assert (<= (str.len var49A) 1))
(assert (<= (str.len var49B) 1))
(assert (<= (str.len var49C) 1))
(assert (<= (str.len var49D) 1))
(assert (<= (str.len var49E) 1))
(assert (<= (str.len var49F) 1))
(assert (<= (str.len var49G) 1))
(assert (<= (str.len var49H) 1))
(assert (= (str.++ preA (str.++ stem49 sufA)) (str.++ unch149A (str.++ ch49A unch249A))))
(assert (= (str.++ preB (str.++ stem49 sufB)) (str.++ unch149B (str.++ ch49B unch249B))))
(assert (= (str.++ preC (str.++ stem49 sufC)) (str.++ unch149C (str.++ ch49C unch249C))))
(assert (= (str.++ preD (str.++ stem49 sufD)) (str.++ unch149D (str.++ ch49D unch249D))))
(assert (= (str.++ preE (str.++ stem49 sufE)) (str.++ unch149E (str.++ ch49E unch249E))))
(assert (= (str.++ preF (str.++ stem49 sufF)) (str.++ unch149F (str.++ ch49F unch249F))))
(assert (= (str.++ preG (str.++ stem49 sufG)) (str.++ unch149G (str.++ ch49G unch249G))))
(assert (= (str.++ preH (str.++ stem49 sufH)) (str.++ unch149H (str.++ ch49H unch249H))))
(assert (= "skOtHrjkj" (str.++ unch149G (str.++ var49G unch249G))))
(assert (= "skOtHrtH" (str.++ unch149H (str.++ var49H unch249H))))
(assert (= (str.len stem49) l49))
(assert (= (ite (= ch49A var49A) 0 1) sc49A))
(assert (= (ite (= ch49B var49B) 0 1) sc49B))
(assert (= (ite (= ch49C var49C) 0 1) sc49C))
(assert (= (ite (= ch49D var49D) 0 1) sc49D))
(assert (= (ite (= ch49E var49E) 0 1) sc49E))
(assert (= (ite (= ch49F var49F) 0 1) sc49F))
(assert (= (ite (= ch49G var49G) 0 1) sc49G))
(assert (= (ite (= ch49H var49H) 0 1) sc49H))
(assert (<= sc49A 1))
(assert (<= sc49B 1))
(assert (<= sc49C 1))
(assert (<= sc49D 1))
(assert (<= sc49E 1))
(assert (<= sc49F 1))
(assert (<= sc49G 1))
(assert (<= sc49H 1))
(assert (<= (str.len var50A) 1))
(assert (<= (str.len var50B) 1))
(assert (<= (str.len var50C) 1))
(assert (<= (str.len var50D) 1))
(assert (<= (str.len var50E) 1))
(assert (<= (str.len var50F) 1))
(assert (<= (str.len var50G) 1))
(assert (<= (str.len var50H) 1))
(assert (= (str.++ preA (str.++ stem50 sufA)) (str.++ unch150A (str.++ ch50A unch250A))))
(assert (= (str.++ preB (str.++ stem50 sufB)) (str.++ unch150B (str.++ ch50B unch250B))))
(assert (= (str.++ preC (str.++ stem50 sufC)) (str.++ unch150C (str.++ ch50C unch250C))))
(assert (= (str.++ preD (str.++ stem50 sufD)) (str.++ unch150D (str.++ ch50D unch250D))))
(assert (= (str.++ preE (str.++ stem50 sufE)) (str.++ unch150E (str.++ ch50E unch250E))))
(assert (= (str.++ preF (str.++ stem50 sufF)) (str.++ unch150F (str.++ ch50F unch250F))))
(assert (= (str.++ preG (str.++ stem50 sufG)) (str.++ unch150G (str.++ ch50G unch250G))))
(assert (= (str.++ preH (str.++ stem50 sufH)) (str.++ unch150H (str.++ ch50H unch250H))))
(assert (= "kjXsjkj" (str.++ unch150G (str.++ var50G unch250G))))
(assert (= "k2stH" (str.++ unch150H (str.++ var50H unch250H))))
(assert (= (str.len stem50) l50))
(assert (= (ite (= ch50A var50A) 0 1) sc50A))
(assert (= (ite (= ch50B var50B) 0 1) sc50B))
(assert (= (ite (= ch50C var50C) 0 1) sc50C))
(assert (= (ite (= ch50D var50D) 0 1) sc50D))
(assert (= (ite (= ch50E var50E) 0 1) sc50E))
(assert (= (ite (= ch50F var50F) 0 1) sc50F))
(assert (= (ite (= ch50G var50G) 0 1) sc50G))
(assert (= (ite (= ch50H var50H) 0 1) sc50H))
(assert (<= sc50A 1))
(assert (<= sc50B 1))
(assert (<= sc50C 1))
(assert (<= sc50D 1))
(assert (<= sc50E 1))
(assert (<= sc50F 1))
(assert (<= sc50G 1))
(assert (<= sc50H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      sc7G
      sc7H
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      sc8G
      sc8H
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      sc9G
      sc9H
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      sc10G
      sc10H
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      sc11G
      sc11H
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      sc12G
      sc12H
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      sc13G
      sc13H
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      sc14G
      sc14H
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      sc15G
      sc15H
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      sc16G
      sc16H
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      sc17G
      sc17H
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      sc18G
      sc18H
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      sc19G
      sc19H
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      sc20G
      sc20H
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      sc21G
      sc21H
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      sc22G
      sc22H
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      sc23G
      sc23H
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      sc24G
      sc24H
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      sc25G
      sc25H
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      sc26G
      sc26H
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      sc27G
      sc27H
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      sc28G
      sc28H
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      sc29G
      sc29H
      0
      sc30A
      sc30B
      sc30C
      sc30D
      sc30E
      sc30F
      sc30G
      sc30H
      0
      sc31A
      sc31B
      sc31C
      sc31D
      sc31E
      sc31F
      sc31G
      sc31H
      0
      sc32A
      sc32B
      sc32C
      sc32D
      sc32E
      sc32F
      sc32G
      sc32H
      0
      sc33A
      sc33B
      sc33C
      sc33D
      sc33E
      sc33F
      sc33G
      sc33H
      0
      sc34A
      sc34B
      sc34C
      sc34D
      sc34E
      sc34F
      sc34G
      sc34H
      0
      sc35A
      sc35B
      sc35C
      sc35D
      sc35E
      sc35F
      sc35G
      sc35H
      0
      sc36A
      sc36B
      sc36C
      sc36D
      sc36E
      sc36F
      sc36G
      sc36H
      0
      sc37A
      sc37B
      sc37C
      sc37D
      sc37E
      sc37F
      sc37G
      sc37H
      0
      sc38A
      sc38B
      sc38C
      sc38D
      sc38E
      sc38F
      sc38G
      sc38H
      0
      sc39A
      sc39B
      sc39C
      sc39D
      sc39E
      sc39F
      sc39G
      sc39H
      0
      sc40A
      sc40B
      sc40C
      sc40D
      sc40E
      sc40F
      sc40G
      sc40H
      0
      sc41A
      sc41B
      sc41C
      sc41D
      sc41E
      sc41F
      sc41G
      sc41H
      0
      sc42A
      sc42B
      sc42C
      sc42D
      sc42E
      sc42F
      sc42G
      sc42H
      0
      sc43A
      sc43B
      sc43C
      sc43D
      sc43E
      sc43F
      sc43G
      sc43H
      0
      sc44A
      sc44B
      sc44C
      sc44D
      sc44E
      sc44F
      sc44G
      sc44H
      0
      sc45A
      sc45B
      sc45C
      sc45D
      sc45E
      sc45F
      sc45G
      sc45H
      0
      sc46A
      sc46B
      sc46C
      sc46D
      sc46E
      sc46F
      sc46G
      sc46H
      0
      sc47A
      sc47B
      sc47C
      sc47D
      sc47E
      sc47F
      sc47G
      sc47H
      0
      sc48A
      sc48B
      sc48C
      sc48D
      sc48E
      sc48F
      sc48G
      sc48H
      0
      sc49A
      sc49B
      sc49C
      sc49D
      sc49E
      sc49F
      sc49G
      sc49H
      0
      sc50A
      sc50B
      sc50C
      sc50D
      sc50E
      sc50F
      sc50G
      sc50H)
   8))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun var7G () String)
(declare-fun var7H () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun unch27G () String)
(declare-fun ch7G () String)
(declare-fun unch17G () String)
(declare-fun unch27H () String)
(declare-fun ch7H () String)
(declare-fun unch17H () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun sc7G () Int)
(declare-fun sc7H () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun var8G () String)
(declare-fun var8H () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun unch28G () String)
(declare-fun ch8G () String)
(declare-fun unch18G () String)
(declare-fun unch28H () String)
(declare-fun ch8H () String)
(declare-fun unch18H () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun sc8G () Int)
(declare-fun sc8H () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun var9G () String)
(declare-fun var9H () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun unch29G () String)
(declare-fun ch9G () String)
(declare-fun unch19G () String)
(declare-fun unch29H () String)
(declare-fun ch9H () String)
(declare-fun unch19H () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun sc9G () Int)
(declare-fun sc9H () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun var10G () String)
(declare-fun var10H () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun unch210G () String)
(declare-fun ch10G () String)
(declare-fun unch110G () String)
(declare-fun unch210H () String)
(declare-fun ch10H () String)
(declare-fun unch110H () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun sc10G () Int)
(declare-fun sc10H () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun var11G () String)
(declare-fun var11H () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun unch211G () String)
(declare-fun ch11G () String)
(declare-fun unch111G () String)
(declare-fun unch211H () String)
(declare-fun ch11H () String)
(declare-fun unch111H () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun sc11G () Int)
(declare-fun sc11H () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun var12G () String)
(declare-fun var12H () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun unch212G () String)
(declare-fun ch12G () String)
(declare-fun unch112G () String)
(declare-fun unch212H () String)
(declare-fun ch12H () String)
(declare-fun unch112H () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun sc12G () Int)
(declare-fun sc12H () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun var13G () String)
(declare-fun var13H () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun unch213G () String)
(declare-fun ch13G () String)
(declare-fun unch113G () String)
(declare-fun unch213H () String)
(declare-fun ch13H () String)
(declare-fun unch113H () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun sc13G () Int)
(declare-fun sc13H () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun var14G () String)
(declare-fun var14H () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun unch214G () String)
(declare-fun ch14G () String)
(declare-fun unch114G () String)
(declare-fun unch214H () String)
(declare-fun ch14H () String)
(declare-fun unch114H () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun sc14G () Int)
(declare-fun sc14H () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun var15G () String)
(declare-fun var15H () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun unch215G () String)
(declare-fun ch15G () String)
(declare-fun unch115G () String)
(declare-fun unch215H () String)
(declare-fun ch15H () String)
(declare-fun unch115H () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun sc15G () Int)
(declare-fun sc15H () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun var16G () String)
(declare-fun var16H () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun unch216G () String)
(declare-fun ch16G () String)
(declare-fun unch116G () String)
(declare-fun unch216H () String)
(declare-fun ch16H () String)
(declare-fun unch116H () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun sc16G () Int)
(declare-fun sc16H () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun var17G () String)
(declare-fun var17H () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun unch217G () String)
(declare-fun ch17G () String)
(declare-fun unch117G () String)
(declare-fun unch217H () String)
(declare-fun ch17H () String)
(declare-fun unch117H () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun sc17G () Int)
(declare-fun sc17H () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun var18G () String)
(declare-fun var18H () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun unch218G () String)
(declare-fun ch18G () String)
(declare-fun unch118G () String)
(declare-fun unch218H () String)
(declare-fun ch18H () String)
(declare-fun unch118H () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun sc18G () Int)
(declare-fun sc18H () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun var19G () String)
(declare-fun var19H () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun unch219G () String)
(declare-fun ch19G () String)
(declare-fun unch119G () String)
(declare-fun unch219H () String)
(declare-fun ch19H () String)
(declare-fun unch119H () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun sc19G () Int)
(declare-fun sc19H () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun var20G () String)
(declare-fun var20H () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun unch220G () String)
(declare-fun ch20G () String)
(declare-fun unch120G () String)
(declare-fun unch220H () String)
(declare-fun ch20H () String)
(declare-fun unch120H () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun sc20G () Int)
(declare-fun sc20H () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun var21G () String)
(declare-fun var21H () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun unch221G () String)
(declare-fun ch21G () String)
(declare-fun unch121G () String)
(declare-fun unch221H () String)
(declare-fun ch21H () String)
(declare-fun unch121H () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun sc21G () Int)
(declare-fun sc21H () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun var22G () String)
(declare-fun var22H () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun unch222G () String)
(declare-fun ch22G () String)
(declare-fun unch122G () String)
(declare-fun unch222H () String)
(declare-fun ch22H () String)
(declare-fun unch122H () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun sc22G () Int)
(declare-fun sc22H () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun var23G () String)
(declare-fun var23H () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun unch223G () String)
(declare-fun ch23G () String)
(declare-fun unch123G () String)
(declare-fun unch223H () String)
(declare-fun ch23H () String)
(declare-fun unch123H () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun sc23G () Int)
(declare-fun sc23H () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun var24G () String)
(declare-fun var24H () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun unch224G () String)
(declare-fun ch24G () String)
(declare-fun unch124G () String)
(declare-fun unch224H () String)
(declare-fun ch24H () String)
(declare-fun unch124H () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun sc24G () Int)
(declare-fun sc24H () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun var25G () String)
(declare-fun var25H () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun unch225G () String)
(declare-fun ch25G () String)
(declare-fun unch125G () String)
(declare-fun unch225H () String)
(declare-fun ch25H () String)
(declare-fun unch125H () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun sc25G () Int)
(declare-fun sc25H () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun var26G () String)
(declare-fun var26H () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun unch226G () String)
(declare-fun ch26G () String)
(declare-fun unch126G () String)
(declare-fun unch226H () String)
(declare-fun ch26H () String)
(declare-fun unch126H () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun sc26G () Int)
(declare-fun sc26H () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun var27G () String)
(declare-fun var27H () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun unch227G () String)
(declare-fun ch27G () String)
(declare-fun unch127G () String)
(declare-fun unch227H () String)
(declare-fun ch27H () String)
(declare-fun unch127H () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun sc27G () Int)
(declare-fun sc27H () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun var28G () String)
(declare-fun var28H () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun unch228G () String)
(declare-fun ch28G () String)
(declare-fun unch128G () String)
(declare-fun unch228H () String)
(declare-fun ch28H () String)
(declare-fun unch128H () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun sc28G () Int)
(declare-fun sc28H () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun var29G () String)
(declare-fun var29H () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun unch229G () String)
(declare-fun ch29G () String)
(declare-fun unch129G () String)
(declare-fun unch229H () String)
(declare-fun ch29H () String)
(declare-fun unch129H () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun sc29G () Int)
(declare-fun sc29H () Int)
(declare-fun var30A () String)
(declare-fun var30B () String)
(declare-fun var30C () String)
(declare-fun var30D () String)
(declare-fun var30E () String)
(declare-fun var30F () String)
(declare-fun var30G () String)
(declare-fun var30H () String)
(declare-fun unch230A () String)
(declare-fun ch30A () String)
(declare-fun unch130A () String)
(declare-fun stem30 () String)
(declare-fun unch230B () String)
(declare-fun ch30B () String)
(declare-fun unch130B () String)
(declare-fun unch230C () String)
(declare-fun ch30C () String)
(declare-fun unch130C () String)
(declare-fun unch230D () String)
(declare-fun ch30D () String)
(declare-fun unch130D () String)
(declare-fun unch230E () String)
(declare-fun ch30E () String)
(declare-fun unch130E () String)
(declare-fun unch230F () String)
(declare-fun ch30F () String)
(declare-fun unch130F () String)
(declare-fun unch230G () String)
(declare-fun ch30G () String)
(declare-fun unch130G () String)
(declare-fun unch230H () String)
(declare-fun ch30H () String)
(declare-fun unch130H () String)
(declare-fun l30 () Int)
(declare-fun sc30A () Int)
(declare-fun sc30B () Int)
(declare-fun sc30C () Int)
(declare-fun sc30D () Int)
(declare-fun sc30E () Int)
(declare-fun sc30F () Int)
(declare-fun sc30G () Int)
(declare-fun sc30H () Int)
(declare-fun var31A () String)
(declare-fun var31B () String)
(declare-fun var31C () String)
(declare-fun var31D () String)
(declare-fun var31E () String)
(declare-fun var31F () String)
(declare-fun var31G () String)
(declare-fun var31H () String)
(declare-fun unch231A () String)
(declare-fun ch31A () String)
(declare-fun unch131A () String)
(declare-fun stem31 () String)
(declare-fun unch231B () String)
(declare-fun ch31B () String)
(declare-fun unch131B () String)
(declare-fun unch231C () String)
(declare-fun ch31C () String)
(declare-fun unch131C () String)
(declare-fun unch231D () String)
(declare-fun ch31D () String)
(declare-fun unch131D () String)
(declare-fun unch231E () String)
(declare-fun ch31E () String)
(declare-fun unch131E () String)
(declare-fun unch231F () String)
(declare-fun ch31F () String)
(declare-fun unch131F () String)
(declare-fun unch231G () String)
(declare-fun ch31G () String)
(declare-fun unch131G () String)
(declare-fun unch231H () String)
(declare-fun ch31H () String)
(declare-fun unch131H () String)
(declare-fun l31 () Int)
(declare-fun sc31A () Int)
(declare-fun sc31B () Int)
(declare-fun sc31C () Int)
(declare-fun sc31D () Int)
(declare-fun sc31E () Int)
(declare-fun sc31F () Int)
(declare-fun sc31G () Int)
(declare-fun sc31H () Int)
(declare-fun var32A () String)
(declare-fun var32B () String)
(declare-fun var32C () String)
(declare-fun var32D () String)
(declare-fun var32E () String)
(declare-fun var32F () String)
(declare-fun var32G () String)
(declare-fun var32H () String)
(declare-fun unch232A () String)
(declare-fun ch32A () String)
(declare-fun unch132A () String)
(declare-fun stem32 () String)
(declare-fun unch232B () String)
(declare-fun ch32B () String)
(declare-fun unch132B () String)
(declare-fun unch232C () String)
(declare-fun ch32C () String)
(declare-fun unch132C () String)
(declare-fun unch232D () String)
(declare-fun ch32D () String)
(declare-fun unch132D () String)
(declare-fun unch232E () String)
(declare-fun ch32E () String)
(declare-fun unch132E () String)
(declare-fun unch232F () String)
(declare-fun ch32F () String)
(declare-fun unch132F () String)
(declare-fun unch232G () String)
(declare-fun ch32G () String)
(declare-fun unch132G () String)
(declare-fun unch232H () String)
(declare-fun ch32H () String)
(declare-fun unch132H () String)
(declare-fun l32 () Int)
(declare-fun sc32A () Int)
(declare-fun sc32B () Int)
(declare-fun sc32C () Int)
(declare-fun sc32D () Int)
(declare-fun sc32E () Int)
(declare-fun sc32F () Int)
(declare-fun sc32G () Int)
(declare-fun sc32H () Int)
(declare-fun var33A () String)
(declare-fun var33B () String)
(declare-fun var33C () String)
(declare-fun var33D () String)
(declare-fun var33E () String)
(declare-fun var33F () String)
(declare-fun var33G () String)
(declare-fun var33H () String)
(declare-fun unch233A () String)
(declare-fun ch33A () String)
(declare-fun unch133A () String)
(declare-fun stem33 () String)
(declare-fun unch233B () String)
(declare-fun ch33B () String)
(declare-fun unch133B () String)
(declare-fun unch233C () String)
(declare-fun ch33C () String)
(declare-fun unch133C () String)
(declare-fun unch233D () String)
(declare-fun ch33D () String)
(declare-fun unch133D () String)
(declare-fun unch233E () String)
(declare-fun ch33E () String)
(declare-fun unch133E () String)
(declare-fun unch233F () String)
(declare-fun ch33F () String)
(declare-fun unch133F () String)
(declare-fun unch233G () String)
(declare-fun ch33G () String)
(declare-fun unch133G () String)
(declare-fun unch233H () String)
(declare-fun ch33H () String)
(declare-fun unch133H () String)
(declare-fun l33 () Int)
(declare-fun sc33A () Int)
(declare-fun sc33B () Int)
(declare-fun sc33C () Int)
(declare-fun sc33D () Int)
(declare-fun sc33E () Int)
(declare-fun sc33F () Int)
(declare-fun sc33G () Int)
(declare-fun sc33H () Int)
(declare-fun var34A () String)
(declare-fun var34B () String)
(declare-fun var34C () String)
(declare-fun var34D () String)
(declare-fun var34E () String)
(declare-fun var34F () String)
(declare-fun var34G () String)
(declare-fun var34H () String)
(declare-fun unch234A () String)
(declare-fun ch34A () String)
(declare-fun unch134A () String)
(declare-fun stem34 () String)
(declare-fun unch234B () String)
(declare-fun ch34B () String)
(declare-fun unch134B () String)
(declare-fun unch234C () String)
(declare-fun ch34C () String)
(declare-fun unch134C () String)
(declare-fun unch234D () String)
(declare-fun ch34D () String)
(declare-fun unch134D () String)
(declare-fun unch234E () String)
(declare-fun ch34E () String)
(declare-fun unch134E () String)
(declare-fun unch234F () String)
(declare-fun ch34F () String)
(declare-fun unch134F () String)
(declare-fun unch234G () String)
(declare-fun ch34G () String)
(declare-fun unch134G () String)
(declare-fun unch234H () String)
(declare-fun ch34H () String)
(declare-fun unch134H () String)
(declare-fun l34 () Int)
(declare-fun sc34A () Int)
(declare-fun sc34B () Int)
(declare-fun sc34C () Int)
(declare-fun sc34D () Int)
(declare-fun sc34E () Int)
(declare-fun sc34F () Int)
(declare-fun sc34G () Int)
(declare-fun sc34H () Int)
(declare-fun var35A () String)
(declare-fun var35B () String)
(declare-fun var35C () String)
(declare-fun var35D () String)
(declare-fun var35E () String)
(declare-fun var35F () String)
(declare-fun var35G () String)
(declare-fun var35H () String)
(declare-fun unch235A () String)
(declare-fun ch35A () String)
(declare-fun unch135A () String)
(declare-fun stem35 () String)
(declare-fun unch235B () String)
(declare-fun ch35B () String)
(declare-fun unch135B () String)
(declare-fun unch235C () String)
(declare-fun ch35C () String)
(declare-fun unch135C () String)
(declare-fun unch235D () String)
(declare-fun ch35D () String)
(declare-fun unch135D () String)
(declare-fun unch235E () String)
(declare-fun ch35E () String)
(declare-fun unch135E () String)
(declare-fun unch235F () String)
(declare-fun ch35F () String)
(declare-fun unch135F () String)
(declare-fun unch235G () String)
(declare-fun ch35G () String)
(declare-fun unch135G () String)
(declare-fun unch235H () String)
(declare-fun ch35H () String)
(declare-fun unch135H () String)
(declare-fun l35 () Int)
(declare-fun sc35A () Int)
(declare-fun sc35B () Int)
(declare-fun sc35C () Int)
(declare-fun sc35D () Int)
(declare-fun sc35E () Int)
(declare-fun sc35F () Int)
(declare-fun sc35G () Int)
(declare-fun sc35H () Int)
(declare-fun var36A () String)
(declare-fun var36B () String)
(declare-fun var36C () String)
(declare-fun var36D () String)
(declare-fun var36E () String)
(declare-fun var36F () String)
(declare-fun var36G () String)
(declare-fun var36H () String)
(declare-fun unch236A () String)
(declare-fun ch36A () String)
(declare-fun unch136A () String)
(declare-fun stem36 () String)
(declare-fun unch236B () String)
(declare-fun ch36B () String)
(declare-fun unch136B () String)
(declare-fun unch236C () String)
(declare-fun ch36C () String)
(declare-fun unch136C () String)
(declare-fun unch236D () String)
(declare-fun ch36D () String)
(declare-fun unch136D () String)
(declare-fun unch236E () String)
(declare-fun ch36E () String)
(declare-fun unch136E () String)
(declare-fun unch236F () String)
(declare-fun ch36F () String)
(declare-fun unch136F () String)
(declare-fun unch236G () String)
(declare-fun ch36G () String)
(declare-fun unch136G () String)
(declare-fun unch236H () String)
(declare-fun ch36H () String)
(declare-fun unch136H () String)
(declare-fun l36 () Int)
(declare-fun sc36A () Int)
(declare-fun sc36B () Int)
(declare-fun sc36C () Int)
(declare-fun sc36D () Int)
(declare-fun sc36E () Int)
(declare-fun sc36F () Int)
(declare-fun sc36G () Int)
(declare-fun sc36H () Int)
(declare-fun var37A () String)
(declare-fun var37B () String)
(declare-fun var37C () String)
(declare-fun var37D () String)
(declare-fun var37E () String)
(declare-fun var37F () String)
(declare-fun var37G () String)
(declare-fun var37H () String)
(declare-fun unch237A () String)
(declare-fun ch37A () String)
(declare-fun unch137A () String)
(declare-fun stem37 () String)
(declare-fun unch237B () String)
(declare-fun ch37B () String)
(declare-fun unch137B () String)
(declare-fun unch237C () String)
(declare-fun ch37C () String)
(declare-fun unch137C () String)
(declare-fun unch237D () String)
(declare-fun ch37D () String)
(declare-fun unch137D () String)
(declare-fun unch237E () String)
(declare-fun ch37E () String)
(declare-fun unch137E () String)
(declare-fun unch237F () String)
(declare-fun ch37F () String)
(declare-fun unch137F () String)
(declare-fun unch237G () String)
(declare-fun ch37G () String)
(declare-fun unch137G () String)
(declare-fun unch237H () String)
(declare-fun ch37H () String)
(declare-fun unch137H () String)
(declare-fun l37 () Int)
(declare-fun sc37A () Int)
(declare-fun sc37B () Int)
(declare-fun sc37C () Int)
(declare-fun sc37D () Int)
(declare-fun sc37E () Int)
(declare-fun sc37F () Int)
(declare-fun sc37G () Int)
(declare-fun sc37H () Int)
(declare-fun var38A () String)
(declare-fun var38B () String)
(declare-fun var38C () String)
(declare-fun var38D () String)
(declare-fun var38E () String)
(declare-fun var38F () String)
(declare-fun var38G () String)
(declare-fun var38H () String)
(declare-fun unch238A () String)
(declare-fun ch38A () String)
(declare-fun unch138A () String)
(declare-fun stem38 () String)
(declare-fun unch238B () String)
(declare-fun ch38B () String)
(declare-fun unch138B () String)
(declare-fun unch238C () String)
(declare-fun ch38C () String)
(declare-fun unch138C () String)
(declare-fun unch238D () String)
(declare-fun ch38D () String)
(declare-fun unch138D () String)
(declare-fun unch238E () String)
(declare-fun ch38E () String)
(declare-fun unch138E () String)
(declare-fun unch238F () String)
(declare-fun ch38F () String)
(declare-fun unch138F () String)
(declare-fun unch238G () String)
(declare-fun ch38G () String)
(declare-fun unch138G () String)
(declare-fun unch238H () String)
(declare-fun ch38H () String)
(declare-fun unch138H () String)
(declare-fun l38 () Int)
(declare-fun sc38A () Int)
(declare-fun sc38B () Int)
(declare-fun sc38C () Int)
(declare-fun sc38D () Int)
(declare-fun sc38E () Int)
(declare-fun sc38F () Int)
(declare-fun sc38G () Int)
(declare-fun sc38H () Int)
(declare-fun var39A () String)
(declare-fun var39B () String)
(declare-fun var39C () String)
(declare-fun var39D () String)
(declare-fun var39E () String)
(declare-fun var39F () String)
(declare-fun var39G () String)
(declare-fun var39H () String)
(declare-fun unch239A () String)
(declare-fun ch39A () String)
(declare-fun unch139A () String)
(declare-fun stem39 () String)
(declare-fun unch239B () String)
(declare-fun ch39B () String)
(declare-fun unch139B () String)
(declare-fun unch239C () String)
(declare-fun ch39C () String)
(declare-fun unch139C () String)
(declare-fun unch239D () String)
(declare-fun ch39D () String)
(declare-fun unch139D () String)
(declare-fun unch239E () String)
(declare-fun ch39E () String)
(declare-fun unch139E () String)
(declare-fun unch239F () String)
(declare-fun ch39F () String)
(declare-fun unch139F () String)
(declare-fun unch239G () String)
(declare-fun ch39G () String)
(declare-fun unch139G () String)
(declare-fun unch239H () String)
(declare-fun ch39H () String)
(declare-fun unch139H () String)
(declare-fun l39 () Int)
(declare-fun sc39A () Int)
(declare-fun sc39B () Int)
(declare-fun sc39C () Int)
(declare-fun sc39D () Int)
(declare-fun sc39E () Int)
(declare-fun sc39F () Int)
(declare-fun sc39G () Int)
(declare-fun sc39H () Int)
(declare-fun var40A () String)
(declare-fun var40B () String)
(declare-fun var40C () String)
(declare-fun var40D () String)
(declare-fun var40E () String)
(declare-fun var40F () String)
(declare-fun var40G () String)
(declare-fun var40H () String)
(declare-fun unch240A () String)
(declare-fun ch40A () String)
(declare-fun unch140A () String)
(declare-fun stem40 () String)
(declare-fun unch240B () String)
(declare-fun ch40B () String)
(declare-fun unch140B () String)
(declare-fun unch240C () String)
(declare-fun ch40C () String)
(declare-fun unch140C () String)
(declare-fun unch240D () String)
(declare-fun ch40D () String)
(declare-fun unch140D () String)
(declare-fun unch240E () String)
(declare-fun ch40E () String)
(declare-fun unch140E () String)
(declare-fun unch240F () String)
(declare-fun ch40F () String)
(declare-fun unch140F () String)
(declare-fun unch240G () String)
(declare-fun ch40G () String)
(declare-fun unch140G () String)
(declare-fun unch240H () String)
(declare-fun ch40H () String)
(declare-fun unch140H () String)
(declare-fun l40 () Int)
(declare-fun sc40A () Int)
(declare-fun sc40B () Int)
(declare-fun sc40C () Int)
(declare-fun sc40D () Int)
(declare-fun sc40E () Int)
(declare-fun sc40F () Int)
(declare-fun sc40G () Int)
(declare-fun sc40H () Int)
(declare-fun var41A () String)
(declare-fun var41B () String)
(declare-fun var41C () String)
(declare-fun var41D () String)
(declare-fun var41E () String)
(declare-fun var41F () String)
(declare-fun var41G () String)
(declare-fun var41H () String)
(declare-fun unch241A () String)
(declare-fun ch41A () String)
(declare-fun unch141A () String)
(declare-fun stem41 () String)
(declare-fun unch241B () String)
(declare-fun ch41B () String)
(declare-fun unch141B () String)
(declare-fun unch241C () String)
(declare-fun ch41C () String)
(declare-fun unch141C () String)
(declare-fun unch241D () String)
(declare-fun ch41D () String)
(declare-fun unch141D () String)
(declare-fun unch241E () String)
(declare-fun ch41E () String)
(declare-fun unch141E () String)
(declare-fun unch241F () String)
(declare-fun ch41F () String)
(declare-fun unch141F () String)
(declare-fun unch241G () String)
(declare-fun ch41G () String)
(declare-fun unch141G () String)
(declare-fun unch241H () String)
(declare-fun ch41H () String)
(declare-fun unch141H () String)
(declare-fun l41 () Int)
(declare-fun sc41A () Int)
(declare-fun sc41B () Int)
(declare-fun sc41C () Int)
(declare-fun sc41D () Int)
(declare-fun sc41E () Int)
(declare-fun sc41F () Int)
(declare-fun sc41G () Int)
(declare-fun sc41H () Int)
(declare-fun var42A () String)
(declare-fun var42B () String)
(declare-fun var42C () String)
(declare-fun var42D () String)
(declare-fun var42E () String)
(declare-fun var42F () String)
(declare-fun var42G () String)
(declare-fun var42H () String)
(declare-fun unch242A () String)
(declare-fun ch42A () String)
(declare-fun unch142A () String)
(declare-fun stem42 () String)
(declare-fun unch242B () String)
(declare-fun ch42B () String)
(declare-fun unch142B () String)
(declare-fun unch242C () String)
(declare-fun ch42C () String)
(declare-fun unch142C () String)
(declare-fun unch242D () String)
(declare-fun ch42D () String)
(declare-fun unch142D () String)
(declare-fun unch242E () String)
(declare-fun ch42E () String)
(declare-fun unch142E () String)
(declare-fun unch242F () String)
(declare-fun ch42F () String)
(declare-fun unch142F () String)
(declare-fun unch242G () String)
(declare-fun ch42G () String)
(declare-fun unch142G () String)
(declare-fun unch242H () String)
(declare-fun ch42H () String)
(declare-fun unch142H () String)
(declare-fun l42 () Int)
(declare-fun sc42A () Int)
(declare-fun sc42B () Int)
(declare-fun sc42C () Int)
(declare-fun sc42D () Int)
(declare-fun sc42E () Int)
(declare-fun sc42F () Int)
(declare-fun sc42G () Int)
(declare-fun sc42H () Int)
(declare-fun var43A () String)
(declare-fun var43B () String)
(declare-fun var43C () String)
(declare-fun var43D () String)
(declare-fun var43E () String)
(declare-fun var43F () String)
(declare-fun var43G () String)
(declare-fun var43H () String)
(declare-fun unch243A () String)
(declare-fun ch43A () String)
(declare-fun unch143A () String)
(declare-fun stem43 () String)
(declare-fun unch243B () String)
(declare-fun ch43B () String)
(declare-fun unch143B () String)
(declare-fun unch243C () String)
(declare-fun ch43C () String)
(declare-fun unch143C () String)
(declare-fun unch243D () String)
(declare-fun ch43D () String)
(declare-fun unch143D () String)
(declare-fun unch243E () String)
(declare-fun ch43E () String)
(declare-fun unch143E () String)
(declare-fun unch243F () String)
(declare-fun ch43F () String)
(declare-fun unch143F () String)
(declare-fun unch243G () String)
(declare-fun ch43G () String)
(declare-fun unch143G () String)
(declare-fun unch243H () String)
(declare-fun ch43H () String)
(declare-fun unch143H () String)
(declare-fun l43 () Int)
(declare-fun sc43A () Int)
(declare-fun sc43B () Int)
(declare-fun sc43C () Int)
(declare-fun sc43D () Int)
(declare-fun sc43E () Int)
(declare-fun sc43F () Int)
(declare-fun sc43G () Int)
(declare-fun sc43H () Int)
(declare-fun var44A () String)
(declare-fun var44B () String)
(declare-fun var44C () String)
(declare-fun var44D () String)
(declare-fun var44E () String)
(declare-fun var44F () String)
(declare-fun var44G () String)
(declare-fun var44H () String)
(declare-fun unch244A () String)
(declare-fun ch44A () String)
(declare-fun unch144A () String)
(declare-fun stem44 () String)
(declare-fun unch244B () String)
(declare-fun ch44B () String)
(declare-fun unch144B () String)
(declare-fun unch244C () String)
(declare-fun ch44C () String)
(declare-fun unch144C () String)
(declare-fun unch244D () String)
(declare-fun ch44D () String)
(declare-fun unch144D () String)
(declare-fun unch244E () String)
(declare-fun ch44E () String)
(declare-fun unch144E () String)
(declare-fun unch244F () String)
(declare-fun ch44F () String)
(declare-fun unch144F () String)
(declare-fun unch244G () String)
(declare-fun ch44G () String)
(declare-fun unch144G () String)
(declare-fun unch244H () String)
(declare-fun ch44H () String)
(declare-fun unch144H () String)
(declare-fun l44 () Int)
(declare-fun sc44A () Int)
(declare-fun sc44B () Int)
(declare-fun sc44C () Int)
(declare-fun sc44D () Int)
(declare-fun sc44E () Int)
(declare-fun sc44F () Int)
(declare-fun sc44G () Int)
(declare-fun sc44H () Int)
(declare-fun var45A () String)
(declare-fun var45B () String)
(declare-fun var45C () String)
(declare-fun var45D () String)
(declare-fun var45E () String)
(declare-fun var45F () String)
(declare-fun var45G () String)
(declare-fun var45H () String)
(declare-fun unch245A () String)
(declare-fun ch45A () String)
(declare-fun unch145A () String)
(declare-fun stem45 () String)
(declare-fun unch245B () String)
(declare-fun ch45B () String)
(declare-fun unch145B () String)
(declare-fun unch245C () String)
(declare-fun ch45C () String)
(declare-fun unch145C () String)
(declare-fun unch245D () String)
(declare-fun ch45D () String)
(declare-fun unch145D () String)
(declare-fun unch245E () String)
(declare-fun ch45E () String)
(declare-fun unch145E () String)
(declare-fun unch245F () String)
(declare-fun ch45F () String)
(declare-fun unch145F () String)
(declare-fun unch245G () String)
(declare-fun ch45G () String)
(declare-fun unch145G () String)
(declare-fun unch245H () String)
(declare-fun ch45H () String)
(declare-fun unch145H () String)
(declare-fun l45 () Int)
(declare-fun sc45A () Int)
(declare-fun sc45B () Int)
(declare-fun sc45C () Int)
(declare-fun sc45D () Int)
(declare-fun sc45E () Int)
(declare-fun sc45F () Int)
(declare-fun sc45G () Int)
(declare-fun sc45H () Int)
(declare-fun var46A () String)
(declare-fun var46B () String)
(declare-fun var46C () String)
(declare-fun var46D () String)
(declare-fun var46E () String)
(declare-fun var46F () String)
(declare-fun var46G () String)
(declare-fun var46H () String)
(declare-fun unch246A () String)
(declare-fun ch46A () String)
(declare-fun unch146A () String)
(declare-fun stem46 () String)
(declare-fun unch246B () String)
(declare-fun ch46B () String)
(declare-fun unch146B () String)
(declare-fun unch246C () String)
(declare-fun ch46C () String)
(declare-fun unch146C () String)
(declare-fun unch246D () String)
(declare-fun ch46D () String)
(declare-fun unch146D () String)
(declare-fun unch246E () String)
(declare-fun ch46E () String)
(declare-fun unch146E () String)
(declare-fun unch246F () String)
(declare-fun ch46F () String)
(declare-fun unch146F () String)
(declare-fun unch246G () String)
(declare-fun ch46G () String)
(declare-fun unch146G () String)
(declare-fun unch246H () String)
(declare-fun ch46H () String)
(declare-fun unch146H () String)
(declare-fun l46 () Int)
(declare-fun sc46A () Int)
(declare-fun sc46B () Int)
(declare-fun sc46C () Int)
(declare-fun sc46D () Int)
(declare-fun sc46E () Int)
(declare-fun sc46F () Int)
(declare-fun sc46G () Int)
(declare-fun sc46H () Int)
(declare-fun var47A () String)
(declare-fun var47B () String)
(declare-fun var47C () String)
(declare-fun var47D () String)
(declare-fun var47E () String)
(declare-fun var47F () String)
(declare-fun var47G () String)
(declare-fun var47H () String)
(declare-fun unch247A () String)
(declare-fun ch47A () String)
(declare-fun unch147A () String)
(declare-fun stem47 () String)
(declare-fun unch247B () String)
(declare-fun ch47B () String)
(declare-fun unch147B () String)
(declare-fun unch247C () String)
(declare-fun ch47C () String)
(declare-fun unch147C () String)
(declare-fun unch247D () String)
(declare-fun ch47D () String)
(declare-fun unch147D () String)
(declare-fun unch247E () String)
(declare-fun ch47E () String)
(declare-fun unch147E () String)
(declare-fun unch247F () String)
(declare-fun ch47F () String)
(declare-fun unch147F () String)
(declare-fun unch247G () String)
(declare-fun ch47G () String)
(declare-fun unch147G () String)
(declare-fun unch247H () String)
(declare-fun ch47H () String)
(declare-fun unch147H () String)
(declare-fun l47 () Int)
(declare-fun sc47A () Int)
(declare-fun sc47B () Int)
(declare-fun sc47C () Int)
(declare-fun sc47D () Int)
(declare-fun sc47E () Int)
(declare-fun sc47F () Int)
(declare-fun sc47G () Int)
(declare-fun sc47H () Int)
(declare-fun var48A () String)
(declare-fun var48B () String)
(declare-fun var48C () String)
(declare-fun var48D () String)
(declare-fun var48E () String)
(declare-fun var48F () String)
(declare-fun var48G () String)
(declare-fun var48H () String)
(declare-fun unch248A () String)
(declare-fun ch48A () String)
(declare-fun unch148A () String)
(declare-fun stem48 () String)
(declare-fun unch248B () String)
(declare-fun ch48B () String)
(declare-fun unch148B () String)
(declare-fun unch248C () String)
(declare-fun ch48C () String)
(declare-fun unch148C () String)
(declare-fun unch248D () String)
(declare-fun ch48D () String)
(declare-fun unch148D () String)
(declare-fun unch248E () String)
(declare-fun ch48E () String)
(declare-fun unch148E () String)
(declare-fun unch248F () String)
(declare-fun ch48F () String)
(declare-fun unch148F () String)
(declare-fun unch248G () String)
(declare-fun ch48G () String)
(declare-fun unch148G () String)
(declare-fun unch248H () String)
(declare-fun ch48H () String)
(declare-fun unch148H () String)
(declare-fun l48 () Int)
(declare-fun sc48A () Int)
(declare-fun sc48B () Int)
(declare-fun sc48C () Int)
(declare-fun sc48D () Int)
(declare-fun sc48E () Int)
(declare-fun sc48F () Int)
(declare-fun sc48G () Int)
(declare-fun sc48H () Int)
(declare-fun var49A () String)
(declare-fun var49B () String)
(declare-fun var49C () String)
(declare-fun var49D () String)
(declare-fun var49E () String)
(declare-fun var49F () String)
(declare-fun var49G () String)
(declare-fun var49H () String)
(declare-fun unch249A () String)
(declare-fun ch49A () String)
(declare-fun unch149A () String)
(declare-fun stem49 () String)
(declare-fun unch249B () String)
(declare-fun ch49B () String)
(declare-fun unch149B () String)
(declare-fun unch249C () String)
(declare-fun ch49C () String)
(declare-fun unch149C () String)
(declare-fun unch249D () String)
(declare-fun ch49D () String)
(declare-fun unch149D () String)
(declare-fun unch249E () String)
(declare-fun ch49E () String)
(declare-fun unch149E () String)
(declare-fun unch249F () String)
(declare-fun ch49F () String)
(declare-fun unch149F () String)
(declare-fun unch249G () String)
(declare-fun ch49G () String)
(declare-fun unch149G () String)
(declare-fun unch249H () String)
(declare-fun ch49H () String)
(declare-fun unch149H () String)
(declare-fun l49 () Int)
(declare-fun sc49A () Int)
(declare-fun sc49B () Int)
(declare-fun sc49C () Int)
(declare-fun sc49D () Int)
(declare-fun sc49E () Int)
(declare-fun sc49F () Int)
(declare-fun sc49G () Int)
(declare-fun sc49H () Int)
(declare-fun var50A () String)
(declare-fun var50B () String)
(declare-fun var50C () String)
(declare-fun var50D () String)
(declare-fun var50E () String)
(declare-fun var50F () String)
(declare-fun var50G () String)
(declare-fun var50H () String)
(declare-fun unch250A () String)
(declare-fun ch50A () String)
(declare-fun unch150A () String)
(declare-fun stem50 () String)
(declare-fun unch250B () String)
(declare-fun ch50B () String)
(declare-fun unch150B () String)
(declare-fun unch250C () String)
(declare-fun ch50C () String)
(declare-fun unch150C () String)
(declare-fun unch250D () String)
(declare-fun ch50D () String)
(declare-fun unch150D () String)
(declare-fun unch250E () String)
(declare-fun ch50E () String)
(declare-fun unch150E () String)
(declare-fun unch250F () String)
(declare-fun ch50F () String)
(declare-fun unch150F () String)
(declare-fun unch250G () String)
(declare-fun ch50G () String)
(declare-fun unch150G () String)
(declare-fun unch250H () String)
(declare-fun ch50H () String)
(declare-fun unch150H () String)
(declare-fun l50 () Int)
(declare-fun sc50A () Int)
(declare-fun sc50B () Int)
(declare-fun sc50C () Int)
(declare-fun sc50D () Int)
(declare-fun sc50E () Int)
(declare-fun sc50F () Int)
(declare-fun sc50G () Int)
(declare-fun sc50H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "plOst" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "plastO" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "plasjkjX" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "skorZx" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "skoruxO" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "skorusjX" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "1jrjXx" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "1jrjixO" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "1jrjisjX" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "pastZx" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "pastuxO" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "pastusjX" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "mjnjZx" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "mjnjZxa" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "mjnjZsji" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "plZ1" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "plZ1a" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "plZzji" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "sjtjX1" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "st21a" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "st2zji" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (<= (str.len var7G) 1))
(assert (<= (str.len var7H) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= (str.++ preG (str.++ stem7 sufG)) (str.++ unch17G (str.++ ch7G unch27G))))
(assert (= (str.++ preH (str.++ stem7 sufH)) (str.++ unch17H (str.++ ch7H unch27H))))
(assert (= "sOk" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "sOka" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "sOtsji" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (= (ite (= ch7G var7G) 0 1) sc7G))
(assert (= (ite (= ch7H var7H) 0 1) sc7H))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= sc7G 1))
(assert (<= sc7H 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (<= (str.len var8G) 1))
(assert (<= (str.len var8H) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= (str.++ preG (str.++ stem8 sufG)) (str.++ unch18G (str.++ ch8G unch28G))))
(assert (= (str.++ preH (str.++ stem8 sufH)) (str.++ unch18H (str.++ ch8H unch28H))))
(assert (= "b3k" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "bHkO" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "bHtsjX" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (= (ite (= ch8G var8G) 0 1) sc8G))
(assert (= (ite (= ch8H var8H) 0 1) sc8H))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= sc8G 1))
(assert (<= sc8H 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (<= (str.len var9G) 1))
(assert (<= (str.len var9H) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= (str.++ preG (str.++ stem9 sufG)) (str.++ unch19G (str.++ ch9G unch29G))))
(assert (= (str.++ preH (str.++ stem9 sufH)) (str.++ unch19H (str.++ ch9H unch29H))))
(assert (= "l3st" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "lHstO" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "lHsjkjX" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (= (ite (= ch9G var9G) 0 1) sc9G))
(assert (= (ite (= ch9H var9H) 0 1) sc9H))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= sc9G 1))
(assert (<= sc9H 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (<= (str.len var10G) 1))
(assert (<= (str.len var10H) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= (str.++ preG (str.++ stem10 sufG)) (str.++ unch110G (str.++ ch10G unch210G))))
(assert (= (str.++ preH (str.++ stem10 sufH)) (str.++ unch110H (str.++ ch10H unch210H))))
(assert (= "l3st" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "l3sta" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "l3sjkji" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (= (ite (= ch10G var10G) 0 1) sc10G))
(assert (= (ite (= ch10H var10H) 0 1) sc10H))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= sc10G 1))
(assert (<= sc10H 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (<= (str.len var11G) 1))
(assert (<= (str.len var11H) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= (str.++ preG (str.++ stem11 sufG)) (str.++ unch111G (str.++ ch11G unch211G))))
(assert (= (str.++ preH (str.++ stem11 sufH)) (str.++ unch111H (str.++ ch11H unch211H))))
(assert (= "pjljXt" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "pl2ta" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "pl2kji" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (= (ite (= ch11G var11G) 0 1) sc11G))
(assert (= (ite (= ch11H var11H) 0 1) sc11H))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= sc11G 1))
(assert (<= sc11H 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (<= (str.len var12G) 1))
(assert (<= (str.len var12H) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= (str.++ preG (str.++ stem12 sufG)) (str.++ unch112G (str.++ ch12G unch212G))))
(assert (= (str.++ preH (str.++ stem12 sufH)) (str.++ unch112H (str.++ ch12H unch212H))))
(assert (= "sjmjrjXd" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "smr2da" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "smr2gji" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (= (ite (= ch12G var12G) 0 1) sc12G))
(assert (= (ite (= ch12H var12H) 0 1) sc12H))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= sc12G 1))
(assert (<= sc12H 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (<= (str.len var13G) 1))
(assert (<= (str.len var13H) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= (str.++ preG (str.++ stem13 sufG)) (str.++ unch113G (str.++ ch13G unch213G))))
(assert (= (str.++ preH (str.++ stem13 sufH)) (str.++ unch113H (str.++ ch13H unch213H))))
(assert (= "fjXst" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "fostO" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "fosjkjX" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (= (ite (= ch13G var13G) 0 1) sc13G))
(assert (= (ite (= ch13H var13H) 0 1) sc13H))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= sc13G 1))
(assert (<= sc13H 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (<= (str.len var14G) 1))
(assert (<= (str.len var14H) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= (str.++ preG (str.++ stem14 sufG)) (str.++ unch114G (str.++ ch14G unch214G))))
(assert (= (str.++ preH (str.++ stem14 sufH)) (str.++ unch114H (str.++ ch14H unch214H))))
(assert (= "mjXst" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "m2sta" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "m2sjkji" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (= (ite (= ch14G var14G) 0 1) sc14G))
(assert (= (ite (= ch14H var14H) 0 1) sc14H))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= sc14G 1))
(assert (<= sc14H 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (<= (str.len var15G) 1))
(assert (<= (str.len var15H) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= (str.++ preG (str.++ stem15 sufG)) (str.++ unch115G (str.++ ch15G unch215G))))
(assert (= (str.++ preH (str.++ stem15 sufH)) (str.++ unch115H (str.++ ch15H unch215H))))
(assert (= "ljXd" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "l4du" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "lHdZ" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (= (ite (= ch15G var15G) 0 1) sc15G))
(assert (= (ite (= ch15H var15H) 0 1) sc15H))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= sc15G 1))
(assert (<= sc15H 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (<= (str.len var16G) 1))
(assert (<= (str.len var16H) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= (str.++ preG (str.++ stem16 sufG)) (str.++ unch116G (str.++ ch16G unch216G))))
(assert (= (str.++ preH (str.++ stem16 sufH)) (str.++ unch116H (str.++ ch16H unch216H))))
(assert (= "djrjXt" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "dr2ta" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "dr2kji" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (= (ite (= ch16G var16G) 0 1) sc16G))
(assert (= (ite (= ch16H var16H) 0 1) sc16H))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= sc16G 1))
(assert (<= sc16H 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (<= (str.len var17G) 1))
(assert (<= (str.len var17H) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= (str.++ preG (str.++ stem17 sufG)) (str.++ unch117G (str.++ ch17G unch217G))))
(assert (= (str.++ preH (str.++ stem17 sufH)) (str.++ unch117H (str.++ ch17H unch217H))))
(assert (= "mjXd" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "m4du" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "mHdZ" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (= (ite (= ch17G var17G) 0 1) sc17G))
(assert (= (ite (= ch17H var17H) 0 1) sc17H))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= sc17G 1))
(assert (<= sc17H 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (<= (str.len var18G) 1))
(assert (<= (str.len var18H) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= (str.++ preG (str.++ stem18 sufG)) (str.++ unch118G (str.++ ch18G unch218G))))
(assert (= (str.++ preH (str.++ stem18 sufH)) (str.++ unch118H (str.++ ch18H unch218H))))
(assert (= "vjXl" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "volO" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "voljX" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (= (ite (= ch18G var18G) 0 1) sc18G))
(assert (= (ite (= ch18H var18H) 0 1) sc18H))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= sc18G 1))
(assert (<= sc18H 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (<= (str.len var19G) 1))
(assert (<= (str.len var19H) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= (str.++ preG (str.++ stem19 sufG)) (str.++ unch119G (str.++ ch19G unch219G))))
(assert (= (str.++ preH (str.++ stem19 sufH)) (str.++ unch119H (str.++ ch19H unch219H))))
(assert (= "vjXz" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "v2za" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "v2zji" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (= (ite (= ch19G var19G) 0 1) sc19G))
(assert (= (ite (= ch19H var19H) 0 1) sc19H))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= sc19G 1))
(assert (<= sc19H 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (<= (str.len var20G) 1))
(assert (<= (str.len var20H) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= (str.++ preG (str.++ stem20 sufG)) (str.++ unch120G (str.++ ch20G unch220G))))
(assert (= (str.++ preH (str.++ stem20 sufH)) (str.++ unch120H (str.++ ch20H unch220H))))
(assert (= "s3r" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "s3ra" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "s3rji" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (= (ite (= ch20G var20G) 0 1) sc20G))
(assert (= (ite (= ch20H var20H) 0 1) sc20H))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= sc20G 1))
(assert (<= sc20H 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (<= (str.len var21G) 1))
(assert (<= (str.len var21H) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= (str.++ preG (str.++ stem21 sufG)) (str.++ unch121G (str.++ ch21G unch221G))))
(assert (= (str.++ preH (str.++ stem21 sufH)) (str.++ unch121H (str.++ ch21H unch221H))))
(assert (= "sjnjXp" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "snopO" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "snopjX" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (= (ite (= ch21G var21G) 0 1) sc21G))
(assert (= (ite (= ch21H var21H) 0 1) sc21H))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= sc21G 1))
(assert (<= sc21H 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (<= (str.len var22G) 1))
(assert (<= (str.len var22H) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= (str.++ preG (str.++ stem22 sufG)) (str.++ unch122G (str.++ ch22G unch222G))))
(assert (= (str.++ preH (str.++ stem22 sufH)) (str.++ unch122H (str.++ ch22H unch222H))))
(assert (= "1r3b" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "1rHbO" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "1rHbjX" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (= (ite (= ch22G var22G) 0 1) sc22G))
(assert (= (ite (= ch22H var22H) 0 1) sc22H))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= sc22G 1))
(assert (<= sc22H 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (<= (str.len var23G) 1))
(assert (<= (str.len var23H) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= (str.++ preG (str.++ stem23 sufG)) (str.++ unch123G (str.++ ch23G unch223G))))
(assert (= (str.++ preH (str.++ stem23 sufH)) (str.++ unch123H (str.++ ch23H unch223H))))
(assert (= "l4bjid" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= "l4bHda" (str.++ unch123B (str.++ var23B unch223B))))
(assert (= "l4bHgji" (str.++ unch123C (str.++ var23C unch223C))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (= (ite (= ch23G var23G) 0 1) sc23G))
(assert (= (ite (= ch23H var23H) 0 1) sc23H))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= sc23G 1))
(assert (<= sc23H 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (<= (str.len var24G) 1))
(assert (<= (str.len var24H) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= (str.++ preG (str.++ stem24 sufG)) (str.++ unch124G (str.++ ch24G unch224G))))
(assert (= (str.++ preH (str.++ stem24 sufH)) (str.++ unch124H (str.++ ch24H unch224H))))
(assert (= "b4rji1" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= "b4rH1a" (str.++ unch124B (str.++ var24B unch224B))))
(assert (= "b4rHzji" (str.++ unch124C (str.++ var24C unch224C))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (= (ite (= ch24G var24G) 0 1) sc24G))
(assert (= (ite (= ch24H var24H) 0 1) sc24H))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= sc24G 1))
(assert (<= sc24H 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (<= (str.len var25G) 1))
(assert (<= (str.len var25H) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= (str.++ preG (str.++ stem25 sufG)) (str.++ unch125G (str.++ ch25G unch225G))))
(assert (= (str.++ preH (str.++ stem25 sufH)) (str.++ unch125H (str.++ ch25H unch225H))))
(assert (= "pHrjX1" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= "pHr21a" (str.++ unch125B (str.++ var25B unch225B))))
(assert (= "pHr2zji" (str.++ unch125C (str.++ var25C unch225C))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (= (ite (= ch25G var25G) 0 1) sc25G))
(assert (= (ite (= ch25H var25H) 0 1) sc25H))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= sc25G 1))
(assert (<= sc25H 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (<= (str.len var26G) 1))
(assert (<= (str.len var26H) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= (str.++ preG (str.++ stem26 sufG)) (str.++ unch126G (str.++ ch26G unch226G))))
(assert (= (str.++ preH (str.++ stem26 sufH)) (str.++ unch126H (str.++ ch26H unch226H))))
(assert (= "porjX1" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= "por21a" (str.++ unch126B (str.++ var26B unch226B))))
(assert (= "por2zji" (str.++ unch126C (str.++ var26C unch226C))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (= (ite (= ch26G var26G) 0 1) sc26G))
(assert (= (ite (= ch26H var26H) 0 1) sc26H))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= sc26G 1))
(assert (<= sc26H 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (<= (str.len var27G) 1))
(assert (<= (str.len var27H) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= (str.++ preG (str.++ stem27 sufG)) (str.++ unch127G (str.++ ch27G unch227G))))
(assert (= (str.++ preH (str.++ stem27 sufH)) (str.++ unch127H (str.++ ch27H unch227H))))
(assert (= "bolj3k" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= "boljHkO" (str.++ unch127B (str.++ var27B unch227B))))
(assert (= "boljHtsjX" (str.++ unch127C (str.++ var27C unch227C))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (= (ite (= ch27G var27G) 0 1) sc27G))
(assert (= (ite (= ch27H var27H) 0 1) sc27H))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= sc27G 1))
(assert (<= sc27H 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (<= (str.len var28G) 1))
(assert (<= (str.len var28H) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= (str.++ preG (str.++ stem28 sufG)) (str.++ unch128G (str.++ ch28G unch228G))))
(assert (= (str.++ preH (str.++ stem28 sufH)) (str.++ unch128H (str.++ ch28H unch228H))))
(assert (= "v2rji1" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= "v2ro1a" (str.++ unch128B (str.++ var28B unch228B))))
(assert (= "v2rozji" (str.++ unch128C (str.++ var28C unch228C))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (= (ite (= ch28G var28G) 0 1) sc28G))
(assert (= (ite (= ch28H var28H) 0 1) sc28H))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= sc28G 1))
(assert (<= sc28H 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (<= (str.len var29G) 1))
(assert (<= (str.len var29H) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= (str.++ preG (str.++ stem29 sufG)) (str.++ unch129G (str.++ ch29G unch229G))))
(assert (= (str.++ preH (str.++ stem29 sufH)) (str.++ unch129H (str.++ ch29H unch229H))))
(assert (= "k2nHk" (str.++ unch129A (str.++ var29A unch229A))))
(assert (= "k2nHka" (str.++ unch129B (str.++ var29B unch229B))))
(assert (= "k2nHtsji" (str.++ unch129C (str.++ var29C unch229C))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (= (ite (= ch29G var29G) 0 1) sc29G))
(assert (= (ite (= ch29H var29H) 0 1) sc29H))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= sc29G 1))
(assert (<= sc29H 1))
(assert (<= (str.len var30A) 1))
(assert (<= (str.len var30B) 1))
(assert (<= (str.len var30C) 1))
(assert (<= (str.len var30D) 1))
(assert (<= (str.len var30E) 1))
(assert (<= (str.len var30F) 1))
(assert (<= (str.len var30G) 1))
(assert (<= (str.len var30H) 1))
(assert (= (str.++ preA (str.++ stem30 sufA)) (str.++ unch130A (str.++ ch30A unch230A))))
(assert (= (str.++ preB (str.++ stem30 sufB)) (str.++ unch130B (str.++ ch30B unch230B))))
(assert (= (str.++ preC (str.++ stem30 sufC)) (str.++ unch130C (str.++ ch30C unch230C))))
(assert (= (str.++ preD (str.++ stem30 sufD)) (str.++ unch130D (str.++ ch30D unch230D))))
(assert (= (str.++ preE (str.++ stem30 sufE)) (str.++ unch130E (str.++ ch30E unch230E))))
(assert (= (str.++ preF (str.++ stem30 sufF)) (str.++ unch130F (str.++ ch30F unch230F))))
(assert (= (str.++ preG (str.++ stem30 sufG)) (str.++ unch130G (str.++ ch30G unch230G))))
(assert (= (str.++ preH (str.++ stem30 sufH)) (str.++ unch130H (str.++ ch30H unch230H))))
(assert (= "p2tjik" (str.++ unch130A (str.++ var30A unch230A))))
(assert (= "pot2ka" (str.++ unch130B (str.++ var30B unch230B))))
(assert (= "pot2tsji" (str.++ unch130C (str.++ var30C unch230C))))
(assert (= (str.len stem30) l30))
(assert (= (ite (= ch30A var30A) 0 1) sc30A))
(assert (= (ite (= ch30B var30B) 0 1) sc30B))
(assert (= (ite (= ch30C var30C) 0 1) sc30C))
(assert (= (ite (= ch30D var30D) 0 1) sc30D))
(assert (= (ite (= ch30E var30E) 0 1) sc30E))
(assert (= (ite (= ch30F var30F) 0 1) sc30F))
(assert (= (ite (= ch30G var30G) 0 1) sc30G))
(assert (= (ite (= ch30H var30H) 0 1) sc30H))
(assert (<= sc30A 1))
(assert (<= sc30B 1))
(assert (<= sc30C 1))
(assert (<= sc30D 1))
(assert (<= sc30E 1))
(assert (<= sc30F 1))
(assert (<= sc30G 1))
(assert (<= sc30H 1))
(assert (<= (str.len var31A) 1))
(assert (<= (str.len var31B) 1))
(assert (<= (str.len var31C) 1))
(assert (<= (str.len var31D) 1))
(assert (<= (str.len var31E) 1))
(assert (<= (str.len var31F) 1))
(assert (<= (str.len var31G) 1))
(assert (<= (str.len var31H) 1))
(assert (= (str.++ preA (str.++ stem31 sufA)) (str.++ unch131A (str.++ ch31A unch231A))))
(assert (= (str.++ preB (str.++ stem31 sufB)) (str.++ unch131B (str.++ ch31B unch231B))))
(assert (= (str.++ preC (str.++ stem31 sufC)) (str.++ unch131C (str.++ ch31C unch231C))))
(assert (= (str.++ preD (str.++ stem31 sufD)) (str.++ unch131D (str.++ ch31D unch231D))))
(assert (= (str.++ preE (str.++ stem31 sufE)) (str.++ unch131E (str.++ ch31E unch231E))))
(assert (= (str.++ preF (str.++ stem31 sufF)) (str.++ unch131F (str.++ ch31F unch231F))))
(assert (= (str.++ preG (str.++ stem31 sufG)) (str.++ unch131G (str.++ ch31G unch231G))))
(assert (= (str.++ preH (str.++ stem31 sufH)) (str.++ unch131H (str.++ ch31H unch231H))))
(assert (= "tjXk" (str.++ unch131A (str.++ var31A unch231A))))
(assert (= "t2ka" (str.++ unch131B (str.++ var31B unch231B))))
(assert (= "t2tsji" (str.++ unch131C (str.++ var31C unch231C))))
(assert (= (str.len stem31) l31))
(assert (= (ite (= ch31A var31A) 0 1) sc31A))
(assert (= (ite (= ch31B var31B) 0 1) sc31B))
(assert (= (ite (= ch31C var31C) 0 1) sc31C))
(assert (= (ite (= ch31D var31D) 0 1) sc31D))
(assert (= (ite (= ch31E var31E) 0 1) sc31E))
(assert (= (ite (= ch31F var31F) 0 1) sc31F))
(assert (= (ite (= ch31G var31G) 0 1) sc31G))
(assert (= (ite (= ch31H var31H) 0 1) sc31H))
(assert (<= sc31A 1))
(assert (<= sc31B 1))
(assert (<= sc31C 1))
(assert (<= sc31D 1))
(assert (<= sc31E 1))
(assert (<= sc31F 1))
(assert (<= sc31G 1))
(assert (<= sc31H 1))
(assert (<= (str.len var32A) 1))
(assert (<= (str.len var32B) 1))
(assert (<= (str.len var32C) 1))
(assert (<= (str.len var32D) 1))
(assert (<= (str.len var32E) 1))
(assert (<= (str.len var32F) 1))
(assert (<= (str.len var32G) 1))
(assert (<= (str.len var32H) 1))
(assert (= (str.++ preA (str.++ stem32 sufA)) (str.++ unch132A (str.++ ch32A unch232A))))
(assert (= (str.++ preB (str.++ stem32 sufB)) (str.++ unch132B (str.++ ch32B unch232B))))
(assert (= (str.++ preC (str.++ stem32 sufC)) (str.++ unch132C (str.++ ch32C unch232C))))
(assert (= (str.++ preD (str.++ stem32 sufD)) (str.++ unch132D (str.++ ch32D unch232D))))
(assert (= (str.++ preE (str.++ stem32 sufE)) (str.++ unch132E (str.++ ch32E unch232E))))
(assert (= (str.++ preF (str.++ stem32 sufF)) (str.++ unch132F (str.++ ch32F unch232F))))
(assert (= (str.++ preG (str.++ stem32 sufG)) (str.++ unch132G (str.++ ch32G unch232G))))
(assert (= (str.++ preH (str.++ stem32 sufH)) (str.++ unch132H (str.++ ch32H unch232H))))
(assert (= "kjXl" (str.++ unch132A (str.++ var32A unch232A))))
(assert (= "kolO" (str.++ unch132B (str.++ var32B unch232B))))
(assert (= "koljX" (str.++ unch132C (str.++ var32C unch232C))))
(assert (= (str.len stem32) l32))
(assert (= (ite (= ch32A var32A) 0 1) sc32A))
(assert (= (ite (= ch32B var32B) 0 1) sc32B))
(assert (= (ite (= ch32C var32C) 0 1) sc32C))
(assert (= (ite (= ch32D var32D) 0 1) sc32D))
(assert (= (ite (= ch32E var32E) 0 1) sc32E))
(assert (= (ite (= ch32F var32F) 0 1) sc32F))
(assert (= (ite (= ch32G var32G) 0 1) sc32G))
(assert (= (ite (= ch32H var32H) 0 1) sc32H))
(assert (<= sc32A 1))
(assert (<= sc32B 1))
(assert (<= sc32C 1))
(assert (<= sc32D 1))
(assert (<= sc32E 1))
(assert (<= sc32F 1))
(assert (<= sc32G 1))
(assert (<= sc32H 1))
(assert (<= (str.len var33A) 1))
(assert (<= (str.len var33B) 1))
(assert (<= (str.len var33C) 1))
(assert (<= (str.len var33D) 1))
(assert (<= (str.len var33E) 1))
(assert (<= (str.len var33F) 1))
(assert (<= (str.len var33G) 1))
(assert (<= (str.len var33H) 1))
(assert (= (str.++ preA (str.++ stem33 sufA)) (str.++ unch133A (str.++ ch33A unch233A))))
(assert (= (str.++ preB (str.++ stem33 sufB)) (str.++ unch133B (str.++ ch33B unch233B))))
(assert (= (str.++ preC (str.++ stem33 sufC)) (str.++ unch133C (str.++ ch33C unch233C))))
(assert (= (str.++ preD (str.++ stem33 sufD)) (str.++ unch133D (str.++ ch33D unch233D))))
(assert (= (str.++ preE (str.++ stem33 sufE)) (str.++ unch133E (str.++ ch33E unch233E))))
(assert (= (str.++ preF (str.++ stem33 sufF)) (str.++ unch133F (str.++ ch33F unch233F))))
(assert (= (str.++ preG (str.++ stem33 sufG)) (str.++ unch133G (str.++ ch33G unch233G))))
(assert (= (str.++ preH (str.++ stem33 sufH)) (str.++ unch133H (str.++ ch33H unch233H))))
(assert (= "kovOlj" (str.++ unch133D (str.++ var33D unch233D))))
(assert (= "kovalj3" (str.++ unch133E (str.++ var33E unch233E))))
(assert (= "koval3" (str.++ unch133F (str.++ var33F unch233F))))
(assert (= (str.len stem33) l33))
(assert (= (ite (= ch33A var33A) 0 1) sc33A))
(assert (= (ite (= ch33B var33B) 0 1) sc33B))
(assert (= (ite (= ch33C var33C) 0 1) sc33C))
(assert (= (ite (= ch33D var33D) 0 1) sc33D))
(assert (= (ite (= ch33E var33E) 0 1) sc33E))
(assert (= (ite (= ch33F var33F) 0 1) sc33F))
(assert (= (ite (= ch33G var33G) 0 1) sc33G))
(assert (= (ite (= ch33H var33H) 0 1) sc33H))
(assert (<= sc33A 1))
(assert (<= sc33B 1))
(assert (<= sc33C 1))
(assert (<= sc33D 1))
(assert (<= sc33E 1))
(assert (<= sc33F 1))
(assert (<= sc33G 1))
(assert (<= sc33H 1))
(assert (<= (str.len var34A) 1))
(assert (<= (str.len var34B) 1))
(assert (<= (str.len var34C) 1))
(assert (<= (str.len var34D) 1))
(assert (<= (str.len var34E) 1))
(assert (<= (str.len var34F) 1))
(assert (<= (str.len var34G) 1))
(assert (<= (str.len var34H) 1))
(assert (= (str.++ preA (str.++ stem34 sufA)) (str.++ unch134A (str.++ ch34A unch234A))))
(assert (= (str.++ preB (str.++ stem34 sufB)) (str.++ unch134B (str.++ ch34B unch234B))))
(assert (= (str.++ preC (str.++ stem34 sufC)) (str.++ unch134C (str.++ ch34C unch234C))))
(assert (= (str.++ preD (str.++ stem34 sufD)) (str.++ unch134D (str.++ ch34D unch234D))))
(assert (= (str.++ preE (str.++ stem34 sufE)) (str.++ unch134E (str.++ ch34E unch234E))))
(assert (= (str.++ preF (str.++ stem34 sufF)) (str.++ unch134F (str.++ ch34F unch234F))))
(assert (= (str.++ preG (str.++ stem34 sufG)) (str.++ unch134G (str.++ ch34G unch234G))))
(assert (= (str.++ preH (str.++ stem34 sufH)) (str.++ unch134H (str.++ ch34H unch234H))))
(assert (= "DmjXlj" (str.++ unch134D (str.++ var34D unch234D))))
(assert (= "Dmjilj3" (str.++ unch134E (str.++ var34E unch234E))))
(assert (= "Dmjil3" (str.++ unch134F (str.++ var34F unch234F))))
(assert (= (str.len stem34) l34))
(assert (= (ite (= ch34A var34A) 0 1) sc34A))
(assert (= (ite (= ch34B var34B) 0 1) sc34B))
(assert (= (ite (= ch34C var34C) 0 1) sc34C))
(assert (= (ite (= ch34D var34D) 0 1) sc34D))
(assert (= (ite (= ch34E var34E) 0 1) sc34E))
(assert (= (ite (= ch34F var34F) 0 1) sc34F))
(assert (= (ite (= ch34G var34G) 0 1) sc34G))
(assert (= (ite (= ch34H var34H) 0 1) sc34H))
(assert (<= sc34A 1))
(assert (<= sc34B 1))
(assert (<= sc34C 1))
(assert (<= sc34D 1))
(assert (<= sc34E 1))
(assert (<= sc34F 1))
(assert (<= sc34G 1))
(assert (<= sc34H 1))
(assert (<= (str.len var35A) 1))
(assert (<= (str.len var35B) 1))
(assert (<= (str.len var35C) 1))
(assert (<= (str.len var35D) 1))
(assert (<= (str.len var35E) 1))
(assert (<= (str.len var35F) 1))
(assert (<= (str.len var35G) 1))
(assert (<= (str.len var35H) 1))
(assert (= (str.++ preA (str.++ stem35 sufA)) (str.++ unch135A (str.++ ch35A unch235A))))
(assert (= (str.++ preB (str.++ stem35 sufB)) (str.++ unch135B (str.++ ch35B unch235B))))
(assert (= (str.++ preC (str.++ stem35 sufC)) (str.++ unch135C (str.++ ch35C unch235C))))
(assert (= (str.++ preD (str.++ stem35 sufD)) (str.++ unch135D (str.++ ch35D unch235D))))
(assert (= (str.++ preE (str.++ stem35 sufE)) (str.++ unch135E (str.++ ch35E unch235E))))
(assert (= (str.++ preF (str.++ stem35 sufF)) (str.++ unch135F (str.++ ch35F unch235F))))
(assert (= (str.++ preG (str.++ stem35 sufG)) (str.++ unch135G (str.++ ch35G unch235G))))
(assert (= (str.++ preH (str.++ stem35 sufH)) (str.++ unch135H (str.++ ch35H unch235H))))
(assert (= "kjrjXlj" (str.++ unch135D (str.++ var35D unch235D))))
(assert (= "kjrjilj3" (str.++ unch135E (str.++ var35E unch235E))))
(assert (= "kjrjil3" (str.++ unch135F (str.++ var35F unch235F))))
(assert (= (str.len stem35) l35))
(assert (= (ite (= ch35A var35A) 0 1) sc35A))
(assert (= (ite (= ch35B var35B) 0 1) sc35B))
(assert (= (ite (= ch35C var35C) 0 1) sc35C))
(assert (= (ite (= ch35D var35D) 0 1) sc35D))
(assert (= (ite (= ch35E var35E) 0 1) sc35E))
(assert (= (ite (= ch35F var35F) 0 1) sc35F))
(assert (= (ite (= ch35G var35G) 0 1) sc35G))
(assert (= (ite (= ch35H var35H) 0 1) sc35H))
(assert (<= sc35A 1))
(assert (<= sc35B 1))
(assert (<= sc35C 1))
(assert (<= sc35D 1))
(assert (<= sc35E 1))
(assert (<= sc35F 1))
(assert (<= sc35G 1))
(assert (<= sc35H 1))
(assert (<= (str.len var36A) 1))
(assert (<= (str.len var36B) 1))
(assert (<= (str.len var36C) 1))
(assert (<= (str.len var36D) 1))
(assert (<= (str.len var36E) 1))
(assert (<= (str.len var36F) 1))
(assert (<= (str.len var36G) 1))
(assert (<= (str.len var36H) 1))
(assert (= (str.++ preA (str.++ stem36 sufA)) (str.++ unch136A (str.++ ch36A unch236A))))
(assert (= (str.++ preB (str.++ stem36 sufB)) (str.++ unch136B (str.++ ch36B unch236B))))
(assert (= (str.++ preC (str.++ stem36 sufC)) (str.++ unch136C (str.++ ch36C unch236C))))
(assert (= (str.++ preD (str.++ stem36 sufD)) (str.++ unch136D (str.++ ch36D unch236D))))
(assert (= (str.++ preE (str.++ stem36 sufE)) (str.++ unch136E (str.++ ch36E unch236E))))
(assert (= (str.++ preF (str.++ stem36 sufF)) (str.++ unch136F (str.++ ch36F unch236F))))
(assert (= (str.++ preG (str.++ stem36 sufG)) (str.++ unch136G (str.++ ch36G unch236G))))
(assert (= (str.++ preH (str.++ stem36 sufH)) (str.++ unch136H (str.++ ch36H unch236H))))
(assert (= "uE3tHlj" (str.++ unch136D (str.++ var36D unch236D))))
(assert (= "uE3tHljH" (str.++ unch136E (str.++ var36E unch236E))))
(assert (= "uE3tHlH" (str.++ unch136F (str.++ var36F unch236F))))
(assert (= (str.len stem36) l36))
(assert (= (ite (= ch36A var36A) 0 1) sc36A))
(assert (= (ite (= ch36B var36B) 0 1) sc36B))
(assert (= (ite (= ch36C var36C) 0 1) sc36C))
(assert (= (ite (= ch36D var36D) 0 1) sc36D))
(assert (= (ite (= ch36E var36E) 0 1) sc36E))
(assert (= (ite (= ch36F var36F) 0 1) sc36F))
(assert (= (ite (= ch36G var36G) 0 1) sc36G))
(assert (= (ite (= ch36H var36H) 0 1) sc36H))
(assert (<= sc36A 1))
(assert (<= sc36B 1))
(assert (<= sc36C 1))
(assert (<= sc36D 1))
(assert (<= sc36E 1))
(assert (<= sc36F 1))
(assert (<= sc36G 1))
(assert (<= sc36H 1))
(assert (<= (str.len var37A) 1))
(assert (<= (str.len var37B) 1))
(assert (<= (str.len var37C) 1))
(assert (<= (str.len var37D) 1))
(assert (<= (str.len var37E) 1))
(assert (<= (str.len var37F) 1))
(assert (<= (str.len var37G) 1))
(assert (<= (str.len var37H) 1))
(assert (= (str.++ preA (str.++ stem37 sufA)) (str.++ unch137A (str.++ ch37A unch237A))))
(assert (= (str.++ preB (str.++ stem37 sufB)) (str.++ unch137B (str.++ ch37B unch237B))))
(assert (= (str.++ preC (str.++ stem37 sufC)) (str.++ unch137C (str.++ ch37C unch237C))))
(assert (= (str.++ preD (str.++ stem37 sufD)) (str.++ unch137D (str.++ ch37D unch237D))))
(assert (= (str.++ preE (str.++ stem37 sufE)) (str.++ unch137E (str.++ ch37E unch237E))))
(assert (= (str.++ preF (str.++ stem37 sufF)) (str.++ unch137F (str.++ ch37F unch237F))))
(assert (= (str.++ preG (str.++ stem37 sufG)) (str.++ unch137G (str.++ ch37G unch237G))))
(assert (= (str.++ preH (str.++ stem37 sufH)) (str.++ unch137H (str.++ ch37H unch237H))))
(assert (= "gr4bjinj" (str.++ unch137D (str.++ var37D unch237D))))
(assert (= "gr4bHnjH" (str.++ unch137E (str.++ var37E unch237E))))
(assert (= "gr4bHnH" (str.++ unch137F (str.++ var37F unch237F))))
(assert (= (str.len stem37) l37))
(assert (= (ite (= ch37A var37A) 0 1) sc37A))
(assert (= (ite (= ch37B var37B) 0 1) sc37B))
(assert (= (ite (= ch37C var37C) 0 1) sc37C))
(assert (= (ite (= ch37D var37D) 0 1) sc37D))
(assert (= (ite (= ch37E var37E) 0 1) sc37E))
(assert (= (ite (= ch37F var37F) 0 1) sc37F))
(assert (= (ite (= ch37G var37G) 0 1) sc37G))
(assert (= (ite (= ch37H var37H) 0 1) sc37H))
(assert (<= sc37A 1))
(assert (<= sc37B 1))
(assert (<= sc37C 1))
(assert (<= sc37D 1))
(assert (<= sc37E 1))
(assert (<= sc37F 1))
(assert (<= sc37G 1))
(assert (<= sc37H 1))
(assert (<= (str.len var38A) 1))
(assert (<= (str.len var38B) 1))
(assert (<= (str.len var38C) 1))
(assert (<= (str.len var38D) 1))
(assert (<= (str.len var38E) 1))
(assert (<= (str.len var38F) 1))
(assert (<= (str.len var38G) 1))
(assert (<= (str.len var38H) 1))
(assert (= (str.++ preA (str.++ stem38 sufA)) (str.++ unch138A (str.++ ch38A unch238A))))
(assert (= (str.++ preB (str.++ stem38 sufB)) (str.++ unch138B (str.++ ch38B unch238B))))
(assert (= (str.++ preC (str.++ stem38 sufC)) (str.++ unch138C (str.++ ch38C unch238C))))
(assert (= (str.++ preD (str.++ stem38 sufD)) (str.++ unch138D (str.++ ch38D unch238D))))
(assert (= (str.++ preE (str.++ stem38 sufE)) (str.++ unch138E (str.++ ch38E unch238E))))
(assert (= (str.++ preF (str.++ stem38 sufF)) (str.++ unch138F (str.++ ch38F unch238F))))
(assert (= (str.++ preG (str.++ stem38 sufG)) (str.++ unch138G (str.++ ch38G unch238G))))
(assert (= (str.++ preH (str.++ stem38 sufH)) (str.++ unch138H (str.++ ch38H unch238H))))
(assert (= "2lHnj" (str.++ unch138D (str.++ var38D unch238D))))
(assert (= "2lHnjH" (str.++ unch138E (str.++ var38E unch238E))))
(assert (= "2lHnH" (str.++ unch138F (str.++ var38F unch238F))))
(assert (= (str.len stem38) l38))
(assert (= (ite (= ch38A var38A) 0 1) sc38A))
(assert (= (ite (= ch38B var38B) 0 1) sc38B))
(assert (= (ite (= ch38C var38C) 0 1) sc38C))
(assert (= (ite (= ch38D var38D) 0 1) sc38D))
(assert (= (ite (= ch38E var38E) 0 1) sc38E))
(assert (= (ite (= ch38F var38F) 0 1) sc38F))
(assert (= (ite (= ch38G var38G) 0 1) sc38G))
(assert (= (ite (= ch38H var38H) 0 1) sc38H))
(assert (<= sc38A 1))
(assert (<= sc38B 1))
(assert (<= sc38C 1))
(assert (<= sc38D 1))
(assert (<= sc38E 1))
(assert (<= sc38F 1))
(assert (<= sc38G 1))
(assert (<= sc38H 1))
(assert (<= (str.len var39A) 1))
(assert (<= (str.len var39B) 1))
(assert (<= (str.len var39C) 1))
(assert (<= (str.len var39D) 1))
(assert (<= (str.len var39E) 1))
(assert (<= (str.len var39F) 1))
(assert (<= (str.len var39G) 1))
(assert (<= (str.len var39H) 1))
(assert (= (str.++ preA (str.++ stem39 sufA)) (str.++ unch139A (str.++ ch39A unch239A))))
(assert (= (str.++ preB (str.++ stem39 sufB)) (str.++ unch139B (str.++ ch39B unch239B))))
(assert (= (str.++ preC (str.++ stem39 sufC)) (str.++ unch139C (str.++ ch39C unch239C))))
(assert (= (str.++ preD (str.++ stem39 sufD)) (str.++ unch139D (str.++ ch39D unch239D))))
(assert (= (str.++ preE (str.++ stem39 sufE)) (str.++ unch139E (str.++ ch39E unch239E))))
(assert (= (str.++ preF (str.++ stem39 sufF)) (str.++ unch139F (str.++ ch39F unch239F))))
(assert (= (str.++ preG (str.++ stem39 sufG)) (str.++ unch139G (str.++ ch39G unch239G))))
(assert (= (str.++ preH (str.++ stem39 sufH)) (str.++ unch139H (str.++ ch39H unch239H))))
(assert (= "jaEjmjXnj" (str.++ unch139D (str.++ var39D unch239D))))
(assert (= "jaEm4njH" (str.++ unch139E (str.++ var39E unch239E))))
(assert (= "jaEm4nH" (str.++ unch139F (str.++ var39F unch239F))))
(assert (= (str.len stem39) l39))
(assert (= (ite (= ch39A var39A) 0 1) sc39A))
(assert (= (ite (= ch39B var39B) 0 1) sc39B))
(assert (= (ite (= ch39C var39C) 0 1) sc39C))
(assert (= (ite (= ch39D var39D) 0 1) sc39D))
(assert (= (ite (= ch39E var39E) 0 1) sc39E))
(assert (= (ite (= ch39F var39F) 0 1) sc39F))
(assert (= (ite (= ch39G var39G) 0 1) sc39G))
(assert (= (ite (= ch39H var39H) 0 1) sc39H))
(assert (<= sc39A 1))
(assert (<= sc39B 1))
(assert (<= sc39C 1))
(assert (<= sc39D 1))
(assert (<= sc39E 1))
(assert (<= sc39F 1))
(assert (<= sc39G 1))
(assert (<= sc39H 1))
(assert (<= (str.len var40A) 1))
(assert (<= (str.len var40B) 1))
(assert (<= (str.len var40C) 1))
(assert (<= (str.len var40D) 1))
(assert (<= (str.len var40E) 1))
(assert (<= (str.len var40F) 1))
(assert (<= (str.len var40G) 1))
(assert (<= (str.len var40H) 1))
(assert (= (str.++ preA (str.++ stem40 sufA)) (str.++ unch140A (str.++ ch40A unch240A))))
(assert (= (str.++ preB (str.++ stem40 sufB)) (str.++ unch140B (str.++ ch40B unch240B))))
(assert (= (str.++ preC (str.++ stem40 sufC)) (str.++ unch140C (str.++ ch40C unch240C))))
(assert (= (str.++ preD (str.++ stem40 sufD)) (str.++ unch140D (str.++ ch40D unch240D))))
(assert (= (str.++ preE (str.++ stem40 sufE)) (str.++ unch140E (str.++ ch40E unch240E))))
(assert (= (str.++ preF (str.++ stem40 sufF)) (str.++ unch140F (str.++ ch40F unch240F))))
(assert (= (str.++ preG (str.++ stem40 sufG)) (str.++ unch140G (str.++ ch40G unch240G))))
(assert (= (str.++ preH (str.++ stem40 sufH)) (str.++ unch140H (str.++ ch40H unch240H))))
(assert (= "jOsjinj" (str.++ unch140D (str.++ var40D unch240D))))
(assert (= "jOsHnjH" (str.++ unch140E (str.++ var40E unch240E))))
(assert (= "jOsHnH" (str.++ unch140F (str.++ var40F unch240F))))
(assert (= (str.len stem40) l40))
(assert (= (ite (= ch40A var40A) 0 1) sc40A))
(assert (= (ite (= ch40B var40B) 0 1) sc40B))
(assert (= (ite (= ch40C var40C) 0 1) sc40C))
(assert (= (ite (= ch40D var40D) 0 1) sc40D))
(assert (= (ite (= ch40E var40E) 0 1) sc40E))
(assert (= (ite (= ch40F var40F) 0 1) sc40F))
(assert (= (ite (= ch40G var40G) 0 1) sc40G))
(assert (= (ite (= ch40H var40H) 0 1) sc40H))
(assert (<= sc40A 1))
(assert (<= sc40B 1))
(assert (<= sc40C 1))
(assert (<= sc40D 1))
(assert (<= sc40E 1))
(assert (<= sc40F 1))
(assert (<= sc40G 1))
(assert (<= sc40H 1))
(assert (<= (str.len var41A) 1))
(assert (<= (str.len var41B) 1))
(assert (<= (str.len var41C) 1))
(assert (<= (str.len var41D) 1))
(assert (<= (str.len var41E) 1))
(assert (<= (str.len var41F) 1))
(assert (<= (str.len var41G) 1))
(assert (<= (str.len var41H) 1))
(assert (= (str.++ preA (str.++ stem41 sufA)) (str.++ unch141A (str.++ ch41A unch241A))))
(assert (= (str.++ preB (str.++ stem41 sufB)) (str.++ unch141B (str.++ ch41B unch241B))))
(assert (= (str.++ preC (str.++ stem41 sufC)) (str.++ unch141C (str.++ ch41C unch241C))))
(assert (= (str.++ preD (str.++ stem41 sufD)) (str.++ unch141D (str.++ ch41D unch241D))))
(assert (= (str.++ preE (str.++ stem41 sufE)) (str.++ unch141E (str.++ ch41E unch241E))))
(assert (= (str.++ preF (str.++ stem41 sufF)) (str.++ unch141F (str.++ ch41F unch241F))))
(assert (= (str.++ preG (str.++ stem41 sufG)) (str.++ unch141G (str.++ ch41G unch241G))))
(assert (= (str.++ preH (str.++ stem41 sufH)) (str.++ unch141H (str.++ ch41H unch241H))))
(assert (= "zj3kj" (str.++ unch141D (str.++ var41D unch241D))))
(assert (= "zj3kjH" (str.++ unch141E (str.++ var41E unch241E))))
(assert (= "zj3tH" (str.++ unch141F (str.++ var41F unch241F))))
(assert (= (str.len stem41) l41))
(assert (= (ite (= ch41A var41A) 0 1) sc41A))
(assert (= (ite (= ch41B var41B) 0 1) sc41B))
(assert (= (ite (= ch41C var41C) 0 1) sc41C))
(assert (= (ite (= ch41D var41D) 0 1) sc41D))
(assert (= (ite (= ch41E var41E) 0 1) sc41E))
(assert (= (ite (= ch41F var41F) 0 1) sc41F))
(assert (= (ite (= ch41G var41G) 0 1) sc41G))
(assert (= (ite (= ch41H var41H) 0 1) sc41H))
(assert (<= sc41A 1))
(assert (<= sc41B 1))
(assert (<= sc41C 1))
(assert (<= sc41D 1))
(assert (<= sc41E 1))
(assert (<= sc41F 1))
(assert (<= sc41G 1))
(assert (<= sc41H 1))
(assert (<= (str.len var42A) 1))
(assert (<= (str.len var42B) 1))
(assert (<= (str.len var42C) 1))
(assert (<= (str.len var42D) 1))
(assert (<= (str.len var42E) 1))
(assert (<= (str.len var42F) 1))
(assert (<= (str.len var42G) 1))
(assert (<= (str.len var42H) 1))
(assert (= (str.++ preA (str.++ stem42 sufA)) (str.++ unch142A (str.++ ch42A unch242A))))
(assert (= (str.++ preB (str.++ stem42 sufB)) (str.++ unch142B (str.++ ch42B unch242B))))
(assert (= (str.++ preC (str.++ stem42 sufC)) (str.++ unch142C (str.++ ch42C unch242C))))
(assert (= (str.++ preD (str.++ stem42 sufD)) (str.++ unch142D (str.++ ch42D unch242D))))
(assert (= (str.++ preE (str.++ stem42 sufE)) (str.++ unch142E (str.++ ch42E unch242E))))
(assert (= (str.++ preF (str.++ stem42 sufF)) (str.++ unch142F (str.++ ch42F unch242F))))
(assert (= (str.++ preG (str.++ stem42 sufG)) (str.++ unch142G (str.++ ch42G unch242G))))
(assert (= (str.++ preH (str.++ stem42 sufH)) (str.++ unch142H (str.++ ch42H unch242H))))
(assert (= "mOsjkj" (str.++ unch142G (str.++ var42G unch242G))))
(assert (= "mOstH" (str.++ unch142H (str.++ var42H unch242H))))
(assert (= (str.len stem42) l42))
(assert (= (ite (= ch42A var42A) 0 1) sc42A))
(assert (= (ite (= ch42B var42B) 0 1) sc42B))
(assert (= (ite (= ch42C var42C) 0 1) sc42C))
(assert (= (ite (= ch42D var42D) 0 1) sc42D))
(assert (= (ite (= ch42E var42E) 0 1) sc42E))
(assert (= (ite (= ch42F var42F) 0 1) sc42F))
(assert (= (ite (= ch42G var42G) 0 1) sc42G))
(assert (= (ite (= ch42H var42H) 0 1) sc42H))
(assert (<= sc42A 1))
(assert (<= sc42B 1))
(assert (<= sc42C 1))
(assert (<= sc42D 1))
(assert (<= sc42E 1))
(assert (<= sc42F 1))
(assert (<= sc42G 1))
(assert (<= sc42H 1))
(assert (<= (str.len var43A) 1))
(assert (<= (str.len var43B) 1))
(assert (<= (str.len var43C) 1))
(assert (<= (str.len var43D) 1))
(assert (<= (str.len var43E) 1))
(assert (<= (str.len var43F) 1))
(assert (<= (str.len var43G) 1))
(assert (<= (str.len var43H) 1))
(assert (= (str.++ preA (str.++ stem43 sufA)) (str.++ unch143A (str.++ ch43A unch243A))))
(assert (= (str.++ preB (str.++ stem43 sufB)) (str.++ unch143B (str.++ ch43B unch243B))))
(assert (= (str.++ preC (str.++ stem43 sufC)) (str.++ unch143C (str.++ ch43C unch243C))))
(assert (= (str.++ preD (str.++ stem43 sufD)) (str.++ unch143D (str.++ ch43D unch243D))))
(assert (= (str.++ preE (str.++ stem43 sufE)) (str.++ unch143E (str.++ ch43E unch243E))))
(assert (= (str.++ preF (str.++ stem43 sufF)) (str.++ unch143F (str.++ ch43F unch243F))))
(assert (= (str.++ preG (str.++ stem43 sufG)) (str.++ unch143G (str.++ ch43G unch243G))))
(assert (= (str.++ preH (str.++ stem43 sufH)) (str.++ unch143H (str.++ ch43H unch243H))))
(assert (= "sjmjXrjkj" (str.++ unch143G (str.++ var43G unch243G))))
(assert (= "sm4rtH" (str.++ unch143H (str.++ var43H unch243H))))
(assert (= (str.len stem43) l43))
(assert (= (ite (= ch43A var43A) 0 1) sc43A))
(assert (= (ite (= ch43B var43B) 0 1) sc43B))
(assert (= (ite (= ch43C var43C) 0 1) sc43C))
(assert (= (ite (= ch43D var43D) 0 1) sc43D))
(assert (= (ite (= ch43E var43E) 0 1) sc43E))
(assert (= (ite (= ch43F var43F) 0 1) sc43F))
(assert (= (ite (= ch43G var43G) 0 1) sc43G))
(assert (= (ite (= ch43H var43H) 0 1) sc43H))
(assert (<= sc43A 1))
(assert (<= sc43B 1))
(assert (<= sc43C 1))
(assert (<= sc43D 1))
(assert (<= sc43E 1))
(assert (<= sc43F 1))
(assert (<= sc43G 1))
(assert (<= sc43H 1))
(assert (<= (str.len var44A) 1))
(assert (<= (str.len var44B) 1))
(assert (<= (str.len var44C) 1))
(assert (<= (str.len var44D) 1))
(assert (<= (str.len var44E) 1))
(assert (<= (str.len var44F) 1))
(assert (<= (str.len var44G) 1))
(assert (<= (str.len var44H) 1))
(assert (= (str.++ preA (str.++ stem44 sufA)) (str.++ unch144A (str.++ ch44A unch244A))))
(assert (= (str.++ preB (str.++ stem44 sufB)) (str.++ unch144B (str.++ ch44B unch244B))))
(assert (= (str.++ preC (str.++ stem44 sufC)) (str.++ unch144C (str.++ ch44C unch244C))))
(assert (= (str.++ preD (str.++ stem44 sufD)) (str.++ unch144D (str.++ ch44D unch244D))))
(assert (= (str.++ preE (str.++ stem44 sufE)) (str.++ unch144E (str.++ ch44E unch244E))))
(assert (= (str.++ preF (str.++ stem44 sufF)) (str.++ unch144F (str.++ ch44F unch244F))))
(assert (= (str.++ preG (str.++ stem44 sufG)) (str.++ unch144G (str.++ ch44G unch244G))))
(assert (= (str.++ preH (str.++ stem44 sufH)) (str.++ unch144H (str.++ ch44H unch244H))))
(assert (= "vjXsjkj" (str.++ unch144G (str.++ var44G unch244G))))
(assert (= "vjXstH" (str.++ unch144H (str.++ var44H unch244H))))
(assert (= (str.len stem44) l44))
(assert (= (ite (= ch44A var44A) 0 1) sc44A))
(assert (= (ite (= ch44B var44B) 0 1) sc44B))
(assert (= (ite (= ch44C var44C) 0 1) sc44C))
(assert (= (ite (= ch44D var44D) 0 1) sc44D))
(assert (= (ite (= ch44E var44E) 0 1) sc44E))
(assert (= (ite (= ch44F var44F) 0 1) sc44F))
(assert (= (ite (= ch44G var44G) 0 1) sc44G))
(assert (= (ite (= ch44H var44H) 0 1) sc44H))
(assert (<= sc44A 1))
(assert (<= sc44B 1))
(assert (<= sc44C 1))
(assert (<= sc44D 1))
(assert (<= sc44E 1))
(assert (<= sc44F 1))
(assert (<= sc44G 1))
(assert (<= sc44H 1))
(assert (<= (str.len var45A) 1))
(assert (<= (str.len var45B) 1))
(assert (<= (str.len var45C) 1))
(assert (<= (str.len var45D) 1))
(assert (<= (str.len var45E) 1))
(assert (<= (str.len var45F) 1))
(assert (<= (str.len var45G) 1))
(assert (<= (str.len var45H) 1))
(assert (= (str.++ preA (str.++ stem45 sufA)) (str.++ unch145A (str.++ ch45A unch245A))))
(assert (= (str.++ preB (str.++ stem45 sufB)) (str.++ unch145B (str.++ ch45B unch245B))))
(assert (= (str.++ preC (str.++ stem45 sufC)) (str.++ unch145C (str.++ ch45C unch245C))))
(assert (= (str.++ preD (str.++ stem45 sufD)) (str.++ unch145D (str.++ ch45D unch245D))))
(assert (= (str.++ preE (str.++ stem45 sufE)) (str.++ unch145E (str.++ ch45E unch245E))))
(assert (= (str.++ preF (str.++ stem45 sufF)) (str.++ unch145F (str.++ ch45F unch245F))))
(assert (= (str.++ preG (str.++ stem45 sufG)) (str.++ unch145G (str.++ ch45G unch245G))))
(assert (= (str.++ preH (str.++ stem45 sufH)) (str.++ unch145H (str.++ ch45H unch245H))))
(assert (= "rOgjisjkj" (str.++ unch145G (str.++ var45G unch245G))))
(assert (= "rOdostH" (str.++ unch145H (str.++ var45H unch245H))))
(assert (= (str.len stem45) l45))
(assert (= (ite (= ch45A var45A) 0 1) sc45A))
(assert (= (ite (= ch45B var45B) 0 1) sc45B))
(assert (= (ite (= ch45C var45C) 0 1) sc45C))
(assert (= (ite (= ch45D var45D) 0 1) sc45D))
(assert (= (ite (= ch45E var45E) 0 1) sc45E))
(assert (= (ite (= ch45F var45F) 0 1) sc45F))
(assert (= (ite (= ch45G var45G) 0 1) sc45G))
(assert (= (ite (= ch45H var45H) 0 1) sc45H))
(assert (<= sc45A 1))
(assert (<= sc45B 1))
(assert (<= sc45C 1))
(assert (<= sc45D 1))
(assert (<= sc45E 1))
(assert (<= sc45F 1))
(assert (<= sc45G 1))
(assert (<= sc45H 1))
(assert (<= (str.len var46A) 1))
(assert (<= (str.len var46B) 1))
(assert (<= (str.len var46C) 1))
(assert (<= (str.len var46D) 1))
(assert (<= (str.len var46E) 1))
(assert (<= (str.len var46F) 1))
(assert (<= (str.len var46G) 1))
(assert (<= (str.len var46H) 1))
(assert (= (str.++ preA (str.++ stem46 sufA)) (str.++ unch146A (str.++ ch46A unch246A))))
(assert (= (str.++ preB (str.++ stem46 sufB)) (str.++ unch146B (str.++ ch46B unch246B))))
(assert (= (str.++ preC (str.++ stem46 sufC)) (str.++ unch146C (str.++ ch46C unch246C))))
(assert (= (str.++ preD (str.++ stem46 sufD)) (str.++ unch146D (str.++ ch46D unch246D))))
(assert (= (str.++ preE (str.++ stem46 sufE)) (str.++ unch146E (str.++ ch46E unch246E))))
(assert (= (str.++ preF (str.++ stem46 sufF)) (str.++ unch146F (str.++ ch46F unch246F))))
(assert (= (str.++ preG (str.++ stem46 sufG)) (str.++ unch146G (str.++ ch46G unch246G))))
(assert (= (str.++ preH (str.++ stem46 sufH)) (str.++ unch146H (str.++ ch46H unch246H))))
(assert (= "sjXlj" (str.++ unch146G (str.++ var46G unch246G))))
(assert (= "s2lH" (str.++ unch146H (str.++ var46H unch246H))))
(assert (= (str.len stem46) l46))
(assert (= (ite (= ch46A var46A) 0 1) sc46A))
(assert (= (ite (= ch46B var46B) 0 1) sc46B))
(assert (= (ite (= ch46C var46C) 0 1) sc46C))
(assert (= (ite (= ch46D var46D) 0 1) sc46D))
(assert (= (ite (= ch46E var46E) 0 1) sc46E))
(assert (= (ite (= ch46F var46F) 0 1) sc46F))
(assert (= (ite (= ch46G var46G) 0 1) sc46G))
(assert (= (ite (= ch46H var46H) 0 1) sc46H))
(assert (<= sc46A 1))
(assert (<= sc46B 1))
(assert (<= sc46C 1))
(assert (<= sc46D 1))
(assert (<= sc46E 1))
(assert (<= sc46F 1))
(assert (<= sc46G 1))
(assert (<= sc46H 1))
(assert (<= (str.len var47A) 1))
(assert (<= (str.len var47B) 1))
(assert (<= (str.len var47C) 1))
(assert (<= (str.len var47D) 1))
(assert (<= (str.len var47E) 1))
(assert (<= (str.len var47F) 1))
(assert (<= (str.len var47G) 1))
(assert (<= (str.len var47H) 1))
(assert (= (str.++ preA (str.++ stem47 sufA)) (str.++ unch147A (str.++ ch47A unch247A))))
(assert (= (str.++ preB (str.++ stem47 sufB)) (str.++ unch147B (str.++ ch47B unch247B))))
(assert (= (str.++ preC (str.++ stem47 sufC)) (str.++ unch147C (str.++ ch47C unch247C))))
(assert (= (str.++ preD (str.++ stem47 sufD)) (str.++ unch147D (str.++ ch47D unch247D))))
(assert (= (str.++ preE (str.++ stem47 sufE)) (str.++ unch147E (str.++ ch47E unch247E))))
(assert (= (str.++ preF (str.++ stem47 sufF)) (str.++ unch147F (str.++ ch47F unch247F))))
(assert (= (str.++ preG (str.++ stem47 sufG)) (str.++ unch147G (str.++ ch47G unch247G))))
(assert (= (str.++ preH (str.++ stem47 sufH)) (str.++ unch147H (str.++ ch47H unch247H))))
(assert (= "p2Bjisjkj" (str.++ unch147G (str.++ var47G unch247G))))
(assert (= "p2BHstH" (str.++ unch147H (str.++ var47H unch247H))))
(assert (= (str.len stem47) l47))
(assert (= (ite (= ch47A var47A) 0 1) sc47A))
(assert (= (ite (= ch47B var47B) 0 1) sc47B))
(assert (= (ite (= ch47C var47C) 0 1) sc47C))
(assert (= (ite (= ch47D var47D) 0 1) sc47D))
(assert (= (ite (= ch47E var47E) 0 1) sc47E))
(assert (= (ite (= ch47F var47F) 0 1) sc47F))
(assert (= (ite (= ch47G var47G) 0 1) sc47G))
(assert (= (ite (= ch47H var47H) 0 1) sc47H))
(assert (<= sc47A 1))
(assert (<= sc47B 1))
(assert (<= sc47C 1))
(assert (<= sc47D 1))
(assert (<= sc47E 1))
(assert (<= sc47F 1))
(assert (<= sc47G 1))
(assert (<= sc47H 1))
(assert (<= (str.len var48A) 1))
(assert (<= (str.len var48B) 1))
(assert (<= (str.len var48C) 1))
(assert (<= (str.len var48D) 1))
(assert (<= (str.len var48E) 1))
(assert (<= (str.len var48F) 1))
(assert (<= (str.len var48G) 1))
(assert (<= (str.len var48H) 1))
(assert (= (str.++ preA (str.++ stem48 sufA)) (str.++ unch148A (str.++ ch48A unch248A))))
(assert (= (str.++ preB (str.++ stem48 sufB)) (str.++ unch148B (str.++ ch48B unch248B))))
(assert (= (str.++ preC (str.++ stem48 sufC)) (str.++ unch148C (str.++ ch48C unch248C))))
(assert (= (str.++ preD (str.++ stem48 sufD)) (str.++ unch148D (str.++ ch48D unch248D))))
(assert (= (str.++ preE (str.++ stem48 sufE)) (str.++ unch148E (str.++ ch48E unch248E))))
(assert (= (str.++ preF (str.++ stem48 sufF)) (str.++ unch148F (str.++ ch48F unch248F))))
(assert (= (str.++ preG (str.++ stem48 sufG)) (str.++ unch148G (str.++ ch48G unch248G))))
(assert (= (str.++ preH (str.++ stem48 sufH)) (str.++ unch148H (str.++ ch48H unch248H))))
(assert (= "zOmjikj" (str.++ unch148G (str.++ var48G unch248G))))
(assert (= "zOmHtH" (str.++ unch148H (str.++ var48H unch248H))))
(assert (= (str.len stem48) l48))
(assert (= (ite (= ch48A var48A) 0 1) sc48A))
(assert (= (ite (= ch48B var48B) 0 1) sc48B))
(assert (= (ite (= ch48C var48C) 0 1) sc48C))
(assert (= (ite (= ch48D var48D) 0 1) sc48D))
(assert (= (ite (= ch48E var48E) 0 1) sc48E))
(assert (= (ite (= ch48F var48F) 0 1) sc48F))
(assert (= (ite (= ch48G var48G) 0 1) sc48G))
(assert (= (ite (= ch48H var48H) 0 1) sc48H))
(assert (<= sc48A 1))
(assert (<= sc48B 1))
(assert (<= sc48C 1))
(assert (<= sc48D 1))
(assert (<= sc48E 1))
(assert (<= sc48F 1))
(assert (<= sc48G 1))
(assert (<= sc48H 1))
(assert (<= (str.len var49A) 1))
(assert (<= (str.len var49B) 1))
(assert (<= (str.len var49C) 1))
(assert (<= (str.len var49D) 1))
(assert (<= (str.len var49E) 1))
(assert (<= (str.len var49F) 1))
(assert (<= (str.len var49G) 1))
(assert (<= (str.len var49H) 1))
(assert (= (str.++ preA (str.++ stem49 sufA)) (str.++ unch149A (str.++ ch49A unch249A))))
(assert (= (str.++ preB (str.++ stem49 sufB)) (str.++ unch149B (str.++ ch49B unch249B))))
(assert (= (str.++ preC (str.++ stem49 sufC)) (str.++ unch149C (str.++ ch49C unch249C))))
(assert (= (str.++ preD (str.++ stem49 sufD)) (str.++ unch149D (str.++ ch49D unch249D))))
(assert (= (str.++ preE (str.++ stem49 sufE)) (str.++ unch149E (str.++ ch49E unch249E))))
(assert (= (str.++ preF (str.++ stem49 sufF)) (str.++ unch149F (str.++ ch49F unch249F))))
(assert (= (str.++ preG (str.++ stem49 sufG)) (str.++ unch149G (str.++ ch49G unch249G))))
(assert (= (str.++ preH (str.++ stem49 sufH)) (str.++ unch149H (str.++ ch49H unch249H))))
(assert (= "skOtHrjkj" (str.++ unch149G (str.++ var49G unch249G))))
(assert (= "skOtHrtH" (str.++ unch149H (str.++ var49H unch249H))))
(assert (= (str.len stem49) l49))
(assert (= (ite (= ch49A var49A) 0 1) sc49A))
(assert (= (ite (= ch49B var49B) 0 1) sc49B))
(assert (= (ite (= ch49C var49C) 0 1) sc49C))
(assert (= (ite (= ch49D var49D) 0 1) sc49D))
(assert (= (ite (= ch49E var49E) 0 1) sc49E))
(assert (= (ite (= ch49F var49F) 0 1) sc49F))
(assert (= (ite (= ch49G var49G) 0 1) sc49G))
(assert (= (ite (= ch49H var49H) 0 1) sc49H))
(assert (<= sc49A 1))
(assert (<= sc49B 1))
(assert (<= sc49C 1))
(assert (<= sc49D 1))
(assert (<= sc49E 1))
(assert (<= sc49F 1))
(assert (<= sc49G 1))
(assert (<= sc49H 1))
(assert (<= (str.len var50A) 1))
(assert (<= (str.len var50B) 1))
(assert (<= (str.len var50C) 1))
(assert (<= (str.len var50D) 1))
(assert (<= (str.len var50E) 1))
(assert (<= (str.len var50F) 1))
(assert (<= (str.len var50G) 1))
(assert (<= (str.len var50H) 1))
(assert (= (str.++ preA (str.++ stem50 sufA)) (str.++ unch150A (str.++ ch50A unch250A))))
(assert (= (str.++ preB (str.++ stem50 sufB)) (str.++ unch150B (str.++ ch50B unch250B))))
(assert (= (str.++ preC (str.++ stem50 sufC)) (str.++ unch150C (str.++ ch50C unch250C))))
(assert (= (str.++ preD (str.++ stem50 sufD)) (str.++ unch150D (str.++ ch50D unch250D))))
(assert (= (str.++ preE (str.++ stem50 sufE)) (str.++ unch150E (str.++ ch50E unch250E))))
(assert (= (str.++ preF (str.++ stem50 sufF)) (str.++ unch150F (str.++ ch50F unch250F))))
(assert (= (str.++ preG (str.++ stem50 sufG)) (str.++ unch150G (str.++ ch50G unch250G))))
(assert (= (str.++ preH (str.++ stem50 sufH)) (str.++ unch150H (str.++ ch50H unch250H))))
(assert (= "kjXsjkj" (str.++ unch150G (str.++ var50G unch250G))))
(assert (= "k2stH" (str.++ unch150H (str.++ var50H unch250H))))
(assert (= (str.len stem50) l50))
(assert (= (ite (= ch50A var50A) 0 1) sc50A))
(assert (= (ite (= ch50B var50B) 0 1) sc50B))
(assert (= (ite (= ch50C var50C) 0 1) sc50C))
(assert (= (ite (= ch50D var50D) 0 1) sc50D))
(assert (= (ite (= ch50E var50E) 0 1) sc50E))
(assert (= (ite (= ch50F var50F) 0 1) sc50F))
(assert (= (ite (= ch50G var50G) 0 1) sc50G))
(assert (= (ite (= ch50H var50H) 0 1) sc50H))
(assert (<= sc50A 1))
(assert (<= sc50B 1))
(assert (<= sc50C 1))
(assert (<= sc50D 1))
(assert (<= sc50E 1))
(assert (<= sc50F 1))
(assert (<= sc50G 1))
(assert (<= sc50H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      sc7G
      sc7H
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      sc8G
      sc8H
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      sc9G
      sc9H
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      sc10G
      sc10H
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      sc11G
      sc11H
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      sc12G
      sc12H
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      sc13G
      sc13H
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      sc14G
      sc14H
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      sc15G
      sc15H
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      sc16G
      sc16H
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      sc17G
      sc17H
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      sc18G
      sc18H
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      sc19G
      sc19H
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      sc20G
      sc20H
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      sc21G
      sc21H
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      sc22G
      sc22H
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      sc23G
      sc23H
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      sc24G
      sc24H
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      sc25G
      sc25H
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      sc26G
      sc26H
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      sc27G
      sc27H
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      sc28G
      sc28H
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      sc29G
      sc29H
      0
      sc30A
      sc30B
      sc30C
      sc30D
      sc30E
      sc30F
      sc30G
      sc30H
      0
      sc31A
      sc31B
      sc31C
      sc31D
      sc31E
      sc31F
      sc31G
      sc31H
      0
      sc32A
      sc32B
      sc32C
      sc32D
      sc32E
      sc32F
      sc32G
      sc32H
      0
      sc33A
      sc33B
      sc33C
      sc33D
      sc33E
      sc33F
      sc33G
      sc33H
      0
      sc34A
      sc34B
      sc34C
      sc34D
      sc34E
      sc34F
      sc34G
      sc34H
      0
      sc35A
      sc35B
      sc35C
      sc35D
      sc35E
      sc35F
      sc35G
      sc35H
      0
      sc36A
      sc36B
      sc36C
      sc36D
      sc36E
      sc36F
      sc36G
      sc36H
      0
      sc37A
      sc37B
      sc37C
      sc37D
      sc37E
      sc37F
      sc37G
      sc37H
      0
      sc38A
      sc38B
      sc38C
      sc38D
      sc38E
      sc38F
      sc38G
      sc38H
      0
      sc39A
      sc39B
      sc39C
      sc39D
      sc39E
      sc39F
      sc39G
      sc39H
      0
      sc40A
      sc40B
      sc40C
      sc40D
      sc40E
      sc40F
      sc40G
      sc40H
      0
      sc41A
      sc41B
      sc41C
      sc41D
      sc41E
      sc41F
      sc41G
      sc41H
      0
      sc42A
      sc42B
      sc42C
      sc42D
      sc42E
      sc42F
      sc42G
      sc42H
      0
      sc43A
      sc43B
      sc43C
      sc43D
      sc43E
      sc43F
      sc43G
      sc43H
      0
      sc44A
      sc44B
      sc44C
      sc44D
      sc44E
      sc44F
      sc44G
      sc44H
      0
      sc45A
      sc45B
      sc45C
      sc45D
      sc45E
      sc45F
      sc45G
      sc45H
      0
      sc46A
      sc46B
      sc46C
      sc46D
      sc46E
      sc46F
      sc46G
      sc46H
      0
      sc47A
      sc47B
      sc47C
      sc47D
      sc47E
      sc47F
      sc47G
      sc47H
      0
      sc48A
      sc48B
      sc48C
      sc48D
      sc48E
      sc48F
      sc48G
      sc48H
      0
      sc49A
      sc49B
      sc49C
      sc49D
      sc49E
      sc49F
      sc49G
      sc49H
      0
      sc50A
      sc50B
      sc50C
      sc50D
      sc50E
      sc50F
      sc50G
      sc50H)
   9))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun var7G () String)
(declare-fun var7H () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun unch27G () String)
(declare-fun ch7G () String)
(declare-fun unch17G () String)
(declare-fun unch27H () String)
(declare-fun ch7H () String)
(declare-fun unch17H () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun sc7G () Int)
(declare-fun sc7H () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun var8G () String)
(declare-fun var8H () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun unch28G () String)
(declare-fun ch8G () String)
(declare-fun unch18G () String)
(declare-fun unch28H () String)
(declare-fun ch8H () String)
(declare-fun unch18H () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun sc8G () Int)
(declare-fun sc8H () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun var9G () String)
(declare-fun var9H () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun unch29G () String)
(declare-fun ch9G () String)
(declare-fun unch19G () String)
(declare-fun unch29H () String)
(declare-fun ch9H () String)
(declare-fun unch19H () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun sc9G () Int)
(declare-fun sc9H () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun var10G () String)
(declare-fun var10H () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun unch210G () String)
(declare-fun ch10G () String)
(declare-fun unch110G () String)
(declare-fun unch210H () String)
(declare-fun ch10H () String)
(declare-fun unch110H () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun sc10G () Int)
(declare-fun sc10H () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun var11G () String)
(declare-fun var11H () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun unch211G () String)
(declare-fun ch11G () String)
(declare-fun unch111G () String)
(declare-fun unch211H () String)
(declare-fun ch11H () String)
(declare-fun unch111H () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun sc11G () Int)
(declare-fun sc11H () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun var12G () String)
(declare-fun var12H () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun unch212G () String)
(declare-fun ch12G () String)
(declare-fun unch112G () String)
(declare-fun unch212H () String)
(declare-fun ch12H () String)
(declare-fun unch112H () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun sc12G () Int)
(declare-fun sc12H () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun var13G () String)
(declare-fun var13H () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun unch213G () String)
(declare-fun ch13G () String)
(declare-fun unch113G () String)
(declare-fun unch213H () String)
(declare-fun ch13H () String)
(declare-fun unch113H () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun sc13G () Int)
(declare-fun sc13H () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun var14G () String)
(declare-fun var14H () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun unch214G () String)
(declare-fun ch14G () String)
(declare-fun unch114G () String)
(declare-fun unch214H () String)
(declare-fun ch14H () String)
(declare-fun unch114H () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun sc14G () Int)
(declare-fun sc14H () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun var15G () String)
(declare-fun var15H () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun unch215G () String)
(declare-fun ch15G () String)
(declare-fun unch115G () String)
(declare-fun unch215H () String)
(declare-fun ch15H () String)
(declare-fun unch115H () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun sc15G () Int)
(declare-fun sc15H () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun var16G () String)
(declare-fun var16H () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun unch216G () String)
(declare-fun ch16G () String)
(declare-fun unch116G () String)
(declare-fun unch216H () String)
(declare-fun ch16H () String)
(declare-fun unch116H () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun sc16G () Int)
(declare-fun sc16H () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun var17G () String)
(declare-fun var17H () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun unch217G () String)
(declare-fun ch17G () String)
(declare-fun unch117G () String)
(declare-fun unch217H () String)
(declare-fun ch17H () String)
(declare-fun unch117H () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun sc17G () Int)
(declare-fun sc17H () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun var18G () String)
(declare-fun var18H () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun unch218G () String)
(declare-fun ch18G () String)
(declare-fun unch118G () String)
(declare-fun unch218H () String)
(declare-fun ch18H () String)
(declare-fun unch118H () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun sc18G () Int)
(declare-fun sc18H () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun var19G () String)
(declare-fun var19H () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun unch219G () String)
(declare-fun ch19G () String)
(declare-fun unch119G () String)
(declare-fun unch219H () String)
(declare-fun ch19H () String)
(declare-fun unch119H () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun sc19G () Int)
(declare-fun sc19H () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun var20G () String)
(declare-fun var20H () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun unch220G () String)
(declare-fun ch20G () String)
(declare-fun unch120G () String)
(declare-fun unch220H () String)
(declare-fun ch20H () String)
(declare-fun unch120H () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun sc20G () Int)
(declare-fun sc20H () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun var21G () String)
(declare-fun var21H () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun unch221G () String)
(declare-fun ch21G () String)
(declare-fun unch121G () String)
(declare-fun unch221H () String)
(declare-fun ch21H () String)
(declare-fun unch121H () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun sc21G () Int)
(declare-fun sc21H () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun var22G () String)
(declare-fun var22H () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun unch222G () String)
(declare-fun ch22G () String)
(declare-fun unch122G () String)
(declare-fun unch222H () String)
(declare-fun ch22H () String)
(declare-fun unch122H () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun sc22G () Int)
(declare-fun sc22H () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun var23G () String)
(declare-fun var23H () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun unch223G () String)
(declare-fun ch23G () String)
(declare-fun unch123G () String)
(declare-fun unch223H () String)
(declare-fun ch23H () String)
(declare-fun unch123H () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun sc23G () Int)
(declare-fun sc23H () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun var24G () String)
(declare-fun var24H () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun unch224G () String)
(declare-fun ch24G () String)
(declare-fun unch124G () String)
(declare-fun unch224H () String)
(declare-fun ch24H () String)
(declare-fun unch124H () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun sc24G () Int)
(declare-fun sc24H () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun var25G () String)
(declare-fun var25H () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun unch225G () String)
(declare-fun ch25G () String)
(declare-fun unch125G () String)
(declare-fun unch225H () String)
(declare-fun ch25H () String)
(declare-fun unch125H () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun sc25G () Int)
(declare-fun sc25H () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun var26G () String)
(declare-fun var26H () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun unch226G () String)
(declare-fun ch26G () String)
(declare-fun unch126G () String)
(declare-fun unch226H () String)
(declare-fun ch26H () String)
(declare-fun unch126H () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun sc26G () Int)
(declare-fun sc26H () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun var27G () String)
(declare-fun var27H () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun unch227G () String)
(declare-fun ch27G () String)
(declare-fun unch127G () String)
(declare-fun unch227H () String)
(declare-fun ch27H () String)
(declare-fun unch127H () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun sc27G () Int)
(declare-fun sc27H () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun var28G () String)
(declare-fun var28H () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun unch228G () String)
(declare-fun ch28G () String)
(declare-fun unch128G () String)
(declare-fun unch228H () String)
(declare-fun ch28H () String)
(declare-fun unch128H () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun sc28G () Int)
(declare-fun sc28H () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun var29G () String)
(declare-fun var29H () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun unch229G () String)
(declare-fun ch29G () String)
(declare-fun unch129G () String)
(declare-fun unch229H () String)
(declare-fun ch29H () String)
(declare-fun unch129H () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun sc29G () Int)
(declare-fun sc29H () Int)
(declare-fun var30A () String)
(declare-fun var30B () String)
(declare-fun var30C () String)
(declare-fun var30D () String)
(declare-fun var30E () String)
(declare-fun var30F () String)
(declare-fun var30G () String)
(declare-fun var30H () String)
(declare-fun unch230A () String)
(declare-fun ch30A () String)
(declare-fun unch130A () String)
(declare-fun stem30 () String)
(declare-fun unch230B () String)
(declare-fun ch30B () String)
(declare-fun unch130B () String)
(declare-fun unch230C () String)
(declare-fun ch30C () String)
(declare-fun unch130C () String)
(declare-fun unch230D () String)
(declare-fun ch30D () String)
(declare-fun unch130D () String)
(declare-fun unch230E () String)
(declare-fun ch30E () String)
(declare-fun unch130E () String)
(declare-fun unch230F () String)
(declare-fun ch30F () String)
(declare-fun unch130F () String)
(declare-fun unch230G () String)
(declare-fun ch30G () String)
(declare-fun unch130G () String)
(declare-fun unch230H () String)
(declare-fun ch30H () String)
(declare-fun unch130H () String)
(declare-fun l30 () Int)
(declare-fun sc30A () Int)
(declare-fun sc30B () Int)
(declare-fun sc30C () Int)
(declare-fun sc30D () Int)
(declare-fun sc30E () Int)
(declare-fun sc30F () Int)
(declare-fun sc30G () Int)
(declare-fun sc30H () Int)
(declare-fun var31A () String)
(declare-fun var31B () String)
(declare-fun var31C () String)
(declare-fun var31D () String)
(declare-fun var31E () String)
(declare-fun var31F () String)
(declare-fun var31G () String)
(declare-fun var31H () String)
(declare-fun unch231A () String)
(declare-fun ch31A () String)
(declare-fun unch131A () String)
(declare-fun stem31 () String)
(declare-fun unch231B () String)
(declare-fun ch31B () String)
(declare-fun unch131B () String)
(declare-fun unch231C () String)
(declare-fun ch31C () String)
(declare-fun unch131C () String)
(declare-fun unch231D () String)
(declare-fun ch31D () String)
(declare-fun unch131D () String)
(declare-fun unch231E () String)
(declare-fun ch31E () String)
(declare-fun unch131E () String)
(declare-fun unch231F () String)
(declare-fun ch31F () String)
(declare-fun unch131F () String)
(declare-fun unch231G () String)
(declare-fun ch31G () String)
(declare-fun unch131G () String)
(declare-fun unch231H () String)
(declare-fun ch31H () String)
(declare-fun unch131H () String)
(declare-fun l31 () Int)
(declare-fun sc31A () Int)
(declare-fun sc31B () Int)
(declare-fun sc31C () Int)
(declare-fun sc31D () Int)
(declare-fun sc31E () Int)
(declare-fun sc31F () Int)
(declare-fun sc31G () Int)
(declare-fun sc31H () Int)
(declare-fun var32A () String)
(declare-fun var32B () String)
(declare-fun var32C () String)
(declare-fun var32D () String)
(declare-fun var32E () String)
(declare-fun var32F () String)
(declare-fun var32G () String)
(declare-fun var32H () String)
(declare-fun unch232A () String)
(declare-fun ch32A () String)
(declare-fun unch132A () String)
(declare-fun stem32 () String)
(declare-fun unch232B () String)
(declare-fun ch32B () String)
(declare-fun unch132B () String)
(declare-fun unch232C () String)
(declare-fun ch32C () String)
(declare-fun unch132C () String)
(declare-fun unch232D () String)
(declare-fun ch32D () String)
(declare-fun unch132D () String)
(declare-fun unch232E () String)
(declare-fun ch32E () String)
(declare-fun unch132E () String)
(declare-fun unch232F () String)
(declare-fun ch32F () String)
(declare-fun unch132F () String)
(declare-fun unch232G () String)
(declare-fun ch32G () String)
(declare-fun unch132G () String)
(declare-fun unch232H () String)
(declare-fun ch32H () String)
(declare-fun unch132H () String)
(declare-fun l32 () Int)
(declare-fun sc32A () Int)
(declare-fun sc32B () Int)
(declare-fun sc32C () Int)
(declare-fun sc32D () Int)
(declare-fun sc32E () Int)
(declare-fun sc32F () Int)
(declare-fun sc32G () Int)
(declare-fun sc32H () Int)
(declare-fun var33A () String)
(declare-fun var33B () String)
(declare-fun var33C () String)
(declare-fun var33D () String)
(declare-fun var33E () String)
(declare-fun var33F () String)
(declare-fun var33G () String)
(declare-fun var33H () String)
(declare-fun unch233A () String)
(declare-fun ch33A () String)
(declare-fun unch133A () String)
(declare-fun stem33 () String)
(declare-fun unch233B () String)
(declare-fun ch33B () String)
(declare-fun unch133B () String)
(declare-fun unch233C () String)
(declare-fun ch33C () String)
(declare-fun unch133C () String)
(declare-fun unch233D () String)
(declare-fun ch33D () String)
(declare-fun unch133D () String)
(declare-fun unch233E () String)
(declare-fun ch33E () String)
(declare-fun unch133E () String)
(declare-fun unch233F () String)
(declare-fun ch33F () String)
(declare-fun unch133F () String)
(declare-fun unch233G () String)
(declare-fun ch33G () String)
(declare-fun unch133G () String)
(declare-fun unch233H () String)
(declare-fun ch33H () String)
(declare-fun unch133H () String)
(declare-fun l33 () Int)
(declare-fun sc33A () Int)
(declare-fun sc33B () Int)
(declare-fun sc33C () Int)
(declare-fun sc33D () Int)
(declare-fun sc33E () Int)
(declare-fun sc33F () Int)
(declare-fun sc33G () Int)
(declare-fun sc33H () Int)
(declare-fun var34A () String)
(declare-fun var34B () String)
(declare-fun var34C () String)
(declare-fun var34D () String)
(declare-fun var34E () String)
(declare-fun var34F () String)
(declare-fun var34G () String)
(declare-fun var34H () String)
(declare-fun unch234A () String)
(declare-fun ch34A () String)
(declare-fun unch134A () String)
(declare-fun stem34 () String)
(declare-fun unch234B () String)
(declare-fun ch34B () String)
(declare-fun unch134B () String)
(declare-fun unch234C () String)
(declare-fun ch34C () String)
(declare-fun unch134C () String)
(declare-fun unch234D () String)
(declare-fun ch34D () String)
(declare-fun unch134D () String)
(declare-fun unch234E () String)
(declare-fun ch34E () String)
(declare-fun unch134E () String)
(declare-fun unch234F () String)
(declare-fun ch34F () String)
(declare-fun unch134F () String)
(declare-fun unch234G () String)
(declare-fun ch34G () String)
(declare-fun unch134G () String)
(declare-fun unch234H () String)
(declare-fun ch34H () String)
(declare-fun unch134H () String)
(declare-fun l34 () Int)
(declare-fun sc34A () Int)
(declare-fun sc34B () Int)
(declare-fun sc34C () Int)
(declare-fun sc34D () Int)
(declare-fun sc34E () Int)
(declare-fun sc34F () Int)
(declare-fun sc34G () Int)
(declare-fun sc34H () Int)
(declare-fun var35A () String)
(declare-fun var35B () String)
(declare-fun var35C () String)
(declare-fun var35D () String)
(declare-fun var35E () String)
(declare-fun var35F () String)
(declare-fun var35G () String)
(declare-fun var35H () String)
(declare-fun unch235A () String)
(declare-fun ch35A () String)
(declare-fun unch135A () String)
(declare-fun stem35 () String)
(declare-fun unch235B () String)
(declare-fun ch35B () String)
(declare-fun unch135B () String)
(declare-fun unch235C () String)
(declare-fun ch35C () String)
(declare-fun unch135C () String)
(declare-fun unch235D () String)
(declare-fun ch35D () String)
(declare-fun unch135D () String)
(declare-fun unch235E () String)
(declare-fun ch35E () String)
(declare-fun unch135E () String)
(declare-fun unch235F () String)
(declare-fun ch35F () String)
(declare-fun unch135F () String)
(declare-fun unch235G () String)
(declare-fun ch35G () String)
(declare-fun unch135G () String)
(declare-fun unch235H () String)
(declare-fun ch35H () String)
(declare-fun unch135H () String)
(declare-fun l35 () Int)
(declare-fun sc35A () Int)
(declare-fun sc35B () Int)
(declare-fun sc35C () Int)
(declare-fun sc35D () Int)
(declare-fun sc35E () Int)
(declare-fun sc35F () Int)
(declare-fun sc35G () Int)
(declare-fun sc35H () Int)
(declare-fun var36A () String)
(declare-fun var36B () String)
(declare-fun var36C () String)
(declare-fun var36D () String)
(declare-fun var36E () String)
(declare-fun var36F () String)
(declare-fun var36G () String)
(declare-fun var36H () String)
(declare-fun unch236A () String)
(declare-fun ch36A () String)
(declare-fun unch136A () String)
(declare-fun stem36 () String)
(declare-fun unch236B () String)
(declare-fun ch36B () String)
(declare-fun unch136B () String)
(declare-fun unch236C () String)
(declare-fun ch36C () String)
(declare-fun unch136C () String)
(declare-fun unch236D () String)
(declare-fun ch36D () String)
(declare-fun unch136D () String)
(declare-fun unch236E () String)
(declare-fun ch36E () String)
(declare-fun unch136E () String)
(declare-fun unch236F () String)
(declare-fun ch36F () String)
(declare-fun unch136F () String)
(declare-fun unch236G () String)
(declare-fun ch36G () String)
(declare-fun unch136G () String)
(declare-fun unch236H () String)
(declare-fun ch36H () String)
(declare-fun unch136H () String)
(declare-fun l36 () Int)
(declare-fun sc36A () Int)
(declare-fun sc36B () Int)
(declare-fun sc36C () Int)
(declare-fun sc36D () Int)
(declare-fun sc36E () Int)
(declare-fun sc36F () Int)
(declare-fun sc36G () Int)
(declare-fun sc36H () Int)
(declare-fun var37A () String)
(declare-fun var37B () String)
(declare-fun var37C () String)
(declare-fun var37D () String)
(declare-fun var37E () String)
(declare-fun var37F () String)
(declare-fun var37G () String)
(declare-fun var37H () String)
(declare-fun unch237A () String)
(declare-fun ch37A () String)
(declare-fun unch137A () String)
(declare-fun stem37 () String)
(declare-fun unch237B () String)
(declare-fun ch37B () String)
(declare-fun unch137B () String)
(declare-fun unch237C () String)
(declare-fun ch37C () String)
(declare-fun unch137C () String)
(declare-fun unch237D () String)
(declare-fun ch37D () String)
(declare-fun unch137D () String)
(declare-fun unch237E () String)
(declare-fun ch37E () String)
(declare-fun unch137E () String)
(declare-fun unch237F () String)
(declare-fun ch37F () String)
(declare-fun unch137F () String)
(declare-fun unch237G () String)
(declare-fun ch37G () String)
(declare-fun unch137G () String)
(declare-fun unch237H () String)
(declare-fun ch37H () String)
(declare-fun unch137H () String)
(declare-fun l37 () Int)
(declare-fun sc37A () Int)
(declare-fun sc37B () Int)
(declare-fun sc37C () Int)
(declare-fun sc37D () Int)
(declare-fun sc37E () Int)
(declare-fun sc37F () Int)
(declare-fun sc37G () Int)
(declare-fun sc37H () Int)
(declare-fun var38A () String)
(declare-fun var38B () String)
(declare-fun var38C () String)
(declare-fun var38D () String)
(declare-fun var38E () String)
(declare-fun var38F () String)
(declare-fun var38G () String)
(declare-fun var38H () String)
(declare-fun unch238A () String)
(declare-fun ch38A () String)
(declare-fun unch138A () String)
(declare-fun stem38 () String)
(declare-fun unch238B () String)
(declare-fun ch38B () String)
(declare-fun unch138B () String)
(declare-fun unch238C () String)
(declare-fun ch38C () String)
(declare-fun unch138C () String)
(declare-fun unch238D () String)
(declare-fun ch38D () String)
(declare-fun unch138D () String)
(declare-fun unch238E () String)
(declare-fun ch38E () String)
(declare-fun unch138E () String)
(declare-fun unch238F () String)
(declare-fun ch38F () String)
(declare-fun unch138F () String)
(declare-fun unch238G () String)
(declare-fun ch38G () String)
(declare-fun unch138G () String)
(declare-fun unch238H () String)
(declare-fun ch38H () String)
(declare-fun unch138H () String)
(declare-fun l38 () Int)
(declare-fun sc38A () Int)
(declare-fun sc38B () Int)
(declare-fun sc38C () Int)
(declare-fun sc38D () Int)
(declare-fun sc38E () Int)
(declare-fun sc38F () Int)
(declare-fun sc38G () Int)
(declare-fun sc38H () Int)
(declare-fun var39A () String)
(declare-fun var39B () String)
(declare-fun var39C () String)
(declare-fun var39D () String)
(declare-fun var39E () String)
(declare-fun var39F () String)
(declare-fun var39G () String)
(declare-fun var39H () String)
(declare-fun unch239A () String)
(declare-fun ch39A () String)
(declare-fun unch139A () String)
(declare-fun stem39 () String)
(declare-fun unch239B () String)
(declare-fun ch39B () String)
(declare-fun unch139B () String)
(declare-fun unch239C () String)
(declare-fun ch39C () String)
(declare-fun unch139C () String)
(declare-fun unch239D () String)
(declare-fun ch39D () String)
(declare-fun unch139D () String)
(declare-fun unch239E () String)
(declare-fun ch39E () String)
(declare-fun unch139E () String)
(declare-fun unch239F () String)
(declare-fun ch39F () String)
(declare-fun unch139F () String)
(declare-fun unch239G () String)
(declare-fun ch39G () String)
(declare-fun unch139G () String)
(declare-fun unch239H () String)
(declare-fun ch39H () String)
(declare-fun unch139H () String)
(declare-fun l39 () Int)
(declare-fun sc39A () Int)
(declare-fun sc39B () Int)
(declare-fun sc39C () Int)
(declare-fun sc39D () Int)
(declare-fun sc39E () Int)
(declare-fun sc39F () Int)
(declare-fun sc39G () Int)
(declare-fun sc39H () Int)
(declare-fun var40A () String)
(declare-fun var40B () String)
(declare-fun var40C () String)
(declare-fun var40D () String)
(declare-fun var40E () String)
(declare-fun var40F () String)
(declare-fun var40G () String)
(declare-fun var40H () String)
(declare-fun unch240A () String)
(declare-fun ch40A () String)
(declare-fun unch140A () String)
(declare-fun stem40 () String)
(declare-fun unch240B () String)
(declare-fun ch40B () String)
(declare-fun unch140B () String)
(declare-fun unch240C () String)
(declare-fun ch40C () String)
(declare-fun unch140C () String)
(declare-fun unch240D () String)
(declare-fun ch40D () String)
(declare-fun unch140D () String)
(declare-fun unch240E () String)
(declare-fun ch40E () String)
(declare-fun unch140E () String)
(declare-fun unch240F () String)
(declare-fun ch40F () String)
(declare-fun unch140F () String)
(declare-fun unch240G () String)
(declare-fun ch40G () String)
(declare-fun unch140G () String)
(declare-fun unch240H () String)
(declare-fun ch40H () String)
(declare-fun unch140H () String)
(declare-fun l40 () Int)
(declare-fun sc40A () Int)
(declare-fun sc40B () Int)
(declare-fun sc40C () Int)
(declare-fun sc40D () Int)
(declare-fun sc40E () Int)
(declare-fun sc40F () Int)
(declare-fun sc40G () Int)
(declare-fun sc40H () Int)
(declare-fun var41A () String)
(declare-fun var41B () String)
(declare-fun var41C () String)
(declare-fun var41D () String)
(declare-fun var41E () String)
(declare-fun var41F () String)
(declare-fun var41G () String)
(declare-fun var41H () String)
(declare-fun unch241A () String)
(declare-fun ch41A () String)
(declare-fun unch141A () String)
(declare-fun stem41 () String)
(declare-fun unch241B () String)
(declare-fun ch41B () String)
(declare-fun unch141B () String)
(declare-fun unch241C () String)
(declare-fun ch41C () String)
(declare-fun unch141C () String)
(declare-fun unch241D () String)
(declare-fun ch41D () String)
(declare-fun unch141D () String)
(declare-fun unch241E () String)
(declare-fun ch41E () String)
(declare-fun unch141E () String)
(declare-fun unch241F () String)
(declare-fun ch41F () String)
(declare-fun unch141F () String)
(declare-fun unch241G () String)
(declare-fun ch41G () String)
(declare-fun unch141G () String)
(declare-fun unch241H () String)
(declare-fun ch41H () String)
(declare-fun unch141H () String)
(declare-fun l41 () Int)
(declare-fun sc41A () Int)
(declare-fun sc41B () Int)
(declare-fun sc41C () Int)
(declare-fun sc41D () Int)
(declare-fun sc41E () Int)
(declare-fun sc41F () Int)
(declare-fun sc41G () Int)
(declare-fun sc41H () Int)
(declare-fun var42A () String)
(declare-fun var42B () String)
(declare-fun var42C () String)
(declare-fun var42D () String)
(declare-fun var42E () String)
(declare-fun var42F () String)
(declare-fun var42G () String)
(declare-fun var42H () String)
(declare-fun unch242A () String)
(declare-fun ch42A () String)
(declare-fun unch142A () String)
(declare-fun stem42 () String)
(declare-fun unch242B () String)
(declare-fun ch42B () String)
(declare-fun unch142B () String)
(declare-fun unch242C () String)
(declare-fun ch42C () String)
(declare-fun unch142C () String)
(declare-fun unch242D () String)
(declare-fun ch42D () String)
(declare-fun unch142D () String)
(declare-fun unch242E () String)
(declare-fun ch42E () String)
(declare-fun unch142E () String)
(declare-fun unch242F () String)
(declare-fun ch42F () String)
(declare-fun unch142F () String)
(declare-fun unch242G () String)
(declare-fun ch42G () String)
(declare-fun unch142G () String)
(declare-fun unch242H () String)
(declare-fun ch42H () String)
(declare-fun unch142H () String)
(declare-fun l42 () Int)
(declare-fun sc42A () Int)
(declare-fun sc42B () Int)
(declare-fun sc42C () Int)
(declare-fun sc42D () Int)
(declare-fun sc42E () Int)
(declare-fun sc42F () Int)
(declare-fun sc42G () Int)
(declare-fun sc42H () Int)
(declare-fun var43A () String)
(declare-fun var43B () String)
(declare-fun var43C () String)
(declare-fun var43D () String)
(declare-fun var43E () String)
(declare-fun var43F () String)
(declare-fun var43G () String)
(declare-fun var43H () String)
(declare-fun unch243A () String)
(declare-fun ch43A () String)
(declare-fun unch143A () String)
(declare-fun stem43 () String)
(declare-fun unch243B () String)
(declare-fun ch43B () String)
(declare-fun unch143B () String)
(declare-fun unch243C () String)
(declare-fun ch43C () String)
(declare-fun unch143C () String)
(declare-fun unch243D () String)
(declare-fun ch43D () String)
(declare-fun unch143D () String)
(declare-fun unch243E () String)
(declare-fun ch43E () String)
(declare-fun unch143E () String)
(declare-fun unch243F () String)
(declare-fun ch43F () String)
(declare-fun unch143F () String)
(declare-fun unch243G () String)
(declare-fun ch43G () String)
(declare-fun unch143G () String)
(declare-fun unch243H () String)
(declare-fun ch43H () String)
(declare-fun unch143H () String)
(declare-fun l43 () Int)
(declare-fun sc43A () Int)
(declare-fun sc43B () Int)
(declare-fun sc43C () Int)
(declare-fun sc43D () Int)
(declare-fun sc43E () Int)
(declare-fun sc43F () Int)
(declare-fun sc43G () Int)
(declare-fun sc43H () Int)
(declare-fun var44A () String)
(declare-fun var44B () String)
(declare-fun var44C () String)
(declare-fun var44D () String)
(declare-fun var44E () String)
(declare-fun var44F () String)
(declare-fun var44G () String)
(declare-fun var44H () String)
(declare-fun unch244A () String)
(declare-fun ch44A () String)
(declare-fun unch144A () String)
(declare-fun stem44 () String)
(declare-fun unch244B () String)
(declare-fun ch44B () String)
(declare-fun unch144B () String)
(declare-fun unch244C () String)
(declare-fun ch44C () String)
(declare-fun unch144C () String)
(declare-fun unch244D () String)
(declare-fun ch44D () String)
(declare-fun unch144D () String)
(declare-fun unch244E () String)
(declare-fun ch44E () String)
(declare-fun unch144E () String)
(declare-fun unch244F () String)
(declare-fun ch44F () String)
(declare-fun unch144F () String)
(declare-fun unch244G () String)
(declare-fun ch44G () String)
(declare-fun unch144G () String)
(declare-fun unch244H () String)
(declare-fun ch44H () String)
(declare-fun unch144H () String)
(declare-fun l44 () Int)
(declare-fun sc44A () Int)
(declare-fun sc44B () Int)
(declare-fun sc44C () Int)
(declare-fun sc44D () Int)
(declare-fun sc44E () Int)
(declare-fun sc44F () Int)
(declare-fun sc44G () Int)
(declare-fun sc44H () Int)
(declare-fun var45A () String)
(declare-fun var45B () String)
(declare-fun var45C () String)
(declare-fun var45D () String)
(declare-fun var45E () String)
(declare-fun var45F () String)
(declare-fun var45G () String)
(declare-fun var45H () String)
(declare-fun unch245A () String)
(declare-fun ch45A () String)
(declare-fun unch145A () String)
(declare-fun stem45 () String)
(declare-fun unch245B () String)
(declare-fun ch45B () String)
(declare-fun unch145B () String)
(declare-fun unch245C () String)
(declare-fun ch45C () String)
(declare-fun unch145C () String)
(declare-fun unch245D () String)
(declare-fun ch45D () String)
(declare-fun unch145D () String)
(declare-fun unch245E () String)
(declare-fun ch45E () String)
(declare-fun unch145E () String)
(declare-fun unch245F () String)
(declare-fun ch45F () String)
(declare-fun unch145F () String)
(declare-fun unch245G () String)
(declare-fun ch45G () String)
(declare-fun unch145G () String)
(declare-fun unch245H () String)
(declare-fun ch45H () String)
(declare-fun unch145H () String)
(declare-fun l45 () Int)
(declare-fun sc45A () Int)
(declare-fun sc45B () Int)
(declare-fun sc45C () Int)
(declare-fun sc45D () Int)
(declare-fun sc45E () Int)
(declare-fun sc45F () Int)
(declare-fun sc45G () Int)
(declare-fun sc45H () Int)
(declare-fun var46A () String)
(declare-fun var46B () String)
(declare-fun var46C () String)
(declare-fun var46D () String)
(declare-fun var46E () String)
(declare-fun var46F () String)
(declare-fun var46G () String)
(declare-fun var46H () String)
(declare-fun unch246A () String)
(declare-fun ch46A () String)
(declare-fun unch146A () String)
(declare-fun stem46 () String)
(declare-fun unch246B () String)
(declare-fun ch46B () String)
(declare-fun unch146B () String)
(declare-fun unch246C () String)
(declare-fun ch46C () String)
(declare-fun unch146C () String)
(declare-fun unch246D () String)
(declare-fun ch46D () String)
(declare-fun unch146D () String)
(declare-fun unch246E () String)
(declare-fun ch46E () String)
(declare-fun unch146E () String)
(declare-fun unch246F () String)
(declare-fun ch46F () String)
(declare-fun unch146F () String)
(declare-fun unch246G () String)
(declare-fun ch46G () String)
(declare-fun unch146G () String)
(declare-fun unch246H () String)
(declare-fun ch46H () String)
(declare-fun unch146H () String)
(declare-fun l46 () Int)
(declare-fun sc46A () Int)
(declare-fun sc46B () Int)
(declare-fun sc46C () Int)
(declare-fun sc46D () Int)
(declare-fun sc46E () Int)
(declare-fun sc46F () Int)
(declare-fun sc46G () Int)
(declare-fun sc46H () Int)
(declare-fun var47A () String)
(declare-fun var47B () String)
(declare-fun var47C () String)
(declare-fun var47D () String)
(declare-fun var47E () String)
(declare-fun var47F () String)
(declare-fun var47G () String)
(declare-fun var47H () String)
(declare-fun unch247A () String)
(declare-fun ch47A () String)
(declare-fun unch147A () String)
(declare-fun stem47 () String)
(declare-fun unch247B () String)
(declare-fun ch47B () String)
(declare-fun unch147B () String)
(declare-fun unch247C () String)
(declare-fun ch47C () String)
(declare-fun unch147C () String)
(declare-fun unch247D () String)
(declare-fun ch47D () String)
(declare-fun unch147D () String)
(declare-fun unch247E () String)
(declare-fun ch47E () String)
(declare-fun unch147E () String)
(declare-fun unch247F () String)
(declare-fun ch47F () String)
(declare-fun unch147F () String)
(declare-fun unch247G () String)
(declare-fun ch47G () String)
(declare-fun unch147G () String)
(declare-fun unch247H () String)
(declare-fun ch47H () String)
(declare-fun unch147H () String)
(declare-fun l47 () Int)
(declare-fun sc47A () Int)
(declare-fun sc47B () Int)
(declare-fun sc47C () Int)
(declare-fun sc47D () Int)
(declare-fun sc47E () Int)
(declare-fun sc47F () Int)
(declare-fun sc47G () Int)
(declare-fun sc47H () Int)
(declare-fun var48A () String)
(declare-fun var48B () String)
(declare-fun var48C () String)
(declare-fun var48D () String)
(declare-fun var48E () String)
(declare-fun var48F () String)
(declare-fun var48G () String)
(declare-fun var48H () String)
(declare-fun unch248A () String)
(declare-fun ch48A () String)
(declare-fun unch148A () String)
(declare-fun stem48 () String)
(declare-fun unch248B () String)
(declare-fun ch48B () String)
(declare-fun unch148B () String)
(declare-fun unch248C () String)
(declare-fun ch48C () String)
(declare-fun unch148C () String)
(declare-fun unch248D () String)
(declare-fun ch48D () String)
(declare-fun unch148D () String)
(declare-fun unch248E () String)
(declare-fun ch48E () String)
(declare-fun unch148E () String)
(declare-fun unch248F () String)
(declare-fun ch48F () String)
(declare-fun unch148F () String)
(declare-fun unch248G () String)
(declare-fun ch48G () String)
(declare-fun unch148G () String)
(declare-fun unch248H () String)
(declare-fun ch48H () String)
(declare-fun unch148H () String)
(declare-fun l48 () Int)
(declare-fun sc48A () Int)
(declare-fun sc48B () Int)
(declare-fun sc48C () Int)
(declare-fun sc48D () Int)
(declare-fun sc48E () Int)
(declare-fun sc48F () Int)
(declare-fun sc48G () Int)
(declare-fun sc48H () Int)
(declare-fun var49A () String)
(declare-fun var49B () String)
(declare-fun var49C () String)
(declare-fun var49D () String)
(declare-fun var49E () String)
(declare-fun var49F () String)
(declare-fun var49G () String)
(declare-fun var49H () String)
(declare-fun unch249A () String)
(declare-fun ch49A () String)
(declare-fun unch149A () String)
(declare-fun stem49 () String)
(declare-fun unch249B () String)
(declare-fun ch49B () String)
(declare-fun unch149B () String)
(declare-fun unch249C () String)
(declare-fun ch49C () String)
(declare-fun unch149C () String)
(declare-fun unch249D () String)
(declare-fun ch49D () String)
(declare-fun unch149D () String)
(declare-fun unch249E () String)
(declare-fun ch49E () String)
(declare-fun unch149E () String)
(declare-fun unch249F () String)
(declare-fun ch49F () String)
(declare-fun unch149F () String)
(declare-fun unch249G () String)
(declare-fun ch49G () String)
(declare-fun unch149G () String)
(declare-fun unch249H () String)
(declare-fun ch49H () String)
(declare-fun unch149H () String)
(declare-fun l49 () Int)
(declare-fun sc49A () Int)
(declare-fun sc49B () Int)
(declare-fun sc49C () Int)
(declare-fun sc49D () Int)
(declare-fun sc49E () Int)
(declare-fun sc49F () Int)
(declare-fun sc49G () Int)
(declare-fun sc49H () Int)
(declare-fun var50A () String)
(declare-fun var50B () String)
(declare-fun var50C () String)
(declare-fun var50D () String)
(declare-fun var50E () String)
(declare-fun var50F () String)
(declare-fun var50G () String)
(declare-fun var50H () String)
(declare-fun unch250A () String)
(declare-fun ch50A () String)
(declare-fun unch150A () String)
(declare-fun stem50 () String)
(declare-fun unch250B () String)
(declare-fun ch50B () String)
(declare-fun unch150B () String)
(declare-fun unch250C () String)
(declare-fun ch50C () String)
(declare-fun unch150C () String)
(declare-fun unch250D () String)
(declare-fun ch50D () String)
(declare-fun unch150D () String)
(declare-fun unch250E () String)
(declare-fun ch50E () String)
(declare-fun unch150E () String)
(declare-fun unch250F () String)
(declare-fun ch50F () String)
(declare-fun unch150F () String)
(declare-fun unch250G () String)
(declare-fun ch50G () String)
(declare-fun unch150G () String)
(declare-fun unch250H () String)
(declare-fun ch50H () String)
(declare-fun unch150H () String)
(declare-fun l50 () Int)
(declare-fun sc50A () Int)
(declare-fun sc50B () Int)
(declare-fun sc50C () Int)
(declare-fun sc50D () Int)
(declare-fun sc50E () Int)
(declare-fun sc50F () Int)
(declare-fun sc50G () Int)
(declare-fun sc50H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "plOst" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "plastO" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "plasjkjX" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "skorZx" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "skoruxO" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "skorusjX" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "1jrjXx" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "1jrjixO" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "1jrjisjX" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "pastZx" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "pastuxO" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "pastusjX" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "mjnjZx" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "mjnjZxa" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "mjnjZsji" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "plZ1" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "plZ1a" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "plZzji" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "sjtjX1" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "st21a" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "st2zji" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (<= (str.len var7G) 1))
(assert (<= (str.len var7H) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= (str.++ preG (str.++ stem7 sufG)) (str.++ unch17G (str.++ ch7G unch27G))))
(assert (= (str.++ preH (str.++ stem7 sufH)) (str.++ unch17H (str.++ ch7H unch27H))))
(assert (= "sOk" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "sOka" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "sOtsji" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (= (ite (= ch7G var7G) 0 1) sc7G))
(assert (= (ite (= ch7H var7H) 0 1) sc7H))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= sc7G 1))
(assert (<= sc7H 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (<= (str.len var8G) 1))
(assert (<= (str.len var8H) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= (str.++ preG (str.++ stem8 sufG)) (str.++ unch18G (str.++ ch8G unch28G))))
(assert (= (str.++ preH (str.++ stem8 sufH)) (str.++ unch18H (str.++ ch8H unch28H))))
(assert (= "b3k" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "bHkO" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "bHtsjX" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (= (ite (= ch8G var8G) 0 1) sc8G))
(assert (= (ite (= ch8H var8H) 0 1) sc8H))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= sc8G 1))
(assert (<= sc8H 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (<= (str.len var9G) 1))
(assert (<= (str.len var9H) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= (str.++ preG (str.++ stem9 sufG)) (str.++ unch19G (str.++ ch9G unch29G))))
(assert (= (str.++ preH (str.++ stem9 sufH)) (str.++ unch19H (str.++ ch9H unch29H))))
(assert (= "l3st" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "lHstO" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "lHsjkjX" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (= (ite (= ch9G var9G) 0 1) sc9G))
(assert (= (ite (= ch9H var9H) 0 1) sc9H))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= sc9G 1))
(assert (<= sc9H 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (<= (str.len var10G) 1))
(assert (<= (str.len var10H) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= (str.++ preG (str.++ stem10 sufG)) (str.++ unch110G (str.++ ch10G unch210G))))
(assert (= (str.++ preH (str.++ stem10 sufH)) (str.++ unch110H (str.++ ch10H unch210H))))
(assert (= "l3st" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "l3sta" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "l3sjkji" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (= (ite (= ch10G var10G) 0 1) sc10G))
(assert (= (ite (= ch10H var10H) 0 1) sc10H))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= sc10G 1))
(assert (<= sc10H 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (<= (str.len var11G) 1))
(assert (<= (str.len var11H) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= (str.++ preG (str.++ stem11 sufG)) (str.++ unch111G (str.++ ch11G unch211G))))
(assert (= (str.++ preH (str.++ stem11 sufH)) (str.++ unch111H (str.++ ch11H unch211H))))
(assert (= "pjljXt" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "pl2ta" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "pl2kji" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (= (ite (= ch11G var11G) 0 1) sc11G))
(assert (= (ite (= ch11H var11H) 0 1) sc11H))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= sc11G 1))
(assert (<= sc11H 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (<= (str.len var12G) 1))
(assert (<= (str.len var12H) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= (str.++ preG (str.++ stem12 sufG)) (str.++ unch112G (str.++ ch12G unch212G))))
(assert (= (str.++ preH (str.++ stem12 sufH)) (str.++ unch112H (str.++ ch12H unch212H))))
(assert (= "sjmjrjXd" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "smr2da" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "smr2gji" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (= (ite (= ch12G var12G) 0 1) sc12G))
(assert (= (ite (= ch12H var12H) 0 1) sc12H))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= sc12G 1))
(assert (<= sc12H 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (<= (str.len var13G) 1))
(assert (<= (str.len var13H) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= (str.++ preG (str.++ stem13 sufG)) (str.++ unch113G (str.++ ch13G unch213G))))
(assert (= (str.++ preH (str.++ stem13 sufH)) (str.++ unch113H (str.++ ch13H unch213H))))
(assert (= "fjXst" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "fostO" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "fosjkjX" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (= (ite (= ch13G var13G) 0 1) sc13G))
(assert (= (ite (= ch13H var13H) 0 1) sc13H))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= sc13G 1))
(assert (<= sc13H 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (<= (str.len var14G) 1))
(assert (<= (str.len var14H) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= (str.++ preG (str.++ stem14 sufG)) (str.++ unch114G (str.++ ch14G unch214G))))
(assert (= (str.++ preH (str.++ stem14 sufH)) (str.++ unch114H (str.++ ch14H unch214H))))
(assert (= "mjXst" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "m2sta" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "m2sjkji" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (= (ite (= ch14G var14G) 0 1) sc14G))
(assert (= (ite (= ch14H var14H) 0 1) sc14H))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= sc14G 1))
(assert (<= sc14H 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (<= (str.len var15G) 1))
(assert (<= (str.len var15H) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= (str.++ preG (str.++ stem15 sufG)) (str.++ unch115G (str.++ ch15G unch215G))))
(assert (= (str.++ preH (str.++ stem15 sufH)) (str.++ unch115H (str.++ ch15H unch215H))))
(assert (= "ljXd" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "l4du" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "lHdZ" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (= (ite (= ch15G var15G) 0 1) sc15G))
(assert (= (ite (= ch15H var15H) 0 1) sc15H))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= sc15G 1))
(assert (<= sc15H 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (<= (str.len var16G) 1))
(assert (<= (str.len var16H) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= (str.++ preG (str.++ stem16 sufG)) (str.++ unch116G (str.++ ch16G unch216G))))
(assert (= (str.++ preH (str.++ stem16 sufH)) (str.++ unch116H (str.++ ch16H unch216H))))
(assert (= "djrjXt" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "dr2ta" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "dr2kji" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (= (ite (= ch16G var16G) 0 1) sc16G))
(assert (= (ite (= ch16H var16H) 0 1) sc16H))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= sc16G 1))
(assert (<= sc16H 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (<= (str.len var17G) 1))
(assert (<= (str.len var17H) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= (str.++ preG (str.++ stem17 sufG)) (str.++ unch117G (str.++ ch17G unch217G))))
(assert (= (str.++ preH (str.++ stem17 sufH)) (str.++ unch117H (str.++ ch17H unch217H))))
(assert (= "mjXd" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "m4du" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "mHdZ" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (= (ite (= ch17G var17G) 0 1) sc17G))
(assert (= (ite (= ch17H var17H) 0 1) sc17H))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= sc17G 1))
(assert (<= sc17H 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (<= (str.len var18G) 1))
(assert (<= (str.len var18H) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= (str.++ preG (str.++ stem18 sufG)) (str.++ unch118G (str.++ ch18G unch218G))))
(assert (= (str.++ preH (str.++ stem18 sufH)) (str.++ unch118H (str.++ ch18H unch218H))))
(assert (= "vjXl" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "volO" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "voljX" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (= (ite (= ch18G var18G) 0 1) sc18G))
(assert (= (ite (= ch18H var18H) 0 1) sc18H))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= sc18G 1))
(assert (<= sc18H 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (<= (str.len var19G) 1))
(assert (<= (str.len var19H) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= (str.++ preG (str.++ stem19 sufG)) (str.++ unch119G (str.++ ch19G unch219G))))
(assert (= (str.++ preH (str.++ stem19 sufH)) (str.++ unch119H (str.++ ch19H unch219H))))
(assert (= "vjXz" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "v2za" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "v2zji" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (= (ite (= ch19G var19G) 0 1) sc19G))
(assert (= (ite (= ch19H var19H) 0 1) sc19H))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= sc19G 1))
(assert (<= sc19H 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (<= (str.len var20G) 1))
(assert (<= (str.len var20H) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= (str.++ preG (str.++ stem20 sufG)) (str.++ unch120G (str.++ ch20G unch220G))))
(assert (= (str.++ preH (str.++ stem20 sufH)) (str.++ unch120H (str.++ ch20H unch220H))))
(assert (= "s3r" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "s3ra" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "s3rji" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (= (ite (= ch20G var20G) 0 1) sc20G))
(assert (= (ite (= ch20H var20H) 0 1) sc20H))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= sc20G 1))
(assert (<= sc20H 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (<= (str.len var21G) 1))
(assert (<= (str.len var21H) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= (str.++ preG (str.++ stem21 sufG)) (str.++ unch121G (str.++ ch21G unch221G))))
(assert (= (str.++ preH (str.++ stem21 sufH)) (str.++ unch121H (str.++ ch21H unch221H))))
(assert (= "sjnjXp" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "snopO" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "snopjX" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (= (ite (= ch21G var21G) 0 1) sc21G))
(assert (= (ite (= ch21H var21H) 0 1) sc21H))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= sc21G 1))
(assert (<= sc21H 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (<= (str.len var22G) 1))
(assert (<= (str.len var22H) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= (str.++ preG (str.++ stem22 sufG)) (str.++ unch122G (str.++ ch22G unch222G))))
(assert (= (str.++ preH (str.++ stem22 sufH)) (str.++ unch122H (str.++ ch22H unch222H))))
(assert (= "1r3b" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "1rHbO" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "1rHbjX" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (= (ite (= ch22G var22G) 0 1) sc22G))
(assert (= (ite (= ch22H var22H) 0 1) sc22H))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= sc22G 1))
(assert (<= sc22H 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (<= (str.len var23G) 1))
(assert (<= (str.len var23H) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= (str.++ preG (str.++ stem23 sufG)) (str.++ unch123G (str.++ ch23G unch223G))))
(assert (= (str.++ preH (str.++ stem23 sufH)) (str.++ unch123H (str.++ ch23H unch223H))))
(assert (= "l4bjid" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= "l4bHda" (str.++ unch123B (str.++ var23B unch223B))))
(assert (= "l4bHgji" (str.++ unch123C (str.++ var23C unch223C))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (= (ite (= ch23G var23G) 0 1) sc23G))
(assert (= (ite (= ch23H var23H) 0 1) sc23H))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= sc23G 1))
(assert (<= sc23H 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (<= (str.len var24G) 1))
(assert (<= (str.len var24H) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= (str.++ preG (str.++ stem24 sufG)) (str.++ unch124G (str.++ ch24G unch224G))))
(assert (= (str.++ preH (str.++ stem24 sufH)) (str.++ unch124H (str.++ ch24H unch224H))))
(assert (= "b4rji1" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= "b4rH1a" (str.++ unch124B (str.++ var24B unch224B))))
(assert (= "b4rHzji" (str.++ unch124C (str.++ var24C unch224C))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (= (ite (= ch24G var24G) 0 1) sc24G))
(assert (= (ite (= ch24H var24H) 0 1) sc24H))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= sc24G 1))
(assert (<= sc24H 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (<= (str.len var25G) 1))
(assert (<= (str.len var25H) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= (str.++ preG (str.++ stem25 sufG)) (str.++ unch125G (str.++ ch25G unch225G))))
(assert (= (str.++ preH (str.++ stem25 sufH)) (str.++ unch125H (str.++ ch25H unch225H))))
(assert (= "pHrjX1" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= "pHr21a" (str.++ unch125B (str.++ var25B unch225B))))
(assert (= "pHr2zji" (str.++ unch125C (str.++ var25C unch225C))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (= (ite (= ch25G var25G) 0 1) sc25G))
(assert (= (ite (= ch25H var25H) 0 1) sc25H))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= sc25G 1))
(assert (<= sc25H 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (<= (str.len var26G) 1))
(assert (<= (str.len var26H) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= (str.++ preG (str.++ stem26 sufG)) (str.++ unch126G (str.++ ch26G unch226G))))
(assert (= (str.++ preH (str.++ stem26 sufH)) (str.++ unch126H (str.++ ch26H unch226H))))
(assert (= "porjX1" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= "por21a" (str.++ unch126B (str.++ var26B unch226B))))
(assert (= "por2zji" (str.++ unch126C (str.++ var26C unch226C))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (= (ite (= ch26G var26G) 0 1) sc26G))
(assert (= (ite (= ch26H var26H) 0 1) sc26H))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= sc26G 1))
(assert (<= sc26H 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (<= (str.len var27G) 1))
(assert (<= (str.len var27H) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= (str.++ preG (str.++ stem27 sufG)) (str.++ unch127G (str.++ ch27G unch227G))))
(assert (= (str.++ preH (str.++ stem27 sufH)) (str.++ unch127H (str.++ ch27H unch227H))))
(assert (= "bolj3k" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= "boljHkO" (str.++ unch127B (str.++ var27B unch227B))))
(assert (= "boljHtsjX" (str.++ unch127C (str.++ var27C unch227C))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (= (ite (= ch27G var27G) 0 1) sc27G))
(assert (= (ite (= ch27H var27H) 0 1) sc27H))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= sc27G 1))
(assert (<= sc27H 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (<= (str.len var28G) 1))
(assert (<= (str.len var28H) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= (str.++ preG (str.++ stem28 sufG)) (str.++ unch128G (str.++ ch28G unch228G))))
(assert (= (str.++ preH (str.++ stem28 sufH)) (str.++ unch128H (str.++ ch28H unch228H))))
(assert (= "v2rji1" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= "v2ro1a" (str.++ unch128B (str.++ var28B unch228B))))
(assert (= "v2rozji" (str.++ unch128C (str.++ var28C unch228C))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (= (ite (= ch28G var28G) 0 1) sc28G))
(assert (= (ite (= ch28H var28H) 0 1) sc28H))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= sc28G 1))
(assert (<= sc28H 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (<= (str.len var29G) 1))
(assert (<= (str.len var29H) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= (str.++ preG (str.++ stem29 sufG)) (str.++ unch129G (str.++ ch29G unch229G))))
(assert (= (str.++ preH (str.++ stem29 sufH)) (str.++ unch129H (str.++ ch29H unch229H))))
(assert (= "k2nHk" (str.++ unch129A (str.++ var29A unch229A))))
(assert (= "k2nHka" (str.++ unch129B (str.++ var29B unch229B))))
(assert (= "k2nHtsji" (str.++ unch129C (str.++ var29C unch229C))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (= (ite (= ch29G var29G) 0 1) sc29G))
(assert (= (ite (= ch29H var29H) 0 1) sc29H))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= sc29G 1))
(assert (<= sc29H 1))
(assert (<= (str.len var30A) 1))
(assert (<= (str.len var30B) 1))
(assert (<= (str.len var30C) 1))
(assert (<= (str.len var30D) 1))
(assert (<= (str.len var30E) 1))
(assert (<= (str.len var30F) 1))
(assert (<= (str.len var30G) 1))
(assert (<= (str.len var30H) 1))
(assert (= (str.++ preA (str.++ stem30 sufA)) (str.++ unch130A (str.++ ch30A unch230A))))
(assert (= (str.++ preB (str.++ stem30 sufB)) (str.++ unch130B (str.++ ch30B unch230B))))
(assert (= (str.++ preC (str.++ stem30 sufC)) (str.++ unch130C (str.++ ch30C unch230C))))
(assert (= (str.++ preD (str.++ stem30 sufD)) (str.++ unch130D (str.++ ch30D unch230D))))
(assert (= (str.++ preE (str.++ stem30 sufE)) (str.++ unch130E (str.++ ch30E unch230E))))
(assert (= (str.++ preF (str.++ stem30 sufF)) (str.++ unch130F (str.++ ch30F unch230F))))
(assert (= (str.++ preG (str.++ stem30 sufG)) (str.++ unch130G (str.++ ch30G unch230G))))
(assert (= (str.++ preH (str.++ stem30 sufH)) (str.++ unch130H (str.++ ch30H unch230H))))
(assert (= "p2tjik" (str.++ unch130A (str.++ var30A unch230A))))
(assert (= "pot2ka" (str.++ unch130B (str.++ var30B unch230B))))
(assert (= "pot2tsji" (str.++ unch130C (str.++ var30C unch230C))))
(assert (= (str.len stem30) l30))
(assert (= (ite (= ch30A var30A) 0 1) sc30A))
(assert (= (ite (= ch30B var30B) 0 1) sc30B))
(assert (= (ite (= ch30C var30C) 0 1) sc30C))
(assert (= (ite (= ch30D var30D) 0 1) sc30D))
(assert (= (ite (= ch30E var30E) 0 1) sc30E))
(assert (= (ite (= ch30F var30F) 0 1) sc30F))
(assert (= (ite (= ch30G var30G) 0 1) sc30G))
(assert (= (ite (= ch30H var30H) 0 1) sc30H))
(assert (<= sc30A 1))
(assert (<= sc30B 1))
(assert (<= sc30C 1))
(assert (<= sc30D 1))
(assert (<= sc30E 1))
(assert (<= sc30F 1))
(assert (<= sc30G 1))
(assert (<= sc30H 1))
(assert (<= (str.len var31A) 1))
(assert (<= (str.len var31B) 1))
(assert (<= (str.len var31C) 1))
(assert (<= (str.len var31D) 1))
(assert (<= (str.len var31E) 1))
(assert (<= (str.len var31F) 1))
(assert (<= (str.len var31G) 1))
(assert (<= (str.len var31H) 1))
(assert (= (str.++ preA (str.++ stem31 sufA)) (str.++ unch131A (str.++ ch31A unch231A))))
(assert (= (str.++ preB (str.++ stem31 sufB)) (str.++ unch131B (str.++ ch31B unch231B))))
(assert (= (str.++ preC (str.++ stem31 sufC)) (str.++ unch131C (str.++ ch31C unch231C))))
(assert (= (str.++ preD (str.++ stem31 sufD)) (str.++ unch131D (str.++ ch31D unch231D))))
(assert (= (str.++ preE (str.++ stem31 sufE)) (str.++ unch131E (str.++ ch31E unch231E))))
(assert (= (str.++ preF (str.++ stem31 sufF)) (str.++ unch131F (str.++ ch31F unch231F))))
(assert (= (str.++ preG (str.++ stem31 sufG)) (str.++ unch131G (str.++ ch31G unch231G))))
(assert (= (str.++ preH (str.++ stem31 sufH)) (str.++ unch131H (str.++ ch31H unch231H))))
(assert (= "tjXk" (str.++ unch131A (str.++ var31A unch231A))))
(assert (= "t2ka" (str.++ unch131B (str.++ var31B unch231B))))
(assert (= "t2tsji" (str.++ unch131C (str.++ var31C unch231C))))
(assert (= (str.len stem31) l31))
(assert (= (ite (= ch31A var31A) 0 1) sc31A))
(assert (= (ite (= ch31B var31B) 0 1) sc31B))
(assert (= (ite (= ch31C var31C) 0 1) sc31C))
(assert (= (ite (= ch31D var31D) 0 1) sc31D))
(assert (= (ite (= ch31E var31E) 0 1) sc31E))
(assert (= (ite (= ch31F var31F) 0 1) sc31F))
(assert (= (ite (= ch31G var31G) 0 1) sc31G))
(assert (= (ite (= ch31H var31H) 0 1) sc31H))
(assert (<= sc31A 1))
(assert (<= sc31B 1))
(assert (<= sc31C 1))
(assert (<= sc31D 1))
(assert (<= sc31E 1))
(assert (<= sc31F 1))
(assert (<= sc31G 1))
(assert (<= sc31H 1))
(assert (<= (str.len var32A) 1))
(assert (<= (str.len var32B) 1))
(assert (<= (str.len var32C) 1))
(assert (<= (str.len var32D) 1))
(assert (<= (str.len var32E) 1))
(assert (<= (str.len var32F) 1))
(assert (<= (str.len var32G) 1))
(assert (<= (str.len var32H) 1))
(assert (= (str.++ preA (str.++ stem32 sufA)) (str.++ unch132A (str.++ ch32A unch232A))))
(assert (= (str.++ preB (str.++ stem32 sufB)) (str.++ unch132B (str.++ ch32B unch232B))))
(assert (= (str.++ preC (str.++ stem32 sufC)) (str.++ unch132C (str.++ ch32C unch232C))))
(assert (= (str.++ preD (str.++ stem32 sufD)) (str.++ unch132D (str.++ ch32D unch232D))))
(assert (= (str.++ preE (str.++ stem32 sufE)) (str.++ unch132E (str.++ ch32E unch232E))))
(assert (= (str.++ preF (str.++ stem32 sufF)) (str.++ unch132F (str.++ ch32F unch232F))))
(assert (= (str.++ preG (str.++ stem32 sufG)) (str.++ unch132G (str.++ ch32G unch232G))))
(assert (= (str.++ preH (str.++ stem32 sufH)) (str.++ unch132H (str.++ ch32H unch232H))))
(assert (= "kjXl" (str.++ unch132A (str.++ var32A unch232A))))
(assert (= "kolO" (str.++ unch132B (str.++ var32B unch232B))))
(assert (= "koljX" (str.++ unch132C (str.++ var32C unch232C))))
(assert (= (str.len stem32) l32))
(assert (= (ite (= ch32A var32A) 0 1) sc32A))
(assert (= (ite (= ch32B var32B) 0 1) sc32B))
(assert (= (ite (= ch32C var32C) 0 1) sc32C))
(assert (= (ite (= ch32D var32D) 0 1) sc32D))
(assert (= (ite (= ch32E var32E) 0 1) sc32E))
(assert (= (ite (= ch32F var32F) 0 1) sc32F))
(assert (= (ite (= ch32G var32G) 0 1) sc32G))
(assert (= (ite (= ch32H var32H) 0 1) sc32H))
(assert (<= sc32A 1))
(assert (<= sc32B 1))
(assert (<= sc32C 1))
(assert (<= sc32D 1))
(assert (<= sc32E 1))
(assert (<= sc32F 1))
(assert (<= sc32G 1))
(assert (<= sc32H 1))
(assert (<= (str.len var33A) 1))
(assert (<= (str.len var33B) 1))
(assert (<= (str.len var33C) 1))
(assert (<= (str.len var33D) 1))
(assert (<= (str.len var33E) 1))
(assert (<= (str.len var33F) 1))
(assert (<= (str.len var33G) 1))
(assert (<= (str.len var33H) 1))
(assert (= (str.++ preA (str.++ stem33 sufA)) (str.++ unch133A (str.++ ch33A unch233A))))
(assert (= (str.++ preB (str.++ stem33 sufB)) (str.++ unch133B (str.++ ch33B unch233B))))
(assert (= (str.++ preC (str.++ stem33 sufC)) (str.++ unch133C (str.++ ch33C unch233C))))
(assert (= (str.++ preD (str.++ stem33 sufD)) (str.++ unch133D (str.++ ch33D unch233D))))
(assert (= (str.++ preE (str.++ stem33 sufE)) (str.++ unch133E (str.++ ch33E unch233E))))
(assert (= (str.++ preF (str.++ stem33 sufF)) (str.++ unch133F (str.++ ch33F unch233F))))
(assert (= (str.++ preG (str.++ stem33 sufG)) (str.++ unch133G (str.++ ch33G unch233G))))
(assert (= (str.++ preH (str.++ stem33 sufH)) (str.++ unch133H (str.++ ch33H unch233H))))
(assert (= "kovOlj" (str.++ unch133D (str.++ var33D unch233D))))
(assert (= "kovalj3" (str.++ unch133E (str.++ var33E unch233E))))
(assert (= "koval3" (str.++ unch133F (str.++ var33F unch233F))))
(assert (= (str.len stem33) l33))
(assert (= (ite (= ch33A var33A) 0 1) sc33A))
(assert (= (ite (= ch33B var33B) 0 1) sc33B))
(assert (= (ite (= ch33C var33C) 0 1) sc33C))
(assert (= (ite (= ch33D var33D) 0 1) sc33D))
(assert (= (ite (= ch33E var33E) 0 1) sc33E))
(assert (= (ite (= ch33F var33F) 0 1) sc33F))
(assert (= (ite (= ch33G var33G) 0 1) sc33G))
(assert (= (ite (= ch33H var33H) 0 1) sc33H))
(assert (<= sc33A 1))
(assert (<= sc33B 1))
(assert (<= sc33C 1))
(assert (<= sc33D 1))
(assert (<= sc33E 1))
(assert (<= sc33F 1))
(assert (<= sc33G 1))
(assert (<= sc33H 1))
(assert (<= (str.len var34A) 1))
(assert (<= (str.len var34B) 1))
(assert (<= (str.len var34C) 1))
(assert (<= (str.len var34D) 1))
(assert (<= (str.len var34E) 1))
(assert (<= (str.len var34F) 1))
(assert (<= (str.len var34G) 1))
(assert (<= (str.len var34H) 1))
(assert (= (str.++ preA (str.++ stem34 sufA)) (str.++ unch134A (str.++ ch34A unch234A))))
(assert (= (str.++ preB (str.++ stem34 sufB)) (str.++ unch134B (str.++ ch34B unch234B))))
(assert (= (str.++ preC (str.++ stem34 sufC)) (str.++ unch134C (str.++ ch34C unch234C))))
(assert (= (str.++ preD (str.++ stem34 sufD)) (str.++ unch134D (str.++ ch34D unch234D))))
(assert (= (str.++ preE (str.++ stem34 sufE)) (str.++ unch134E (str.++ ch34E unch234E))))
(assert (= (str.++ preF (str.++ stem34 sufF)) (str.++ unch134F (str.++ ch34F unch234F))))
(assert (= (str.++ preG (str.++ stem34 sufG)) (str.++ unch134G (str.++ ch34G unch234G))))
(assert (= (str.++ preH (str.++ stem34 sufH)) (str.++ unch134H (str.++ ch34H unch234H))))
(assert (= "DmjXlj" (str.++ unch134D (str.++ var34D unch234D))))
(assert (= "Dmjilj3" (str.++ unch134E (str.++ var34E unch234E))))
(assert (= "Dmjil3" (str.++ unch134F (str.++ var34F unch234F))))
(assert (= (str.len stem34) l34))
(assert (= (ite (= ch34A var34A) 0 1) sc34A))
(assert (= (ite (= ch34B var34B) 0 1) sc34B))
(assert (= (ite (= ch34C var34C) 0 1) sc34C))
(assert (= (ite (= ch34D var34D) 0 1) sc34D))
(assert (= (ite (= ch34E var34E) 0 1) sc34E))
(assert (= (ite (= ch34F var34F) 0 1) sc34F))
(assert (= (ite (= ch34G var34G) 0 1) sc34G))
(assert (= (ite (= ch34H var34H) 0 1) sc34H))
(assert (<= sc34A 1))
(assert (<= sc34B 1))
(assert (<= sc34C 1))
(assert (<= sc34D 1))
(assert (<= sc34E 1))
(assert (<= sc34F 1))
(assert (<= sc34G 1))
(assert (<= sc34H 1))
(assert (<= (str.len var35A) 1))
(assert (<= (str.len var35B) 1))
(assert (<= (str.len var35C) 1))
(assert (<= (str.len var35D) 1))
(assert (<= (str.len var35E) 1))
(assert (<= (str.len var35F) 1))
(assert (<= (str.len var35G) 1))
(assert (<= (str.len var35H) 1))
(assert (= (str.++ preA (str.++ stem35 sufA)) (str.++ unch135A (str.++ ch35A unch235A))))
(assert (= (str.++ preB (str.++ stem35 sufB)) (str.++ unch135B (str.++ ch35B unch235B))))
(assert (= (str.++ preC (str.++ stem35 sufC)) (str.++ unch135C (str.++ ch35C unch235C))))
(assert (= (str.++ preD (str.++ stem35 sufD)) (str.++ unch135D (str.++ ch35D unch235D))))
(assert (= (str.++ preE (str.++ stem35 sufE)) (str.++ unch135E (str.++ ch35E unch235E))))
(assert (= (str.++ preF (str.++ stem35 sufF)) (str.++ unch135F (str.++ ch35F unch235F))))
(assert (= (str.++ preG (str.++ stem35 sufG)) (str.++ unch135G (str.++ ch35G unch235G))))
(assert (= (str.++ preH (str.++ stem35 sufH)) (str.++ unch135H (str.++ ch35H unch235H))))
(assert (= "kjrjXlj" (str.++ unch135D (str.++ var35D unch235D))))
(assert (= "kjrjilj3" (str.++ unch135E (str.++ var35E unch235E))))
(assert (= "kjrjil3" (str.++ unch135F (str.++ var35F unch235F))))
(assert (= (str.len stem35) l35))
(assert (= (ite (= ch35A var35A) 0 1) sc35A))
(assert (= (ite (= ch35B var35B) 0 1) sc35B))
(assert (= (ite (= ch35C var35C) 0 1) sc35C))
(assert (= (ite (= ch35D var35D) 0 1) sc35D))
(assert (= (ite (= ch35E var35E) 0 1) sc35E))
(assert (= (ite (= ch35F var35F) 0 1) sc35F))
(assert (= (ite (= ch35G var35G) 0 1) sc35G))
(assert (= (ite (= ch35H var35H) 0 1) sc35H))
(assert (<= sc35A 1))
(assert (<= sc35B 1))
(assert (<= sc35C 1))
(assert (<= sc35D 1))
(assert (<= sc35E 1))
(assert (<= sc35F 1))
(assert (<= sc35G 1))
(assert (<= sc35H 1))
(assert (<= (str.len var36A) 1))
(assert (<= (str.len var36B) 1))
(assert (<= (str.len var36C) 1))
(assert (<= (str.len var36D) 1))
(assert (<= (str.len var36E) 1))
(assert (<= (str.len var36F) 1))
(assert (<= (str.len var36G) 1))
(assert (<= (str.len var36H) 1))
(assert (= (str.++ preA (str.++ stem36 sufA)) (str.++ unch136A (str.++ ch36A unch236A))))
(assert (= (str.++ preB (str.++ stem36 sufB)) (str.++ unch136B (str.++ ch36B unch236B))))
(assert (= (str.++ preC (str.++ stem36 sufC)) (str.++ unch136C (str.++ ch36C unch236C))))
(assert (= (str.++ preD (str.++ stem36 sufD)) (str.++ unch136D (str.++ ch36D unch236D))))
(assert (= (str.++ preE (str.++ stem36 sufE)) (str.++ unch136E (str.++ ch36E unch236E))))
(assert (= (str.++ preF (str.++ stem36 sufF)) (str.++ unch136F (str.++ ch36F unch236F))))
(assert (= (str.++ preG (str.++ stem36 sufG)) (str.++ unch136G (str.++ ch36G unch236G))))
(assert (= (str.++ preH (str.++ stem36 sufH)) (str.++ unch136H (str.++ ch36H unch236H))))
(assert (= "uE3tHlj" (str.++ unch136D (str.++ var36D unch236D))))
(assert (= "uE3tHljH" (str.++ unch136E (str.++ var36E unch236E))))
(assert (= "uE3tHlH" (str.++ unch136F (str.++ var36F unch236F))))
(assert (= (str.len stem36) l36))
(assert (= (ite (= ch36A var36A) 0 1) sc36A))
(assert (= (ite (= ch36B var36B) 0 1) sc36B))
(assert (= (ite (= ch36C var36C) 0 1) sc36C))
(assert (= (ite (= ch36D var36D) 0 1) sc36D))
(assert (= (ite (= ch36E var36E) 0 1) sc36E))
(assert (= (ite (= ch36F var36F) 0 1) sc36F))
(assert (= (ite (= ch36G var36G) 0 1) sc36G))
(assert (= (ite (= ch36H var36H) 0 1) sc36H))
(assert (<= sc36A 1))
(assert (<= sc36B 1))
(assert (<= sc36C 1))
(assert (<= sc36D 1))
(assert (<= sc36E 1))
(assert (<= sc36F 1))
(assert (<= sc36G 1))
(assert (<= sc36H 1))
(assert (<= (str.len var37A) 1))
(assert (<= (str.len var37B) 1))
(assert (<= (str.len var37C) 1))
(assert (<= (str.len var37D) 1))
(assert (<= (str.len var37E) 1))
(assert (<= (str.len var37F) 1))
(assert (<= (str.len var37G) 1))
(assert (<= (str.len var37H) 1))
(assert (= (str.++ preA (str.++ stem37 sufA)) (str.++ unch137A (str.++ ch37A unch237A))))
(assert (= (str.++ preB (str.++ stem37 sufB)) (str.++ unch137B (str.++ ch37B unch237B))))
(assert (= (str.++ preC (str.++ stem37 sufC)) (str.++ unch137C (str.++ ch37C unch237C))))
(assert (= (str.++ preD (str.++ stem37 sufD)) (str.++ unch137D (str.++ ch37D unch237D))))
(assert (= (str.++ preE (str.++ stem37 sufE)) (str.++ unch137E (str.++ ch37E unch237E))))
(assert (= (str.++ preF (str.++ stem37 sufF)) (str.++ unch137F (str.++ ch37F unch237F))))
(assert (= (str.++ preG (str.++ stem37 sufG)) (str.++ unch137G (str.++ ch37G unch237G))))
(assert (= (str.++ preH (str.++ stem37 sufH)) (str.++ unch137H (str.++ ch37H unch237H))))
(assert (= "gr4bjinj" (str.++ unch137D (str.++ var37D unch237D))))
(assert (= "gr4bHnjH" (str.++ unch137E (str.++ var37E unch237E))))
(assert (= "gr4bHnH" (str.++ unch137F (str.++ var37F unch237F))))
(assert (= (str.len stem37) l37))
(assert (= (ite (= ch37A var37A) 0 1) sc37A))
(assert (= (ite (= ch37B var37B) 0 1) sc37B))
(assert (= (ite (= ch37C var37C) 0 1) sc37C))
(assert (= (ite (= ch37D var37D) 0 1) sc37D))
(assert (= (ite (= ch37E var37E) 0 1) sc37E))
(assert (= (ite (= ch37F var37F) 0 1) sc37F))
(assert (= (ite (= ch37G var37G) 0 1) sc37G))
(assert (= (ite (= ch37H var37H) 0 1) sc37H))
(assert (<= sc37A 1))
(assert (<= sc37B 1))
(assert (<= sc37C 1))
(assert (<= sc37D 1))
(assert (<= sc37E 1))
(assert (<= sc37F 1))
(assert (<= sc37G 1))
(assert (<= sc37H 1))
(assert (<= (str.len var38A) 1))
(assert (<= (str.len var38B) 1))
(assert (<= (str.len var38C) 1))
(assert (<= (str.len var38D) 1))
(assert (<= (str.len var38E) 1))
(assert (<= (str.len var38F) 1))
(assert (<= (str.len var38G) 1))
(assert (<= (str.len var38H) 1))
(assert (= (str.++ preA (str.++ stem38 sufA)) (str.++ unch138A (str.++ ch38A unch238A))))
(assert (= (str.++ preB (str.++ stem38 sufB)) (str.++ unch138B (str.++ ch38B unch238B))))
(assert (= (str.++ preC (str.++ stem38 sufC)) (str.++ unch138C (str.++ ch38C unch238C))))
(assert (= (str.++ preD (str.++ stem38 sufD)) (str.++ unch138D (str.++ ch38D unch238D))))
(assert (= (str.++ preE (str.++ stem38 sufE)) (str.++ unch138E (str.++ ch38E unch238E))))
(assert (= (str.++ preF (str.++ stem38 sufF)) (str.++ unch138F (str.++ ch38F unch238F))))
(assert (= (str.++ preG (str.++ stem38 sufG)) (str.++ unch138G (str.++ ch38G unch238G))))
(assert (= (str.++ preH (str.++ stem38 sufH)) (str.++ unch138H (str.++ ch38H unch238H))))
(assert (= "2lHnj" (str.++ unch138D (str.++ var38D unch238D))))
(assert (= "2lHnjH" (str.++ unch138E (str.++ var38E unch238E))))
(assert (= "2lHnH" (str.++ unch138F (str.++ var38F unch238F))))
(assert (= (str.len stem38) l38))
(assert (= (ite (= ch38A var38A) 0 1) sc38A))
(assert (= (ite (= ch38B var38B) 0 1) sc38B))
(assert (= (ite (= ch38C var38C) 0 1) sc38C))
(assert (= (ite (= ch38D var38D) 0 1) sc38D))
(assert (= (ite (= ch38E var38E) 0 1) sc38E))
(assert (= (ite (= ch38F var38F) 0 1) sc38F))
(assert (= (ite (= ch38G var38G) 0 1) sc38G))
(assert (= (ite (= ch38H var38H) 0 1) sc38H))
(assert (<= sc38A 1))
(assert (<= sc38B 1))
(assert (<= sc38C 1))
(assert (<= sc38D 1))
(assert (<= sc38E 1))
(assert (<= sc38F 1))
(assert (<= sc38G 1))
(assert (<= sc38H 1))
(assert (<= (str.len var39A) 1))
(assert (<= (str.len var39B) 1))
(assert (<= (str.len var39C) 1))
(assert (<= (str.len var39D) 1))
(assert (<= (str.len var39E) 1))
(assert (<= (str.len var39F) 1))
(assert (<= (str.len var39G) 1))
(assert (<= (str.len var39H) 1))
(assert (= (str.++ preA (str.++ stem39 sufA)) (str.++ unch139A (str.++ ch39A unch239A))))
(assert (= (str.++ preB (str.++ stem39 sufB)) (str.++ unch139B (str.++ ch39B unch239B))))
(assert (= (str.++ preC (str.++ stem39 sufC)) (str.++ unch139C (str.++ ch39C unch239C))))
(assert (= (str.++ preD (str.++ stem39 sufD)) (str.++ unch139D (str.++ ch39D unch239D))))
(assert (= (str.++ preE (str.++ stem39 sufE)) (str.++ unch139E (str.++ ch39E unch239E))))
(assert (= (str.++ preF (str.++ stem39 sufF)) (str.++ unch139F (str.++ ch39F unch239F))))
(assert (= (str.++ preG (str.++ stem39 sufG)) (str.++ unch139G (str.++ ch39G unch239G))))
(assert (= (str.++ preH (str.++ stem39 sufH)) (str.++ unch139H (str.++ ch39H unch239H))))
(assert (= "jaEjmjXnj" (str.++ unch139D (str.++ var39D unch239D))))
(assert (= "jaEm4njH" (str.++ unch139E (str.++ var39E unch239E))))
(assert (= "jaEm4nH" (str.++ unch139F (str.++ var39F unch239F))))
(assert (= (str.len stem39) l39))
(assert (= (ite (= ch39A var39A) 0 1) sc39A))
(assert (= (ite (= ch39B var39B) 0 1) sc39B))
(assert (= (ite (= ch39C var39C) 0 1) sc39C))
(assert (= (ite (= ch39D var39D) 0 1) sc39D))
(assert (= (ite (= ch39E var39E) 0 1) sc39E))
(assert (= (ite (= ch39F var39F) 0 1) sc39F))
(assert (= (ite (= ch39G var39G) 0 1) sc39G))
(assert (= (ite (= ch39H var39H) 0 1) sc39H))
(assert (<= sc39A 1))
(assert (<= sc39B 1))
(assert (<= sc39C 1))
(assert (<= sc39D 1))
(assert (<= sc39E 1))
(assert (<= sc39F 1))
(assert (<= sc39G 1))
(assert (<= sc39H 1))
(assert (<= (str.len var40A) 1))
(assert (<= (str.len var40B) 1))
(assert (<= (str.len var40C) 1))
(assert (<= (str.len var40D) 1))
(assert (<= (str.len var40E) 1))
(assert (<= (str.len var40F) 1))
(assert (<= (str.len var40G) 1))
(assert (<= (str.len var40H) 1))
(assert (= (str.++ preA (str.++ stem40 sufA)) (str.++ unch140A (str.++ ch40A unch240A))))
(assert (= (str.++ preB (str.++ stem40 sufB)) (str.++ unch140B (str.++ ch40B unch240B))))
(assert (= (str.++ preC (str.++ stem40 sufC)) (str.++ unch140C (str.++ ch40C unch240C))))
(assert (= (str.++ preD (str.++ stem40 sufD)) (str.++ unch140D (str.++ ch40D unch240D))))
(assert (= (str.++ preE (str.++ stem40 sufE)) (str.++ unch140E (str.++ ch40E unch240E))))
(assert (= (str.++ preF (str.++ stem40 sufF)) (str.++ unch140F (str.++ ch40F unch240F))))
(assert (= (str.++ preG (str.++ stem40 sufG)) (str.++ unch140G (str.++ ch40G unch240G))))
(assert (= (str.++ preH (str.++ stem40 sufH)) (str.++ unch140H (str.++ ch40H unch240H))))
(assert (= "jOsjinj" (str.++ unch140D (str.++ var40D unch240D))))
(assert (= "jOsHnjH" (str.++ unch140E (str.++ var40E unch240E))))
(assert (= "jOsHnH" (str.++ unch140F (str.++ var40F unch240F))))
(assert (= (str.len stem40) l40))
(assert (= (ite (= ch40A var40A) 0 1) sc40A))
(assert (= (ite (= ch40B var40B) 0 1) sc40B))
(assert (= (ite (= ch40C var40C) 0 1) sc40C))
(assert (= (ite (= ch40D var40D) 0 1) sc40D))
(assert (= (ite (= ch40E var40E) 0 1) sc40E))
(assert (= (ite (= ch40F var40F) 0 1) sc40F))
(assert (= (ite (= ch40G var40G) 0 1) sc40G))
(assert (= (ite (= ch40H var40H) 0 1) sc40H))
(assert (<= sc40A 1))
(assert (<= sc40B 1))
(assert (<= sc40C 1))
(assert (<= sc40D 1))
(assert (<= sc40E 1))
(assert (<= sc40F 1))
(assert (<= sc40G 1))
(assert (<= sc40H 1))
(assert (<= (str.len var41A) 1))
(assert (<= (str.len var41B) 1))
(assert (<= (str.len var41C) 1))
(assert (<= (str.len var41D) 1))
(assert (<= (str.len var41E) 1))
(assert (<= (str.len var41F) 1))
(assert (<= (str.len var41G) 1))
(assert (<= (str.len var41H) 1))
(assert (= (str.++ preA (str.++ stem41 sufA)) (str.++ unch141A (str.++ ch41A unch241A))))
(assert (= (str.++ preB (str.++ stem41 sufB)) (str.++ unch141B (str.++ ch41B unch241B))))
(assert (= (str.++ preC (str.++ stem41 sufC)) (str.++ unch141C (str.++ ch41C unch241C))))
(assert (= (str.++ preD (str.++ stem41 sufD)) (str.++ unch141D (str.++ ch41D unch241D))))
(assert (= (str.++ preE (str.++ stem41 sufE)) (str.++ unch141E (str.++ ch41E unch241E))))
(assert (= (str.++ preF (str.++ stem41 sufF)) (str.++ unch141F (str.++ ch41F unch241F))))
(assert (= (str.++ preG (str.++ stem41 sufG)) (str.++ unch141G (str.++ ch41G unch241G))))
(assert (= (str.++ preH (str.++ stem41 sufH)) (str.++ unch141H (str.++ ch41H unch241H))))
(assert (= "zj3kj" (str.++ unch141D (str.++ var41D unch241D))))
(assert (= "zj3kjH" (str.++ unch141E (str.++ var41E unch241E))))
(assert (= "zj3tH" (str.++ unch141F (str.++ var41F unch241F))))
(assert (= (str.len stem41) l41))
(assert (= (ite (= ch41A var41A) 0 1) sc41A))
(assert (= (ite (= ch41B var41B) 0 1) sc41B))
(assert (= (ite (= ch41C var41C) 0 1) sc41C))
(assert (= (ite (= ch41D var41D) 0 1) sc41D))
(assert (= (ite (= ch41E var41E) 0 1) sc41E))
(assert (= (ite (= ch41F var41F) 0 1) sc41F))
(assert (= (ite (= ch41G var41G) 0 1) sc41G))
(assert (= (ite (= ch41H var41H) 0 1) sc41H))
(assert (<= sc41A 1))
(assert (<= sc41B 1))
(assert (<= sc41C 1))
(assert (<= sc41D 1))
(assert (<= sc41E 1))
(assert (<= sc41F 1))
(assert (<= sc41G 1))
(assert (<= sc41H 1))
(assert (<= (str.len var42A) 1))
(assert (<= (str.len var42B) 1))
(assert (<= (str.len var42C) 1))
(assert (<= (str.len var42D) 1))
(assert (<= (str.len var42E) 1))
(assert (<= (str.len var42F) 1))
(assert (<= (str.len var42G) 1))
(assert (<= (str.len var42H) 1))
(assert (= (str.++ preA (str.++ stem42 sufA)) (str.++ unch142A (str.++ ch42A unch242A))))
(assert (= (str.++ preB (str.++ stem42 sufB)) (str.++ unch142B (str.++ ch42B unch242B))))
(assert (= (str.++ preC (str.++ stem42 sufC)) (str.++ unch142C (str.++ ch42C unch242C))))
(assert (= (str.++ preD (str.++ stem42 sufD)) (str.++ unch142D (str.++ ch42D unch242D))))
(assert (= (str.++ preE (str.++ stem42 sufE)) (str.++ unch142E (str.++ ch42E unch242E))))
(assert (= (str.++ preF (str.++ stem42 sufF)) (str.++ unch142F (str.++ ch42F unch242F))))
(assert (= (str.++ preG (str.++ stem42 sufG)) (str.++ unch142G (str.++ ch42G unch242G))))
(assert (= (str.++ preH (str.++ stem42 sufH)) (str.++ unch142H (str.++ ch42H unch242H))))
(assert (= "mOsjkj" (str.++ unch142G (str.++ var42G unch242G))))
(assert (= "mOstH" (str.++ unch142H (str.++ var42H unch242H))))
(assert (= (str.len stem42) l42))
(assert (= (ite (= ch42A var42A) 0 1) sc42A))
(assert (= (ite (= ch42B var42B) 0 1) sc42B))
(assert (= (ite (= ch42C var42C) 0 1) sc42C))
(assert (= (ite (= ch42D var42D) 0 1) sc42D))
(assert (= (ite (= ch42E var42E) 0 1) sc42E))
(assert (= (ite (= ch42F var42F) 0 1) sc42F))
(assert (= (ite (= ch42G var42G) 0 1) sc42G))
(assert (= (ite (= ch42H var42H) 0 1) sc42H))
(assert (<= sc42A 1))
(assert (<= sc42B 1))
(assert (<= sc42C 1))
(assert (<= sc42D 1))
(assert (<= sc42E 1))
(assert (<= sc42F 1))
(assert (<= sc42G 1))
(assert (<= sc42H 1))
(assert (<= (str.len var43A) 1))
(assert (<= (str.len var43B) 1))
(assert (<= (str.len var43C) 1))
(assert (<= (str.len var43D) 1))
(assert (<= (str.len var43E) 1))
(assert (<= (str.len var43F) 1))
(assert (<= (str.len var43G) 1))
(assert (<= (str.len var43H) 1))
(assert (= (str.++ preA (str.++ stem43 sufA)) (str.++ unch143A (str.++ ch43A unch243A))))
(assert (= (str.++ preB (str.++ stem43 sufB)) (str.++ unch143B (str.++ ch43B unch243B))))
(assert (= (str.++ preC (str.++ stem43 sufC)) (str.++ unch143C (str.++ ch43C unch243C))))
(assert (= (str.++ preD (str.++ stem43 sufD)) (str.++ unch143D (str.++ ch43D unch243D))))
(assert (= (str.++ preE (str.++ stem43 sufE)) (str.++ unch143E (str.++ ch43E unch243E))))
(assert (= (str.++ preF (str.++ stem43 sufF)) (str.++ unch143F (str.++ ch43F unch243F))))
(assert (= (str.++ preG (str.++ stem43 sufG)) (str.++ unch143G (str.++ ch43G unch243G))))
(assert (= (str.++ preH (str.++ stem43 sufH)) (str.++ unch143H (str.++ ch43H unch243H))))
(assert (= "sjmjXrjkj" (str.++ unch143G (str.++ var43G unch243G))))
(assert (= "sm4rtH" (str.++ unch143H (str.++ var43H unch243H))))
(assert (= (str.len stem43) l43))
(assert (= (ite (= ch43A var43A) 0 1) sc43A))
(assert (= (ite (= ch43B var43B) 0 1) sc43B))
(assert (= (ite (= ch43C var43C) 0 1) sc43C))
(assert (= (ite (= ch43D var43D) 0 1) sc43D))
(assert (= (ite (= ch43E var43E) 0 1) sc43E))
(assert (= (ite (= ch43F var43F) 0 1) sc43F))
(assert (= (ite (= ch43G var43G) 0 1) sc43G))
(assert (= (ite (= ch43H var43H) 0 1) sc43H))
(assert (<= sc43A 1))
(assert (<= sc43B 1))
(assert (<= sc43C 1))
(assert (<= sc43D 1))
(assert (<= sc43E 1))
(assert (<= sc43F 1))
(assert (<= sc43G 1))
(assert (<= sc43H 1))
(assert (<= (str.len var44A) 1))
(assert (<= (str.len var44B) 1))
(assert (<= (str.len var44C) 1))
(assert (<= (str.len var44D) 1))
(assert (<= (str.len var44E) 1))
(assert (<= (str.len var44F) 1))
(assert (<= (str.len var44G) 1))
(assert (<= (str.len var44H) 1))
(assert (= (str.++ preA (str.++ stem44 sufA)) (str.++ unch144A (str.++ ch44A unch244A))))
(assert (= (str.++ preB (str.++ stem44 sufB)) (str.++ unch144B (str.++ ch44B unch244B))))
(assert (= (str.++ preC (str.++ stem44 sufC)) (str.++ unch144C (str.++ ch44C unch244C))))
(assert (= (str.++ preD (str.++ stem44 sufD)) (str.++ unch144D (str.++ ch44D unch244D))))
(assert (= (str.++ preE (str.++ stem44 sufE)) (str.++ unch144E (str.++ ch44E unch244E))))
(assert (= (str.++ preF (str.++ stem44 sufF)) (str.++ unch144F (str.++ ch44F unch244F))))
(assert (= (str.++ preG (str.++ stem44 sufG)) (str.++ unch144G (str.++ ch44G unch244G))))
(assert (= (str.++ preH (str.++ stem44 sufH)) (str.++ unch144H (str.++ ch44H unch244H))))
(assert (= "vjXsjkj" (str.++ unch144G (str.++ var44G unch244G))))
(assert (= "vjXstH" (str.++ unch144H (str.++ var44H unch244H))))
(assert (= (str.len stem44) l44))
(assert (= (ite (= ch44A var44A) 0 1) sc44A))
(assert (= (ite (= ch44B var44B) 0 1) sc44B))
(assert (= (ite (= ch44C var44C) 0 1) sc44C))
(assert (= (ite (= ch44D var44D) 0 1) sc44D))
(assert (= (ite (= ch44E var44E) 0 1) sc44E))
(assert (= (ite (= ch44F var44F) 0 1) sc44F))
(assert (= (ite (= ch44G var44G) 0 1) sc44G))
(assert (= (ite (= ch44H var44H) 0 1) sc44H))
(assert (<= sc44A 1))
(assert (<= sc44B 1))
(assert (<= sc44C 1))
(assert (<= sc44D 1))
(assert (<= sc44E 1))
(assert (<= sc44F 1))
(assert (<= sc44G 1))
(assert (<= sc44H 1))
(assert (<= (str.len var45A) 1))
(assert (<= (str.len var45B) 1))
(assert (<= (str.len var45C) 1))
(assert (<= (str.len var45D) 1))
(assert (<= (str.len var45E) 1))
(assert (<= (str.len var45F) 1))
(assert (<= (str.len var45G) 1))
(assert (<= (str.len var45H) 1))
(assert (= (str.++ preA (str.++ stem45 sufA)) (str.++ unch145A (str.++ ch45A unch245A))))
(assert (= (str.++ preB (str.++ stem45 sufB)) (str.++ unch145B (str.++ ch45B unch245B))))
(assert (= (str.++ preC (str.++ stem45 sufC)) (str.++ unch145C (str.++ ch45C unch245C))))
(assert (= (str.++ preD (str.++ stem45 sufD)) (str.++ unch145D (str.++ ch45D unch245D))))
(assert (= (str.++ preE (str.++ stem45 sufE)) (str.++ unch145E (str.++ ch45E unch245E))))
(assert (= (str.++ preF (str.++ stem45 sufF)) (str.++ unch145F (str.++ ch45F unch245F))))
(assert (= (str.++ preG (str.++ stem45 sufG)) (str.++ unch145G (str.++ ch45G unch245G))))
(assert (= (str.++ preH (str.++ stem45 sufH)) (str.++ unch145H (str.++ ch45H unch245H))))
(assert (= "rOgjisjkj" (str.++ unch145G (str.++ var45G unch245G))))
(assert (= "rOdostH" (str.++ unch145H (str.++ var45H unch245H))))
(assert (= (str.len stem45) l45))
(assert (= (ite (= ch45A var45A) 0 1) sc45A))
(assert (= (ite (= ch45B var45B) 0 1) sc45B))
(assert (= (ite (= ch45C var45C) 0 1) sc45C))
(assert (= (ite (= ch45D var45D) 0 1) sc45D))
(assert (= (ite (= ch45E var45E) 0 1) sc45E))
(assert (= (ite (= ch45F var45F) 0 1) sc45F))
(assert (= (ite (= ch45G var45G) 0 1) sc45G))
(assert (= (ite (= ch45H var45H) 0 1) sc45H))
(assert (<= sc45A 1))
(assert (<= sc45B 1))
(assert (<= sc45C 1))
(assert (<= sc45D 1))
(assert (<= sc45E 1))
(assert (<= sc45F 1))
(assert (<= sc45G 1))
(assert (<= sc45H 1))
(assert (<= (str.len var46A) 1))
(assert (<= (str.len var46B) 1))
(assert (<= (str.len var46C) 1))
(assert (<= (str.len var46D) 1))
(assert (<= (str.len var46E) 1))
(assert (<= (str.len var46F) 1))
(assert (<= (str.len var46G) 1))
(assert (<= (str.len var46H) 1))
(assert (= (str.++ preA (str.++ stem46 sufA)) (str.++ unch146A (str.++ ch46A unch246A))))
(assert (= (str.++ preB (str.++ stem46 sufB)) (str.++ unch146B (str.++ ch46B unch246B))))
(assert (= (str.++ preC (str.++ stem46 sufC)) (str.++ unch146C (str.++ ch46C unch246C))))
(assert (= (str.++ preD (str.++ stem46 sufD)) (str.++ unch146D (str.++ ch46D unch246D))))
(assert (= (str.++ preE (str.++ stem46 sufE)) (str.++ unch146E (str.++ ch46E unch246E))))
(assert (= (str.++ preF (str.++ stem46 sufF)) (str.++ unch146F (str.++ ch46F unch246F))))
(assert (= (str.++ preG (str.++ stem46 sufG)) (str.++ unch146G (str.++ ch46G unch246G))))
(assert (= (str.++ preH (str.++ stem46 sufH)) (str.++ unch146H (str.++ ch46H unch246H))))
(assert (= "sjXlj" (str.++ unch146G (str.++ var46G unch246G))))
(assert (= "s2lH" (str.++ unch146H (str.++ var46H unch246H))))
(assert (= (str.len stem46) l46))
(assert (= (ite (= ch46A var46A) 0 1) sc46A))
(assert (= (ite (= ch46B var46B) 0 1) sc46B))
(assert (= (ite (= ch46C var46C) 0 1) sc46C))
(assert (= (ite (= ch46D var46D) 0 1) sc46D))
(assert (= (ite (= ch46E var46E) 0 1) sc46E))
(assert (= (ite (= ch46F var46F) 0 1) sc46F))
(assert (= (ite (= ch46G var46G) 0 1) sc46G))
(assert (= (ite (= ch46H var46H) 0 1) sc46H))
(assert (<= sc46A 1))
(assert (<= sc46B 1))
(assert (<= sc46C 1))
(assert (<= sc46D 1))
(assert (<= sc46E 1))
(assert (<= sc46F 1))
(assert (<= sc46G 1))
(assert (<= sc46H 1))
(assert (<= (str.len var47A) 1))
(assert (<= (str.len var47B) 1))
(assert (<= (str.len var47C) 1))
(assert (<= (str.len var47D) 1))
(assert (<= (str.len var47E) 1))
(assert (<= (str.len var47F) 1))
(assert (<= (str.len var47G) 1))
(assert (<= (str.len var47H) 1))
(assert (= (str.++ preA (str.++ stem47 sufA)) (str.++ unch147A (str.++ ch47A unch247A))))
(assert (= (str.++ preB (str.++ stem47 sufB)) (str.++ unch147B (str.++ ch47B unch247B))))
(assert (= (str.++ preC (str.++ stem47 sufC)) (str.++ unch147C (str.++ ch47C unch247C))))
(assert (= (str.++ preD (str.++ stem47 sufD)) (str.++ unch147D (str.++ ch47D unch247D))))
(assert (= (str.++ preE (str.++ stem47 sufE)) (str.++ unch147E (str.++ ch47E unch247E))))
(assert (= (str.++ preF (str.++ stem47 sufF)) (str.++ unch147F (str.++ ch47F unch247F))))
(assert (= (str.++ preG (str.++ stem47 sufG)) (str.++ unch147G (str.++ ch47G unch247G))))
(assert (= (str.++ preH (str.++ stem47 sufH)) (str.++ unch147H (str.++ ch47H unch247H))))
(assert (= "p2Bjisjkj" (str.++ unch147G (str.++ var47G unch247G))))
(assert (= "p2BHstH" (str.++ unch147H (str.++ var47H unch247H))))
(assert (= (str.len stem47) l47))
(assert (= (ite (= ch47A var47A) 0 1) sc47A))
(assert (= (ite (= ch47B var47B) 0 1) sc47B))
(assert (= (ite (= ch47C var47C) 0 1) sc47C))
(assert (= (ite (= ch47D var47D) 0 1) sc47D))
(assert (= (ite (= ch47E var47E) 0 1) sc47E))
(assert (= (ite (= ch47F var47F) 0 1) sc47F))
(assert (= (ite (= ch47G var47G) 0 1) sc47G))
(assert (= (ite (= ch47H var47H) 0 1) sc47H))
(assert (<= sc47A 1))
(assert (<= sc47B 1))
(assert (<= sc47C 1))
(assert (<= sc47D 1))
(assert (<= sc47E 1))
(assert (<= sc47F 1))
(assert (<= sc47G 1))
(assert (<= sc47H 1))
(assert (<= (str.len var48A) 1))
(assert (<= (str.len var48B) 1))
(assert (<= (str.len var48C) 1))
(assert (<= (str.len var48D) 1))
(assert (<= (str.len var48E) 1))
(assert (<= (str.len var48F) 1))
(assert (<= (str.len var48G) 1))
(assert (<= (str.len var48H) 1))
(assert (= (str.++ preA (str.++ stem48 sufA)) (str.++ unch148A (str.++ ch48A unch248A))))
(assert (= (str.++ preB (str.++ stem48 sufB)) (str.++ unch148B (str.++ ch48B unch248B))))
(assert (= (str.++ preC (str.++ stem48 sufC)) (str.++ unch148C (str.++ ch48C unch248C))))
(assert (= (str.++ preD (str.++ stem48 sufD)) (str.++ unch148D (str.++ ch48D unch248D))))
(assert (= (str.++ preE (str.++ stem48 sufE)) (str.++ unch148E (str.++ ch48E unch248E))))
(assert (= (str.++ preF (str.++ stem48 sufF)) (str.++ unch148F (str.++ ch48F unch248F))))
(assert (= (str.++ preG (str.++ stem48 sufG)) (str.++ unch148G (str.++ ch48G unch248G))))
(assert (= (str.++ preH (str.++ stem48 sufH)) (str.++ unch148H (str.++ ch48H unch248H))))
(assert (= "zOmjikj" (str.++ unch148G (str.++ var48G unch248G))))
(assert (= "zOmHtH" (str.++ unch148H (str.++ var48H unch248H))))
(assert (= (str.len stem48) l48))
(assert (= (ite (= ch48A var48A) 0 1) sc48A))
(assert (= (ite (= ch48B var48B) 0 1) sc48B))
(assert (= (ite (= ch48C var48C) 0 1) sc48C))
(assert (= (ite (= ch48D var48D) 0 1) sc48D))
(assert (= (ite (= ch48E var48E) 0 1) sc48E))
(assert (= (ite (= ch48F var48F) 0 1) sc48F))
(assert (= (ite (= ch48G var48G) 0 1) sc48G))
(assert (= (ite (= ch48H var48H) 0 1) sc48H))
(assert (<= sc48A 1))
(assert (<= sc48B 1))
(assert (<= sc48C 1))
(assert (<= sc48D 1))
(assert (<= sc48E 1))
(assert (<= sc48F 1))
(assert (<= sc48G 1))
(assert (<= sc48H 1))
(assert (<= (str.len var49A) 1))
(assert (<= (str.len var49B) 1))
(assert (<= (str.len var49C) 1))
(assert (<= (str.len var49D) 1))
(assert (<= (str.len var49E) 1))
(assert (<= (str.len var49F) 1))
(assert (<= (str.len var49G) 1))
(assert (<= (str.len var49H) 1))
(assert (= (str.++ preA (str.++ stem49 sufA)) (str.++ unch149A (str.++ ch49A unch249A))))
(assert (= (str.++ preB (str.++ stem49 sufB)) (str.++ unch149B (str.++ ch49B unch249B))))
(assert (= (str.++ preC (str.++ stem49 sufC)) (str.++ unch149C (str.++ ch49C unch249C))))
(assert (= (str.++ preD (str.++ stem49 sufD)) (str.++ unch149D (str.++ ch49D unch249D))))
(assert (= (str.++ preE (str.++ stem49 sufE)) (str.++ unch149E (str.++ ch49E unch249E))))
(assert (= (str.++ preF (str.++ stem49 sufF)) (str.++ unch149F (str.++ ch49F unch249F))))
(assert (= (str.++ preG (str.++ stem49 sufG)) (str.++ unch149G (str.++ ch49G unch249G))))
(assert (= (str.++ preH (str.++ stem49 sufH)) (str.++ unch149H (str.++ ch49H unch249H))))
(assert (= "skOtHrjkj" (str.++ unch149G (str.++ var49G unch249G))))
(assert (= "skOtHrtH" (str.++ unch149H (str.++ var49H unch249H))))
(assert (= (str.len stem49) l49))
(assert (= (ite (= ch49A var49A) 0 1) sc49A))
(assert (= (ite (= ch49B var49B) 0 1) sc49B))
(assert (= (ite (= ch49C var49C) 0 1) sc49C))
(assert (= (ite (= ch49D var49D) 0 1) sc49D))
(assert (= (ite (= ch49E var49E) 0 1) sc49E))
(assert (= (ite (= ch49F var49F) 0 1) sc49F))
(assert (= (ite (= ch49G var49G) 0 1) sc49G))
(assert (= (ite (= ch49H var49H) 0 1) sc49H))
(assert (<= sc49A 1))
(assert (<= sc49B 1))
(assert (<= sc49C 1))
(assert (<= sc49D 1))
(assert (<= sc49E 1))
(assert (<= sc49F 1))
(assert (<= sc49G 1))
(assert (<= sc49H 1))
(assert (<= (str.len var50A) 1))
(assert (<= (str.len var50B) 1))
(assert (<= (str.len var50C) 1))
(assert (<= (str.len var50D) 1))
(assert (<= (str.len var50E) 1))
(assert (<= (str.len var50F) 1))
(assert (<= (str.len var50G) 1))
(assert (<= (str.len var50H) 1))
(assert (= (str.++ preA (str.++ stem50 sufA)) (str.++ unch150A (str.++ ch50A unch250A))))
(assert (= (str.++ preB (str.++ stem50 sufB)) (str.++ unch150B (str.++ ch50B unch250B))))
(assert (= (str.++ preC (str.++ stem50 sufC)) (str.++ unch150C (str.++ ch50C unch250C))))
(assert (= (str.++ preD (str.++ stem50 sufD)) (str.++ unch150D (str.++ ch50D unch250D))))
(assert (= (str.++ preE (str.++ stem50 sufE)) (str.++ unch150E (str.++ ch50E unch250E))))
(assert (= (str.++ preF (str.++ stem50 sufF)) (str.++ unch150F (str.++ ch50F unch250F))))
(assert (= (str.++ preG (str.++ stem50 sufG)) (str.++ unch150G (str.++ ch50G unch250G))))
(assert (= (str.++ preH (str.++ stem50 sufH)) (str.++ unch150H (str.++ ch50H unch250H))))
(assert (= "kjXsjkj" (str.++ unch150G (str.++ var50G unch250G))))
(assert (= "k2stH" (str.++ unch150H (str.++ var50H unch250H))))
(assert (= (str.len stem50) l50))
(assert (= (ite (= ch50A var50A) 0 1) sc50A))
(assert (= (ite (= ch50B var50B) 0 1) sc50B))
(assert (= (ite (= ch50C var50C) 0 1) sc50C))
(assert (= (ite (= ch50D var50D) 0 1) sc50D))
(assert (= (ite (= ch50E var50E) 0 1) sc50E))
(assert (= (ite (= ch50F var50F) 0 1) sc50F))
(assert (= (ite (= ch50G var50G) 0 1) sc50G))
(assert (= (ite (= ch50H var50H) 0 1) sc50H))
(assert (<= sc50A 1))
(assert (<= sc50B 1))
(assert (<= sc50C 1))
(assert (<= sc50D 1))
(assert (<= sc50E 1))
(assert (<= sc50F 1))
(assert (<= sc50G 1))
(assert (<= sc50H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      sc7G
      sc7H
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      sc8G
      sc8H
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      sc9G
      sc9H
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      sc10G
      sc10H
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      sc11G
      sc11H
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      sc12G
      sc12H
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      sc13G
      sc13H
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      sc14G
      sc14H
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      sc15G
      sc15H
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      sc16G
      sc16H
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      sc17G
      sc17H
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      sc18G
      sc18H
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      sc19G
      sc19H
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      sc20G
      sc20H
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      sc21G
      sc21H
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      sc22G
      sc22H
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      sc23G
      sc23H
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      sc24G
      sc24H
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      sc25G
      sc25H
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      sc26G
      sc26H
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      sc27G
      sc27H
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      sc28G
      sc28H
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      sc29G
      sc29H
      0
      sc30A
      sc30B
      sc30C
      sc30D
      sc30E
      sc30F
      sc30G
      sc30H
      0
      sc31A
      sc31B
      sc31C
      sc31D
      sc31E
      sc31F
      sc31G
      sc31H
      0
      sc32A
      sc32B
      sc32C
      sc32D
      sc32E
      sc32F
      sc32G
      sc32H
      0
      sc33A
      sc33B
      sc33C
      sc33D
      sc33E
      sc33F
      sc33G
      sc33H
      0
      sc34A
      sc34B
      sc34C
      sc34D
      sc34E
      sc34F
      sc34G
      sc34H
      0
      sc35A
      sc35B
      sc35C
      sc35D
      sc35E
      sc35F
      sc35G
      sc35H
      0
      sc36A
      sc36B
      sc36C
      sc36D
      sc36E
      sc36F
      sc36G
      sc36H
      0
      sc37A
      sc37B
      sc37C
      sc37D
      sc37E
      sc37F
      sc37G
      sc37H
      0
      sc38A
      sc38B
      sc38C
      sc38D
      sc38E
      sc38F
      sc38G
      sc38H
      0
      sc39A
      sc39B
      sc39C
      sc39D
      sc39E
      sc39F
      sc39G
      sc39H
      0
      sc40A
      sc40B
      sc40C
      sc40D
      sc40E
      sc40F
      sc40G
      sc40H
      0
      sc41A
      sc41B
      sc41C
      sc41D
      sc41E
      sc41F
      sc41G
      sc41H
      0
      sc42A
      sc42B
      sc42C
      sc42D
      sc42E
      sc42F
      sc42G
      sc42H
      0
      sc43A
      sc43B
      sc43C
      sc43D
      sc43E
      sc43F
      sc43G
      sc43H
      0
      sc44A
      sc44B
      sc44C
      sc44D
      sc44E
      sc44F
      sc44G
      sc44H
      0
      sc45A
      sc45B
      sc45C
      sc45D
      sc45E
      sc45F
      sc45G
      sc45H
      0
      sc46A
      sc46B
      sc46C
      sc46D
      sc46E
      sc46F
      sc46G
      sc46H
      0
      sc47A
      sc47B
      sc47C
      sc47D
      sc47E
      sc47F
      sc47G
      sc47H
      0
      sc48A
      sc48B
      sc48C
      sc48D
      sc48E
      sc48F
      sc48G
      sc48H
      0
      sc49A
      sc49B
      sc49C
      sc49D
      sc49E
      sc49F
      sc49G
      sc49H
      0
      sc50A
      sc50B
      sc50C
      sc50D
      sc50E
      sc50F
      sc50G
      sc50H)
   10))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun var7G () String)
(declare-fun var7H () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun unch27G () String)
(declare-fun ch7G () String)
(declare-fun unch17G () String)
(declare-fun unch27H () String)
(declare-fun ch7H () String)
(declare-fun unch17H () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun sc7G () Int)
(declare-fun sc7H () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun var8G () String)
(declare-fun var8H () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun unch28G () String)
(declare-fun ch8G () String)
(declare-fun unch18G () String)
(declare-fun unch28H () String)
(declare-fun ch8H () String)
(declare-fun unch18H () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun sc8G () Int)
(declare-fun sc8H () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun var9G () String)
(declare-fun var9H () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun unch29G () String)
(declare-fun ch9G () String)
(declare-fun unch19G () String)
(declare-fun unch29H () String)
(declare-fun ch9H () String)
(declare-fun unch19H () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun sc9G () Int)
(declare-fun sc9H () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun var10G () String)
(declare-fun var10H () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun unch210G () String)
(declare-fun ch10G () String)
(declare-fun unch110G () String)
(declare-fun unch210H () String)
(declare-fun ch10H () String)
(declare-fun unch110H () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun sc10G () Int)
(declare-fun sc10H () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun var11G () String)
(declare-fun var11H () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun unch211G () String)
(declare-fun ch11G () String)
(declare-fun unch111G () String)
(declare-fun unch211H () String)
(declare-fun ch11H () String)
(declare-fun unch111H () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun sc11G () Int)
(declare-fun sc11H () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun var12G () String)
(declare-fun var12H () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun unch212G () String)
(declare-fun ch12G () String)
(declare-fun unch112G () String)
(declare-fun unch212H () String)
(declare-fun ch12H () String)
(declare-fun unch112H () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun sc12G () Int)
(declare-fun sc12H () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun var13G () String)
(declare-fun var13H () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun unch213G () String)
(declare-fun ch13G () String)
(declare-fun unch113G () String)
(declare-fun unch213H () String)
(declare-fun ch13H () String)
(declare-fun unch113H () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun sc13G () Int)
(declare-fun sc13H () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun var14G () String)
(declare-fun var14H () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun unch214G () String)
(declare-fun ch14G () String)
(declare-fun unch114G () String)
(declare-fun unch214H () String)
(declare-fun ch14H () String)
(declare-fun unch114H () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun sc14G () Int)
(declare-fun sc14H () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun var15G () String)
(declare-fun var15H () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun unch215G () String)
(declare-fun ch15G () String)
(declare-fun unch115G () String)
(declare-fun unch215H () String)
(declare-fun ch15H () String)
(declare-fun unch115H () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun sc15G () Int)
(declare-fun sc15H () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun var16G () String)
(declare-fun var16H () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun unch216G () String)
(declare-fun ch16G () String)
(declare-fun unch116G () String)
(declare-fun unch216H () String)
(declare-fun ch16H () String)
(declare-fun unch116H () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun sc16G () Int)
(declare-fun sc16H () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun var17G () String)
(declare-fun var17H () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun unch217G () String)
(declare-fun ch17G () String)
(declare-fun unch117G () String)
(declare-fun unch217H () String)
(declare-fun ch17H () String)
(declare-fun unch117H () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun sc17G () Int)
(declare-fun sc17H () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun var18G () String)
(declare-fun var18H () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun unch218G () String)
(declare-fun ch18G () String)
(declare-fun unch118G () String)
(declare-fun unch218H () String)
(declare-fun ch18H () String)
(declare-fun unch118H () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun sc18G () Int)
(declare-fun sc18H () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun var19G () String)
(declare-fun var19H () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun unch219G () String)
(declare-fun ch19G () String)
(declare-fun unch119G () String)
(declare-fun unch219H () String)
(declare-fun ch19H () String)
(declare-fun unch119H () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun sc19G () Int)
(declare-fun sc19H () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun var20G () String)
(declare-fun var20H () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun unch220G () String)
(declare-fun ch20G () String)
(declare-fun unch120G () String)
(declare-fun unch220H () String)
(declare-fun ch20H () String)
(declare-fun unch120H () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun sc20G () Int)
(declare-fun sc20H () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun var21G () String)
(declare-fun var21H () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun unch221G () String)
(declare-fun ch21G () String)
(declare-fun unch121G () String)
(declare-fun unch221H () String)
(declare-fun ch21H () String)
(declare-fun unch121H () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun sc21G () Int)
(declare-fun sc21H () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun var22G () String)
(declare-fun var22H () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun unch222G () String)
(declare-fun ch22G () String)
(declare-fun unch122G () String)
(declare-fun unch222H () String)
(declare-fun ch22H () String)
(declare-fun unch122H () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun sc22G () Int)
(declare-fun sc22H () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun var23G () String)
(declare-fun var23H () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun unch223G () String)
(declare-fun ch23G () String)
(declare-fun unch123G () String)
(declare-fun unch223H () String)
(declare-fun ch23H () String)
(declare-fun unch123H () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun sc23G () Int)
(declare-fun sc23H () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun var24G () String)
(declare-fun var24H () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun unch224G () String)
(declare-fun ch24G () String)
(declare-fun unch124G () String)
(declare-fun unch224H () String)
(declare-fun ch24H () String)
(declare-fun unch124H () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun sc24G () Int)
(declare-fun sc24H () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun var25G () String)
(declare-fun var25H () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun unch225G () String)
(declare-fun ch25G () String)
(declare-fun unch125G () String)
(declare-fun unch225H () String)
(declare-fun ch25H () String)
(declare-fun unch125H () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun sc25G () Int)
(declare-fun sc25H () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun var26G () String)
(declare-fun var26H () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun unch226G () String)
(declare-fun ch26G () String)
(declare-fun unch126G () String)
(declare-fun unch226H () String)
(declare-fun ch26H () String)
(declare-fun unch126H () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun sc26G () Int)
(declare-fun sc26H () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun var27G () String)
(declare-fun var27H () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun unch227G () String)
(declare-fun ch27G () String)
(declare-fun unch127G () String)
(declare-fun unch227H () String)
(declare-fun ch27H () String)
(declare-fun unch127H () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun sc27G () Int)
(declare-fun sc27H () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun var28G () String)
(declare-fun var28H () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun unch228G () String)
(declare-fun ch28G () String)
(declare-fun unch128G () String)
(declare-fun unch228H () String)
(declare-fun ch28H () String)
(declare-fun unch128H () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun sc28G () Int)
(declare-fun sc28H () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun var29G () String)
(declare-fun var29H () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun unch229G () String)
(declare-fun ch29G () String)
(declare-fun unch129G () String)
(declare-fun unch229H () String)
(declare-fun ch29H () String)
(declare-fun unch129H () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun sc29G () Int)
(declare-fun sc29H () Int)
(declare-fun var30A () String)
(declare-fun var30B () String)
(declare-fun var30C () String)
(declare-fun var30D () String)
(declare-fun var30E () String)
(declare-fun var30F () String)
(declare-fun var30G () String)
(declare-fun var30H () String)
(declare-fun unch230A () String)
(declare-fun ch30A () String)
(declare-fun unch130A () String)
(declare-fun stem30 () String)
(declare-fun unch230B () String)
(declare-fun ch30B () String)
(declare-fun unch130B () String)
(declare-fun unch230C () String)
(declare-fun ch30C () String)
(declare-fun unch130C () String)
(declare-fun unch230D () String)
(declare-fun ch30D () String)
(declare-fun unch130D () String)
(declare-fun unch230E () String)
(declare-fun ch30E () String)
(declare-fun unch130E () String)
(declare-fun unch230F () String)
(declare-fun ch30F () String)
(declare-fun unch130F () String)
(declare-fun unch230G () String)
(declare-fun ch30G () String)
(declare-fun unch130G () String)
(declare-fun unch230H () String)
(declare-fun ch30H () String)
(declare-fun unch130H () String)
(declare-fun l30 () Int)
(declare-fun sc30A () Int)
(declare-fun sc30B () Int)
(declare-fun sc30C () Int)
(declare-fun sc30D () Int)
(declare-fun sc30E () Int)
(declare-fun sc30F () Int)
(declare-fun sc30G () Int)
(declare-fun sc30H () Int)
(declare-fun var31A () String)
(declare-fun var31B () String)
(declare-fun var31C () String)
(declare-fun var31D () String)
(declare-fun var31E () String)
(declare-fun var31F () String)
(declare-fun var31G () String)
(declare-fun var31H () String)
(declare-fun unch231A () String)
(declare-fun ch31A () String)
(declare-fun unch131A () String)
(declare-fun stem31 () String)
(declare-fun unch231B () String)
(declare-fun ch31B () String)
(declare-fun unch131B () String)
(declare-fun unch231C () String)
(declare-fun ch31C () String)
(declare-fun unch131C () String)
(declare-fun unch231D () String)
(declare-fun ch31D () String)
(declare-fun unch131D () String)
(declare-fun unch231E () String)
(declare-fun ch31E () String)
(declare-fun unch131E () String)
(declare-fun unch231F () String)
(declare-fun ch31F () String)
(declare-fun unch131F () String)
(declare-fun unch231G () String)
(declare-fun ch31G () String)
(declare-fun unch131G () String)
(declare-fun unch231H () String)
(declare-fun ch31H () String)
(declare-fun unch131H () String)
(declare-fun l31 () Int)
(declare-fun sc31A () Int)
(declare-fun sc31B () Int)
(declare-fun sc31C () Int)
(declare-fun sc31D () Int)
(declare-fun sc31E () Int)
(declare-fun sc31F () Int)
(declare-fun sc31G () Int)
(declare-fun sc31H () Int)
(declare-fun var32A () String)
(declare-fun var32B () String)
(declare-fun var32C () String)
(declare-fun var32D () String)
(declare-fun var32E () String)
(declare-fun var32F () String)
(declare-fun var32G () String)
(declare-fun var32H () String)
(declare-fun unch232A () String)
(declare-fun ch32A () String)
(declare-fun unch132A () String)
(declare-fun stem32 () String)
(declare-fun unch232B () String)
(declare-fun ch32B () String)
(declare-fun unch132B () String)
(declare-fun unch232C () String)
(declare-fun ch32C () String)
(declare-fun unch132C () String)
(declare-fun unch232D () String)
(declare-fun ch32D () String)
(declare-fun unch132D () String)
(declare-fun unch232E () String)
(declare-fun ch32E () String)
(declare-fun unch132E () String)
(declare-fun unch232F () String)
(declare-fun ch32F () String)
(declare-fun unch132F () String)
(declare-fun unch232G () String)
(declare-fun ch32G () String)
(declare-fun unch132G () String)
(declare-fun unch232H () String)
(declare-fun ch32H () String)
(declare-fun unch132H () String)
(declare-fun l32 () Int)
(declare-fun sc32A () Int)
(declare-fun sc32B () Int)
(declare-fun sc32C () Int)
(declare-fun sc32D () Int)
(declare-fun sc32E () Int)
(declare-fun sc32F () Int)
(declare-fun sc32G () Int)
(declare-fun sc32H () Int)
(declare-fun var33A () String)
(declare-fun var33B () String)
(declare-fun var33C () String)
(declare-fun var33D () String)
(declare-fun var33E () String)
(declare-fun var33F () String)
(declare-fun var33G () String)
(declare-fun var33H () String)
(declare-fun unch233A () String)
(declare-fun ch33A () String)
(declare-fun unch133A () String)
(declare-fun stem33 () String)
(declare-fun unch233B () String)
(declare-fun ch33B () String)
(declare-fun unch133B () String)
(declare-fun unch233C () String)
(declare-fun ch33C () String)
(declare-fun unch133C () String)
(declare-fun unch233D () String)
(declare-fun ch33D () String)
(declare-fun unch133D () String)
(declare-fun unch233E () String)
(declare-fun ch33E () String)
(declare-fun unch133E () String)
(declare-fun unch233F () String)
(declare-fun ch33F () String)
(declare-fun unch133F () String)
(declare-fun unch233G () String)
(declare-fun ch33G () String)
(declare-fun unch133G () String)
(declare-fun unch233H () String)
(declare-fun ch33H () String)
(declare-fun unch133H () String)
(declare-fun l33 () Int)
(declare-fun sc33A () Int)
(declare-fun sc33B () Int)
(declare-fun sc33C () Int)
(declare-fun sc33D () Int)
(declare-fun sc33E () Int)
(declare-fun sc33F () Int)
(declare-fun sc33G () Int)
(declare-fun sc33H () Int)
(declare-fun var34A () String)
(declare-fun var34B () String)
(declare-fun var34C () String)
(declare-fun var34D () String)
(declare-fun var34E () String)
(declare-fun var34F () String)
(declare-fun var34G () String)
(declare-fun var34H () String)
(declare-fun unch234A () String)
(declare-fun ch34A () String)
(declare-fun unch134A () String)
(declare-fun stem34 () String)
(declare-fun unch234B () String)
(declare-fun ch34B () String)
(declare-fun unch134B () String)
(declare-fun unch234C () String)
(declare-fun ch34C () String)
(declare-fun unch134C () String)
(declare-fun unch234D () String)
(declare-fun ch34D () String)
(declare-fun unch134D () String)
(declare-fun unch234E () String)
(declare-fun ch34E () String)
(declare-fun unch134E () String)
(declare-fun unch234F () String)
(declare-fun ch34F () String)
(declare-fun unch134F () String)
(declare-fun unch234G () String)
(declare-fun ch34G () String)
(declare-fun unch134G () String)
(declare-fun unch234H () String)
(declare-fun ch34H () String)
(declare-fun unch134H () String)
(declare-fun l34 () Int)
(declare-fun sc34A () Int)
(declare-fun sc34B () Int)
(declare-fun sc34C () Int)
(declare-fun sc34D () Int)
(declare-fun sc34E () Int)
(declare-fun sc34F () Int)
(declare-fun sc34G () Int)
(declare-fun sc34H () Int)
(declare-fun var35A () String)
(declare-fun var35B () String)
(declare-fun var35C () String)
(declare-fun var35D () String)
(declare-fun var35E () String)
(declare-fun var35F () String)
(declare-fun var35G () String)
(declare-fun var35H () String)
(declare-fun unch235A () String)
(declare-fun ch35A () String)
(declare-fun unch135A () String)
(declare-fun stem35 () String)
(declare-fun unch235B () String)
(declare-fun ch35B () String)
(declare-fun unch135B () String)
(declare-fun unch235C () String)
(declare-fun ch35C () String)
(declare-fun unch135C () String)
(declare-fun unch235D () String)
(declare-fun ch35D () String)
(declare-fun unch135D () String)
(declare-fun unch235E () String)
(declare-fun ch35E () String)
(declare-fun unch135E () String)
(declare-fun unch235F () String)
(declare-fun ch35F () String)
(declare-fun unch135F () String)
(declare-fun unch235G () String)
(declare-fun ch35G () String)
(declare-fun unch135G () String)
(declare-fun unch235H () String)
(declare-fun ch35H () String)
(declare-fun unch135H () String)
(declare-fun l35 () Int)
(declare-fun sc35A () Int)
(declare-fun sc35B () Int)
(declare-fun sc35C () Int)
(declare-fun sc35D () Int)
(declare-fun sc35E () Int)
(declare-fun sc35F () Int)
(declare-fun sc35G () Int)
(declare-fun sc35H () Int)
(declare-fun var36A () String)
(declare-fun var36B () String)
(declare-fun var36C () String)
(declare-fun var36D () String)
(declare-fun var36E () String)
(declare-fun var36F () String)
(declare-fun var36G () String)
(declare-fun var36H () String)
(declare-fun unch236A () String)
(declare-fun ch36A () String)
(declare-fun unch136A () String)
(declare-fun stem36 () String)
(declare-fun unch236B () String)
(declare-fun ch36B () String)
(declare-fun unch136B () String)
(declare-fun unch236C () String)
(declare-fun ch36C () String)
(declare-fun unch136C () String)
(declare-fun unch236D () String)
(declare-fun ch36D () String)
(declare-fun unch136D () String)
(declare-fun unch236E () String)
(declare-fun ch36E () String)
(declare-fun unch136E () String)
(declare-fun unch236F () String)
(declare-fun ch36F () String)
(declare-fun unch136F () String)
(declare-fun unch236G () String)
(declare-fun ch36G () String)
(declare-fun unch136G () String)
(declare-fun unch236H () String)
(declare-fun ch36H () String)
(declare-fun unch136H () String)
(declare-fun l36 () Int)
(declare-fun sc36A () Int)
(declare-fun sc36B () Int)
(declare-fun sc36C () Int)
(declare-fun sc36D () Int)
(declare-fun sc36E () Int)
(declare-fun sc36F () Int)
(declare-fun sc36G () Int)
(declare-fun sc36H () Int)
(declare-fun var37A () String)
(declare-fun var37B () String)
(declare-fun var37C () String)
(declare-fun var37D () String)
(declare-fun var37E () String)
(declare-fun var37F () String)
(declare-fun var37G () String)
(declare-fun var37H () String)
(declare-fun unch237A () String)
(declare-fun ch37A () String)
(declare-fun unch137A () String)
(declare-fun stem37 () String)
(declare-fun unch237B () String)
(declare-fun ch37B () String)
(declare-fun unch137B () String)
(declare-fun unch237C () String)
(declare-fun ch37C () String)
(declare-fun unch137C () String)
(declare-fun unch237D () String)
(declare-fun ch37D () String)
(declare-fun unch137D () String)
(declare-fun unch237E () String)
(declare-fun ch37E () String)
(declare-fun unch137E () String)
(declare-fun unch237F () String)
(declare-fun ch37F () String)
(declare-fun unch137F () String)
(declare-fun unch237G () String)
(declare-fun ch37G () String)
(declare-fun unch137G () String)
(declare-fun unch237H () String)
(declare-fun ch37H () String)
(declare-fun unch137H () String)
(declare-fun l37 () Int)
(declare-fun sc37A () Int)
(declare-fun sc37B () Int)
(declare-fun sc37C () Int)
(declare-fun sc37D () Int)
(declare-fun sc37E () Int)
(declare-fun sc37F () Int)
(declare-fun sc37G () Int)
(declare-fun sc37H () Int)
(declare-fun var38A () String)
(declare-fun var38B () String)
(declare-fun var38C () String)
(declare-fun var38D () String)
(declare-fun var38E () String)
(declare-fun var38F () String)
(declare-fun var38G () String)
(declare-fun var38H () String)
(declare-fun unch238A () String)
(declare-fun ch38A () String)
(declare-fun unch138A () String)
(declare-fun stem38 () String)
(declare-fun unch238B () String)
(declare-fun ch38B () String)
(declare-fun unch138B () String)
(declare-fun unch238C () String)
(declare-fun ch38C () String)
(declare-fun unch138C () String)
(declare-fun unch238D () String)
(declare-fun ch38D () String)
(declare-fun unch138D () String)
(declare-fun unch238E () String)
(declare-fun ch38E () String)
(declare-fun unch138E () String)
(declare-fun unch238F () String)
(declare-fun ch38F () String)
(declare-fun unch138F () String)
(declare-fun unch238G () String)
(declare-fun ch38G () String)
(declare-fun unch138G () String)
(declare-fun unch238H () String)
(declare-fun ch38H () String)
(declare-fun unch138H () String)
(declare-fun l38 () Int)
(declare-fun sc38A () Int)
(declare-fun sc38B () Int)
(declare-fun sc38C () Int)
(declare-fun sc38D () Int)
(declare-fun sc38E () Int)
(declare-fun sc38F () Int)
(declare-fun sc38G () Int)
(declare-fun sc38H () Int)
(declare-fun var39A () String)
(declare-fun var39B () String)
(declare-fun var39C () String)
(declare-fun var39D () String)
(declare-fun var39E () String)
(declare-fun var39F () String)
(declare-fun var39G () String)
(declare-fun var39H () String)
(declare-fun unch239A () String)
(declare-fun ch39A () String)
(declare-fun unch139A () String)
(declare-fun stem39 () String)
(declare-fun unch239B () String)
(declare-fun ch39B () String)
(declare-fun unch139B () String)
(declare-fun unch239C () String)
(declare-fun ch39C () String)
(declare-fun unch139C () String)
(declare-fun unch239D () String)
(declare-fun ch39D () String)
(declare-fun unch139D () String)
(declare-fun unch239E () String)
(declare-fun ch39E () String)
(declare-fun unch139E () String)
(declare-fun unch239F () String)
(declare-fun ch39F () String)
(declare-fun unch139F () String)
(declare-fun unch239G () String)
(declare-fun ch39G () String)
(declare-fun unch139G () String)
(declare-fun unch239H () String)
(declare-fun ch39H () String)
(declare-fun unch139H () String)
(declare-fun l39 () Int)
(declare-fun sc39A () Int)
(declare-fun sc39B () Int)
(declare-fun sc39C () Int)
(declare-fun sc39D () Int)
(declare-fun sc39E () Int)
(declare-fun sc39F () Int)
(declare-fun sc39G () Int)
(declare-fun sc39H () Int)
(declare-fun var40A () String)
(declare-fun var40B () String)
(declare-fun var40C () String)
(declare-fun var40D () String)
(declare-fun var40E () String)
(declare-fun var40F () String)
(declare-fun var40G () String)
(declare-fun var40H () String)
(declare-fun unch240A () String)
(declare-fun ch40A () String)
(declare-fun unch140A () String)
(declare-fun stem40 () String)
(declare-fun unch240B () String)
(declare-fun ch40B () String)
(declare-fun unch140B () String)
(declare-fun unch240C () String)
(declare-fun ch40C () String)
(declare-fun unch140C () String)
(declare-fun unch240D () String)
(declare-fun ch40D () String)
(declare-fun unch140D () String)
(declare-fun unch240E () String)
(declare-fun ch40E () String)
(declare-fun unch140E () String)
(declare-fun unch240F () String)
(declare-fun ch40F () String)
(declare-fun unch140F () String)
(declare-fun unch240G () String)
(declare-fun ch40G () String)
(declare-fun unch140G () String)
(declare-fun unch240H () String)
(declare-fun ch40H () String)
(declare-fun unch140H () String)
(declare-fun l40 () Int)
(declare-fun sc40A () Int)
(declare-fun sc40B () Int)
(declare-fun sc40C () Int)
(declare-fun sc40D () Int)
(declare-fun sc40E () Int)
(declare-fun sc40F () Int)
(declare-fun sc40G () Int)
(declare-fun sc40H () Int)
(declare-fun var41A () String)
(declare-fun var41B () String)
(declare-fun var41C () String)
(declare-fun var41D () String)
(declare-fun var41E () String)
(declare-fun var41F () String)
(declare-fun var41G () String)
(declare-fun var41H () String)
(declare-fun unch241A () String)
(declare-fun ch41A () String)
(declare-fun unch141A () String)
(declare-fun stem41 () String)
(declare-fun unch241B () String)
(declare-fun ch41B () String)
(declare-fun unch141B () String)
(declare-fun unch241C () String)
(declare-fun ch41C () String)
(declare-fun unch141C () String)
(declare-fun unch241D () String)
(declare-fun ch41D () String)
(declare-fun unch141D () String)
(declare-fun unch241E () String)
(declare-fun ch41E () String)
(declare-fun unch141E () String)
(declare-fun unch241F () String)
(declare-fun ch41F () String)
(declare-fun unch141F () String)
(declare-fun unch241G () String)
(declare-fun ch41G () String)
(declare-fun unch141G () String)
(declare-fun unch241H () String)
(declare-fun ch41H () String)
(declare-fun unch141H () String)
(declare-fun l41 () Int)
(declare-fun sc41A () Int)
(declare-fun sc41B () Int)
(declare-fun sc41C () Int)
(declare-fun sc41D () Int)
(declare-fun sc41E () Int)
(declare-fun sc41F () Int)
(declare-fun sc41G () Int)
(declare-fun sc41H () Int)
(declare-fun var42A () String)
(declare-fun var42B () String)
(declare-fun var42C () String)
(declare-fun var42D () String)
(declare-fun var42E () String)
(declare-fun var42F () String)
(declare-fun var42G () String)
(declare-fun var42H () String)
(declare-fun unch242A () String)
(declare-fun ch42A () String)
(declare-fun unch142A () String)
(declare-fun stem42 () String)
(declare-fun unch242B () String)
(declare-fun ch42B () String)
(declare-fun unch142B () String)
(declare-fun unch242C () String)
(declare-fun ch42C () String)
(declare-fun unch142C () String)
(declare-fun unch242D () String)
(declare-fun ch42D () String)
(declare-fun unch142D () String)
(declare-fun unch242E () String)
(declare-fun ch42E () String)
(declare-fun unch142E () String)
(declare-fun unch242F () String)
(declare-fun ch42F () String)
(declare-fun unch142F () String)
(declare-fun unch242G () String)
(declare-fun ch42G () String)
(declare-fun unch142G () String)
(declare-fun unch242H () String)
(declare-fun ch42H () String)
(declare-fun unch142H () String)
(declare-fun l42 () Int)
(declare-fun sc42A () Int)
(declare-fun sc42B () Int)
(declare-fun sc42C () Int)
(declare-fun sc42D () Int)
(declare-fun sc42E () Int)
(declare-fun sc42F () Int)
(declare-fun sc42G () Int)
(declare-fun sc42H () Int)
(declare-fun var43A () String)
(declare-fun var43B () String)
(declare-fun var43C () String)
(declare-fun var43D () String)
(declare-fun var43E () String)
(declare-fun var43F () String)
(declare-fun var43G () String)
(declare-fun var43H () String)
(declare-fun unch243A () String)
(declare-fun ch43A () String)
(declare-fun unch143A () String)
(declare-fun stem43 () String)
(declare-fun unch243B () String)
(declare-fun ch43B () String)
(declare-fun unch143B () String)
(declare-fun unch243C () String)
(declare-fun ch43C () String)
(declare-fun unch143C () String)
(declare-fun unch243D () String)
(declare-fun ch43D () String)
(declare-fun unch143D () String)
(declare-fun unch243E () String)
(declare-fun ch43E () String)
(declare-fun unch143E () String)
(declare-fun unch243F () String)
(declare-fun ch43F () String)
(declare-fun unch143F () String)
(declare-fun unch243G () String)
(declare-fun ch43G () String)
(declare-fun unch143G () String)
(declare-fun unch243H () String)
(declare-fun ch43H () String)
(declare-fun unch143H () String)
(declare-fun l43 () Int)
(declare-fun sc43A () Int)
(declare-fun sc43B () Int)
(declare-fun sc43C () Int)
(declare-fun sc43D () Int)
(declare-fun sc43E () Int)
(declare-fun sc43F () Int)
(declare-fun sc43G () Int)
(declare-fun sc43H () Int)
(declare-fun var44A () String)
(declare-fun var44B () String)
(declare-fun var44C () String)
(declare-fun var44D () String)
(declare-fun var44E () String)
(declare-fun var44F () String)
(declare-fun var44G () String)
(declare-fun var44H () String)
(declare-fun unch244A () String)
(declare-fun ch44A () String)
(declare-fun unch144A () String)
(declare-fun stem44 () String)
(declare-fun unch244B () String)
(declare-fun ch44B () String)
(declare-fun unch144B () String)
(declare-fun unch244C () String)
(declare-fun ch44C () String)
(declare-fun unch144C () String)
(declare-fun unch244D () String)
(declare-fun ch44D () String)
(declare-fun unch144D () String)
(declare-fun unch244E () String)
(declare-fun ch44E () String)
(declare-fun unch144E () String)
(declare-fun unch244F () String)
(declare-fun ch44F () String)
(declare-fun unch144F () String)
(declare-fun unch244G () String)
(declare-fun ch44G () String)
(declare-fun unch144G () String)
(declare-fun unch244H () String)
(declare-fun ch44H () String)
(declare-fun unch144H () String)
(declare-fun l44 () Int)
(declare-fun sc44A () Int)
(declare-fun sc44B () Int)
(declare-fun sc44C () Int)
(declare-fun sc44D () Int)
(declare-fun sc44E () Int)
(declare-fun sc44F () Int)
(declare-fun sc44G () Int)
(declare-fun sc44H () Int)
(declare-fun var45A () String)
(declare-fun var45B () String)
(declare-fun var45C () String)
(declare-fun var45D () String)
(declare-fun var45E () String)
(declare-fun var45F () String)
(declare-fun var45G () String)
(declare-fun var45H () String)
(declare-fun unch245A () String)
(declare-fun ch45A () String)
(declare-fun unch145A () String)
(declare-fun stem45 () String)
(declare-fun unch245B () String)
(declare-fun ch45B () String)
(declare-fun unch145B () String)
(declare-fun unch245C () String)
(declare-fun ch45C () String)
(declare-fun unch145C () String)
(declare-fun unch245D () String)
(declare-fun ch45D () String)
(declare-fun unch145D () String)
(declare-fun unch245E () String)
(declare-fun ch45E () String)
(declare-fun unch145E () String)
(declare-fun unch245F () String)
(declare-fun ch45F () String)
(declare-fun unch145F () String)
(declare-fun unch245G () String)
(declare-fun ch45G () String)
(declare-fun unch145G () String)
(declare-fun unch245H () String)
(declare-fun ch45H () String)
(declare-fun unch145H () String)
(declare-fun l45 () Int)
(declare-fun sc45A () Int)
(declare-fun sc45B () Int)
(declare-fun sc45C () Int)
(declare-fun sc45D () Int)
(declare-fun sc45E () Int)
(declare-fun sc45F () Int)
(declare-fun sc45G () Int)
(declare-fun sc45H () Int)
(declare-fun var46A () String)
(declare-fun var46B () String)
(declare-fun var46C () String)
(declare-fun var46D () String)
(declare-fun var46E () String)
(declare-fun var46F () String)
(declare-fun var46G () String)
(declare-fun var46H () String)
(declare-fun unch246A () String)
(declare-fun ch46A () String)
(declare-fun unch146A () String)
(declare-fun stem46 () String)
(declare-fun unch246B () String)
(declare-fun ch46B () String)
(declare-fun unch146B () String)
(declare-fun unch246C () String)
(declare-fun ch46C () String)
(declare-fun unch146C () String)
(declare-fun unch246D () String)
(declare-fun ch46D () String)
(declare-fun unch146D () String)
(declare-fun unch246E () String)
(declare-fun ch46E () String)
(declare-fun unch146E () String)
(declare-fun unch246F () String)
(declare-fun ch46F () String)
(declare-fun unch146F () String)
(declare-fun unch246G () String)
(declare-fun ch46G () String)
(declare-fun unch146G () String)
(declare-fun unch246H () String)
(declare-fun ch46H () String)
(declare-fun unch146H () String)
(declare-fun l46 () Int)
(declare-fun sc46A () Int)
(declare-fun sc46B () Int)
(declare-fun sc46C () Int)
(declare-fun sc46D () Int)
(declare-fun sc46E () Int)
(declare-fun sc46F () Int)
(declare-fun sc46G () Int)
(declare-fun sc46H () Int)
(declare-fun var47A () String)
(declare-fun var47B () String)
(declare-fun var47C () String)
(declare-fun var47D () String)
(declare-fun var47E () String)
(declare-fun var47F () String)
(declare-fun var47G () String)
(declare-fun var47H () String)
(declare-fun unch247A () String)
(declare-fun ch47A () String)
(declare-fun unch147A () String)
(declare-fun stem47 () String)
(declare-fun unch247B () String)
(declare-fun ch47B () String)
(declare-fun unch147B () String)
(declare-fun unch247C () String)
(declare-fun ch47C () String)
(declare-fun unch147C () String)
(declare-fun unch247D () String)
(declare-fun ch47D () String)
(declare-fun unch147D () String)
(declare-fun unch247E () String)
(declare-fun ch47E () String)
(declare-fun unch147E () String)
(declare-fun unch247F () String)
(declare-fun ch47F () String)
(declare-fun unch147F () String)
(declare-fun unch247G () String)
(declare-fun ch47G () String)
(declare-fun unch147G () String)
(declare-fun unch247H () String)
(declare-fun ch47H () String)
(declare-fun unch147H () String)
(declare-fun l47 () Int)
(declare-fun sc47A () Int)
(declare-fun sc47B () Int)
(declare-fun sc47C () Int)
(declare-fun sc47D () Int)
(declare-fun sc47E () Int)
(declare-fun sc47F () Int)
(declare-fun sc47G () Int)
(declare-fun sc47H () Int)
(declare-fun var48A () String)
(declare-fun var48B () String)
(declare-fun var48C () String)
(declare-fun var48D () String)
(declare-fun var48E () String)
(declare-fun var48F () String)
(declare-fun var48G () String)
(declare-fun var48H () String)
(declare-fun unch248A () String)
(declare-fun ch48A () String)
(declare-fun unch148A () String)
(declare-fun stem48 () String)
(declare-fun unch248B () String)
(declare-fun ch48B () String)
(declare-fun unch148B () String)
(declare-fun unch248C () String)
(declare-fun ch48C () String)
(declare-fun unch148C () String)
(declare-fun unch248D () String)
(declare-fun ch48D () String)
(declare-fun unch148D () String)
(declare-fun unch248E () String)
(declare-fun ch48E () String)
(declare-fun unch148E () String)
(declare-fun unch248F () String)
(declare-fun ch48F () String)
(declare-fun unch148F () String)
(declare-fun unch248G () String)
(declare-fun ch48G () String)
(declare-fun unch148G () String)
(declare-fun unch248H () String)
(declare-fun ch48H () String)
(declare-fun unch148H () String)
(declare-fun l48 () Int)
(declare-fun sc48A () Int)
(declare-fun sc48B () Int)
(declare-fun sc48C () Int)
(declare-fun sc48D () Int)
(declare-fun sc48E () Int)
(declare-fun sc48F () Int)
(declare-fun sc48G () Int)
(declare-fun sc48H () Int)
(declare-fun var49A () String)
(declare-fun var49B () String)
(declare-fun var49C () String)
(declare-fun var49D () String)
(declare-fun var49E () String)
(declare-fun var49F () String)
(declare-fun var49G () String)
(declare-fun var49H () String)
(declare-fun unch249A () String)
(declare-fun ch49A () String)
(declare-fun unch149A () String)
(declare-fun stem49 () String)
(declare-fun unch249B () String)
(declare-fun ch49B () String)
(declare-fun unch149B () String)
(declare-fun unch249C () String)
(declare-fun ch49C () String)
(declare-fun unch149C () String)
(declare-fun unch249D () String)
(declare-fun ch49D () String)
(declare-fun unch149D () String)
(declare-fun unch249E () String)
(declare-fun ch49E () String)
(declare-fun unch149E () String)
(declare-fun unch249F () String)
(declare-fun ch49F () String)
(declare-fun unch149F () String)
(declare-fun unch249G () String)
(declare-fun ch49G () String)
(declare-fun unch149G () String)
(declare-fun unch249H () String)
(declare-fun ch49H () String)
(declare-fun unch149H () String)
(declare-fun l49 () Int)
(declare-fun sc49A () Int)
(declare-fun sc49B () Int)
(declare-fun sc49C () Int)
(declare-fun sc49D () Int)
(declare-fun sc49E () Int)
(declare-fun sc49F () Int)
(declare-fun sc49G () Int)
(declare-fun sc49H () Int)
(declare-fun var50A () String)
(declare-fun var50B () String)
(declare-fun var50C () String)
(declare-fun var50D () String)
(declare-fun var50E () String)
(declare-fun var50F () String)
(declare-fun var50G () String)
(declare-fun var50H () String)
(declare-fun unch250A () String)
(declare-fun ch50A () String)
(declare-fun unch150A () String)
(declare-fun stem50 () String)
(declare-fun unch250B () String)
(declare-fun ch50B () String)
(declare-fun unch150B () String)
(declare-fun unch250C () String)
(declare-fun ch50C () String)
(declare-fun unch150C () String)
(declare-fun unch250D () String)
(declare-fun ch50D () String)
(declare-fun unch150D () String)
(declare-fun unch250E () String)
(declare-fun ch50E () String)
(declare-fun unch150E () String)
(declare-fun unch250F () String)
(declare-fun ch50F () String)
(declare-fun unch150F () String)
(declare-fun unch250G () String)
(declare-fun ch50G () String)
(declare-fun unch150G () String)
(declare-fun unch250H () String)
(declare-fun ch50H () String)
(declare-fun unch150H () String)
(declare-fun l50 () Int)
(declare-fun sc50A () Int)
(declare-fun sc50B () Int)
(declare-fun sc50C () Int)
(declare-fun sc50D () Int)
(declare-fun sc50E () Int)
(declare-fun sc50F () Int)
(declare-fun sc50G () Int)
(declare-fun sc50H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "plOst" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "plastO" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "plasjkjX" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "skorZx" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "skoruxO" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "skorusjX" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "1jrjXx" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "1jrjixO" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "1jrjisjX" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "pastZx" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "pastuxO" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "pastusjX" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "mjnjZx" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "mjnjZxa" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "mjnjZsji" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "plZ1" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "plZ1a" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "plZzji" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "sjtjX1" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "st21a" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "st2zji" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (<= (str.len var7G) 1))
(assert (<= (str.len var7H) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= (str.++ preG (str.++ stem7 sufG)) (str.++ unch17G (str.++ ch7G unch27G))))
(assert (= (str.++ preH (str.++ stem7 sufH)) (str.++ unch17H (str.++ ch7H unch27H))))
(assert (= "sOk" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "sOka" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "sOtsji" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (= (ite (= ch7G var7G) 0 1) sc7G))
(assert (= (ite (= ch7H var7H) 0 1) sc7H))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= sc7G 1))
(assert (<= sc7H 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (<= (str.len var8G) 1))
(assert (<= (str.len var8H) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= (str.++ preG (str.++ stem8 sufG)) (str.++ unch18G (str.++ ch8G unch28G))))
(assert (= (str.++ preH (str.++ stem8 sufH)) (str.++ unch18H (str.++ ch8H unch28H))))
(assert (= "b3k" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "bHkO" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "bHtsjX" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (= (ite (= ch8G var8G) 0 1) sc8G))
(assert (= (ite (= ch8H var8H) 0 1) sc8H))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= sc8G 1))
(assert (<= sc8H 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (<= (str.len var9G) 1))
(assert (<= (str.len var9H) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= (str.++ preG (str.++ stem9 sufG)) (str.++ unch19G (str.++ ch9G unch29G))))
(assert (= (str.++ preH (str.++ stem9 sufH)) (str.++ unch19H (str.++ ch9H unch29H))))
(assert (= "l3st" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "lHstO" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "lHsjkjX" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (= (ite (= ch9G var9G) 0 1) sc9G))
(assert (= (ite (= ch9H var9H) 0 1) sc9H))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= sc9G 1))
(assert (<= sc9H 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (<= (str.len var10G) 1))
(assert (<= (str.len var10H) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= (str.++ preG (str.++ stem10 sufG)) (str.++ unch110G (str.++ ch10G unch210G))))
(assert (= (str.++ preH (str.++ stem10 sufH)) (str.++ unch110H (str.++ ch10H unch210H))))
(assert (= "l3st" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "l3sta" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "l3sjkji" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (= (ite (= ch10G var10G) 0 1) sc10G))
(assert (= (ite (= ch10H var10H) 0 1) sc10H))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= sc10G 1))
(assert (<= sc10H 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (<= (str.len var11G) 1))
(assert (<= (str.len var11H) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= (str.++ preG (str.++ stem11 sufG)) (str.++ unch111G (str.++ ch11G unch211G))))
(assert (= (str.++ preH (str.++ stem11 sufH)) (str.++ unch111H (str.++ ch11H unch211H))))
(assert (= "pjljXt" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "pl2ta" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "pl2kji" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (= (ite (= ch11G var11G) 0 1) sc11G))
(assert (= (ite (= ch11H var11H) 0 1) sc11H))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= sc11G 1))
(assert (<= sc11H 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (<= (str.len var12G) 1))
(assert (<= (str.len var12H) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= (str.++ preG (str.++ stem12 sufG)) (str.++ unch112G (str.++ ch12G unch212G))))
(assert (= (str.++ preH (str.++ stem12 sufH)) (str.++ unch112H (str.++ ch12H unch212H))))
(assert (= "sjmjrjXd" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "smr2da" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "smr2gji" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (= (ite (= ch12G var12G) 0 1) sc12G))
(assert (= (ite (= ch12H var12H) 0 1) sc12H))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= sc12G 1))
(assert (<= sc12H 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (<= (str.len var13G) 1))
(assert (<= (str.len var13H) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= (str.++ preG (str.++ stem13 sufG)) (str.++ unch113G (str.++ ch13G unch213G))))
(assert (= (str.++ preH (str.++ stem13 sufH)) (str.++ unch113H (str.++ ch13H unch213H))))
(assert (= "fjXst" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "fostO" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "fosjkjX" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (= (ite (= ch13G var13G) 0 1) sc13G))
(assert (= (ite (= ch13H var13H) 0 1) sc13H))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= sc13G 1))
(assert (<= sc13H 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (<= (str.len var14G) 1))
(assert (<= (str.len var14H) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= (str.++ preG (str.++ stem14 sufG)) (str.++ unch114G (str.++ ch14G unch214G))))
(assert (= (str.++ preH (str.++ stem14 sufH)) (str.++ unch114H (str.++ ch14H unch214H))))
(assert (= "mjXst" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "m2sta" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "m2sjkji" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (= (ite (= ch14G var14G) 0 1) sc14G))
(assert (= (ite (= ch14H var14H) 0 1) sc14H))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= sc14G 1))
(assert (<= sc14H 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (<= (str.len var15G) 1))
(assert (<= (str.len var15H) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= (str.++ preG (str.++ stem15 sufG)) (str.++ unch115G (str.++ ch15G unch215G))))
(assert (= (str.++ preH (str.++ stem15 sufH)) (str.++ unch115H (str.++ ch15H unch215H))))
(assert (= "ljXd" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "l4du" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "lHdZ" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (= (ite (= ch15G var15G) 0 1) sc15G))
(assert (= (ite (= ch15H var15H) 0 1) sc15H))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= sc15G 1))
(assert (<= sc15H 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (<= (str.len var16G) 1))
(assert (<= (str.len var16H) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= (str.++ preG (str.++ stem16 sufG)) (str.++ unch116G (str.++ ch16G unch216G))))
(assert (= (str.++ preH (str.++ stem16 sufH)) (str.++ unch116H (str.++ ch16H unch216H))))
(assert (= "djrjXt" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "dr2ta" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "dr2kji" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (= (ite (= ch16G var16G) 0 1) sc16G))
(assert (= (ite (= ch16H var16H) 0 1) sc16H))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= sc16G 1))
(assert (<= sc16H 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (<= (str.len var17G) 1))
(assert (<= (str.len var17H) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= (str.++ preG (str.++ stem17 sufG)) (str.++ unch117G (str.++ ch17G unch217G))))
(assert (= (str.++ preH (str.++ stem17 sufH)) (str.++ unch117H (str.++ ch17H unch217H))))
(assert (= "mjXd" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "m4du" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "mHdZ" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (= (ite (= ch17G var17G) 0 1) sc17G))
(assert (= (ite (= ch17H var17H) 0 1) sc17H))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= sc17G 1))
(assert (<= sc17H 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (<= (str.len var18G) 1))
(assert (<= (str.len var18H) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= (str.++ preG (str.++ stem18 sufG)) (str.++ unch118G (str.++ ch18G unch218G))))
(assert (= (str.++ preH (str.++ stem18 sufH)) (str.++ unch118H (str.++ ch18H unch218H))))
(assert (= "vjXl" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "volO" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "voljX" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (= (ite (= ch18G var18G) 0 1) sc18G))
(assert (= (ite (= ch18H var18H) 0 1) sc18H))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= sc18G 1))
(assert (<= sc18H 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (<= (str.len var19G) 1))
(assert (<= (str.len var19H) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= (str.++ preG (str.++ stem19 sufG)) (str.++ unch119G (str.++ ch19G unch219G))))
(assert (= (str.++ preH (str.++ stem19 sufH)) (str.++ unch119H (str.++ ch19H unch219H))))
(assert (= "vjXz" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "v2za" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "v2zji" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (= (ite (= ch19G var19G) 0 1) sc19G))
(assert (= (ite (= ch19H var19H) 0 1) sc19H))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= sc19G 1))
(assert (<= sc19H 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (<= (str.len var20G) 1))
(assert (<= (str.len var20H) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= (str.++ preG (str.++ stem20 sufG)) (str.++ unch120G (str.++ ch20G unch220G))))
(assert (= (str.++ preH (str.++ stem20 sufH)) (str.++ unch120H (str.++ ch20H unch220H))))
(assert (= "s3r" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "s3ra" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "s3rji" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (= (ite (= ch20G var20G) 0 1) sc20G))
(assert (= (ite (= ch20H var20H) 0 1) sc20H))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= sc20G 1))
(assert (<= sc20H 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (<= (str.len var21G) 1))
(assert (<= (str.len var21H) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= (str.++ preG (str.++ stem21 sufG)) (str.++ unch121G (str.++ ch21G unch221G))))
(assert (= (str.++ preH (str.++ stem21 sufH)) (str.++ unch121H (str.++ ch21H unch221H))))
(assert (= "sjnjXp" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "snopO" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "snopjX" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (= (ite (= ch21G var21G) 0 1) sc21G))
(assert (= (ite (= ch21H var21H) 0 1) sc21H))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= sc21G 1))
(assert (<= sc21H 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (<= (str.len var22G) 1))
(assert (<= (str.len var22H) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= (str.++ preG (str.++ stem22 sufG)) (str.++ unch122G (str.++ ch22G unch222G))))
(assert (= (str.++ preH (str.++ stem22 sufH)) (str.++ unch122H (str.++ ch22H unch222H))))
(assert (= "1r3b" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "1rHbO" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "1rHbjX" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (= (ite (= ch22G var22G) 0 1) sc22G))
(assert (= (ite (= ch22H var22H) 0 1) sc22H))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= sc22G 1))
(assert (<= sc22H 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (<= (str.len var23G) 1))
(assert (<= (str.len var23H) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= (str.++ preG (str.++ stem23 sufG)) (str.++ unch123G (str.++ ch23G unch223G))))
(assert (= (str.++ preH (str.++ stem23 sufH)) (str.++ unch123H (str.++ ch23H unch223H))))
(assert (= "l4bjid" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= "l4bHda" (str.++ unch123B (str.++ var23B unch223B))))
(assert (= "l4bHgji" (str.++ unch123C (str.++ var23C unch223C))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (= (ite (= ch23G var23G) 0 1) sc23G))
(assert (= (ite (= ch23H var23H) 0 1) sc23H))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= sc23G 1))
(assert (<= sc23H 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (<= (str.len var24G) 1))
(assert (<= (str.len var24H) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= (str.++ preG (str.++ stem24 sufG)) (str.++ unch124G (str.++ ch24G unch224G))))
(assert (= (str.++ preH (str.++ stem24 sufH)) (str.++ unch124H (str.++ ch24H unch224H))))
(assert (= "b4rji1" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= "b4rH1a" (str.++ unch124B (str.++ var24B unch224B))))
(assert (= "b4rHzji" (str.++ unch124C (str.++ var24C unch224C))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (= (ite (= ch24G var24G) 0 1) sc24G))
(assert (= (ite (= ch24H var24H) 0 1) sc24H))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= sc24G 1))
(assert (<= sc24H 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (<= (str.len var25G) 1))
(assert (<= (str.len var25H) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= (str.++ preG (str.++ stem25 sufG)) (str.++ unch125G (str.++ ch25G unch225G))))
(assert (= (str.++ preH (str.++ stem25 sufH)) (str.++ unch125H (str.++ ch25H unch225H))))
(assert (= "pHrjX1" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= "pHr21a" (str.++ unch125B (str.++ var25B unch225B))))
(assert (= "pHr2zji" (str.++ unch125C (str.++ var25C unch225C))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (= (ite (= ch25G var25G) 0 1) sc25G))
(assert (= (ite (= ch25H var25H) 0 1) sc25H))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= sc25G 1))
(assert (<= sc25H 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (<= (str.len var26G) 1))
(assert (<= (str.len var26H) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= (str.++ preG (str.++ stem26 sufG)) (str.++ unch126G (str.++ ch26G unch226G))))
(assert (= (str.++ preH (str.++ stem26 sufH)) (str.++ unch126H (str.++ ch26H unch226H))))
(assert (= "porjX1" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= "por21a" (str.++ unch126B (str.++ var26B unch226B))))
(assert (= "por2zji" (str.++ unch126C (str.++ var26C unch226C))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (= (ite (= ch26G var26G) 0 1) sc26G))
(assert (= (ite (= ch26H var26H) 0 1) sc26H))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= sc26G 1))
(assert (<= sc26H 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (<= (str.len var27G) 1))
(assert (<= (str.len var27H) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= (str.++ preG (str.++ stem27 sufG)) (str.++ unch127G (str.++ ch27G unch227G))))
(assert (= (str.++ preH (str.++ stem27 sufH)) (str.++ unch127H (str.++ ch27H unch227H))))
(assert (= "bolj3k" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= "boljHkO" (str.++ unch127B (str.++ var27B unch227B))))
(assert (= "boljHtsjX" (str.++ unch127C (str.++ var27C unch227C))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (= (ite (= ch27G var27G) 0 1) sc27G))
(assert (= (ite (= ch27H var27H) 0 1) sc27H))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= sc27G 1))
(assert (<= sc27H 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (<= (str.len var28G) 1))
(assert (<= (str.len var28H) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= (str.++ preG (str.++ stem28 sufG)) (str.++ unch128G (str.++ ch28G unch228G))))
(assert (= (str.++ preH (str.++ stem28 sufH)) (str.++ unch128H (str.++ ch28H unch228H))))
(assert (= "v2rji1" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= "v2ro1a" (str.++ unch128B (str.++ var28B unch228B))))
(assert (= "v2rozji" (str.++ unch128C (str.++ var28C unch228C))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (= (ite (= ch28G var28G) 0 1) sc28G))
(assert (= (ite (= ch28H var28H) 0 1) sc28H))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= sc28G 1))
(assert (<= sc28H 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (<= (str.len var29G) 1))
(assert (<= (str.len var29H) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= (str.++ preG (str.++ stem29 sufG)) (str.++ unch129G (str.++ ch29G unch229G))))
(assert (= (str.++ preH (str.++ stem29 sufH)) (str.++ unch129H (str.++ ch29H unch229H))))
(assert (= "k2nHk" (str.++ unch129A (str.++ var29A unch229A))))
(assert (= "k2nHka" (str.++ unch129B (str.++ var29B unch229B))))
(assert (= "k2nHtsji" (str.++ unch129C (str.++ var29C unch229C))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (= (ite (= ch29G var29G) 0 1) sc29G))
(assert (= (ite (= ch29H var29H) 0 1) sc29H))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= sc29G 1))
(assert (<= sc29H 1))
(assert (<= (str.len var30A) 1))
(assert (<= (str.len var30B) 1))
(assert (<= (str.len var30C) 1))
(assert (<= (str.len var30D) 1))
(assert (<= (str.len var30E) 1))
(assert (<= (str.len var30F) 1))
(assert (<= (str.len var30G) 1))
(assert (<= (str.len var30H) 1))
(assert (= (str.++ preA (str.++ stem30 sufA)) (str.++ unch130A (str.++ ch30A unch230A))))
(assert (= (str.++ preB (str.++ stem30 sufB)) (str.++ unch130B (str.++ ch30B unch230B))))
(assert (= (str.++ preC (str.++ stem30 sufC)) (str.++ unch130C (str.++ ch30C unch230C))))
(assert (= (str.++ preD (str.++ stem30 sufD)) (str.++ unch130D (str.++ ch30D unch230D))))
(assert (= (str.++ preE (str.++ stem30 sufE)) (str.++ unch130E (str.++ ch30E unch230E))))
(assert (= (str.++ preF (str.++ stem30 sufF)) (str.++ unch130F (str.++ ch30F unch230F))))
(assert (= (str.++ preG (str.++ stem30 sufG)) (str.++ unch130G (str.++ ch30G unch230G))))
(assert (= (str.++ preH (str.++ stem30 sufH)) (str.++ unch130H (str.++ ch30H unch230H))))
(assert (= "p2tjik" (str.++ unch130A (str.++ var30A unch230A))))
(assert (= "pot2ka" (str.++ unch130B (str.++ var30B unch230B))))
(assert (= "pot2tsji" (str.++ unch130C (str.++ var30C unch230C))))
(assert (= (str.len stem30) l30))
(assert (= (ite (= ch30A var30A) 0 1) sc30A))
(assert (= (ite (= ch30B var30B) 0 1) sc30B))
(assert (= (ite (= ch30C var30C) 0 1) sc30C))
(assert (= (ite (= ch30D var30D) 0 1) sc30D))
(assert (= (ite (= ch30E var30E) 0 1) sc30E))
(assert (= (ite (= ch30F var30F) 0 1) sc30F))
(assert (= (ite (= ch30G var30G) 0 1) sc30G))
(assert (= (ite (= ch30H var30H) 0 1) sc30H))
(assert (<= sc30A 1))
(assert (<= sc30B 1))
(assert (<= sc30C 1))
(assert (<= sc30D 1))
(assert (<= sc30E 1))
(assert (<= sc30F 1))
(assert (<= sc30G 1))
(assert (<= sc30H 1))
(assert (<= (str.len var31A) 1))
(assert (<= (str.len var31B) 1))
(assert (<= (str.len var31C) 1))
(assert (<= (str.len var31D) 1))
(assert (<= (str.len var31E) 1))
(assert (<= (str.len var31F) 1))
(assert (<= (str.len var31G) 1))
(assert (<= (str.len var31H) 1))
(assert (= (str.++ preA (str.++ stem31 sufA)) (str.++ unch131A (str.++ ch31A unch231A))))
(assert (= (str.++ preB (str.++ stem31 sufB)) (str.++ unch131B (str.++ ch31B unch231B))))
(assert (= (str.++ preC (str.++ stem31 sufC)) (str.++ unch131C (str.++ ch31C unch231C))))
(assert (= (str.++ preD (str.++ stem31 sufD)) (str.++ unch131D (str.++ ch31D unch231D))))
(assert (= (str.++ preE (str.++ stem31 sufE)) (str.++ unch131E (str.++ ch31E unch231E))))
(assert (= (str.++ preF (str.++ stem31 sufF)) (str.++ unch131F (str.++ ch31F unch231F))))
(assert (= (str.++ preG (str.++ stem31 sufG)) (str.++ unch131G (str.++ ch31G unch231G))))
(assert (= (str.++ preH (str.++ stem31 sufH)) (str.++ unch131H (str.++ ch31H unch231H))))
(assert (= "tjXk" (str.++ unch131A (str.++ var31A unch231A))))
(assert (= "t2ka" (str.++ unch131B (str.++ var31B unch231B))))
(assert (= "t2tsji" (str.++ unch131C (str.++ var31C unch231C))))
(assert (= (str.len stem31) l31))
(assert (= (ite (= ch31A var31A) 0 1) sc31A))
(assert (= (ite (= ch31B var31B) 0 1) sc31B))
(assert (= (ite (= ch31C var31C) 0 1) sc31C))
(assert (= (ite (= ch31D var31D) 0 1) sc31D))
(assert (= (ite (= ch31E var31E) 0 1) sc31E))
(assert (= (ite (= ch31F var31F) 0 1) sc31F))
(assert (= (ite (= ch31G var31G) 0 1) sc31G))
(assert (= (ite (= ch31H var31H) 0 1) sc31H))
(assert (<= sc31A 1))
(assert (<= sc31B 1))
(assert (<= sc31C 1))
(assert (<= sc31D 1))
(assert (<= sc31E 1))
(assert (<= sc31F 1))
(assert (<= sc31G 1))
(assert (<= sc31H 1))
(assert (<= (str.len var32A) 1))
(assert (<= (str.len var32B) 1))
(assert (<= (str.len var32C) 1))
(assert (<= (str.len var32D) 1))
(assert (<= (str.len var32E) 1))
(assert (<= (str.len var32F) 1))
(assert (<= (str.len var32G) 1))
(assert (<= (str.len var32H) 1))
(assert (= (str.++ preA (str.++ stem32 sufA)) (str.++ unch132A (str.++ ch32A unch232A))))
(assert (= (str.++ preB (str.++ stem32 sufB)) (str.++ unch132B (str.++ ch32B unch232B))))
(assert (= (str.++ preC (str.++ stem32 sufC)) (str.++ unch132C (str.++ ch32C unch232C))))
(assert (= (str.++ preD (str.++ stem32 sufD)) (str.++ unch132D (str.++ ch32D unch232D))))
(assert (= (str.++ preE (str.++ stem32 sufE)) (str.++ unch132E (str.++ ch32E unch232E))))
(assert (= (str.++ preF (str.++ stem32 sufF)) (str.++ unch132F (str.++ ch32F unch232F))))
(assert (= (str.++ preG (str.++ stem32 sufG)) (str.++ unch132G (str.++ ch32G unch232G))))
(assert (= (str.++ preH (str.++ stem32 sufH)) (str.++ unch132H (str.++ ch32H unch232H))))
(assert (= "kjXl" (str.++ unch132A (str.++ var32A unch232A))))
(assert (= "kolO" (str.++ unch132B (str.++ var32B unch232B))))
(assert (= "koljX" (str.++ unch132C (str.++ var32C unch232C))))
(assert (= (str.len stem32) l32))
(assert (= (ite (= ch32A var32A) 0 1) sc32A))
(assert (= (ite (= ch32B var32B) 0 1) sc32B))
(assert (= (ite (= ch32C var32C) 0 1) sc32C))
(assert (= (ite (= ch32D var32D) 0 1) sc32D))
(assert (= (ite (= ch32E var32E) 0 1) sc32E))
(assert (= (ite (= ch32F var32F) 0 1) sc32F))
(assert (= (ite (= ch32G var32G) 0 1) sc32G))
(assert (= (ite (= ch32H var32H) 0 1) sc32H))
(assert (<= sc32A 1))
(assert (<= sc32B 1))
(assert (<= sc32C 1))
(assert (<= sc32D 1))
(assert (<= sc32E 1))
(assert (<= sc32F 1))
(assert (<= sc32G 1))
(assert (<= sc32H 1))
(assert (<= (str.len var33A) 1))
(assert (<= (str.len var33B) 1))
(assert (<= (str.len var33C) 1))
(assert (<= (str.len var33D) 1))
(assert (<= (str.len var33E) 1))
(assert (<= (str.len var33F) 1))
(assert (<= (str.len var33G) 1))
(assert (<= (str.len var33H) 1))
(assert (= (str.++ preA (str.++ stem33 sufA)) (str.++ unch133A (str.++ ch33A unch233A))))
(assert (= (str.++ preB (str.++ stem33 sufB)) (str.++ unch133B (str.++ ch33B unch233B))))
(assert (= (str.++ preC (str.++ stem33 sufC)) (str.++ unch133C (str.++ ch33C unch233C))))
(assert (= (str.++ preD (str.++ stem33 sufD)) (str.++ unch133D (str.++ ch33D unch233D))))
(assert (= (str.++ preE (str.++ stem33 sufE)) (str.++ unch133E (str.++ ch33E unch233E))))
(assert (= (str.++ preF (str.++ stem33 sufF)) (str.++ unch133F (str.++ ch33F unch233F))))
(assert (= (str.++ preG (str.++ stem33 sufG)) (str.++ unch133G (str.++ ch33G unch233G))))
(assert (= (str.++ preH (str.++ stem33 sufH)) (str.++ unch133H (str.++ ch33H unch233H))))
(assert (= "kovOlj" (str.++ unch133D (str.++ var33D unch233D))))
(assert (= "kovalj3" (str.++ unch133E (str.++ var33E unch233E))))
(assert (= "koval3" (str.++ unch133F (str.++ var33F unch233F))))
(assert (= (str.len stem33) l33))
(assert (= (ite (= ch33A var33A) 0 1) sc33A))
(assert (= (ite (= ch33B var33B) 0 1) sc33B))
(assert (= (ite (= ch33C var33C) 0 1) sc33C))
(assert (= (ite (= ch33D var33D) 0 1) sc33D))
(assert (= (ite (= ch33E var33E) 0 1) sc33E))
(assert (= (ite (= ch33F var33F) 0 1) sc33F))
(assert (= (ite (= ch33G var33G) 0 1) sc33G))
(assert (= (ite (= ch33H var33H) 0 1) sc33H))
(assert (<= sc33A 1))
(assert (<= sc33B 1))
(assert (<= sc33C 1))
(assert (<= sc33D 1))
(assert (<= sc33E 1))
(assert (<= sc33F 1))
(assert (<= sc33G 1))
(assert (<= sc33H 1))
(assert (<= (str.len var34A) 1))
(assert (<= (str.len var34B) 1))
(assert (<= (str.len var34C) 1))
(assert (<= (str.len var34D) 1))
(assert (<= (str.len var34E) 1))
(assert (<= (str.len var34F) 1))
(assert (<= (str.len var34G) 1))
(assert (<= (str.len var34H) 1))
(assert (= (str.++ preA (str.++ stem34 sufA)) (str.++ unch134A (str.++ ch34A unch234A))))
(assert (= (str.++ preB (str.++ stem34 sufB)) (str.++ unch134B (str.++ ch34B unch234B))))
(assert (= (str.++ preC (str.++ stem34 sufC)) (str.++ unch134C (str.++ ch34C unch234C))))
(assert (= (str.++ preD (str.++ stem34 sufD)) (str.++ unch134D (str.++ ch34D unch234D))))
(assert (= (str.++ preE (str.++ stem34 sufE)) (str.++ unch134E (str.++ ch34E unch234E))))
(assert (= (str.++ preF (str.++ stem34 sufF)) (str.++ unch134F (str.++ ch34F unch234F))))
(assert (= (str.++ preG (str.++ stem34 sufG)) (str.++ unch134G (str.++ ch34G unch234G))))
(assert (= (str.++ preH (str.++ stem34 sufH)) (str.++ unch134H (str.++ ch34H unch234H))))
(assert (= "DmjXlj" (str.++ unch134D (str.++ var34D unch234D))))
(assert (= "Dmjilj3" (str.++ unch134E (str.++ var34E unch234E))))
(assert (= "Dmjil3" (str.++ unch134F (str.++ var34F unch234F))))
(assert (= (str.len stem34) l34))
(assert (= (ite (= ch34A var34A) 0 1) sc34A))
(assert (= (ite (= ch34B var34B) 0 1) sc34B))
(assert (= (ite (= ch34C var34C) 0 1) sc34C))
(assert (= (ite (= ch34D var34D) 0 1) sc34D))
(assert (= (ite (= ch34E var34E) 0 1) sc34E))
(assert (= (ite (= ch34F var34F) 0 1) sc34F))
(assert (= (ite (= ch34G var34G) 0 1) sc34G))
(assert (= (ite (= ch34H var34H) 0 1) sc34H))
(assert (<= sc34A 1))
(assert (<= sc34B 1))
(assert (<= sc34C 1))
(assert (<= sc34D 1))
(assert (<= sc34E 1))
(assert (<= sc34F 1))
(assert (<= sc34G 1))
(assert (<= sc34H 1))
(assert (<= (str.len var35A) 1))
(assert (<= (str.len var35B) 1))
(assert (<= (str.len var35C) 1))
(assert (<= (str.len var35D) 1))
(assert (<= (str.len var35E) 1))
(assert (<= (str.len var35F) 1))
(assert (<= (str.len var35G) 1))
(assert (<= (str.len var35H) 1))
(assert (= (str.++ preA (str.++ stem35 sufA)) (str.++ unch135A (str.++ ch35A unch235A))))
(assert (= (str.++ preB (str.++ stem35 sufB)) (str.++ unch135B (str.++ ch35B unch235B))))
(assert (= (str.++ preC (str.++ stem35 sufC)) (str.++ unch135C (str.++ ch35C unch235C))))
(assert (= (str.++ preD (str.++ stem35 sufD)) (str.++ unch135D (str.++ ch35D unch235D))))
(assert (= (str.++ preE (str.++ stem35 sufE)) (str.++ unch135E (str.++ ch35E unch235E))))
(assert (= (str.++ preF (str.++ stem35 sufF)) (str.++ unch135F (str.++ ch35F unch235F))))
(assert (= (str.++ preG (str.++ stem35 sufG)) (str.++ unch135G (str.++ ch35G unch235G))))
(assert (= (str.++ preH (str.++ stem35 sufH)) (str.++ unch135H (str.++ ch35H unch235H))))
(assert (= "kjrjXlj" (str.++ unch135D (str.++ var35D unch235D))))
(assert (= "kjrjilj3" (str.++ unch135E (str.++ var35E unch235E))))
(assert (= "kjrjil3" (str.++ unch135F (str.++ var35F unch235F))))
(assert (= (str.len stem35) l35))
(assert (= (ite (= ch35A var35A) 0 1) sc35A))
(assert (= (ite (= ch35B var35B) 0 1) sc35B))
(assert (= (ite (= ch35C var35C) 0 1) sc35C))
(assert (= (ite (= ch35D var35D) 0 1) sc35D))
(assert (= (ite (= ch35E var35E) 0 1) sc35E))
(assert (= (ite (= ch35F var35F) 0 1) sc35F))
(assert (= (ite (= ch35G var35G) 0 1) sc35G))
(assert (= (ite (= ch35H var35H) 0 1) sc35H))
(assert (<= sc35A 1))
(assert (<= sc35B 1))
(assert (<= sc35C 1))
(assert (<= sc35D 1))
(assert (<= sc35E 1))
(assert (<= sc35F 1))
(assert (<= sc35G 1))
(assert (<= sc35H 1))
(assert (<= (str.len var36A) 1))
(assert (<= (str.len var36B) 1))
(assert (<= (str.len var36C) 1))
(assert (<= (str.len var36D) 1))
(assert (<= (str.len var36E) 1))
(assert (<= (str.len var36F) 1))
(assert (<= (str.len var36G) 1))
(assert (<= (str.len var36H) 1))
(assert (= (str.++ preA (str.++ stem36 sufA)) (str.++ unch136A (str.++ ch36A unch236A))))
(assert (= (str.++ preB (str.++ stem36 sufB)) (str.++ unch136B (str.++ ch36B unch236B))))
(assert (= (str.++ preC (str.++ stem36 sufC)) (str.++ unch136C (str.++ ch36C unch236C))))
(assert (= (str.++ preD (str.++ stem36 sufD)) (str.++ unch136D (str.++ ch36D unch236D))))
(assert (= (str.++ preE (str.++ stem36 sufE)) (str.++ unch136E (str.++ ch36E unch236E))))
(assert (= (str.++ preF (str.++ stem36 sufF)) (str.++ unch136F (str.++ ch36F unch236F))))
(assert (= (str.++ preG (str.++ stem36 sufG)) (str.++ unch136G (str.++ ch36G unch236G))))
(assert (= (str.++ preH (str.++ stem36 sufH)) (str.++ unch136H (str.++ ch36H unch236H))))
(assert (= "uE3tHlj" (str.++ unch136D (str.++ var36D unch236D))))
(assert (= "uE3tHljH" (str.++ unch136E (str.++ var36E unch236E))))
(assert (= "uE3tHlH" (str.++ unch136F (str.++ var36F unch236F))))
(assert (= (str.len stem36) l36))
(assert (= (ite (= ch36A var36A) 0 1) sc36A))
(assert (= (ite (= ch36B var36B) 0 1) sc36B))
(assert (= (ite (= ch36C var36C) 0 1) sc36C))
(assert (= (ite (= ch36D var36D) 0 1) sc36D))
(assert (= (ite (= ch36E var36E) 0 1) sc36E))
(assert (= (ite (= ch36F var36F) 0 1) sc36F))
(assert (= (ite (= ch36G var36G) 0 1) sc36G))
(assert (= (ite (= ch36H var36H) 0 1) sc36H))
(assert (<= sc36A 1))
(assert (<= sc36B 1))
(assert (<= sc36C 1))
(assert (<= sc36D 1))
(assert (<= sc36E 1))
(assert (<= sc36F 1))
(assert (<= sc36G 1))
(assert (<= sc36H 1))
(assert (<= (str.len var37A) 1))
(assert (<= (str.len var37B) 1))
(assert (<= (str.len var37C) 1))
(assert (<= (str.len var37D) 1))
(assert (<= (str.len var37E) 1))
(assert (<= (str.len var37F) 1))
(assert (<= (str.len var37G) 1))
(assert (<= (str.len var37H) 1))
(assert (= (str.++ preA (str.++ stem37 sufA)) (str.++ unch137A (str.++ ch37A unch237A))))
(assert (= (str.++ preB (str.++ stem37 sufB)) (str.++ unch137B (str.++ ch37B unch237B))))
(assert (= (str.++ preC (str.++ stem37 sufC)) (str.++ unch137C (str.++ ch37C unch237C))))
(assert (= (str.++ preD (str.++ stem37 sufD)) (str.++ unch137D (str.++ ch37D unch237D))))
(assert (= (str.++ preE (str.++ stem37 sufE)) (str.++ unch137E (str.++ ch37E unch237E))))
(assert (= (str.++ preF (str.++ stem37 sufF)) (str.++ unch137F (str.++ ch37F unch237F))))
(assert (= (str.++ preG (str.++ stem37 sufG)) (str.++ unch137G (str.++ ch37G unch237G))))
(assert (= (str.++ preH (str.++ stem37 sufH)) (str.++ unch137H (str.++ ch37H unch237H))))
(assert (= "gr4bjinj" (str.++ unch137D (str.++ var37D unch237D))))
(assert (= "gr4bHnjH" (str.++ unch137E (str.++ var37E unch237E))))
(assert (= "gr4bHnH" (str.++ unch137F (str.++ var37F unch237F))))
(assert (= (str.len stem37) l37))
(assert (= (ite (= ch37A var37A) 0 1) sc37A))
(assert (= (ite (= ch37B var37B) 0 1) sc37B))
(assert (= (ite (= ch37C var37C) 0 1) sc37C))
(assert (= (ite (= ch37D var37D) 0 1) sc37D))
(assert (= (ite (= ch37E var37E) 0 1) sc37E))
(assert (= (ite (= ch37F var37F) 0 1) sc37F))
(assert (= (ite (= ch37G var37G) 0 1) sc37G))
(assert (= (ite (= ch37H var37H) 0 1) sc37H))
(assert (<= sc37A 1))
(assert (<= sc37B 1))
(assert (<= sc37C 1))
(assert (<= sc37D 1))
(assert (<= sc37E 1))
(assert (<= sc37F 1))
(assert (<= sc37G 1))
(assert (<= sc37H 1))
(assert (<= (str.len var38A) 1))
(assert (<= (str.len var38B) 1))
(assert (<= (str.len var38C) 1))
(assert (<= (str.len var38D) 1))
(assert (<= (str.len var38E) 1))
(assert (<= (str.len var38F) 1))
(assert (<= (str.len var38G) 1))
(assert (<= (str.len var38H) 1))
(assert (= (str.++ preA (str.++ stem38 sufA)) (str.++ unch138A (str.++ ch38A unch238A))))
(assert (= (str.++ preB (str.++ stem38 sufB)) (str.++ unch138B (str.++ ch38B unch238B))))
(assert (= (str.++ preC (str.++ stem38 sufC)) (str.++ unch138C (str.++ ch38C unch238C))))
(assert (= (str.++ preD (str.++ stem38 sufD)) (str.++ unch138D (str.++ ch38D unch238D))))
(assert (= (str.++ preE (str.++ stem38 sufE)) (str.++ unch138E (str.++ ch38E unch238E))))
(assert (= (str.++ preF (str.++ stem38 sufF)) (str.++ unch138F (str.++ ch38F unch238F))))
(assert (= (str.++ preG (str.++ stem38 sufG)) (str.++ unch138G (str.++ ch38G unch238G))))
(assert (= (str.++ preH (str.++ stem38 sufH)) (str.++ unch138H (str.++ ch38H unch238H))))
(assert (= "2lHnj" (str.++ unch138D (str.++ var38D unch238D))))
(assert (= "2lHnjH" (str.++ unch138E (str.++ var38E unch238E))))
(assert (= "2lHnH" (str.++ unch138F (str.++ var38F unch238F))))
(assert (= (str.len stem38) l38))
(assert (= (ite (= ch38A var38A) 0 1) sc38A))
(assert (= (ite (= ch38B var38B) 0 1) sc38B))
(assert (= (ite (= ch38C var38C) 0 1) sc38C))
(assert (= (ite (= ch38D var38D) 0 1) sc38D))
(assert (= (ite (= ch38E var38E) 0 1) sc38E))
(assert (= (ite (= ch38F var38F) 0 1) sc38F))
(assert (= (ite (= ch38G var38G) 0 1) sc38G))
(assert (= (ite (= ch38H var38H) 0 1) sc38H))
(assert (<= sc38A 1))
(assert (<= sc38B 1))
(assert (<= sc38C 1))
(assert (<= sc38D 1))
(assert (<= sc38E 1))
(assert (<= sc38F 1))
(assert (<= sc38G 1))
(assert (<= sc38H 1))
(assert (<= (str.len var39A) 1))
(assert (<= (str.len var39B) 1))
(assert (<= (str.len var39C) 1))
(assert (<= (str.len var39D) 1))
(assert (<= (str.len var39E) 1))
(assert (<= (str.len var39F) 1))
(assert (<= (str.len var39G) 1))
(assert (<= (str.len var39H) 1))
(assert (= (str.++ preA (str.++ stem39 sufA)) (str.++ unch139A (str.++ ch39A unch239A))))
(assert (= (str.++ preB (str.++ stem39 sufB)) (str.++ unch139B (str.++ ch39B unch239B))))
(assert (= (str.++ preC (str.++ stem39 sufC)) (str.++ unch139C (str.++ ch39C unch239C))))
(assert (= (str.++ preD (str.++ stem39 sufD)) (str.++ unch139D (str.++ ch39D unch239D))))
(assert (= (str.++ preE (str.++ stem39 sufE)) (str.++ unch139E (str.++ ch39E unch239E))))
(assert (= (str.++ preF (str.++ stem39 sufF)) (str.++ unch139F (str.++ ch39F unch239F))))
(assert (= (str.++ preG (str.++ stem39 sufG)) (str.++ unch139G (str.++ ch39G unch239G))))
(assert (= (str.++ preH (str.++ stem39 sufH)) (str.++ unch139H (str.++ ch39H unch239H))))
(assert (= "jaEjmjXnj" (str.++ unch139D (str.++ var39D unch239D))))
(assert (= "jaEm4njH" (str.++ unch139E (str.++ var39E unch239E))))
(assert (= "jaEm4nH" (str.++ unch139F (str.++ var39F unch239F))))
(assert (= (str.len stem39) l39))
(assert (= (ite (= ch39A var39A) 0 1) sc39A))
(assert (= (ite (= ch39B var39B) 0 1) sc39B))
(assert (= (ite (= ch39C var39C) 0 1) sc39C))
(assert (= (ite (= ch39D var39D) 0 1) sc39D))
(assert (= (ite (= ch39E var39E) 0 1) sc39E))
(assert (= (ite (= ch39F var39F) 0 1) sc39F))
(assert (= (ite (= ch39G var39G) 0 1) sc39G))
(assert (= (ite (= ch39H var39H) 0 1) sc39H))
(assert (<= sc39A 1))
(assert (<= sc39B 1))
(assert (<= sc39C 1))
(assert (<= sc39D 1))
(assert (<= sc39E 1))
(assert (<= sc39F 1))
(assert (<= sc39G 1))
(assert (<= sc39H 1))
(assert (<= (str.len var40A) 1))
(assert (<= (str.len var40B) 1))
(assert (<= (str.len var40C) 1))
(assert (<= (str.len var40D) 1))
(assert (<= (str.len var40E) 1))
(assert (<= (str.len var40F) 1))
(assert (<= (str.len var40G) 1))
(assert (<= (str.len var40H) 1))
(assert (= (str.++ preA (str.++ stem40 sufA)) (str.++ unch140A (str.++ ch40A unch240A))))
(assert (= (str.++ preB (str.++ stem40 sufB)) (str.++ unch140B (str.++ ch40B unch240B))))
(assert (= (str.++ preC (str.++ stem40 sufC)) (str.++ unch140C (str.++ ch40C unch240C))))
(assert (= (str.++ preD (str.++ stem40 sufD)) (str.++ unch140D (str.++ ch40D unch240D))))
(assert (= (str.++ preE (str.++ stem40 sufE)) (str.++ unch140E (str.++ ch40E unch240E))))
(assert (= (str.++ preF (str.++ stem40 sufF)) (str.++ unch140F (str.++ ch40F unch240F))))
(assert (= (str.++ preG (str.++ stem40 sufG)) (str.++ unch140G (str.++ ch40G unch240G))))
(assert (= (str.++ preH (str.++ stem40 sufH)) (str.++ unch140H (str.++ ch40H unch240H))))
(assert (= "jOsjinj" (str.++ unch140D (str.++ var40D unch240D))))
(assert (= "jOsHnjH" (str.++ unch140E (str.++ var40E unch240E))))
(assert (= "jOsHnH" (str.++ unch140F (str.++ var40F unch240F))))
(assert (= (str.len stem40) l40))
(assert (= (ite (= ch40A var40A) 0 1) sc40A))
(assert (= (ite (= ch40B var40B) 0 1) sc40B))
(assert (= (ite (= ch40C var40C) 0 1) sc40C))
(assert (= (ite (= ch40D var40D) 0 1) sc40D))
(assert (= (ite (= ch40E var40E) 0 1) sc40E))
(assert (= (ite (= ch40F var40F) 0 1) sc40F))
(assert (= (ite (= ch40G var40G) 0 1) sc40G))
(assert (= (ite (= ch40H var40H) 0 1) sc40H))
(assert (<= sc40A 1))
(assert (<= sc40B 1))
(assert (<= sc40C 1))
(assert (<= sc40D 1))
(assert (<= sc40E 1))
(assert (<= sc40F 1))
(assert (<= sc40G 1))
(assert (<= sc40H 1))
(assert (<= (str.len var41A) 1))
(assert (<= (str.len var41B) 1))
(assert (<= (str.len var41C) 1))
(assert (<= (str.len var41D) 1))
(assert (<= (str.len var41E) 1))
(assert (<= (str.len var41F) 1))
(assert (<= (str.len var41G) 1))
(assert (<= (str.len var41H) 1))
(assert (= (str.++ preA (str.++ stem41 sufA)) (str.++ unch141A (str.++ ch41A unch241A))))
(assert (= (str.++ preB (str.++ stem41 sufB)) (str.++ unch141B (str.++ ch41B unch241B))))
(assert (= (str.++ preC (str.++ stem41 sufC)) (str.++ unch141C (str.++ ch41C unch241C))))
(assert (= (str.++ preD (str.++ stem41 sufD)) (str.++ unch141D (str.++ ch41D unch241D))))
(assert (= (str.++ preE (str.++ stem41 sufE)) (str.++ unch141E (str.++ ch41E unch241E))))
(assert (= (str.++ preF (str.++ stem41 sufF)) (str.++ unch141F (str.++ ch41F unch241F))))
(assert (= (str.++ preG (str.++ stem41 sufG)) (str.++ unch141G (str.++ ch41G unch241G))))
(assert (= (str.++ preH (str.++ stem41 sufH)) (str.++ unch141H (str.++ ch41H unch241H))))
(assert (= "zj3kj" (str.++ unch141D (str.++ var41D unch241D))))
(assert (= "zj3kjH" (str.++ unch141E (str.++ var41E unch241E))))
(assert (= "zj3tH" (str.++ unch141F (str.++ var41F unch241F))))
(assert (= (str.len stem41) l41))
(assert (= (ite (= ch41A var41A) 0 1) sc41A))
(assert (= (ite (= ch41B var41B) 0 1) sc41B))
(assert (= (ite (= ch41C var41C) 0 1) sc41C))
(assert (= (ite (= ch41D var41D) 0 1) sc41D))
(assert (= (ite (= ch41E var41E) 0 1) sc41E))
(assert (= (ite (= ch41F var41F) 0 1) sc41F))
(assert (= (ite (= ch41G var41G) 0 1) sc41G))
(assert (= (ite (= ch41H var41H) 0 1) sc41H))
(assert (<= sc41A 1))
(assert (<= sc41B 1))
(assert (<= sc41C 1))
(assert (<= sc41D 1))
(assert (<= sc41E 1))
(assert (<= sc41F 1))
(assert (<= sc41G 1))
(assert (<= sc41H 1))
(assert (<= (str.len var42A) 1))
(assert (<= (str.len var42B) 1))
(assert (<= (str.len var42C) 1))
(assert (<= (str.len var42D) 1))
(assert (<= (str.len var42E) 1))
(assert (<= (str.len var42F) 1))
(assert (<= (str.len var42G) 1))
(assert (<= (str.len var42H) 1))
(assert (= (str.++ preA (str.++ stem42 sufA)) (str.++ unch142A (str.++ ch42A unch242A))))
(assert (= (str.++ preB (str.++ stem42 sufB)) (str.++ unch142B (str.++ ch42B unch242B))))
(assert (= (str.++ preC (str.++ stem42 sufC)) (str.++ unch142C (str.++ ch42C unch242C))))
(assert (= (str.++ preD (str.++ stem42 sufD)) (str.++ unch142D (str.++ ch42D unch242D))))
(assert (= (str.++ preE (str.++ stem42 sufE)) (str.++ unch142E (str.++ ch42E unch242E))))
(assert (= (str.++ preF (str.++ stem42 sufF)) (str.++ unch142F (str.++ ch42F unch242F))))
(assert (= (str.++ preG (str.++ stem42 sufG)) (str.++ unch142G (str.++ ch42G unch242G))))
(assert (= (str.++ preH (str.++ stem42 sufH)) (str.++ unch142H (str.++ ch42H unch242H))))
(assert (= "mOsjkj" (str.++ unch142G (str.++ var42G unch242G))))
(assert (= "mOstH" (str.++ unch142H (str.++ var42H unch242H))))
(assert (= (str.len stem42) l42))
(assert (= (ite (= ch42A var42A) 0 1) sc42A))
(assert (= (ite (= ch42B var42B) 0 1) sc42B))
(assert (= (ite (= ch42C var42C) 0 1) sc42C))
(assert (= (ite (= ch42D var42D) 0 1) sc42D))
(assert (= (ite (= ch42E var42E) 0 1) sc42E))
(assert (= (ite (= ch42F var42F) 0 1) sc42F))
(assert (= (ite (= ch42G var42G) 0 1) sc42G))
(assert (= (ite (= ch42H var42H) 0 1) sc42H))
(assert (<= sc42A 1))
(assert (<= sc42B 1))
(assert (<= sc42C 1))
(assert (<= sc42D 1))
(assert (<= sc42E 1))
(assert (<= sc42F 1))
(assert (<= sc42G 1))
(assert (<= sc42H 1))
(assert (<= (str.len var43A) 1))
(assert (<= (str.len var43B) 1))
(assert (<= (str.len var43C) 1))
(assert (<= (str.len var43D) 1))
(assert (<= (str.len var43E) 1))
(assert (<= (str.len var43F) 1))
(assert (<= (str.len var43G) 1))
(assert (<= (str.len var43H) 1))
(assert (= (str.++ preA (str.++ stem43 sufA)) (str.++ unch143A (str.++ ch43A unch243A))))
(assert (= (str.++ preB (str.++ stem43 sufB)) (str.++ unch143B (str.++ ch43B unch243B))))
(assert (= (str.++ preC (str.++ stem43 sufC)) (str.++ unch143C (str.++ ch43C unch243C))))
(assert (= (str.++ preD (str.++ stem43 sufD)) (str.++ unch143D (str.++ ch43D unch243D))))
(assert (= (str.++ preE (str.++ stem43 sufE)) (str.++ unch143E (str.++ ch43E unch243E))))
(assert (= (str.++ preF (str.++ stem43 sufF)) (str.++ unch143F (str.++ ch43F unch243F))))
(assert (= (str.++ preG (str.++ stem43 sufG)) (str.++ unch143G (str.++ ch43G unch243G))))
(assert (= (str.++ preH (str.++ stem43 sufH)) (str.++ unch143H (str.++ ch43H unch243H))))
(assert (= "sjmjXrjkj" (str.++ unch143G (str.++ var43G unch243G))))
(assert (= "sm4rtH" (str.++ unch143H (str.++ var43H unch243H))))
(assert (= (str.len stem43) l43))
(assert (= (ite (= ch43A var43A) 0 1) sc43A))
(assert (= (ite (= ch43B var43B) 0 1) sc43B))
(assert (= (ite (= ch43C var43C) 0 1) sc43C))
(assert (= (ite (= ch43D var43D) 0 1) sc43D))
(assert (= (ite (= ch43E var43E) 0 1) sc43E))
(assert (= (ite (= ch43F var43F) 0 1) sc43F))
(assert (= (ite (= ch43G var43G) 0 1) sc43G))
(assert (= (ite (= ch43H var43H) 0 1) sc43H))
(assert (<= sc43A 1))
(assert (<= sc43B 1))
(assert (<= sc43C 1))
(assert (<= sc43D 1))
(assert (<= sc43E 1))
(assert (<= sc43F 1))
(assert (<= sc43G 1))
(assert (<= sc43H 1))
(assert (<= (str.len var44A) 1))
(assert (<= (str.len var44B) 1))
(assert (<= (str.len var44C) 1))
(assert (<= (str.len var44D) 1))
(assert (<= (str.len var44E) 1))
(assert (<= (str.len var44F) 1))
(assert (<= (str.len var44G) 1))
(assert (<= (str.len var44H) 1))
(assert (= (str.++ preA (str.++ stem44 sufA)) (str.++ unch144A (str.++ ch44A unch244A))))
(assert (= (str.++ preB (str.++ stem44 sufB)) (str.++ unch144B (str.++ ch44B unch244B))))
(assert (= (str.++ preC (str.++ stem44 sufC)) (str.++ unch144C (str.++ ch44C unch244C))))
(assert (= (str.++ preD (str.++ stem44 sufD)) (str.++ unch144D (str.++ ch44D unch244D))))
(assert (= (str.++ preE (str.++ stem44 sufE)) (str.++ unch144E (str.++ ch44E unch244E))))
(assert (= (str.++ preF (str.++ stem44 sufF)) (str.++ unch144F (str.++ ch44F unch244F))))
(assert (= (str.++ preG (str.++ stem44 sufG)) (str.++ unch144G (str.++ ch44G unch244G))))
(assert (= (str.++ preH (str.++ stem44 sufH)) (str.++ unch144H (str.++ ch44H unch244H))))
(assert (= "vjXsjkj" (str.++ unch144G (str.++ var44G unch244G))))
(assert (= "vjXstH" (str.++ unch144H (str.++ var44H unch244H))))
(assert (= (str.len stem44) l44))
(assert (= (ite (= ch44A var44A) 0 1) sc44A))
(assert (= (ite (= ch44B var44B) 0 1) sc44B))
(assert (= (ite (= ch44C var44C) 0 1) sc44C))
(assert (= (ite (= ch44D var44D) 0 1) sc44D))
(assert (= (ite (= ch44E var44E) 0 1) sc44E))
(assert (= (ite (= ch44F var44F) 0 1) sc44F))
(assert (= (ite (= ch44G var44G) 0 1) sc44G))
(assert (= (ite (= ch44H var44H) 0 1) sc44H))
(assert (<= sc44A 1))
(assert (<= sc44B 1))
(assert (<= sc44C 1))
(assert (<= sc44D 1))
(assert (<= sc44E 1))
(assert (<= sc44F 1))
(assert (<= sc44G 1))
(assert (<= sc44H 1))
(assert (<= (str.len var45A) 1))
(assert (<= (str.len var45B) 1))
(assert (<= (str.len var45C) 1))
(assert (<= (str.len var45D) 1))
(assert (<= (str.len var45E) 1))
(assert (<= (str.len var45F) 1))
(assert (<= (str.len var45G) 1))
(assert (<= (str.len var45H) 1))
(assert (= (str.++ preA (str.++ stem45 sufA)) (str.++ unch145A (str.++ ch45A unch245A))))
(assert (= (str.++ preB (str.++ stem45 sufB)) (str.++ unch145B (str.++ ch45B unch245B))))
(assert (= (str.++ preC (str.++ stem45 sufC)) (str.++ unch145C (str.++ ch45C unch245C))))
(assert (= (str.++ preD (str.++ stem45 sufD)) (str.++ unch145D (str.++ ch45D unch245D))))
(assert (= (str.++ preE (str.++ stem45 sufE)) (str.++ unch145E (str.++ ch45E unch245E))))
(assert (= (str.++ preF (str.++ stem45 sufF)) (str.++ unch145F (str.++ ch45F unch245F))))
(assert (= (str.++ preG (str.++ stem45 sufG)) (str.++ unch145G (str.++ ch45G unch245G))))
(assert (= (str.++ preH (str.++ stem45 sufH)) (str.++ unch145H (str.++ ch45H unch245H))))
(assert (= "rOgjisjkj" (str.++ unch145G (str.++ var45G unch245G))))
(assert (= "rOdostH" (str.++ unch145H (str.++ var45H unch245H))))
(assert (= (str.len stem45) l45))
(assert (= (ite (= ch45A var45A) 0 1) sc45A))
(assert (= (ite (= ch45B var45B) 0 1) sc45B))
(assert (= (ite (= ch45C var45C) 0 1) sc45C))
(assert (= (ite (= ch45D var45D) 0 1) sc45D))
(assert (= (ite (= ch45E var45E) 0 1) sc45E))
(assert (= (ite (= ch45F var45F) 0 1) sc45F))
(assert (= (ite (= ch45G var45G) 0 1) sc45G))
(assert (= (ite (= ch45H var45H) 0 1) sc45H))
(assert (<= sc45A 1))
(assert (<= sc45B 1))
(assert (<= sc45C 1))
(assert (<= sc45D 1))
(assert (<= sc45E 1))
(assert (<= sc45F 1))
(assert (<= sc45G 1))
(assert (<= sc45H 1))
(assert (<= (str.len var46A) 1))
(assert (<= (str.len var46B) 1))
(assert (<= (str.len var46C) 1))
(assert (<= (str.len var46D) 1))
(assert (<= (str.len var46E) 1))
(assert (<= (str.len var46F) 1))
(assert (<= (str.len var46G) 1))
(assert (<= (str.len var46H) 1))
(assert (= (str.++ preA (str.++ stem46 sufA)) (str.++ unch146A (str.++ ch46A unch246A))))
(assert (= (str.++ preB (str.++ stem46 sufB)) (str.++ unch146B (str.++ ch46B unch246B))))
(assert (= (str.++ preC (str.++ stem46 sufC)) (str.++ unch146C (str.++ ch46C unch246C))))
(assert (= (str.++ preD (str.++ stem46 sufD)) (str.++ unch146D (str.++ ch46D unch246D))))
(assert (= (str.++ preE (str.++ stem46 sufE)) (str.++ unch146E (str.++ ch46E unch246E))))
(assert (= (str.++ preF (str.++ stem46 sufF)) (str.++ unch146F (str.++ ch46F unch246F))))
(assert (= (str.++ preG (str.++ stem46 sufG)) (str.++ unch146G (str.++ ch46G unch246G))))
(assert (= (str.++ preH (str.++ stem46 sufH)) (str.++ unch146H (str.++ ch46H unch246H))))
(assert (= "sjXlj" (str.++ unch146G (str.++ var46G unch246G))))
(assert (= "s2lH" (str.++ unch146H (str.++ var46H unch246H))))
(assert (= (str.len stem46) l46))
(assert (= (ite (= ch46A var46A) 0 1) sc46A))
(assert (= (ite (= ch46B var46B) 0 1) sc46B))
(assert (= (ite (= ch46C var46C) 0 1) sc46C))
(assert (= (ite (= ch46D var46D) 0 1) sc46D))
(assert (= (ite (= ch46E var46E) 0 1) sc46E))
(assert (= (ite (= ch46F var46F) 0 1) sc46F))
(assert (= (ite (= ch46G var46G) 0 1) sc46G))
(assert (= (ite (= ch46H var46H) 0 1) sc46H))
(assert (<= sc46A 1))
(assert (<= sc46B 1))
(assert (<= sc46C 1))
(assert (<= sc46D 1))
(assert (<= sc46E 1))
(assert (<= sc46F 1))
(assert (<= sc46G 1))
(assert (<= sc46H 1))
(assert (<= (str.len var47A) 1))
(assert (<= (str.len var47B) 1))
(assert (<= (str.len var47C) 1))
(assert (<= (str.len var47D) 1))
(assert (<= (str.len var47E) 1))
(assert (<= (str.len var47F) 1))
(assert (<= (str.len var47G) 1))
(assert (<= (str.len var47H) 1))
(assert (= (str.++ preA (str.++ stem47 sufA)) (str.++ unch147A (str.++ ch47A unch247A))))
(assert (= (str.++ preB (str.++ stem47 sufB)) (str.++ unch147B (str.++ ch47B unch247B))))
(assert (= (str.++ preC (str.++ stem47 sufC)) (str.++ unch147C (str.++ ch47C unch247C))))
(assert (= (str.++ preD (str.++ stem47 sufD)) (str.++ unch147D (str.++ ch47D unch247D))))
(assert (= (str.++ preE (str.++ stem47 sufE)) (str.++ unch147E (str.++ ch47E unch247E))))
(assert (= (str.++ preF (str.++ stem47 sufF)) (str.++ unch147F (str.++ ch47F unch247F))))
(assert (= (str.++ preG (str.++ stem47 sufG)) (str.++ unch147G (str.++ ch47G unch247G))))
(assert (= (str.++ preH (str.++ stem47 sufH)) (str.++ unch147H (str.++ ch47H unch247H))))
(assert (= "p2Bjisjkj" (str.++ unch147G (str.++ var47G unch247G))))
(assert (= "p2BHstH" (str.++ unch147H (str.++ var47H unch247H))))
(assert (= (str.len stem47) l47))
(assert (= (ite (= ch47A var47A) 0 1) sc47A))
(assert (= (ite (= ch47B var47B) 0 1) sc47B))
(assert (= (ite (= ch47C var47C) 0 1) sc47C))
(assert (= (ite (= ch47D var47D) 0 1) sc47D))
(assert (= (ite (= ch47E var47E) 0 1) sc47E))
(assert (= (ite (= ch47F var47F) 0 1) sc47F))
(assert (= (ite (= ch47G var47G) 0 1) sc47G))
(assert (= (ite (= ch47H var47H) 0 1) sc47H))
(assert (<= sc47A 1))
(assert (<= sc47B 1))
(assert (<= sc47C 1))
(assert (<= sc47D 1))
(assert (<= sc47E 1))
(assert (<= sc47F 1))
(assert (<= sc47G 1))
(assert (<= sc47H 1))
(assert (<= (str.len var48A) 1))
(assert (<= (str.len var48B) 1))
(assert (<= (str.len var48C) 1))
(assert (<= (str.len var48D) 1))
(assert (<= (str.len var48E) 1))
(assert (<= (str.len var48F) 1))
(assert (<= (str.len var48G) 1))
(assert (<= (str.len var48H) 1))
(assert (= (str.++ preA (str.++ stem48 sufA)) (str.++ unch148A (str.++ ch48A unch248A))))
(assert (= (str.++ preB (str.++ stem48 sufB)) (str.++ unch148B (str.++ ch48B unch248B))))
(assert (= (str.++ preC (str.++ stem48 sufC)) (str.++ unch148C (str.++ ch48C unch248C))))
(assert (= (str.++ preD (str.++ stem48 sufD)) (str.++ unch148D (str.++ ch48D unch248D))))
(assert (= (str.++ preE (str.++ stem48 sufE)) (str.++ unch148E (str.++ ch48E unch248E))))
(assert (= (str.++ preF (str.++ stem48 sufF)) (str.++ unch148F (str.++ ch48F unch248F))))
(assert (= (str.++ preG (str.++ stem48 sufG)) (str.++ unch148G (str.++ ch48G unch248G))))
(assert (= (str.++ preH (str.++ stem48 sufH)) (str.++ unch148H (str.++ ch48H unch248H))))
(assert (= "zOmjikj" (str.++ unch148G (str.++ var48G unch248G))))
(assert (= "zOmHtH" (str.++ unch148H (str.++ var48H unch248H))))
(assert (= (str.len stem48) l48))
(assert (= (ite (= ch48A var48A) 0 1) sc48A))
(assert (= (ite (= ch48B var48B) 0 1) sc48B))
(assert (= (ite (= ch48C var48C) 0 1) sc48C))
(assert (= (ite (= ch48D var48D) 0 1) sc48D))
(assert (= (ite (= ch48E var48E) 0 1) sc48E))
(assert (= (ite (= ch48F var48F) 0 1) sc48F))
(assert (= (ite (= ch48G var48G) 0 1) sc48G))
(assert (= (ite (= ch48H var48H) 0 1) sc48H))
(assert (<= sc48A 1))
(assert (<= sc48B 1))
(assert (<= sc48C 1))
(assert (<= sc48D 1))
(assert (<= sc48E 1))
(assert (<= sc48F 1))
(assert (<= sc48G 1))
(assert (<= sc48H 1))
(assert (<= (str.len var49A) 1))
(assert (<= (str.len var49B) 1))
(assert (<= (str.len var49C) 1))
(assert (<= (str.len var49D) 1))
(assert (<= (str.len var49E) 1))
(assert (<= (str.len var49F) 1))
(assert (<= (str.len var49G) 1))
(assert (<= (str.len var49H) 1))
(assert (= (str.++ preA (str.++ stem49 sufA)) (str.++ unch149A (str.++ ch49A unch249A))))
(assert (= (str.++ preB (str.++ stem49 sufB)) (str.++ unch149B (str.++ ch49B unch249B))))
(assert (= (str.++ preC (str.++ stem49 sufC)) (str.++ unch149C (str.++ ch49C unch249C))))
(assert (= (str.++ preD (str.++ stem49 sufD)) (str.++ unch149D (str.++ ch49D unch249D))))
(assert (= (str.++ preE (str.++ stem49 sufE)) (str.++ unch149E (str.++ ch49E unch249E))))
(assert (= (str.++ preF (str.++ stem49 sufF)) (str.++ unch149F (str.++ ch49F unch249F))))
(assert (= (str.++ preG (str.++ stem49 sufG)) (str.++ unch149G (str.++ ch49G unch249G))))
(assert (= (str.++ preH (str.++ stem49 sufH)) (str.++ unch149H (str.++ ch49H unch249H))))
(assert (= "skOtHrjkj" (str.++ unch149G (str.++ var49G unch249G))))
(assert (= "skOtHrtH" (str.++ unch149H (str.++ var49H unch249H))))
(assert (= (str.len stem49) l49))
(assert (= (ite (= ch49A var49A) 0 1) sc49A))
(assert (= (ite (= ch49B var49B) 0 1) sc49B))
(assert (= (ite (= ch49C var49C) 0 1) sc49C))
(assert (= (ite (= ch49D var49D) 0 1) sc49D))
(assert (= (ite (= ch49E var49E) 0 1) sc49E))
(assert (= (ite (= ch49F var49F) 0 1) sc49F))
(assert (= (ite (= ch49G var49G) 0 1) sc49G))
(assert (= (ite (= ch49H var49H) 0 1) sc49H))
(assert (<= sc49A 1))
(assert (<= sc49B 1))
(assert (<= sc49C 1))
(assert (<= sc49D 1))
(assert (<= sc49E 1))
(assert (<= sc49F 1))
(assert (<= sc49G 1))
(assert (<= sc49H 1))
(assert (<= (str.len var50A) 1))
(assert (<= (str.len var50B) 1))
(assert (<= (str.len var50C) 1))
(assert (<= (str.len var50D) 1))
(assert (<= (str.len var50E) 1))
(assert (<= (str.len var50F) 1))
(assert (<= (str.len var50G) 1))
(assert (<= (str.len var50H) 1))
(assert (= (str.++ preA (str.++ stem50 sufA)) (str.++ unch150A (str.++ ch50A unch250A))))
(assert (= (str.++ preB (str.++ stem50 sufB)) (str.++ unch150B (str.++ ch50B unch250B))))
(assert (= (str.++ preC (str.++ stem50 sufC)) (str.++ unch150C (str.++ ch50C unch250C))))
(assert (= (str.++ preD (str.++ stem50 sufD)) (str.++ unch150D (str.++ ch50D unch250D))))
(assert (= (str.++ preE (str.++ stem50 sufE)) (str.++ unch150E (str.++ ch50E unch250E))))
(assert (= (str.++ preF (str.++ stem50 sufF)) (str.++ unch150F (str.++ ch50F unch250F))))
(assert (= (str.++ preG (str.++ stem50 sufG)) (str.++ unch150G (str.++ ch50G unch250G))))
(assert (= (str.++ preH (str.++ stem50 sufH)) (str.++ unch150H (str.++ ch50H unch250H))))
(assert (= "kjXsjkj" (str.++ unch150G (str.++ var50G unch250G))))
(assert (= "k2stH" (str.++ unch150H (str.++ var50H unch250H))))
(assert (= (str.len stem50) l50))
(assert (= (ite (= ch50A var50A) 0 1) sc50A))
(assert (= (ite (= ch50B var50B) 0 1) sc50B))
(assert (= (ite (= ch50C var50C) 0 1) sc50C))
(assert (= (ite (= ch50D var50D) 0 1) sc50D))
(assert (= (ite (= ch50E var50E) 0 1) sc50E))
(assert (= (ite (= ch50F var50F) 0 1) sc50F))
(assert (= (ite (= ch50G var50G) 0 1) sc50G))
(assert (= (ite (= ch50H var50H) 0 1) sc50H))
(assert (<= sc50A 1))
(assert (<= sc50B 1))
(assert (<= sc50C 1))
(assert (<= sc50D 1))
(assert (<= sc50E 1))
(assert (<= sc50F 1))
(assert (<= sc50G 1))
(assert (<= sc50H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      sc7G
      sc7H
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      sc8G
      sc8H
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      sc9G
      sc9H
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      sc10G
      sc10H
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      sc11G
      sc11H
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      sc12G
      sc12H
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      sc13G
      sc13H
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      sc14G
      sc14H
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      sc15G
      sc15H
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      sc16G
      sc16H
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      sc17G
      sc17H
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      sc18G
      sc18H
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      sc19G
      sc19H
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      sc20G
      sc20H
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      sc21G
      sc21H
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      sc22G
      sc22H
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      sc23G
      sc23H
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      sc24G
      sc24H
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      sc25G
      sc25H
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      sc26G
      sc26H
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      sc27G
      sc27H
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      sc28G
      sc28H
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      sc29G
      sc29H
      0
      sc30A
      sc30B
      sc30C
      sc30D
      sc30E
      sc30F
      sc30G
      sc30H
      0
      sc31A
      sc31B
      sc31C
      sc31D
      sc31E
      sc31F
      sc31G
      sc31H
      0
      sc32A
      sc32B
      sc32C
      sc32D
      sc32E
      sc32F
      sc32G
      sc32H
      0
      sc33A
      sc33B
      sc33C
      sc33D
      sc33E
      sc33F
      sc33G
      sc33H
      0
      sc34A
      sc34B
      sc34C
      sc34D
      sc34E
      sc34F
      sc34G
      sc34H
      0
      sc35A
      sc35B
      sc35C
      sc35D
      sc35E
      sc35F
      sc35G
      sc35H
      0
      sc36A
      sc36B
      sc36C
      sc36D
      sc36E
      sc36F
      sc36G
      sc36H
      0
      sc37A
      sc37B
      sc37C
      sc37D
      sc37E
      sc37F
      sc37G
      sc37H
      0
      sc38A
      sc38B
      sc38C
      sc38D
      sc38E
      sc38F
      sc38G
      sc38H
      0
      sc39A
      sc39B
      sc39C
      sc39D
      sc39E
      sc39F
      sc39G
      sc39H
      0
      sc40A
      sc40B
      sc40C
      sc40D
      sc40E
      sc40F
      sc40G
      sc40H
      0
      sc41A
      sc41B
      sc41C
      sc41D
      sc41E
      sc41F
      sc41G
      sc41H
      0
      sc42A
      sc42B
      sc42C
      sc42D
      sc42E
      sc42F
      sc42G
      sc42H
      0
      sc43A
      sc43B
      sc43C
      sc43D
      sc43E
      sc43F
      sc43G
      sc43H
      0
      sc44A
      sc44B
      sc44C
      sc44D
      sc44E
      sc44F
      sc44G
      sc44H
      0
      sc45A
      sc45B
      sc45C
      sc45D
      sc45E
      sc45F
      sc45G
      sc45H
      0
      sc46A
      sc46B
      sc46C
      sc46D
      sc46E
      sc46F
      sc46G
      sc46H
      0
      sc47A
      sc47B
      sc47C
      sc47D
      sc47E
      sc47F
      sc47G
      sc47H
      0
      sc48A
      sc48B
      sc48C
      sc48D
      sc48E
      sc48F
      sc48G
      sc48H
      0
      sc49A
      sc49B
      sc49C
      sc49D
      sc49E
      sc49F
      sc49G
      sc49H
      0
      sc50A
      sc50B
      sc50C
      sc50D
      sc50E
      sc50F
      sc50G
      sc50H)
   11))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun var7G () String)
(declare-fun var7H () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun unch27G () String)
(declare-fun ch7G () String)
(declare-fun unch17G () String)
(declare-fun unch27H () String)
(declare-fun ch7H () String)
(declare-fun unch17H () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun sc7G () Int)
(declare-fun sc7H () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun var8G () String)
(declare-fun var8H () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun unch28G () String)
(declare-fun ch8G () String)
(declare-fun unch18G () String)
(declare-fun unch28H () String)
(declare-fun ch8H () String)
(declare-fun unch18H () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun sc8G () Int)
(declare-fun sc8H () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun var9G () String)
(declare-fun var9H () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun unch29G () String)
(declare-fun ch9G () String)
(declare-fun unch19G () String)
(declare-fun unch29H () String)
(declare-fun ch9H () String)
(declare-fun unch19H () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun sc9G () Int)
(declare-fun sc9H () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun var10G () String)
(declare-fun var10H () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun unch210G () String)
(declare-fun ch10G () String)
(declare-fun unch110G () String)
(declare-fun unch210H () String)
(declare-fun ch10H () String)
(declare-fun unch110H () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun sc10G () Int)
(declare-fun sc10H () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun var11G () String)
(declare-fun var11H () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun unch211G () String)
(declare-fun ch11G () String)
(declare-fun unch111G () String)
(declare-fun unch211H () String)
(declare-fun ch11H () String)
(declare-fun unch111H () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun sc11G () Int)
(declare-fun sc11H () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun var12G () String)
(declare-fun var12H () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun unch212G () String)
(declare-fun ch12G () String)
(declare-fun unch112G () String)
(declare-fun unch212H () String)
(declare-fun ch12H () String)
(declare-fun unch112H () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun sc12G () Int)
(declare-fun sc12H () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun var13G () String)
(declare-fun var13H () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun unch213G () String)
(declare-fun ch13G () String)
(declare-fun unch113G () String)
(declare-fun unch213H () String)
(declare-fun ch13H () String)
(declare-fun unch113H () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun sc13G () Int)
(declare-fun sc13H () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun var14G () String)
(declare-fun var14H () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun unch214G () String)
(declare-fun ch14G () String)
(declare-fun unch114G () String)
(declare-fun unch214H () String)
(declare-fun ch14H () String)
(declare-fun unch114H () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun sc14G () Int)
(declare-fun sc14H () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun var15G () String)
(declare-fun var15H () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun unch215G () String)
(declare-fun ch15G () String)
(declare-fun unch115G () String)
(declare-fun unch215H () String)
(declare-fun ch15H () String)
(declare-fun unch115H () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun sc15G () Int)
(declare-fun sc15H () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun var16G () String)
(declare-fun var16H () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun unch216G () String)
(declare-fun ch16G () String)
(declare-fun unch116G () String)
(declare-fun unch216H () String)
(declare-fun ch16H () String)
(declare-fun unch116H () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun sc16G () Int)
(declare-fun sc16H () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun var17G () String)
(declare-fun var17H () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun unch217G () String)
(declare-fun ch17G () String)
(declare-fun unch117G () String)
(declare-fun unch217H () String)
(declare-fun ch17H () String)
(declare-fun unch117H () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun sc17G () Int)
(declare-fun sc17H () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun var18G () String)
(declare-fun var18H () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun unch218G () String)
(declare-fun ch18G () String)
(declare-fun unch118G () String)
(declare-fun unch218H () String)
(declare-fun ch18H () String)
(declare-fun unch118H () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun sc18G () Int)
(declare-fun sc18H () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun var19G () String)
(declare-fun var19H () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun unch219G () String)
(declare-fun ch19G () String)
(declare-fun unch119G () String)
(declare-fun unch219H () String)
(declare-fun ch19H () String)
(declare-fun unch119H () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun sc19G () Int)
(declare-fun sc19H () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun var20G () String)
(declare-fun var20H () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun unch220G () String)
(declare-fun ch20G () String)
(declare-fun unch120G () String)
(declare-fun unch220H () String)
(declare-fun ch20H () String)
(declare-fun unch120H () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun sc20G () Int)
(declare-fun sc20H () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun var21G () String)
(declare-fun var21H () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun unch221G () String)
(declare-fun ch21G () String)
(declare-fun unch121G () String)
(declare-fun unch221H () String)
(declare-fun ch21H () String)
(declare-fun unch121H () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun sc21G () Int)
(declare-fun sc21H () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun var22G () String)
(declare-fun var22H () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun unch222G () String)
(declare-fun ch22G () String)
(declare-fun unch122G () String)
(declare-fun unch222H () String)
(declare-fun ch22H () String)
(declare-fun unch122H () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun sc22G () Int)
(declare-fun sc22H () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun var23G () String)
(declare-fun var23H () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun unch223G () String)
(declare-fun ch23G () String)
(declare-fun unch123G () String)
(declare-fun unch223H () String)
(declare-fun ch23H () String)
(declare-fun unch123H () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun sc23G () Int)
(declare-fun sc23H () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun var24G () String)
(declare-fun var24H () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun unch224G () String)
(declare-fun ch24G () String)
(declare-fun unch124G () String)
(declare-fun unch224H () String)
(declare-fun ch24H () String)
(declare-fun unch124H () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun sc24G () Int)
(declare-fun sc24H () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun var25G () String)
(declare-fun var25H () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun unch225G () String)
(declare-fun ch25G () String)
(declare-fun unch125G () String)
(declare-fun unch225H () String)
(declare-fun ch25H () String)
(declare-fun unch125H () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun sc25G () Int)
(declare-fun sc25H () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun var26G () String)
(declare-fun var26H () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun unch226G () String)
(declare-fun ch26G () String)
(declare-fun unch126G () String)
(declare-fun unch226H () String)
(declare-fun ch26H () String)
(declare-fun unch126H () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun sc26G () Int)
(declare-fun sc26H () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun var27G () String)
(declare-fun var27H () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun unch227G () String)
(declare-fun ch27G () String)
(declare-fun unch127G () String)
(declare-fun unch227H () String)
(declare-fun ch27H () String)
(declare-fun unch127H () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun sc27G () Int)
(declare-fun sc27H () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun var28G () String)
(declare-fun var28H () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun unch228G () String)
(declare-fun ch28G () String)
(declare-fun unch128G () String)
(declare-fun unch228H () String)
(declare-fun ch28H () String)
(declare-fun unch128H () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun sc28G () Int)
(declare-fun sc28H () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun var29G () String)
(declare-fun var29H () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun unch229G () String)
(declare-fun ch29G () String)
(declare-fun unch129G () String)
(declare-fun unch229H () String)
(declare-fun ch29H () String)
(declare-fun unch129H () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun sc29G () Int)
(declare-fun sc29H () Int)
(declare-fun var30A () String)
(declare-fun var30B () String)
(declare-fun var30C () String)
(declare-fun var30D () String)
(declare-fun var30E () String)
(declare-fun var30F () String)
(declare-fun var30G () String)
(declare-fun var30H () String)
(declare-fun unch230A () String)
(declare-fun ch30A () String)
(declare-fun unch130A () String)
(declare-fun stem30 () String)
(declare-fun unch230B () String)
(declare-fun ch30B () String)
(declare-fun unch130B () String)
(declare-fun unch230C () String)
(declare-fun ch30C () String)
(declare-fun unch130C () String)
(declare-fun unch230D () String)
(declare-fun ch30D () String)
(declare-fun unch130D () String)
(declare-fun unch230E () String)
(declare-fun ch30E () String)
(declare-fun unch130E () String)
(declare-fun unch230F () String)
(declare-fun ch30F () String)
(declare-fun unch130F () String)
(declare-fun unch230G () String)
(declare-fun ch30G () String)
(declare-fun unch130G () String)
(declare-fun unch230H () String)
(declare-fun ch30H () String)
(declare-fun unch130H () String)
(declare-fun l30 () Int)
(declare-fun sc30A () Int)
(declare-fun sc30B () Int)
(declare-fun sc30C () Int)
(declare-fun sc30D () Int)
(declare-fun sc30E () Int)
(declare-fun sc30F () Int)
(declare-fun sc30G () Int)
(declare-fun sc30H () Int)
(declare-fun var31A () String)
(declare-fun var31B () String)
(declare-fun var31C () String)
(declare-fun var31D () String)
(declare-fun var31E () String)
(declare-fun var31F () String)
(declare-fun var31G () String)
(declare-fun var31H () String)
(declare-fun unch231A () String)
(declare-fun ch31A () String)
(declare-fun unch131A () String)
(declare-fun stem31 () String)
(declare-fun unch231B () String)
(declare-fun ch31B () String)
(declare-fun unch131B () String)
(declare-fun unch231C () String)
(declare-fun ch31C () String)
(declare-fun unch131C () String)
(declare-fun unch231D () String)
(declare-fun ch31D () String)
(declare-fun unch131D () String)
(declare-fun unch231E () String)
(declare-fun ch31E () String)
(declare-fun unch131E () String)
(declare-fun unch231F () String)
(declare-fun ch31F () String)
(declare-fun unch131F () String)
(declare-fun unch231G () String)
(declare-fun ch31G () String)
(declare-fun unch131G () String)
(declare-fun unch231H () String)
(declare-fun ch31H () String)
(declare-fun unch131H () String)
(declare-fun l31 () Int)
(declare-fun sc31A () Int)
(declare-fun sc31B () Int)
(declare-fun sc31C () Int)
(declare-fun sc31D () Int)
(declare-fun sc31E () Int)
(declare-fun sc31F () Int)
(declare-fun sc31G () Int)
(declare-fun sc31H () Int)
(declare-fun var32A () String)
(declare-fun var32B () String)
(declare-fun var32C () String)
(declare-fun var32D () String)
(declare-fun var32E () String)
(declare-fun var32F () String)
(declare-fun var32G () String)
(declare-fun var32H () String)
(declare-fun unch232A () String)
(declare-fun ch32A () String)
(declare-fun unch132A () String)
(declare-fun stem32 () String)
(declare-fun unch232B () String)
(declare-fun ch32B () String)
(declare-fun unch132B () String)
(declare-fun unch232C () String)
(declare-fun ch32C () String)
(declare-fun unch132C () String)
(declare-fun unch232D () String)
(declare-fun ch32D () String)
(declare-fun unch132D () String)
(declare-fun unch232E () String)
(declare-fun ch32E () String)
(declare-fun unch132E () String)
(declare-fun unch232F () String)
(declare-fun ch32F () String)
(declare-fun unch132F () String)
(declare-fun unch232G () String)
(declare-fun ch32G () String)
(declare-fun unch132G () String)
(declare-fun unch232H () String)
(declare-fun ch32H () String)
(declare-fun unch132H () String)
(declare-fun l32 () Int)
(declare-fun sc32A () Int)
(declare-fun sc32B () Int)
(declare-fun sc32C () Int)
(declare-fun sc32D () Int)
(declare-fun sc32E () Int)
(declare-fun sc32F () Int)
(declare-fun sc32G () Int)
(declare-fun sc32H () Int)
(declare-fun var33A () String)
(declare-fun var33B () String)
(declare-fun var33C () String)
(declare-fun var33D () String)
(declare-fun var33E () String)
(declare-fun var33F () String)
(declare-fun var33G () String)
(declare-fun var33H () String)
(declare-fun unch233A () String)
(declare-fun ch33A () String)
(declare-fun unch133A () String)
(declare-fun stem33 () String)
(declare-fun unch233B () String)
(declare-fun ch33B () String)
(declare-fun unch133B () String)
(declare-fun unch233C () String)
(declare-fun ch33C () String)
(declare-fun unch133C () String)
(declare-fun unch233D () String)
(declare-fun ch33D () String)
(declare-fun unch133D () String)
(declare-fun unch233E () String)
(declare-fun ch33E () String)
(declare-fun unch133E () String)
(declare-fun unch233F () String)
(declare-fun ch33F () String)
(declare-fun unch133F () String)
(declare-fun unch233G () String)
(declare-fun ch33G () String)
(declare-fun unch133G () String)
(declare-fun unch233H () String)
(declare-fun ch33H () String)
(declare-fun unch133H () String)
(declare-fun l33 () Int)
(declare-fun sc33A () Int)
(declare-fun sc33B () Int)
(declare-fun sc33C () Int)
(declare-fun sc33D () Int)
(declare-fun sc33E () Int)
(declare-fun sc33F () Int)
(declare-fun sc33G () Int)
(declare-fun sc33H () Int)
(declare-fun var34A () String)
(declare-fun var34B () String)
(declare-fun var34C () String)
(declare-fun var34D () String)
(declare-fun var34E () String)
(declare-fun var34F () String)
(declare-fun var34G () String)
(declare-fun var34H () String)
(declare-fun unch234A () String)
(declare-fun ch34A () String)
(declare-fun unch134A () String)
(declare-fun stem34 () String)
(declare-fun unch234B () String)
(declare-fun ch34B () String)
(declare-fun unch134B () String)
(declare-fun unch234C () String)
(declare-fun ch34C () String)
(declare-fun unch134C () String)
(declare-fun unch234D () String)
(declare-fun ch34D () String)
(declare-fun unch134D () String)
(declare-fun unch234E () String)
(declare-fun ch34E () String)
(declare-fun unch134E () String)
(declare-fun unch234F () String)
(declare-fun ch34F () String)
(declare-fun unch134F () String)
(declare-fun unch234G () String)
(declare-fun ch34G () String)
(declare-fun unch134G () String)
(declare-fun unch234H () String)
(declare-fun ch34H () String)
(declare-fun unch134H () String)
(declare-fun l34 () Int)
(declare-fun sc34A () Int)
(declare-fun sc34B () Int)
(declare-fun sc34C () Int)
(declare-fun sc34D () Int)
(declare-fun sc34E () Int)
(declare-fun sc34F () Int)
(declare-fun sc34G () Int)
(declare-fun sc34H () Int)
(declare-fun var35A () String)
(declare-fun var35B () String)
(declare-fun var35C () String)
(declare-fun var35D () String)
(declare-fun var35E () String)
(declare-fun var35F () String)
(declare-fun var35G () String)
(declare-fun var35H () String)
(declare-fun unch235A () String)
(declare-fun ch35A () String)
(declare-fun unch135A () String)
(declare-fun stem35 () String)
(declare-fun unch235B () String)
(declare-fun ch35B () String)
(declare-fun unch135B () String)
(declare-fun unch235C () String)
(declare-fun ch35C () String)
(declare-fun unch135C () String)
(declare-fun unch235D () String)
(declare-fun ch35D () String)
(declare-fun unch135D () String)
(declare-fun unch235E () String)
(declare-fun ch35E () String)
(declare-fun unch135E () String)
(declare-fun unch235F () String)
(declare-fun ch35F () String)
(declare-fun unch135F () String)
(declare-fun unch235G () String)
(declare-fun ch35G () String)
(declare-fun unch135G () String)
(declare-fun unch235H () String)
(declare-fun ch35H () String)
(declare-fun unch135H () String)
(declare-fun l35 () Int)
(declare-fun sc35A () Int)
(declare-fun sc35B () Int)
(declare-fun sc35C () Int)
(declare-fun sc35D () Int)
(declare-fun sc35E () Int)
(declare-fun sc35F () Int)
(declare-fun sc35G () Int)
(declare-fun sc35H () Int)
(declare-fun var36A () String)
(declare-fun var36B () String)
(declare-fun var36C () String)
(declare-fun var36D () String)
(declare-fun var36E () String)
(declare-fun var36F () String)
(declare-fun var36G () String)
(declare-fun var36H () String)
(declare-fun unch236A () String)
(declare-fun ch36A () String)
(declare-fun unch136A () String)
(declare-fun stem36 () String)
(declare-fun unch236B () String)
(declare-fun ch36B () String)
(declare-fun unch136B () String)
(declare-fun unch236C () String)
(declare-fun ch36C () String)
(declare-fun unch136C () String)
(declare-fun unch236D () String)
(declare-fun ch36D () String)
(declare-fun unch136D () String)
(declare-fun unch236E () String)
(declare-fun ch36E () String)
(declare-fun unch136E () String)
(declare-fun unch236F () String)
(declare-fun ch36F () String)
(declare-fun unch136F () String)
(declare-fun unch236G () String)
(declare-fun ch36G () String)
(declare-fun unch136G () String)
(declare-fun unch236H () String)
(declare-fun ch36H () String)
(declare-fun unch136H () String)
(declare-fun l36 () Int)
(declare-fun sc36A () Int)
(declare-fun sc36B () Int)
(declare-fun sc36C () Int)
(declare-fun sc36D () Int)
(declare-fun sc36E () Int)
(declare-fun sc36F () Int)
(declare-fun sc36G () Int)
(declare-fun sc36H () Int)
(declare-fun var37A () String)
(declare-fun var37B () String)
(declare-fun var37C () String)
(declare-fun var37D () String)
(declare-fun var37E () String)
(declare-fun var37F () String)
(declare-fun var37G () String)
(declare-fun var37H () String)
(declare-fun unch237A () String)
(declare-fun ch37A () String)
(declare-fun unch137A () String)
(declare-fun stem37 () String)
(declare-fun unch237B () String)
(declare-fun ch37B () String)
(declare-fun unch137B () String)
(declare-fun unch237C () String)
(declare-fun ch37C () String)
(declare-fun unch137C () String)
(declare-fun unch237D () String)
(declare-fun ch37D () String)
(declare-fun unch137D () String)
(declare-fun unch237E () String)
(declare-fun ch37E () String)
(declare-fun unch137E () String)
(declare-fun unch237F () String)
(declare-fun ch37F () String)
(declare-fun unch137F () String)
(declare-fun unch237G () String)
(declare-fun ch37G () String)
(declare-fun unch137G () String)
(declare-fun unch237H () String)
(declare-fun ch37H () String)
(declare-fun unch137H () String)
(declare-fun l37 () Int)
(declare-fun sc37A () Int)
(declare-fun sc37B () Int)
(declare-fun sc37C () Int)
(declare-fun sc37D () Int)
(declare-fun sc37E () Int)
(declare-fun sc37F () Int)
(declare-fun sc37G () Int)
(declare-fun sc37H () Int)
(declare-fun var38A () String)
(declare-fun var38B () String)
(declare-fun var38C () String)
(declare-fun var38D () String)
(declare-fun var38E () String)
(declare-fun var38F () String)
(declare-fun var38G () String)
(declare-fun var38H () String)
(declare-fun unch238A () String)
(declare-fun ch38A () String)
(declare-fun unch138A () String)
(declare-fun stem38 () String)
(declare-fun unch238B () String)
(declare-fun ch38B () String)
(declare-fun unch138B () String)
(declare-fun unch238C () String)
(declare-fun ch38C () String)
(declare-fun unch138C () String)
(declare-fun unch238D () String)
(declare-fun ch38D () String)
(declare-fun unch138D () String)
(declare-fun unch238E () String)
(declare-fun ch38E () String)
(declare-fun unch138E () String)
(declare-fun unch238F () String)
(declare-fun ch38F () String)
(declare-fun unch138F () String)
(declare-fun unch238G () String)
(declare-fun ch38G () String)
(declare-fun unch138G () String)
(declare-fun unch238H () String)
(declare-fun ch38H () String)
(declare-fun unch138H () String)
(declare-fun l38 () Int)
(declare-fun sc38A () Int)
(declare-fun sc38B () Int)
(declare-fun sc38C () Int)
(declare-fun sc38D () Int)
(declare-fun sc38E () Int)
(declare-fun sc38F () Int)
(declare-fun sc38G () Int)
(declare-fun sc38H () Int)
(declare-fun var39A () String)
(declare-fun var39B () String)
(declare-fun var39C () String)
(declare-fun var39D () String)
(declare-fun var39E () String)
(declare-fun var39F () String)
(declare-fun var39G () String)
(declare-fun var39H () String)
(declare-fun unch239A () String)
(declare-fun ch39A () String)
(declare-fun unch139A () String)
(declare-fun stem39 () String)
(declare-fun unch239B () String)
(declare-fun ch39B () String)
(declare-fun unch139B () String)
(declare-fun unch239C () String)
(declare-fun ch39C () String)
(declare-fun unch139C () String)
(declare-fun unch239D () String)
(declare-fun ch39D () String)
(declare-fun unch139D () String)
(declare-fun unch239E () String)
(declare-fun ch39E () String)
(declare-fun unch139E () String)
(declare-fun unch239F () String)
(declare-fun ch39F () String)
(declare-fun unch139F () String)
(declare-fun unch239G () String)
(declare-fun ch39G () String)
(declare-fun unch139G () String)
(declare-fun unch239H () String)
(declare-fun ch39H () String)
(declare-fun unch139H () String)
(declare-fun l39 () Int)
(declare-fun sc39A () Int)
(declare-fun sc39B () Int)
(declare-fun sc39C () Int)
(declare-fun sc39D () Int)
(declare-fun sc39E () Int)
(declare-fun sc39F () Int)
(declare-fun sc39G () Int)
(declare-fun sc39H () Int)
(declare-fun var40A () String)
(declare-fun var40B () String)
(declare-fun var40C () String)
(declare-fun var40D () String)
(declare-fun var40E () String)
(declare-fun var40F () String)
(declare-fun var40G () String)
(declare-fun var40H () String)
(declare-fun unch240A () String)
(declare-fun ch40A () String)
(declare-fun unch140A () String)
(declare-fun stem40 () String)
(declare-fun unch240B () String)
(declare-fun ch40B () String)
(declare-fun unch140B () String)
(declare-fun unch240C () String)
(declare-fun ch40C () String)
(declare-fun unch140C () String)
(declare-fun unch240D () String)
(declare-fun ch40D () String)
(declare-fun unch140D () String)
(declare-fun unch240E () String)
(declare-fun ch40E () String)
(declare-fun unch140E () String)
(declare-fun unch240F () String)
(declare-fun ch40F () String)
(declare-fun unch140F () String)
(declare-fun unch240G () String)
(declare-fun ch40G () String)
(declare-fun unch140G () String)
(declare-fun unch240H () String)
(declare-fun ch40H () String)
(declare-fun unch140H () String)
(declare-fun l40 () Int)
(declare-fun sc40A () Int)
(declare-fun sc40B () Int)
(declare-fun sc40C () Int)
(declare-fun sc40D () Int)
(declare-fun sc40E () Int)
(declare-fun sc40F () Int)
(declare-fun sc40G () Int)
(declare-fun sc40H () Int)
(declare-fun var41A () String)
(declare-fun var41B () String)
(declare-fun var41C () String)
(declare-fun var41D () String)
(declare-fun var41E () String)
(declare-fun var41F () String)
(declare-fun var41G () String)
(declare-fun var41H () String)
(declare-fun unch241A () String)
(declare-fun ch41A () String)
(declare-fun unch141A () String)
(declare-fun stem41 () String)
(declare-fun unch241B () String)
(declare-fun ch41B () String)
(declare-fun unch141B () String)
(declare-fun unch241C () String)
(declare-fun ch41C () String)
(declare-fun unch141C () String)
(declare-fun unch241D () String)
(declare-fun ch41D () String)
(declare-fun unch141D () String)
(declare-fun unch241E () String)
(declare-fun ch41E () String)
(declare-fun unch141E () String)
(declare-fun unch241F () String)
(declare-fun ch41F () String)
(declare-fun unch141F () String)
(declare-fun unch241G () String)
(declare-fun ch41G () String)
(declare-fun unch141G () String)
(declare-fun unch241H () String)
(declare-fun ch41H () String)
(declare-fun unch141H () String)
(declare-fun l41 () Int)
(declare-fun sc41A () Int)
(declare-fun sc41B () Int)
(declare-fun sc41C () Int)
(declare-fun sc41D () Int)
(declare-fun sc41E () Int)
(declare-fun sc41F () Int)
(declare-fun sc41G () Int)
(declare-fun sc41H () Int)
(declare-fun var42A () String)
(declare-fun var42B () String)
(declare-fun var42C () String)
(declare-fun var42D () String)
(declare-fun var42E () String)
(declare-fun var42F () String)
(declare-fun var42G () String)
(declare-fun var42H () String)
(declare-fun unch242A () String)
(declare-fun ch42A () String)
(declare-fun unch142A () String)
(declare-fun stem42 () String)
(declare-fun unch242B () String)
(declare-fun ch42B () String)
(declare-fun unch142B () String)
(declare-fun unch242C () String)
(declare-fun ch42C () String)
(declare-fun unch142C () String)
(declare-fun unch242D () String)
(declare-fun ch42D () String)
(declare-fun unch142D () String)
(declare-fun unch242E () String)
(declare-fun ch42E () String)
(declare-fun unch142E () String)
(declare-fun unch242F () String)
(declare-fun ch42F () String)
(declare-fun unch142F () String)
(declare-fun unch242G () String)
(declare-fun ch42G () String)
(declare-fun unch142G () String)
(declare-fun unch242H () String)
(declare-fun ch42H () String)
(declare-fun unch142H () String)
(declare-fun l42 () Int)
(declare-fun sc42A () Int)
(declare-fun sc42B () Int)
(declare-fun sc42C () Int)
(declare-fun sc42D () Int)
(declare-fun sc42E () Int)
(declare-fun sc42F () Int)
(declare-fun sc42G () Int)
(declare-fun sc42H () Int)
(declare-fun var43A () String)
(declare-fun var43B () String)
(declare-fun var43C () String)
(declare-fun var43D () String)
(declare-fun var43E () String)
(declare-fun var43F () String)
(declare-fun var43G () String)
(declare-fun var43H () String)
(declare-fun unch243A () String)
(declare-fun ch43A () String)
(declare-fun unch143A () String)
(declare-fun stem43 () String)
(declare-fun unch243B () String)
(declare-fun ch43B () String)
(declare-fun unch143B () String)
(declare-fun unch243C () String)
(declare-fun ch43C () String)
(declare-fun unch143C () String)
(declare-fun unch243D () String)
(declare-fun ch43D () String)
(declare-fun unch143D () String)
(declare-fun unch243E () String)
(declare-fun ch43E () String)
(declare-fun unch143E () String)
(declare-fun unch243F () String)
(declare-fun ch43F () String)
(declare-fun unch143F () String)
(declare-fun unch243G () String)
(declare-fun ch43G () String)
(declare-fun unch143G () String)
(declare-fun unch243H () String)
(declare-fun ch43H () String)
(declare-fun unch143H () String)
(declare-fun l43 () Int)
(declare-fun sc43A () Int)
(declare-fun sc43B () Int)
(declare-fun sc43C () Int)
(declare-fun sc43D () Int)
(declare-fun sc43E () Int)
(declare-fun sc43F () Int)
(declare-fun sc43G () Int)
(declare-fun sc43H () Int)
(declare-fun var44A () String)
(declare-fun var44B () String)
(declare-fun var44C () String)
(declare-fun var44D () String)
(declare-fun var44E () String)
(declare-fun var44F () String)
(declare-fun var44G () String)
(declare-fun var44H () String)
(declare-fun unch244A () String)
(declare-fun ch44A () String)
(declare-fun unch144A () String)
(declare-fun stem44 () String)
(declare-fun unch244B () String)
(declare-fun ch44B () String)
(declare-fun unch144B () String)
(declare-fun unch244C () String)
(declare-fun ch44C () String)
(declare-fun unch144C () String)
(declare-fun unch244D () String)
(declare-fun ch44D () String)
(declare-fun unch144D () String)
(declare-fun unch244E () String)
(declare-fun ch44E () String)
(declare-fun unch144E () String)
(declare-fun unch244F () String)
(declare-fun ch44F () String)
(declare-fun unch144F () String)
(declare-fun unch244G () String)
(declare-fun ch44G () String)
(declare-fun unch144G () String)
(declare-fun unch244H () String)
(declare-fun ch44H () String)
(declare-fun unch144H () String)
(declare-fun l44 () Int)
(declare-fun sc44A () Int)
(declare-fun sc44B () Int)
(declare-fun sc44C () Int)
(declare-fun sc44D () Int)
(declare-fun sc44E () Int)
(declare-fun sc44F () Int)
(declare-fun sc44G () Int)
(declare-fun sc44H () Int)
(declare-fun var45A () String)
(declare-fun var45B () String)
(declare-fun var45C () String)
(declare-fun var45D () String)
(declare-fun var45E () String)
(declare-fun var45F () String)
(declare-fun var45G () String)
(declare-fun var45H () String)
(declare-fun unch245A () String)
(declare-fun ch45A () String)
(declare-fun unch145A () String)
(declare-fun stem45 () String)
(declare-fun unch245B () String)
(declare-fun ch45B () String)
(declare-fun unch145B () String)
(declare-fun unch245C () String)
(declare-fun ch45C () String)
(declare-fun unch145C () String)
(declare-fun unch245D () String)
(declare-fun ch45D () String)
(declare-fun unch145D () String)
(declare-fun unch245E () String)
(declare-fun ch45E () String)
(declare-fun unch145E () String)
(declare-fun unch245F () String)
(declare-fun ch45F () String)
(declare-fun unch145F () String)
(declare-fun unch245G () String)
(declare-fun ch45G () String)
(declare-fun unch145G () String)
(declare-fun unch245H () String)
(declare-fun ch45H () String)
(declare-fun unch145H () String)
(declare-fun l45 () Int)
(declare-fun sc45A () Int)
(declare-fun sc45B () Int)
(declare-fun sc45C () Int)
(declare-fun sc45D () Int)
(declare-fun sc45E () Int)
(declare-fun sc45F () Int)
(declare-fun sc45G () Int)
(declare-fun sc45H () Int)
(declare-fun var46A () String)
(declare-fun var46B () String)
(declare-fun var46C () String)
(declare-fun var46D () String)
(declare-fun var46E () String)
(declare-fun var46F () String)
(declare-fun var46G () String)
(declare-fun var46H () String)
(declare-fun unch246A () String)
(declare-fun ch46A () String)
(declare-fun unch146A () String)
(declare-fun stem46 () String)
(declare-fun unch246B () String)
(declare-fun ch46B () String)
(declare-fun unch146B () String)
(declare-fun unch246C () String)
(declare-fun ch46C () String)
(declare-fun unch146C () String)
(declare-fun unch246D () String)
(declare-fun ch46D () String)
(declare-fun unch146D () String)
(declare-fun unch246E () String)
(declare-fun ch46E () String)
(declare-fun unch146E () String)
(declare-fun unch246F () String)
(declare-fun ch46F () String)
(declare-fun unch146F () String)
(declare-fun unch246G () String)
(declare-fun ch46G () String)
(declare-fun unch146G () String)
(declare-fun unch246H () String)
(declare-fun ch46H () String)
(declare-fun unch146H () String)
(declare-fun l46 () Int)
(declare-fun sc46A () Int)
(declare-fun sc46B () Int)
(declare-fun sc46C () Int)
(declare-fun sc46D () Int)
(declare-fun sc46E () Int)
(declare-fun sc46F () Int)
(declare-fun sc46G () Int)
(declare-fun sc46H () Int)
(declare-fun var47A () String)
(declare-fun var47B () String)
(declare-fun var47C () String)
(declare-fun var47D () String)
(declare-fun var47E () String)
(declare-fun var47F () String)
(declare-fun var47G () String)
(declare-fun var47H () String)
(declare-fun unch247A () String)
(declare-fun ch47A () String)
(declare-fun unch147A () String)
(declare-fun stem47 () String)
(declare-fun unch247B () String)
(declare-fun ch47B () String)
(declare-fun unch147B () String)
(declare-fun unch247C () String)
(declare-fun ch47C () String)
(declare-fun unch147C () String)
(declare-fun unch247D () String)
(declare-fun ch47D () String)
(declare-fun unch147D () String)
(declare-fun unch247E () String)
(declare-fun ch47E () String)
(declare-fun unch147E () String)
(declare-fun unch247F () String)
(declare-fun ch47F () String)
(declare-fun unch147F () String)
(declare-fun unch247G () String)
(declare-fun ch47G () String)
(declare-fun unch147G () String)
(declare-fun unch247H () String)
(declare-fun ch47H () String)
(declare-fun unch147H () String)
(declare-fun l47 () Int)
(declare-fun sc47A () Int)
(declare-fun sc47B () Int)
(declare-fun sc47C () Int)
(declare-fun sc47D () Int)
(declare-fun sc47E () Int)
(declare-fun sc47F () Int)
(declare-fun sc47G () Int)
(declare-fun sc47H () Int)
(declare-fun var48A () String)
(declare-fun var48B () String)
(declare-fun var48C () String)
(declare-fun var48D () String)
(declare-fun var48E () String)
(declare-fun var48F () String)
(declare-fun var48G () String)
(declare-fun var48H () String)
(declare-fun unch248A () String)
(declare-fun ch48A () String)
(declare-fun unch148A () String)
(declare-fun stem48 () String)
(declare-fun unch248B () String)
(declare-fun ch48B () String)
(declare-fun unch148B () String)
(declare-fun unch248C () String)
(declare-fun ch48C () String)
(declare-fun unch148C () String)
(declare-fun unch248D () String)
(declare-fun ch48D () String)
(declare-fun unch148D () String)
(declare-fun unch248E () String)
(declare-fun ch48E () String)
(declare-fun unch148E () String)
(declare-fun unch248F () String)
(declare-fun ch48F () String)
(declare-fun unch148F () String)
(declare-fun unch248G () String)
(declare-fun ch48G () String)
(declare-fun unch148G () String)
(declare-fun unch248H () String)
(declare-fun ch48H () String)
(declare-fun unch148H () String)
(declare-fun l48 () Int)
(declare-fun sc48A () Int)
(declare-fun sc48B () Int)
(declare-fun sc48C () Int)
(declare-fun sc48D () Int)
(declare-fun sc48E () Int)
(declare-fun sc48F () Int)
(declare-fun sc48G () Int)
(declare-fun sc48H () Int)
(declare-fun var49A () String)
(declare-fun var49B () String)
(declare-fun var49C () String)
(declare-fun var49D () String)
(declare-fun var49E () String)
(declare-fun var49F () String)
(declare-fun var49G () String)
(declare-fun var49H () String)
(declare-fun unch249A () String)
(declare-fun ch49A () String)
(declare-fun unch149A () String)
(declare-fun stem49 () String)
(declare-fun unch249B () String)
(declare-fun ch49B () String)
(declare-fun unch149B () String)
(declare-fun unch249C () String)
(declare-fun ch49C () String)
(declare-fun unch149C () String)
(declare-fun unch249D () String)
(declare-fun ch49D () String)
(declare-fun unch149D () String)
(declare-fun unch249E () String)
(declare-fun ch49E () String)
(declare-fun unch149E () String)
(declare-fun unch249F () String)
(declare-fun ch49F () String)
(declare-fun unch149F () String)
(declare-fun unch249G () String)
(declare-fun ch49G () String)
(declare-fun unch149G () String)
(declare-fun unch249H () String)
(declare-fun ch49H () String)
(declare-fun unch149H () String)
(declare-fun l49 () Int)
(declare-fun sc49A () Int)
(declare-fun sc49B () Int)
(declare-fun sc49C () Int)
(declare-fun sc49D () Int)
(declare-fun sc49E () Int)
(declare-fun sc49F () Int)
(declare-fun sc49G () Int)
(declare-fun sc49H () Int)
(declare-fun var50A () String)
(declare-fun var50B () String)
(declare-fun var50C () String)
(declare-fun var50D () String)
(declare-fun var50E () String)
(declare-fun var50F () String)
(declare-fun var50G () String)
(declare-fun var50H () String)
(declare-fun unch250A () String)
(declare-fun ch50A () String)
(declare-fun unch150A () String)
(declare-fun stem50 () String)
(declare-fun unch250B () String)
(declare-fun ch50B () String)
(declare-fun unch150B () String)
(declare-fun unch250C () String)
(declare-fun ch50C () String)
(declare-fun unch150C () String)
(declare-fun unch250D () String)
(declare-fun ch50D () String)
(declare-fun unch150D () String)
(declare-fun unch250E () String)
(declare-fun ch50E () String)
(declare-fun unch150E () String)
(declare-fun unch250F () String)
(declare-fun ch50F () String)
(declare-fun unch150F () String)
(declare-fun unch250G () String)
(declare-fun ch50G () String)
(declare-fun unch150G () String)
(declare-fun unch250H () String)
(declare-fun ch50H () String)
(declare-fun unch150H () String)
(declare-fun l50 () Int)
(declare-fun sc50A () Int)
(declare-fun sc50B () Int)
(declare-fun sc50C () Int)
(declare-fun sc50D () Int)
(declare-fun sc50E () Int)
(declare-fun sc50F () Int)
(declare-fun sc50G () Int)
(declare-fun sc50H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "plOst" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "plastO" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "plasjkjX" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "skorZx" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "skoruxO" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "skorusjX" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "1jrjXx" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "1jrjixO" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "1jrjisjX" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "pastZx" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "pastuxO" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "pastusjX" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "mjnjZx" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "mjnjZxa" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "mjnjZsji" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "plZ1" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "plZ1a" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "plZzji" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "sjtjX1" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "st21a" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "st2zji" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (<= (str.len var7G) 1))
(assert (<= (str.len var7H) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= (str.++ preG (str.++ stem7 sufG)) (str.++ unch17G (str.++ ch7G unch27G))))
(assert (= (str.++ preH (str.++ stem7 sufH)) (str.++ unch17H (str.++ ch7H unch27H))))
(assert (= "sOk" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "sOka" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "sOtsji" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (= (ite (= ch7G var7G) 0 1) sc7G))
(assert (= (ite (= ch7H var7H) 0 1) sc7H))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= sc7G 1))
(assert (<= sc7H 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (<= (str.len var8G) 1))
(assert (<= (str.len var8H) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= (str.++ preG (str.++ stem8 sufG)) (str.++ unch18G (str.++ ch8G unch28G))))
(assert (= (str.++ preH (str.++ stem8 sufH)) (str.++ unch18H (str.++ ch8H unch28H))))
(assert (= "b3k" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "bHkO" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "bHtsjX" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (= (ite (= ch8G var8G) 0 1) sc8G))
(assert (= (ite (= ch8H var8H) 0 1) sc8H))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= sc8G 1))
(assert (<= sc8H 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (<= (str.len var9G) 1))
(assert (<= (str.len var9H) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= (str.++ preG (str.++ stem9 sufG)) (str.++ unch19G (str.++ ch9G unch29G))))
(assert (= (str.++ preH (str.++ stem9 sufH)) (str.++ unch19H (str.++ ch9H unch29H))))
(assert (= "l3st" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "lHstO" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "lHsjkjX" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (= (ite (= ch9G var9G) 0 1) sc9G))
(assert (= (ite (= ch9H var9H) 0 1) sc9H))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= sc9G 1))
(assert (<= sc9H 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (<= (str.len var10G) 1))
(assert (<= (str.len var10H) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= (str.++ preG (str.++ stem10 sufG)) (str.++ unch110G (str.++ ch10G unch210G))))
(assert (= (str.++ preH (str.++ stem10 sufH)) (str.++ unch110H (str.++ ch10H unch210H))))
(assert (= "l3st" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "l3sta" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "l3sjkji" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (= (ite (= ch10G var10G) 0 1) sc10G))
(assert (= (ite (= ch10H var10H) 0 1) sc10H))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= sc10G 1))
(assert (<= sc10H 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (<= (str.len var11G) 1))
(assert (<= (str.len var11H) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= (str.++ preG (str.++ stem11 sufG)) (str.++ unch111G (str.++ ch11G unch211G))))
(assert (= (str.++ preH (str.++ stem11 sufH)) (str.++ unch111H (str.++ ch11H unch211H))))
(assert (= "pjljXt" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "pl2ta" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "pl2kji" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (= (ite (= ch11G var11G) 0 1) sc11G))
(assert (= (ite (= ch11H var11H) 0 1) sc11H))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= sc11G 1))
(assert (<= sc11H 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (<= (str.len var12G) 1))
(assert (<= (str.len var12H) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= (str.++ preG (str.++ stem12 sufG)) (str.++ unch112G (str.++ ch12G unch212G))))
(assert (= (str.++ preH (str.++ stem12 sufH)) (str.++ unch112H (str.++ ch12H unch212H))))
(assert (= "sjmjrjXd" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "smr2da" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "smr2gji" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (= (ite (= ch12G var12G) 0 1) sc12G))
(assert (= (ite (= ch12H var12H) 0 1) sc12H))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= sc12G 1))
(assert (<= sc12H 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (<= (str.len var13G) 1))
(assert (<= (str.len var13H) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= (str.++ preG (str.++ stem13 sufG)) (str.++ unch113G (str.++ ch13G unch213G))))
(assert (= (str.++ preH (str.++ stem13 sufH)) (str.++ unch113H (str.++ ch13H unch213H))))
(assert (= "fjXst" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "fostO" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "fosjkjX" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (= (ite (= ch13G var13G) 0 1) sc13G))
(assert (= (ite (= ch13H var13H) 0 1) sc13H))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= sc13G 1))
(assert (<= sc13H 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (<= (str.len var14G) 1))
(assert (<= (str.len var14H) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= (str.++ preG (str.++ stem14 sufG)) (str.++ unch114G (str.++ ch14G unch214G))))
(assert (= (str.++ preH (str.++ stem14 sufH)) (str.++ unch114H (str.++ ch14H unch214H))))
(assert (= "mjXst" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "m2sta" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "m2sjkji" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (= (ite (= ch14G var14G) 0 1) sc14G))
(assert (= (ite (= ch14H var14H) 0 1) sc14H))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= sc14G 1))
(assert (<= sc14H 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (<= (str.len var15G) 1))
(assert (<= (str.len var15H) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= (str.++ preG (str.++ stem15 sufG)) (str.++ unch115G (str.++ ch15G unch215G))))
(assert (= (str.++ preH (str.++ stem15 sufH)) (str.++ unch115H (str.++ ch15H unch215H))))
(assert (= "ljXd" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "l4du" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "lHdZ" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (= (ite (= ch15G var15G) 0 1) sc15G))
(assert (= (ite (= ch15H var15H) 0 1) sc15H))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= sc15G 1))
(assert (<= sc15H 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (<= (str.len var16G) 1))
(assert (<= (str.len var16H) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= (str.++ preG (str.++ stem16 sufG)) (str.++ unch116G (str.++ ch16G unch216G))))
(assert (= (str.++ preH (str.++ stem16 sufH)) (str.++ unch116H (str.++ ch16H unch216H))))
(assert (= "djrjXt" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "dr2ta" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "dr2kji" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (= (ite (= ch16G var16G) 0 1) sc16G))
(assert (= (ite (= ch16H var16H) 0 1) sc16H))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= sc16G 1))
(assert (<= sc16H 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (<= (str.len var17G) 1))
(assert (<= (str.len var17H) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= (str.++ preG (str.++ stem17 sufG)) (str.++ unch117G (str.++ ch17G unch217G))))
(assert (= (str.++ preH (str.++ stem17 sufH)) (str.++ unch117H (str.++ ch17H unch217H))))
(assert (= "mjXd" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "m4du" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "mHdZ" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (= (ite (= ch17G var17G) 0 1) sc17G))
(assert (= (ite (= ch17H var17H) 0 1) sc17H))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= sc17G 1))
(assert (<= sc17H 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (<= (str.len var18G) 1))
(assert (<= (str.len var18H) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= (str.++ preG (str.++ stem18 sufG)) (str.++ unch118G (str.++ ch18G unch218G))))
(assert (= (str.++ preH (str.++ stem18 sufH)) (str.++ unch118H (str.++ ch18H unch218H))))
(assert (= "vjXl" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "volO" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "voljX" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (= (ite (= ch18G var18G) 0 1) sc18G))
(assert (= (ite (= ch18H var18H) 0 1) sc18H))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= sc18G 1))
(assert (<= sc18H 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (<= (str.len var19G) 1))
(assert (<= (str.len var19H) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= (str.++ preG (str.++ stem19 sufG)) (str.++ unch119G (str.++ ch19G unch219G))))
(assert (= (str.++ preH (str.++ stem19 sufH)) (str.++ unch119H (str.++ ch19H unch219H))))
(assert (= "vjXz" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "v2za" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "v2zji" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (= (ite (= ch19G var19G) 0 1) sc19G))
(assert (= (ite (= ch19H var19H) 0 1) sc19H))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= sc19G 1))
(assert (<= sc19H 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (<= (str.len var20G) 1))
(assert (<= (str.len var20H) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= (str.++ preG (str.++ stem20 sufG)) (str.++ unch120G (str.++ ch20G unch220G))))
(assert (= (str.++ preH (str.++ stem20 sufH)) (str.++ unch120H (str.++ ch20H unch220H))))
(assert (= "s3r" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "s3ra" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "s3rji" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (= (ite (= ch20G var20G) 0 1) sc20G))
(assert (= (ite (= ch20H var20H) 0 1) sc20H))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= sc20G 1))
(assert (<= sc20H 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (<= (str.len var21G) 1))
(assert (<= (str.len var21H) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= (str.++ preG (str.++ stem21 sufG)) (str.++ unch121G (str.++ ch21G unch221G))))
(assert (= (str.++ preH (str.++ stem21 sufH)) (str.++ unch121H (str.++ ch21H unch221H))))
(assert (= "sjnjXp" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "snopO" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "snopjX" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (= (ite (= ch21G var21G) 0 1) sc21G))
(assert (= (ite (= ch21H var21H) 0 1) sc21H))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= sc21G 1))
(assert (<= sc21H 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (<= (str.len var22G) 1))
(assert (<= (str.len var22H) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= (str.++ preG (str.++ stem22 sufG)) (str.++ unch122G (str.++ ch22G unch222G))))
(assert (= (str.++ preH (str.++ stem22 sufH)) (str.++ unch122H (str.++ ch22H unch222H))))
(assert (= "1r3b" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "1rHbO" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "1rHbjX" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (= (ite (= ch22G var22G) 0 1) sc22G))
(assert (= (ite (= ch22H var22H) 0 1) sc22H))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= sc22G 1))
(assert (<= sc22H 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (<= (str.len var23G) 1))
(assert (<= (str.len var23H) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= (str.++ preG (str.++ stem23 sufG)) (str.++ unch123G (str.++ ch23G unch223G))))
(assert (= (str.++ preH (str.++ stem23 sufH)) (str.++ unch123H (str.++ ch23H unch223H))))
(assert (= "l4bjid" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= "l4bHda" (str.++ unch123B (str.++ var23B unch223B))))
(assert (= "l4bHgji" (str.++ unch123C (str.++ var23C unch223C))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (= (ite (= ch23G var23G) 0 1) sc23G))
(assert (= (ite (= ch23H var23H) 0 1) sc23H))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= sc23G 1))
(assert (<= sc23H 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (<= (str.len var24G) 1))
(assert (<= (str.len var24H) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= (str.++ preG (str.++ stem24 sufG)) (str.++ unch124G (str.++ ch24G unch224G))))
(assert (= (str.++ preH (str.++ stem24 sufH)) (str.++ unch124H (str.++ ch24H unch224H))))
(assert (= "b4rji1" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= "b4rH1a" (str.++ unch124B (str.++ var24B unch224B))))
(assert (= "b4rHzji" (str.++ unch124C (str.++ var24C unch224C))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (= (ite (= ch24G var24G) 0 1) sc24G))
(assert (= (ite (= ch24H var24H) 0 1) sc24H))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= sc24G 1))
(assert (<= sc24H 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (<= (str.len var25G) 1))
(assert (<= (str.len var25H) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= (str.++ preG (str.++ stem25 sufG)) (str.++ unch125G (str.++ ch25G unch225G))))
(assert (= (str.++ preH (str.++ stem25 sufH)) (str.++ unch125H (str.++ ch25H unch225H))))
(assert (= "pHrjX1" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= "pHr21a" (str.++ unch125B (str.++ var25B unch225B))))
(assert (= "pHr2zji" (str.++ unch125C (str.++ var25C unch225C))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (= (ite (= ch25G var25G) 0 1) sc25G))
(assert (= (ite (= ch25H var25H) 0 1) sc25H))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= sc25G 1))
(assert (<= sc25H 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (<= (str.len var26G) 1))
(assert (<= (str.len var26H) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= (str.++ preG (str.++ stem26 sufG)) (str.++ unch126G (str.++ ch26G unch226G))))
(assert (= (str.++ preH (str.++ stem26 sufH)) (str.++ unch126H (str.++ ch26H unch226H))))
(assert (= "porjX1" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= "por21a" (str.++ unch126B (str.++ var26B unch226B))))
(assert (= "por2zji" (str.++ unch126C (str.++ var26C unch226C))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (= (ite (= ch26G var26G) 0 1) sc26G))
(assert (= (ite (= ch26H var26H) 0 1) sc26H))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= sc26G 1))
(assert (<= sc26H 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (<= (str.len var27G) 1))
(assert (<= (str.len var27H) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= (str.++ preG (str.++ stem27 sufG)) (str.++ unch127G (str.++ ch27G unch227G))))
(assert (= (str.++ preH (str.++ stem27 sufH)) (str.++ unch127H (str.++ ch27H unch227H))))
(assert (= "bolj3k" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= "boljHkO" (str.++ unch127B (str.++ var27B unch227B))))
(assert (= "boljHtsjX" (str.++ unch127C (str.++ var27C unch227C))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (= (ite (= ch27G var27G) 0 1) sc27G))
(assert (= (ite (= ch27H var27H) 0 1) sc27H))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= sc27G 1))
(assert (<= sc27H 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (<= (str.len var28G) 1))
(assert (<= (str.len var28H) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= (str.++ preG (str.++ stem28 sufG)) (str.++ unch128G (str.++ ch28G unch228G))))
(assert (= (str.++ preH (str.++ stem28 sufH)) (str.++ unch128H (str.++ ch28H unch228H))))
(assert (= "v2rji1" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= "v2ro1a" (str.++ unch128B (str.++ var28B unch228B))))
(assert (= "v2rozji" (str.++ unch128C (str.++ var28C unch228C))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (= (ite (= ch28G var28G) 0 1) sc28G))
(assert (= (ite (= ch28H var28H) 0 1) sc28H))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= sc28G 1))
(assert (<= sc28H 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (<= (str.len var29G) 1))
(assert (<= (str.len var29H) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= (str.++ preG (str.++ stem29 sufG)) (str.++ unch129G (str.++ ch29G unch229G))))
(assert (= (str.++ preH (str.++ stem29 sufH)) (str.++ unch129H (str.++ ch29H unch229H))))
(assert (= "k2nHk" (str.++ unch129A (str.++ var29A unch229A))))
(assert (= "k2nHka" (str.++ unch129B (str.++ var29B unch229B))))
(assert (= "k2nHtsji" (str.++ unch129C (str.++ var29C unch229C))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (= (ite (= ch29G var29G) 0 1) sc29G))
(assert (= (ite (= ch29H var29H) 0 1) sc29H))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= sc29G 1))
(assert (<= sc29H 1))
(assert (<= (str.len var30A) 1))
(assert (<= (str.len var30B) 1))
(assert (<= (str.len var30C) 1))
(assert (<= (str.len var30D) 1))
(assert (<= (str.len var30E) 1))
(assert (<= (str.len var30F) 1))
(assert (<= (str.len var30G) 1))
(assert (<= (str.len var30H) 1))
(assert (= (str.++ preA (str.++ stem30 sufA)) (str.++ unch130A (str.++ ch30A unch230A))))
(assert (= (str.++ preB (str.++ stem30 sufB)) (str.++ unch130B (str.++ ch30B unch230B))))
(assert (= (str.++ preC (str.++ stem30 sufC)) (str.++ unch130C (str.++ ch30C unch230C))))
(assert (= (str.++ preD (str.++ stem30 sufD)) (str.++ unch130D (str.++ ch30D unch230D))))
(assert (= (str.++ preE (str.++ stem30 sufE)) (str.++ unch130E (str.++ ch30E unch230E))))
(assert (= (str.++ preF (str.++ stem30 sufF)) (str.++ unch130F (str.++ ch30F unch230F))))
(assert (= (str.++ preG (str.++ stem30 sufG)) (str.++ unch130G (str.++ ch30G unch230G))))
(assert (= (str.++ preH (str.++ stem30 sufH)) (str.++ unch130H (str.++ ch30H unch230H))))
(assert (= "p2tjik" (str.++ unch130A (str.++ var30A unch230A))))
(assert (= "pot2ka" (str.++ unch130B (str.++ var30B unch230B))))
(assert (= "pot2tsji" (str.++ unch130C (str.++ var30C unch230C))))
(assert (= (str.len stem30) l30))
(assert (= (ite (= ch30A var30A) 0 1) sc30A))
(assert (= (ite (= ch30B var30B) 0 1) sc30B))
(assert (= (ite (= ch30C var30C) 0 1) sc30C))
(assert (= (ite (= ch30D var30D) 0 1) sc30D))
(assert (= (ite (= ch30E var30E) 0 1) sc30E))
(assert (= (ite (= ch30F var30F) 0 1) sc30F))
(assert (= (ite (= ch30G var30G) 0 1) sc30G))
(assert (= (ite (= ch30H var30H) 0 1) sc30H))
(assert (<= sc30A 1))
(assert (<= sc30B 1))
(assert (<= sc30C 1))
(assert (<= sc30D 1))
(assert (<= sc30E 1))
(assert (<= sc30F 1))
(assert (<= sc30G 1))
(assert (<= sc30H 1))
(assert (<= (str.len var31A) 1))
(assert (<= (str.len var31B) 1))
(assert (<= (str.len var31C) 1))
(assert (<= (str.len var31D) 1))
(assert (<= (str.len var31E) 1))
(assert (<= (str.len var31F) 1))
(assert (<= (str.len var31G) 1))
(assert (<= (str.len var31H) 1))
(assert (= (str.++ preA (str.++ stem31 sufA)) (str.++ unch131A (str.++ ch31A unch231A))))
(assert (= (str.++ preB (str.++ stem31 sufB)) (str.++ unch131B (str.++ ch31B unch231B))))
(assert (= (str.++ preC (str.++ stem31 sufC)) (str.++ unch131C (str.++ ch31C unch231C))))
(assert (= (str.++ preD (str.++ stem31 sufD)) (str.++ unch131D (str.++ ch31D unch231D))))
(assert (= (str.++ preE (str.++ stem31 sufE)) (str.++ unch131E (str.++ ch31E unch231E))))
(assert (= (str.++ preF (str.++ stem31 sufF)) (str.++ unch131F (str.++ ch31F unch231F))))
(assert (= (str.++ preG (str.++ stem31 sufG)) (str.++ unch131G (str.++ ch31G unch231G))))
(assert (= (str.++ preH (str.++ stem31 sufH)) (str.++ unch131H (str.++ ch31H unch231H))))
(assert (= "tjXk" (str.++ unch131A (str.++ var31A unch231A))))
(assert (= "t2ka" (str.++ unch131B (str.++ var31B unch231B))))
(assert (= "t2tsji" (str.++ unch131C (str.++ var31C unch231C))))
(assert (= (str.len stem31) l31))
(assert (= (ite (= ch31A var31A) 0 1) sc31A))
(assert (= (ite (= ch31B var31B) 0 1) sc31B))
(assert (= (ite (= ch31C var31C) 0 1) sc31C))
(assert (= (ite (= ch31D var31D) 0 1) sc31D))
(assert (= (ite (= ch31E var31E) 0 1) sc31E))
(assert (= (ite (= ch31F var31F) 0 1) sc31F))
(assert (= (ite (= ch31G var31G) 0 1) sc31G))
(assert (= (ite (= ch31H var31H) 0 1) sc31H))
(assert (<= sc31A 1))
(assert (<= sc31B 1))
(assert (<= sc31C 1))
(assert (<= sc31D 1))
(assert (<= sc31E 1))
(assert (<= sc31F 1))
(assert (<= sc31G 1))
(assert (<= sc31H 1))
(assert (<= (str.len var32A) 1))
(assert (<= (str.len var32B) 1))
(assert (<= (str.len var32C) 1))
(assert (<= (str.len var32D) 1))
(assert (<= (str.len var32E) 1))
(assert (<= (str.len var32F) 1))
(assert (<= (str.len var32G) 1))
(assert (<= (str.len var32H) 1))
(assert (= (str.++ preA (str.++ stem32 sufA)) (str.++ unch132A (str.++ ch32A unch232A))))
(assert (= (str.++ preB (str.++ stem32 sufB)) (str.++ unch132B (str.++ ch32B unch232B))))
(assert (= (str.++ preC (str.++ stem32 sufC)) (str.++ unch132C (str.++ ch32C unch232C))))
(assert (= (str.++ preD (str.++ stem32 sufD)) (str.++ unch132D (str.++ ch32D unch232D))))
(assert (= (str.++ preE (str.++ stem32 sufE)) (str.++ unch132E (str.++ ch32E unch232E))))
(assert (= (str.++ preF (str.++ stem32 sufF)) (str.++ unch132F (str.++ ch32F unch232F))))
(assert (= (str.++ preG (str.++ stem32 sufG)) (str.++ unch132G (str.++ ch32G unch232G))))
(assert (= (str.++ preH (str.++ stem32 sufH)) (str.++ unch132H (str.++ ch32H unch232H))))
(assert (= "kjXl" (str.++ unch132A (str.++ var32A unch232A))))
(assert (= "kolO" (str.++ unch132B (str.++ var32B unch232B))))
(assert (= "koljX" (str.++ unch132C (str.++ var32C unch232C))))
(assert (= (str.len stem32) l32))
(assert (= (ite (= ch32A var32A) 0 1) sc32A))
(assert (= (ite (= ch32B var32B) 0 1) sc32B))
(assert (= (ite (= ch32C var32C) 0 1) sc32C))
(assert (= (ite (= ch32D var32D) 0 1) sc32D))
(assert (= (ite (= ch32E var32E) 0 1) sc32E))
(assert (= (ite (= ch32F var32F) 0 1) sc32F))
(assert (= (ite (= ch32G var32G) 0 1) sc32G))
(assert (= (ite (= ch32H var32H) 0 1) sc32H))
(assert (<= sc32A 1))
(assert (<= sc32B 1))
(assert (<= sc32C 1))
(assert (<= sc32D 1))
(assert (<= sc32E 1))
(assert (<= sc32F 1))
(assert (<= sc32G 1))
(assert (<= sc32H 1))
(assert (<= (str.len var33A) 1))
(assert (<= (str.len var33B) 1))
(assert (<= (str.len var33C) 1))
(assert (<= (str.len var33D) 1))
(assert (<= (str.len var33E) 1))
(assert (<= (str.len var33F) 1))
(assert (<= (str.len var33G) 1))
(assert (<= (str.len var33H) 1))
(assert (= (str.++ preA (str.++ stem33 sufA)) (str.++ unch133A (str.++ ch33A unch233A))))
(assert (= (str.++ preB (str.++ stem33 sufB)) (str.++ unch133B (str.++ ch33B unch233B))))
(assert (= (str.++ preC (str.++ stem33 sufC)) (str.++ unch133C (str.++ ch33C unch233C))))
(assert (= (str.++ preD (str.++ stem33 sufD)) (str.++ unch133D (str.++ ch33D unch233D))))
(assert (= (str.++ preE (str.++ stem33 sufE)) (str.++ unch133E (str.++ ch33E unch233E))))
(assert (= (str.++ preF (str.++ stem33 sufF)) (str.++ unch133F (str.++ ch33F unch233F))))
(assert (= (str.++ preG (str.++ stem33 sufG)) (str.++ unch133G (str.++ ch33G unch233G))))
(assert (= (str.++ preH (str.++ stem33 sufH)) (str.++ unch133H (str.++ ch33H unch233H))))
(assert (= "kovOlj" (str.++ unch133D (str.++ var33D unch233D))))
(assert (= "kovalj3" (str.++ unch133E (str.++ var33E unch233E))))
(assert (= "koval3" (str.++ unch133F (str.++ var33F unch233F))))
(assert (= (str.len stem33) l33))
(assert (= (ite (= ch33A var33A) 0 1) sc33A))
(assert (= (ite (= ch33B var33B) 0 1) sc33B))
(assert (= (ite (= ch33C var33C) 0 1) sc33C))
(assert (= (ite (= ch33D var33D) 0 1) sc33D))
(assert (= (ite (= ch33E var33E) 0 1) sc33E))
(assert (= (ite (= ch33F var33F) 0 1) sc33F))
(assert (= (ite (= ch33G var33G) 0 1) sc33G))
(assert (= (ite (= ch33H var33H) 0 1) sc33H))
(assert (<= sc33A 1))
(assert (<= sc33B 1))
(assert (<= sc33C 1))
(assert (<= sc33D 1))
(assert (<= sc33E 1))
(assert (<= sc33F 1))
(assert (<= sc33G 1))
(assert (<= sc33H 1))
(assert (<= (str.len var34A) 1))
(assert (<= (str.len var34B) 1))
(assert (<= (str.len var34C) 1))
(assert (<= (str.len var34D) 1))
(assert (<= (str.len var34E) 1))
(assert (<= (str.len var34F) 1))
(assert (<= (str.len var34G) 1))
(assert (<= (str.len var34H) 1))
(assert (= (str.++ preA (str.++ stem34 sufA)) (str.++ unch134A (str.++ ch34A unch234A))))
(assert (= (str.++ preB (str.++ stem34 sufB)) (str.++ unch134B (str.++ ch34B unch234B))))
(assert (= (str.++ preC (str.++ stem34 sufC)) (str.++ unch134C (str.++ ch34C unch234C))))
(assert (= (str.++ preD (str.++ stem34 sufD)) (str.++ unch134D (str.++ ch34D unch234D))))
(assert (= (str.++ preE (str.++ stem34 sufE)) (str.++ unch134E (str.++ ch34E unch234E))))
(assert (= (str.++ preF (str.++ stem34 sufF)) (str.++ unch134F (str.++ ch34F unch234F))))
(assert (= (str.++ preG (str.++ stem34 sufG)) (str.++ unch134G (str.++ ch34G unch234G))))
(assert (= (str.++ preH (str.++ stem34 sufH)) (str.++ unch134H (str.++ ch34H unch234H))))
(assert (= "DmjXlj" (str.++ unch134D (str.++ var34D unch234D))))
(assert (= "Dmjilj3" (str.++ unch134E (str.++ var34E unch234E))))
(assert (= "Dmjil3" (str.++ unch134F (str.++ var34F unch234F))))
(assert (= (str.len stem34) l34))
(assert (= (ite (= ch34A var34A) 0 1) sc34A))
(assert (= (ite (= ch34B var34B) 0 1) sc34B))
(assert (= (ite (= ch34C var34C) 0 1) sc34C))
(assert (= (ite (= ch34D var34D) 0 1) sc34D))
(assert (= (ite (= ch34E var34E) 0 1) sc34E))
(assert (= (ite (= ch34F var34F) 0 1) sc34F))
(assert (= (ite (= ch34G var34G) 0 1) sc34G))
(assert (= (ite (= ch34H var34H) 0 1) sc34H))
(assert (<= sc34A 1))
(assert (<= sc34B 1))
(assert (<= sc34C 1))
(assert (<= sc34D 1))
(assert (<= sc34E 1))
(assert (<= sc34F 1))
(assert (<= sc34G 1))
(assert (<= sc34H 1))
(assert (<= (str.len var35A) 1))
(assert (<= (str.len var35B) 1))
(assert (<= (str.len var35C) 1))
(assert (<= (str.len var35D) 1))
(assert (<= (str.len var35E) 1))
(assert (<= (str.len var35F) 1))
(assert (<= (str.len var35G) 1))
(assert (<= (str.len var35H) 1))
(assert (= (str.++ preA (str.++ stem35 sufA)) (str.++ unch135A (str.++ ch35A unch235A))))
(assert (= (str.++ preB (str.++ stem35 sufB)) (str.++ unch135B (str.++ ch35B unch235B))))
(assert (= (str.++ preC (str.++ stem35 sufC)) (str.++ unch135C (str.++ ch35C unch235C))))
(assert (= (str.++ preD (str.++ stem35 sufD)) (str.++ unch135D (str.++ ch35D unch235D))))
(assert (= (str.++ preE (str.++ stem35 sufE)) (str.++ unch135E (str.++ ch35E unch235E))))
(assert (= (str.++ preF (str.++ stem35 sufF)) (str.++ unch135F (str.++ ch35F unch235F))))
(assert (= (str.++ preG (str.++ stem35 sufG)) (str.++ unch135G (str.++ ch35G unch235G))))
(assert (= (str.++ preH (str.++ stem35 sufH)) (str.++ unch135H (str.++ ch35H unch235H))))
(assert (= "kjrjXlj" (str.++ unch135D (str.++ var35D unch235D))))
(assert (= "kjrjilj3" (str.++ unch135E (str.++ var35E unch235E))))
(assert (= "kjrjil3" (str.++ unch135F (str.++ var35F unch235F))))
(assert (= (str.len stem35) l35))
(assert (= (ite (= ch35A var35A) 0 1) sc35A))
(assert (= (ite (= ch35B var35B) 0 1) sc35B))
(assert (= (ite (= ch35C var35C) 0 1) sc35C))
(assert (= (ite (= ch35D var35D) 0 1) sc35D))
(assert (= (ite (= ch35E var35E) 0 1) sc35E))
(assert (= (ite (= ch35F var35F) 0 1) sc35F))
(assert (= (ite (= ch35G var35G) 0 1) sc35G))
(assert (= (ite (= ch35H var35H) 0 1) sc35H))
(assert (<= sc35A 1))
(assert (<= sc35B 1))
(assert (<= sc35C 1))
(assert (<= sc35D 1))
(assert (<= sc35E 1))
(assert (<= sc35F 1))
(assert (<= sc35G 1))
(assert (<= sc35H 1))
(assert (<= (str.len var36A) 1))
(assert (<= (str.len var36B) 1))
(assert (<= (str.len var36C) 1))
(assert (<= (str.len var36D) 1))
(assert (<= (str.len var36E) 1))
(assert (<= (str.len var36F) 1))
(assert (<= (str.len var36G) 1))
(assert (<= (str.len var36H) 1))
(assert (= (str.++ preA (str.++ stem36 sufA)) (str.++ unch136A (str.++ ch36A unch236A))))
(assert (= (str.++ preB (str.++ stem36 sufB)) (str.++ unch136B (str.++ ch36B unch236B))))
(assert (= (str.++ preC (str.++ stem36 sufC)) (str.++ unch136C (str.++ ch36C unch236C))))
(assert (= (str.++ preD (str.++ stem36 sufD)) (str.++ unch136D (str.++ ch36D unch236D))))
(assert (= (str.++ preE (str.++ stem36 sufE)) (str.++ unch136E (str.++ ch36E unch236E))))
(assert (= (str.++ preF (str.++ stem36 sufF)) (str.++ unch136F (str.++ ch36F unch236F))))
(assert (= (str.++ preG (str.++ stem36 sufG)) (str.++ unch136G (str.++ ch36G unch236G))))
(assert (= (str.++ preH (str.++ stem36 sufH)) (str.++ unch136H (str.++ ch36H unch236H))))
(assert (= "uE3tHlj" (str.++ unch136D (str.++ var36D unch236D))))
(assert (= "uE3tHljH" (str.++ unch136E (str.++ var36E unch236E))))
(assert (= "uE3tHlH" (str.++ unch136F (str.++ var36F unch236F))))
(assert (= (str.len stem36) l36))
(assert (= (ite (= ch36A var36A) 0 1) sc36A))
(assert (= (ite (= ch36B var36B) 0 1) sc36B))
(assert (= (ite (= ch36C var36C) 0 1) sc36C))
(assert (= (ite (= ch36D var36D) 0 1) sc36D))
(assert (= (ite (= ch36E var36E) 0 1) sc36E))
(assert (= (ite (= ch36F var36F) 0 1) sc36F))
(assert (= (ite (= ch36G var36G) 0 1) sc36G))
(assert (= (ite (= ch36H var36H) 0 1) sc36H))
(assert (<= sc36A 1))
(assert (<= sc36B 1))
(assert (<= sc36C 1))
(assert (<= sc36D 1))
(assert (<= sc36E 1))
(assert (<= sc36F 1))
(assert (<= sc36G 1))
(assert (<= sc36H 1))
(assert (<= (str.len var37A) 1))
(assert (<= (str.len var37B) 1))
(assert (<= (str.len var37C) 1))
(assert (<= (str.len var37D) 1))
(assert (<= (str.len var37E) 1))
(assert (<= (str.len var37F) 1))
(assert (<= (str.len var37G) 1))
(assert (<= (str.len var37H) 1))
(assert (= (str.++ preA (str.++ stem37 sufA)) (str.++ unch137A (str.++ ch37A unch237A))))
(assert (= (str.++ preB (str.++ stem37 sufB)) (str.++ unch137B (str.++ ch37B unch237B))))
(assert (= (str.++ preC (str.++ stem37 sufC)) (str.++ unch137C (str.++ ch37C unch237C))))
(assert (= (str.++ preD (str.++ stem37 sufD)) (str.++ unch137D (str.++ ch37D unch237D))))
(assert (= (str.++ preE (str.++ stem37 sufE)) (str.++ unch137E (str.++ ch37E unch237E))))
(assert (= (str.++ preF (str.++ stem37 sufF)) (str.++ unch137F (str.++ ch37F unch237F))))
(assert (= (str.++ preG (str.++ stem37 sufG)) (str.++ unch137G (str.++ ch37G unch237G))))
(assert (= (str.++ preH (str.++ stem37 sufH)) (str.++ unch137H (str.++ ch37H unch237H))))
(assert (= "gr4bjinj" (str.++ unch137D (str.++ var37D unch237D))))
(assert (= "gr4bHnjH" (str.++ unch137E (str.++ var37E unch237E))))
(assert (= "gr4bHnH" (str.++ unch137F (str.++ var37F unch237F))))
(assert (= (str.len stem37) l37))
(assert (= (ite (= ch37A var37A) 0 1) sc37A))
(assert (= (ite (= ch37B var37B) 0 1) sc37B))
(assert (= (ite (= ch37C var37C) 0 1) sc37C))
(assert (= (ite (= ch37D var37D) 0 1) sc37D))
(assert (= (ite (= ch37E var37E) 0 1) sc37E))
(assert (= (ite (= ch37F var37F) 0 1) sc37F))
(assert (= (ite (= ch37G var37G) 0 1) sc37G))
(assert (= (ite (= ch37H var37H) 0 1) sc37H))
(assert (<= sc37A 1))
(assert (<= sc37B 1))
(assert (<= sc37C 1))
(assert (<= sc37D 1))
(assert (<= sc37E 1))
(assert (<= sc37F 1))
(assert (<= sc37G 1))
(assert (<= sc37H 1))
(assert (<= (str.len var38A) 1))
(assert (<= (str.len var38B) 1))
(assert (<= (str.len var38C) 1))
(assert (<= (str.len var38D) 1))
(assert (<= (str.len var38E) 1))
(assert (<= (str.len var38F) 1))
(assert (<= (str.len var38G) 1))
(assert (<= (str.len var38H) 1))
(assert (= (str.++ preA (str.++ stem38 sufA)) (str.++ unch138A (str.++ ch38A unch238A))))
(assert (= (str.++ preB (str.++ stem38 sufB)) (str.++ unch138B (str.++ ch38B unch238B))))
(assert (= (str.++ preC (str.++ stem38 sufC)) (str.++ unch138C (str.++ ch38C unch238C))))
(assert (= (str.++ preD (str.++ stem38 sufD)) (str.++ unch138D (str.++ ch38D unch238D))))
(assert (= (str.++ preE (str.++ stem38 sufE)) (str.++ unch138E (str.++ ch38E unch238E))))
(assert (= (str.++ preF (str.++ stem38 sufF)) (str.++ unch138F (str.++ ch38F unch238F))))
(assert (= (str.++ preG (str.++ stem38 sufG)) (str.++ unch138G (str.++ ch38G unch238G))))
(assert (= (str.++ preH (str.++ stem38 sufH)) (str.++ unch138H (str.++ ch38H unch238H))))
(assert (= "2lHnj" (str.++ unch138D (str.++ var38D unch238D))))
(assert (= "2lHnjH" (str.++ unch138E (str.++ var38E unch238E))))
(assert (= "2lHnH" (str.++ unch138F (str.++ var38F unch238F))))
(assert (= (str.len stem38) l38))
(assert (= (ite (= ch38A var38A) 0 1) sc38A))
(assert (= (ite (= ch38B var38B) 0 1) sc38B))
(assert (= (ite (= ch38C var38C) 0 1) sc38C))
(assert (= (ite (= ch38D var38D) 0 1) sc38D))
(assert (= (ite (= ch38E var38E) 0 1) sc38E))
(assert (= (ite (= ch38F var38F) 0 1) sc38F))
(assert (= (ite (= ch38G var38G) 0 1) sc38G))
(assert (= (ite (= ch38H var38H) 0 1) sc38H))
(assert (<= sc38A 1))
(assert (<= sc38B 1))
(assert (<= sc38C 1))
(assert (<= sc38D 1))
(assert (<= sc38E 1))
(assert (<= sc38F 1))
(assert (<= sc38G 1))
(assert (<= sc38H 1))
(assert (<= (str.len var39A) 1))
(assert (<= (str.len var39B) 1))
(assert (<= (str.len var39C) 1))
(assert (<= (str.len var39D) 1))
(assert (<= (str.len var39E) 1))
(assert (<= (str.len var39F) 1))
(assert (<= (str.len var39G) 1))
(assert (<= (str.len var39H) 1))
(assert (= (str.++ preA (str.++ stem39 sufA)) (str.++ unch139A (str.++ ch39A unch239A))))
(assert (= (str.++ preB (str.++ stem39 sufB)) (str.++ unch139B (str.++ ch39B unch239B))))
(assert (= (str.++ preC (str.++ stem39 sufC)) (str.++ unch139C (str.++ ch39C unch239C))))
(assert (= (str.++ preD (str.++ stem39 sufD)) (str.++ unch139D (str.++ ch39D unch239D))))
(assert (= (str.++ preE (str.++ stem39 sufE)) (str.++ unch139E (str.++ ch39E unch239E))))
(assert (= (str.++ preF (str.++ stem39 sufF)) (str.++ unch139F (str.++ ch39F unch239F))))
(assert (= (str.++ preG (str.++ stem39 sufG)) (str.++ unch139G (str.++ ch39G unch239G))))
(assert (= (str.++ preH (str.++ stem39 sufH)) (str.++ unch139H (str.++ ch39H unch239H))))
(assert (= "jaEjmjXnj" (str.++ unch139D (str.++ var39D unch239D))))
(assert (= "jaEm4njH" (str.++ unch139E (str.++ var39E unch239E))))
(assert (= "jaEm4nH" (str.++ unch139F (str.++ var39F unch239F))))
(assert (= (str.len stem39) l39))
(assert (= (ite (= ch39A var39A) 0 1) sc39A))
(assert (= (ite (= ch39B var39B) 0 1) sc39B))
(assert (= (ite (= ch39C var39C) 0 1) sc39C))
(assert (= (ite (= ch39D var39D) 0 1) sc39D))
(assert (= (ite (= ch39E var39E) 0 1) sc39E))
(assert (= (ite (= ch39F var39F) 0 1) sc39F))
(assert (= (ite (= ch39G var39G) 0 1) sc39G))
(assert (= (ite (= ch39H var39H) 0 1) sc39H))
(assert (<= sc39A 1))
(assert (<= sc39B 1))
(assert (<= sc39C 1))
(assert (<= sc39D 1))
(assert (<= sc39E 1))
(assert (<= sc39F 1))
(assert (<= sc39G 1))
(assert (<= sc39H 1))
(assert (<= (str.len var40A) 1))
(assert (<= (str.len var40B) 1))
(assert (<= (str.len var40C) 1))
(assert (<= (str.len var40D) 1))
(assert (<= (str.len var40E) 1))
(assert (<= (str.len var40F) 1))
(assert (<= (str.len var40G) 1))
(assert (<= (str.len var40H) 1))
(assert (= (str.++ preA (str.++ stem40 sufA)) (str.++ unch140A (str.++ ch40A unch240A))))
(assert (= (str.++ preB (str.++ stem40 sufB)) (str.++ unch140B (str.++ ch40B unch240B))))
(assert (= (str.++ preC (str.++ stem40 sufC)) (str.++ unch140C (str.++ ch40C unch240C))))
(assert (= (str.++ preD (str.++ stem40 sufD)) (str.++ unch140D (str.++ ch40D unch240D))))
(assert (= (str.++ preE (str.++ stem40 sufE)) (str.++ unch140E (str.++ ch40E unch240E))))
(assert (= (str.++ preF (str.++ stem40 sufF)) (str.++ unch140F (str.++ ch40F unch240F))))
(assert (= (str.++ preG (str.++ stem40 sufG)) (str.++ unch140G (str.++ ch40G unch240G))))
(assert (= (str.++ preH (str.++ stem40 sufH)) (str.++ unch140H (str.++ ch40H unch240H))))
(assert (= "jOsjinj" (str.++ unch140D (str.++ var40D unch240D))))
(assert (= "jOsHnjH" (str.++ unch140E (str.++ var40E unch240E))))
(assert (= "jOsHnH" (str.++ unch140F (str.++ var40F unch240F))))
(assert (= (str.len stem40) l40))
(assert (= (ite (= ch40A var40A) 0 1) sc40A))
(assert (= (ite (= ch40B var40B) 0 1) sc40B))
(assert (= (ite (= ch40C var40C) 0 1) sc40C))
(assert (= (ite (= ch40D var40D) 0 1) sc40D))
(assert (= (ite (= ch40E var40E) 0 1) sc40E))
(assert (= (ite (= ch40F var40F) 0 1) sc40F))
(assert (= (ite (= ch40G var40G) 0 1) sc40G))
(assert (= (ite (= ch40H var40H) 0 1) sc40H))
(assert (<= sc40A 1))
(assert (<= sc40B 1))
(assert (<= sc40C 1))
(assert (<= sc40D 1))
(assert (<= sc40E 1))
(assert (<= sc40F 1))
(assert (<= sc40G 1))
(assert (<= sc40H 1))
(assert (<= (str.len var41A) 1))
(assert (<= (str.len var41B) 1))
(assert (<= (str.len var41C) 1))
(assert (<= (str.len var41D) 1))
(assert (<= (str.len var41E) 1))
(assert (<= (str.len var41F) 1))
(assert (<= (str.len var41G) 1))
(assert (<= (str.len var41H) 1))
(assert (= (str.++ preA (str.++ stem41 sufA)) (str.++ unch141A (str.++ ch41A unch241A))))
(assert (= (str.++ preB (str.++ stem41 sufB)) (str.++ unch141B (str.++ ch41B unch241B))))
(assert (= (str.++ preC (str.++ stem41 sufC)) (str.++ unch141C (str.++ ch41C unch241C))))
(assert (= (str.++ preD (str.++ stem41 sufD)) (str.++ unch141D (str.++ ch41D unch241D))))
(assert (= (str.++ preE (str.++ stem41 sufE)) (str.++ unch141E (str.++ ch41E unch241E))))
(assert (= (str.++ preF (str.++ stem41 sufF)) (str.++ unch141F (str.++ ch41F unch241F))))
(assert (= (str.++ preG (str.++ stem41 sufG)) (str.++ unch141G (str.++ ch41G unch241G))))
(assert (= (str.++ preH (str.++ stem41 sufH)) (str.++ unch141H (str.++ ch41H unch241H))))
(assert (= "zj3kj" (str.++ unch141D (str.++ var41D unch241D))))
(assert (= "zj3kjH" (str.++ unch141E (str.++ var41E unch241E))))
(assert (= "zj3tH" (str.++ unch141F (str.++ var41F unch241F))))
(assert (= (str.len stem41) l41))
(assert (= (ite (= ch41A var41A) 0 1) sc41A))
(assert (= (ite (= ch41B var41B) 0 1) sc41B))
(assert (= (ite (= ch41C var41C) 0 1) sc41C))
(assert (= (ite (= ch41D var41D) 0 1) sc41D))
(assert (= (ite (= ch41E var41E) 0 1) sc41E))
(assert (= (ite (= ch41F var41F) 0 1) sc41F))
(assert (= (ite (= ch41G var41G) 0 1) sc41G))
(assert (= (ite (= ch41H var41H) 0 1) sc41H))
(assert (<= sc41A 1))
(assert (<= sc41B 1))
(assert (<= sc41C 1))
(assert (<= sc41D 1))
(assert (<= sc41E 1))
(assert (<= sc41F 1))
(assert (<= sc41G 1))
(assert (<= sc41H 1))
(assert (<= (str.len var42A) 1))
(assert (<= (str.len var42B) 1))
(assert (<= (str.len var42C) 1))
(assert (<= (str.len var42D) 1))
(assert (<= (str.len var42E) 1))
(assert (<= (str.len var42F) 1))
(assert (<= (str.len var42G) 1))
(assert (<= (str.len var42H) 1))
(assert (= (str.++ preA (str.++ stem42 sufA)) (str.++ unch142A (str.++ ch42A unch242A))))
(assert (= (str.++ preB (str.++ stem42 sufB)) (str.++ unch142B (str.++ ch42B unch242B))))
(assert (= (str.++ preC (str.++ stem42 sufC)) (str.++ unch142C (str.++ ch42C unch242C))))
(assert (= (str.++ preD (str.++ stem42 sufD)) (str.++ unch142D (str.++ ch42D unch242D))))
(assert (= (str.++ preE (str.++ stem42 sufE)) (str.++ unch142E (str.++ ch42E unch242E))))
(assert (= (str.++ preF (str.++ stem42 sufF)) (str.++ unch142F (str.++ ch42F unch242F))))
(assert (= (str.++ preG (str.++ stem42 sufG)) (str.++ unch142G (str.++ ch42G unch242G))))
(assert (= (str.++ preH (str.++ stem42 sufH)) (str.++ unch142H (str.++ ch42H unch242H))))
(assert (= "mOsjkj" (str.++ unch142G (str.++ var42G unch242G))))
(assert (= "mOstH" (str.++ unch142H (str.++ var42H unch242H))))
(assert (= (str.len stem42) l42))
(assert (= (ite (= ch42A var42A) 0 1) sc42A))
(assert (= (ite (= ch42B var42B) 0 1) sc42B))
(assert (= (ite (= ch42C var42C) 0 1) sc42C))
(assert (= (ite (= ch42D var42D) 0 1) sc42D))
(assert (= (ite (= ch42E var42E) 0 1) sc42E))
(assert (= (ite (= ch42F var42F) 0 1) sc42F))
(assert (= (ite (= ch42G var42G) 0 1) sc42G))
(assert (= (ite (= ch42H var42H) 0 1) sc42H))
(assert (<= sc42A 1))
(assert (<= sc42B 1))
(assert (<= sc42C 1))
(assert (<= sc42D 1))
(assert (<= sc42E 1))
(assert (<= sc42F 1))
(assert (<= sc42G 1))
(assert (<= sc42H 1))
(assert (<= (str.len var43A) 1))
(assert (<= (str.len var43B) 1))
(assert (<= (str.len var43C) 1))
(assert (<= (str.len var43D) 1))
(assert (<= (str.len var43E) 1))
(assert (<= (str.len var43F) 1))
(assert (<= (str.len var43G) 1))
(assert (<= (str.len var43H) 1))
(assert (= (str.++ preA (str.++ stem43 sufA)) (str.++ unch143A (str.++ ch43A unch243A))))
(assert (= (str.++ preB (str.++ stem43 sufB)) (str.++ unch143B (str.++ ch43B unch243B))))
(assert (= (str.++ preC (str.++ stem43 sufC)) (str.++ unch143C (str.++ ch43C unch243C))))
(assert (= (str.++ preD (str.++ stem43 sufD)) (str.++ unch143D (str.++ ch43D unch243D))))
(assert (= (str.++ preE (str.++ stem43 sufE)) (str.++ unch143E (str.++ ch43E unch243E))))
(assert (= (str.++ preF (str.++ stem43 sufF)) (str.++ unch143F (str.++ ch43F unch243F))))
(assert (= (str.++ preG (str.++ stem43 sufG)) (str.++ unch143G (str.++ ch43G unch243G))))
(assert (= (str.++ preH (str.++ stem43 sufH)) (str.++ unch143H (str.++ ch43H unch243H))))
(assert (= "sjmjXrjkj" (str.++ unch143G (str.++ var43G unch243G))))
(assert (= "sm4rtH" (str.++ unch143H (str.++ var43H unch243H))))
(assert (= (str.len stem43) l43))
(assert (= (ite (= ch43A var43A) 0 1) sc43A))
(assert (= (ite (= ch43B var43B) 0 1) sc43B))
(assert (= (ite (= ch43C var43C) 0 1) sc43C))
(assert (= (ite (= ch43D var43D) 0 1) sc43D))
(assert (= (ite (= ch43E var43E) 0 1) sc43E))
(assert (= (ite (= ch43F var43F) 0 1) sc43F))
(assert (= (ite (= ch43G var43G) 0 1) sc43G))
(assert (= (ite (= ch43H var43H) 0 1) sc43H))
(assert (<= sc43A 1))
(assert (<= sc43B 1))
(assert (<= sc43C 1))
(assert (<= sc43D 1))
(assert (<= sc43E 1))
(assert (<= sc43F 1))
(assert (<= sc43G 1))
(assert (<= sc43H 1))
(assert (<= (str.len var44A) 1))
(assert (<= (str.len var44B) 1))
(assert (<= (str.len var44C) 1))
(assert (<= (str.len var44D) 1))
(assert (<= (str.len var44E) 1))
(assert (<= (str.len var44F) 1))
(assert (<= (str.len var44G) 1))
(assert (<= (str.len var44H) 1))
(assert (= (str.++ preA (str.++ stem44 sufA)) (str.++ unch144A (str.++ ch44A unch244A))))
(assert (= (str.++ preB (str.++ stem44 sufB)) (str.++ unch144B (str.++ ch44B unch244B))))
(assert (= (str.++ preC (str.++ stem44 sufC)) (str.++ unch144C (str.++ ch44C unch244C))))
(assert (= (str.++ preD (str.++ stem44 sufD)) (str.++ unch144D (str.++ ch44D unch244D))))
(assert (= (str.++ preE (str.++ stem44 sufE)) (str.++ unch144E (str.++ ch44E unch244E))))
(assert (= (str.++ preF (str.++ stem44 sufF)) (str.++ unch144F (str.++ ch44F unch244F))))
(assert (= (str.++ preG (str.++ stem44 sufG)) (str.++ unch144G (str.++ ch44G unch244G))))
(assert (= (str.++ preH (str.++ stem44 sufH)) (str.++ unch144H (str.++ ch44H unch244H))))
(assert (= "vjXsjkj" (str.++ unch144G (str.++ var44G unch244G))))
(assert (= "vjXstH" (str.++ unch144H (str.++ var44H unch244H))))
(assert (= (str.len stem44) l44))
(assert (= (ite (= ch44A var44A) 0 1) sc44A))
(assert (= (ite (= ch44B var44B) 0 1) sc44B))
(assert (= (ite (= ch44C var44C) 0 1) sc44C))
(assert (= (ite (= ch44D var44D) 0 1) sc44D))
(assert (= (ite (= ch44E var44E) 0 1) sc44E))
(assert (= (ite (= ch44F var44F) 0 1) sc44F))
(assert (= (ite (= ch44G var44G) 0 1) sc44G))
(assert (= (ite (= ch44H var44H) 0 1) sc44H))
(assert (<= sc44A 1))
(assert (<= sc44B 1))
(assert (<= sc44C 1))
(assert (<= sc44D 1))
(assert (<= sc44E 1))
(assert (<= sc44F 1))
(assert (<= sc44G 1))
(assert (<= sc44H 1))
(assert (<= (str.len var45A) 1))
(assert (<= (str.len var45B) 1))
(assert (<= (str.len var45C) 1))
(assert (<= (str.len var45D) 1))
(assert (<= (str.len var45E) 1))
(assert (<= (str.len var45F) 1))
(assert (<= (str.len var45G) 1))
(assert (<= (str.len var45H) 1))
(assert (= (str.++ preA (str.++ stem45 sufA)) (str.++ unch145A (str.++ ch45A unch245A))))
(assert (= (str.++ preB (str.++ stem45 sufB)) (str.++ unch145B (str.++ ch45B unch245B))))
(assert (= (str.++ preC (str.++ stem45 sufC)) (str.++ unch145C (str.++ ch45C unch245C))))
(assert (= (str.++ preD (str.++ stem45 sufD)) (str.++ unch145D (str.++ ch45D unch245D))))
(assert (= (str.++ preE (str.++ stem45 sufE)) (str.++ unch145E (str.++ ch45E unch245E))))
(assert (= (str.++ preF (str.++ stem45 sufF)) (str.++ unch145F (str.++ ch45F unch245F))))
(assert (= (str.++ preG (str.++ stem45 sufG)) (str.++ unch145G (str.++ ch45G unch245G))))
(assert (= (str.++ preH (str.++ stem45 sufH)) (str.++ unch145H (str.++ ch45H unch245H))))
(assert (= "rOgjisjkj" (str.++ unch145G (str.++ var45G unch245G))))
(assert (= "rOdostH" (str.++ unch145H (str.++ var45H unch245H))))
(assert (= (str.len stem45) l45))
(assert (= (ite (= ch45A var45A) 0 1) sc45A))
(assert (= (ite (= ch45B var45B) 0 1) sc45B))
(assert (= (ite (= ch45C var45C) 0 1) sc45C))
(assert (= (ite (= ch45D var45D) 0 1) sc45D))
(assert (= (ite (= ch45E var45E) 0 1) sc45E))
(assert (= (ite (= ch45F var45F) 0 1) sc45F))
(assert (= (ite (= ch45G var45G) 0 1) sc45G))
(assert (= (ite (= ch45H var45H) 0 1) sc45H))
(assert (<= sc45A 1))
(assert (<= sc45B 1))
(assert (<= sc45C 1))
(assert (<= sc45D 1))
(assert (<= sc45E 1))
(assert (<= sc45F 1))
(assert (<= sc45G 1))
(assert (<= sc45H 1))
(assert (<= (str.len var46A) 1))
(assert (<= (str.len var46B) 1))
(assert (<= (str.len var46C) 1))
(assert (<= (str.len var46D) 1))
(assert (<= (str.len var46E) 1))
(assert (<= (str.len var46F) 1))
(assert (<= (str.len var46G) 1))
(assert (<= (str.len var46H) 1))
(assert (= (str.++ preA (str.++ stem46 sufA)) (str.++ unch146A (str.++ ch46A unch246A))))
(assert (= (str.++ preB (str.++ stem46 sufB)) (str.++ unch146B (str.++ ch46B unch246B))))
(assert (= (str.++ preC (str.++ stem46 sufC)) (str.++ unch146C (str.++ ch46C unch246C))))
(assert (= (str.++ preD (str.++ stem46 sufD)) (str.++ unch146D (str.++ ch46D unch246D))))
(assert (= (str.++ preE (str.++ stem46 sufE)) (str.++ unch146E (str.++ ch46E unch246E))))
(assert (= (str.++ preF (str.++ stem46 sufF)) (str.++ unch146F (str.++ ch46F unch246F))))
(assert (= (str.++ preG (str.++ stem46 sufG)) (str.++ unch146G (str.++ ch46G unch246G))))
(assert (= (str.++ preH (str.++ stem46 sufH)) (str.++ unch146H (str.++ ch46H unch246H))))
(assert (= "sjXlj" (str.++ unch146G (str.++ var46G unch246G))))
(assert (= "s2lH" (str.++ unch146H (str.++ var46H unch246H))))
(assert (= (str.len stem46) l46))
(assert (= (ite (= ch46A var46A) 0 1) sc46A))
(assert (= (ite (= ch46B var46B) 0 1) sc46B))
(assert (= (ite (= ch46C var46C) 0 1) sc46C))
(assert (= (ite (= ch46D var46D) 0 1) sc46D))
(assert (= (ite (= ch46E var46E) 0 1) sc46E))
(assert (= (ite (= ch46F var46F) 0 1) sc46F))
(assert (= (ite (= ch46G var46G) 0 1) sc46G))
(assert (= (ite (= ch46H var46H) 0 1) sc46H))
(assert (<= sc46A 1))
(assert (<= sc46B 1))
(assert (<= sc46C 1))
(assert (<= sc46D 1))
(assert (<= sc46E 1))
(assert (<= sc46F 1))
(assert (<= sc46G 1))
(assert (<= sc46H 1))
(assert (<= (str.len var47A) 1))
(assert (<= (str.len var47B) 1))
(assert (<= (str.len var47C) 1))
(assert (<= (str.len var47D) 1))
(assert (<= (str.len var47E) 1))
(assert (<= (str.len var47F) 1))
(assert (<= (str.len var47G) 1))
(assert (<= (str.len var47H) 1))
(assert (= (str.++ preA (str.++ stem47 sufA)) (str.++ unch147A (str.++ ch47A unch247A))))
(assert (= (str.++ preB (str.++ stem47 sufB)) (str.++ unch147B (str.++ ch47B unch247B))))
(assert (= (str.++ preC (str.++ stem47 sufC)) (str.++ unch147C (str.++ ch47C unch247C))))
(assert (= (str.++ preD (str.++ stem47 sufD)) (str.++ unch147D (str.++ ch47D unch247D))))
(assert (= (str.++ preE (str.++ stem47 sufE)) (str.++ unch147E (str.++ ch47E unch247E))))
(assert (= (str.++ preF (str.++ stem47 sufF)) (str.++ unch147F (str.++ ch47F unch247F))))
(assert (= (str.++ preG (str.++ stem47 sufG)) (str.++ unch147G (str.++ ch47G unch247G))))
(assert (= (str.++ preH (str.++ stem47 sufH)) (str.++ unch147H (str.++ ch47H unch247H))))
(assert (= "p2Bjisjkj" (str.++ unch147G (str.++ var47G unch247G))))
(assert (= "p2BHstH" (str.++ unch147H (str.++ var47H unch247H))))
(assert (= (str.len stem47) l47))
(assert (= (ite (= ch47A var47A) 0 1) sc47A))
(assert (= (ite (= ch47B var47B) 0 1) sc47B))
(assert (= (ite (= ch47C var47C) 0 1) sc47C))
(assert (= (ite (= ch47D var47D) 0 1) sc47D))
(assert (= (ite (= ch47E var47E) 0 1) sc47E))
(assert (= (ite (= ch47F var47F) 0 1) sc47F))
(assert (= (ite (= ch47G var47G) 0 1) sc47G))
(assert (= (ite (= ch47H var47H) 0 1) sc47H))
(assert (<= sc47A 1))
(assert (<= sc47B 1))
(assert (<= sc47C 1))
(assert (<= sc47D 1))
(assert (<= sc47E 1))
(assert (<= sc47F 1))
(assert (<= sc47G 1))
(assert (<= sc47H 1))
(assert (<= (str.len var48A) 1))
(assert (<= (str.len var48B) 1))
(assert (<= (str.len var48C) 1))
(assert (<= (str.len var48D) 1))
(assert (<= (str.len var48E) 1))
(assert (<= (str.len var48F) 1))
(assert (<= (str.len var48G) 1))
(assert (<= (str.len var48H) 1))
(assert (= (str.++ preA (str.++ stem48 sufA)) (str.++ unch148A (str.++ ch48A unch248A))))
(assert (= (str.++ preB (str.++ stem48 sufB)) (str.++ unch148B (str.++ ch48B unch248B))))
(assert (= (str.++ preC (str.++ stem48 sufC)) (str.++ unch148C (str.++ ch48C unch248C))))
(assert (= (str.++ preD (str.++ stem48 sufD)) (str.++ unch148D (str.++ ch48D unch248D))))
(assert (= (str.++ preE (str.++ stem48 sufE)) (str.++ unch148E (str.++ ch48E unch248E))))
(assert (= (str.++ preF (str.++ stem48 sufF)) (str.++ unch148F (str.++ ch48F unch248F))))
(assert (= (str.++ preG (str.++ stem48 sufG)) (str.++ unch148G (str.++ ch48G unch248G))))
(assert (= (str.++ preH (str.++ stem48 sufH)) (str.++ unch148H (str.++ ch48H unch248H))))
(assert (= "zOmjikj" (str.++ unch148G (str.++ var48G unch248G))))
(assert (= "zOmHtH" (str.++ unch148H (str.++ var48H unch248H))))
(assert (= (str.len stem48) l48))
(assert (= (ite (= ch48A var48A) 0 1) sc48A))
(assert (= (ite (= ch48B var48B) 0 1) sc48B))
(assert (= (ite (= ch48C var48C) 0 1) sc48C))
(assert (= (ite (= ch48D var48D) 0 1) sc48D))
(assert (= (ite (= ch48E var48E) 0 1) sc48E))
(assert (= (ite (= ch48F var48F) 0 1) sc48F))
(assert (= (ite (= ch48G var48G) 0 1) sc48G))
(assert (= (ite (= ch48H var48H) 0 1) sc48H))
(assert (<= sc48A 1))
(assert (<= sc48B 1))
(assert (<= sc48C 1))
(assert (<= sc48D 1))
(assert (<= sc48E 1))
(assert (<= sc48F 1))
(assert (<= sc48G 1))
(assert (<= sc48H 1))
(assert (<= (str.len var49A) 1))
(assert (<= (str.len var49B) 1))
(assert (<= (str.len var49C) 1))
(assert (<= (str.len var49D) 1))
(assert (<= (str.len var49E) 1))
(assert (<= (str.len var49F) 1))
(assert (<= (str.len var49G) 1))
(assert (<= (str.len var49H) 1))
(assert (= (str.++ preA (str.++ stem49 sufA)) (str.++ unch149A (str.++ ch49A unch249A))))
(assert (= (str.++ preB (str.++ stem49 sufB)) (str.++ unch149B (str.++ ch49B unch249B))))
(assert (= (str.++ preC (str.++ stem49 sufC)) (str.++ unch149C (str.++ ch49C unch249C))))
(assert (= (str.++ preD (str.++ stem49 sufD)) (str.++ unch149D (str.++ ch49D unch249D))))
(assert (= (str.++ preE (str.++ stem49 sufE)) (str.++ unch149E (str.++ ch49E unch249E))))
(assert (= (str.++ preF (str.++ stem49 sufF)) (str.++ unch149F (str.++ ch49F unch249F))))
(assert (= (str.++ preG (str.++ stem49 sufG)) (str.++ unch149G (str.++ ch49G unch249G))))
(assert (= (str.++ preH (str.++ stem49 sufH)) (str.++ unch149H (str.++ ch49H unch249H))))
(assert (= "skOtHrjkj" (str.++ unch149G (str.++ var49G unch249G))))
(assert (= "skOtHrtH" (str.++ unch149H (str.++ var49H unch249H))))
(assert (= (str.len stem49) l49))
(assert (= (ite (= ch49A var49A) 0 1) sc49A))
(assert (= (ite (= ch49B var49B) 0 1) sc49B))
(assert (= (ite (= ch49C var49C) 0 1) sc49C))
(assert (= (ite (= ch49D var49D) 0 1) sc49D))
(assert (= (ite (= ch49E var49E) 0 1) sc49E))
(assert (= (ite (= ch49F var49F) 0 1) sc49F))
(assert (= (ite (= ch49G var49G) 0 1) sc49G))
(assert (= (ite (= ch49H var49H) 0 1) sc49H))
(assert (<= sc49A 1))
(assert (<= sc49B 1))
(assert (<= sc49C 1))
(assert (<= sc49D 1))
(assert (<= sc49E 1))
(assert (<= sc49F 1))
(assert (<= sc49G 1))
(assert (<= sc49H 1))
(assert (<= (str.len var50A) 1))
(assert (<= (str.len var50B) 1))
(assert (<= (str.len var50C) 1))
(assert (<= (str.len var50D) 1))
(assert (<= (str.len var50E) 1))
(assert (<= (str.len var50F) 1))
(assert (<= (str.len var50G) 1))
(assert (<= (str.len var50H) 1))
(assert (= (str.++ preA (str.++ stem50 sufA)) (str.++ unch150A (str.++ ch50A unch250A))))
(assert (= (str.++ preB (str.++ stem50 sufB)) (str.++ unch150B (str.++ ch50B unch250B))))
(assert (= (str.++ preC (str.++ stem50 sufC)) (str.++ unch150C (str.++ ch50C unch250C))))
(assert (= (str.++ preD (str.++ stem50 sufD)) (str.++ unch150D (str.++ ch50D unch250D))))
(assert (= (str.++ preE (str.++ stem50 sufE)) (str.++ unch150E (str.++ ch50E unch250E))))
(assert (= (str.++ preF (str.++ stem50 sufF)) (str.++ unch150F (str.++ ch50F unch250F))))
(assert (= (str.++ preG (str.++ stem50 sufG)) (str.++ unch150G (str.++ ch50G unch250G))))
(assert (= (str.++ preH (str.++ stem50 sufH)) (str.++ unch150H (str.++ ch50H unch250H))))
(assert (= "kjXsjkj" (str.++ unch150G (str.++ var50G unch250G))))
(assert (= "k2stH" (str.++ unch150H (str.++ var50H unch250H))))
(assert (= (str.len stem50) l50))
(assert (= (ite (= ch50A var50A) 0 1) sc50A))
(assert (= (ite (= ch50B var50B) 0 1) sc50B))
(assert (= (ite (= ch50C var50C) 0 1) sc50C))
(assert (= (ite (= ch50D var50D) 0 1) sc50D))
(assert (= (ite (= ch50E var50E) 0 1) sc50E))
(assert (= (ite (= ch50F var50F) 0 1) sc50F))
(assert (= (ite (= ch50G var50G) 0 1) sc50G))
(assert (= (ite (= ch50H var50H) 0 1) sc50H))
(assert (<= sc50A 1))
(assert (<= sc50B 1))
(assert (<= sc50C 1))
(assert (<= sc50D 1))
(assert (<= sc50E 1))
(assert (<= sc50F 1))
(assert (<= sc50G 1))
(assert (<= sc50H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      sc7G
      sc7H
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      sc8G
      sc8H
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      sc9G
      sc9H
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      sc10G
      sc10H
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      sc11G
      sc11H
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      sc12G
      sc12H
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      sc13G
      sc13H
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      sc14G
      sc14H
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      sc15G
      sc15H
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      sc16G
      sc16H
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      sc17G
      sc17H
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      sc18G
      sc18H
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      sc19G
      sc19H
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      sc20G
      sc20H
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      sc21G
      sc21H
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      sc22G
      sc22H
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      sc23G
      sc23H
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      sc24G
      sc24H
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      sc25G
      sc25H
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      sc26G
      sc26H
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      sc27G
      sc27H
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      sc28G
      sc28H
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      sc29G
      sc29H
      0
      sc30A
      sc30B
      sc30C
      sc30D
      sc30E
      sc30F
      sc30G
      sc30H
      0
      sc31A
      sc31B
      sc31C
      sc31D
      sc31E
      sc31F
      sc31G
      sc31H
      0
      sc32A
      sc32B
      sc32C
      sc32D
      sc32E
      sc32F
      sc32G
      sc32H
      0
      sc33A
      sc33B
      sc33C
      sc33D
      sc33E
      sc33F
      sc33G
      sc33H
      0
      sc34A
      sc34B
      sc34C
      sc34D
      sc34E
      sc34F
      sc34G
      sc34H
      0
      sc35A
      sc35B
      sc35C
      sc35D
      sc35E
      sc35F
      sc35G
      sc35H
      0
      sc36A
      sc36B
      sc36C
      sc36D
      sc36E
      sc36F
      sc36G
      sc36H
      0
      sc37A
      sc37B
      sc37C
      sc37D
      sc37E
      sc37F
      sc37G
      sc37H
      0
      sc38A
      sc38B
      sc38C
      sc38D
      sc38E
      sc38F
      sc38G
      sc38H
      0
      sc39A
      sc39B
      sc39C
      sc39D
      sc39E
      sc39F
      sc39G
      sc39H
      0
      sc40A
      sc40B
      sc40C
      sc40D
      sc40E
      sc40F
      sc40G
      sc40H
      0
      sc41A
      sc41B
      sc41C
      sc41D
      sc41E
      sc41F
      sc41G
      sc41H
      0
      sc42A
      sc42B
      sc42C
      sc42D
      sc42E
      sc42F
      sc42G
      sc42H
      0
      sc43A
      sc43B
      sc43C
      sc43D
      sc43E
      sc43F
      sc43G
      sc43H
      0
      sc44A
      sc44B
      sc44C
      sc44D
      sc44E
      sc44F
      sc44G
      sc44H
      0
      sc45A
      sc45B
      sc45C
      sc45D
      sc45E
      sc45F
      sc45G
      sc45H
      0
      sc46A
      sc46B
      sc46C
      sc46D
      sc46E
      sc46F
      sc46G
      sc46H
      0
      sc47A
      sc47B
      sc47C
      sc47D
      sc47E
      sc47F
      sc47G
      sc47H
      0
      sc48A
      sc48B
      sc48C
      sc48D
      sc48E
      sc48F
      sc48G
      sc48H
      0
      sc49A
      sc49B
      sc49C
      sc49D
      sc49E
      sc49F
      sc49G
      sc49H
      0
      sc50A
      sc50B
      sc50C
      sc50D
      sc50E
      sc50F
      sc50G
      sc50H)
   12))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun var7G () String)
(declare-fun var7H () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun unch27G () String)
(declare-fun ch7G () String)
(declare-fun unch17G () String)
(declare-fun unch27H () String)
(declare-fun ch7H () String)
(declare-fun unch17H () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun sc7G () Int)
(declare-fun sc7H () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun var8G () String)
(declare-fun var8H () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun unch28G () String)
(declare-fun ch8G () String)
(declare-fun unch18G () String)
(declare-fun unch28H () String)
(declare-fun ch8H () String)
(declare-fun unch18H () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun sc8G () Int)
(declare-fun sc8H () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun var9G () String)
(declare-fun var9H () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun unch29G () String)
(declare-fun ch9G () String)
(declare-fun unch19G () String)
(declare-fun unch29H () String)
(declare-fun ch9H () String)
(declare-fun unch19H () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun sc9G () Int)
(declare-fun sc9H () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun var10G () String)
(declare-fun var10H () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun unch210G () String)
(declare-fun ch10G () String)
(declare-fun unch110G () String)
(declare-fun unch210H () String)
(declare-fun ch10H () String)
(declare-fun unch110H () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun sc10G () Int)
(declare-fun sc10H () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun var11G () String)
(declare-fun var11H () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun unch211G () String)
(declare-fun ch11G () String)
(declare-fun unch111G () String)
(declare-fun unch211H () String)
(declare-fun ch11H () String)
(declare-fun unch111H () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun sc11G () Int)
(declare-fun sc11H () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun var12G () String)
(declare-fun var12H () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun unch212G () String)
(declare-fun ch12G () String)
(declare-fun unch112G () String)
(declare-fun unch212H () String)
(declare-fun ch12H () String)
(declare-fun unch112H () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun sc12G () Int)
(declare-fun sc12H () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun var13G () String)
(declare-fun var13H () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun unch213G () String)
(declare-fun ch13G () String)
(declare-fun unch113G () String)
(declare-fun unch213H () String)
(declare-fun ch13H () String)
(declare-fun unch113H () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun sc13G () Int)
(declare-fun sc13H () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun var14G () String)
(declare-fun var14H () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun unch214G () String)
(declare-fun ch14G () String)
(declare-fun unch114G () String)
(declare-fun unch214H () String)
(declare-fun ch14H () String)
(declare-fun unch114H () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun sc14G () Int)
(declare-fun sc14H () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun var15G () String)
(declare-fun var15H () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun unch215G () String)
(declare-fun ch15G () String)
(declare-fun unch115G () String)
(declare-fun unch215H () String)
(declare-fun ch15H () String)
(declare-fun unch115H () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun sc15G () Int)
(declare-fun sc15H () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun var16G () String)
(declare-fun var16H () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun unch216G () String)
(declare-fun ch16G () String)
(declare-fun unch116G () String)
(declare-fun unch216H () String)
(declare-fun ch16H () String)
(declare-fun unch116H () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun sc16G () Int)
(declare-fun sc16H () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun var17G () String)
(declare-fun var17H () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun unch217G () String)
(declare-fun ch17G () String)
(declare-fun unch117G () String)
(declare-fun unch217H () String)
(declare-fun ch17H () String)
(declare-fun unch117H () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun sc17G () Int)
(declare-fun sc17H () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun var18G () String)
(declare-fun var18H () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun unch218G () String)
(declare-fun ch18G () String)
(declare-fun unch118G () String)
(declare-fun unch218H () String)
(declare-fun ch18H () String)
(declare-fun unch118H () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun sc18G () Int)
(declare-fun sc18H () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun var19G () String)
(declare-fun var19H () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun unch219G () String)
(declare-fun ch19G () String)
(declare-fun unch119G () String)
(declare-fun unch219H () String)
(declare-fun ch19H () String)
(declare-fun unch119H () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun sc19G () Int)
(declare-fun sc19H () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun var20G () String)
(declare-fun var20H () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun unch220G () String)
(declare-fun ch20G () String)
(declare-fun unch120G () String)
(declare-fun unch220H () String)
(declare-fun ch20H () String)
(declare-fun unch120H () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun sc20G () Int)
(declare-fun sc20H () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun var21G () String)
(declare-fun var21H () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun unch221G () String)
(declare-fun ch21G () String)
(declare-fun unch121G () String)
(declare-fun unch221H () String)
(declare-fun ch21H () String)
(declare-fun unch121H () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun sc21G () Int)
(declare-fun sc21H () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun var22G () String)
(declare-fun var22H () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun unch222G () String)
(declare-fun ch22G () String)
(declare-fun unch122G () String)
(declare-fun unch222H () String)
(declare-fun ch22H () String)
(declare-fun unch122H () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun sc22G () Int)
(declare-fun sc22H () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun var23G () String)
(declare-fun var23H () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun unch223G () String)
(declare-fun ch23G () String)
(declare-fun unch123G () String)
(declare-fun unch223H () String)
(declare-fun ch23H () String)
(declare-fun unch123H () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun sc23G () Int)
(declare-fun sc23H () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun var24G () String)
(declare-fun var24H () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun unch224G () String)
(declare-fun ch24G () String)
(declare-fun unch124G () String)
(declare-fun unch224H () String)
(declare-fun ch24H () String)
(declare-fun unch124H () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun sc24G () Int)
(declare-fun sc24H () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun var25G () String)
(declare-fun var25H () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun unch225G () String)
(declare-fun ch25G () String)
(declare-fun unch125G () String)
(declare-fun unch225H () String)
(declare-fun ch25H () String)
(declare-fun unch125H () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun sc25G () Int)
(declare-fun sc25H () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun var26G () String)
(declare-fun var26H () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun unch226G () String)
(declare-fun ch26G () String)
(declare-fun unch126G () String)
(declare-fun unch226H () String)
(declare-fun ch26H () String)
(declare-fun unch126H () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun sc26G () Int)
(declare-fun sc26H () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun var27G () String)
(declare-fun var27H () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun unch227G () String)
(declare-fun ch27G () String)
(declare-fun unch127G () String)
(declare-fun unch227H () String)
(declare-fun ch27H () String)
(declare-fun unch127H () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun sc27G () Int)
(declare-fun sc27H () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun var28G () String)
(declare-fun var28H () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun unch228G () String)
(declare-fun ch28G () String)
(declare-fun unch128G () String)
(declare-fun unch228H () String)
(declare-fun ch28H () String)
(declare-fun unch128H () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun sc28G () Int)
(declare-fun sc28H () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun var29G () String)
(declare-fun var29H () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun unch229G () String)
(declare-fun ch29G () String)
(declare-fun unch129G () String)
(declare-fun unch229H () String)
(declare-fun ch29H () String)
(declare-fun unch129H () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun sc29G () Int)
(declare-fun sc29H () Int)
(declare-fun var30A () String)
(declare-fun var30B () String)
(declare-fun var30C () String)
(declare-fun var30D () String)
(declare-fun var30E () String)
(declare-fun var30F () String)
(declare-fun var30G () String)
(declare-fun var30H () String)
(declare-fun unch230A () String)
(declare-fun ch30A () String)
(declare-fun unch130A () String)
(declare-fun stem30 () String)
(declare-fun unch230B () String)
(declare-fun ch30B () String)
(declare-fun unch130B () String)
(declare-fun unch230C () String)
(declare-fun ch30C () String)
(declare-fun unch130C () String)
(declare-fun unch230D () String)
(declare-fun ch30D () String)
(declare-fun unch130D () String)
(declare-fun unch230E () String)
(declare-fun ch30E () String)
(declare-fun unch130E () String)
(declare-fun unch230F () String)
(declare-fun ch30F () String)
(declare-fun unch130F () String)
(declare-fun unch230G () String)
(declare-fun ch30G () String)
(declare-fun unch130G () String)
(declare-fun unch230H () String)
(declare-fun ch30H () String)
(declare-fun unch130H () String)
(declare-fun l30 () Int)
(declare-fun sc30A () Int)
(declare-fun sc30B () Int)
(declare-fun sc30C () Int)
(declare-fun sc30D () Int)
(declare-fun sc30E () Int)
(declare-fun sc30F () Int)
(declare-fun sc30G () Int)
(declare-fun sc30H () Int)
(declare-fun var31A () String)
(declare-fun var31B () String)
(declare-fun var31C () String)
(declare-fun var31D () String)
(declare-fun var31E () String)
(declare-fun var31F () String)
(declare-fun var31G () String)
(declare-fun var31H () String)
(declare-fun unch231A () String)
(declare-fun ch31A () String)
(declare-fun unch131A () String)
(declare-fun stem31 () String)
(declare-fun unch231B () String)
(declare-fun ch31B () String)
(declare-fun unch131B () String)
(declare-fun unch231C () String)
(declare-fun ch31C () String)
(declare-fun unch131C () String)
(declare-fun unch231D () String)
(declare-fun ch31D () String)
(declare-fun unch131D () String)
(declare-fun unch231E () String)
(declare-fun ch31E () String)
(declare-fun unch131E () String)
(declare-fun unch231F () String)
(declare-fun ch31F () String)
(declare-fun unch131F () String)
(declare-fun unch231G () String)
(declare-fun ch31G () String)
(declare-fun unch131G () String)
(declare-fun unch231H () String)
(declare-fun ch31H () String)
(declare-fun unch131H () String)
(declare-fun l31 () Int)
(declare-fun sc31A () Int)
(declare-fun sc31B () Int)
(declare-fun sc31C () Int)
(declare-fun sc31D () Int)
(declare-fun sc31E () Int)
(declare-fun sc31F () Int)
(declare-fun sc31G () Int)
(declare-fun sc31H () Int)
(declare-fun var32A () String)
(declare-fun var32B () String)
(declare-fun var32C () String)
(declare-fun var32D () String)
(declare-fun var32E () String)
(declare-fun var32F () String)
(declare-fun var32G () String)
(declare-fun var32H () String)
(declare-fun unch232A () String)
(declare-fun ch32A () String)
(declare-fun unch132A () String)
(declare-fun stem32 () String)
(declare-fun unch232B () String)
(declare-fun ch32B () String)
(declare-fun unch132B () String)
(declare-fun unch232C () String)
(declare-fun ch32C () String)
(declare-fun unch132C () String)
(declare-fun unch232D () String)
(declare-fun ch32D () String)
(declare-fun unch132D () String)
(declare-fun unch232E () String)
(declare-fun ch32E () String)
(declare-fun unch132E () String)
(declare-fun unch232F () String)
(declare-fun ch32F () String)
(declare-fun unch132F () String)
(declare-fun unch232G () String)
(declare-fun ch32G () String)
(declare-fun unch132G () String)
(declare-fun unch232H () String)
(declare-fun ch32H () String)
(declare-fun unch132H () String)
(declare-fun l32 () Int)
(declare-fun sc32A () Int)
(declare-fun sc32B () Int)
(declare-fun sc32C () Int)
(declare-fun sc32D () Int)
(declare-fun sc32E () Int)
(declare-fun sc32F () Int)
(declare-fun sc32G () Int)
(declare-fun sc32H () Int)
(declare-fun var33A () String)
(declare-fun var33B () String)
(declare-fun var33C () String)
(declare-fun var33D () String)
(declare-fun var33E () String)
(declare-fun var33F () String)
(declare-fun var33G () String)
(declare-fun var33H () String)
(declare-fun unch233A () String)
(declare-fun ch33A () String)
(declare-fun unch133A () String)
(declare-fun stem33 () String)
(declare-fun unch233B () String)
(declare-fun ch33B () String)
(declare-fun unch133B () String)
(declare-fun unch233C () String)
(declare-fun ch33C () String)
(declare-fun unch133C () String)
(declare-fun unch233D () String)
(declare-fun ch33D () String)
(declare-fun unch133D () String)
(declare-fun unch233E () String)
(declare-fun ch33E () String)
(declare-fun unch133E () String)
(declare-fun unch233F () String)
(declare-fun ch33F () String)
(declare-fun unch133F () String)
(declare-fun unch233G () String)
(declare-fun ch33G () String)
(declare-fun unch133G () String)
(declare-fun unch233H () String)
(declare-fun ch33H () String)
(declare-fun unch133H () String)
(declare-fun l33 () Int)
(declare-fun sc33A () Int)
(declare-fun sc33B () Int)
(declare-fun sc33C () Int)
(declare-fun sc33D () Int)
(declare-fun sc33E () Int)
(declare-fun sc33F () Int)
(declare-fun sc33G () Int)
(declare-fun sc33H () Int)
(declare-fun var34A () String)
(declare-fun var34B () String)
(declare-fun var34C () String)
(declare-fun var34D () String)
(declare-fun var34E () String)
(declare-fun var34F () String)
(declare-fun var34G () String)
(declare-fun var34H () String)
(declare-fun unch234A () String)
(declare-fun ch34A () String)
(declare-fun unch134A () String)
(declare-fun stem34 () String)
(declare-fun unch234B () String)
(declare-fun ch34B () String)
(declare-fun unch134B () String)
(declare-fun unch234C () String)
(declare-fun ch34C () String)
(declare-fun unch134C () String)
(declare-fun unch234D () String)
(declare-fun ch34D () String)
(declare-fun unch134D () String)
(declare-fun unch234E () String)
(declare-fun ch34E () String)
(declare-fun unch134E () String)
(declare-fun unch234F () String)
(declare-fun ch34F () String)
(declare-fun unch134F () String)
(declare-fun unch234G () String)
(declare-fun ch34G () String)
(declare-fun unch134G () String)
(declare-fun unch234H () String)
(declare-fun ch34H () String)
(declare-fun unch134H () String)
(declare-fun l34 () Int)
(declare-fun sc34A () Int)
(declare-fun sc34B () Int)
(declare-fun sc34C () Int)
(declare-fun sc34D () Int)
(declare-fun sc34E () Int)
(declare-fun sc34F () Int)
(declare-fun sc34G () Int)
(declare-fun sc34H () Int)
(declare-fun var35A () String)
(declare-fun var35B () String)
(declare-fun var35C () String)
(declare-fun var35D () String)
(declare-fun var35E () String)
(declare-fun var35F () String)
(declare-fun var35G () String)
(declare-fun var35H () String)
(declare-fun unch235A () String)
(declare-fun ch35A () String)
(declare-fun unch135A () String)
(declare-fun stem35 () String)
(declare-fun unch235B () String)
(declare-fun ch35B () String)
(declare-fun unch135B () String)
(declare-fun unch235C () String)
(declare-fun ch35C () String)
(declare-fun unch135C () String)
(declare-fun unch235D () String)
(declare-fun ch35D () String)
(declare-fun unch135D () String)
(declare-fun unch235E () String)
(declare-fun ch35E () String)
(declare-fun unch135E () String)
(declare-fun unch235F () String)
(declare-fun ch35F () String)
(declare-fun unch135F () String)
(declare-fun unch235G () String)
(declare-fun ch35G () String)
(declare-fun unch135G () String)
(declare-fun unch235H () String)
(declare-fun ch35H () String)
(declare-fun unch135H () String)
(declare-fun l35 () Int)
(declare-fun sc35A () Int)
(declare-fun sc35B () Int)
(declare-fun sc35C () Int)
(declare-fun sc35D () Int)
(declare-fun sc35E () Int)
(declare-fun sc35F () Int)
(declare-fun sc35G () Int)
(declare-fun sc35H () Int)
(declare-fun var36A () String)
(declare-fun var36B () String)
(declare-fun var36C () String)
(declare-fun var36D () String)
(declare-fun var36E () String)
(declare-fun var36F () String)
(declare-fun var36G () String)
(declare-fun var36H () String)
(declare-fun unch236A () String)
(declare-fun ch36A () String)
(declare-fun unch136A () String)
(declare-fun stem36 () String)
(declare-fun unch236B () String)
(declare-fun ch36B () String)
(declare-fun unch136B () String)
(declare-fun unch236C () String)
(declare-fun ch36C () String)
(declare-fun unch136C () String)
(declare-fun unch236D () String)
(declare-fun ch36D () String)
(declare-fun unch136D () String)
(declare-fun unch236E () String)
(declare-fun ch36E () String)
(declare-fun unch136E () String)
(declare-fun unch236F () String)
(declare-fun ch36F () String)
(declare-fun unch136F () String)
(declare-fun unch236G () String)
(declare-fun ch36G () String)
(declare-fun unch136G () String)
(declare-fun unch236H () String)
(declare-fun ch36H () String)
(declare-fun unch136H () String)
(declare-fun l36 () Int)
(declare-fun sc36A () Int)
(declare-fun sc36B () Int)
(declare-fun sc36C () Int)
(declare-fun sc36D () Int)
(declare-fun sc36E () Int)
(declare-fun sc36F () Int)
(declare-fun sc36G () Int)
(declare-fun sc36H () Int)
(declare-fun var37A () String)
(declare-fun var37B () String)
(declare-fun var37C () String)
(declare-fun var37D () String)
(declare-fun var37E () String)
(declare-fun var37F () String)
(declare-fun var37G () String)
(declare-fun var37H () String)
(declare-fun unch237A () String)
(declare-fun ch37A () String)
(declare-fun unch137A () String)
(declare-fun stem37 () String)
(declare-fun unch237B () String)
(declare-fun ch37B () String)
(declare-fun unch137B () String)
(declare-fun unch237C () String)
(declare-fun ch37C () String)
(declare-fun unch137C () String)
(declare-fun unch237D () String)
(declare-fun ch37D () String)
(declare-fun unch137D () String)
(declare-fun unch237E () String)
(declare-fun ch37E () String)
(declare-fun unch137E () String)
(declare-fun unch237F () String)
(declare-fun ch37F () String)
(declare-fun unch137F () String)
(declare-fun unch237G () String)
(declare-fun ch37G () String)
(declare-fun unch137G () String)
(declare-fun unch237H () String)
(declare-fun ch37H () String)
(declare-fun unch137H () String)
(declare-fun l37 () Int)
(declare-fun sc37A () Int)
(declare-fun sc37B () Int)
(declare-fun sc37C () Int)
(declare-fun sc37D () Int)
(declare-fun sc37E () Int)
(declare-fun sc37F () Int)
(declare-fun sc37G () Int)
(declare-fun sc37H () Int)
(declare-fun var38A () String)
(declare-fun var38B () String)
(declare-fun var38C () String)
(declare-fun var38D () String)
(declare-fun var38E () String)
(declare-fun var38F () String)
(declare-fun var38G () String)
(declare-fun var38H () String)
(declare-fun unch238A () String)
(declare-fun ch38A () String)
(declare-fun unch138A () String)
(declare-fun stem38 () String)
(declare-fun unch238B () String)
(declare-fun ch38B () String)
(declare-fun unch138B () String)
(declare-fun unch238C () String)
(declare-fun ch38C () String)
(declare-fun unch138C () String)
(declare-fun unch238D () String)
(declare-fun ch38D () String)
(declare-fun unch138D () String)
(declare-fun unch238E () String)
(declare-fun ch38E () String)
(declare-fun unch138E () String)
(declare-fun unch238F () String)
(declare-fun ch38F () String)
(declare-fun unch138F () String)
(declare-fun unch238G () String)
(declare-fun ch38G () String)
(declare-fun unch138G () String)
(declare-fun unch238H () String)
(declare-fun ch38H () String)
(declare-fun unch138H () String)
(declare-fun l38 () Int)
(declare-fun sc38A () Int)
(declare-fun sc38B () Int)
(declare-fun sc38C () Int)
(declare-fun sc38D () Int)
(declare-fun sc38E () Int)
(declare-fun sc38F () Int)
(declare-fun sc38G () Int)
(declare-fun sc38H () Int)
(declare-fun var39A () String)
(declare-fun var39B () String)
(declare-fun var39C () String)
(declare-fun var39D () String)
(declare-fun var39E () String)
(declare-fun var39F () String)
(declare-fun var39G () String)
(declare-fun var39H () String)
(declare-fun unch239A () String)
(declare-fun ch39A () String)
(declare-fun unch139A () String)
(declare-fun stem39 () String)
(declare-fun unch239B () String)
(declare-fun ch39B () String)
(declare-fun unch139B () String)
(declare-fun unch239C () String)
(declare-fun ch39C () String)
(declare-fun unch139C () String)
(declare-fun unch239D () String)
(declare-fun ch39D () String)
(declare-fun unch139D () String)
(declare-fun unch239E () String)
(declare-fun ch39E () String)
(declare-fun unch139E () String)
(declare-fun unch239F () String)
(declare-fun ch39F () String)
(declare-fun unch139F () String)
(declare-fun unch239G () String)
(declare-fun ch39G () String)
(declare-fun unch139G () String)
(declare-fun unch239H () String)
(declare-fun ch39H () String)
(declare-fun unch139H () String)
(declare-fun l39 () Int)
(declare-fun sc39A () Int)
(declare-fun sc39B () Int)
(declare-fun sc39C () Int)
(declare-fun sc39D () Int)
(declare-fun sc39E () Int)
(declare-fun sc39F () Int)
(declare-fun sc39G () Int)
(declare-fun sc39H () Int)
(declare-fun var40A () String)
(declare-fun var40B () String)
(declare-fun var40C () String)
(declare-fun var40D () String)
(declare-fun var40E () String)
(declare-fun var40F () String)
(declare-fun var40G () String)
(declare-fun var40H () String)
(declare-fun unch240A () String)
(declare-fun ch40A () String)
(declare-fun unch140A () String)
(declare-fun stem40 () String)
(declare-fun unch240B () String)
(declare-fun ch40B () String)
(declare-fun unch140B () String)
(declare-fun unch240C () String)
(declare-fun ch40C () String)
(declare-fun unch140C () String)
(declare-fun unch240D () String)
(declare-fun ch40D () String)
(declare-fun unch140D () String)
(declare-fun unch240E () String)
(declare-fun ch40E () String)
(declare-fun unch140E () String)
(declare-fun unch240F () String)
(declare-fun ch40F () String)
(declare-fun unch140F () String)
(declare-fun unch240G () String)
(declare-fun ch40G () String)
(declare-fun unch140G () String)
(declare-fun unch240H () String)
(declare-fun ch40H () String)
(declare-fun unch140H () String)
(declare-fun l40 () Int)
(declare-fun sc40A () Int)
(declare-fun sc40B () Int)
(declare-fun sc40C () Int)
(declare-fun sc40D () Int)
(declare-fun sc40E () Int)
(declare-fun sc40F () Int)
(declare-fun sc40G () Int)
(declare-fun sc40H () Int)
(declare-fun var41A () String)
(declare-fun var41B () String)
(declare-fun var41C () String)
(declare-fun var41D () String)
(declare-fun var41E () String)
(declare-fun var41F () String)
(declare-fun var41G () String)
(declare-fun var41H () String)
(declare-fun unch241A () String)
(declare-fun ch41A () String)
(declare-fun unch141A () String)
(declare-fun stem41 () String)
(declare-fun unch241B () String)
(declare-fun ch41B () String)
(declare-fun unch141B () String)
(declare-fun unch241C () String)
(declare-fun ch41C () String)
(declare-fun unch141C () String)
(declare-fun unch241D () String)
(declare-fun ch41D () String)
(declare-fun unch141D () String)
(declare-fun unch241E () String)
(declare-fun ch41E () String)
(declare-fun unch141E () String)
(declare-fun unch241F () String)
(declare-fun ch41F () String)
(declare-fun unch141F () String)
(declare-fun unch241G () String)
(declare-fun ch41G () String)
(declare-fun unch141G () String)
(declare-fun unch241H () String)
(declare-fun ch41H () String)
(declare-fun unch141H () String)
(declare-fun l41 () Int)
(declare-fun sc41A () Int)
(declare-fun sc41B () Int)
(declare-fun sc41C () Int)
(declare-fun sc41D () Int)
(declare-fun sc41E () Int)
(declare-fun sc41F () Int)
(declare-fun sc41G () Int)
(declare-fun sc41H () Int)
(declare-fun var42A () String)
(declare-fun var42B () String)
(declare-fun var42C () String)
(declare-fun var42D () String)
(declare-fun var42E () String)
(declare-fun var42F () String)
(declare-fun var42G () String)
(declare-fun var42H () String)
(declare-fun unch242A () String)
(declare-fun ch42A () String)
(declare-fun unch142A () String)
(declare-fun stem42 () String)
(declare-fun unch242B () String)
(declare-fun ch42B () String)
(declare-fun unch142B () String)
(declare-fun unch242C () String)
(declare-fun ch42C () String)
(declare-fun unch142C () String)
(declare-fun unch242D () String)
(declare-fun ch42D () String)
(declare-fun unch142D () String)
(declare-fun unch242E () String)
(declare-fun ch42E () String)
(declare-fun unch142E () String)
(declare-fun unch242F () String)
(declare-fun ch42F () String)
(declare-fun unch142F () String)
(declare-fun unch242G () String)
(declare-fun ch42G () String)
(declare-fun unch142G () String)
(declare-fun unch242H () String)
(declare-fun ch42H () String)
(declare-fun unch142H () String)
(declare-fun l42 () Int)
(declare-fun sc42A () Int)
(declare-fun sc42B () Int)
(declare-fun sc42C () Int)
(declare-fun sc42D () Int)
(declare-fun sc42E () Int)
(declare-fun sc42F () Int)
(declare-fun sc42G () Int)
(declare-fun sc42H () Int)
(declare-fun var43A () String)
(declare-fun var43B () String)
(declare-fun var43C () String)
(declare-fun var43D () String)
(declare-fun var43E () String)
(declare-fun var43F () String)
(declare-fun var43G () String)
(declare-fun var43H () String)
(declare-fun unch243A () String)
(declare-fun ch43A () String)
(declare-fun unch143A () String)
(declare-fun stem43 () String)
(declare-fun unch243B () String)
(declare-fun ch43B () String)
(declare-fun unch143B () String)
(declare-fun unch243C () String)
(declare-fun ch43C () String)
(declare-fun unch143C () String)
(declare-fun unch243D () String)
(declare-fun ch43D () String)
(declare-fun unch143D () String)
(declare-fun unch243E () String)
(declare-fun ch43E () String)
(declare-fun unch143E () String)
(declare-fun unch243F () String)
(declare-fun ch43F () String)
(declare-fun unch143F () String)
(declare-fun unch243G () String)
(declare-fun ch43G () String)
(declare-fun unch143G () String)
(declare-fun unch243H () String)
(declare-fun ch43H () String)
(declare-fun unch143H () String)
(declare-fun l43 () Int)
(declare-fun sc43A () Int)
(declare-fun sc43B () Int)
(declare-fun sc43C () Int)
(declare-fun sc43D () Int)
(declare-fun sc43E () Int)
(declare-fun sc43F () Int)
(declare-fun sc43G () Int)
(declare-fun sc43H () Int)
(declare-fun var44A () String)
(declare-fun var44B () String)
(declare-fun var44C () String)
(declare-fun var44D () String)
(declare-fun var44E () String)
(declare-fun var44F () String)
(declare-fun var44G () String)
(declare-fun var44H () String)
(declare-fun unch244A () String)
(declare-fun ch44A () String)
(declare-fun unch144A () String)
(declare-fun stem44 () String)
(declare-fun unch244B () String)
(declare-fun ch44B () String)
(declare-fun unch144B () String)
(declare-fun unch244C () String)
(declare-fun ch44C () String)
(declare-fun unch144C () String)
(declare-fun unch244D () String)
(declare-fun ch44D () String)
(declare-fun unch144D () String)
(declare-fun unch244E () String)
(declare-fun ch44E () String)
(declare-fun unch144E () String)
(declare-fun unch244F () String)
(declare-fun ch44F () String)
(declare-fun unch144F () String)
(declare-fun unch244G () String)
(declare-fun ch44G () String)
(declare-fun unch144G () String)
(declare-fun unch244H () String)
(declare-fun ch44H () String)
(declare-fun unch144H () String)
(declare-fun l44 () Int)
(declare-fun sc44A () Int)
(declare-fun sc44B () Int)
(declare-fun sc44C () Int)
(declare-fun sc44D () Int)
(declare-fun sc44E () Int)
(declare-fun sc44F () Int)
(declare-fun sc44G () Int)
(declare-fun sc44H () Int)
(declare-fun var45A () String)
(declare-fun var45B () String)
(declare-fun var45C () String)
(declare-fun var45D () String)
(declare-fun var45E () String)
(declare-fun var45F () String)
(declare-fun var45G () String)
(declare-fun var45H () String)
(declare-fun unch245A () String)
(declare-fun ch45A () String)
(declare-fun unch145A () String)
(declare-fun stem45 () String)
(declare-fun unch245B () String)
(declare-fun ch45B () String)
(declare-fun unch145B () String)
(declare-fun unch245C () String)
(declare-fun ch45C () String)
(declare-fun unch145C () String)
(declare-fun unch245D () String)
(declare-fun ch45D () String)
(declare-fun unch145D () String)
(declare-fun unch245E () String)
(declare-fun ch45E () String)
(declare-fun unch145E () String)
(declare-fun unch245F () String)
(declare-fun ch45F () String)
(declare-fun unch145F () String)
(declare-fun unch245G () String)
(declare-fun ch45G () String)
(declare-fun unch145G () String)
(declare-fun unch245H () String)
(declare-fun ch45H () String)
(declare-fun unch145H () String)
(declare-fun l45 () Int)
(declare-fun sc45A () Int)
(declare-fun sc45B () Int)
(declare-fun sc45C () Int)
(declare-fun sc45D () Int)
(declare-fun sc45E () Int)
(declare-fun sc45F () Int)
(declare-fun sc45G () Int)
(declare-fun sc45H () Int)
(declare-fun var46A () String)
(declare-fun var46B () String)
(declare-fun var46C () String)
(declare-fun var46D () String)
(declare-fun var46E () String)
(declare-fun var46F () String)
(declare-fun var46G () String)
(declare-fun var46H () String)
(declare-fun unch246A () String)
(declare-fun ch46A () String)
(declare-fun unch146A () String)
(declare-fun stem46 () String)
(declare-fun unch246B () String)
(declare-fun ch46B () String)
(declare-fun unch146B () String)
(declare-fun unch246C () String)
(declare-fun ch46C () String)
(declare-fun unch146C () String)
(declare-fun unch246D () String)
(declare-fun ch46D () String)
(declare-fun unch146D () String)
(declare-fun unch246E () String)
(declare-fun ch46E () String)
(declare-fun unch146E () String)
(declare-fun unch246F () String)
(declare-fun ch46F () String)
(declare-fun unch146F () String)
(declare-fun unch246G () String)
(declare-fun ch46G () String)
(declare-fun unch146G () String)
(declare-fun unch246H () String)
(declare-fun ch46H () String)
(declare-fun unch146H () String)
(declare-fun l46 () Int)
(declare-fun sc46A () Int)
(declare-fun sc46B () Int)
(declare-fun sc46C () Int)
(declare-fun sc46D () Int)
(declare-fun sc46E () Int)
(declare-fun sc46F () Int)
(declare-fun sc46G () Int)
(declare-fun sc46H () Int)
(declare-fun var47A () String)
(declare-fun var47B () String)
(declare-fun var47C () String)
(declare-fun var47D () String)
(declare-fun var47E () String)
(declare-fun var47F () String)
(declare-fun var47G () String)
(declare-fun var47H () String)
(declare-fun unch247A () String)
(declare-fun ch47A () String)
(declare-fun unch147A () String)
(declare-fun stem47 () String)
(declare-fun unch247B () String)
(declare-fun ch47B () String)
(declare-fun unch147B () String)
(declare-fun unch247C () String)
(declare-fun ch47C () String)
(declare-fun unch147C () String)
(declare-fun unch247D () String)
(declare-fun ch47D () String)
(declare-fun unch147D () String)
(declare-fun unch247E () String)
(declare-fun ch47E () String)
(declare-fun unch147E () String)
(declare-fun unch247F () String)
(declare-fun ch47F () String)
(declare-fun unch147F () String)
(declare-fun unch247G () String)
(declare-fun ch47G () String)
(declare-fun unch147G () String)
(declare-fun unch247H () String)
(declare-fun ch47H () String)
(declare-fun unch147H () String)
(declare-fun l47 () Int)
(declare-fun sc47A () Int)
(declare-fun sc47B () Int)
(declare-fun sc47C () Int)
(declare-fun sc47D () Int)
(declare-fun sc47E () Int)
(declare-fun sc47F () Int)
(declare-fun sc47G () Int)
(declare-fun sc47H () Int)
(declare-fun var48A () String)
(declare-fun var48B () String)
(declare-fun var48C () String)
(declare-fun var48D () String)
(declare-fun var48E () String)
(declare-fun var48F () String)
(declare-fun var48G () String)
(declare-fun var48H () String)
(declare-fun unch248A () String)
(declare-fun ch48A () String)
(declare-fun unch148A () String)
(declare-fun stem48 () String)
(declare-fun unch248B () String)
(declare-fun ch48B () String)
(declare-fun unch148B () String)
(declare-fun unch248C () String)
(declare-fun ch48C () String)
(declare-fun unch148C () String)
(declare-fun unch248D () String)
(declare-fun ch48D () String)
(declare-fun unch148D () String)
(declare-fun unch248E () String)
(declare-fun ch48E () String)
(declare-fun unch148E () String)
(declare-fun unch248F () String)
(declare-fun ch48F () String)
(declare-fun unch148F () String)
(declare-fun unch248G () String)
(declare-fun ch48G () String)
(declare-fun unch148G () String)
(declare-fun unch248H () String)
(declare-fun ch48H () String)
(declare-fun unch148H () String)
(declare-fun l48 () Int)
(declare-fun sc48A () Int)
(declare-fun sc48B () Int)
(declare-fun sc48C () Int)
(declare-fun sc48D () Int)
(declare-fun sc48E () Int)
(declare-fun sc48F () Int)
(declare-fun sc48G () Int)
(declare-fun sc48H () Int)
(declare-fun var49A () String)
(declare-fun var49B () String)
(declare-fun var49C () String)
(declare-fun var49D () String)
(declare-fun var49E () String)
(declare-fun var49F () String)
(declare-fun var49G () String)
(declare-fun var49H () String)
(declare-fun unch249A () String)
(declare-fun ch49A () String)
(declare-fun unch149A () String)
(declare-fun stem49 () String)
(declare-fun unch249B () String)
(declare-fun ch49B () String)
(declare-fun unch149B () String)
(declare-fun unch249C () String)
(declare-fun ch49C () String)
(declare-fun unch149C () String)
(declare-fun unch249D () String)
(declare-fun ch49D () String)
(declare-fun unch149D () String)
(declare-fun unch249E () String)
(declare-fun ch49E () String)
(declare-fun unch149E () String)
(declare-fun unch249F () String)
(declare-fun ch49F () String)
(declare-fun unch149F () String)
(declare-fun unch249G () String)
(declare-fun ch49G () String)
(declare-fun unch149G () String)
(declare-fun unch249H () String)
(declare-fun ch49H () String)
(declare-fun unch149H () String)
(declare-fun l49 () Int)
(declare-fun sc49A () Int)
(declare-fun sc49B () Int)
(declare-fun sc49C () Int)
(declare-fun sc49D () Int)
(declare-fun sc49E () Int)
(declare-fun sc49F () Int)
(declare-fun sc49G () Int)
(declare-fun sc49H () Int)
(declare-fun var50A () String)
(declare-fun var50B () String)
(declare-fun var50C () String)
(declare-fun var50D () String)
(declare-fun var50E () String)
(declare-fun var50F () String)
(declare-fun var50G () String)
(declare-fun var50H () String)
(declare-fun unch250A () String)
(declare-fun ch50A () String)
(declare-fun unch150A () String)
(declare-fun stem50 () String)
(declare-fun unch250B () String)
(declare-fun ch50B () String)
(declare-fun unch150B () String)
(declare-fun unch250C () String)
(declare-fun ch50C () String)
(declare-fun unch150C () String)
(declare-fun unch250D () String)
(declare-fun ch50D () String)
(declare-fun unch150D () String)
(declare-fun unch250E () String)
(declare-fun ch50E () String)
(declare-fun unch150E () String)
(declare-fun unch250F () String)
(declare-fun ch50F () String)
(declare-fun unch150F () String)
(declare-fun unch250G () String)
(declare-fun ch50G () String)
(declare-fun unch150G () String)
(declare-fun unch250H () String)
(declare-fun ch50H () String)
(declare-fun unch150H () String)
(declare-fun l50 () Int)
(declare-fun sc50A () Int)
(declare-fun sc50B () Int)
(declare-fun sc50C () Int)
(declare-fun sc50D () Int)
(declare-fun sc50E () Int)
(declare-fun sc50F () Int)
(declare-fun sc50G () Int)
(declare-fun sc50H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "plOst" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "plastO" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "plasjkjX" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "skorZx" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "skoruxO" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "skorusjX" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "1jrjXx" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "1jrjixO" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "1jrjisjX" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "pastZx" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "pastuxO" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "pastusjX" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "mjnjZx" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "mjnjZxa" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "mjnjZsji" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "plZ1" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "plZ1a" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "plZzji" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "sjtjX1" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "st21a" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "st2zji" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (<= (str.len var7G) 1))
(assert (<= (str.len var7H) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= (str.++ preG (str.++ stem7 sufG)) (str.++ unch17G (str.++ ch7G unch27G))))
(assert (= (str.++ preH (str.++ stem7 sufH)) (str.++ unch17H (str.++ ch7H unch27H))))
(assert (= "sOk" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "sOka" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "sOtsji" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (= (ite (= ch7G var7G) 0 1) sc7G))
(assert (= (ite (= ch7H var7H) 0 1) sc7H))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= sc7G 1))
(assert (<= sc7H 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (<= (str.len var8G) 1))
(assert (<= (str.len var8H) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= (str.++ preG (str.++ stem8 sufG)) (str.++ unch18G (str.++ ch8G unch28G))))
(assert (= (str.++ preH (str.++ stem8 sufH)) (str.++ unch18H (str.++ ch8H unch28H))))
(assert (= "b3k" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "bHkO" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "bHtsjX" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (= (ite (= ch8G var8G) 0 1) sc8G))
(assert (= (ite (= ch8H var8H) 0 1) sc8H))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= sc8G 1))
(assert (<= sc8H 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (<= (str.len var9G) 1))
(assert (<= (str.len var9H) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= (str.++ preG (str.++ stem9 sufG)) (str.++ unch19G (str.++ ch9G unch29G))))
(assert (= (str.++ preH (str.++ stem9 sufH)) (str.++ unch19H (str.++ ch9H unch29H))))
(assert (= "l3st" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "lHstO" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "lHsjkjX" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (= (ite (= ch9G var9G) 0 1) sc9G))
(assert (= (ite (= ch9H var9H) 0 1) sc9H))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= sc9G 1))
(assert (<= sc9H 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (<= (str.len var10G) 1))
(assert (<= (str.len var10H) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= (str.++ preG (str.++ stem10 sufG)) (str.++ unch110G (str.++ ch10G unch210G))))
(assert (= (str.++ preH (str.++ stem10 sufH)) (str.++ unch110H (str.++ ch10H unch210H))))
(assert (= "l3st" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "l3sta" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "l3sjkji" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (= (ite (= ch10G var10G) 0 1) sc10G))
(assert (= (ite (= ch10H var10H) 0 1) sc10H))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= sc10G 1))
(assert (<= sc10H 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (<= (str.len var11G) 1))
(assert (<= (str.len var11H) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= (str.++ preG (str.++ stem11 sufG)) (str.++ unch111G (str.++ ch11G unch211G))))
(assert (= (str.++ preH (str.++ stem11 sufH)) (str.++ unch111H (str.++ ch11H unch211H))))
(assert (= "pjljXt" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "pl2ta" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "pl2kji" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (= (ite (= ch11G var11G) 0 1) sc11G))
(assert (= (ite (= ch11H var11H) 0 1) sc11H))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= sc11G 1))
(assert (<= sc11H 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (<= (str.len var12G) 1))
(assert (<= (str.len var12H) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= (str.++ preG (str.++ stem12 sufG)) (str.++ unch112G (str.++ ch12G unch212G))))
(assert (= (str.++ preH (str.++ stem12 sufH)) (str.++ unch112H (str.++ ch12H unch212H))))
(assert (= "sjmjrjXd" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "smr2da" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "smr2gji" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (= (ite (= ch12G var12G) 0 1) sc12G))
(assert (= (ite (= ch12H var12H) 0 1) sc12H))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= sc12G 1))
(assert (<= sc12H 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (<= (str.len var13G) 1))
(assert (<= (str.len var13H) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= (str.++ preG (str.++ stem13 sufG)) (str.++ unch113G (str.++ ch13G unch213G))))
(assert (= (str.++ preH (str.++ stem13 sufH)) (str.++ unch113H (str.++ ch13H unch213H))))
(assert (= "fjXst" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "fostO" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "fosjkjX" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (= (ite (= ch13G var13G) 0 1) sc13G))
(assert (= (ite (= ch13H var13H) 0 1) sc13H))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= sc13G 1))
(assert (<= sc13H 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (<= (str.len var14G) 1))
(assert (<= (str.len var14H) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= (str.++ preG (str.++ stem14 sufG)) (str.++ unch114G (str.++ ch14G unch214G))))
(assert (= (str.++ preH (str.++ stem14 sufH)) (str.++ unch114H (str.++ ch14H unch214H))))
(assert (= "mjXst" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "m2sta" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "m2sjkji" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (= (ite (= ch14G var14G) 0 1) sc14G))
(assert (= (ite (= ch14H var14H) 0 1) sc14H))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= sc14G 1))
(assert (<= sc14H 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (<= (str.len var15G) 1))
(assert (<= (str.len var15H) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= (str.++ preG (str.++ stem15 sufG)) (str.++ unch115G (str.++ ch15G unch215G))))
(assert (= (str.++ preH (str.++ stem15 sufH)) (str.++ unch115H (str.++ ch15H unch215H))))
(assert (= "ljXd" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "l4du" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "lHdZ" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (= (ite (= ch15G var15G) 0 1) sc15G))
(assert (= (ite (= ch15H var15H) 0 1) sc15H))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= sc15G 1))
(assert (<= sc15H 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (<= (str.len var16G) 1))
(assert (<= (str.len var16H) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= (str.++ preG (str.++ stem16 sufG)) (str.++ unch116G (str.++ ch16G unch216G))))
(assert (= (str.++ preH (str.++ stem16 sufH)) (str.++ unch116H (str.++ ch16H unch216H))))
(assert (= "djrjXt" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "dr2ta" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "dr2kji" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (= (ite (= ch16G var16G) 0 1) sc16G))
(assert (= (ite (= ch16H var16H) 0 1) sc16H))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= sc16G 1))
(assert (<= sc16H 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (<= (str.len var17G) 1))
(assert (<= (str.len var17H) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= (str.++ preG (str.++ stem17 sufG)) (str.++ unch117G (str.++ ch17G unch217G))))
(assert (= (str.++ preH (str.++ stem17 sufH)) (str.++ unch117H (str.++ ch17H unch217H))))
(assert (= "mjXd" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "m4du" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "mHdZ" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (= (ite (= ch17G var17G) 0 1) sc17G))
(assert (= (ite (= ch17H var17H) 0 1) sc17H))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= sc17G 1))
(assert (<= sc17H 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (<= (str.len var18G) 1))
(assert (<= (str.len var18H) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= (str.++ preG (str.++ stem18 sufG)) (str.++ unch118G (str.++ ch18G unch218G))))
(assert (= (str.++ preH (str.++ stem18 sufH)) (str.++ unch118H (str.++ ch18H unch218H))))
(assert (= "vjXl" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "volO" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "voljX" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (= (ite (= ch18G var18G) 0 1) sc18G))
(assert (= (ite (= ch18H var18H) 0 1) sc18H))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= sc18G 1))
(assert (<= sc18H 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (<= (str.len var19G) 1))
(assert (<= (str.len var19H) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= (str.++ preG (str.++ stem19 sufG)) (str.++ unch119G (str.++ ch19G unch219G))))
(assert (= (str.++ preH (str.++ stem19 sufH)) (str.++ unch119H (str.++ ch19H unch219H))))
(assert (= "vjXz" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "v2za" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "v2zji" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (= (ite (= ch19G var19G) 0 1) sc19G))
(assert (= (ite (= ch19H var19H) 0 1) sc19H))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= sc19G 1))
(assert (<= sc19H 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (<= (str.len var20G) 1))
(assert (<= (str.len var20H) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= (str.++ preG (str.++ stem20 sufG)) (str.++ unch120G (str.++ ch20G unch220G))))
(assert (= (str.++ preH (str.++ stem20 sufH)) (str.++ unch120H (str.++ ch20H unch220H))))
(assert (= "s3r" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "s3ra" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "s3rji" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (= (ite (= ch20G var20G) 0 1) sc20G))
(assert (= (ite (= ch20H var20H) 0 1) sc20H))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= sc20G 1))
(assert (<= sc20H 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (<= (str.len var21G) 1))
(assert (<= (str.len var21H) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= (str.++ preG (str.++ stem21 sufG)) (str.++ unch121G (str.++ ch21G unch221G))))
(assert (= (str.++ preH (str.++ stem21 sufH)) (str.++ unch121H (str.++ ch21H unch221H))))
(assert (= "sjnjXp" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "snopO" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "snopjX" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (= (ite (= ch21G var21G) 0 1) sc21G))
(assert (= (ite (= ch21H var21H) 0 1) sc21H))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= sc21G 1))
(assert (<= sc21H 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (<= (str.len var22G) 1))
(assert (<= (str.len var22H) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= (str.++ preG (str.++ stem22 sufG)) (str.++ unch122G (str.++ ch22G unch222G))))
(assert (= (str.++ preH (str.++ stem22 sufH)) (str.++ unch122H (str.++ ch22H unch222H))))
(assert (= "1r3b" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "1rHbO" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "1rHbjX" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (= (ite (= ch22G var22G) 0 1) sc22G))
(assert (= (ite (= ch22H var22H) 0 1) sc22H))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= sc22G 1))
(assert (<= sc22H 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (<= (str.len var23G) 1))
(assert (<= (str.len var23H) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= (str.++ preG (str.++ stem23 sufG)) (str.++ unch123G (str.++ ch23G unch223G))))
(assert (= (str.++ preH (str.++ stem23 sufH)) (str.++ unch123H (str.++ ch23H unch223H))))
(assert (= "l4bjid" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= "l4bHda" (str.++ unch123B (str.++ var23B unch223B))))
(assert (= "l4bHgji" (str.++ unch123C (str.++ var23C unch223C))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (= (ite (= ch23G var23G) 0 1) sc23G))
(assert (= (ite (= ch23H var23H) 0 1) sc23H))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= sc23G 1))
(assert (<= sc23H 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (<= (str.len var24G) 1))
(assert (<= (str.len var24H) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= (str.++ preG (str.++ stem24 sufG)) (str.++ unch124G (str.++ ch24G unch224G))))
(assert (= (str.++ preH (str.++ stem24 sufH)) (str.++ unch124H (str.++ ch24H unch224H))))
(assert (= "b4rji1" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= "b4rH1a" (str.++ unch124B (str.++ var24B unch224B))))
(assert (= "b4rHzji" (str.++ unch124C (str.++ var24C unch224C))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (= (ite (= ch24G var24G) 0 1) sc24G))
(assert (= (ite (= ch24H var24H) 0 1) sc24H))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= sc24G 1))
(assert (<= sc24H 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (<= (str.len var25G) 1))
(assert (<= (str.len var25H) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= (str.++ preG (str.++ stem25 sufG)) (str.++ unch125G (str.++ ch25G unch225G))))
(assert (= (str.++ preH (str.++ stem25 sufH)) (str.++ unch125H (str.++ ch25H unch225H))))
(assert (= "pHrjX1" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= "pHr21a" (str.++ unch125B (str.++ var25B unch225B))))
(assert (= "pHr2zji" (str.++ unch125C (str.++ var25C unch225C))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (= (ite (= ch25G var25G) 0 1) sc25G))
(assert (= (ite (= ch25H var25H) 0 1) sc25H))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= sc25G 1))
(assert (<= sc25H 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (<= (str.len var26G) 1))
(assert (<= (str.len var26H) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= (str.++ preG (str.++ stem26 sufG)) (str.++ unch126G (str.++ ch26G unch226G))))
(assert (= (str.++ preH (str.++ stem26 sufH)) (str.++ unch126H (str.++ ch26H unch226H))))
(assert (= "porjX1" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= "por21a" (str.++ unch126B (str.++ var26B unch226B))))
(assert (= "por2zji" (str.++ unch126C (str.++ var26C unch226C))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (= (ite (= ch26G var26G) 0 1) sc26G))
(assert (= (ite (= ch26H var26H) 0 1) sc26H))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= sc26G 1))
(assert (<= sc26H 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (<= (str.len var27G) 1))
(assert (<= (str.len var27H) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= (str.++ preG (str.++ stem27 sufG)) (str.++ unch127G (str.++ ch27G unch227G))))
(assert (= (str.++ preH (str.++ stem27 sufH)) (str.++ unch127H (str.++ ch27H unch227H))))
(assert (= "bolj3k" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= "boljHkO" (str.++ unch127B (str.++ var27B unch227B))))
(assert (= "boljHtsjX" (str.++ unch127C (str.++ var27C unch227C))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (= (ite (= ch27G var27G) 0 1) sc27G))
(assert (= (ite (= ch27H var27H) 0 1) sc27H))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= sc27G 1))
(assert (<= sc27H 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (<= (str.len var28G) 1))
(assert (<= (str.len var28H) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= (str.++ preG (str.++ stem28 sufG)) (str.++ unch128G (str.++ ch28G unch228G))))
(assert (= (str.++ preH (str.++ stem28 sufH)) (str.++ unch128H (str.++ ch28H unch228H))))
(assert (= "v2rji1" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= "v2ro1a" (str.++ unch128B (str.++ var28B unch228B))))
(assert (= "v2rozji" (str.++ unch128C (str.++ var28C unch228C))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (= (ite (= ch28G var28G) 0 1) sc28G))
(assert (= (ite (= ch28H var28H) 0 1) sc28H))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= sc28G 1))
(assert (<= sc28H 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (<= (str.len var29G) 1))
(assert (<= (str.len var29H) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= (str.++ preG (str.++ stem29 sufG)) (str.++ unch129G (str.++ ch29G unch229G))))
(assert (= (str.++ preH (str.++ stem29 sufH)) (str.++ unch129H (str.++ ch29H unch229H))))
(assert (= "k2nHk" (str.++ unch129A (str.++ var29A unch229A))))
(assert (= "k2nHka" (str.++ unch129B (str.++ var29B unch229B))))
(assert (= "k2nHtsji" (str.++ unch129C (str.++ var29C unch229C))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (= (ite (= ch29G var29G) 0 1) sc29G))
(assert (= (ite (= ch29H var29H) 0 1) sc29H))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= sc29G 1))
(assert (<= sc29H 1))
(assert (<= (str.len var30A) 1))
(assert (<= (str.len var30B) 1))
(assert (<= (str.len var30C) 1))
(assert (<= (str.len var30D) 1))
(assert (<= (str.len var30E) 1))
(assert (<= (str.len var30F) 1))
(assert (<= (str.len var30G) 1))
(assert (<= (str.len var30H) 1))
(assert (= (str.++ preA (str.++ stem30 sufA)) (str.++ unch130A (str.++ ch30A unch230A))))
(assert (= (str.++ preB (str.++ stem30 sufB)) (str.++ unch130B (str.++ ch30B unch230B))))
(assert (= (str.++ preC (str.++ stem30 sufC)) (str.++ unch130C (str.++ ch30C unch230C))))
(assert (= (str.++ preD (str.++ stem30 sufD)) (str.++ unch130D (str.++ ch30D unch230D))))
(assert (= (str.++ preE (str.++ stem30 sufE)) (str.++ unch130E (str.++ ch30E unch230E))))
(assert (= (str.++ preF (str.++ stem30 sufF)) (str.++ unch130F (str.++ ch30F unch230F))))
(assert (= (str.++ preG (str.++ stem30 sufG)) (str.++ unch130G (str.++ ch30G unch230G))))
(assert (= (str.++ preH (str.++ stem30 sufH)) (str.++ unch130H (str.++ ch30H unch230H))))
(assert (= "p2tjik" (str.++ unch130A (str.++ var30A unch230A))))
(assert (= "pot2ka" (str.++ unch130B (str.++ var30B unch230B))))
(assert (= "pot2tsji" (str.++ unch130C (str.++ var30C unch230C))))
(assert (= (str.len stem30) l30))
(assert (= (ite (= ch30A var30A) 0 1) sc30A))
(assert (= (ite (= ch30B var30B) 0 1) sc30B))
(assert (= (ite (= ch30C var30C) 0 1) sc30C))
(assert (= (ite (= ch30D var30D) 0 1) sc30D))
(assert (= (ite (= ch30E var30E) 0 1) sc30E))
(assert (= (ite (= ch30F var30F) 0 1) sc30F))
(assert (= (ite (= ch30G var30G) 0 1) sc30G))
(assert (= (ite (= ch30H var30H) 0 1) sc30H))
(assert (<= sc30A 1))
(assert (<= sc30B 1))
(assert (<= sc30C 1))
(assert (<= sc30D 1))
(assert (<= sc30E 1))
(assert (<= sc30F 1))
(assert (<= sc30G 1))
(assert (<= sc30H 1))
(assert (<= (str.len var31A) 1))
(assert (<= (str.len var31B) 1))
(assert (<= (str.len var31C) 1))
(assert (<= (str.len var31D) 1))
(assert (<= (str.len var31E) 1))
(assert (<= (str.len var31F) 1))
(assert (<= (str.len var31G) 1))
(assert (<= (str.len var31H) 1))
(assert (= (str.++ preA (str.++ stem31 sufA)) (str.++ unch131A (str.++ ch31A unch231A))))
(assert (= (str.++ preB (str.++ stem31 sufB)) (str.++ unch131B (str.++ ch31B unch231B))))
(assert (= (str.++ preC (str.++ stem31 sufC)) (str.++ unch131C (str.++ ch31C unch231C))))
(assert (= (str.++ preD (str.++ stem31 sufD)) (str.++ unch131D (str.++ ch31D unch231D))))
(assert (= (str.++ preE (str.++ stem31 sufE)) (str.++ unch131E (str.++ ch31E unch231E))))
(assert (= (str.++ preF (str.++ stem31 sufF)) (str.++ unch131F (str.++ ch31F unch231F))))
(assert (= (str.++ preG (str.++ stem31 sufG)) (str.++ unch131G (str.++ ch31G unch231G))))
(assert (= (str.++ preH (str.++ stem31 sufH)) (str.++ unch131H (str.++ ch31H unch231H))))
(assert (= "tjXk" (str.++ unch131A (str.++ var31A unch231A))))
(assert (= "t2ka" (str.++ unch131B (str.++ var31B unch231B))))
(assert (= "t2tsji" (str.++ unch131C (str.++ var31C unch231C))))
(assert (= (str.len stem31) l31))
(assert (= (ite (= ch31A var31A) 0 1) sc31A))
(assert (= (ite (= ch31B var31B) 0 1) sc31B))
(assert (= (ite (= ch31C var31C) 0 1) sc31C))
(assert (= (ite (= ch31D var31D) 0 1) sc31D))
(assert (= (ite (= ch31E var31E) 0 1) sc31E))
(assert (= (ite (= ch31F var31F) 0 1) sc31F))
(assert (= (ite (= ch31G var31G) 0 1) sc31G))
(assert (= (ite (= ch31H var31H) 0 1) sc31H))
(assert (<= sc31A 1))
(assert (<= sc31B 1))
(assert (<= sc31C 1))
(assert (<= sc31D 1))
(assert (<= sc31E 1))
(assert (<= sc31F 1))
(assert (<= sc31G 1))
(assert (<= sc31H 1))
(assert (<= (str.len var32A) 1))
(assert (<= (str.len var32B) 1))
(assert (<= (str.len var32C) 1))
(assert (<= (str.len var32D) 1))
(assert (<= (str.len var32E) 1))
(assert (<= (str.len var32F) 1))
(assert (<= (str.len var32G) 1))
(assert (<= (str.len var32H) 1))
(assert (= (str.++ preA (str.++ stem32 sufA)) (str.++ unch132A (str.++ ch32A unch232A))))
(assert (= (str.++ preB (str.++ stem32 sufB)) (str.++ unch132B (str.++ ch32B unch232B))))
(assert (= (str.++ preC (str.++ stem32 sufC)) (str.++ unch132C (str.++ ch32C unch232C))))
(assert (= (str.++ preD (str.++ stem32 sufD)) (str.++ unch132D (str.++ ch32D unch232D))))
(assert (= (str.++ preE (str.++ stem32 sufE)) (str.++ unch132E (str.++ ch32E unch232E))))
(assert (= (str.++ preF (str.++ stem32 sufF)) (str.++ unch132F (str.++ ch32F unch232F))))
(assert (= (str.++ preG (str.++ stem32 sufG)) (str.++ unch132G (str.++ ch32G unch232G))))
(assert (= (str.++ preH (str.++ stem32 sufH)) (str.++ unch132H (str.++ ch32H unch232H))))
(assert (= "kjXl" (str.++ unch132A (str.++ var32A unch232A))))
(assert (= "kolO" (str.++ unch132B (str.++ var32B unch232B))))
(assert (= "koljX" (str.++ unch132C (str.++ var32C unch232C))))
(assert (= (str.len stem32) l32))
(assert (= (ite (= ch32A var32A) 0 1) sc32A))
(assert (= (ite (= ch32B var32B) 0 1) sc32B))
(assert (= (ite (= ch32C var32C) 0 1) sc32C))
(assert (= (ite (= ch32D var32D) 0 1) sc32D))
(assert (= (ite (= ch32E var32E) 0 1) sc32E))
(assert (= (ite (= ch32F var32F) 0 1) sc32F))
(assert (= (ite (= ch32G var32G) 0 1) sc32G))
(assert (= (ite (= ch32H var32H) 0 1) sc32H))
(assert (<= sc32A 1))
(assert (<= sc32B 1))
(assert (<= sc32C 1))
(assert (<= sc32D 1))
(assert (<= sc32E 1))
(assert (<= sc32F 1))
(assert (<= sc32G 1))
(assert (<= sc32H 1))
(assert (<= (str.len var33A) 1))
(assert (<= (str.len var33B) 1))
(assert (<= (str.len var33C) 1))
(assert (<= (str.len var33D) 1))
(assert (<= (str.len var33E) 1))
(assert (<= (str.len var33F) 1))
(assert (<= (str.len var33G) 1))
(assert (<= (str.len var33H) 1))
(assert (= (str.++ preA (str.++ stem33 sufA)) (str.++ unch133A (str.++ ch33A unch233A))))
(assert (= (str.++ preB (str.++ stem33 sufB)) (str.++ unch133B (str.++ ch33B unch233B))))
(assert (= (str.++ preC (str.++ stem33 sufC)) (str.++ unch133C (str.++ ch33C unch233C))))
(assert (= (str.++ preD (str.++ stem33 sufD)) (str.++ unch133D (str.++ ch33D unch233D))))
(assert (= (str.++ preE (str.++ stem33 sufE)) (str.++ unch133E (str.++ ch33E unch233E))))
(assert (= (str.++ preF (str.++ stem33 sufF)) (str.++ unch133F (str.++ ch33F unch233F))))
(assert (= (str.++ preG (str.++ stem33 sufG)) (str.++ unch133G (str.++ ch33G unch233G))))
(assert (= (str.++ preH (str.++ stem33 sufH)) (str.++ unch133H (str.++ ch33H unch233H))))
(assert (= "kovOlj" (str.++ unch133D (str.++ var33D unch233D))))
(assert (= "kovalj3" (str.++ unch133E (str.++ var33E unch233E))))
(assert (= "koval3" (str.++ unch133F (str.++ var33F unch233F))))
(assert (= (str.len stem33) l33))
(assert (= (ite (= ch33A var33A) 0 1) sc33A))
(assert (= (ite (= ch33B var33B) 0 1) sc33B))
(assert (= (ite (= ch33C var33C) 0 1) sc33C))
(assert (= (ite (= ch33D var33D) 0 1) sc33D))
(assert (= (ite (= ch33E var33E) 0 1) sc33E))
(assert (= (ite (= ch33F var33F) 0 1) sc33F))
(assert (= (ite (= ch33G var33G) 0 1) sc33G))
(assert (= (ite (= ch33H var33H) 0 1) sc33H))
(assert (<= sc33A 1))
(assert (<= sc33B 1))
(assert (<= sc33C 1))
(assert (<= sc33D 1))
(assert (<= sc33E 1))
(assert (<= sc33F 1))
(assert (<= sc33G 1))
(assert (<= sc33H 1))
(assert (<= (str.len var34A) 1))
(assert (<= (str.len var34B) 1))
(assert (<= (str.len var34C) 1))
(assert (<= (str.len var34D) 1))
(assert (<= (str.len var34E) 1))
(assert (<= (str.len var34F) 1))
(assert (<= (str.len var34G) 1))
(assert (<= (str.len var34H) 1))
(assert (= (str.++ preA (str.++ stem34 sufA)) (str.++ unch134A (str.++ ch34A unch234A))))
(assert (= (str.++ preB (str.++ stem34 sufB)) (str.++ unch134B (str.++ ch34B unch234B))))
(assert (= (str.++ preC (str.++ stem34 sufC)) (str.++ unch134C (str.++ ch34C unch234C))))
(assert (= (str.++ preD (str.++ stem34 sufD)) (str.++ unch134D (str.++ ch34D unch234D))))
(assert (= (str.++ preE (str.++ stem34 sufE)) (str.++ unch134E (str.++ ch34E unch234E))))
(assert (= (str.++ preF (str.++ stem34 sufF)) (str.++ unch134F (str.++ ch34F unch234F))))
(assert (= (str.++ preG (str.++ stem34 sufG)) (str.++ unch134G (str.++ ch34G unch234G))))
(assert (= (str.++ preH (str.++ stem34 sufH)) (str.++ unch134H (str.++ ch34H unch234H))))
(assert (= "DmjXlj" (str.++ unch134D (str.++ var34D unch234D))))
(assert (= "Dmjilj3" (str.++ unch134E (str.++ var34E unch234E))))
(assert (= "Dmjil3" (str.++ unch134F (str.++ var34F unch234F))))
(assert (= (str.len stem34) l34))
(assert (= (ite (= ch34A var34A) 0 1) sc34A))
(assert (= (ite (= ch34B var34B) 0 1) sc34B))
(assert (= (ite (= ch34C var34C) 0 1) sc34C))
(assert (= (ite (= ch34D var34D) 0 1) sc34D))
(assert (= (ite (= ch34E var34E) 0 1) sc34E))
(assert (= (ite (= ch34F var34F) 0 1) sc34F))
(assert (= (ite (= ch34G var34G) 0 1) sc34G))
(assert (= (ite (= ch34H var34H) 0 1) sc34H))
(assert (<= sc34A 1))
(assert (<= sc34B 1))
(assert (<= sc34C 1))
(assert (<= sc34D 1))
(assert (<= sc34E 1))
(assert (<= sc34F 1))
(assert (<= sc34G 1))
(assert (<= sc34H 1))
(assert (<= (str.len var35A) 1))
(assert (<= (str.len var35B) 1))
(assert (<= (str.len var35C) 1))
(assert (<= (str.len var35D) 1))
(assert (<= (str.len var35E) 1))
(assert (<= (str.len var35F) 1))
(assert (<= (str.len var35G) 1))
(assert (<= (str.len var35H) 1))
(assert (= (str.++ preA (str.++ stem35 sufA)) (str.++ unch135A (str.++ ch35A unch235A))))
(assert (= (str.++ preB (str.++ stem35 sufB)) (str.++ unch135B (str.++ ch35B unch235B))))
(assert (= (str.++ preC (str.++ stem35 sufC)) (str.++ unch135C (str.++ ch35C unch235C))))
(assert (= (str.++ preD (str.++ stem35 sufD)) (str.++ unch135D (str.++ ch35D unch235D))))
(assert (= (str.++ preE (str.++ stem35 sufE)) (str.++ unch135E (str.++ ch35E unch235E))))
(assert (= (str.++ preF (str.++ stem35 sufF)) (str.++ unch135F (str.++ ch35F unch235F))))
(assert (= (str.++ preG (str.++ stem35 sufG)) (str.++ unch135G (str.++ ch35G unch235G))))
(assert (= (str.++ preH (str.++ stem35 sufH)) (str.++ unch135H (str.++ ch35H unch235H))))
(assert (= "kjrjXlj" (str.++ unch135D (str.++ var35D unch235D))))
(assert (= "kjrjilj3" (str.++ unch135E (str.++ var35E unch235E))))
(assert (= "kjrjil3" (str.++ unch135F (str.++ var35F unch235F))))
(assert (= (str.len stem35) l35))
(assert (= (ite (= ch35A var35A) 0 1) sc35A))
(assert (= (ite (= ch35B var35B) 0 1) sc35B))
(assert (= (ite (= ch35C var35C) 0 1) sc35C))
(assert (= (ite (= ch35D var35D) 0 1) sc35D))
(assert (= (ite (= ch35E var35E) 0 1) sc35E))
(assert (= (ite (= ch35F var35F) 0 1) sc35F))
(assert (= (ite (= ch35G var35G) 0 1) sc35G))
(assert (= (ite (= ch35H var35H) 0 1) sc35H))
(assert (<= sc35A 1))
(assert (<= sc35B 1))
(assert (<= sc35C 1))
(assert (<= sc35D 1))
(assert (<= sc35E 1))
(assert (<= sc35F 1))
(assert (<= sc35G 1))
(assert (<= sc35H 1))
(assert (<= (str.len var36A) 1))
(assert (<= (str.len var36B) 1))
(assert (<= (str.len var36C) 1))
(assert (<= (str.len var36D) 1))
(assert (<= (str.len var36E) 1))
(assert (<= (str.len var36F) 1))
(assert (<= (str.len var36G) 1))
(assert (<= (str.len var36H) 1))
(assert (= (str.++ preA (str.++ stem36 sufA)) (str.++ unch136A (str.++ ch36A unch236A))))
(assert (= (str.++ preB (str.++ stem36 sufB)) (str.++ unch136B (str.++ ch36B unch236B))))
(assert (= (str.++ preC (str.++ stem36 sufC)) (str.++ unch136C (str.++ ch36C unch236C))))
(assert (= (str.++ preD (str.++ stem36 sufD)) (str.++ unch136D (str.++ ch36D unch236D))))
(assert (= (str.++ preE (str.++ stem36 sufE)) (str.++ unch136E (str.++ ch36E unch236E))))
(assert (= (str.++ preF (str.++ stem36 sufF)) (str.++ unch136F (str.++ ch36F unch236F))))
(assert (= (str.++ preG (str.++ stem36 sufG)) (str.++ unch136G (str.++ ch36G unch236G))))
(assert (= (str.++ preH (str.++ stem36 sufH)) (str.++ unch136H (str.++ ch36H unch236H))))
(assert (= "uE3tHlj" (str.++ unch136D (str.++ var36D unch236D))))
(assert (= "uE3tHljH" (str.++ unch136E (str.++ var36E unch236E))))
(assert (= "uE3tHlH" (str.++ unch136F (str.++ var36F unch236F))))
(assert (= (str.len stem36) l36))
(assert (= (ite (= ch36A var36A) 0 1) sc36A))
(assert (= (ite (= ch36B var36B) 0 1) sc36B))
(assert (= (ite (= ch36C var36C) 0 1) sc36C))
(assert (= (ite (= ch36D var36D) 0 1) sc36D))
(assert (= (ite (= ch36E var36E) 0 1) sc36E))
(assert (= (ite (= ch36F var36F) 0 1) sc36F))
(assert (= (ite (= ch36G var36G) 0 1) sc36G))
(assert (= (ite (= ch36H var36H) 0 1) sc36H))
(assert (<= sc36A 1))
(assert (<= sc36B 1))
(assert (<= sc36C 1))
(assert (<= sc36D 1))
(assert (<= sc36E 1))
(assert (<= sc36F 1))
(assert (<= sc36G 1))
(assert (<= sc36H 1))
(assert (<= (str.len var37A) 1))
(assert (<= (str.len var37B) 1))
(assert (<= (str.len var37C) 1))
(assert (<= (str.len var37D) 1))
(assert (<= (str.len var37E) 1))
(assert (<= (str.len var37F) 1))
(assert (<= (str.len var37G) 1))
(assert (<= (str.len var37H) 1))
(assert (= (str.++ preA (str.++ stem37 sufA)) (str.++ unch137A (str.++ ch37A unch237A))))
(assert (= (str.++ preB (str.++ stem37 sufB)) (str.++ unch137B (str.++ ch37B unch237B))))
(assert (= (str.++ preC (str.++ stem37 sufC)) (str.++ unch137C (str.++ ch37C unch237C))))
(assert (= (str.++ preD (str.++ stem37 sufD)) (str.++ unch137D (str.++ ch37D unch237D))))
(assert (= (str.++ preE (str.++ stem37 sufE)) (str.++ unch137E (str.++ ch37E unch237E))))
(assert (= (str.++ preF (str.++ stem37 sufF)) (str.++ unch137F (str.++ ch37F unch237F))))
(assert (= (str.++ preG (str.++ stem37 sufG)) (str.++ unch137G (str.++ ch37G unch237G))))
(assert (= (str.++ preH (str.++ stem37 sufH)) (str.++ unch137H (str.++ ch37H unch237H))))
(assert (= "gr4bjinj" (str.++ unch137D (str.++ var37D unch237D))))
(assert (= "gr4bHnjH" (str.++ unch137E (str.++ var37E unch237E))))
(assert (= "gr4bHnH" (str.++ unch137F (str.++ var37F unch237F))))
(assert (= (str.len stem37) l37))
(assert (= (ite (= ch37A var37A) 0 1) sc37A))
(assert (= (ite (= ch37B var37B) 0 1) sc37B))
(assert (= (ite (= ch37C var37C) 0 1) sc37C))
(assert (= (ite (= ch37D var37D) 0 1) sc37D))
(assert (= (ite (= ch37E var37E) 0 1) sc37E))
(assert (= (ite (= ch37F var37F) 0 1) sc37F))
(assert (= (ite (= ch37G var37G) 0 1) sc37G))
(assert (= (ite (= ch37H var37H) 0 1) sc37H))
(assert (<= sc37A 1))
(assert (<= sc37B 1))
(assert (<= sc37C 1))
(assert (<= sc37D 1))
(assert (<= sc37E 1))
(assert (<= sc37F 1))
(assert (<= sc37G 1))
(assert (<= sc37H 1))
(assert (<= (str.len var38A) 1))
(assert (<= (str.len var38B) 1))
(assert (<= (str.len var38C) 1))
(assert (<= (str.len var38D) 1))
(assert (<= (str.len var38E) 1))
(assert (<= (str.len var38F) 1))
(assert (<= (str.len var38G) 1))
(assert (<= (str.len var38H) 1))
(assert (= (str.++ preA (str.++ stem38 sufA)) (str.++ unch138A (str.++ ch38A unch238A))))
(assert (= (str.++ preB (str.++ stem38 sufB)) (str.++ unch138B (str.++ ch38B unch238B))))
(assert (= (str.++ preC (str.++ stem38 sufC)) (str.++ unch138C (str.++ ch38C unch238C))))
(assert (= (str.++ preD (str.++ stem38 sufD)) (str.++ unch138D (str.++ ch38D unch238D))))
(assert (= (str.++ preE (str.++ stem38 sufE)) (str.++ unch138E (str.++ ch38E unch238E))))
(assert (= (str.++ preF (str.++ stem38 sufF)) (str.++ unch138F (str.++ ch38F unch238F))))
(assert (= (str.++ preG (str.++ stem38 sufG)) (str.++ unch138G (str.++ ch38G unch238G))))
(assert (= (str.++ preH (str.++ stem38 sufH)) (str.++ unch138H (str.++ ch38H unch238H))))
(assert (= "2lHnj" (str.++ unch138D (str.++ var38D unch238D))))
(assert (= "2lHnjH" (str.++ unch138E (str.++ var38E unch238E))))
(assert (= "2lHnH" (str.++ unch138F (str.++ var38F unch238F))))
(assert (= (str.len stem38) l38))
(assert (= (ite (= ch38A var38A) 0 1) sc38A))
(assert (= (ite (= ch38B var38B) 0 1) sc38B))
(assert (= (ite (= ch38C var38C) 0 1) sc38C))
(assert (= (ite (= ch38D var38D) 0 1) sc38D))
(assert (= (ite (= ch38E var38E) 0 1) sc38E))
(assert (= (ite (= ch38F var38F) 0 1) sc38F))
(assert (= (ite (= ch38G var38G) 0 1) sc38G))
(assert (= (ite (= ch38H var38H) 0 1) sc38H))
(assert (<= sc38A 1))
(assert (<= sc38B 1))
(assert (<= sc38C 1))
(assert (<= sc38D 1))
(assert (<= sc38E 1))
(assert (<= sc38F 1))
(assert (<= sc38G 1))
(assert (<= sc38H 1))
(assert (<= (str.len var39A) 1))
(assert (<= (str.len var39B) 1))
(assert (<= (str.len var39C) 1))
(assert (<= (str.len var39D) 1))
(assert (<= (str.len var39E) 1))
(assert (<= (str.len var39F) 1))
(assert (<= (str.len var39G) 1))
(assert (<= (str.len var39H) 1))
(assert (= (str.++ preA (str.++ stem39 sufA)) (str.++ unch139A (str.++ ch39A unch239A))))
(assert (= (str.++ preB (str.++ stem39 sufB)) (str.++ unch139B (str.++ ch39B unch239B))))
(assert (= (str.++ preC (str.++ stem39 sufC)) (str.++ unch139C (str.++ ch39C unch239C))))
(assert (= (str.++ preD (str.++ stem39 sufD)) (str.++ unch139D (str.++ ch39D unch239D))))
(assert (= (str.++ preE (str.++ stem39 sufE)) (str.++ unch139E (str.++ ch39E unch239E))))
(assert (= (str.++ preF (str.++ stem39 sufF)) (str.++ unch139F (str.++ ch39F unch239F))))
(assert (= (str.++ preG (str.++ stem39 sufG)) (str.++ unch139G (str.++ ch39G unch239G))))
(assert (= (str.++ preH (str.++ stem39 sufH)) (str.++ unch139H (str.++ ch39H unch239H))))
(assert (= "jaEjmjXnj" (str.++ unch139D (str.++ var39D unch239D))))
(assert (= "jaEm4njH" (str.++ unch139E (str.++ var39E unch239E))))
(assert (= "jaEm4nH" (str.++ unch139F (str.++ var39F unch239F))))
(assert (= (str.len stem39) l39))
(assert (= (ite (= ch39A var39A) 0 1) sc39A))
(assert (= (ite (= ch39B var39B) 0 1) sc39B))
(assert (= (ite (= ch39C var39C) 0 1) sc39C))
(assert (= (ite (= ch39D var39D) 0 1) sc39D))
(assert (= (ite (= ch39E var39E) 0 1) sc39E))
(assert (= (ite (= ch39F var39F) 0 1) sc39F))
(assert (= (ite (= ch39G var39G) 0 1) sc39G))
(assert (= (ite (= ch39H var39H) 0 1) sc39H))
(assert (<= sc39A 1))
(assert (<= sc39B 1))
(assert (<= sc39C 1))
(assert (<= sc39D 1))
(assert (<= sc39E 1))
(assert (<= sc39F 1))
(assert (<= sc39G 1))
(assert (<= sc39H 1))
(assert (<= (str.len var40A) 1))
(assert (<= (str.len var40B) 1))
(assert (<= (str.len var40C) 1))
(assert (<= (str.len var40D) 1))
(assert (<= (str.len var40E) 1))
(assert (<= (str.len var40F) 1))
(assert (<= (str.len var40G) 1))
(assert (<= (str.len var40H) 1))
(assert (= (str.++ preA (str.++ stem40 sufA)) (str.++ unch140A (str.++ ch40A unch240A))))
(assert (= (str.++ preB (str.++ stem40 sufB)) (str.++ unch140B (str.++ ch40B unch240B))))
(assert (= (str.++ preC (str.++ stem40 sufC)) (str.++ unch140C (str.++ ch40C unch240C))))
(assert (= (str.++ preD (str.++ stem40 sufD)) (str.++ unch140D (str.++ ch40D unch240D))))
(assert (= (str.++ preE (str.++ stem40 sufE)) (str.++ unch140E (str.++ ch40E unch240E))))
(assert (= (str.++ preF (str.++ stem40 sufF)) (str.++ unch140F (str.++ ch40F unch240F))))
(assert (= (str.++ preG (str.++ stem40 sufG)) (str.++ unch140G (str.++ ch40G unch240G))))
(assert (= (str.++ preH (str.++ stem40 sufH)) (str.++ unch140H (str.++ ch40H unch240H))))
(assert (= "jOsjinj" (str.++ unch140D (str.++ var40D unch240D))))
(assert (= "jOsHnjH" (str.++ unch140E (str.++ var40E unch240E))))
(assert (= "jOsHnH" (str.++ unch140F (str.++ var40F unch240F))))
(assert (= (str.len stem40) l40))
(assert (= (ite (= ch40A var40A) 0 1) sc40A))
(assert (= (ite (= ch40B var40B) 0 1) sc40B))
(assert (= (ite (= ch40C var40C) 0 1) sc40C))
(assert (= (ite (= ch40D var40D) 0 1) sc40D))
(assert (= (ite (= ch40E var40E) 0 1) sc40E))
(assert (= (ite (= ch40F var40F) 0 1) sc40F))
(assert (= (ite (= ch40G var40G) 0 1) sc40G))
(assert (= (ite (= ch40H var40H) 0 1) sc40H))
(assert (<= sc40A 1))
(assert (<= sc40B 1))
(assert (<= sc40C 1))
(assert (<= sc40D 1))
(assert (<= sc40E 1))
(assert (<= sc40F 1))
(assert (<= sc40G 1))
(assert (<= sc40H 1))
(assert (<= (str.len var41A) 1))
(assert (<= (str.len var41B) 1))
(assert (<= (str.len var41C) 1))
(assert (<= (str.len var41D) 1))
(assert (<= (str.len var41E) 1))
(assert (<= (str.len var41F) 1))
(assert (<= (str.len var41G) 1))
(assert (<= (str.len var41H) 1))
(assert (= (str.++ preA (str.++ stem41 sufA)) (str.++ unch141A (str.++ ch41A unch241A))))
(assert (= (str.++ preB (str.++ stem41 sufB)) (str.++ unch141B (str.++ ch41B unch241B))))
(assert (= (str.++ preC (str.++ stem41 sufC)) (str.++ unch141C (str.++ ch41C unch241C))))
(assert (= (str.++ preD (str.++ stem41 sufD)) (str.++ unch141D (str.++ ch41D unch241D))))
(assert (= (str.++ preE (str.++ stem41 sufE)) (str.++ unch141E (str.++ ch41E unch241E))))
(assert (= (str.++ preF (str.++ stem41 sufF)) (str.++ unch141F (str.++ ch41F unch241F))))
(assert (= (str.++ preG (str.++ stem41 sufG)) (str.++ unch141G (str.++ ch41G unch241G))))
(assert (= (str.++ preH (str.++ stem41 sufH)) (str.++ unch141H (str.++ ch41H unch241H))))
(assert (= "zj3kj" (str.++ unch141D (str.++ var41D unch241D))))
(assert (= "zj3kjH" (str.++ unch141E (str.++ var41E unch241E))))
(assert (= "zj3tH" (str.++ unch141F (str.++ var41F unch241F))))
(assert (= (str.len stem41) l41))
(assert (= (ite (= ch41A var41A) 0 1) sc41A))
(assert (= (ite (= ch41B var41B) 0 1) sc41B))
(assert (= (ite (= ch41C var41C) 0 1) sc41C))
(assert (= (ite (= ch41D var41D) 0 1) sc41D))
(assert (= (ite (= ch41E var41E) 0 1) sc41E))
(assert (= (ite (= ch41F var41F) 0 1) sc41F))
(assert (= (ite (= ch41G var41G) 0 1) sc41G))
(assert (= (ite (= ch41H var41H) 0 1) sc41H))
(assert (<= sc41A 1))
(assert (<= sc41B 1))
(assert (<= sc41C 1))
(assert (<= sc41D 1))
(assert (<= sc41E 1))
(assert (<= sc41F 1))
(assert (<= sc41G 1))
(assert (<= sc41H 1))
(assert (<= (str.len var42A) 1))
(assert (<= (str.len var42B) 1))
(assert (<= (str.len var42C) 1))
(assert (<= (str.len var42D) 1))
(assert (<= (str.len var42E) 1))
(assert (<= (str.len var42F) 1))
(assert (<= (str.len var42G) 1))
(assert (<= (str.len var42H) 1))
(assert (= (str.++ preA (str.++ stem42 sufA)) (str.++ unch142A (str.++ ch42A unch242A))))
(assert (= (str.++ preB (str.++ stem42 sufB)) (str.++ unch142B (str.++ ch42B unch242B))))
(assert (= (str.++ preC (str.++ stem42 sufC)) (str.++ unch142C (str.++ ch42C unch242C))))
(assert (= (str.++ preD (str.++ stem42 sufD)) (str.++ unch142D (str.++ ch42D unch242D))))
(assert (= (str.++ preE (str.++ stem42 sufE)) (str.++ unch142E (str.++ ch42E unch242E))))
(assert (= (str.++ preF (str.++ stem42 sufF)) (str.++ unch142F (str.++ ch42F unch242F))))
(assert (= (str.++ preG (str.++ stem42 sufG)) (str.++ unch142G (str.++ ch42G unch242G))))
(assert (= (str.++ preH (str.++ stem42 sufH)) (str.++ unch142H (str.++ ch42H unch242H))))
(assert (= "mOsjkj" (str.++ unch142G (str.++ var42G unch242G))))
(assert (= "mOstH" (str.++ unch142H (str.++ var42H unch242H))))
(assert (= (str.len stem42) l42))
(assert (= (ite (= ch42A var42A) 0 1) sc42A))
(assert (= (ite (= ch42B var42B) 0 1) sc42B))
(assert (= (ite (= ch42C var42C) 0 1) sc42C))
(assert (= (ite (= ch42D var42D) 0 1) sc42D))
(assert (= (ite (= ch42E var42E) 0 1) sc42E))
(assert (= (ite (= ch42F var42F) 0 1) sc42F))
(assert (= (ite (= ch42G var42G) 0 1) sc42G))
(assert (= (ite (= ch42H var42H) 0 1) sc42H))
(assert (<= sc42A 1))
(assert (<= sc42B 1))
(assert (<= sc42C 1))
(assert (<= sc42D 1))
(assert (<= sc42E 1))
(assert (<= sc42F 1))
(assert (<= sc42G 1))
(assert (<= sc42H 1))
(assert (<= (str.len var43A) 1))
(assert (<= (str.len var43B) 1))
(assert (<= (str.len var43C) 1))
(assert (<= (str.len var43D) 1))
(assert (<= (str.len var43E) 1))
(assert (<= (str.len var43F) 1))
(assert (<= (str.len var43G) 1))
(assert (<= (str.len var43H) 1))
(assert (= (str.++ preA (str.++ stem43 sufA)) (str.++ unch143A (str.++ ch43A unch243A))))
(assert (= (str.++ preB (str.++ stem43 sufB)) (str.++ unch143B (str.++ ch43B unch243B))))
(assert (= (str.++ preC (str.++ stem43 sufC)) (str.++ unch143C (str.++ ch43C unch243C))))
(assert (= (str.++ preD (str.++ stem43 sufD)) (str.++ unch143D (str.++ ch43D unch243D))))
(assert (= (str.++ preE (str.++ stem43 sufE)) (str.++ unch143E (str.++ ch43E unch243E))))
(assert (= (str.++ preF (str.++ stem43 sufF)) (str.++ unch143F (str.++ ch43F unch243F))))
(assert (= (str.++ preG (str.++ stem43 sufG)) (str.++ unch143G (str.++ ch43G unch243G))))
(assert (= (str.++ preH (str.++ stem43 sufH)) (str.++ unch143H (str.++ ch43H unch243H))))
(assert (= "sjmjXrjkj" (str.++ unch143G (str.++ var43G unch243G))))
(assert (= "sm4rtH" (str.++ unch143H (str.++ var43H unch243H))))
(assert (= (str.len stem43) l43))
(assert (= (ite (= ch43A var43A) 0 1) sc43A))
(assert (= (ite (= ch43B var43B) 0 1) sc43B))
(assert (= (ite (= ch43C var43C) 0 1) sc43C))
(assert (= (ite (= ch43D var43D) 0 1) sc43D))
(assert (= (ite (= ch43E var43E) 0 1) sc43E))
(assert (= (ite (= ch43F var43F) 0 1) sc43F))
(assert (= (ite (= ch43G var43G) 0 1) sc43G))
(assert (= (ite (= ch43H var43H) 0 1) sc43H))
(assert (<= sc43A 1))
(assert (<= sc43B 1))
(assert (<= sc43C 1))
(assert (<= sc43D 1))
(assert (<= sc43E 1))
(assert (<= sc43F 1))
(assert (<= sc43G 1))
(assert (<= sc43H 1))
(assert (<= (str.len var44A) 1))
(assert (<= (str.len var44B) 1))
(assert (<= (str.len var44C) 1))
(assert (<= (str.len var44D) 1))
(assert (<= (str.len var44E) 1))
(assert (<= (str.len var44F) 1))
(assert (<= (str.len var44G) 1))
(assert (<= (str.len var44H) 1))
(assert (= (str.++ preA (str.++ stem44 sufA)) (str.++ unch144A (str.++ ch44A unch244A))))
(assert (= (str.++ preB (str.++ stem44 sufB)) (str.++ unch144B (str.++ ch44B unch244B))))
(assert (= (str.++ preC (str.++ stem44 sufC)) (str.++ unch144C (str.++ ch44C unch244C))))
(assert (= (str.++ preD (str.++ stem44 sufD)) (str.++ unch144D (str.++ ch44D unch244D))))
(assert (= (str.++ preE (str.++ stem44 sufE)) (str.++ unch144E (str.++ ch44E unch244E))))
(assert (= (str.++ preF (str.++ stem44 sufF)) (str.++ unch144F (str.++ ch44F unch244F))))
(assert (= (str.++ preG (str.++ stem44 sufG)) (str.++ unch144G (str.++ ch44G unch244G))))
(assert (= (str.++ preH (str.++ stem44 sufH)) (str.++ unch144H (str.++ ch44H unch244H))))
(assert (= "vjXsjkj" (str.++ unch144G (str.++ var44G unch244G))))
(assert (= "vjXstH" (str.++ unch144H (str.++ var44H unch244H))))
(assert (= (str.len stem44) l44))
(assert (= (ite (= ch44A var44A) 0 1) sc44A))
(assert (= (ite (= ch44B var44B) 0 1) sc44B))
(assert (= (ite (= ch44C var44C) 0 1) sc44C))
(assert (= (ite (= ch44D var44D) 0 1) sc44D))
(assert (= (ite (= ch44E var44E) 0 1) sc44E))
(assert (= (ite (= ch44F var44F) 0 1) sc44F))
(assert (= (ite (= ch44G var44G) 0 1) sc44G))
(assert (= (ite (= ch44H var44H) 0 1) sc44H))
(assert (<= sc44A 1))
(assert (<= sc44B 1))
(assert (<= sc44C 1))
(assert (<= sc44D 1))
(assert (<= sc44E 1))
(assert (<= sc44F 1))
(assert (<= sc44G 1))
(assert (<= sc44H 1))
(assert (<= (str.len var45A) 1))
(assert (<= (str.len var45B) 1))
(assert (<= (str.len var45C) 1))
(assert (<= (str.len var45D) 1))
(assert (<= (str.len var45E) 1))
(assert (<= (str.len var45F) 1))
(assert (<= (str.len var45G) 1))
(assert (<= (str.len var45H) 1))
(assert (= (str.++ preA (str.++ stem45 sufA)) (str.++ unch145A (str.++ ch45A unch245A))))
(assert (= (str.++ preB (str.++ stem45 sufB)) (str.++ unch145B (str.++ ch45B unch245B))))
(assert (= (str.++ preC (str.++ stem45 sufC)) (str.++ unch145C (str.++ ch45C unch245C))))
(assert (= (str.++ preD (str.++ stem45 sufD)) (str.++ unch145D (str.++ ch45D unch245D))))
(assert (= (str.++ preE (str.++ stem45 sufE)) (str.++ unch145E (str.++ ch45E unch245E))))
(assert (= (str.++ preF (str.++ stem45 sufF)) (str.++ unch145F (str.++ ch45F unch245F))))
(assert (= (str.++ preG (str.++ stem45 sufG)) (str.++ unch145G (str.++ ch45G unch245G))))
(assert (= (str.++ preH (str.++ stem45 sufH)) (str.++ unch145H (str.++ ch45H unch245H))))
(assert (= "rOgjisjkj" (str.++ unch145G (str.++ var45G unch245G))))
(assert (= "rOdostH" (str.++ unch145H (str.++ var45H unch245H))))
(assert (= (str.len stem45) l45))
(assert (= (ite (= ch45A var45A) 0 1) sc45A))
(assert (= (ite (= ch45B var45B) 0 1) sc45B))
(assert (= (ite (= ch45C var45C) 0 1) sc45C))
(assert (= (ite (= ch45D var45D) 0 1) sc45D))
(assert (= (ite (= ch45E var45E) 0 1) sc45E))
(assert (= (ite (= ch45F var45F) 0 1) sc45F))
(assert (= (ite (= ch45G var45G) 0 1) sc45G))
(assert (= (ite (= ch45H var45H) 0 1) sc45H))
(assert (<= sc45A 1))
(assert (<= sc45B 1))
(assert (<= sc45C 1))
(assert (<= sc45D 1))
(assert (<= sc45E 1))
(assert (<= sc45F 1))
(assert (<= sc45G 1))
(assert (<= sc45H 1))
(assert (<= (str.len var46A) 1))
(assert (<= (str.len var46B) 1))
(assert (<= (str.len var46C) 1))
(assert (<= (str.len var46D) 1))
(assert (<= (str.len var46E) 1))
(assert (<= (str.len var46F) 1))
(assert (<= (str.len var46G) 1))
(assert (<= (str.len var46H) 1))
(assert (= (str.++ preA (str.++ stem46 sufA)) (str.++ unch146A (str.++ ch46A unch246A))))
(assert (= (str.++ preB (str.++ stem46 sufB)) (str.++ unch146B (str.++ ch46B unch246B))))
(assert (= (str.++ preC (str.++ stem46 sufC)) (str.++ unch146C (str.++ ch46C unch246C))))
(assert (= (str.++ preD (str.++ stem46 sufD)) (str.++ unch146D (str.++ ch46D unch246D))))
(assert (= (str.++ preE (str.++ stem46 sufE)) (str.++ unch146E (str.++ ch46E unch246E))))
(assert (= (str.++ preF (str.++ stem46 sufF)) (str.++ unch146F (str.++ ch46F unch246F))))
(assert (= (str.++ preG (str.++ stem46 sufG)) (str.++ unch146G (str.++ ch46G unch246G))))
(assert (= (str.++ preH (str.++ stem46 sufH)) (str.++ unch146H (str.++ ch46H unch246H))))
(assert (= "sjXlj" (str.++ unch146G (str.++ var46G unch246G))))
(assert (= "s2lH" (str.++ unch146H (str.++ var46H unch246H))))
(assert (= (str.len stem46) l46))
(assert (= (ite (= ch46A var46A) 0 1) sc46A))
(assert (= (ite (= ch46B var46B) 0 1) sc46B))
(assert (= (ite (= ch46C var46C) 0 1) sc46C))
(assert (= (ite (= ch46D var46D) 0 1) sc46D))
(assert (= (ite (= ch46E var46E) 0 1) sc46E))
(assert (= (ite (= ch46F var46F) 0 1) sc46F))
(assert (= (ite (= ch46G var46G) 0 1) sc46G))
(assert (= (ite (= ch46H var46H) 0 1) sc46H))
(assert (<= sc46A 1))
(assert (<= sc46B 1))
(assert (<= sc46C 1))
(assert (<= sc46D 1))
(assert (<= sc46E 1))
(assert (<= sc46F 1))
(assert (<= sc46G 1))
(assert (<= sc46H 1))
(assert (<= (str.len var47A) 1))
(assert (<= (str.len var47B) 1))
(assert (<= (str.len var47C) 1))
(assert (<= (str.len var47D) 1))
(assert (<= (str.len var47E) 1))
(assert (<= (str.len var47F) 1))
(assert (<= (str.len var47G) 1))
(assert (<= (str.len var47H) 1))
(assert (= (str.++ preA (str.++ stem47 sufA)) (str.++ unch147A (str.++ ch47A unch247A))))
(assert (= (str.++ preB (str.++ stem47 sufB)) (str.++ unch147B (str.++ ch47B unch247B))))
(assert (= (str.++ preC (str.++ stem47 sufC)) (str.++ unch147C (str.++ ch47C unch247C))))
(assert (= (str.++ preD (str.++ stem47 sufD)) (str.++ unch147D (str.++ ch47D unch247D))))
(assert (= (str.++ preE (str.++ stem47 sufE)) (str.++ unch147E (str.++ ch47E unch247E))))
(assert (= (str.++ preF (str.++ stem47 sufF)) (str.++ unch147F (str.++ ch47F unch247F))))
(assert (= (str.++ preG (str.++ stem47 sufG)) (str.++ unch147G (str.++ ch47G unch247G))))
(assert (= (str.++ preH (str.++ stem47 sufH)) (str.++ unch147H (str.++ ch47H unch247H))))
(assert (= "p2Bjisjkj" (str.++ unch147G (str.++ var47G unch247G))))
(assert (= "p2BHstH" (str.++ unch147H (str.++ var47H unch247H))))
(assert (= (str.len stem47) l47))
(assert (= (ite (= ch47A var47A) 0 1) sc47A))
(assert (= (ite (= ch47B var47B) 0 1) sc47B))
(assert (= (ite (= ch47C var47C) 0 1) sc47C))
(assert (= (ite (= ch47D var47D) 0 1) sc47D))
(assert (= (ite (= ch47E var47E) 0 1) sc47E))
(assert (= (ite (= ch47F var47F) 0 1) sc47F))
(assert (= (ite (= ch47G var47G) 0 1) sc47G))
(assert (= (ite (= ch47H var47H) 0 1) sc47H))
(assert (<= sc47A 1))
(assert (<= sc47B 1))
(assert (<= sc47C 1))
(assert (<= sc47D 1))
(assert (<= sc47E 1))
(assert (<= sc47F 1))
(assert (<= sc47G 1))
(assert (<= sc47H 1))
(assert (<= (str.len var48A) 1))
(assert (<= (str.len var48B) 1))
(assert (<= (str.len var48C) 1))
(assert (<= (str.len var48D) 1))
(assert (<= (str.len var48E) 1))
(assert (<= (str.len var48F) 1))
(assert (<= (str.len var48G) 1))
(assert (<= (str.len var48H) 1))
(assert (= (str.++ preA (str.++ stem48 sufA)) (str.++ unch148A (str.++ ch48A unch248A))))
(assert (= (str.++ preB (str.++ stem48 sufB)) (str.++ unch148B (str.++ ch48B unch248B))))
(assert (= (str.++ preC (str.++ stem48 sufC)) (str.++ unch148C (str.++ ch48C unch248C))))
(assert (= (str.++ preD (str.++ stem48 sufD)) (str.++ unch148D (str.++ ch48D unch248D))))
(assert (= (str.++ preE (str.++ stem48 sufE)) (str.++ unch148E (str.++ ch48E unch248E))))
(assert (= (str.++ preF (str.++ stem48 sufF)) (str.++ unch148F (str.++ ch48F unch248F))))
(assert (= (str.++ preG (str.++ stem48 sufG)) (str.++ unch148G (str.++ ch48G unch248G))))
(assert (= (str.++ preH (str.++ stem48 sufH)) (str.++ unch148H (str.++ ch48H unch248H))))
(assert (= "zOmjikj" (str.++ unch148G (str.++ var48G unch248G))))
(assert (= "zOmHtH" (str.++ unch148H (str.++ var48H unch248H))))
(assert (= (str.len stem48) l48))
(assert (= (ite (= ch48A var48A) 0 1) sc48A))
(assert (= (ite (= ch48B var48B) 0 1) sc48B))
(assert (= (ite (= ch48C var48C) 0 1) sc48C))
(assert (= (ite (= ch48D var48D) 0 1) sc48D))
(assert (= (ite (= ch48E var48E) 0 1) sc48E))
(assert (= (ite (= ch48F var48F) 0 1) sc48F))
(assert (= (ite (= ch48G var48G) 0 1) sc48G))
(assert (= (ite (= ch48H var48H) 0 1) sc48H))
(assert (<= sc48A 1))
(assert (<= sc48B 1))
(assert (<= sc48C 1))
(assert (<= sc48D 1))
(assert (<= sc48E 1))
(assert (<= sc48F 1))
(assert (<= sc48G 1))
(assert (<= sc48H 1))
(assert (<= (str.len var49A) 1))
(assert (<= (str.len var49B) 1))
(assert (<= (str.len var49C) 1))
(assert (<= (str.len var49D) 1))
(assert (<= (str.len var49E) 1))
(assert (<= (str.len var49F) 1))
(assert (<= (str.len var49G) 1))
(assert (<= (str.len var49H) 1))
(assert (= (str.++ preA (str.++ stem49 sufA)) (str.++ unch149A (str.++ ch49A unch249A))))
(assert (= (str.++ preB (str.++ stem49 sufB)) (str.++ unch149B (str.++ ch49B unch249B))))
(assert (= (str.++ preC (str.++ stem49 sufC)) (str.++ unch149C (str.++ ch49C unch249C))))
(assert (= (str.++ preD (str.++ stem49 sufD)) (str.++ unch149D (str.++ ch49D unch249D))))
(assert (= (str.++ preE (str.++ stem49 sufE)) (str.++ unch149E (str.++ ch49E unch249E))))
(assert (= (str.++ preF (str.++ stem49 sufF)) (str.++ unch149F (str.++ ch49F unch249F))))
(assert (= (str.++ preG (str.++ stem49 sufG)) (str.++ unch149G (str.++ ch49G unch249G))))
(assert (= (str.++ preH (str.++ stem49 sufH)) (str.++ unch149H (str.++ ch49H unch249H))))
(assert (= "skOtHrjkj" (str.++ unch149G (str.++ var49G unch249G))))
(assert (= "skOtHrtH" (str.++ unch149H (str.++ var49H unch249H))))
(assert (= (str.len stem49) l49))
(assert (= (ite (= ch49A var49A) 0 1) sc49A))
(assert (= (ite (= ch49B var49B) 0 1) sc49B))
(assert (= (ite (= ch49C var49C) 0 1) sc49C))
(assert (= (ite (= ch49D var49D) 0 1) sc49D))
(assert (= (ite (= ch49E var49E) 0 1) sc49E))
(assert (= (ite (= ch49F var49F) 0 1) sc49F))
(assert (= (ite (= ch49G var49G) 0 1) sc49G))
(assert (= (ite (= ch49H var49H) 0 1) sc49H))
(assert (<= sc49A 1))
(assert (<= sc49B 1))
(assert (<= sc49C 1))
(assert (<= sc49D 1))
(assert (<= sc49E 1))
(assert (<= sc49F 1))
(assert (<= sc49G 1))
(assert (<= sc49H 1))
(assert (<= (str.len var50A) 1))
(assert (<= (str.len var50B) 1))
(assert (<= (str.len var50C) 1))
(assert (<= (str.len var50D) 1))
(assert (<= (str.len var50E) 1))
(assert (<= (str.len var50F) 1))
(assert (<= (str.len var50G) 1))
(assert (<= (str.len var50H) 1))
(assert (= (str.++ preA (str.++ stem50 sufA)) (str.++ unch150A (str.++ ch50A unch250A))))
(assert (= (str.++ preB (str.++ stem50 sufB)) (str.++ unch150B (str.++ ch50B unch250B))))
(assert (= (str.++ preC (str.++ stem50 sufC)) (str.++ unch150C (str.++ ch50C unch250C))))
(assert (= (str.++ preD (str.++ stem50 sufD)) (str.++ unch150D (str.++ ch50D unch250D))))
(assert (= (str.++ preE (str.++ stem50 sufE)) (str.++ unch150E (str.++ ch50E unch250E))))
(assert (= (str.++ preF (str.++ stem50 sufF)) (str.++ unch150F (str.++ ch50F unch250F))))
(assert (= (str.++ preG (str.++ stem50 sufG)) (str.++ unch150G (str.++ ch50G unch250G))))
(assert (= (str.++ preH (str.++ stem50 sufH)) (str.++ unch150H (str.++ ch50H unch250H))))
(assert (= "kjXsjkj" (str.++ unch150G (str.++ var50G unch250G))))
(assert (= "k2stH" (str.++ unch150H (str.++ var50H unch250H))))
(assert (= (str.len stem50) l50))
(assert (= (ite (= ch50A var50A) 0 1) sc50A))
(assert (= (ite (= ch50B var50B) 0 1) sc50B))
(assert (= (ite (= ch50C var50C) 0 1) sc50C))
(assert (= (ite (= ch50D var50D) 0 1) sc50D))
(assert (= (ite (= ch50E var50E) 0 1) sc50E))
(assert (= (ite (= ch50F var50F) 0 1) sc50F))
(assert (= (ite (= ch50G var50G) 0 1) sc50G))
(assert (= (ite (= ch50H var50H) 0 1) sc50H))
(assert (<= sc50A 1))
(assert (<= sc50B 1))
(assert (<= sc50C 1))
(assert (<= sc50D 1))
(assert (<= sc50E 1))
(assert (<= sc50F 1))
(assert (<= sc50G 1))
(assert (<= sc50H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      sc7G
      sc7H
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      sc8G
      sc8H
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      sc9G
      sc9H
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      sc10G
      sc10H
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      sc11G
      sc11H
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      sc12G
      sc12H
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      sc13G
      sc13H
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      sc14G
      sc14H
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      sc15G
      sc15H
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      sc16G
      sc16H
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      sc17G
      sc17H
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      sc18G
      sc18H
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      sc19G
      sc19H
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      sc20G
      sc20H
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      sc21G
      sc21H
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      sc22G
      sc22H
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      sc23G
      sc23H
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      sc24G
      sc24H
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      sc25G
      sc25H
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      sc26G
      sc26H
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      sc27G
      sc27H
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      sc28G
      sc28H
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      sc29G
      sc29H
      0
      sc30A
      sc30B
      sc30C
      sc30D
      sc30E
      sc30F
      sc30G
      sc30H
      0
      sc31A
      sc31B
      sc31C
      sc31D
      sc31E
      sc31F
      sc31G
      sc31H
      0
      sc32A
      sc32B
      sc32C
      sc32D
      sc32E
      sc32F
      sc32G
      sc32H
      0
      sc33A
      sc33B
      sc33C
      sc33D
      sc33E
      sc33F
      sc33G
      sc33H
      0
      sc34A
      sc34B
      sc34C
      sc34D
      sc34E
      sc34F
      sc34G
      sc34H
      0
      sc35A
      sc35B
      sc35C
      sc35D
      sc35E
      sc35F
      sc35G
      sc35H
      0
      sc36A
      sc36B
      sc36C
      sc36D
      sc36E
      sc36F
      sc36G
      sc36H
      0
      sc37A
      sc37B
      sc37C
      sc37D
      sc37E
      sc37F
      sc37G
      sc37H
      0
      sc38A
      sc38B
      sc38C
      sc38D
      sc38E
      sc38F
      sc38G
      sc38H
      0
      sc39A
      sc39B
      sc39C
      sc39D
      sc39E
      sc39F
      sc39G
      sc39H
      0
      sc40A
      sc40B
      sc40C
      sc40D
      sc40E
      sc40F
      sc40G
      sc40H
      0
      sc41A
      sc41B
      sc41C
      sc41D
      sc41E
      sc41F
      sc41G
      sc41H
      0
      sc42A
      sc42B
      sc42C
      sc42D
      sc42E
      sc42F
      sc42G
      sc42H
      0
      sc43A
      sc43B
      sc43C
      sc43D
      sc43E
      sc43F
      sc43G
      sc43H
      0
      sc44A
      sc44B
      sc44C
      sc44D
      sc44E
      sc44F
      sc44G
      sc44H
      0
      sc45A
      sc45B
      sc45C
      sc45D
      sc45E
      sc45F
      sc45G
      sc45H
      0
      sc46A
      sc46B
      sc46C
      sc46D
      sc46E
      sc46F
      sc46G
      sc46H
      0
      sc47A
      sc47B
      sc47C
      sc47D
      sc47E
      sc47F
      sc47G
      sc47H
      0
      sc48A
      sc48B
      sc48C
      sc48D
      sc48E
      sc48F
      sc48G
      sc48H
      0
      sc49A
      sc49B
      sc49C
      sc49D
      sc49E
      sc49F
      sc49G
      sc49H
      0
      sc50A
      sc50B
      sc50C
      sc50D
      sc50E
      sc50F
      sc50G
      sc50H)
   13))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun var7G () String)
(declare-fun var7H () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun unch27G () String)
(declare-fun ch7G () String)
(declare-fun unch17G () String)
(declare-fun unch27H () String)
(declare-fun ch7H () String)
(declare-fun unch17H () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun sc7G () Int)
(declare-fun sc7H () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun var8G () String)
(declare-fun var8H () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun unch28G () String)
(declare-fun ch8G () String)
(declare-fun unch18G () String)
(declare-fun unch28H () String)
(declare-fun ch8H () String)
(declare-fun unch18H () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun sc8G () Int)
(declare-fun sc8H () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun var9G () String)
(declare-fun var9H () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun unch29G () String)
(declare-fun ch9G () String)
(declare-fun unch19G () String)
(declare-fun unch29H () String)
(declare-fun ch9H () String)
(declare-fun unch19H () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun sc9G () Int)
(declare-fun sc9H () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun var10G () String)
(declare-fun var10H () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun unch210G () String)
(declare-fun ch10G () String)
(declare-fun unch110G () String)
(declare-fun unch210H () String)
(declare-fun ch10H () String)
(declare-fun unch110H () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun sc10G () Int)
(declare-fun sc10H () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun var11G () String)
(declare-fun var11H () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun unch211G () String)
(declare-fun ch11G () String)
(declare-fun unch111G () String)
(declare-fun unch211H () String)
(declare-fun ch11H () String)
(declare-fun unch111H () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun sc11G () Int)
(declare-fun sc11H () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun var12G () String)
(declare-fun var12H () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun unch212G () String)
(declare-fun ch12G () String)
(declare-fun unch112G () String)
(declare-fun unch212H () String)
(declare-fun ch12H () String)
(declare-fun unch112H () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun sc12G () Int)
(declare-fun sc12H () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun var13G () String)
(declare-fun var13H () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun unch213G () String)
(declare-fun ch13G () String)
(declare-fun unch113G () String)
(declare-fun unch213H () String)
(declare-fun ch13H () String)
(declare-fun unch113H () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun sc13G () Int)
(declare-fun sc13H () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun var14G () String)
(declare-fun var14H () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun unch214G () String)
(declare-fun ch14G () String)
(declare-fun unch114G () String)
(declare-fun unch214H () String)
(declare-fun ch14H () String)
(declare-fun unch114H () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun sc14G () Int)
(declare-fun sc14H () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun var15G () String)
(declare-fun var15H () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun unch215G () String)
(declare-fun ch15G () String)
(declare-fun unch115G () String)
(declare-fun unch215H () String)
(declare-fun ch15H () String)
(declare-fun unch115H () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun sc15G () Int)
(declare-fun sc15H () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun var16G () String)
(declare-fun var16H () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun unch216G () String)
(declare-fun ch16G () String)
(declare-fun unch116G () String)
(declare-fun unch216H () String)
(declare-fun ch16H () String)
(declare-fun unch116H () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun sc16G () Int)
(declare-fun sc16H () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun var17G () String)
(declare-fun var17H () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun unch217G () String)
(declare-fun ch17G () String)
(declare-fun unch117G () String)
(declare-fun unch217H () String)
(declare-fun ch17H () String)
(declare-fun unch117H () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun sc17G () Int)
(declare-fun sc17H () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun var18G () String)
(declare-fun var18H () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun unch218G () String)
(declare-fun ch18G () String)
(declare-fun unch118G () String)
(declare-fun unch218H () String)
(declare-fun ch18H () String)
(declare-fun unch118H () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun sc18G () Int)
(declare-fun sc18H () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun var19G () String)
(declare-fun var19H () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun unch219G () String)
(declare-fun ch19G () String)
(declare-fun unch119G () String)
(declare-fun unch219H () String)
(declare-fun ch19H () String)
(declare-fun unch119H () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun sc19G () Int)
(declare-fun sc19H () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun var20G () String)
(declare-fun var20H () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun unch220G () String)
(declare-fun ch20G () String)
(declare-fun unch120G () String)
(declare-fun unch220H () String)
(declare-fun ch20H () String)
(declare-fun unch120H () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun sc20G () Int)
(declare-fun sc20H () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun var21G () String)
(declare-fun var21H () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun unch221G () String)
(declare-fun ch21G () String)
(declare-fun unch121G () String)
(declare-fun unch221H () String)
(declare-fun ch21H () String)
(declare-fun unch121H () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun sc21G () Int)
(declare-fun sc21H () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun var22G () String)
(declare-fun var22H () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun unch222G () String)
(declare-fun ch22G () String)
(declare-fun unch122G () String)
(declare-fun unch222H () String)
(declare-fun ch22H () String)
(declare-fun unch122H () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun sc22G () Int)
(declare-fun sc22H () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun var23G () String)
(declare-fun var23H () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun unch223G () String)
(declare-fun ch23G () String)
(declare-fun unch123G () String)
(declare-fun unch223H () String)
(declare-fun ch23H () String)
(declare-fun unch123H () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun sc23G () Int)
(declare-fun sc23H () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun var24G () String)
(declare-fun var24H () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun unch224G () String)
(declare-fun ch24G () String)
(declare-fun unch124G () String)
(declare-fun unch224H () String)
(declare-fun ch24H () String)
(declare-fun unch124H () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun sc24G () Int)
(declare-fun sc24H () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun var25G () String)
(declare-fun var25H () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun unch225G () String)
(declare-fun ch25G () String)
(declare-fun unch125G () String)
(declare-fun unch225H () String)
(declare-fun ch25H () String)
(declare-fun unch125H () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun sc25G () Int)
(declare-fun sc25H () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun var26G () String)
(declare-fun var26H () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun unch226G () String)
(declare-fun ch26G () String)
(declare-fun unch126G () String)
(declare-fun unch226H () String)
(declare-fun ch26H () String)
(declare-fun unch126H () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun sc26G () Int)
(declare-fun sc26H () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun var27G () String)
(declare-fun var27H () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun unch227G () String)
(declare-fun ch27G () String)
(declare-fun unch127G () String)
(declare-fun unch227H () String)
(declare-fun ch27H () String)
(declare-fun unch127H () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun sc27G () Int)
(declare-fun sc27H () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun var28G () String)
(declare-fun var28H () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun unch228G () String)
(declare-fun ch28G () String)
(declare-fun unch128G () String)
(declare-fun unch228H () String)
(declare-fun ch28H () String)
(declare-fun unch128H () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun sc28G () Int)
(declare-fun sc28H () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun var29G () String)
(declare-fun var29H () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun unch229G () String)
(declare-fun ch29G () String)
(declare-fun unch129G () String)
(declare-fun unch229H () String)
(declare-fun ch29H () String)
(declare-fun unch129H () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun sc29G () Int)
(declare-fun sc29H () Int)
(declare-fun var30A () String)
(declare-fun var30B () String)
(declare-fun var30C () String)
(declare-fun var30D () String)
(declare-fun var30E () String)
(declare-fun var30F () String)
(declare-fun var30G () String)
(declare-fun var30H () String)
(declare-fun unch230A () String)
(declare-fun ch30A () String)
(declare-fun unch130A () String)
(declare-fun stem30 () String)
(declare-fun unch230B () String)
(declare-fun ch30B () String)
(declare-fun unch130B () String)
(declare-fun unch230C () String)
(declare-fun ch30C () String)
(declare-fun unch130C () String)
(declare-fun unch230D () String)
(declare-fun ch30D () String)
(declare-fun unch130D () String)
(declare-fun unch230E () String)
(declare-fun ch30E () String)
(declare-fun unch130E () String)
(declare-fun unch230F () String)
(declare-fun ch30F () String)
(declare-fun unch130F () String)
(declare-fun unch230G () String)
(declare-fun ch30G () String)
(declare-fun unch130G () String)
(declare-fun unch230H () String)
(declare-fun ch30H () String)
(declare-fun unch130H () String)
(declare-fun l30 () Int)
(declare-fun sc30A () Int)
(declare-fun sc30B () Int)
(declare-fun sc30C () Int)
(declare-fun sc30D () Int)
(declare-fun sc30E () Int)
(declare-fun sc30F () Int)
(declare-fun sc30G () Int)
(declare-fun sc30H () Int)
(declare-fun var31A () String)
(declare-fun var31B () String)
(declare-fun var31C () String)
(declare-fun var31D () String)
(declare-fun var31E () String)
(declare-fun var31F () String)
(declare-fun var31G () String)
(declare-fun var31H () String)
(declare-fun unch231A () String)
(declare-fun ch31A () String)
(declare-fun unch131A () String)
(declare-fun stem31 () String)
(declare-fun unch231B () String)
(declare-fun ch31B () String)
(declare-fun unch131B () String)
(declare-fun unch231C () String)
(declare-fun ch31C () String)
(declare-fun unch131C () String)
(declare-fun unch231D () String)
(declare-fun ch31D () String)
(declare-fun unch131D () String)
(declare-fun unch231E () String)
(declare-fun ch31E () String)
(declare-fun unch131E () String)
(declare-fun unch231F () String)
(declare-fun ch31F () String)
(declare-fun unch131F () String)
(declare-fun unch231G () String)
(declare-fun ch31G () String)
(declare-fun unch131G () String)
(declare-fun unch231H () String)
(declare-fun ch31H () String)
(declare-fun unch131H () String)
(declare-fun l31 () Int)
(declare-fun sc31A () Int)
(declare-fun sc31B () Int)
(declare-fun sc31C () Int)
(declare-fun sc31D () Int)
(declare-fun sc31E () Int)
(declare-fun sc31F () Int)
(declare-fun sc31G () Int)
(declare-fun sc31H () Int)
(declare-fun var32A () String)
(declare-fun var32B () String)
(declare-fun var32C () String)
(declare-fun var32D () String)
(declare-fun var32E () String)
(declare-fun var32F () String)
(declare-fun var32G () String)
(declare-fun var32H () String)
(declare-fun unch232A () String)
(declare-fun ch32A () String)
(declare-fun unch132A () String)
(declare-fun stem32 () String)
(declare-fun unch232B () String)
(declare-fun ch32B () String)
(declare-fun unch132B () String)
(declare-fun unch232C () String)
(declare-fun ch32C () String)
(declare-fun unch132C () String)
(declare-fun unch232D () String)
(declare-fun ch32D () String)
(declare-fun unch132D () String)
(declare-fun unch232E () String)
(declare-fun ch32E () String)
(declare-fun unch132E () String)
(declare-fun unch232F () String)
(declare-fun ch32F () String)
(declare-fun unch132F () String)
(declare-fun unch232G () String)
(declare-fun ch32G () String)
(declare-fun unch132G () String)
(declare-fun unch232H () String)
(declare-fun ch32H () String)
(declare-fun unch132H () String)
(declare-fun l32 () Int)
(declare-fun sc32A () Int)
(declare-fun sc32B () Int)
(declare-fun sc32C () Int)
(declare-fun sc32D () Int)
(declare-fun sc32E () Int)
(declare-fun sc32F () Int)
(declare-fun sc32G () Int)
(declare-fun sc32H () Int)
(declare-fun var33A () String)
(declare-fun var33B () String)
(declare-fun var33C () String)
(declare-fun var33D () String)
(declare-fun var33E () String)
(declare-fun var33F () String)
(declare-fun var33G () String)
(declare-fun var33H () String)
(declare-fun unch233A () String)
(declare-fun ch33A () String)
(declare-fun unch133A () String)
(declare-fun stem33 () String)
(declare-fun unch233B () String)
(declare-fun ch33B () String)
(declare-fun unch133B () String)
(declare-fun unch233C () String)
(declare-fun ch33C () String)
(declare-fun unch133C () String)
(declare-fun unch233D () String)
(declare-fun ch33D () String)
(declare-fun unch133D () String)
(declare-fun unch233E () String)
(declare-fun ch33E () String)
(declare-fun unch133E () String)
(declare-fun unch233F () String)
(declare-fun ch33F () String)
(declare-fun unch133F () String)
(declare-fun unch233G () String)
(declare-fun ch33G () String)
(declare-fun unch133G () String)
(declare-fun unch233H () String)
(declare-fun ch33H () String)
(declare-fun unch133H () String)
(declare-fun l33 () Int)
(declare-fun sc33A () Int)
(declare-fun sc33B () Int)
(declare-fun sc33C () Int)
(declare-fun sc33D () Int)
(declare-fun sc33E () Int)
(declare-fun sc33F () Int)
(declare-fun sc33G () Int)
(declare-fun sc33H () Int)
(declare-fun var34A () String)
(declare-fun var34B () String)
(declare-fun var34C () String)
(declare-fun var34D () String)
(declare-fun var34E () String)
(declare-fun var34F () String)
(declare-fun var34G () String)
(declare-fun var34H () String)
(declare-fun unch234A () String)
(declare-fun ch34A () String)
(declare-fun unch134A () String)
(declare-fun stem34 () String)
(declare-fun unch234B () String)
(declare-fun ch34B () String)
(declare-fun unch134B () String)
(declare-fun unch234C () String)
(declare-fun ch34C () String)
(declare-fun unch134C () String)
(declare-fun unch234D () String)
(declare-fun ch34D () String)
(declare-fun unch134D () String)
(declare-fun unch234E () String)
(declare-fun ch34E () String)
(declare-fun unch134E () String)
(declare-fun unch234F () String)
(declare-fun ch34F () String)
(declare-fun unch134F () String)
(declare-fun unch234G () String)
(declare-fun ch34G () String)
(declare-fun unch134G () String)
(declare-fun unch234H () String)
(declare-fun ch34H () String)
(declare-fun unch134H () String)
(declare-fun l34 () Int)
(declare-fun sc34A () Int)
(declare-fun sc34B () Int)
(declare-fun sc34C () Int)
(declare-fun sc34D () Int)
(declare-fun sc34E () Int)
(declare-fun sc34F () Int)
(declare-fun sc34G () Int)
(declare-fun sc34H () Int)
(declare-fun var35A () String)
(declare-fun var35B () String)
(declare-fun var35C () String)
(declare-fun var35D () String)
(declare-fun var35E () String)
(declare-fun var35F () String)
(declare-fun var35G () String)
(declare-fun var35H () String)
(declare-fun unch235A () String)
(declare-fun ch35A () String)
(declare-fun unch135A () String)
(declare-fun stem35 () String)
(declare-fun unch235B () String)
(declare-fun ch35B () String)
(declare-fun unch135B () String)
(declare-fun unch235C () String)
(declare-fun ch35C () String)
(declare-fun unch135C () String)
(declare-fun unch235D () String)
(declare-fun ch35D () String)
(declare-fun unch135D () String)
(declare-fun unch235E () String)
(declare-fun ch35E () String)
(declare-fun unch135E () String)
(declare-fun unch235F () String)
(declare-fun ch35F () String)
(declare-fun unch135F () String)
(declare-fun unch235G () String)
(declare-fun ch35G () String)
(declare-fun unch135G () String)
(declare-fun unch235H () String)
(declare-fun ch35H () String)
(declare-fun unch135H () String)
(declare-fun l35 () Int)
(declare-fun sc35A () Int)
(declare-fun sc35B () Int)
(declare-fun sc35C () Int)
(declare-fun sc35D () Int)
(declare-fun sc35E () Int)
(declare-fun sc35F () Int)
(declare-fun sc35G () Int)
(declare-fun sc35H () Int)
(declare-fun var36A () String)
(declare-fun var36B () String)
(declare-fun var36C () String)
(declare-fun var36D () String)
(declare-fun var36E () String)
(declare-fun var36F () String)
(declare-fun var36G () String)
(declare-fun var36H () String)
(declare-fun unch236A () String)
(declare-fun ch36A () String)
(declare-fun unch136A () String)
(declare-fun stem36 () String)
(declare-fun unch236B () String)
(declare-fun ch36B () String)
(declare-fun unch136B () String)
(declare-fun unch236C () String)
(declare-fun ch36C () String)
(declare-fun unch136C () String)
(declare-fun unch236D () String)
(declare-fun ch36D () String)
(declare-fun unch136D () String)
(declare-fun unch236E () String)
(declare-fun ch36E () String)
(declare-fun unch136E () String)
(declare-fun unch236F () String)
(declare-fun ch36F () String)
(declare-fun unch136F () String)
(declare-fun unch236G () String)
(declare-fun ch36G () String)
(declare-fun unch136G () String)
(declare-fun unch236H () String)
(declare-fun ch36H () String)
(declare-fun unch136H () String)
(declare-fun l36 () Int)
(declare-fun sc36A () Int)
(declare-fun sc36B () Int)
(declare-fun sc36C () Int)
(declare-fun sc36D () Int)
(declare-fun sc36E () Int)
(declare-fun sc36F () Int)
(declare-fun sc36G () Int)
(declare-fun sc36H () Int)
(declare-fun var37A () String)
(declare-fun var37B () String)
(declare-fun var37C () String)
(declare-fun var37D () String)
(declare-fun var37E () String)
(declare-fun var37F () String)
(declare-fun var37G () String)
(declare-fun var37H () String)
(declare-fun unch237A () String)
(declare-fun ch37A () String)
(declare-fun unch137A () String)
(declare-fun stem37 () String)
(declare-fun unch237B () String)
(declare-fun ch37B () String)
(declare-fun unch137B () String)
(declare-fun unch237C () String)
(declare-fun ch37C () String)
(declare-fun unch137C () String)
(declare-fun unch237D () String)
(declare-fun ch37D () String)
(declare-fun unch137D () String)
(declare-fun unch237E () String)
(declare-fun ch37E () String)
(declare-fun unch137E () String)
(declare-fun unch237F () String)
(declare-fun ch37F () String)
(declare-fun unch137F () String)
(declare-fun unch237G () String)
(declare-fun ch37G () String)
(declare-fun unch137G () String)
(declare-fun unch237H () String)
(declare-fun ch37H () String)
(declare-fun unch137H () String)
(declare-fun l37 () Int)
(declare-fun sc37A () Int)
(declare-fun sc37B () Int)
(declare-fun sc37C () Int)
(declare-fun sc37D () Int)
(declare-fun sc37E () Int)
(declare-fun sc37F () Int)
(declare-fun sc37G () Int)
(declare-fun sc37H () Int)
(declare-fun var38A () String)
(declare-fun var38B () String)
(declare-fun var38C () String)
(declare-fun var38D () String)
(declare-fun var38E () String)
(declare-fun var38F () String)
(declare-fun var38G () String)
(declare-fun var38H () String)
(declare-fun unch238A () String)
(declare-fun ch38A () String)
(declare-fun unch138A () String)
(declare-fun stem38 () String)
(declare-fun unch238B () String)
(declare-fun ch38B () String)
(declare-fun unch138B () String)
(declare-fun unch238C () String)
(declare-fun ch38C () String)
(declare-fun unch138C () String)
(declare-fun unch238D () String)
(declare-fun ch38D () String)
(declare-fun unch138D () String)
(declare-fun unch238E () String)
(declare-fun ch38E () String)
(declare-fun unch138E () String)
(declare-fun unch238F () String)
(declare-fun ch38F () String)
(declare-fun unch138F () String)
(declare-fun unch238G () String)
(declare-fun ch38G () String)
(declare-fun unch138G () String)
(declare-fun unch238H () String)
(declare-fun ch38H () String)
(declare-fun unch138H () String)
(declare-fun l38 () Int)
(declare-fun sc38A () Int)
(declare-fun sc38B () Int)
(declare-fun sc38C () Int)
(declare-fun sc38D () Int)
(declare-fun sc38E () Int)
(declare-fun sc38F () Int)
(declare-fun sc38G () Int)
(declare-fun sc38H () Int)
(declare-fun var39A () String)
(declare-fun var39B () String)
(declare-fun var39C () String)
(declare-fun var39D () String)
(declare-fun var39E () String)
(declare-fun var39F () String)
(declare-fun var39G () String)
(declare-fun var39H () String)
(declare-fun unch239A () String)
(declare-fun ch39A () String)
(declare-fun unch139A () String)
(declare-fun stem39 () String)
(declare-fun unch239B () String)
(declare-fun ch39B () String)
(declare-fun unch139B () String)
(declare-fun unch239C () String)
(declare-fun ch39C () String)
(declare-fun unch139C () String)
(declare-fun unch239D () String)
(declare-fun ch39D () String)
(declare-fun unch139D () String)
(declare-fun unch239E () String)
(declare-fun ch39E () String)
(declare-fun unch139E () String)
(declare-fun unch239F () String)
(declare-fun ch39F () String)
(declare-fun unch139F () String)
(declare-fun unch239G () String)
(declare-fun ch39G () String)
(declare-fun unch139G () String)
(declare-fun unch239H () String)
(declare-fun ch39H () String)
(declare-fun unch139H () String)
(declare-fun l39 () Int)
(declare-fun sc39A () Int)
(declare-fun sc39B () Int)
(declare-fun sc39C () Int)
(declare-fun sc39D () Int)
(declare-fun sc39E () Int)
(declare-fun sc39F () Int)
(declare-fun sc39G () Int)
(declare-fun sc39H () Int)
(declare-fun var40A () String)
(declare-fun var40B () String)
(declare-fun var40C () String)
(declare-fun var40D () String)
(declare-fun var40E () String)
(declare-fun var40F () String)
(declare-fun var40G () String)
(declare-fun var40H () String)
(declare-fun unch240A () String)
(declare-fun ch40A () String)
(declare-fun unch140A () String)
(declare-fun stem40 () String)
(declare-fun unch240B () String)
(declare-fun ch40B () String)
(declare-fun unch140B () String)
(declare-fun unch240C () String)
(declare-fun ch40C () String)
(declare-fun unch140C () String)
(declare-fun unch240D () String)
(declare-fun ch40D () String)
(declare-fun unch140D () String)
(declare-fun unch240E () String)
(declare-fun ch40E () String)
(declare-fun unch140E () String)
(declare-fun unch240F () String)
(declare-fun ch40F () String)
(declare-fun unch140F () String)
(declare-fun unch240G () String)
(declare-fun ch40G () String)
(declare-fun unch140G () String)
(declare-fun unch240H () String)
(declare-fun ch40H () String)
(declare-fun unch140H () String)
(declare-fun l40 () Int)
(declare-fun sc40A () Int)
(declare-fun sc40B () Int)
(declare-fun sc40C () Int)
(declare-fun sc40D () Int)
(declare-fun sc40E () Int)
(declare-fun sc40F () Int)
(declare-fun sc40G () Int)
(declare-fun sc40H () Int)
(declare-fun var41A () String)
(declare-fun var41B () String)
(declare-fun var41C () String)
(declare-fun var41D () String)
(declare-fun var41E () String)
(declare-fun var41F () String)
(declare-fun var41G () String)
(declare-fun var41H () String)
(declare-fun unch241A () String)
(declare-fun ch41A () String)
(declare-fun unch141A () String)
(declare-fun stem41 () String)
(declare-fun unch241B () String)
(declare-fun ch41B () String)
(declare-fun unch141B () String)
(declare-fun unch241C () String)
(declare-fun ch41C () String)
(declare-fun unch141C () String)
(declare-fun unch241D () String)
(declare-fun ch41D () String)
(declare-fun unch141D () String)
(declare-fun unch241E () String)
(declare-fun ch41E () String)
(declare-fun unch141E () String)
(declare-fun unch241F () String)
(declare-fun ch41F () String)
(declare-fun unch141F () String)
(declare-fun unch241G () String)
(declare-fun ch41G () String)
(declare-fun unch141G () String)
(declare-fun unch241H () String)
(declare-fun ch41H () String)
(declare-fun unch141H () String)
(declare-fun l41 () Int)
(declare-fun sc41A () Int)
(declare-fun sc41B () Int)
(declare-fun sc41C () Int)
(declare-fun sc41D () Int)
(declare-fun sc41E () Int)
(declare-fun sc41F () Int)
(declare-fun sc41G () Int)
(declare-fun sc41H () Int)
(declare-fun var42A () String)
(declare-fun var42B () String)
(declare-fun var42C () String)
(declare-fun var42D () String)
(declare-fun var42E () String)
(declare-fun var42F () String)
(declare-fun var42G () String)
(declare-fun var42H () String)
(declare-fun unch242A () String)
(declare-fun ch42A () String)
(declare-fun unch142A () String)
(declare-fun stem42 () String)
(declare-fun unch242B () String)
(declare-fun ch42B () String)
(declare-fun unch142B () String)
(declare-fun unch242C () String)
(declare-fun ch42C () String)
(declare-fun unch142C () String)
(declare-fun unch242D () String)
(declare-fun ch42D () String)
(declare-fun unch142D () String)
(declare-fun unch242E () String)
(declare-fun ch42E () String)
(declare-fun unch142E () String)
(declare-fun unch242F () String)
(declare-fun ch42F () String)
(declare-fun unch142F () String)
(declare-fun unch242G () String)
(declare-fun ch42G () String)
(declare-fun unch142G () String)
(declare-fun unch242H () String)
(declare-fun ch42H () String)
(declare-fun unch142H () String)
(declare-fun l42 () Int)
(declare-fun sc42A () Int)
(declare-fun sc42B () Int)
(declare-fun sc42C () Int)
(declare-fun sc42D () Int)
(declare-fun sc42E () Int)
(declare-fun sc42F () Int)
(declare-fun sc42G () Int)
(declare-fun sc42H () Int)
(declare-fun var43A () String)
(declare-fun var43B () String)
(declare-fun var43C () String)
(declare-fun var43D () String)
(declare-fun var43E () String)
(declare-fun var43F () String)
(declare-fun var43G () String)
(declare-fun var43H () String)
(declare-fun unch243A () String)
(declare-fun ch43A () String)
(declare-fun unch143A () String)
(declare-fun stem43 () String)
(declare-fun unch243B () String)
(declare-fun ch43B () String)
(declare-fun unch143B () String)
(declare-fun unch243C () String)
(declare-fun ch43C () String)
(declare-fun unch143C () String)
(declare-fun unch243D () String)
(declare-fun ch43D () String)
(declare-fun unch143D () String)
(declare-fun unch243E () String)
(declare-fun ch43E () String)
(declare-fun unch143E () String)
(declare-fun unch243F () String)
(declare-fun ch43F () String)
(declare-fun unch143F () String)
(declare-fun unch243G () String)
(declare-fun ch43G () String)
(declare-fun unch143G () String)
(declare-fun unch243H () String)
(declare-fun ch43H () String)
(declare-fun unch143H () String)
(declare-fun l43 () Int)
(declare-fun sc43A () Int)
(declare-fun sc43B () Int)
(declare-fun sc43C () Int)
(declare-fun sc43D () Int)
(declare-fun sc43E () Int)
(declare-fun sc43F () Int)
(declare-fun sc43G () Int)
(declare-fun sc43H () Int)
(declare-fun var44A () String)
(declare-fun var44B () String)
(declare-fun var44C () String)
(declare-fun var44D () String)
(declare-fun var44E () String)
(declare-fun var44F () String)
(declare-fun var44G () String)
(declare-fun var44H () String)
(declare-fun unch244A () String)
(declare-fun ch44A () String)
(declare-fun unch144A () String)
(declare-fun stem44 () String)
(declare-fun unch244B () String)
(declare-fun ch44B () String)
(declare-fun unch144B () String)
(declare-fun unch244C () String)
(declare-fun ch44C () String)
(declare-fun unch144C () String)
(declare-fun unch244D () String)
(declare-fun ch44D () String)
(declare-fun unch144D () String)
(declare-fun unch244E () String)
(declare-fun ch44E () String)
(declare-fun unch144E () String)
(declare-fun unch244F () String)
(declare-fun ch44F () String)
(declare-fun unch144F () String)
(declare-fun unch244G () String)
(declare-fun ch44G () String)
(declare-fun unch144G () String)
(declare-fun unch244H () String)
(declare-fun ch44H () String)
(declare-fun unch144H () String)
(declare-fun l44 () Int)
(declare-fun sc44A () Int)
(declare-fun sc44B () Int)
(declare-fun sc44C () Int)
(declare-fun sc44D () Int)
(declare-fun sc44E () Int)
(declare-fun sc44F () Int)
(declare-fun sc44G () Int)
(declare-fun sc44H () Int)
(declare-fun var45A () String)
(declare-fun var45B () String)
(declare-fun var45C () String)
(declare-fun var45D () String)
(declare-fun var45E () String)
(declare-fun var45F () String)
(declare-fun var45G () String)
(declare-fun var45H () String)
(declare-fun unch245A () String)
(declare-fun ch45A () String)
(declare-fun unch145A () String)
(declare-fun stem45 () String)
(declare-fun unch245B () String)
(declare-fun ch45B () String)
(declare-fun unch145B () String)
(declare-fun unch245C () String)
(declare-fun ch45C () String)
(declare-fun unch145C () String)
(declare-fun unch245D () String)
(declare-fun ch45D () String)
(declare-fun unch145D () String)
(declare-fun unch245E () String)
(declare-fun ch45E () String)
(declare-fun unch145E () String)
(declare-fun unch245F () String)
(declare-fun ch45F () String)
(declare-fun unch145F () String)
(declare-fun unch245G () String)
(declare-fun ch45G () String)
(declare-fun unch145G () String)
(declare-fun unch245H () String)
(declare-fun ch45H () String)
(declare-fun unch145H () String)
(declare-fun l45 () Int)
(declare-fun sc45A () Int)
(declare-fun sc45B () Int)
(declare-fun sc45C () Int)
(declare-fun sc45D () Int)
(declare-fun sc45E () Int)
(declare-fun sc45F () Int)
(declare-fun sc45G () Int)
(declare-fun sc45H () Int)
(declare-fun var46A () String)
(declare-fun var46B () String)
(declare-fun var46C () String)
(declare-fun var46D () String)
(declare-fun var46E () String)
(declare-fun var46F () String)
(declare-fun var46G () String)
(declare-fun var46H () String)
(declare-fun unch246A () String)
(declare-fun ch46A () String)
(declare-fun unch146A () String)
(declare-fun stem46 () String)
(declare-fun unch246B () String)
(declare-fun ch46B () String)
(declare-fun unch146B () String)
(declare-fun unch246C () String)
(declare-fun ch46C () String)
(declare-fun unch146C () String)
(declare-fun unch246D () String)
(declare-fun ch46D () String)
(declare-fun unch146D () String)
(declare-fun unch246E () String)
(declare-fun ch46E () String)
(declare-fun unch146E () String)
(declare-fun unch246F () String)
(declare-fun ch46F () String)
(declare-fun unch146F () String)
(declare-fun unch246G () String)
(declare-fun ch46G () String)
(declare-fun unch146G () String)
(declare-fun unch246H () String)
(declare-fun ch46H () String)
(declare-fun unch146H () String)
(declare-fun l46 () Int)
(declare-fun sc46A () Int)
(declare-fun sc46B () Int)
(declare-fun sc46C () Int)
(declare-fun sc46D () Int)
(declare-fun sc46E () Int)
(declare-fun sc46F () Int)
(declare-fun sc46G () Int)
(declare-fun sc46H () Int)
(declare-fun var47A () String)
(declare-fun var47B () String)
(declare-fun var47C () String)
(declare-fun var47D () String)
(declare-fun var47E () String)
(declare-fun var47F () String)
(declare-fun var47G () String)
(declare-fun var47H () String)
(declare-fun unch247A () String)
(declare-fun ch47A () String)
(declare-fun unch147A () String)
(declare-fun stem47 () String)
(declare-fun unch247B () String)
(declare-fun ch47B () String)
(declare-fun unch147B () String)
(declare-fun unch247C () String)
(declare-fun ch47C () String)
(declare-fun unch147C () String)
(declare-fun unch247D () String)
(declare-fun ch47D () String)
(declare-fun unch147D () String)
(declare-fun unch247E () String)
(declare-fun ch47E () String)
(declare-fun unch147E () String)
(declare-fun unch247F () String)
(declare-fun ch47F () String)
(declare-fun unch147F () String)
(declare-fun unch247G () String)
(declare-fun ch47G () String)
(declare-fun unch147G () String)
(declare-fun unch247H () String)
(declare-fun ch47H () String)
(declare-fun unch147H () String)
(declare-fun l47 () Int)
(declare-fun sc47A () Int)
(declare-fun sc47B () Int)
(declare-fun sc47C () Int)
(declare-fun sc47D () Int)
(declare-fun sc47E () Int)
(declare-fun sc47F () Int)
(declare-fun sc47G () Int)
(declare-fun sc47H () Int)
(declare-fun var48A () String)
(declare-fun var48B () String)
(declare-fun var48C () String)
(declare-fun var48D () String)
(declare-fun var48E () String)
(declare-fun var48F () String)
(declare-fun var48G () String)
(declare-fun var48H () String)
(declare-fun unch248A () String)
(declare-fun ch48A () String)
(declare-fun unch148A () String)
(declare-fun stem48 () String)
(declare-fun unch248B () String)
(declare-fun ch48B () String)
(declare-fun unch148B () String)
(declare-fun unch248C () String)
(declare-fun ch48C () String)
(declare-fun unch148C () String)
(declare-fun unch248D () String)
(declare-fun ch48D () String)
(declare-fun unch148D () String)
(declare-fun unch248E () String)
(declare-fun ch48E () String)
(declare-fun unch148E () String)
(declare-fun unch248F () String)
(declare-fun ch48F () String)
(declare-fun unch148F () String)
(declare-fun unch248G () String)
(declare-fun ch48G () String)
(declare-fun unch148G () String)
(declare-fun unch248H () String)
(declare-fun ch48H () String)
(declare-fun unch148H () String)
(declare-fun l48 () Int)
(declare-fun sc48A () Int)
(declare-fun sc48B () Int)
(declare-fun sc48C () Int)
(declare-fun sc48D () Int)
(declare-fun sc48E () Int)
(declare-fun sc48F () Int)
(declare-fun sc48G () Int)
(declare-fun sc48H () Int)
(declare-fun var49A () String)
(declare-fun var49B () String)
(declare-fun var49C () String)
(declare-fun var49D () String)
(declare-fun var49E () String)
(declare-fun var49F () String)
(declare-fun var49G () String)
(declare-fun var49H () String)
(declare-fun unch249A () String)
(declare-fun ch49A () String)
(declare-fun unch149A () String)
(declare-fun stem49 () String)
(declare-fun unch249B () String)
(declare-fun ch49B () String)
(declare-fun unch149B () String)
(declare-fun unch249C () String)
(declare-fun ch49C () String)
(declare-fun unch149C () String)
(declare-fun unch249D () String)
(declare-fun ch49D () String)
(declare-fun unch149D () String)
(declare-fun unch249E () String)
(declare-fun ch49E () String)
(declare-fun unch149E () String)
(declare-fun unch249F () String)
(declare-fun ch49F () String)
(declare-fun unch149F () String)
(declare-fun unch249G () String)
(declare-fun ch49G () String)
(declare-fun unch149G () String)
(declare-fun unch249H () String)
(declare-fun ch49H () String)
(declare-fun unch149H () String)
(declare-fun l49 () Int)
(declare-fun sc49A () Int)
(declare-fun sc49B () Int)
(declare-fun sc49C () Int)
(declare-fun sc49D () Int)
(declare-fun sc49E () Int)
(declare-fun sc49F () Int)
(declare-fun sc49G () Int)
(declare-fun sc49H () Int)
(declare-fun var50A () String)
(declare-fun var50B () String)
(declare-fun var50C () String)
(declare-fun var50D () String)
(declare-fun var50E () String)
(declare-fun var50F () String)
(declare-fun var50G () String)
(declare-fun var50H () String)
(declare-fun unch250A () String)
(declare-fun ch50A () String)
(declare-fun unch150A () String)
(declare-fun stem50 () String)
(declare-fun unch250B () String)
(declare-fun ch50B () String)
(declare-fun unch150B () String)
(declare-fun unch250C () String)
(declare-fun ch50C () String)
(declare-fun unch150C () String)
(declare-fun unch250D () String)
(declare-fun ch50D () String)
(declare-fun unch150D () String)
(declare-fun unch250E () String)
(declare-fun ch50E () String)
(declare-fun unch150E () String)
(declare-fun unch250F () String)
(declare-fun ch50F () String)
(declare-fun unch150F () String)
(declare-fun unch250G () String)
(declare-fun ch50G () String)
(declare-fun unch150G () String)
(declare-fun unch250H () String)
(declare-fun ch50H () String)
(declare-fun unch150H () String)
(declare-fun l50 () Int)
(declare-fun sc50A () Int)
(declare-fun sc50B () Int)
(declare-fun sc50C () Int)
(declare-fun sc50D () Int)
(declare-fun sc50E () Int)
(declare-fun sc50F () Int)
(declare-fun sc50G () Int)
(declare-fun sc50H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "plOst" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "plastO" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "plasjkjX" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "skorZx" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "skoruxO" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "skorusjX" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "1jrjXx" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "1jrjixO" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "1jrjisjX" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "pastZx" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "pastuxO" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "pastusjX" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "mjnjZx" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "mjnjZxa" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "mjnjZsji" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "plZ1" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "plZ1a" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "plZzji" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "sjtjX1" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "st21a" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "st2zji" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (<= (str.len var7G) 1))
(assert (<= (str.len var7H) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= (str.++ preG (str.++ stem7 sufG)) (str.++ unch17G (str.++ ch7G unch27G))))
(assert (= (str.++ preH (str.++ stem7 sufH)) (str.++ unch17H (str.++ ch7H unch27H))))
(assert (= "sOk" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "sOka" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "sOtsji" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (= (ite (= ch7G var7G) 0 1) sc7G))
(assert (= (ite (= ch7H var7H) 0 1) sc7H))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= sc7G 1))
(assert (<= sc7H 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (<= (str.len var8G) 1))
(assert (<= (str.len var8H) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= (str.++ preG (str.++ stem8 sufG)) (str.++ unch18G (str.++ ch8G unch28G))))
(assert (= (str.++ preH (str.++ stem8 sufH)) (str.++ unch18H (str.++ ch8H unch28H))))
(assert (= "b3k" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "bHkO" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "bHtsjX" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (= (ite (= ch8G var8G) 0 1) sc8G))
(assert (= (ite (= ch8H var8H) 0 1) sc8H))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= sc8G 1))
(assert (<= sc8H 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (<= (str.len var9G) 1))
(assert (<= (str.len var9H) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= (str.++ preG (str.++ stem9 sufG)) (str.++ unch19G (str.++ ch9G unch29G))))
(assert (= (str.++ preH (str.++ stem9 sufH)) (str.++ unch19H (str.++ ch9H unch29H))))
(assert (= "l3st" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "lHstO" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "lHsjkjX" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (= (ite (= ch9G var9G) 0 1) sc9G))
(assert (= (ite (= ch9H var9H) 0 1) sc9H))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= sc9G 1))
(assert (<= sc9H 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (<= (str.len var10G) 1))
(assert (<= (str.len var10H) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= (str.++ preG (str.++ stem10 sufG)) (str.++ unch110G (str.++ ch10G unch210G))))
(assert (= (str.++ preH (str.++ stem10 sufH)) (str.++ unch110H (str.++ ch10H unch210H))))
(assert (= "l3st" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "l3sta" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "l3sjkji" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (= (ite (= ch10G var10G) 0 1) sc10G))
(assert (= (ite (= ch10H var10H) 0 1) sc10H))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= sc10G 1))
(assert (<= sc10H 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (<= (str.len var11G) 1))
(assert (<= (str.len var11H) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= (str.++ preG (str.++ stem11 sufG)) (str.++ unch111G (str.++ ch11G unch211G))))
(assert (= (str.++ preH (str.++ stem11 sufH)) (str.++ unch111H (str.++ ch11H unch211H))))
(assert (= "pjljXt" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "pl2ta" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "pl2kji" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (= (ite (= ch11G var11G) 0 1) sc11G))
(assert (= (ite (= ch11H var11H) 0 1) sc11H))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= sc11G 1))
(assert (<= sc11H 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (<= (str.len var12G) 1))
(assert (<= (str.len var12H) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= (str.++ preG (str.++ stem12 sufG)) (str.++ unch112G (str.++ ch12G unch212G))))
(assert (= (str.++ preH (str.++ stem12 sufH)) (str.++ unch112H (str.++ ch12H unch212H))))
(assert (= "sjmjrjXd" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "smr2da" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "smr2gji" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (= (ite (= ch12G var12G) 0 1) sc12G))
(assert (= (ite (= ch12H var12H) 0 1) sc12H))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= sc12G 1))
(assert (<= sc12H 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (<= (str.len var13G) 1))
(assert (<= (str.len var13H) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= (str.++ preG (str.++ stem13 sufG)) (str.++ unch113G (str.++ ch13G unch213G))))
(assert (= (str.++ preH (str.++ stem13 sufH)) (str.++ unch113H (str.++ ch13H unch213H))))
(assert (= "fjXst" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "fostO" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "fosjkjX" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (= (ite (= ch13G var13G) 0 1) sc13G))
(assert (= (ite (= ch13H var13H) 0 1) sc13H))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= sc13G 1))
(assert (<= sc13H 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (<= (str.len var14G) 1))
(assert (<= (str.len var14H) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= (str.++ preG (str.++ stem14 sufG)) (str.++ unch114G (str.++ ch14G unch214G))))
(assert (= (str.++ preH (str.++ stem14 sufH)) (str.++ unch114H (str.++ ch14H unch214H))))
(assert (= "mjXst" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "m2sta" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "m2sjkji" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (= (ite (= ch14G var14G) 0 1) sc14G))
(assert (= (ite (= ch14H var14H) 0 1) sc14H))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= sc14G 1))
(assert (<= sc14H 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (<= (str.len var15G) 1))
(assert (<= (str.len var15H) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= (str.++ preG (str.++ stem15 sufG)) (str.++ unch115G (str.++ ch15G unch215G))))
(assert (= (str.++ preH (str.++ stem15 sufH)) (str.++ unch115H (str.++ ch15H unch215H))))
(assert (= "ljXd" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "l4du" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "lHdZ" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (= (ite (= ch15G var15G) 0 1) sc15G))
(assert (= (ite (= ch15H var15H) 0 1) sc15H))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= sc15G 1))
(assert (<= sc15H 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (<= (str.len var16G) 1))
(assert (<= (str.len var16H) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= (str.++ preG (str.++ stem16 sufG)) (str.++ unch116G (str.++ ch16G unch216G))))
(assert (= (str.++ preH (str.++ stem16 sufH)) (str.++ unch116H (str.++ ch16H unch216H))))
(assert (= "djrjXt" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "dr2ta" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "dr2kji" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (= (ite (= ch16G var16G) 0 1) sc16G))
(assert (= (ite (= ch16H var16H) 0 1) sc16H))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= sc16G 1))
(assert (<= sc16H 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (<= (str.len var17G) 1))
(assert (<= (str.len var17H) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= (str.++ preG (str.++ stem17 sufG)) (str.++ unch117G (str.++ ch17G unch217G))))
(assert (= (str.++ preH (str.++ stem17 sufH)) (str.++ unch117H (str.++ ch17H unch217H))))
(assert (= "mjXd" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "m4du" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "mHdZ" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (= (ite (= ch17G var17G) 0 1) sc17G))
(assert (= (ite (= ch17H var17H) 0 1) sc17H))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= sc17G 1))
(assert (<= sc17H 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (<= (str.len var18G) 1))
(assert (<= (str.len var18H) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= (str.++ preG (str.++ stem18 sufG)) (str.++ unch118G (str.++ ch18G unch218G))))
(assert (= (str.++ preH (str.++ stem18 sufH)) (str.++ unch118H (str.++ ch18H unch218H))))
(assert (= "vjXl" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "volO" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "voljX" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (= (ite (= ch18G var18G) 0 1) sc18G))
(assert (= (ite (= ch18H var18H) 0 1) sc18H))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= sc18G 1))
(assert (<= sc18H 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (<= (str.len var19G) 1))
(assert (<= (str.len var19H) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= (str.++ preG (str.++ stem19 sufG)) (str.++ unch119G (str.++ ch19G unch219G))))
(assert (= (str.++ preH (str.++ stem19 sufH)) (str.++ unch119H (str.++ ch19H unch219H))))
(assert (= "vjXz" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "v2za" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "v2zji" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (= (ite (= ch19G var19G) 0 1) sc19G))
(assert (= (ite (= ch19H var19H) 0 1) sc19H))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= sc19G 1))
(assert (<= sc19H 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (<= (str.len var20G) 1))
(assert (<= (str.len var20H) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= (str.++ preG (str.++ stem20 sufG)) (str.++ unch120G (str.++ ch20G unch220G))))
(assert (= (str.++ preH (str.++ stem20 sufH)) (str.++ unch120H (str.++ ch20H unch220H))))
(assert (= "s3r" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "s3ra" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "s3rji" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (= (ite (= ch20G var20G) 0 1) sc20G))
(assert (= (ite (= ch20H var20H) 0 1) sc20H))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= sc20G 1))
(assert (<= sc20H 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (<= (str.len var21G) 1))
(assert (<= (str.len var21H) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= (str.++ preG (str.++ stem21 sufG)) (str.++ unch121G (str.++ ch21G unch221G))))
(assert (= (str.++ preH (str.++ stem21 sufH)) (str.++ unch121H (str.++ ch21H unch221H))))
(assert (= "sjnjXp" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "snopO" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "snopjX" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (= (ite (= ch21G var21G) 0 1) sc21G))
(assert (= (ite (= ch21H var21H) 0 1) sc21H))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= sc21G 1))
(assert (<= sc21H 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (<= (str.len var22G) 1))
(assert (<= (str.len var22H) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= (str.++ preG (str.++ stem22 sufG)) (str.++ unch122G (str.++ ch22G unch222G))))
(assert (= (str.++ preH (str.++ stem22 sufH)) (str.++ unch122H (str.++ ch22H unch222H))))
(assert (= "1r3b" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "1rHbO" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "1rHbjX" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (= (ite (= ch22G var22G) 0 1) sc22G))
(assert (= (ite (= ch22H var22H) 0 1) sc22H))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= sc22G 1))
(assert (<= sc22H 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (<= (str.len var23G) 1))
(assert (<= (str.len var23H) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= (str.++ preG (str.++ stem23 sufG)) (str.++ unch123G (str.++ ch23G unch223G))))
(assert (= (str.++ preH (str.++ stem23 sufH)) (str.++ unch123H (str.++ ch23H unch223H))))
(assert (= "l4bjid" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= "l4bHda" (str.++ unch123B (str.++ var23B unch223B))))
(assert (= "l4bHgji" (str.++ unch123C (str.++ var23C unch223C))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (= (ite (= ch23G var23G) 0 1) sc23G))
(assert (= (ite (= ch23H var23H) 0 1) sc23H))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= sc23G 1))
(assert (<= sc23H 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (<= (str.len var24G) 1))
(assert (<= (str.len var24H) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= (str.++ preG (str.++ stem24 sufG)) (str.++ unch124G (str.++ ch24G unch224G))))
(assert (= (str.++ preH (str.++ stem24 sufH)) (str.++ unch124H (str.++ ch24H unch224H))))
(assert (= "b4rji1" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= "b4rH1a" (str.++ unch124B (str.++ var24B unch224B))))
(assert (= "b4rHzji" (str.++ unch124C (str.++ var24C unch224C))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (= (ite (= ch24G var24G) 0 1) sc24G))
(assert (= (ite (= ch24H var24H) 0 1) sc24H))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= sc24G 1))
(assert (<= sc24H 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (<= (str.len var25G) 1))
(assert (<= (str.len var25H) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= (str.++ preG (str.++ stem25 sufG)) (str.++ unch125G (str.++ ch25G unch225G))))
(assert (= (str.++ preH (str.++ stem25 sufH)) (str.++ unch125H (str.++ ch25H unch225H))))
(assert (= "pHrjX1" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= "pHr21a" (str.++ unch125B (str.++ var25B unch225B))))
(assert (= "pHr2zji" (str.++ unch125C (str.++ var25C unch225C))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (= (ite (= ch25G var25G) 0 1) sc25G))
(assert (= (ite (= ch25H var25H) 0 1) sc25H))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= sc25G 1))
(assert (<= sc25H 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (<= (str.len var26G) 1))
(assert (<= (str.len var26H) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= (str.++ preG (str.++ stem26 sufG)) (str.++ unch126G (str.++ ch26G unch226G))))
(assert (= (str.++ preH (str.++ stem26 sufH)) (str.++ unch126H (str.++ ch26H unch226H))))
(assert (= "porjX1" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= "por21a" (str.++ unch126B (str.++ var26B unch226B))))
(assert (= "por2zji" (str.++ unch126C (str.++ var26C unch226C))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (= (ite (= ch26G var26G) 0 1) sc26G))
(assert (= (ite (= ch26H var26H) 0 1) sc26H))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= sc26G 1))
(assert (<= sc26H 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (<= (str.len var27G) 1))
(assert (<= (str.len var27H) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= (str.++ preG (str.++ stem27 sufG)) (str.++ unch127G (str.++ ch27G unch227G))))
(assert (= (str.++ preH (str.++ stem27 sufH)) (str.++ unch127H (str.++ ch27H unch227H))))
(assert (= "bolj3k" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= "boljHkO" (str.++ unch127B (str.++ var27B unch227B))))
(assert (= "boljHtsjX" (str.++ unch127C (str.++ var27C unch227C))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (= (ite (= ch27G var27G) 0 1) sc27G))
(assert (= (ite (= ch27H var27H) 0 1) sc27H))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= sc27G 1))
(assert (<= sc27H 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (<= (str.len var28G) 1))
(assert (<= (str.len var28H) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= (str.++ preG (str.++ stem28 sufG)) (str.++ unch128G (str.++ ch28G unch228G))))
(assert (= (str.++ preH (str.++ stem28 sufH)) (str.++ unch128H (str.++ ch28H unch228H))))
(assert (= "v2rji1" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= "v2ro1a" (str.++ unch128B (str.++ var28B unch228B))))
(assert (= "v2rozji" (str.++ unch128C (str.++ var28C unch228C))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (= (ite (= ch28G var28G) 0 1) sc28G))
(assert (= (ite (= ch28H var28H) 0 1) sc28H))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= sc28G 1))
(assert (<= sc28H 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (<= (str.len var29G) 1))
(assert (<= (str.len var29H) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= (str.++ preG (str.++ stem29 sufG)) (str.++ unch129G (str.++ ch29G unch229G))))
(assert (= (str.++ preH (str.++ stem29 sufH)) (str.++ unch129H (str.++ ch29H unch229H))))
(assert (= "k2nHk" (str.++ unch129A (str.++ var29A unch229A))))
(assert (= "k2nHka" (str.++ unch129B (str.++ var29B unch229B))))
(assert (= "k2nHtsji" (str.++ unch129C (str.++ var29C unch229C))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (= (ite (= ch29G var29G) 0 1) sc29G))
(assert (= (ite (= ch29H var29H) 0 1) sc29H))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= sc29G 1))
(assert (<= sc29H 1))
(assert (<= (str.len var30A) 1))
(assert (<= (str.len var30B) 1))
(assert (<= (str.len var30C) 1))
(assert (<= (str.len var30D) 1))
(assert (<= (str.len var30E) 1))
(assert (<= (str.len var30F) 1))
(assert (<= (str.len var30G) 1))
(assert (<= (str.len var30H) 1))
(assert (= (str.++ preA (str.++ stem30 sufA)) (str.++ unch130A (str.++ ch30A unch230A))))
(assert (= (str.++ preB (str.++ stem30 sufB)) (str.++ unch130B (str.++ ch30B unch230B))))
(assert (= (str.++ preC (str.++ stem30 sufC)) (str.++ unch130C (str.++ ch30C unch230C))))
(assert (= (str.++ preD (str.++ stem30 sufD)) (str.++ unch130D (str.++ ch30D unch230D))))
(assert (= (str.++ preE (str.++ stem30 sufE)) (str.++ unch130E (str.++ ch30E unch230E))))
(assert (= (str.++ preF (str.++ stem30 sufF)) (str.++ unch130F (str.++ ch30F unch230F))))
(assert (= (str.++ preG (str.++ stem30 sufG)) (str.++ unch130G (str.++ ch30G unch230G))))
(assert (= (str.++ preH (str.++ stem30 sufH)) (str.++ unch130H (str.++ ch30H unch230H))))
(assert (= "p2tjik" (str.++ unch130A (str.++ var30A unch230A))))
(assert (= "pot2ka" (str.++ unch130B (str.++ var30B unch230B))))
(assert (= "pot2tsji" (str.++ unch130C (str.++ var30C unch230C))))
(assert (= (str.len stem30) l30))
(assert (= (ite (= ch30A var30A) 0 1) sc30A))
(assert (= (ite (= ch30B var30B) 0 1) sc30B))
(assert (= (ite (= ch30C var30C) 0 1) sc30C))
(assert (= (ite (= ch30D var30D) 0 1) sc30D))
(assert (= (ite (= ch30E var30E) 0 1) sc30E))
(assert (= (ite (= ch30F var30F) 0 1) sc30F))
(assert (= (ite (= ch30G var30G) 0 1) sc30G))
(assert (= (ite (= ch30H var30H) 0 1) sc30H))
(assert (<= sc30A 1))
(assert (<= sc30B 1))
(assert (<= sc30C 1))
(assert (<= sc30D 1))
(assert (<= sc30E 1))
(assert (<= sc30F 1))
(assert (<= sc30G 1))
(assert (<= sc30H 1))
(assert (<= (str.len var31A) 1))
(assert (<= (str.len var31B) 1))
(assert (<= (str.len var31C) 1))
(assert (<= (str.len var31D) 1))
(assert (<= (str.len var31E) 1))
(assert (<= (str.len var31F) 1))
(assert (<= (str.len var31G) 1))
(assert (<= (str.len var31H) 1))
(assert (= (str.++ preA (str.++ stem31 sufA)) (str.++ unch131A (str.++ ch31A unch231A))))
(assert (= (str.++ preB (str.++ stem31 sufB)) (str.++ unch131B (str.++ ch31B unch231B))))
(assert (= (str.++ preC (str.++ stem31 sufC)) (str.++ unch131C (str.++ ch31C unch231C))))
(assert (= (str.++ preD (str.++ stem31 sufD)) (str.++ unch131D (str.++ ch31D unch231D))))
(assert (= (str.++ preE (str.++ stem31 sufE)) (str.++ unch131E (str.++ ch31E unch231E))))
(assert (= (str.++ preF (str.++ stem31 sufF)) (str.++ unch131F (str.++ ch31F unch231F))))
(assert (= (str.++ preG (str.++ stem31 sufG)) (str.++ unch131G (str.++ ch31G unch231G))))
(assert (= (str.++ preH (str.++ stem31 sufH)) (str.++ unch131H (str.++ ch31H unch231H))))
(assert (= "tjXk" (str.++ unch131A (str.++ var31A unch231A))))
(assert (= "t2ka" (str.++ unch131B (str.++ var31B unch231B))))
(assert (= "t2tsji" (str.++ unch131C (str.++ var31C unch231C))))
(assert (= (str.len stem31) l31))
(assert (= (ite (= ch31A var31A) 0 1) sc31A))
(assert (= (ite (= ch31B var31B) 0 1) sc31B))
(assert (= (ite (= ch31C var31C) 0 1) sc31C))
(assert (= (ite (= ch31D var31D) 0 1) sc31D))
(assert (= (ite (= ch31E var31E) 0 1) sc31E))
(assert (= (ite (= ch31F var31F) 0 1) sc31F))
(assert (= (ite (= ch31G var31G) 0 1) sc31G))
(assert (= (ite (= ch31H var31H) 0 1) sc31H))
(assert (<= sc31A 1))
(assert (<= sc31B 1))
(assert (<= sc31C 1))
(assert (<= sc31D 1))
(assert (<= sc31E 1))
(assert (<= sc31F 1))
(assert (<= sc31G 1))
(assert (<= sc31H 1))
(assert (<= (str.len var32A) 1))
(assert (<= (str.len var32B) 1))
(assert (<= (str.len var32C) 1))
(assert (<= (str.len var32D) 1))
(assert (<= (str.len var32E) 1))
(assert (<= (str.len var32F) 1))
(assert (<= (str.len var32G) 1))
(assert (<= (str.len var32H) 1))
(assert (= (str.++ preA (str.++ stem32 sufA)) (str.++ unch132A (str.++ ch32A unch232A))))
(assert (= (str.++ preB (str.++ stem32 sufB)) (str.++ unch132B (str.++ ch32B unch232B))))
(assert (= (str.++ preC (str.++ stem32 sufC)) (str.++ unch132C (str.++ ch32C unch232C))))
(assert (= (str.++ preD (str.++ stem32 sufD)) (str.++ unch132D (str.++ ch32D unch232D))))
(assert (= (str.++ preE (str.++ stem32 sufE)) (str.++ unch132E (str.++ ch32E unch232E))))
(assert (= (str.++ preF (str.++ stem32 sufF)) (str.++ unch132F (str.++ ch32F unch232F))))
(assert (= (str.++ preG (str.++ stem32 sufG)) (str.++ unch132G (str.++ ch32G unch232G))))
(assert (= (str.++ preH (str.++ stem32 sufH)) (str.++ unch132H (str.++ ch32H unch232H))))
(assert (= "kjXl" (str.++ unch132A (str.++ var32A unch232A))))
(assert (= "kolO" (str.++ unch132B (str.++ var32B unch232B))))
(assert (= "koljX" (str.++ unch132C (str.++ var32C unch232C))))
(assert (= (str.len stem32) l32))
(assert (= (ite (= ch32A var32A) 0 1) sc32A))
(assert (= (ite (= ch32B var32B) 0 1) sc32B))
(assert (= (ite (= ch32C var32C) 0 1) sc32C))
(assert (= (ite (= ch32D var32D) 0 1) sc32D))
(assert (= (ite (= ch32E var32E) 0 1) sc32E))
(assert (= (ite (= ch32F var32F) 0 1) sc32F))
(assert (= (ite (= ch32G var32G) 0 1) sc32G))
(assert (= (ite (= ch32H var32H) 0 1) sc32H))
(assert (<= sc32A 1))
(assert (<= sc32B 1))
(assert (<= sc32C 1))
(assert (<= sc32D 1))
(assert (<= sc32E 1))
(assert (<= sc32F 1))
(assert (<= sc32G 1))
(assert (<= sc32H 1))
(assert (<= (str.len var33A) 1))
(assert (<= (str.len var33B) 1))
(assert (<= (str.len var33C) 1))
(assert (<= (str.len var33D) 1))
(assert (<= (str.len var33E) 1))
(assert (<= (str.len var33F) 1))
(assert (<= (str.len var33G) 1))
(assert (<= (str.len var33H) 1))
(assert (= (str.++ preA (str.++ stem33 sufA)) (str.++ unch133A (str.++ ch33A unch233A))))
(assert (= (str.++ preB (str.++ stem33 sufB)) (str.++ unch133B (str.++ ch33B unch233B))))
(assert (= (str.++ preC (str.++ stem33 sufC)) (str.++ unch133C (str.++ ch33C unch233C))))
(assert (= (str.++ preD (str.++ stem33 sufD)) (str.++ unch133D (str.++ ch33D unch233D))))
(assert (= (str.++ preE (str.++ stem33 sufE)) (str.++ unch133E (str.++ ch33E unch233E))))
(assert (= (str.++ preF (str.++ stem33 sufF)) (str.++ unch133F (str.++ ch33F unch233F))))
(assert (= (str.++ preG (str.++ stem33 sufG)) (str.++ unch133G (str.++ ch33G unch233G))))
(assert (= (str.++ preH (str.++ stem33 sufH)) (str.++ unch133H (str.++ ch33H unch233H))))
(assert (= "kovOlj" (str.++ unch133D (str.++ var33D unch233D))))
(assert (= "kovalj3" (str.++ unch133E (str.++ var33E unch233E))))
(assert (= "koval3" (str.++ unch133F (str.++ var33F unch233F))))
(assert (= (str.len stem33) l33))
(assert (= (ite (= ch33A var33A) 0 1) sc33A))
(assert (= (ite (= ch33B var33B) 0 1) sc33B))
(assert (= (ite (= ch33C var33C) 0 1) sc33C))
(assert (= (ite (= ch33D var33D) 0 1) sc33D))
(assert (= (ite (= ch33E var33E) 0 1) sc33E))
(assert (= (ite (= ch33F var33F) 0 1) sc33F))
(assert (= (ite (= ch33G var33G) 0 1) sc33G))
(assert (= (ite (= ch33H var33H) 0 1) sc33H))
(assert (<= sc33A 1))
(assert (<= sc33B 1))
(assert (<= sc33C 1))
(assert (<= sc33D 1))
(assert (<= sc33E 1))
(assert (<= sc33F 1))
(assert (<= sc33G 1))
(assert (<= sc33H 1))
(assert (<= (str.len var34A) 1))
(assert (<= (str.len var34B) 1))
(assert (<= (str.len var34C) 1))
(assert (<= (str.len var34D) 1))
(assert (<= (str.len var34E) 1))
(assert (<= (str.len var34F) 1))
(assert (<= (str.len var34G) 1))
(assert (<= (str.len var34H) 1))
(assert (= (str.++ preA (str.++ stem34 sufA)) (str.++ unch134A (str.++ ch34A unch234A))))
(assert (= (str.++ preB (str.++ stem34 sufB)) (str.++ unch134B (str.++ ch34B unch234B))))
(assert (= (str.++ preC (str.++ stem34 sufC)) (str.++ unch134C (str.++ ch34C unch234C))))
(assert (= (str.++ preD (str.++ stem34 sufD)) (str.++ unch134D (str.++ ch34D unch234D))))
(assert (= (str.++ preE (str.++ stem34 sufE)) (str.++ unch134E (str.++ ch34E unch234E))))
(assert (= (str.++ preF (str.++ stem34 sufF)) (str.++ unch134F (str.++ ch34F unch234F))))
(assert (= (str.++ preG (str.++ stem34 sufG)) (str.++ unch134G (str.++ ch34G unch234G))))
(assert (= (str.++ preH (str.++ stem34 sufH)) (str.++ unch134H (str.++ ch34H unch234H))))
(assert (= "DmjXlj" (str.++ unch134D (str.++ var34D unch234D))))
(assert (= "Dmjilj3" (str.++ unch134E (str.++ var34E unch234E))))
(assert (= "Dmjil3" (str.++ unch134F (str.++ var34F unch234F))))
(assert (= (str.len stem34) l34))
(assert (= (ite (= ch34A var34A) 0 1) sc34A))
(assert (= (ite (= ch34B var34B) 0 1) sc34B))
(assert (= (ite (= ch34C var34C) 0 1) sc34C))
(assert (= (ite (= ch34D var34D) 0 1) sc34D))
(assert (= (ite (= ch34E var34E) 0 1) sc34E))
(assert (= (ite (= ch34F var34F) 0 1) sc34F))
(assert (= (ite (= ch34G var34G) 0 1) sc34G))
(assert (= (ite (= ch34H var34H) 0 1) sc34H))
(assert (<= sc34A 1))
(assert (<= sc34B 1))
(assert (<= sc34C 1))
(assert (<= sc34D 1))
(assert (<= sc34E 1))
(assert (<= sc34F 1))
(assert (<= sc34G 1))
(assert (<= sc34H 1))
(assert (<= (str.len var35A) 1))
(assert (<= (str.len var35B) 1))
(assert (<= (str.len var35C) 1))
(assert (<= (str.len var35D) 1))
(assert (<= (str.len var35E) 1))
(assert (<= (str.len var35F) 1))
(assert (<= (str.len var35G) 1))
(assert (<= (str.len var35H) 1))
(assert (= (str.++ preA (str.++ stem35 sufA)) (str.++ unch135A (str.++ ch35A unch235A))))
(assert (= (str.++ preB (str.++ stem35 sufB)) (str.++ unch135B (str.++ ch35B unch235B))))
(assert (= (str.++ preC (str.++ stem35 sufC)) (str.++ unch135C (str.++ ch35C unch235C))))
(assert (= (str.++ preD (str.++ stem35 sufD)) (str.++ unch135D (str.++ ch35D unch235D))))
(assert (= (str.++ preE (str.++ stem35 sufE)) (str.++ unch135E (str.++ ch35E unch235E))))
(assert (= (str.++ preF (str.++ stem35 sufF)) (str.++ unch135F (str.++ ch35F unch235F))))
(assert (= (str.++ preG (str.++ stem35 sufG)) (str.++ unch135G (str.++ ch35G unch235G))))
(assert (= (str.++ preH (str.++ stem35 sufH)) (str.++ unch135H (str.++ ch35H unch235H))))
(assert (= "kjrjXlj" (str.++ unch135D (str.++ var35D unch235D))))
(assert (= "kjrjilj3" (str.++ unch135E (str.++ var35E unch235E))))
(assert (= "kjrjil3" (str.++ unch135F (str.++ var35F unch235F))))
(assert (= (str.len stem35) l35))
(assert (= (ite (= ch35A var35A) 0 1) sc35A))
(assert (= (ite (= ch35B var35B) 0 1) sc35B))
(assert (= (ite (= ch35C var35C) 0 1) sc35C))
(assert (= (ite (= ch35D var35D) 0 1) sc35D))
(assert (= (ite (= ch35E var35E) 0 1) sc35E))
(assert (= (ite (= ch35F var35F) 0 1) sc35F))
(assert (= (ite (= ch35G var35G) 0 1) sc35G))
(assert (= (ite (= ch35H var35H) 0 1) sc35H))
(assert (<= sc35A 1))
(assert (<= sc35B 1))
(assert (<= sc35C 1))
(assert (<= sc35D 1))
(assert (<= sc35E 1))
(assert (<= sc35F 1))
(assert (<= sc35G 1))
(assert (<= sc35H 1))
(assert (<= (str.len var36A) 1))
(assert (<= (str.len var36B) 1))
(assert (<= (str.len var36C) 1))
(assert (<= (str.len var36D) 1))
(assert (<= (str.len var36E) 1))
(assert (<= (str.len var36F) 1))
(assert (<= (str.len var36G) 1))
(assert (<= (str.len var36H) 1))
(assert (= (str.++ preA (str.++ stem36 sufA)) (str.++ unch136A (str.++ ch36A unch236A))))
(assert (= (str.++ preB (str.++ stem36 sufB)) (str.++ unch136B (str.++ ch36B unch236B))))
(assert (= (str.++ preC (str.++ stem36 sufC)) (str.++ unch136C (str.++ ch36C unch236C))))
(assert (= (str.++ preD (str.++ stem36 sufD)) (str.++ unch136D (str.++ ch36D unch236D))))
(assert (= (str.++ preE (str.++ stem36 sufE)) (str.++ unch136E (str.++ ch36E unch236E))))
(assert (= (str.++ preF (str.++ stem36 sufF)) (str.++ unch136F (str.++ ch36F unch236F))))
(assert (= (str.++ preG (str.++ stem36 sufG)) (str.++ unch136G (str.++ ch36G unch236G))))
(assert (= (str.++ preH (str.++ stem36 sufH)) (str.++ unch136H (str.++ ch36H unch236H))))
(assert (= "uE3tHlj" (str.++ unch136D (str.++ var36D unch236D))))
(assert (= "uE3tHljH" (str.++ unch136E (str.++ var36E unch236E))))
(assert (= "uE3tHlH" (str.++ unch136F (str.++ var36F unch236F))))
(assert (= (str.len stem36) l36))
(assert (= (ite (= ch36A var36A) 0 1) sc36A))
(assert (= (ite (= ch36B var36B) 0 1) sc36B))
(assert (= (ite (= ch36C var36C) 0 1) sc36C))
(assert (= (ite (= ch36D var36D) 0 1) sc36D))
(assert (= (ite (= ch36E var36E) 0 1) sc36E))
(assert (= (ite (= ch36F var36F) 0 1) sc36F))
(assert (= (ite (= ch36G var36G) 0 1) sc36G))
(assert (= (ite (= ch36H var36H) 0 1) sc36H))
(assert (<= sc36A 1))
(assert (<= sc36B 1))
(assert (<= sc36C 1))
(assert (<= sc36D 1))
(assert (<= sc36E 1))
(assert (<= sc36F 1))
(assert (<= sc36G 1))
(assert (<= sc36H 1))
(assert (<= (str.len var37A) 1))
(assert (<= (str.len var37B) 1))
(assert (<= (str.len var37C) 1))
(assert (<= (str.len var37D) 1))
(assert (<= (str.len var37E) 1))
(assert (<= (str.len var37F) 1))
(assert (<= (str.len var37G) 1))
(assert (<= (str.len var37H) 1))
(assert (= (str.++ preA (str.++ stem37 sufA)) (str.++ unch137A (str.++ ch37A unch237A))))
(assert (= (str.++ preB (str.++ stem37 sufB)) (str.++ unch137B (str.++ ch37B unch237B))))
(assert (= (str.++ preC (str.++ stem37 sufC)) (str.++ unch137C (str.++ ch37C unch237C))))
(assert (= (str.++ preD (str.++ stem37 sufD)) (str.++ unch137D (str.++ ch37D unch237D))))
(assert (= (str.++ preE (str.++ stem37 sufE)) (str.++ unch137E (str.++ ch37E unch237E))))
(assert (= (str.++ preF (str.++ stem37 sufF)) (str.++ unch137F (str.++ ch37F unch237F))))
(assert (= (str.++ preG (str.++ stem37 sufG)) (str.++ unch137G (str.++ ch37G unch237G))))
(assert (= (str.++ preH (str.++ stem37 sufH)) (str.++ unch137H (str.++ ch37H unch237H))))
(assert (= "gr4bjinj" (str.++ unch137D (str.++ var37D unch237D))))
(assert (= "gr4bHnjH" (str.++ unch137E (str.++ var37E unch237E))))
(assert (= "gr4bHnH" (str.++ unch137F (str.++ var37F unch237F))))
(assert (= (str.len stem37) l37))
(assert (= (ite (= ch37A var37A) 0 1) sc37A))
(assert (= (ite (= ch37B var37B) 0 1) sc37B))
(assert (= (ite (= ch37C var37C) 0 1) sc37C))
(assert (= (ite (= ch37D var37D) 0 1) sc37D))
(assert (= (ite (= ch37E var37E) 0 1) sc37E))
(assert (= (ite (= ch37F var37F) 0 1) sc37F))
(assert (= (ite (= ch37G var37G) 0 1) sc37G))
(assert (= (ite (= ch37H var37H) 0 1) sc37H))
(assert (<= sc37A 1))
(assert (<= sc37B 1))
(assert (<= sc37C 1))
(assert (<= sc37D 1))
(assert (<= sc37E 1))
(assert (<= sc37F 1))
(assert (<= sc37G 1))
(assert (<= sc37H 1))
(assert (<= (str.len var38A) 1))
(assert (<= (str.len var38B) 1))
(assert (<= (str.len var38C) 1))
(assert (<= (str.len var38D) 1))
(assert (<= (str.len var38E) 1))
(assert (<= (str.len var38F) 1))
(assert (<= (str.len var38G) 1))
(assert (<= (str.len var38H) 1))
(assert (= (str.++ preA (str.++ stem38 sufA)) (str.++ unch138A (str.++ ch38A unch238A))))
(assert (= (str.++ preB (str.++ stem38 sufB)) (str.++ unch138B (str.++ ch38B unch238B))))
(assert (= (str.++ preC (str.++ stem38 sufC)) (str.++ unch138C (str.++ ch38C unch238C))))
(assert (= (str.++ preD (str.++ stem38 sufD)) (str.++ unch138D (str.++ ch38D unch238D))))
(assert (= (str.++ preE (str.++ stem38 sufE)) (str.++ unch138E (str.++ ch38E unch238E))))
(assert (= (str.++ preF (str.++ stem38 sufF)) (str.++ unch138F (str.++ ch38F unch238F))))
(assert (= (str.++ preG (str.++ stem38 sufG)) (str.++ unch138G (str.++ ch38G unch238G))))
(assert (= (str.++ preH (str.++ stem38 sufH)) (str.++ unch138H (str.++ ch38H unch238H))))
(assert (= "2lHnj" (str.++ unch138D (str.++ var38D unch238D))))
(assert (= "2lHnjH" (str.++ unch138E (str.++ var38E unch238E))))
(assert (= "2lHnH" (str.++ unch138F (str.++ var38F unch238F))))
(assert (= (str.len stem38) l38))
(assert (= (ite (= ch38A var38A) 0 1) sc38A))
(assert (= (ite (= ch38B var38B) 0 1) sc38B))
(assert (= (ite (= ch38C var38C) 0 1) sc38C))
(assert (= (ite (= ch38D var38D) 0 1) sc38D))
(assert (= (ite (= ch38E var38E) 0 1) sc38E))
(assert (= (ite (= ch38F var38F) 0 1) sc38F))
(assert (= (ite (= ch38G var38G) 0 1) sc38G))
(assert (= (ite (= ch38H var38H) 0 1) sc38H))
(assert (<= sc38A 1))
(assert (<= sc38B 1))
(assert (<= sc38C 1))
(assert (<= sc38D 1))
(assert (<= sc38E 1))
(assert (<= sc38F 1))
(assert (<= sc38G 1))
(assert (<= sc38H 1))
(assert (<= (str.len var39A) 1))
(assert (<= (str.len var39B) 1))
(assert (<= (str.len var39C) 1))
(assert (<= (str.len var39D) 1))
(assert (<= (str.len var39E) 1))
(assert (<= (str.len var39F) 1))
(assert (<= (str.len var39G) 1))
(assert (<= (str.len var39H) 1))
(assert (= (str.++ preA (str.++ stem39 sufA)) (str.++ unch139A (str.++ ch39A unch239A))))
(assert (= (str.++ preB (str.++ stem39 sufB)) (str.++ unch139B (str.++ ch39B unch239B))))
(assert (= (str.++ preC (str.++ stem39 sufC)) (str.++ unch139C (str.++ ch39C unch239C))))
(assert (= (str.++ preD (str.++ stem39 sufD)) (str.++ unch139D (str.++ ch39D unch239D))))
(assert (= (str.++ preE (str.++ stem39 sufE)) (str.++ unch139E (str.++ ch39E unch239E))))
(assert (= (str.++ preF (str.++ stem39 sufF)) (str.++ unch139F (str.++ ch39F unch239F))))
(assert (= (str.++ preG (str.++ stem39 sufG)) (str.++ unch139G (str.++ ch39G unch239G))))
(assert (= (str.++ preH (str.++ stem39 sufH)) (str.++ unch139H (str.++ ch39H unch239H))))
(assert (= "jaEjmjXnj" (str.++ unch139D (str.++ var39D unch239D))))
(assert (= "jaEm4njH" (str.++ unch139E (str.++ var39E unch239E))))
(assert (= "jaEm4nH" (str.++ unch139F (str.++ var39F unch239F))))
(assert (= (str.len stem39) l39))
(assert (= (ite (= ch39A var39A) 0 1) sc39A))
(assert (= (ite (= ch39B var39B) 0 1) sc39B))
(assert (= (ite (= ch39C var39C) 0 1) sc39C))
(assert (= (ite (= ch39D var39D) 0 1) sc39D))
(assert (= (ite (= ch39E var39E) 0 1) sc39E))
(assert (= (ite (= ch39F var39F) 0 1) sc39F))
(assert (= (ite (= ch39G var39G) 0 1) sc39G))
(assert (= (ite (= ch39H var39H) 0 1) sc39H))
(assert (<= sc39A 1))
(assert (<= sc39B 1))
(assert (<= sc39C 1))
(assert (<= sc39D 1))
(assert (<= sc39E 1))
(assert (<= sc39F 1))
(assert (<= sc39G 1))
(assert (<= sc39H 1))
(assert (<= (str.len var40A) 1))
(assert (<= (str.len var40B) 1))
(assert (<= (str.len var40C) 1))
(assert (<= (str.len var40D) 1))
(assert (<= (str.len var40E) 1))
(assert (<= (str.len var40F) 1))
(assert (<= (str.len var40G) 1))
(assert (<= (str.len var40H) 1))
(assert (= (str.++ preA (str.++ stem40 sufA)) (str.++ unch140A (str.++ ch40A unch240A))))
(assert (= (str.++ preB (str.++ stem40 sufB)) (str.++ unch140B (str.++ ch40B unch240B))))
(assert (= (str.++ preC (str.++ stem40 sufC)) (str.++ unch140C (str.++ ch40C unch240C))))
(assert (= (str.++ preD (str.++ stem40 sufD)) (str.++ unch140D (str.++ ch40D unch240D))))
(assert (= (str.++ preE (str.++ stem40 sufE)) (str.++ unch140E (str.++ ch40E unch240E))))
(assert (= (str.++ preF (str.++ stem40 sufF)) (str.++ unch140F (str.++ ch40F unch240F))))
(assert (= (str.++ preG (str.++ stem40 sufG)) (str.++ unch140G (str.++ ch40G unch240G))))
(assert (= (str.++ preH (str.++ stem40 sufH)) (str.++ unch140H (str.++ ch40H unch240H))))
(assert (= "jOsjinj" (str.++ unch140D (str.++ var40D unch240D))))
(assert (= "jOsHnjH" (str.++ unch140E (str.++ var40E unch240E))))
(assert (= "jOsHnH" (str.++ unch140F (str.++ var40F unch240F))))
(assert (= (str.len stem40) l40))
(assert (= (ite (= ch40A var40A) 0 1) sc40A))
(assert (= (ite (= ch40B var40B) 0 1) sc40B))
(assert (= (ite (= ch40C var40C) 0 1) sc40C))
(assert (= (ite (= ch40D var40D) 0 1) sc40D))
(assert (= (ite (= ch40E var40E) 0 1) sc40E))
(assert (= (ite (= ch40F var40F) 0 1) sc40F))
(assert (= (ite (= ch40G var40G) 0 1) sc40G))
(assert (= (ite (= ch40H var40H) 0 1) sc40H))
(assert (<= sc40A 1))
(assert (<= sc40B 1))
(assert (<= sc40C 1))
(assert (<= sc40D 1))
(assert (<= sc40E 1))
(assert (<= sc40F 1))
(assert (<= sc40G 1))
(assert (<= sc40H 1))
(assert (<= (str.len var41A) 1))
(assert (<= (str.len var41B) 1))
(assert (<= (str.len var41C) 1))
(assert (<= (str.len var41D) 1))
(assert (<= (str.len var41E) 1))
(assert (<= (str.len var41F) 1))
(assert (<= (str.len var41G) 1))
(assert (<= (str.len var41H) 1))
(assert (= (str.++ preA (str.++ stem41 sufA)) (str.++ unch141A (str.++ ch41A unch241A))))
(assert (= (str.++ preB (str.++ stem41 sufB)) (str.++ unch141B (str.++ ch41B unch241B))))
(assert (= (str.++ preC (str.++ stem41 sufC)) (str.++ unch141C (str.++ ch41C unch241C))))
(assert (= (str.++ preD (str.++ stem41 sufD)) (str.++ unch141D (str.++ ch41D unch241D))))
(assert (= (str.++ preE (str.++ stem41 sufE)) (str.++ unch141E (str.++ ch41E unch241E))))
(assert (= (str.++ preF (str.++ stem41 sufF)) (str.++ unch141F (str.++ ch41F unch241F))))
(assert (= (str.++ preG (str.++ stem41 sufG)) (str.++ unch141G (str.++ ch41G unch241G))))
(assert (= (str.++ preH (str.++ stem41 sufH)) (str.++ unch141H (str.++ ch41H unch241H))))
(assert (= "zj3kj" (str.++ unch141D (str.++ var41D unch241D))))
(assert (= "zj3kjH" (str.++ unch141E (str.++ var41E unch241E))))
(assert (= "zj3tH" (str.++ unch141F (str.++ var41F unch241F))))
(assert (= (str.len stem41) l41))
(assert (= (ite (= ch41A var41A) 0 1) sc41A))
(assert (= (ite (= ch41B var41B) 0 1) sc41B))
(assert (= (ite (= ch41C var41C) 0 1) sc41C))
(assert (= (ite (= ch41D var41D) 0 1) sc41D))
(assert (= (ite (= ch41E var41E) 0 1) sc41E))
(assert (= (ite (= ch41F var41F) 0 1) sc41F))
(assert (= (ite (= ch41G var41G) 0 1) sc41G))
(assert (= (ite (= ch41H var41H) 0 1) sc41H))
(assert (<= sc41A 1))
(assert (<= sc41B 1))
(assert (<= sc41C 1))
(assert (<= sc41D 1))
(assert (<= sc41E 1))
(assert (<= sc41F 1))
(assert (<= sc41G 1))
(assert (<= sc41H 1))
(assert (<= (str.len var42A) 1))
(assert (<= (str.len var42B) 1))
(assert (<= (str.len var42C) 1))
(assert (<= (str.len var42D) 1))
(assert (<= (str.len var42E) 1))
(assert (<= (str.len var42F) 1))
(assert (<= (str.len var42G) 1))
(assert (<= (str.len var42H) 1))
(assert (= (str.++ preA (str.++ stem42 sufA)) (str.++ unch142A (str.++ ch42A unch242A))))
(assert (= (str.++ preB (str.++ stem42 sufB)) (str.++ unch142B (str.++ ch42B unch242B))))
(assert (= (str.++ preC (str.++ stem42 sufC)) (str.++ unch142C (str.++ ch42C unch242C))))
(assert (= (str.++ preD (str.++ stem42 sufD)) (str.++ unch142D (str.++ ch42D unch242D))))
(assert (= (str.++ preE (str.++ stem42 sufE)) (str.++ unch142E (str.++ ch42E unch242E))))
(assert (= (str.++ preF (str.++ stem42 sufF)) (str.++ unch142F (str.++ ch42F unch242F))))
(assert (= (str.++ preG (str.++ stem42 sufG)) (str.++ unch142G (str.++ ch42G unch242G))))
(assert (= (str.++ preH (str.++ stem42 sufH)) (str.++ unch142H (str.++ ch42H unch242H))))
(assert (= "mOsjkj" (str.++ unch142G (str.++ var42G unch242G))))
(assert (= "mOstH" (str.++ unch142H (str.++ var42H unch242H))))
(assert (= (str.len stem42) l42))
(assert (= (ite (= ch42A var42A) 0 1) sc42A))
(assert (= (ite (= ch42B var42B) 0 1) sc42B))
(assert (= (ite (= ch42C var42C) 0 1) sc42C))
(assert (= (ite (= ch42D var42D) 0 1) sc42D))
(assert (= (ite (= ch42E var42E) 0 1) sc42E))
(assert (= (ite (= ch42F var42F) 0 1) sc42F))
(assert (= (ite (= ch42G var42G) 0 1) sc42G))
(assert (= (ite (= ch42H var42H) 0 1) sc42H))
(assert (<= sc42A 1))
(assert (<= sc42B 1))
(assert (<= sc42C 1))
(assert (<= sc42D 1))
(assert (<= sc42E 1))
(assert (<= sc42F 1))
(assert (<= sc42G 1))
(assert (<= sc42H 1))
(assert (<= (str.len var43A) 1))
(assert (<= (str.len var43B) 1))
(assert (<= (str.len var43C) 1))
(assert (<= (str.len var43D) 1))
(assert (<= (str.len var43E) 1))
(assert (<= (str.len var43F) 1))
(assert (<= (str.len var43G) 1))
(assert (<= (str.len var43H) 1))
(assert (= (str.++ preA (str.++ stem43 sufA)) (str.++ unch143A (str.++ ch43A unch243A))))
(assert (= (str.++ preB (str.++ stem43 sufB)) (str.++ unch143B (str.++ ch43B unch243B))))
(assert (= (str.++ preC (str.++ stem43 sufC)) (str.++ unch143C (str.++ ch43C unch243C))))
(assert (= (str.++ preD (str.++ stem43 sufD)) (str.++ unch143D (str.++ ch43D unch243D))))
(assert (= (str.++ preE (str.++ stem43 sufE)) (str.++ unch143E (str.++ ch43E unch243E))))
(assert (= (str.++ preF (str.++ stem43 sufF)) (str.++ unch143F (str.++ ch43F unch243F))))
(assert (= (str.++ preG (str.++ stem43 sufG)) (str.++ unch143G (str.++ ch43G unch243G))))
(assert (= (str.++ preH (str.++ stem43 sufH)) (str.++ unch143H (str.++ ch43H unch243H))))
(assert (= "sjmjXrjkj" (str.++ unch143G (str.++ var43G unch243G))))
(assert (= "sm4rtH" (str.++ unch143H (str.++ var43H unch243H))))
(assert (= (str.len stem43) l43))
(assert (= (ite (= ch43A var43A) 0 1) sc43A))
(assert (= (ite (= ch43B var43B) 0 1) sc43B))
(assert (= (ite (= ch43C var43C) 0 1) sc43C))
(assert (= (ite (= ch43D var43D) 0 1) sc43D))
(assert (= (ite (= ch43E var43E) 0 1) sc43E))
(assert (= (ite (= ch43F var43F) 0 1) sc43F))
(assert (= (ite (= ch43G var43G) 0 1) sc43G))
(assert (= (ite (= ch43H var43H) 0 1) sc43H))
(assert (<= sc43A 1))
(assert (<= sc43B 1))
(assert (<= sc43C 1))
(assert (<= sc43D 1))
(assert (<= sc43E 1))
(assert (<= sc43F 1))
(assert (<= sc43G 1))
(assert (<= sc43H 1))
(assert (<= (str.len var44A) 1))
(assert (<= (str.len var44B) 1))
(assert (<= (str.len var44C) 1))
(assert (<= (str.len var44D) 1))
(assert (<= (str.len var44E) 1))
(assert (<= (str.len var44F) 1))
(assert (<= (str.len var44G) 1))
(assert (<= (str.len var44H) 1))
(assert (= (str.++ preA (str.++ stem44 sufA)) (str.++ unch144A (str.++ ch44A unch244A))))
(assert (= (str.++ preB (str.++ stem44 sufB)) (str.++ unch144B (str.++ ch44B unch244B))))
(assert (= (str.++ preC (str.++ stem44 sufC)) (str.++ unch144C (str.++ ch44C unch244C))))
(assert (= (str.++ preD (str.++ stem44 sufD)) (str.++ unch144D (str.++ ch44D unch244D))))
(assert (= (str.++ preE (str.++ stem44 sufE)) (str.++ unch144E (str.++ ch44E unch244E))))
(assert (= (str.++ preF (str.++ stem44 sufF)) (str.++ unch144F (str.++ ch44F unch244F))))
(assert (= (str.++ preG (str.++ stem44 sufG)) (str.++ unch144G (str.++ ch44G unch244G))))
(assert (= (str.++ preH (str.++ stem44 sufH)) (str.++ unch144H (str.++ ch44H unch244H))))
(assert (= "vjXsjkj" (str.++ unch144G (str.++ var44G unch244G))))
(assert (= "vjXstH" (str.++ unch144H (str.++ var44H unch244H))))
(assert (= (str.len stem44) l44))
(assert (= (ite (= ch44A var44A) 0 1) sc44A))
(assert (= (ite (= ch44B var44B) 0 1) sc44B))
(assert (= (ite (= ch44C var44C) 0 1) sc44C))
(assert (= (ite (= ch44D var44D) 0 1) sc44D))
(assert (= (ite (= ch44E var44E) 0 1) sc44E))
(assert (= (ite (= ch44F var44F) 0 1) sc44F))
(assert (= (ite (= ch44G var44G) 0 1) sc44G))
(assert (= (ite (= ch44H var44H) 0 1) sc44H))
(assert (<= sc44A 1))
(assert (<= sc44B 1))
(assert (<= sc44C 1))
(assert (<= sc44D 1))
(assert (<= sc44E 1))
(assert (<= sc44F 1))
(assert (<= sc44G 1))
(assert (<= sc44H 1))
(assert (<= (str.len var45A) 1))
(assert (<= (str.len var45B) 1))
(assert (<= (str.len var45C) 1))
(assert (<= (str.len var45D) 1))
(assert (<= (str.len var45E) 1))
(assert (<= (str.len var45F) 1))
(assert (<= (str.len var45G) 1))
(assert (<= (str.len var45H) 1))
(assert (= (str.++ preA (str.++ stem45 sufA)) (str.++ unch145A (str.++ ch45A unch245A))))
(assert (= (str.++ preB (str.++ stem45 sufB)) (str.++ unch145B (str.++ ch45B unch245B))))
(assert (= (str.++ preC (str.++ stem45 sufC)) (str.++ unch145C (str.++ ch45C unch245C))))
(assert (= (str.++ preD (str.++ stem45 sufD)) (str.++ unch145D (str.++ ch45D unch245D))))
(assert (= (str.++ preE (str.++ stem45 sufE)) (str.++ unch145E (str.++ ch45E unch245E))))
(assert (= (str.++ preF (str.++ stem45 sufF)) (str.++ unch145F (str.++ ch45F unch245F))))
(assert (= (str.++ preG (str.++ stem45 sufG)) (str.++ unch145G (str.++ ch45G unch245G))))
(assert (= (str.++ preH (str.++ stem45 sufH)) (str.++ unch145H (str.++ ch45H unch245H))))
(assert (= "rOgjisjkj" (str.++ unch145G (str.++ var45G unch245G))))
(assert (= "rOdostH" (str.++ unch145H (str.++ var45H unch245H))))
(assert (= (str.len stem45) l45))
(assert (= (ite (= ch45A var45A) 0 1) sc45A))
(assert (= (ite (= ch45B var45B) 0 1) sc45B))
(assert (= (ite (= ch45C var45C) 0 1) sc45C))
(assert (= (ite (= ch45D var45D) 0 1) sc45D))
(assert (= (ite (= ch45E var45E) 0 1) sc45E))
(assert (= (ite (= ch45F var45F) 0 1) sc45F))
(assert (= (ite (= ch45G var45G) 0 1) sc45G))
(assert (= (ite (= ch45H var45H) 0 1) sc45H))
(assert (<= sc45A 1))
(assert (<= sc45B 1))
(assert (<= sc45C 1))
(assert (<= sc45D 1))
(assert (<= sc45E 1))
(assert (<= sc45F 1))
(assert (<= sc45G 1))
(assert (<= sc45H 1))
(assert (<= (str.len var46A) 1))
(assert (<= (str.len var46B) 1))
(assert (<= (str.len var46C) 1))
(assert (<= (str.len var46D) 1))
(assert (<= (str.len var46E) 1))
(assert (<= (str.len var46F) 1))
(assert (<= (str.len var46G) 1))
(assert (<= (str.len var46H) 1))
(assert (= (str.++ preA (str.++ stem46 sufA)) (str.++ unch146A (str.++ ch46A unch246A))))
(assert (= (str.++ preB (str.++ stem46 sufB)) (str.++ unch146B (str.++ ch46B unch246B))))
(assert (= (str.++ preC (str.++ stem46 sufC)) (str.++ unch146C (str.++ ch46C unch246C))))
(assert (= (str.++ preD (str.++ stem46 sufD)) (str.++ unch146D (str.++ ch46D unch246D))))
(assert (= (str.++ preE (str.++ stem46 sufE)) (str.++ unch146E (str.++ ch46E unch246E))))
(assert (= (str.++ preF (str.++ stem46 sufF)) (str.++ unch146F (str.++ ch46F unch246F))))
(assert (= (str.++ preG (str.++ stem46 sufG)) (str.++ unch146G (str.++ ch46G unch246G))))
(assert (= (str.++ preH (str.++ stem46 sufH)) (str.++ unch146H (str.++ ch46H unch246H))))
(assert (= "sjXlj" (str.++ unch146G (str.++ var46G unch246G))))
(assert (= "s2lH" (str.++ unch146H (str.++ var46H unch246H))))
(assert (= (str.len stem46) l46))
(assert (= (ite (= ch46A var46A) 0 1) sc46A))
(assert (= (ite (= ch46B var46B) 0 1) sc46B))
(assert (= (ite (= ch46C var46C) 0 1) sc46C))
(assert (= (ite (= ch46D var46D) 0 1) sc46D))
(assert (= (ite (= ch46E var46E) 0 1) sc46E))
(assert (= (ite (= ch46F var46F) 0 1) sc46F))
(assert (= (ite (= ch46G var46G) 0 1) sc46G))
(assert (= (ite (= ch46H var46H) 0 1) sc46H))
(assert (<= sc46A 1))
(assert (<= sc46B 1))
(assert (<= sc46C 1))
(assert (<= sc46D 1))
(assert (<= sc46E 1))
(assert (<= sc46F 1))
(assert (<= sc46G 1))
(assert (<= sc46H 1))
(assert (<= (str.len var47A) 1))
(assert (<= (str.len var47B) 1))
(assert (<= (str.len var47C) 1))
(assert (<= (str.len var47D) 1))
(assert (<= (str.len var47E) 1))
(assert (<= (str.len var47F) 1))
(assert (<= (str.len var47G) 1))
(assert (<= (str.len var47H) 1))
(assert (= (str.++ preA (str.++ stem47 sufA)) (str.++ unch147A (str.++ ch47A unch247A))))
(assert (= (str.++ preB (str.++ stem47 sufB)) (str.++ unch147B (str.++ ch47B unch247B))))
(assert (= (str.++ preC (str.++ stem47 sufC)) (str.++ unch147C (str.++ ch47C unch247C))))
(assert (= (str.++ preD (str.++ stem47 sufD)) (str.++ unch147D (str.++ ch47D unch247D))))
(assert (= (str.++ preE (str.++ stem47 sufE)) (str.++ unch147E (str.++ ch47E unch247E))))
(assert (= (str.++ preF (str.++ stem47 sufF)) (str.++ unch147F (str.++ ch47F unch247F))))
(assert (= (str.++ preG (str.++ stem47 sufG)) (str.++ unch147G (str.++ ch47G unch247G))))
(assert (= (str.++ preH (str.++ stem47 sufH)) (str.++ unch147H (str.++ ch47H unch247H))))
(assert (= "p2Bjisjkj" (str.++ unch147G (str.++ var47G unch247G))))
(assert (= "p2BHstH" (str.++ unch147H (str.++ var47H unch247H))))
(assert (= (str.len stem47) l47))
(assert (= (ite (= ch47A var47A) 0 1) sc47A))
(assert (= (ite (= ch47B var47B) 0 1) sc47B))
(assert (= (ite (= ch47C var47C) 0 1) sc47C))
(assert (= (ite (= ch47D var47D) 0 1) sc47D))
(assert (= (ite (= ch47E var47E) 0 1) sc47E))
(assert (= (ite (= ch47F var47F) 0 1) sc47F))
(assert (= (ite (= ch47G var47G) 0 1) sc47G))
(assert (= (ite (= ch47H var47H) 0 1) sc47H))
(assert (<= sc47A 1))
(assert (<= sc47B 1))
(assert (<= sc47C 1))
(assert (<= sc47D 1))
(assert (<= sc47E 1))
(assert (<= sc47F 1))
(assert (<= sc47G 1))
(assert (<= sc47H 1))
(assert (<= (str.len var48A) 1))
(assert (<= (str.len var48B) 1))
(assert (<= (str.len var48C) 1))
(assert (<= (str.len var48D) 1))
(assert (<= (str.len var48E) 1))
(assert (<= (str.len var48F) 1))
(assert (<= (str.len var48G) 1))
(assert (<= (str.len var48H) 1))
(assert (= (str.++ preA (str.++ stem48 sufA)) (str.++ unch148A (str.++ ch48A unch248A))))
(assert (= (str.++ preB (str.++ stem48 sufB)) (str.++ unch148B (str.++ ch48B unch248B))))
(assert (= (str.++ preC (str.++ stem48 sufC)) (str.++ unch148C (str.++ ch48C unch248C))))
(assert (= (str.++ preD (str.++ stem48 sufD)) (str.++ unch148D (str.++ ch48D unch248D))))
(assert (= (str.++ preE (str.++ stem48 sufE)) (str.++ unch148E (str.++ ch48E unch248E))))
(assert (= (str.++ preF (str.++ stem48 sufF)) (str.++ unch148F (str.++ ch48F unch248F))))
(assert (= (str.++ preG (str.++ stem48 sufG)) (str.++ unch148G (str.++ ch48G unch248G))))
(assert (= (str.++ preH (str.++ stem48 sufH)) (str.++ unch148H (str.++ ch48H unch248H))))
(assert (= "zOmjikj" (str.++ unch148G (str.++ var48G unch248G))))
(assert (= "zOmHtH" (str.++ unch148H (str.++ var48H unch248H))))
(assert (= (str.len stem48) l48))
(assert (= (ite (= ch48A var48A) 0 1) sc48A))
(assert (= (ite (= ch48B var48B) 0 1) sc48B))
(assert (= (ite (= ch48C var48C) 0 1) sc48C))
(assert (= (ite (= ch48D var48D) 0 1) sc48D))
(assert (= (ite (= ch48E var48E) 0 1) sc48E))
(assert (= (ite (= ch48F var48F) 0 1) sc48F))
(assert (= (ite (= ch48G var48G) 0 1) sc48G))
(assert (= (ite (= ch48H var48H) 0 1) sc48H))
(assert (<= sc48A 1))
(assert (<= sc48B 1))
(assert (<= sc48C 1))
(assert (<= sc48D 1))
(assert (<= sc48E 1))
(assert (<= sc48F 1))
(assert (<= sc48G 1))
(assert (<= sc48H 1))
(assert (<= (str.len var49A) 1))
(assert (<= (str.len var49B) 1))
(assert (<= (str.len var49C) 1))
(assert (<= (str.len var49D) 1))
(assert (<= (str.len var49E) 1))
(assert (<= (str.len var49F) 1))
(assert (<= (str.len var49G) 1))
(assert (<= (str.len var49H) 1))
(assert (= (str.++ preA (str.++ stem49 sufA)) (str.++ unch149A (str.++ ch49A unch249A))))
(assert (= (str.++ preB (str.++ stem49 sufB)) (str.++ unch149B (str.++ ch49B unch249B))))
(assert (= (str.++ preC (str.++ stem49 sufC)) (str.++ unch149C (str.++ ch49C unch249C))))
(assert (= (str.++ preD (str.++ stem49 sufD)) (str.++ unch149D (str.++ ch49D unch249D))))
(assert (= (str.++ preE (str.++ stem49 sufE)) (str.++ unch149E (str.++ ch49E unch249E))))
(assert (= (str.++ preF (str.++ stem49 sufF)) (str.++ unch149F (str.++ ch49F unch249F))))
(assert (= (str.++ preG (str.++ stem49 sufG)) (str.++ unch149G (str.++ ch49G unch249G))))
(assert (= (str.++ preH (str.++ stem49 sufH)) (str.++ unch149H (str.++ ch49H unch249H))))
(assert (= "skOtHrjkj" (str.++ unch149G (str.++ var49G unch249G))))
(assert (= "skOtHrtH" (str.++ unch149H (str.++ var49H unch249H))))
(assert (= (str.len stem49) l49))
(assert (= (ite (= ch49A var49A) 0 1) sc49A))
(assert (= (ite (= ch49B var49B) 0 1) sc49B))
(assert (= (ite (= ch49C var49C) 0 1) sc49C))
(assert (= (ite (= ch49D var49D) 0 1) sc49D))
(assert (= (ite (= ch49E var49E) 0 1) sc49E))
(assert (= (ite (= ch49F var49F) 0 1) sc49F))
(assert (= (ite (= ch49G var49G) 0 1) sc49G))
(assert (= (ite (= ch49H var49H) 0 1) sc49H))
(assert (<= sc49A 1))
(assert (<= sc49B 1))
(assert (<= sc49C 1))
(assert (<= sc49D 1))
(assert (<= sc49E 1))
(assert (<= sc49F 1))
(assert (<= sc49G 1))
(assert (<= sc49H 1))
(assert (<= (str.len var50A) 1))
(assert (<= (str.len var50B) 1))
(assert (<= (str.len var50C) 1))
(assert (<= (str.len var50D) 1))
(assert (<= (str.len var50E) 1))
(assert (<= (str.len var50F) 1))
(assert (<= (str.len var50G) 1))
(assert (<= (str.len var50H) 1))
(assert (= (str.++ preA (str.++ stem50 sufA)) (str.++ unch150A (str.++ ch50A unch250A))))
(assert (= (str.++ preB (str.++ stem50 sufB)) (str.++ unch150B (str.++ ch50B unch250B))))
(assert (= (str.++ preC (str.++ stem50 sufC)) (str.++ unch150C (str.++ ch50C unch250C))))
(assert (= (str.++ preD (str.++ stem50 sufD)) (str.++ unch150D (str.++ ch50D unch250D))))
(assert (= (str.++ preE (str.++ stem50 sufE)) (str.++ unch150E (str.++ ch50E unch250E))))
(assert (= (str.++ preF (str.++ stem50 sufF)) (str.++ unch150F (str.++ ch50F unch250F))))
(assert (= (str.++ preG (str.++ stem50 sufG)) (str.++ unch150G (str.++ ch50G unch250G))))
(assert (= (str.++ preH (str.++ stem50 sufH)) (str.++ unch150H (str.++ ch50H unch250H))))
(assert (= "kjXsjkj" (str.++ unch150G (str.++ var50G unch250G))))
(assert (= "k2stH" (str.++ unch150H (str.++ var50H unch250H))))
(assert (= (str.len stem50) l50))
(assert (= (ite (= ch50A var50A) 0 1) sc50A))
(assert (= (ite (= ch50B var50B) 0 1) sc50B))
(assert (= (ite (= ch50C var50C) 0 1) sc50C))
(assert (= (ite (= ch50D var50D) 0 1) sc50D))
(assert (= (ite (= ch50E var50E) 0 1) sc50E))
(assert (= (ite (= ch50F var50F) 0 1) sc50F))
(assert (= (ite (= ch50G var50G) 0 1) sc50G))
(assert (= (ite (= ch50H var50H) 0 1) sc50H))
(assert (<= sc50A 1))
(assert (<= sc50B 1))
(assert (<= sc50C 1))
(assert (<= sc50D 1))
(assert (<= sc50E 1))
(assert (<= sc50F 1))
(assert (<= sc50G 1))
(assert (<= sc50H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      sc7G
      sc7H
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      sc8G
      sc8H
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      sc9G
      sc9H
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      sc10G
      sc10H
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      sc11G
      sc11H
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      sc12G
      sc12H
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      sc13G
      sc13H
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      sc14G
      sc14H
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      sc15G
      sc15H
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      sc16G
      sc16H
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      sc17G
      sc17H
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      sc18G
      sc18H
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      sc19G
      sc19H
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      sc20G
      sc20H
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      sc21G
      sc21H
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      sc22G
      sc22H
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      sc23G
      sc23H
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      sc24G
      sc24H
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      sc25G
      sc25H
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      sc26G
      sc26H
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      sc27G
      sc27H
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      sc28G
      sc28H
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      sc29G
      sc29H
      0
      sc30A
      sc30B
      sc30C
      sc30D
      sc30E
      sc30F
      sc30G
      sc30H
      0
      sc31A
      sc31B
      sc31C
      sc31D
      sc31E
      sc31F
      sc31G
      sc31H
      0
      sc32A
      sc32B
      sc32C
      sc32D
      sc32E
      sc32F
      sc32G
      sc32H
      0
      sc33A
      sc33B
      sc33C
      sc33D
      sc33E
      sc33F
      sc33G
      sc33H
      0
      sc34A
      sc34B
      sc34C
      sc34D
      sc34E
      sc34F
      sc34G
      sc34H
      0
      sc35A
      sc35B
      sc35C
      sc35D
      sc35E
      sc35F
      sc35G
      sc35H
      0
      sc36A
      sc36B
      sc36C
      sc36D
      sc36E
      sc36F
      sc36G
      sc36H
      0
      sc37A
      sc37B
      sc37C
      sc37D
      sc37E
      sc37F
      sc37G
      sc37H
      0
      sc38A
      sc38B
      sc38C
      sc38D
      sc38E
      sc38F
      sc38G
      sc38H
      0
      sc39A
      sc39B
      sc39C
      sc39D
      sc39E
      sc39F
      sc39G
      sc39H
      0
      sc40A
      sc40B
      sc40C
      sc40D
      sc40E
      sc40F
      sc40G
      sc40H
      0
      sc41A
      sc41B
      sc41C
      sc41D
      sc41E
      sc41F
      sc41G
      sc41H
      0
      sc42A
      sc42B
      sc42C
      sc42D
      sc42E
      sc42F
      sc42G
      sc42H
      0
      sc43A
      sc43B
      sc43C
      sc43D
      sc43E
      sc43F
      sc43G
      sc43H
      0
      sc44A
      sc44B
      sc44C
      sc44D
      sc44E
      sc44F
      sc44G
      sc44H
      0
      sc45A
      sc45B
      sc45C
      sc45D
      sc45E
      sc45F
      sc45G
      sc45H
      0
      sc46A
      sc46B
      sc46C
      sc46D
      sc46E
      sc46F
      sc46G
      sc46H
      0
      sc47A
      sc47B
      sc47C
      sc47D
      sc47E
      sc47F
      sc47G
      sc47H
      0
      sc48A
      sc48B
      sc48C
      sc48D
      sc48E
      sc48F
      sc48G
      sc48H
      0
      sc49A
      sc49B
      sc49C
      sc49D
      sc49E
      sc49F
      sc49G
      sc49H
      0
      sc50A
      sc50B
      sc50C
      sc50D
      sc50E
      sc50F
      sc50G
      sc50H)
   14))
