[['kubala', 'kubalana', 'kubalila', 'kubalilana', 'kutúbála', 'kukíbála', 'kutúbálila', 'kukítúbalila'], ['kuɡaja', 'kuɡajana', 'kuɡajila', 'kuɡajilana', 'kutúɡája', 'kukíɡája', 'kutúɡájila', 'kukítúɡajila'], ['kuɡula', 'kuɡulana', 'kuɡulila', 'kuɡulilana', 'kutúɡúla', 'kukíɡúla', 'kutúɡúlila', 'kukítúɡulila'], ['kubála', 'kubálána', 'kubálíla', 'kubálílana', 'kutúbála', 'kukíbála', 'kutúbálila', 'kukítúbalila'], ['kulúma', 'kulúmána', 'kulúmíla', 'kulúmílana', 'kutúlúma', 'kukílúma', 'kutúlúmila', 'kukítúlumila'], ['kusúna', 'kusúnána', 'kusúníla', 'kusúnílana', 'kutúsúna', 'kukísúna', 'kutúsúnila', 'kukítúsunila'], ['kulába', 'kulábána', 'kulábíla', 'kulábílana', 'kutúlába', 'kukílába', 'kutúlábila', 'kukítúlabila']]
kubala  >  ['k', 'u', 'b', 'a', 'l', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
kubalana  >  ['k', 'u', 'b', 'a', 'l', 'a', 'n', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
kubalila  >  ['k', 'u', 'b', 'a', 'l', 'i', 'l', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
kubalilana  >  ['k', 'u', 'b', 'a', 'l', 'i', 'l', 'a', 'n', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
kutúbála  >  ['k', 'u', 't', 'O', 'b', 'X', 'l', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X'}
kukíbála  >  ['k', 'u', 'k', 'Z', 'b', 'X', 'l', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kutúbálila  >  ['k', 'u', 't', 'O', 'b', 'X', 'l', 'i', 'l', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kukítúbalila  >  ['k', 'u', 'k', 'Z', 't', 'O', 'b', 'a', 'l', 'i', 'l', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kuɡaja  >  ['k', 'u', 'g', 'a', 'j', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kuɡajana  >  ['k', 'u', 'g', 'a', 'j', 'a', 'n', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kuɡajila  >  ['k', 'u', 'g', 'a', 'j', 'i', 'l', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kuɡajilana  >  ['k', 'u', 'g', 'a', 'j', 'i', 'l', 'a', 'n', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kutúɡája  >  ['k', 'u', 't', 'O', 'g', 'X', 'j', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kukíɡája  >  ['k', 'u', 'k', 'Z', 'g', 'X', 'j', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kutúɡájila  >  ['k', 'u', 't', 'O', 'g', 'X', 'j', 'i', 'l', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kukítúɡajila  >  ['k', 'u', 'k', 'Z', 't', 'O', 'g', 'a', 'j', 'i', 'l', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kuɡula  >  ['k', 'u', 'g', 'u', 'l', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kuɡulana  >  ['k', 'u', 'g', 'u', 'l', 'a', 'n', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kuɡulila  >  ['k', 'u', 'g', 'u', 'l', 'i', 'l', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kuɡulilana  >  ['k', 'u', 'g', 'u', 'l', 'i', 'l', 'a', 'n', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kutúɡúla  >  ['k', 'u', 't', 'O', 'g', 'O', 'l', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kukíɡúla  >  ['k', 'u', 'k', 'Z', 'g', 'O', 'l', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kutúɡúlila  >  ['k', 'u', 't', 'O', 'g', 'O', 'l', 'i', 'l', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kukítúɡulila  >  ['k', 'u', 'k', 'Z', 't', 'O', 'g', 'u', 'l', 'i', 'l', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kubála  >  ['k', 'u', 'b', 'X', 'l', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kubálána  >  ['k', 'u', 'b', 'X', 'l', 'X', 'n', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kubálíla  >  ['k', 'u', 'b', 'X', 'l', 'Z', 'l', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kubálílana  >  ['k', 'u', 'b', 'X', 'l', 'Z', 'l', 'a', 'n', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kutúbála  >  ['k', 'u', 't', 'O', 'b', 'X', 'l', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kukíbála  >  ['k', 'u', 'k', 'Z', 'b', 'X', 'l', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kutúbálila  >  ['k', 'u', 't', 'O', 'b', 'X', 'l', 'i', 'l', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kukítúbalila  >  ['k', 'u', 'k', 'Z', 't', 'O', 'b', 'a', 'l', 'i', 'l', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kulúma  >  ['k', 'u', 'l', 'O', 'm', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kulúmána  >  ['k', 'u', 'l', 'O', 'm', 'X', 'n', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kulúmíla  >  ['k', 'u', 'l', 'O', 'm', 'Z', 'l', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kulúmílana  >  ['k', 'u', 'l', 'O', 'm', 'Z', 'l', 'a', 'n', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kutúlúma  >  ['k', 'u', 't', 'O', 'l', 'O', 'm', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kukílúma  >  ['k', 'u', 'k', 'Z', 'l', 'O', 'm', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kutúlúmila  >  ['k', 'u', 't', 'O', 'l', 'O', 'm', 'i', 'l', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kukítúlumila  >  ['k', 'u', 'k', 'Z', 't', 'O', 'l', 'u', 'm', 'i', 'l', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kusúna  >  ['k', 'u', 's', 'O', 'n', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kusúnána  >  ['k', 'u', 's', 'O', 'n', 'X', 'n', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kusúníla  >  ['k', 'u', 's', 'O', 'n', 'Z', 'l', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kusúnílana  >  ['k', 'u', 's', 'O', 'n', 'Z', 'l', 'a', 'n', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kutúsúna  >  ['k', 'u', 't', 'O', 's', 'O', 'n', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kukísúna  >  ['k', 'u', 'k', 'Z', 's', 'O', 'n', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kutúsúnila  >  ['k', 'u', 't', 'O', 's', 'O', 'n', 'i', 'l', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kukítúsunila  >  ['k', 'u', 'k', 'Z', 't', 'O', 's', 'u', 'n', 'i', 'l', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kulába  >  ['k', 'u', 'l', 'X', 'b', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kulábána  >  ['k', 'u', 'l', 'X', 'b', 'X', 'n', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kulábíla  >  ['k', 'u', 'l', 'X', 'b', 'Z', 'l', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kulábílana  >  ['k', 'u', 'l', 'X', 'b', 'Z', 'l', 'a', 'n', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kutúlába  >  ['k', 'u', 't', 'O', 'l', 'X', 'b', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kukílába  >  ['k', 'u', 'k', 'Z', 'l', 'X', 'b', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kutúlábila  >  ['k', 'u', 't', 'O', 'l', 'X', 'b', 'i', 'l', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
kukítúlabila  >  ['k', 'u', 'k', 'Z', 't', 'O', 'l', 'a', 'b', 'i', 'l', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ú': 'O', 'á': 'X', 'í': 'Z'}
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   4))
(assert (= (+ 0 sc0A sc1A sc2A sc3A sc4A sc5A sc6A) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   4))
(assert (= (+ 0 sc0B sc1B sc2B sc3B sc4B sc5B sc6B) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   4))
(assert (= (+ 0 sc0C sc1C sc2C sc3C sc4C sc5C sc6C) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   4))
(assert (= (+ 0 sc0D sc1D sc2D sc3D sc4D sc5D sc6D) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   4))
(assert (= (+ 0 sc0E sc1E sc2E sc3E sc4E sc5E sc6E) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   4))
(assert (= (+ 0 sc0F sc1F sc2F sc3F sc4F sc5F sc6F) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   4))
(assert (= (+ 0 sc0G sc1G sc2G sc3G sc4G sc5G sc6G) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   4))
(assert (= (+ 0 sc0H sc1H sc2H sc3H sc4H sc5H sc6H) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   5))
(assert (= (+ 0 sc0A sc1A sc2A sc3A sc4A sc5A sc6A) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   5))
(assert (= (+ 0 sc0B sc1B sc2B sc3B sc4B sc5B sc6B) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   5))
(assert (= (+ 0 sc0C sc1C sc2C sc3C sc4C sc5C sc6C) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   5))
(assert (= (+ 0 sc0D sc1D sc2D sc3D sc4D sc5D sc6D) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   5))
(assert (= (+ 0 sc0E sc1E sc2E sc3E sc4E sc5E sc6E) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   5))
(assert (= (+ 0 sc0F sc1F sc2F sc3F sc4F sc5F sc6F) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   5))
(assert (= (+ 0 sc0G sc1G sc2G sc3G sc4G sc5G sc6G) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   5))
(assert (= (+ 0 sc0H sc1H sc2H sc3H sc4H sc5H sc6H) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   6))
(assert (= (+ 0 sc0A sc1A sc2A sc3A sc4A sc5A sc6A) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   6))
(assert (= (+ 0 sc0B sc1B sc2B sc3B sc4B sc5B sc6B) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   6))
(assert (= (+ 0 sc0C sc1C sc2C sc3C sc4C sc5C sc6C) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   6))
(assert (= (+ 0 sc0D sc1D sc2D sc3D sc4D sc5D sc6D) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   6))
(assert (= (+ 0 sc0E sc1E sc2E sc3E sc4E sc5E sc6E) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   6))
(assert (= (+ 0 sc0F sc1F sc2F sc3F sc4F sc5F sc6F) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   6))
(assert (= (+ 0 sc0G sc1G sc2G sc3G sc4G sc5G sc6G) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   6))
(assert (= (+ 0 sc0H sc1H sc2H sc3H sc4H sc5H sc6H) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   7))
(assert (= (+ 0 sc0A sc1A sc2A sc3A sc4A sc5A sc6A) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   7))
(assert (= (+ 0 sc0B sc1B sc2B sc3B sc4B sc5B sc6B) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   7))
(assert (= (+ 0 sc0C sc1C sc2C sc3C sc4C sc5C sc6C) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   7))
(assert (= (+ 0 sc0D sc1D sc2D sc3D sc4D sc5D sc6D) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   7))
(assert (= (+ 0 sc0E sc1E sc2E sc3E sc4E sc5E sc6E) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   7))
(assert (= (+ 0 sc0F sc1F sc2F sc3F sc4F sc5F sc6F) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   7))
(assert (= (+ 0 sc0G sc1G sc2G sc3G sc4G sc5G sc6G) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   7))
(assert (= (+ 0 sc0H sc1H sc2H sc3H sc4H sc5H sc6H) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   8))
(assert (= (+ 0 sc0A sc1A sc2A sc3A sc4A sc5A sc6A) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   8))
(assert (= (+ 0 sc0B sc1B sc2B sc3B sc4B sc5B sc6B) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   8))
(assert (= (+ 0 sc0C sc1C sc2C sc3C sc4C sc5C sc6C) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   8))
(assert (= (+ 0 sc0D sc1D sc2D sc3D sc4D sc5D sc6D) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   8))
(assert (= (+ 0 sc0E sc1E sc2E sc3E sc4E sc5E sc6E) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   8))
(assert (= (+ 0 sc0F sc1F sc2F sc3F sc4F sc5F sc6F) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   8))
(assert (= (+ 0 sc0G sc1G sc2G sc3G sc4G sc5G sc6G) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   8))
(assert (= (+ 0 sc0H sc1H sc2H sc3H sc4H sc5H sc6H) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   9))
(assert (= (+ 0 sc0A sc1A sc2A sc3A sc4A sc5A sc6A) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   9))
(assert (= (+ 0 sc0B sc1B sc2B sc3B sc4B sc5B sc6B) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   9))
(assert (= (+ 0 sc0C sc1C sc2C sc3C sc4C sc5C sc6C) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   9))
(assert (= (+ 0 sc0D sc1D sc2D sc3D sc4D sc5D sc6D) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   9))
(assert (= (+ 0 sc0E sc1E sc2E sc3E sc4E sc5E sc6E) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   9))
(assert (= (+ 0 sc0F sc1F sc2F sc3F sc4F sc5F sc6F) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   9))
(assert (= (+ 0 sc0G sc1G sc2G sc3G sc4G sc5G sc6G) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   9))
(assert (= (+ 0 sc0H sc1H sc2H sc3H sc4H sc5H sc6H) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   10))
(assert (= (+ 0 sc0A sc1A sc2A sc3A sc4A sc5A sc6A) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   10))
(assert (= (+ 0 sc0B sc1B sc2B sc3B sc4B sc5B sc6B) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   10))
(assert (= (+ 0 sc0C sc1C sc2C sc3C sc4C sc5C sc6C) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   10))
(assert (= (+ 0 sc0D sc1D sc2D sc3D sc4D sc5D sc6D) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   10))
(assert (= (+ 0 sc0E sc1E sc2E sc3E sc4E sc5E sc6E) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   10))
(assert (= (+ 0 sc0F sc1F sc2F sc3F sc4F sc5F sc6F) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   10))
(assert (= (+ 0 sc0G sc1G sc2G sc3G sc4G sc5G sc6G) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   10))
(assert (= (+ 0 sc0H sc1H sc2H sc3H sc4H sc5H sc6H) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   11))
(assert (= (+ 0 sc0A sc1A sc2A sc3A sc4A sc5A sc6A) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   11))
(assert (= (+ 0 sc0B sc1B sc2B sc3B sc4B sc5B sc6B) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   11))
(assert (= (+ 0 sc0C sc1C sc2C sc3C sc4C sc5C sc6C) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   11))
(assert (= (+ 0 sc0D sc1D sc2D sc3D sc4D sc5D sc6D) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   11))
(assert (= (+ 0 sc0E sc1E sc2E sc3E sc4E sc5E sc6E) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   11))
(assert (= (+ 0 sc0F sc1F sc2F sc3F sc4F sc5F sc6F) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   11))
(assert (= (+ 0 sc0G sc1G sc2G sc3G sc4G sc5G sc6G) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   11))
(assert (= (+ 0 sc0H sc1H sc2H sc3H sc4H sc5H sc6H) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   12))
(assert (= (+ 0 sc0A sc1A sc2A sc3A sc4A sc5A sc6A) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   12))
(assert (= (+ 0 sc0B sc1B sc2B sc3B sc4B sc5B sc6B) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   12))
(assert (= (+ 0 sc0C sc1C sc2C sc3C sc4C sc5C sc6C) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   12))
(assert (= (+ 0 sc0D sc1D sc2D sc3D sc4D sc5D sc6D) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   12))
(assert (= (+ 0 sc0E sc1E sc2E sc3E sc4E sc5E sc6E) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   12))
(assert (= (+ 0 sc0F sc1F sc2F sc3F sc4F sc5F sc6F) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   12))
(assert (= (+ 0 sc0G sc1G sc2G sc3G sc4G sc5G sc6G) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   12))
(assert (= (+ 0 sc0H sc1H sc2H sc3H sc4H sc5H sc6H) 0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= "kubala" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "kubalana" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "kubalila" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "kubalilana" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= "kutObXla" (str.++ unch10E (str.++ var0E unch20E))))
(assert (= "kukZbXla" (str.++ unch10F (str.++ var0F unch20F))))
(assert (= "kutObXlila" (str.++ unch10G (str.++ var0G unch20G))))
(assert (= "kukZtObalila" (str.++ unch10H (str.++ var0H unch20H))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= "kugaja" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "kugajana" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "kugajila" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "kugajilana" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= "kutOgXja" (str.++ unch11E (str.++ var1E unch21E))))
(assert (= "kukZgXja" (str.++ unch11F (str.++ var1F unch21F))))
(assert (= "kutOgXjila" (str.++ unch11G (str.++ var1G unch21G))))
(assert (= "kukZtOgajila" (str.++ unch11H (str.++ var1H unch21H))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= "kugula" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "kugulana" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "kugulila" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "kugulilana" (str.++ unch12D (str.++ var2D unch22D))))
(assert (= "kutOgOla" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= "kukZgOla" (str.++ unch12F (str.++ var2F unch22F))))
(assert (= "kutOgOlila" (str.++ unch12G (str.++ var2G unch22G))))
(assert (= "kukZtOgulila" (str.++ unch12H (str.++ var2H unch22H))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= "kubXla" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "kubXlXna" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "kubXlZla" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "kubXlZlana" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= "kutObXla" (str.++ unch13E (str.++ var3E unch23E))))
(assert (= "kukZbXla" (str.++ unch13F (str.++ var3F unch23F))))
(assert (= "kutObXlila" (str.++ unch13G (str.++ var3G unch23G))))
(assert (= "kukZtObalila" (str.++ unch13H (str.++ var3H unch23H))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= "kulOma" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "kulOmXna" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "kulOmZla" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "kulOmZlana" (str.++ unch14D (str.++ var4D unch24D))))
(assert (= "kutOlOma" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= "kukZlOma" (str.++ unch14F (str.++ var4F unch24F))))
(assert (= "kutOlOmila" (str.++ unch14G (str.++ var4G unch24G))))
(assert (= "kukZtOlumila" (str.++ unch14H (str.++ var4H unch24H))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= "kusOna" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "kusOnXna" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "kusOnZla" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "kusOnZlana" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= "kutOsOna" (str.++ unch15E (str.++ var5E unch25E))))
(assert (= "kukZsOna" (str.++ unch15F (str.++ var5F unch25F))))
(assert (= "kutOsOnila" (str.++ unch15G (str.++ var5G unch25G))))
(assert (= "kukZtOsunila" (str.++ unch15H (str.++ var5H unch25H))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= "kulXba" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "kulXbXna" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "kulXbZla" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "kulXbZlana" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= "kutOlXba" (str.++ unch16E (str.++ var6E unch26E))))
(assert (= "kukZlXba" (str.++ unch16F (str.++ var6F unch26F))))
(assert (= "kutOlXbila" (str.++ unch16G (str.++ var6G unch26G))))
(assert (= "kukZtOlabila" (str.++ unch16H (str.++ var6H unch26H))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H)
   13))
(assert (= (+ 0 sc0A sc1A sc2A sc3A sc4A sc5A sc6A) 0))
