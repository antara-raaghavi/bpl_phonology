[['klup', 'klubi'], ['trup', 'trupi'], ['dom', 'domi'], ['snop', 'snopi'], ['ʒwup', 'ʒwobi'], ['trut', 'trudi'], ['dzvon', 'dzvoni'], ['kot', 'koti'], ['lut', 'lodi'], ['ɡrus', 'ɡruzi'], ['nos', 'nosi'], ['vus', 'vozi'], ['wuk', 'wuɡi'], ['wuk', 'wuki'], ['sok', 'soki'], ['ruk', 'roɡi'], ['bur', 'bori'], ['vuw', 'vowi'], ['sul', 'soli'], ['buj', 'boji'], ['ʃum', 'ʃumi'], ['ʒur', 'ʒuri']]
klup  >  ['k', 'l', 'u', 'p'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
klubi  >  ['k', 'l', 'u', 'b', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
trup  >  ['t', 'r', 'u', 'p'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
trupi  >  ['t', 'r', 'u', 'p', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
dom  >  ['d', 'o', 'm'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
domi  >  ['d', 'o', 'm', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
snop  >  ['s', 'n', 'o', 'p'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
snopi  >  ['s', 'n', 'o', 'p', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
ʒwup  >  ['U', 'w', 'u', 'p'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
ʒwobi  >  ['U', 'w', 'o', 'b', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
trut  >  ['t', 'r', 'u', 't'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
trudi  >  ['t', 'r', 'u', 'd', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
dzvon  >  ['d', 'z', 'v', 'o', 'n'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
dzvoni  >  ['d', 'z', 'v', 'o', 'n', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
kot  >  ['k', 'o', 't'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
koti  >  ['k', 'o', 't', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
lut  >  ['l', 'u', 't'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
lodi  >  ['l', 'o', 'd', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
ɡrus  >  ['g', 'r', 'u', 's'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
ɡruzi  >  ['g', 'r', 'u', 'z', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
nos  >  ['n', 'o', 's'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
nosi  >  ['n', 'o', 's', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
vus  >  ['v', 'u', 's'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
vozi  >  ['v', 'o', 'z', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
wuk  >  ['w', 'u', 'k'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
wuɡi  >  ['w', 'u', 'g', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
wuk  >  ['w', 'u', 'k'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
wuki  >  ['w', 'u', 'k', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
sok  >  ['s', 'o', 'k'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
soki  >  ['s', 'o', 'k', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
ruk  >  ['r', 'u', 'k'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
roɡi  >  ['r', 'o', 'g', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
bur  >  ['b', 'u', 'r'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
bori  >  ['b', 'o', 'r', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
vuw  >  ['v', 'u', 'w'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
vowi  >  ['v', 'o', 'w', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
sul  >  ['s', 'u', 'l'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
soli  >  ['s', 'o', 'l', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
buj  >  ['b', 'u', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
boji  >  ['b', 'o', 'j', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
ʃum  >  ['B', 'u', 'm'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
ʃumi  >  ['B', 'u', 'm', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
ʒur  >  ['U', 'u', 'r'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
ʒuri  >  ['U', 'u', 'r', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= "klup" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "klubi" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= "trup" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "trupi" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= "dom" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "domi" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= "snop" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "snopi" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= "Uwup" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "Uwobi" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= "trut" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "trudi" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= "dzvon" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "dzvoni" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= "kot" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "koti" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= "lut" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "lodi" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= "grus" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "gruzi" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= "nos" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "nosi" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= "vus" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "vozi" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= "wuk" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "wugi" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= "wuk" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "wuki" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= "sok" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "soki" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= "ruk" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "rogi" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= "bur" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bori" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= "vuw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "vowi" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= "sul" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "soli" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= "buj" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "boji" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= "Bum" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "Bumi" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= "Uur" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "Uuri" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      0
      sc1A
      sc1B
      0
      sc2A
      sc2B
      0
      sc3A
      sc3B
      0
      sc4A
      sc4B
      0
      sc5A
      sc5B
      0
      sc6A
      sc6B
      0
      sc7A
      sc7B
      0
      sc8A
      sc8B
      0
      sc9A
      sc9B
      0
      sc10A
      sc10B
      0
      sc11A
      sc11B
      0
      sc12A
      sc12B
      0
      sc13A
      sc13B
      0
      sc14A
      sc14B
      0
      sc15A
      sc15B
      0
      sc16A
      sc16B
      0
      sc17A
      sc17B
      0
      sc18A
      sc18B
      0
      sc19A
      sc19B
      0
      sc20A
      sc20B
      0
      sc21A
      sc21B)
   4))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A
      sc17A
      sc18A
      sc19A
      sc20A
      sc21A)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= "klup" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "klubi" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= "trup" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "trupi" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= "dom" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "domi" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= "snop" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "snopi" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= "Uwup" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "Uwobi" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= "trut" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "trudi" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= "dzvon" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "dzvoni" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= "kot" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "koti" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= "lut" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "lodi" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= "grus" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "gruzi" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= "nos" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "nosi" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= "vus" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "vozi" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= "wuk" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "wugi" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= "wuk" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "wuki" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= "sok" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "soki" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= "ruk" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "rogi" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= "bur" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bori" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= "vuw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "vowi" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= "sul" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "soli" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= "buj" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "boji" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= "Bum" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "Bumi" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= "Uur" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "Uuri" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      0
      sc1A
      sc1B
      0
      sc2A
      sc2B
      0
      sc3A
      sc3B
      0
      sc4A
      sc4B
      0
      sc5A
      sc5B
      0
      sc6A
      sc6B
      0
      sc7A
      sc7B
      0
      sc8A
      sc8B
      0
      sc9A
      sc9B
      0
      sc10A
      sc10B
      0
      sc11A
      sc11B
      0
      sc12A
      sc12B
      0
      sc13A
      sc13B
      0
      sc14A
      sc14B
      0
      sc15A
      sc15B
      0
      sc16A
      sc16B
      0
      sc17A
      sc17B
      0
      sc18A
      sc18B
      0
      sc19A
      sc19B
      0
      sc20A
      sc20B
      0
      sc21A
      sc21B)
   4))
(assert (= (+ 0
      sc0B
      sc1B
      sc2B
      sc3B
      sc4B
      sc5B
      sc6B
      sc7B
      sc8B
      sc9B
      sc10B
      sc11B
      sc12B
      sc13B
      sc14B
      sc15B
      sc16B
      sc17B
      sc18B
      sc19B
      sc20B
      sc21B)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= "klup" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "klubi" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= "trup" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "trupi" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= "dom" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "domi" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= "snop" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "snopi" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= "Uwup" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "Uwobi" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= "trut" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "trudi" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= "dzvon" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "dzvoni" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= "kot" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "koti" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= "lut" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "lodi" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= "grus" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "gruzi" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= "nos" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "nosi" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= "vus" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "vozi" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= "wuk" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "wugi" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= "wuk" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "wuki" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= "sok" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "soki" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= "ruk" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "rogi" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= "bur" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bori" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= "vuw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "vowi" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= "sul" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "soli" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= "buj" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "boji" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= "Bum" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "Bumi" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= "Uur" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "Uuri" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      0
      sc1A
      sc1B
      0
      sc2A
      sc2B
      0
      sc3A
      sc3B
      0
      sc4A
      sc4B
      0
      sc5A
      sc5B
      0
      sc6A
      sc6B
      0
      sc7A
      sc7B
      0
      sc8A
      sc8B
      0
      sc9A
      sc9B
      0
      sc10A
      sc10B
      0
      sc11A
      sc11B
      0
      sc12A
      sc12B
      0
      sc13A
      sc13B
      0
      sc14A
      sc14B
      0
      sc15A
      sc15B
      0
      sc16A
      sc16B
      0
      sc17A
      sc17B
      0
      sc18A
      sc18B
      0
      sc19A
      sc19B
      0
      sc20A
      sc20B
      0
      sc21A
      sc21B)
   5))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A
      sc17A
      sc18A
      sc19A
      sc20A
      sc21A)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= "klup" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "klubi" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= "trup" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "trupi" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= "dom" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "domi" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= "snop" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "snopi" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= "Uwup" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "Uwobi" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= "trut" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "trudi" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= "dzvon" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "dzvoni" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= "kot" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "koti" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= "lut" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "lodi" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= "grus" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "gruzi" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= "nos" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "nosi" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= "vus" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "vozi" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= "wuk" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "wugi" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= "wuk" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "wuki" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= "sok" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "soki" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= "ruk" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "rogi" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= "bur" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bori" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= "vuw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "vowi" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= "sul" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "soli" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= "buj" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "boji" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= "Bum" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "Bumi" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= "Uur" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "Uuri" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      0
      sc1A
      sc1B
      0
      sc2A
      sc2B
      0
      sc3A
      sc3B
      0
      sc4A
      sc4B
      0
      sc5A
      sc5B
      0
      sc6A
      sc6B
      0
      sc7A
      sc7B
      0
      sc8A
      sc8B
      0
      sc9A
      sc9B
      0
      sc10A
      sc10B
      0
      sc11A
      sc11B
      0
      sc12A
      sc12B
      0
      sc13A
      sc13B
      0
      sc14A
      sc14B
      0
      sc15A
      sc15B
      0
      sc16A
      sc16B
      0
      sc17A
      sc17B
      0
      sc18A
      sc18B
      0
      sc19A
      sc19B
      0
      sc20A
      sc20B
      0
      sc21A
      sc21B)
   5))
(assert (= (+ 0
      sc0B
      sc1B
      sc2B
      sc3B
      sc4B
      sc5B
      sc6B
      sc7B
      sc8B
      sc9B
      sc10B
      sc11B
      sc12B
      sc13B
      sc14B
      sc15B
      sc16B
      sc17B
      sc18B
      sc19B
      sc20B
      sc21B)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= "klup" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "klubi" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= "trup" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "trupi" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= "dom" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "domi" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= "snop" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "snopi" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= "Uwup" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "Uwobi" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= "trut" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "trudi" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= "dzvon" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "dzvoni" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= "kot" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "koti" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= "lut" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "lodi" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= "grus" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "gruzi" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= "nos" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "nosi" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= "vus" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "vozi" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= "wuk" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "wugi" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= "wuk" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "wuki" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= "sok" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "soki" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= "ruk" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "rogi" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= "bur" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bori" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= "vuw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "vowi" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= "sul" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "soli" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= "buj" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "boji" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= "Bum" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "Bumi" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= "Uur" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "Uuri" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      0
      sc1A
      sc1B
      0
      sc2A
      sc2B
      0
      sc3A
      sc3B
      0
      sc4A
      sc4B
      0
      sc5A
      sc5B
      0
      sc6A
      sc6B
      0
      sc7A
      sc7B
      0
      sc8A
      sc8B
      0
      sc9A
      sc9B
      0
      sc10A
      sc10B
      0
      sc11A
      sc11B
      0
      sc12A
      sc12B
      0
      sc13A
      sc13B
      0
      sc14A
      sc14B
      0
      sc15A
      sc15B
      0
      sc16A
      sc16B
      0
      sc17A
      sc17B
      0
      sc18A
      sc18B
      0
      sc19A
      sc19B
      0
      sc20A
      sc20B
      0
      sc21A
      sc21B)
   6))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A
      sc17A
      sc18A
      sc19A
      sc20A
      sc21A)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= "klup" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "klubi" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= "trup" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "trupi" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= "dom" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "domi" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= "snop" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "snopi" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= "Uwup" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "Uwobi" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= "trut" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "trudi" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= "dzvon" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "dzvoni" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= "kot" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "koti" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= "lut" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "lodi" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= "grus" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "gruzi" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= "nos" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "nosi" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= "vus" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "vozi" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= "wuk" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "wugi" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= "wuk" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "wuki" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= "sok" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "soki" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= "ruk" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "rogi" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= "bur" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bori" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= "vuw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "vowi" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= "sul" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "soli" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= "buj" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "boji" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= "Bum" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "Bumi" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= "Uur" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "Uuri" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      0
      sc1A
      sc1B
      0
      sc2A
      sc2B
      0
      sc3A
      sc3B
      0
      sc4A
      sc4B
      0
      sc5A
      sc5B
      0
      sc6A
      sc6B
      0
      sc7A
      sc7B
      0
      sc8A
      sc8B
      0
      sc9A
      sc9B
      0
      sc10A
      sc10B
      0
      sc11A
      sc11B
      0
      sc12A
      sc12B
      0
      sc13A
      sc13B
      0
      sc14A
      sc14B
      0
      sc15A
      sc15B
      0
      sc16A
      sc16B
      0
      sc17A
      sc17B
      0
      sc18A
      sc18B
      0
      sc19A
      sc19B
      0
      sc20A
      sc20B
      0
      sc21A
      sc21B)
   6))
(assert (= (+ 0
      sc0B
      sc1B
      sc2B
      sc3B
      sc4B
      sc5B
      sc6B
      sc7B
      sc8B
      sc9B
      sc10B
      sc11B
      sc12B
      sc13B
      sc14B
      sc15B
      sc16B
      sc17B
      sc18B
      sc19B
      sc20B
      sc21B)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= "klup" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "klubi" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= "trup" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "trupi" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= "dom" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "domi" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= "snop" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "snopi" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= "Uwup" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "Uwobi" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= "trut" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "trudi" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= "dzvon" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "dzvoni" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= "kot" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "koti" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= "lut" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "lodi" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= "grus" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "gruzi" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= "nos" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "nosi" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= "vus" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "vozi" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= "wuk" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "wugi" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= "wuk" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "wuki" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= "sok" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "soki" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= "ruk" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "rogi" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= "bur" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bori" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= "vuw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "vowi" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= "sul" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "soli" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= "buj" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "boji" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= "Bum" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "Bumi" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= "Uur" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "Uuri" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      0
      sc1A
      sc1B
      0
      sc2A
      sc2B
      0
      sc3A
      sc3B
      0
      sc4A
      sc4B
      0
      sc5A
      sc5B
      0
      sc6A
      sc6B
      0
      sc7A
      sc7B
      0
      sc8A
      sc8B
      0
      sc9A
      sc9B
      0
      sc10A
      sc10B
      0
      sc11A
      sc11B
      0
      sc12A
      sc12B
      0
      sc13A
      sc13B
      0
      sc14A
      sc14B
      0
      sc15A
      sc15B
      0
      sc16A
      sc16B
      0
      sc17A
      sc17B
      0
      sc18A
      sc18B
      0
      sc19A
      sc19B
      0
      sc20A
      sc20B
      0
      sc21A
      sc21B)
   7))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A
      sc17A
      sc18A
      sc19A
      sc20A
      sc21A)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= "klup" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "klubi" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= "trup" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "trupi" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= "dom" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "domi" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= "snop" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "snopi" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= "Uwup" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "Uwobi" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= "trut" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "trudi" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= "dzvon" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "dzvoni" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= "kot" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "koti" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= "lut" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "lodi" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= "grus" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "gruzi" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= "nos" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "nosi" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= "vus" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "vozi" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= "wuk" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "wugi" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= "wuk" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "wuki" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= "sok" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "soki" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= "ruk" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "rogi" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= "bur" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bori" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= "vuw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "vowi" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= "sul" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "soli" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= "buj" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "boji" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= "Bum" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "Bumi" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= "Uur" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "Uuri" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      0
      sc1A
      sc1B
      0
      sc2A
      sc2B
      0
      sc3A
      sc3B
      0
      sc4A
      sc4B
      0
      sc5A
      sc5B
      0
      sc6A
      sc6B
      0
      sc7A
      sc7B
      0
      sc8A
      sc8B
      0
      sc9A
      sc9B
      0
      sc10A
      sc10B
      0
      sc11A
      sc11B
      0
      sc12A
      sc12B
      0
      sc13A
      sc13B
      0
      sc14A
      sc14B
      0
      sc15A
      sc15B
      0
      sc16A
      sc16B
      0
      sc17A
      sc17B
      0
      sc18A
      sc18B
      0
      sc19A
      sc19B
      0
      sc20A
      sc20B
      0
      sc21A
      sc21B)
   7))
(assert (= (+ 0
      sc0B
      sc1B
      sc2B
      sc3B
      sc4B
      sc5B
      sc6B
      sc7B
      sc8B
      sc9B
      sc10B
      sc11B
      sc12B
      sc13B
      sc14B
      sc15B
      sc16B
      sc17B
      sc18B
      sc19B
      sc20B
      sc21B)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= "klup" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "klubi" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= "trup" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "trupi" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= "dom" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "domi" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= "snop" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "snopi" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= "Uwup" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "Uwobi" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= "trut" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "trudi" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= "dzvon" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "dzvoni" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= "kot" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "koti" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= "lut" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "lodi" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= "grus" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "gruzi" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= "nos" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "nosi" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= "vus" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "vozi" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= "wuk" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "wugi" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= "wuk" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "wuki" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= "sok" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "soki" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= "ruk" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "rogi" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= "bur" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bori" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= "vuw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "vowi" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= "sul" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "soli" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= "buj" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "boji" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= "Bum" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "Bumi" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= "Uur" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "Uuri" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      0
      sc1A
      sc1B
      0
      sc2A
      sc2B
      0
      sc3A
      sc3B
      0
      sc4A
      sc4B
      0
      sc5A
      sc5B
      0
      sc6A
      sc6B
      0
      sc7A
      sc7B
      0
      sc8A
      sc8B
      0
      sc9A
      sc9B
      0
      sc10A
      sc10B
      0
      sc11A
      sc11B
      0
      sc12A
      sc12B
      0
      sc13A
      sc13B
      0
      sc14A
      sc14B
      0
      sc15A
      sc15B
      0
      sc16A
      sc16B
      0
      sc17A
      sc17B
      0
      sc18A
      sc18B
      0
      sc19A
      sc19B
      0
      sc20A
      sc20B
      0
      sc21A
      sc21B)
   8))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A
      sc17A
      sc18A
      sc19A
      sc20A
      sc21A)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= "klup" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "klubi" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= "trup" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "trupi" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= "dom" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "domi" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= "snop" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "snopi" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= "Uwup" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "Uwobi" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= "trut" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "trudi" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= "dzvon" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "dzvoni" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= "kot" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "koti" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= "lut" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "lodi" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= "grus" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "gruzi" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= "nos" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "nosi" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= "vus" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "vozi" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= "wuk" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "wugi" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= "wuk" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "wuki" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= "sok" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "soki" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= "ruk" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "rogi" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= "bur" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bori" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= "vuw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "vowi" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= "sul" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "soli" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= "buj" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "boji" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= "Bum" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "Bumi" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= "Uur" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "Uuri" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      0
      sc1A
      sc1B
      0
      sc2A
      sc2B
      0
      sc3A
      sc3B
      0
      sc4A
      sc4B
      0
      sc5A
      sc5B
      0
      sc6A
      sc6B
      0
      sc7A
      sc7B
      0
      sc8A
      sc8B
      0
      sc9A
      sc9B
      0
      sc10A
      sc10B
      0
      sc11A
      sc11B
      0
      sc12A
      sc12B
      0
      sc13A
      sc13B
      0
      sc14A
      sc14B
      0
      sc15A
      sc15B
      0
      sc16A
      sc16B
      0
      sc17A
      sc17B
      0
      sc18A
      sc18B
      0
      sc19A
      sc19B
      0
      sc20A
      sc20B
      0
      sc21A
      sc21B)
   8))
(assert (= (+ 0
      sc0B
      sc1B
      sc2B
      sc3B
      sc4B
      sc5B
      sc6B
      sc7B
      sc8B
      sc9B
      sc10B
      sc11B
      sc12B
      sc13B
      sc14B
      sc15B
      sc16B
      sc17B
      sc18B
      sc19B
      sc20B
      sc21B)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= "klup" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "klubi" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= "trup" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "trupi" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= "dom" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "domi" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= "snop" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "snopi" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= "Uwup" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "Uwobi" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= "trut" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "trudi" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= "dzvon" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "dzvoni" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= "kot" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "koti" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= "lut" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "lodi" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= "grus" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "gruzi" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= "nos" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "nosi" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= "vus" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "vozi" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= "wuk" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "wugi" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= "wuk" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "wuki" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= "sok" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "soki" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= "ruk" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "rogi" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= "bur" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bori" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= "vuw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "vowi" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= "sul" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "soli" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= "buj" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "boji" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= "Bum" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "Bumi" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= "Uur" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "Uuri" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      0
      sc1A
      sc1B
      0
      sc2A
      sc2B
      0
      sc3A
      sc3B
      0
      sc4A
      sc4B
      0
      sc5A
      sc5B
      0
      sc6A
      sc6B
      0
      sc7A
      sc7B
      0
      sc8A
      sc8B
      0
      sc9A
      sc9B
      0
      sc10A
      sc10B
      0
      sc11A
      sc11B
      0
      sc12A
      sc12B
      0
      sc13A
      sc13B
      0
      sc14A
      sc14B
      0
      sc15A
      sc15B
      0
      sc16A
      sc16B
      0
      sc17A
      sc17B
      0
      sc18A
      sc18B
      0
      sc19A
      sc19B
      0
      sc20A
      sc20B
      0
      sc21A
      sc21B)
   9))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A
      sc17A
      sc18A
      sc19A
      sc20A
      sc21A)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= "klup" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "klubi" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= "trup" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "trupi" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= "dom" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "domi" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= "snop" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "snopi" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= "Uwup" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "Uwobi" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= "trut" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "trudi" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= "dzvon" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "dzvoni" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= "kot" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "koti" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= "lut" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "lodi" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= "grus" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "gruzi" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= "nos" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "nosi" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= "vus" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "vozi" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= "wuk" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "wugi" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= "wuk" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "wuki" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= "sok" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "soki" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= "ruk" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "rogi" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= "bur" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bori" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= "vuw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "vowi" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= "sul" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "soli" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= "buj" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "boji" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= "Bum" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "Bumi" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= "Uur" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "Uuri" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      0
      sc1A
      sc1B
      0
      sc2A
      sc2B
      0
      sc3A
      sc3B
      0
      sc4A
      sc4B
      0
      sc5A
      sc5B
      0
      sc6A
      sc6B
      0
      sc7A
      sc7B
      0
      sc8A
      sc8B
      0
      sc9A
      sc9B
      0
      sc10A
      sc10B
      0
      sc11A
      sc11B
      0
      sc12A
      sc12B
      0
      sc13A
      sc13B
      0
      sc14A
      sc14B
      0
      sc15A
      sc15B
      0
      sc16A
      sc16B
      0
      sc17A
      sc17B
      0
      sc18A
      sc18B
      0
      sc19A
      sc19B
      0
      sc20A
      sc20B
      0
      sc21A
      sc21B)
   9))
(assert (= (+ 0
      sc0B
      sc1B
      sc2B
      sc3B
      sc4B
      sc5B
      sc6B
      sc7B
      sc8B
      sc9B
      sc10B
      sc11B
      sc12B
      sc13B
      sc14B
      sc15B
      sc16B
      sc17B
      sc18B
      sc19B
      sc20B
      sc21B)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= "klup" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "klubi" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= "trup" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "trupi" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= "dom" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "domi" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= "snop" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "snopi" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= "Uwup" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "Uwobi" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= "trut" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "trudi" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= "dzvon" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "dzvoni" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= "kot" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "koti" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= "lut" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "lodi" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= "grus" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "gruzi" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= "nos" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "nosi" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= "vus" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "vozi" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= "wuk" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "wugi" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= "wuk" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "wuki" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= "sok" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "soki" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= "ruk" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "rogi" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= "bur" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bori" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= "vuw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "vowi" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= "sul" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "soli" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= "buj" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "boji" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= "Bum" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "Bumi" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= "Uur" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "Uuri" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      0
      sc1A
      sc1B
      0
      sc2A
      sc2B
      0
      sc3A
      sc3B
      0
      sc4A
      sc4B
      0
      sc5A
      sc5B
      0
      sc6A
      sc6B
      0
      sc7A
      sc7B
      0
      sc8A
      sc8B
      0
      sc9A
      sc9B
      0
      sc10A
      sc10B
      0
      sc11A
      sc11B
      0
      sc12A
      sc12B
      0
      sc13A
      sc13B
      0
      sc14A
      sc14B
      0
      sc15A
      sc15B
      0
      sc16A
      sc16B
      0
      sc17A
      sc17B
      0
      sc18A
      sc18B
      0
      sc19A
      sc19B
      0
      sc20A
      sc20B
      0
      sc21A
      sc21B)
   10))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A
      sc17A
      sc18A
      sc19A
      sc20A
      sc21A)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= "klup" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "klubi" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= "trup" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "trupi" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= "dom" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "domi" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= "snop" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "snopi" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= "Uwup" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "Uwobi" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= "trut" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "trudi" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= "dzvon" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "dzvoni" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= "kot" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "koti" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= "lut" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "lodi" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= "grus" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "gruzi" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= "nos" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "nosi" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= "vus" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "vozi" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= "wuk" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "wugi" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= "wuk" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "wuki" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= "sok" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "soki" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= "ruk" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "rogi" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= "bur" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bori" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= "vuw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "vowi" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= "sul" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "soli" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= "buj" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "boji" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= "Bum" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "Bumi" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= "Uur" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "Uuri" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      0
      sc1A
      sc1B
      0
      sc2A
      sc2B
      0
      sc3A
      sc3B
      0
      sc4A
      sc4B
      0
      sc5A
      sc5B
      0
      sc6A
      sc6B
      0
      sc7A
      sc7B
      0
      sc8A
      sc8B
      0
      sc9A
      sc9B
      0
      sc10A
      sc10B
      0
      sc11A
      sc11B
      0
      sc12A
      sc12B
      0
      sc13A
      sc13B
      0
      sc14A
      sc14B
      0
      sc15A
      sc15B
      0
      sc16A
      sc16B
      0
      sc17A
      sc17B
      0
      sc18A
      sc18B
      0
      sc19A
      sc19B
      0
      sc20A
      sc20B
      0
      sc21A
      sc21B)
   10))
(assert (= (+ 0
      sc0B
      sc1B
      sc2B
      sc3B
      sc4B
      sc5B
      sc6B
      sc7B
      sc8B
      sc9B
      sc10B
      sc11B
      sc12B
      sc13B
      sc14B
      sc15B
      sc16B
      sc17B
      sc18B
      sc19B
      sc20B
      sc21B)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= "klup" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "klubi" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= "trup" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "trupi" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= "dom" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "domi" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= "snop" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "snopi" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= "Uwup" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "Uwobi" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= "trut" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "trudi" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= "dzvon" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "dzvoni" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= "kot" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "koti" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= "lut" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "lodi" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= "grus" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "gruzi" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= "nos" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "nosi" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= "vus" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "vozi" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= "wuk" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "wugi" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= "wuk" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "wuki" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= "sok" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "soki" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= "ruk" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "rogi" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= "bur" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bori" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= "vuw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "vowi" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= "sul" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "soli" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= "buj" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "boji" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= "Bum" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "Bumi" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= "Uur" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "Uuri" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      0
      sc1A
      sc1B
      0
      sc2A
      sc2B
      0
      sc3A
      sc3B
      0
      sc4A
      sc4B
      0
      sc5A
      sc5B
      0
      sc6A
      sc6B
      0
      sc7A
      sc7B
      0
      sc8A
      sc8B
      0
      sc9A
      sc9B
      0
      sc10A
      sc10B
      0
      sc11A
      sc11B
      0
      sc12A
      sc12B
      0
      sc13A
      sc13B
      0
      sc14A
      sc14B
      0
      sc15A
      sc15B
      0
      sc16A
      sc16B
      0
      sc17A
      sc17B
      0
      sc18A
      sc18B
      0
      sc19A
      sc19B
      0
      sc20A
      sc20B
      0
      sc21A
      sc21B)
   11))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A
      sc17A
      sc18A
      sc19A
      sc20A
      sc21A)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= "klup" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "klubi" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= "trup" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "trupi" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= "dom" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "domi" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= "snop" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "snopi" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= "Uwup" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "Uwobi" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= "trut" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "trudi" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= "dzvon" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "dzvoni" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= "kot" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "koti" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= "lut" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "lodi" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= "grus" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "gruzi" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= "nos" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "nosi" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= "vus" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "vozi" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= "wuk" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "wugi" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= "wuk" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "wuki" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= "sok" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "soki" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= "ruk" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "rogi" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= "bur" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bori" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= "vuw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "vowi" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= "sul" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "soli" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= "buj" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "boji" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= "Bum" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "Bumi" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= "Uur" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "Uuri" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      0
      sc1A
      sc1B
      0
      sc2A
      sc2B
      0
      sc3A
      sc3B
      0
      sc4A
      sc4B
      0
      sc5A
      sc5B
      0
      sc6A
      sc6B
      0
      sc7A
      sc7B
      0
      sc8A
      sc8B
      0
      sc9A
      sc9B
      0
      sc10A
      sc10B
      0
      sc11A
      sc11B
      0
      sc12A
      sc12B
      0
      sc13A
      sc13B
      0
      sc14A
      sc14B
      0
      sc15A
      sc15B
      0
      sc16A
      sc16B
      0
      sc17A
      sc17B
      0
      sc18A
      sc18B
      0
      sc19A
      sc19B
      0
      sc20A
      sc20B
      0
      sc21A
      sc21B)
   11))
(assert (= (+ 0
      sc0B
      sc1B
      sc2B
      sc3B
      sc4B
      sc5B
      sc6B
      sc7B
      sc8B
      sc9B
      sc10B
      sc11B
      sc12B
      sc13B
      sc14B
      sc15B
      sc16B
      sc17B
      sc18B
      sc19B
      sc20B
      sc21B)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= "klup" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "klubi" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= "trup" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "trupi" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= "dom" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "domi" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= "snop" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "snopi" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= "Uwup" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "Uwobi" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= "trut" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "trudi" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= "dzvon" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "dzvoni" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= "kot" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "koti" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= "lut" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "lodi" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= "grus" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "gruzi" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= "nos" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "nosi" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= "vus" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "vozi" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= "wuk" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "wugi" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= "wuk" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "wuki" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= "sok" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "soki" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= "ruk" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "rogi" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= "bur" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bori" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= "vuw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "vowi" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= "sul" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "soli" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= "buj" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "boji" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= "Bum" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "Bumi" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= "Uur" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "Uuri" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      0
      sc1A
      sc1B
      0
      sc2A
      sc2B
      0
      sc3A
      sc3B
      0
      sc4A
      sc4B
      0
      sc5A
      sc5B
      0
      sc6A
      sc6B
      0
      sc7A
      sc7B
      0
      sc8A
      sc8B
      0
      sc9A
      sc9B
      0
      sc10A
      sc10B
      0
      sc11A
      sc11B
      0
      sc12A
      sc12B
      0
      sc13A
      sc13B
      0
      sc14A
      sc14B
      0
      sc15A
      sc15B
      0
      sc16A
      sc16B
      0
      sc17A
      sc17B
      0
      sc18A
      sc18B
      0
      sc19A
      sc19B
      0
      sc20A
      sc20B
      0
      sc21A
      sc21B)
   12))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A
      sc17A
      sc18A
      sc19A
      sc20A
      sc21A)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= "klup" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "klubi" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= "trup" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "trupi" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= "dom" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "domi" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= "snop" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "snopi" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= "Uwup" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "Uwobi" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= "trut" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "trudi" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= "dzvon" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "dzvoni" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= "kot" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "koti" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= "lut" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "lodi" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= "grus" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "gruzi" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= "nos" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "nosi" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= "vus" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "vozi" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= "wuk" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "wugi" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= "wuk" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "wuki" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= "sok" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "soki" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= "ruk" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "rogi" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= "bur" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bori" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= "vuw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "vowi" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= "sul" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "soli" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= "buj" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "boji" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= "Bum" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "Bumi" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= "Uur" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "Uuri" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      0
      sc1A
      sc1B
      0
      sc2A
      sc2B
      0
      sc3A
      sc3B
      0
      sc4A
      sc4B
      0
      sc5A
      sc5B
      0
      sc6A
      sc6B
      0
      sc7A
      sc7B
      0
      sc8A
      sc8B
      0
      sc9A
      sc9B
      0
      sc10A
      sc10B
      0
      sc11A
      sc11B
      0
      sc12A
      sc12B
      0
      sc13A
      sc13B
      0
      sc14A
      sc14B
      0
      sc15A
      sc15B
      0
      sc16A
      sc16B
      0
      sc17A
      sc17B
      0
      sc18A
      sc18B
      0
      sc19A
      sc19B
      0
      sc20A
      sc20B
      0
      sc21A
      sc21B)
   12))
(assert (= (+ 0
      sc0B
      sc1B
      sc2B
      sc3B
      sc4B
      sc5B
      sc6B
      sc7B
      sc8B
      sc9B
      sc10B
      sc11B
      sc12B
      sc13B
      sc14B
      sc15B
      sc16B
      sc17B
      sc18B
      sc19B
      sc20B
      sc21B)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= "klup" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "klubi" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= "trup" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "trupi" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= "dom" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "domi" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= "snop" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "snopi" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= "Uwup" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "Uwobi" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= "trut" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "trudi" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= "dzvon" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "dzvoni" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= "kot" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "koti" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= "lut" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "lodi" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= "grus" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "gruzi" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= "nos" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "nosi" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= "vus" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "vozi" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= "wuk" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "wugi" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= "wuk" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "wuki" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= "sok" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "soki" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= "ruk" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "rogi" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= "bur" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bori" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= "vuw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "vowi" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= "sul" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "soli" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= "buj" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "boji" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= "Bum" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "Bumi" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= "Uur" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "Uuri" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      0
      sc1A
      sc1B
      0
      sc2A
      sc2B
      0
      sc3A
      sc3B
      0
      sc4A
      sc4B
      0
      sc5A
      sc5B
      0
      sc6A
      sc6B
      0
      sc7A
      sc7B
      0
      sc8A
      sc8B
      0
      sc9A
      sc9B
      0
      sc10A
      sc10B
      0
      sc11A
      sc11B
      0
      sc12A
      sc12B
      0
      sc13A
      sc13B
      0
      sc14A
      sc14B
      0
      sc15A
      sc15B
      0
      sc16A
      sc16B
      0
      sc17A
      sc17B
      0
      sc18A
      sc18B
      0
      sc19A
      sc19B
      0
      sc20A
      sc20B
      0
      sc21A
      sc21B)
   13))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A
      sc17A
      sc18A
      sc19A
      sc20A
      sc21A)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= "klup" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "klubi" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= "trup" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "trupi" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= "dom" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "domi" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= "snop" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "snopi" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= "Uwup" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "Uwobi" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= "trut" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "trudi" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= "dzvon" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "dzvoni" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= "kot" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "koti" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= "lut" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "lodi" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= "grus" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "gruzi" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= "nos" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "nosi" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= "vus" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "vozi" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= "wuk" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "wugi" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= "wuk" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "wuki" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= "sok" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "soki" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= "ruk" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "rogi" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= "bur" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bori" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= "vuw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "vowi" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= "sul" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "soli" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= "buj" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "boji" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= "Bum" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "Bumi" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= "Uur" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "Uuri" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      0
      sc1A
      sc1B
      0
      sc2A
      sc2B
      0
      sc3A
      sc3B
      0
      sc4A
      sc4B
      0
      sc5A
      sc5B
      0
      sc6A
      sc6B
      0
      sc7A
      sc7B
      0
      sc8A
      sc8B
      0
      sc9A
      sc9B
      0
      sc10A
      sc10B
      0
      sc11A
      sc11B
      0
      sc12A
      sc12B
      0
      sc13A
      sc13B
      0
      sc14A
      sc14B
      0
      sc15A
      sc15B
      0
      sc16A
      sc16B
      0
      sc17A
      sc17B
      0
      sc18A
      sc18B
      0
      sc19A
      sc19B
      0
      sc20A
      sc20B
      0
      sc21A
      sc21B)
   13))
(assert (= (+ 0
      sc0B
      sc1B
      sc2B
      sc3B
      sc4B
      sc5B
      sc6B
      sc7B
      sc8B
      sc9B
      sc10B
      sc11B
      sc12B
      sc13B
      sc14B
      sc15B
      sc16B
      sc17B
      sc18B
      sc19B
      sc20B
      sc21B)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= "klup" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "klubi" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= "trup" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "trupi" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= "dom" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "domi" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= "snop" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "snopi" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= "Uwup" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "Uwobi" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= "trut" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "trudi" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= "dzvon" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "dzvoni" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= "kot" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "koti" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= "lut" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "lodi" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= "grus" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "gruzi" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= "nos" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "nosi" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= "vus" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "vozi" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= "wuk" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "wugi" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= "wuk" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "wuki" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= "sok" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "soki" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= "ruk" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "rogi" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= "bur" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bori" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= "vuw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "vowi" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= "sul" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "soli" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= "buj" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "boji" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= "Bum" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "Bumi" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= "Uur" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "Uuri" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      0
      sc1A
      sc1B
      0
      sc2A
      sc2B
      0
      sc3A
      sc3B
      0
      sc4A
      sc4B
      0
      sc5A
      sc5B
      0
      sc6A
      sc6B
      0
      sc7A
      sc7B
      0
      sc8A
      sc8B
      0
      sc9A
      sc9B
      0
      sc10A
      sc10B
      0
      sc11A
      sc11B
      0
      sc12A
      sc12B
      0
      sc13A
      sc13B
      0
      sc14A
      sc14B
      0
      sc15A
      sc15B
      0
      sc16A
      sc16B
      0
      sc17A
      sc17B
      0
      sc18A
      sc18B
      0
      sc19A
      sc19B
      0
      sc20A
      sc20B
      0
      sc21A
      sc21B)
   14))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A
      sc17A
      sc18A
      sc19A
      sc20A
      sc21A)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= "klup" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "klubi" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= "trup" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "trupi" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= "dom" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "domi" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= "snop" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "snopi" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= "Uwup" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "Uwobi" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= "trut" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "trudi" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= "dzvon" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "dzvoni" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= "kot" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "koti" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= "lut" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "lodi" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= "grus" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "gruzi" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= "nos" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "nosi" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= "vus" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "vozi" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= "wuk" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "wugi" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= "wuk" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "wuki" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= "sok" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "soki" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= "ruk" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "rogi" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= "bur" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bori" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= "vuw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "vowi" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= "sul" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "soli" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= "buj" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "boji" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= "Bum" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "Bumi" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= "Uur" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "Uuri" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      0
      sc1A
      sc1B
      0
      sc2A
      sc2B
      0
      sc3A
      sc3B
      0
      sc4A
      sc4B
      0
      sc5A
      sc5B
      0
      sc6A
      sc6B
      0
      sc7A
      sc7B
      0
      sc8A
      sc8B
      0
      sc9A
      sc9B
      0
      sc10A
      sc10B
      0
      sc11A
      sc11B
      0
      sc12A
      sc12B
      0
      sc13A
      sc13B
      0
      sc14A
      sc14B
      0
      sc15A
      sc15B
      0
      sc16A
      sc16B
      0
      sc17A
      sc17B
      0
      sc18A
      sc18B
      0
      sc19A
      sc19B
      0
      sc20A
      sc20B
      0
      sc21A
      sc21B)
   14))
(assert (= (+ 0
      sc0B
      sc1B
      sc2B
      sc3B
      sc4B
      sc5B
      sc6B
      sc7B
      sc8B
      sc9B
      sc10B
      sc11B
      sc12B
      sc13B
      sc14B
      sc15B
      sc16B
      sc17B
      sc18B
      sc19B
      sc20B
      sc21B)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= "klup" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "klubi" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= "trup" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "trupi" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= "dom" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "domi" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= "snop" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "snopi" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= "Uwup" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "Uwobi" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= "trut" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "trudi" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= "dzvon" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "dzvoni" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= "kot" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "koti" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= "lut" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "lodi" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= "grus" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "gruzi" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= "nos" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "nosi" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= "vus" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "vozi" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= "wuk" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "wugi" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= "wuk" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "wuki" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= "sok" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "soki" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= "ruk" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "rogi" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= "bur" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bori" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= "vuw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "vowi" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= "sul" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "soli" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= "buj" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "boji" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= "Bum" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "Bumi" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= "Uur" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "Uuri" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      0
      sc1A
      sc1B
      0
      sc2A
      sc2B
      0
      sc3A
      sc3B
      0
      sc4A
      sc4B
      0
      sc5A
      sc5B
      0
      sc6A
      sc6B
      0
      sc7A
      sc7B
      0
      sc8A
      sc8B
      0
      sc9A
      sc9B
      0
      sc10A
      sc10B
      0
      sc11A
      sc11B
      0
      sc12A
      sc12B
      0
      sc13A
      sc13B
      0
      sc14A
      sc14B
      0
      sc15A
      sc15B
      0
      sc16A
      sc16B
      0
      sc17A
      sc17B
      0
      sc18A
      sc18B
      0
      sc19A
      sc19B
      0
      sc20A
      sc20B
      0
      sc21A
      sc21B)
   15))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A
      sc17A
      sc18A
      sc19A
      sc20A
      sc21A)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= "klup" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "klubi" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= "trup" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "trupi" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= "dom" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "domi" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= "snop" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "snopi" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= "Uwup" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "Uwobi" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= "trut" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "trudi" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= "dzvon" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "dzvoni" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= "kot" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "koti" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= "lut" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "lodi" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= "grus" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "gruzi" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= "nos" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "nosi" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= "vus" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "vozi" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= "wuk" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "wugi" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= "wuk" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "wuki" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= "sok" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "soki" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= "ruk" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "rogi" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= "bur" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bori" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= "vuw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "vowi" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= "sul" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "soli" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= "buj" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "boji" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= "Bum" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "Bumi" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= "Uur" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "Uuri" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      0
      sc1A
      sc1B
      0
      sc2A
      sc2B
      0
      sc3A
      sc3B
      0
      sc4A
      sc4B
      0
      sc5A
      sc5B
      0
      sc6A
      sc6B
      0
      sc7A
      sc7B
      0
      sc8A
      sc8B
      0
      sc9A
      sc9B
      0
      sc10A
      sc10B
      0
      sc11A
      sc11B
      0
      sc12A
      sc12B
      0
      sc13A
      sc13B
      0
      sc14A
      sc14B
      0
      sc15A
      sc15B
      0
      sc16A
      sc16B
      0
      sc17A
      sc17B
      0
      sc18A
      sc18B
      0
      sc19A
      sc19B
      0
      sc20A
      sc20B
      0
      sc21A
      sc21B)
   15))
(assert (= (+ 0
      sc0B
      sc1B
      sc2B
      sc3B
      sc4B
      sc5B
      sc6B
      sc7B
      sc8B
      sc9B
      sc10B
      sc11B
      sc12B
      sc13B
      sc14B
      sc15B
      sc16B
      sc17B
      sc18B
      sc19B
      sc20B
      sc21B)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= "klup" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "klubi" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= "trup" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "trupi" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= "dom" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "domi" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= "snop" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "snopi" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= "Uwup" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "Uwobi" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= "trut" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "trudi" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= "dzvon" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "dzvoni" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= "kot" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "koti" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= "lut" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "lodi" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= "grus" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "gruzi" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= "nos" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "nosi" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= "vus" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "vozi" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= "wuk" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "wugi" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= "wuk" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "wuki" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= "sok" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "soki" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= "ruk" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "rogi" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= "bur" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bori" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= "vuw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "vowi" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= "sul" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "soli" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= "buj" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "boji" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= "Bum" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "Bumi" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= "Uur" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "Uuri" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      0
      sc1A
      sc1B
      0
      sc2A
      sc2B
      0
      sc3A
      sc3B
      0
      sc4A
      sc4B
      0
      sc5A
      sc5B
      0
      sc6A
      sc6B
      0
      sc7A
      sc7B
      0
      sc8A
      sc8B
      0
      sc9A
      sc9B
      0
      sc10A
      sc10B
      0
      sc11A
      sc11B
      0
      sc12A
      sc12B
      0
      sc13A
      sc13B
      0
      sc14A
      sc14B
      0
      sc15A
      sc15B
      0
      sc16A
      sc16B
      0
      sc17A
      sc17B
      0
      sc18A
      sc18B
      0
      sc19A
      sc19B
      0
      sc20A
      sc20B
      0
      sc21A
      sc21B)
   16))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A
      sc17A
      sc18A
      sc19A
      sc20A
      sc21A)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= "klup" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "klubi" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= "trup" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "trupi" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= "dom" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "domi" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= "snop" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "snopi" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= "Uwup" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "Uwobi" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= "trut" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "trudi" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= "dzvon" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "dzvoni" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= "kot" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "koti" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= "lut" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "lodi" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= "grus" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "gruzi" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= "nos" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "nosi" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= "vus" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "vozi" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= "wuk" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "wugi" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= "wuk" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "wuki" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= "sok" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "soki" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= "ruk" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "rogi" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= "bur" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bori" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= "vuw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "vowi" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= "sul" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "soli" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= "buj" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "boji" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= "Bum" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "Bumi" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= "Uur" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "Uuri" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      0
      sc1A
      sc1B
      0
      sc2A
      sc2B
      0
      sc3A
      sc3B
      0
      sc4A
      sc4B
      0
      sc5A
      sc5B
      0
      sc6A
      sc6B
      0
      sc7A
      sc7B
      0
      sc8A
      sc8B
      0
      sc9A
      sc9B
      0
      sc10A
      sc10B
      0
      sc11A
      sc11B
      0
      sc12A
      sc12B
      0
      sc13A
      sc13B
      0
      sc14A
      sc14B
      0
      sc15A
      sc15B
      0
      sc16A
      sc16B
      0
      sc17A
      sc17B
      0
      sc18A
      sc18B
      0
      sc19A
      sc19B
      0
      sc20A
      sc20B
      0
      sc21A
      sc21B)
   16))
(assert (= (+ 0
      sc0B
      sc1B
      sc2B
      sc3B
      sc4B
      sc5B
      sc6B
      sc7B
      sc8B
      sc9B
      sc10B
      sc11B
      sc12B
      sc13B
      sc14B
      sc15B
      sc16B
      sc17B
      sc18B
      sc19B
      sc20B
      sc21B)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= "klup" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "klubi" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= "trup" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "trupi" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= "dom" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "domi" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= "snop" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "snopi" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= "Uwup" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "Uwobi" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= "trut" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "trudi" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= "dzvon" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "dzvoni" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= "kot" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "koti" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= "lut" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "lodi" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= "grus" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "gruzi" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= "nos" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "nosi" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= "vus" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "vozi" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= "wuk" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "wugi" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= "wuk" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "wuki" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= "sok" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "soki" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= "ruk" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "rogi" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= "bur" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bori" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= "vuw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "vowi" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= "sul" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "soli" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= "buj" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "boji" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= "Bum" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "Bumi" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= "Uur" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "Uuri" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      0
      sc1A
      sc1B
      0
      sc2A
      sc2B
      0
      sc3A
      sc3B
      0
      sc4A
      sc4B
      0
      sc5A
      sc5B
      0
      sc6A
      sc6B
      0
      sc7A
      sc7B
      0
      sc8A
      sc8B
      0
      sc9A
      sc9B
      0
      sc10A
      sc10B
      0
      sc11A
      sc11B
      0
      sc12A
      sc12B
      0
      sc13A
      sc13B
      0
      sc14A
      sc14B
      0
      sc15A
      sc15B
      0
      sc16A
      sc16B
      0
      sc17A
      sc17B
      0
      sc18A
      sc18B
      0
      sc19A
      sc19B
      0
      sc20A
      sc20B
      0
      sc21A
      sc21B)
   17))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A
      sc17A
      sc18A
      sc19A
      sc20A
      sc21A)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= "klup" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "klubi" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= "trup" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "trupi" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= "dom" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "domi" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= "snop" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "snopi" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= "Uwup" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "Uwobi" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= "trut" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "trudi" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= "dzvon" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "dzvoni" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= "kot" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "koti" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= "lut" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "lodi" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= "grus" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "gruzi" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= "nos" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "nosi" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= "vus" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "vozi" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= "wuk" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "wugi" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= "wuk" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "wuki" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= "sok" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "soki" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= "ruk" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "rogi" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= "bur" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bori" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= "vuw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "vowi" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= "sul" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "soli" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= "buj" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "boji" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= "Bum" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "Bumi" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= "Uur" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "Uuri" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      0
      sc1A
      sc1B
      0
      sc2A
      sc2B
      0
      sc3A
      sc3B
      0
      sc4A
      sc4B
      0
      sc5A
      sc5B
      0
      sc6A
      sc6B
      0
      sc7A
      sc7B
      0
      sc8A
      sc8B
      0
      sc9A
      sc9B
      0
      sc10A
      sc10B
      0
      sc11A
      sc11B
      0
      sc12A
      sc12B
      0
      sc13A
      sc13B
      0
      sc14A
      sc14B
      0
      sc15A
      sc15B
      0
      sc16A
      sc16B
      0
      sc17A
      sc17B
      0
      sc18A
      sc18B
      0
      sc19A
      sc19B
      0
      sc20A
      sc20B
      0
      sc21A
      sc21B)
   17))
(assert (= (+ 0
      sc0B
      sc1B
      sc2B
      sc3B
      sc4B
      sc5B
      sc6B
      sc7B
      sc8B
      sc9B
      sc10B
      sc11B
      sc12B
      sc13B
      sc14B
      sc15B
      sc16B
      sc17B
      sc18B
      sc19B
      sc20B
      sc21B)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= "klup" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "klubi" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= "trup" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "trupi" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= "dom" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "domi" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= "snop" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "snopi" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= "Uwup" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "Uwobi" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= "trut" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "trudi" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= "dzvon" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "dzvoni" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= "kot" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "koti" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= "lut" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "lodi" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= "grus" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "gruzi" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= "nos" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "nosi" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= "vus" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "vozi" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= "wuk" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "wugi" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= "wuk" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "wuki" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= "sok" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "soki" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= "ruk" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "rogi" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= "bur" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bori" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= "vuw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "vowi" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= "sul" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "soli" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= "buj" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "boji" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= "Bum" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "Bumi" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= "Uur" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "Uuri" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      0
      sc1A
      sc1B
      0
      sc2A
      sc2B
      0
      sc3A
      sc3B
      0
      sc4A
      sc4B
      0
      sc5A
      sc5B
      0
      sc6A
      sc6B
      0
      sc7A
      sc7B
      0
      sc8A
      sc8B
      0
      sc9A
      sc9B
      0
      sc10A
      sc10B
      0
      sc11A
      sc11B
      0
      sc12A
      sc12B
      0
      sc13A
      sc13B
      0
      sc14A
      sc14B
      0
      sc15A
      sc15B
      0
      sc16A
      sc16B
      0
      sc17A
      sc17B
      0
      sc18A
      sc18B
      0
      sc19A
      sc19B
      0
      sc20A
      sc20B
      0
      sc21A
      sc21B)
   18))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A
      sc17A
      sc18A
      sc19A
      sc20A
      sc21A)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= "klup" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "klubi" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= "trup" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "trupi" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= "dom" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "domi" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= "snop" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "snopi" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= "Uwup" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "Uwobi" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= "trut" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "trudi" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= "dzvon" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "dzvoni" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= "kot" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "koti" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= "lut" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "lodi" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= "grus" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "gruzi" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= "nos" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "nosi" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= "vus" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "vozi" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= "wuk" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "wugi" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= "wuk" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "wuki" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= "sok" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "soki" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= "ruk" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "rogi" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= "bur" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bori" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= "vuw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "vowi" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= "sul" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "soli" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= "buj" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "boji" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= "Bum" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "Bumi" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= "Uur" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "Uuri" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      0
      sc1A
      sc1B
      0
      sc2A
      sc2B
      0
      sc3A
      sc3B
      0
      sc4A
      sc4B
      0
      sc5A
      sc5B
      0
      sc6A
      sc6B
      0
      sc7A
      sc7B
      0
      sc8A
      sc8B
      0
      sc9A
      sc9B
      0
      sc10A
      sc10B
      0
      sc11A
      sc11B
      0
      sc12A
      sc12B
      0
      sc13A
      sc13B
      0
      sc14A
      sc14B
      0
      sc15A
      sc15B
      0
      sc16A
      sc16B
      0
      sc17A
      sc17B
      0
      sc18A
      sc18B
      0
      sc19A
      sc19B
      0
      sc20A
      sc20B
      0
      sc21A
      sc21B)
   18))
(assert (= (+ 0
      sc0B
      sc1B
      sc2B
      sc3B
      sc4B
      sc5B
      sc6B
      sc7B
      sc8B
      sc9B
      sc10B
      sc11B
      sc12B
      sc13B
      sc14B
      sc15B
      sc16B
      sc17B
      sc18B
      sc19B
      sc20B
      sc21B)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= "klup" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "klubi" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= "trup" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "trupi" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= "dom" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "domi" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= "snop" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "snopi" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= "Uwup" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "Uwobi" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= "trut" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "trudi" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= "dzvon" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "dzvoni" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= "kot" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "koti" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= "lut" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "lodi" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= "grus" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "gruzi" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= "nos" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "nosi" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= "vus" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "vozi" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= "wuk" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "wugi" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= "wuk" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "wuki" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= "sok" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "soki" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= "ruk" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "rogi" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= "bur" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bori" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= "vuw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "vowi" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= "sul" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "soli" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= "buj" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "boji" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= "Bum" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "Bumi" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= "Uur" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "Uuri" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      0
      sc1A
      sc1B
      0
      sc2A
      sc2B
      0
      sc3A
      sc3B
      0
      sc4A
      sc4B
      0
      sc5A
      sc5B
      0
      sc6A
      sc6B
      0
      sc7A
      sc7B
      0
      sc8A
      sc8B
      0
      sc9A
      sc9B
      0
      sc10A
      sc10B
      0
      sc11A
      sc11B
      0
      sc12A
      sc12B
      0
      sc13A
      sc13B
      0
      sc14A
      sc14B
      0
      sc15A
      sc15B
      0
      sc16A
      sc16B
      0
      sc17A
      sc17B
      0
      sc18A
      sc18B
      0
      sc19A
      sc19B
      0
      sc20A
      sc20B
      0
      sc21A
      sc21B)
   19))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A
      sc17A
      sc18A
      sc19A
      sc20A
      sc21A)
   0))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= "klup" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "klubi" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= "trup" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "trupi" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= "dom" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "domi" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= "snop" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "snopi" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= "Uwup" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "Uwobi" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= "trut" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "trudi" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= "dzvon" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "dzvoni" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= "kot" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "koti" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= "lut" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "lodi" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= "grus" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "gruzi" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= "nos" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "nosi" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= "vus" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "vozi" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= "wuk" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "wugi" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= "wuk" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "wuki" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= "sok" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "soki" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= "ruk" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "rogi" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= "bur" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bori" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= "vuw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "vowi" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= "sul" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "soli" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= "buj" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "boji" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= "Bum" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "Bumi" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= "Uur" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "Uuri" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      0
      sc1A
      sc1B
      0
      sc2A
      sc2B
      0
      sc3A
      sc3B
      0
      sc4A
      sc4B
      0
      sc5A
      sc5B
      0
      sc6A
      sc6B
      0
      sc7A
      sc7B
      0
      sc8A
      sc8B
      0
      sc9A
      sc9B
      0
      sc10A
      sc10B
      0
      sc11A
      sc11B
      0
      sc12A
      sc12B
      0
      sc13A
      sc13B
      0
      sc14A
      sc14B
      0
      sc15A
      sc15B
      0
      sc16A
      sc16B
      0
      sc17A
      sc17B
      0
      sc18A
      sc18B
      0
      sc19A
      sc19B
      0
      sc20A
      sc20B
      0
      sc21A
      sc21B)
   19))
(assert (= (+ 0
      sc0B
      sc1B
      sc2B
      sc3B
      sc4B
      sc5B
      sc6B
      sc7B
      sc8B
      sc9B
      sc10B
      sc11B
      sc12B
      sc13B
      sc14B
      sc15B
      sc16B
      sc17B
      sc18B
      sc19B
      sc20B
      sc21B)
   0))

None
930.59user 0.36system 15:31.06elapsed 99%CPU (0avgtext+0avgdata 58316maxresident)k
0inputs+1416outputs (0major+10068minor)pagefaults 0swaps
