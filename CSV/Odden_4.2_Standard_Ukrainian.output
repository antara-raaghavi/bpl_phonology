[['zub', 'zubam', 'zubovʲi', 'zubʲi', '', '', '', '', '', ''], ['svʲit', 'svʲitam', 'svʲitovʲi', 'svʲitʲi', '', '', '', '', '', ''], ['zʲatʲ', 'zʲatʲam', 'zʲatevʲi', '', 'zʲatevʲi', '', '', '', '', ''], ['koʃʲilʲ', 'koʃelʲam', 'koʃelevʲi', 'koʃelʲi', '', '', '', '', '', ''], ['zlodʲij', 'zlodʲijam', 'zlodʲijevʲi', '', 'zlodʲijevʲi', '', '', '', '', ''], ['mʲisʲaʦʲ', 'mʲisʲaʦʲam', 'mʲisʲaʦevʲi', 'mʲisʲaʦʲi', '', '', '', '', '', ''], ['korovaj', 'korovajam', 'korovajevʲi', 'korovaji', '', '', '', '', '', ''], ['kamʲinʲ', 'kamenʲam', 'kamenevʲi', 'kamenʲi', '', '', '', '', '', ''], ['mʲidʲ', 'mʲidʲam', 'mʲidevʲi', 'mʲidʲi', '', '', '', '', '', ''], ['xlʲiw', 'xlʲivam', 'xlʲivovʲi', 'xlʲivʲi', '', '', '', '', '', ''], ['holub', 'holubam', 'holubovʲi', 'holubʲi', '', '', '', '', '', ''], ['sʲin', 'sʲinam', 'sʲinovʲi', 'sʲinʲi', '', '', '', '', '', ''], ['lebʲidʲ', 'lebedʲam', 'lebedevʲi', 'lebedʲi', '', '', '', '', '', ''], ['susʲid', 'susʲidam', 'susʲidovʲi', '', 'susʲidovʲi', '', '', '', '', ''], ['ʧolovʲik', 'ʧolovʲikam', 'ʧolovʲikovʲi', '', 'ʧolovʲikovʲi', '', '', '', '', ''], ['lʲid', 'ledam', 'ledovʲi', 'ledʲi', '', '', '', '', '', ''], ['bilʲ', 'bolʲam', 'bolevʲi', 'bolʲi', '', '', '', '', '', ''], ['riw', 'rovam', 'rovovʲi', 'rovʲi', '', '', '', '', '', ''], ['stiw', 'stolam', 'stolovʲi', 'stolʲi', '', '', '', '', '', ''], ['dʲid', 'dʲidam', 'dʲidovʲi', '', 'dʲidovʲi', '', '', '', '', ''], ['lʲit', 'lʲotam', 'lʲotovʲi', 'lʲotʲi', '', '', '', '', '', ''], ['mist', 'mostam', 'mostovʲi', 'mostʲi', '', '', '', '', '', ''], ['veʧir', 'veʧoram', 'veʧorovʲi', 'veʧorʲi', '', '', '', '', '', ''], ['', '', '', '', '', 'tʲilo', 'tʲila', 'tʲilu', 'tʲilʲi', 'tʲiw'], ['', '', '', '', '', 'koleso', 'kolesa', 'kolesu', 'kolesʲi', 'kolʲis'], ['', '', '', '', '', 'ozero', 'ozera', 'ozeru', 'ozerʲi', 'ozʲir'], ['', '', '', '', '', 'selo', 'sela', 'selu', 'selʲi', 'sʲiw'], ['', '', '', '', '', 'pole', 'polʲa', 'polʲu', 'polʲi', 'pilʲ'], ['', '', '', '', '', 'slovo', 'slova', 'slovu', 'slovʲi', 'sliw'], ['', '', '', '', '', 'more', 'morʲa', 'morʲu', 'morʲi', 'mirʲ']]
zub  >  ['z', 'u', 'b'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
zubam  >  ['z', 'u', 'b', 'a', 'm'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
zubovʲi  >  ['z', 'u', 'b', 'o', 'O', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O'}
zubʲi  >  ['z', 'u', 'X', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X'}
svʲit  >  ['s', 'O', 'i', 't'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X'}
svʲitam  >  ['s', 'O', 'i', 't', 'a', 'm'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X'}
svʲitovʲi  >  ['s', 'O', 'i', 't', 'o', 'O', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X'}
svʲitʲi  >  ['s', 'O', 'i', 'Z', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z'}
zʲatʲ  >  ['1', 'a', 'Z'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1'}
zʲatʲam  >  ['1', 'a', 'Z', 'a', 'm'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1'}
zʲatevʲi  >  ['1', 'a', 't', 'e', 'O', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1'}
zʲatevʲi  >  ['1', 'a', 't', 'e', 'O', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1'}
koʃʲilʲ  >  ['k', 'o', '2', 'i', '3'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3'}
koʃelʲam  >  ['k', 'o', 'B', 'e', '3', 'a', 'm'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3'}
koʃelevʲi  >  ['k', 'o', 'B', 'e', 'l', 'e', 'O', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3'}
koʃelʲi  >  ['k', 'o', 'B', 'e', '3', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3'}
zlodʲij  >  ['z', 'l', 'o', '4', 'i', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4'}
zlodʲijam  >  ['z', 'l', 'o', '4', 'i', 'j', 'a', 'm'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4'}
zlodʲijevʲi  >  ['z', 'l', 'o', '4', 'i', 'j', 'e', 'O', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4'}
zlodʲijevʲi  >  ['z', 'l', 'o', '4', 'i', 'j', 'e', 'O', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4'}
mʲisʲaʦʲ  >  ['5', 'i', '6', 'a', '7'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7'}
mʲisʲaʦʲam  >  ['5', 'i', '6', 'a', '7', 'a', 'm'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7'}
mʲisʲaʦevʲi  >  ['5', 'i', '6', 'a', 'P', 'e', 'O', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7'}
mʲisʲaʦʲi  >  ['5', 'i', '6', 'a', '7', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7'}
korovaj  >  ['k', 'o', 'r', 'o', 'v', 'a', 'j'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7'}
korovajam  >  ['k', 'o', 'r', 'o', 'v', 'a', 'j', 'a', 'm'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7'}
korovajevʲi  >  ['k', 'o', 'r', 'o', 'v', 'a', 'j', 'e', 'O', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7'}
korovaji  >  ['k', 'o', 'r', 'o', 'v', 'a', 'j', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7'}
kamʲinʲ  >  ['k', 'a', '5', 'i', '8'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
kamenʲam  >  ['k', 'a', 'm', 'e', '8', 'a', 'm'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
kamenevʲi  >  ['k', 'a', 'm', 'e', 'n', 'e', 'O', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
kamenʲi  >  ['k', 'a', 'm', 'e', '8', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
mʲidʲ  >  ['5', 'i', '4'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
mʲidʲam  >  ['5', 'i', '4', 'a', 'm'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
mʲidevʲi  >  ['5', 'i', 'd', 'e', 'O', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
mʲidʲi  >  ['5', 'i', '4', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
xlʲiw  >  ['x', '3', 'i', 'w'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
xlʲivam  >  ['x', '3', 'i', 'v', 'a', 'm'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
xlʲivovʲi  >  ['x', '3', 'i', 'v', 'o', 'O', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
xlʲivʲi  >  ['x', '3', 'i', 'O', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
holub  >  ['h', 'o', 'l', 'u', 'b'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
holubam  >  ['h', 'o', 'l', 'u', 'b', 'a', 'm'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
holubovʲi  >  ['h', 'o', 'l', 'u', 'b', 'o', 'O', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
holubʲi  >  ['h', 'o', 'l', 'u', 'X', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
sʲin  >  ['6', 'i', 'n'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
sʲinam  >  ['6', 'i', 'n', 'a', 'm'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
sʲinovʲi  >  ['6', 'i', 'n', 'o', 'O', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
sʲinʲi  >  ['6', 'i', '8', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
lebʲidʲ  >  ['l', 'e', 'X', 'i', '4'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
lebedʲam  >  ['l', 'e', 'b', 'e', '4', 'a', 'm'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
lebedevʲi  >  ['l', 'e', 'b', 'e', 'd', 'e', 'O', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
lebedʲi  >  ['l', 'e', 'b', 'e', '4', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
susʲid  >  ['s', 'u', '6', 'i', 'd'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
susʲidam  >  ['s', 'u', '6', 'i', 'd', 'a', 'm'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
susʲidovʲi  >  ['s', 'u', '6', 'i', 'd', 'o', 'O', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
susʲidovʲi  >  ['s', 'u', '6', 'i', 'd', 'o', 'O', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
ʧolovʲik  >  ['E', 'o', 'l', 'o', 'O', 'i', 'k'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
ʧolovʲikam  >  ['E', 'o', 'l', 'o', 'O', 'i', 'k', 'a', 'm'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
ʧolovʲikovʲi  >  ['E', 'o', 'l', 'o', 'O', 'i', 'k', 'o', 'O', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
ʧolovʲikovʲi  >  ['E', 'o', 'l', 'o', 'O', 'i', 'k', 'o', 'O', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
lʲid  >  ['3', 'i', 'd'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
ledam  >  ['l', 'e', 'd', 'a', 'm'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
ledovʲi  >  ['l', 'e', 'd', 'o', 'O', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
ledʲi  >  ['l', 'e', '4', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
bilʲ  >  ['b', 'i', '3'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
bolʲam  >  ['b', 'o', '3', 'a', 'm'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
bolevʲi  >  ['b', 'o', 'l', 'e', 'O', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
bolʲi  >  ['b', 'o', '3', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
riw  >  ['r', 'i', 'w'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
rovam  >  ['r', 'o', 'v', 'a', 'm'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
rovovʲi  >  ['r', 'o', 'v', 'o', 'O', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
rovʲi  >  ['r', 'o', 'O', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
stiw  >  ['s', 't', 'i', 'w'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
stolam  >  ['s', 't', 'o', 'l', 'a', 'm'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
stolovʲi  >  ['s', 't', 'o', 'l', 'o', 'O', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
stolʲi  >  ['s', 't', 'o', '3', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
dʲid  >  ['4', 'i', 'd'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
dʲidam  >  ['4', 'i', 'd', 'a', 'm'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
dʲidovʲi  >  ['4', 'i', 'd', 'o', 'O', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
dʲidovʲi  >  ['4', 'i', 'd', 'o', 'O', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
lʲit  >  ['3', 'i', 't'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
lʲotam  >  ['3', 'o', 't', 'a', 'm'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
lʲotovʲi  >  ['3', 'o', 't', 'o', 'O', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
lʲotʲi  >  ['3', 'o', 'Z', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
mist  >  ['m', 'i', 's', 't'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
mostam  >  ['m', 'o', 's', 't', 'a', 'm'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
mostovʲi  >  ['m', 'o', 's', 't', 'o', 'O', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
mostʲi  >  ['m', 'o', 's', 'Z', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
veʧir  >  ['v', 'e', 'E', 'i', 'r'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
veʧoram  >  ['v', 'e', 'E', 'o', 'r', 'a', 'm'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
veʧorovʲi  >  ['v', 'e', 'E', 'o', 'r', 'o', 'O', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8'}
veʧorʲi  >  ['v', 'e', 'E', 'o', '9', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8', 'rʲ': '9'}
tʲilo  >  ['Z', 'i', 'l', 'o'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8', 'rʲ': '9'}
tʲila  >  ['Z', 'i', 'l', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8', 'rʲ': '9'}
tʲilu  >  ['Z', 'i', 'l', 'u'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8', 'rʲ': '9'}
tʲilʲi  >  ['Z', 'i', '3', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8', 'rʲ': '9'}
tʲiw  >  ['Z', 'i', 'w'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8', 'rʲ': '9'}
koleso  >  ['k', 'o', 'l', 'e', 's', 'o'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8', 'rʲ': '9'}
kolesa  >  ['k', 'o', 'l', 'e', 's', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8', 'rʲ': '9'}
kolesu  >  ['k', 'o', 'l', 'e', 's', 'u'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8', 'rʲ': '9'}
kolesʲi  >  ['k', 'o', 'l', 'e', '6', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8', 'rʲ': '9'}
kolʲis  >  ['k', 'o', '3', 'i', 's'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8', 'rʲ': '9'}
ozero  >  ['o', 'z', 'e', 'r', 'o'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8', 'rʲ': '9'}
ozera  >  ['o', 'z', 'e', 'r', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8', 'rʲ': '9'}
ozeru  >  ['o', 'z', 'e', 'r', 'u'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8', 'rʲ': '9'}
ozerʲi  >  ['o', 'z', 'e', '9', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8', 'rʲ': '9'}
ozʲir  >  ['o', '1', 'i', 'r'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8', 'rʲ': '9'}
selo  >  ['s', 'e', 'l', 'o'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8', 'rʲ': '9'}
sela  >  ['s', 'e', 'l', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8', 'rʲ': '9'}
selu  >  ['s', 'e', 'l', 'u'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8', 'rʲ': '9'}
selʲi  >  ['s', 'e', '3', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8', 'rʲ': '9'}
sʲiw  >  ['6', 'i', 'w'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8', 'rʲ': '9'}
pole  >  ['p', 'o', 'l', 'e'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8', 'rʲ': '9'}
polʲa  >  ['p', 'o', '3', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8', 'rʲ': '9'}
polʲu  >  ['p', 'o', '3', 'u'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8', 'rʲ': '9'}
polʲi  >  ['p', 'o', '3', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8', 'rʲ': '9'}
pilʲ  >  ['p', 'i', '3'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8', 'rʲ': '9'}
slovo  >  ['s', 'l', 'o', 'v', 'o'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8', 'rʲ': '9'}
slova  >  ['s', 'l', 'o', 'v', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8', 'rʲ': '9'}
slovu  >  ['s', 'l', 'o', 'v', 'u'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8', 'rʲ': '9'}
slovʲi  >  ['s', 'l', 'o', 'O', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8', 'rʲ': '9'}
sliw  >  ['s', 'l', 'i', 'w'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8', 'rʲ': '9'}
more  >  ['m', 'o', 'r', 'e'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8', 'rʲ': '9'}
morʲa  >  ['m', 'o', '9', 'a'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8', 'rʲ': '9'}
morʲu  >  ['m', 'o', '9', 'u'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8', 'rʲ': '9'}
morʲi  >  ['m', 'o', '9', 'i'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8', 'rʲ': '9'}
mirʲ  >  ['m', 'i', '9'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'vʲ': 'O', 'bʲ': 'X', 'tʲ': 'Z', 'zʲ': '1', 'ʃʲ': '2', 'lʲ': '3', 'dʲ': '4', 'mʲ': '5', 'sʲ': '6', 'ʦʲ': '7', 'nʲ': '8', 'rʲ': '9'}
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun var0I () String)
(declare-fun var0J () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun unch20I () String)
(declare-fun ch0I () String)
(declare-fun unch10I () String)
(declare-fun sufI () String)
(declare-fun preI () String)
(declare-fun unch20J () String)
(declare-fun ch0J () String)
(declare-fun unch10J () String)
(declare-fun sufJ () String)
(declare-fun preJ () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun sc0I () Int)
(declare-fun sc0J () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun var1I () String)
(declare-fun var1J () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun unch21I () String)
(declare-fun ch1I () String)
(declare-fun unch11I () String)
(declare-fun unch21J () String)
(declare-fun ch1J () String)
(declare-fun unch11J () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun sc1I () Int)
(declare-fun sc1J () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun var2I () String)
(declare-fun var2J () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun unch22I () String)
(declare-fun ch2I () String)
(declare-fun unch12I () String)
(declare-fun unch22J () String)
(declare-fun ch2J () String)
(declare-fun unch12J () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun sc2I () Int)
(declare-fun sc2J () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun var3I () String)
(declare-fun var3J () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun unch23I () String)
(declare-fun ch3I () String)
(declare-fun unch13I () String)
(declare-fun unch23J () String)
(declare-fun ch3J () String)
(declare-fun unch13J () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun sc3I () Int)
(declare-fun sc3J () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun var4I () String)
(declare-fun var4J () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun unch24I () String)
(declare-fun ch4I () String)
(declare-fun unch14I () String)
(declare-fun unch24J () String)
(declare-fun ch4J () String)
(declare-fun unch14J () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun sc4I () Int)
(declare-fun sc4J () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun var5I () String)
(declare-fun var5J () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun unch25I () String)
(declare-fun ch5I () String)
(declare-fun unch15I () String)
(declare-fun unch25J () String)
(declare-fun ch5J () String)
(declare-fun unch15J () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun sc5I () Int)
(declare-fun sc5J () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun var6I () String)
(declare-fun var6J () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun unch26I () String)
(declare-fun ch6I () String)
(declare-fun unch16I () String)
(declare-fun unch26J () String)
(declare-fun ch6J () String)
(declare-fun unch16J () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(declare-fun sc6I () Int)
(declare-fun sc6J () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun var7G () String)
(declare-fun var7H () String)
(declare-fun var7I () String)
(declare-fun var7J () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun unch27G () String)
(declare-fun ch7G () String)
(declare-fun unch17G () String)
(declare-fun unch27H () String)
(declare-fun ch7H () String)
(declare-fun unch17H () String)
(declare-fun unch27I () String)
(declare-fun ch7I () String)
(declare-fun unch17I () String)
(declare-fun unch27J () String)
(declare-fun ch7J () String)
(declare-fun unch17J () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun sc7G () Int)
(declare-fun sc7H () Int)
(declare-fun sc7I () Int)
(declare-fun sc7J () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun var8G () String)
(declare-fun var8H () String)
(declare-fun var8I () String)
(declare-fun var8J () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun unch28G () String)
(declare-fun ch8G () String)
(declare-fun unch18G () String)
(declare-fun unch28H () String)
(declare-fun ch8H () String)
(declare-fun unch18H () String)
(declare-fun unch28I () String)
(declare-fun ch8I () String)
(declare-fun unch18I () String)
(declare-fun unch28J () String)
(declare-fun ch8J () String)
(declare-fun unch18J () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun sc8G () Int)
(declare-fun sc8H () Int)
(declare-fun sc8I () Int)
(declare-fun sc8J () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun var9G () String)
(declare-fun var9H () String)
(declare-fun var9I () String)
(declare-fun var9J () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun unch29G () String)
(declare-fun ch9G () String)
(declare-fun unch19G () String)
(declare-fun unch29H () String)
(declare-fun ch9H () String)
(declare-fun unch19H () String)
(declare-fun unch29I () String)
(declare-fun ch9I () String)
(declare-fun unch19I () String)
(declare-fun unch29J () String)
(declare-fun ch9J () String)
(declare-fun unch19J () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun sc9G () Int)
(declare-fun sc9H () Int)
(declare-fun sc9I () Int)
(declare-fun sc9J () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun var10G () String)
(declare-fun var10H () String)
(declare-fun var10I () String)
(declare-fun var10J () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun unch210G () String)
(declare-fun ch10G () String)
(declare-fun unch110G () String)
(declare-fun unch210H () String)
(declare-fun ch10H () String)
(declare-fun unch110H () String)
(declare-fun unch210I () String)
(declare-fun ch10I () String)
(declare-fun unch110I () String)
(declare-fun unch210J () String)
(declare-fun ch10J () String)
(declare-fun unch110J () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun sc10G () Int)
(declare-fun sc10H () Int)
(declare-fun sc10I () Int)
(declare-fun sc10J () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun var11G () String)
(declare-fun var11H () String)
(declare-fun var11I () String)
(declare-fun var11J () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun unch211G () String)
(declare-fun ch11G () String)
(declare-fun unch111G () String)
(declare-fun unch211H () String)
(declare-fun ch11H () String)
(declare-fun unch111H () String)
(declare-fun unch211I () String)
(declare-fun ch11I () String)
(declare-fun unch111I () String)
(declare-fun unch211J () String)
(declare-fun ch11J () String)
(declare-fun unch111J () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun sc11G () Int)
(declare-fun sc11H () Int)
(declare-fun sc11I () Int)
(declare-fun sc11J () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun var12G () String)
(declare-fun var12H () String)
(declare-fun var12I () String)
(declare-fun var12J () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun unch212G () String)
(declare-fun ch12G () String)
(declare-fun unch112G () String)
(declare-fun unch212H () String)
(declare-fun ch12H () String)
(declare-fun unch112H () String)
(declare-fun unch212I () String)
(declare-fun ch12I () String)
(declare-fun unch112I () String)
(declare-fun unch212J () String)
(declare-fun ch12J () String)
(declare-fun unch112J () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun sc12G () Int)
(declare-fun sc12H () Int)
(declare-fun sc12I () Int)
(declare-fun sc12J () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun var13G () String)
(declare-fun var13H () String)
(declare-fun var13I () String)
(declare-fun var13J () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun unch213G () String)
(declare-fun ch13G () String)
(declare-fun unch113G () String)
(declare-fun unch213H () String)
(declare-fun ch13H () String)
(declare-fun unch113H () String)
(declare-fun unch213I () String)
(declare-fun ch13I () String)
(declare-fun unch113I () String)
(declare-fun unch213J () String)
(declare-fun ch13J () String)
(declare-fun unch113J () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun sc13G () Int)
(declare-fun sc13H () Int)
(declare-fun sc13I () Int)
(declare-fun sc13J () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun var14G () String)
(declare-fun var14H () String)
(declare-fun var14I () String)
(declare-fun var14J () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun unch214G () String)
(declare-fun ch14G () String)
(declare-fun unch114G () String)
(declare-fun unch214H () String)
(declare-fun ch14H () String)
(declare-fun unch114H () String)
(declare-fun unch214I () String)
(declare-fun ch14I () String)
(declare-fun unch114I () String)
(declare-fun unch214J () String)
(declare-fun ch14J () String)
(declare-fun unch114J () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun sc14G () Int)
(declare-fun sc14H () Int)
(declare-fun sc14I () Int)
(declare-fun sc14J () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun var15G () String)
(declare-fun var15H () String)
(declare-fun var15I () String)
(declare-fun var15J () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun unch215G () String)
(declare-fun ch15G () String)
(declare-fun unch115G () String)
(declare-fun unch215H () String)
(declare-fun ch15H () String)
(declare-fun unch115H () String)
(declare-fun unch215I () String)
(declare-fun ch15I () String)
(declare-fun unch115I () String)
(declare-fun unch215J () String)
(declare-fun ch15J () String)
(declare-fun unch115J () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun sc15G () Int)
(declare-fun sc15H () Int)
(declare-fun sc15I () Int)
(declare-fun sc15J () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun var16G () String)
(declare-fun var16H () String)
(declare-fun var16I () String)
(declare-fun var16J () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun unch216G () String)
(declare-fun ch16G () String)
(declare-fun unch116G () String)
(declare-fun unch216H () String)
(declare-fun ch16H () String)
(declare-fun unch116H () String)
(declare-fun unch216I () String)
(declare-fun ch16I () String)
(declare-fun unch116I () String)
(declare-fun unch216J () String)
(declare-fun ch16J () String)
(declare-fun unch116J () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun sc16G () Int)
(declare-fun sc16H () Int)
(declare-fun sc16I () Int)
(declare-fun sc16J () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun var17G () String)
(declare-fun var17H () String)
(declare-fun var17I () String)
(declare-fun var17J () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun unch217G () String)
(declare-fun ch17G () String)
(declare-fun unch117G () String)
(declare-fun unch217H () String)
(declare-fun ch17H () String)
(declare-fun unch117H () String)
(declare-fun unch217I () String)
(declare-fun ch17I () String)
(declare-fun unch117I () String)
(declare-fun unch217J () String)
(declare-fun ch17J () String)
(declare-fun unch117J () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun sc17G () Int)
(declare-fun sc17H () Int)
(declare-fun sc17I () Int)
(declare-fun sc17J () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun var18G () String)
(declare-fun var18H () String)
(declare-fun var18I () String)
(declare-fun var18J () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun unch218G () String)
(declare-fun ch18G () String)
(declare-fun unch118G () String)
(declare-fun unch218H () String)
(declare-fun ch18H () String)
(declare-fun unch118H () String)
(declare-fun unch218I () String)
(declare-fun ch18I () String)
(declare-fun unch118I () String)
(declare-fun unch218J () String)
(declare-fun ch18J () String)
(declare-fun unch118J () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun sc18G () Int)
(declare-fun sc18H () Int)
(declare-fun sc18I () Int)
(declare-fun sc18J () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun var19G () String)
(declare-fun var19H () String)
(declare-fun var19I () String)
(declare-fun var19J () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun unch219G () String)
(declare-fun ch19G () String)
(declare-fun unch119G () String)
(declare-fun unch219H () String)
(declare-fun ch19H () String)
(declare-fun unch119H () String)
(declare-fun unch219I () String)
(declare-fun ch19I () String)
(declare-fun unch119I () String)
(declare-fun unch219J () String)
(declare-fun ch19J () String)
(declare-fun unch119J () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun sc19G () Int)
(declare-fun sc19H () Int)
(declare-fun sc19I () Int)
(declare-fun sc19J () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun var20G () String)
(declare-fun var20H () String)
(declare-fun var20I () String)
(declare-fun var20J () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun unch220G () String)
(declare-fun ch20G () String)
(declare-fun unch120G () String)
(declare-fun unch220H () String)
(declare-fun ch20H () String)
(declare-fun unch120H () String)
(declare-fun unch220I () String)
(declare-fun ch20I () String)
(declare-fun unch120I () String)
(declare-fun unch220J () String)
(declare-fun ch20J () String)
(declare-fun unch120J () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun sc20G () Int)
(declare-fun sc20H () Int)
(declare-fun sc20I () Int)
(declare-fun sc20J () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun var21G () String)
(declare-fun var21H () String)
(declare-fun var21I () String)
(declare-fun var21J () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun unch221G () String)
(declare-fun ch21G () String)
(declare-fun unch121G () String)
(declare-fun unch221H () String)
(declare-fun ch21H () String)
(declare-fun unch121H () String)
(declare-fun unch221I () String)
(declare-fun ch21I () String)
(declare-fun unch121I () String)
(declare-fun unch221J () String)
(declare-fun ch21J () String)
(declare-fun unch121J () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun sc21G () Int)
(declare-fun sc21H () Int)
(declare-fun sc21I () Int)
(declare-fun sc21J () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun var22G () String)
(declare-fun var22H () String)
(declare-fun var22I () String)
(declare-fun var22J () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun unch222G () String)
(declare-fun ch22G () String)
(declare-fun unch122G () String)
(declare-fun unch222H () String)
(declare-fun ch22H () String)
(declare-fun unch122H () String)
(declare-fun unch222I () String)
(declare-fun ch22I () String)
(declare-fun unch122I () String)
(declare-fun unch222J () String)
(declare-fun ch22J () String)
(declare-fun unch122J () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun sc22G () Int)
(declare-fun sc22H () Int)
(declare-fun sc22I () Int)
(declare-fun sc22J () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun var23G () String)
(declare-fun var23H () String)
(declare-fun var23I () String)
(declare-fun var23J () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun unch223G () String)
(declare-fun ch23G () String)
(declare-fun unch123G () String)
(declare-fun unch223H () String)
(declare-fun ch23H () String)
(declare-fun unch123H () String)
(declare-fun unch223I () String)
(declare-fun ch23I () String)
(declare-fun unch123I () String)
(declare-fun unch223J () String)
(declare-fun ch23J () String)
(declare-fun unch123J () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun sc23G () Int)
(declare-fun sc23H () Int)
(declare-fun sc23I () Int)
(declare-fun sc23J () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun var24G () String)
(declare-fun var24H () String)
(declare-fun var24I () String)
(declare-fun var24J () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun unch224G () String)
(declare-fun ch24G () String)
(declare-fun unch124G () String)
(declare-fun unch224H () String)
(declare-fun ch24H () String)
(declare-fun unch124H () String)
(declare-fun unch224I () String)
(declare-fun ch24I () String)
(declare-fun unch124I () String)
(declare-fun unch224J () String)
(declare-fun ch24J () String)
(declare-fun unch124J () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun sc24G () Int)
(declare-fun sc24H () Int)
(declare-fun sc24I () Int)
(declare-fun sc24J () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun var25G () String)
(declare-fun var25H () String)
(declare-fun var25I () String)
(declare-fun var25J () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun unch225G () String)
(declare-fun ch25G () String)
(declare-fun unch125G () String)
(declare-fun unch225H () String)
(declare-fun ch25H () String)
(declare-fun unch125H () String)
(declare-fun unch225I () String)
(declare-fun ch25I () String)
(declare-fun unch125I () String)
(declare-fun unch225J () String)
(declare-fun ch25J () String)
(declare-fun unch125J () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun sc25G () Int)
(declare-fun sc25H () Int)
(declare-fun sc25I () Int)
(declare-fun sc25J () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun var26G () String)
(declare-fun var26H () String)
(declare-fun var26I () String)
(declare-fun var26J () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun unch226G () String)
(declare-fun ch26G () String)
(declare-fun unch126G () String)
(declare-fun unch226H () String)
(declare-fun ch26H () String)
(declare-fun unch126H () String)
(declare-fun unch226I () String)
(declare-fun ch26I () String)
(declare-fun unch126I () String)
(declare-fun unch226J () String)
(declare-fun ch26J () String)
(declare-fun unch126J () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun sc26G () Int)
(declare-fun sc26H () Int)
(declare-fun sc26I () Int)
(declare-fun sc26J () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun var27G () String)
(declare-fun var27H () String)
(declare-fun var27I () String)
(declare-fun var27J () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun unch227G () String)
(declare-fun ch27G () String)
(declare-fun unch127G () String)
(declare-fun unch227H () String)
(declare-fun ch27H () String)
(declare-fun unch127H () String)
(declare-fun unch227I () String)
(declare-fun ch27I () String)
(declare-fun unch127I () String)
(declare-fun unch227J () String)
(declare-fun ch27J () String)
(declare-fun unch127J () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun sc27G () Int)
(declare-fun sc27H () Int)
(declare-fun sc27I () Int)
(declare-fun sc27J () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun var28G () String)
(declare-fun var28H () String)
(declare-fun var28I () String)
(declare-fun var28J () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun unch228G () String)
(declare-fun ch28G () String)
(declare-fun unch128G () String)
(declare-fun unch228H () String)
(declare-fun ch28H () String)
(declare-fun unch128H () String)
(declare-fun unch228I () String)
(declare-fun ch28I () String)
(declare-fun unch128I () String)
(declare-fun unch228J () String)
(declare-fun ch28J () String)
(declare-fun unch128J () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun sc28G () Int)
(declare-fun sc28H () Int)
(declare-fun sc28I () Int)
(declare-fun sc28J () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun var29G () String)
(declare-fun var29H () String)
(declare-fun var29I () String)
(declare-fun var29J () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun unch229G () String)
(declare-fun ch29G () String)
(declare-fun unch129G () String)
(declare-fun unch229H () String)
(declare-fun ch29H () String)
(declare-fun unch129H () String)
(declare-fun unch229I () String)
(declare-fun ch29I () String)
(declare-fun unch129I () String)
(declare-fun unch229J () String)
(declare-fun ch29J () String)
(declare-fun unch129J () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun sc29G () Int)
(declare-fun sc29H () Int)
(declare-fun sc29I () Int)
(declare-fun sc29J () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (<= (str.len var0I) 1))
(assert (<= (str.len var0J) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= (str.++ preI (str.++ stem0 sufI)) (str.++ unch10I (str.++ ch0I unch20I))))
(assert (= (str.++ preJ (str.++ stem0 sufJ)) (str.++ unch10J (str.++ ch0J unch20J))))
(assert (= "zub" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "zubam" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "zuboOi" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "zuXi" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (= (ite (= ch0I var0I) 0 1) sc0I))
(assert (= (ite (= ch0J var0J) 0 1) sc0J))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= sc0I 1))
(assert (<= sc0J 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (<= (str.len var1I) 1))
(assert (<= (str.len var1J) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= (str.++ preI (str.++ stem1 sufI)) (str.++ unch11I (str.++ ch1I unch21I))))
(assert (= (str.++ preJ (str.++ stem1 sufJ)) (str.++ unch11J (str.++ ch1J unch21J))))
(assert (= "sOit" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "sOitam" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "sOitoOi" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "sOiZi" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (= (ite (= ch1I var1I) 0 1) sc1I))
(assert (= (ite (= ch1J var1J) 0 1) sc1J))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= sc1I 1))
(assert (<= sc1J 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (<= (str.len var2I) 1))
(assert (<= (str.len var2J) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= (str.++ preI (str.++ stem2 sufI)) (str.++ unch12I (str.++ ch2I unch22I))))
(assert (= (str.++ preJ (str.++ stem2 sufJ)) (str.++ unch12J (str.++ ch2J unch22J))))
(assert (= "1aZ" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "1aZam" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "1ateOi" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "1ateOi" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (= (ite (= ch2I var2I) 0 1) sc2I))
(assert (= (ite (= ch2J var2J) 0 1) sc2J))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= sc2I 1))
(assert (<= sc2J 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (<= (str.len var3I) 1))
(assert (<= (str.len var3J) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= (str.++ preI (str.++ stem3 sufI)) (str.++ unch13I (str.++ ch3I unch23I))))
(assert (= (str.++ preJ (str.++ stem3 sufJ)) (str.++ unch13J (str.++ ch3J unch23J))))
(assert (= "ko2i3" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "koBe3am" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "koBeleOi" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "koBe3i" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (= (ite (= ch3I var3I) 0 1) sc3I))
(assert (= (ite (= ch3J var3J) 0 1) sc3J))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= sc3I 1))
(assert (<= sc3J 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (<= (str.len var4I) 1))
(assert (<= (str.len var4J) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= (str.++ preI (str.++ stem4 sufI)) (str.++ unch14I (str.++ ch4I unch24I))))
(assert (= (str.++ preJ (str.++ stem4 sufJ)) (str.++ unch14J (str.++ ch4J unch24J))))
(assert (= "zlo4ij" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "zlo4ijam" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "zlo4ijeOi" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "zlo4ijeOi" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (= (ite (= ch4I var4I) 0 1) sc4I))
(assert (= (ite (= ch4J var4J) 0 1) sc4J))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= sc4I 1))
(assert (<= sc4J 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (<= (str.len var5I) 1))
(assert (<= (str.len var5J) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= (str.++ preI (str.++ stem5 sufI)) (str.++ unch15I (str.++ ch5I unch25I))))
(assert (= (str.++ preJ (str.++ stem5 sufJ)) (str.++ unch15J (str.++ ch5J unch25J))))
(assert (= "5i6a7" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "5i6a7am" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "5i6aPeOi" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "5i6a7i" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (= (ite (= ch5I var5I) 0 1) sc5I))
(assert (= (ite (= ch5J var5J) 0 1) sc5J))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= sc5I 1))
(assert (<= sc5J 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (<= (str.len var6I) 1))
(assert (<= (str.len var6J) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= (str.++ preI (str.++ stem6 sufI)) (str.++ unch16I (str.++ ch6I unch26I))))
(assert (= (str.++ preJ (str.++ stem6 sufJ)) (str.++ unch16J (str.++ ch6J unch26J))))
(assert (= "korovaj" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "korovajam" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "korovajeOi" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "korovaji" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (= (ite (= ch6I var6I) 0 1) sc6I))
(assert (= (ite (= ch6J var6J) 0 1) sc6J))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (<= sc6I 1))
(assert (<= sc6J 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (<= (str.len var7G) 1))
(assert (<= (str.len var7H) 1))
(assert (<= (str.len var7I) 1))
(assert (<= (str.len var7J) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= (str.++ preG (str.++ stem7 sufG)) (str.++ unch17G (str.++ ch7G unch27G))))
(assert (= (str.++ preH (str.++ stem7 sufH)) (str.++ unch17H (str.++ ch7H unch27H))))
(assert (= (str.++ preI (str.++ stem7 sufI)) (str.++ unch17I (str.++ ch7I unch27I))))
(assert (= (str.++ preJ (str.++ stem7 sufJ)) (str.++ unch17J (str.++ ch7J unch27J))))
(assert (= "ka5i8" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "kame8am" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "kameneOi" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= "kame8i" (str.++ unch17D (str.++ var7D unch27D))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (= (ite (= ch7G var7G) 0 1) sc7G))
(assert (= (ite (= ch7H var7H) 0 1) sc7H))
(assert (= (ite (= ch7I var7I) 0 1) sc7I))
(assert (= (ite (= ch7J var7J) 0 1) sc7J))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= sc7G 1))
(assert (<= sc7H 1))
(assert (<= sc7I 1))
(assert (<= sc7J 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (<= (str.len var8G) 1))
(assert (<= (str.len var8H) 1))
(assert (<= (str.len var8I) 1))
(assert (<= (str.len var8J) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= (str.++ preG (str.++ stem8 sufG)) (str.++ unch18G (str.++ ch8G unch28G))))
(assert (= (str.++ preH (str.++ stem8 sufH)) (str.++ unch18H (str.++ ch8H unch28H))))
(assert (= (str.++ preI (str.++ stem8 sufI)) (str.++ unch18I (str.++ ch8I unch28I))))
(assert (= (str.++ preJ (str.++ stem8 sufJ)) (str.++ unch18J (str.++ ch8J unch28J))))
(assert (= "5i4" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "5i4am" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "5ideOi" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= "5i4i" (str.++ unch18D (str.++ var8D unch28D))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (= (ite (= ch8G var8G) 0 1) sc8G))
(assert (= (ite (= ch8H var8H) 0 1) sc8H))
(assert (= (ite (= ch8I var8I) 0 1) sc8I))
(assert (= (ite (= ch8J var8J) 0 1) sc8J))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= sc8G 1))
(assert (<= sc8H 1))
(assert (<= sc8I 1))
(assert (<= sc8J 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (<= (str.len var9G) 1))
(assert (<= (str.len var9H) 1))
(assert (<= (str.len var9I) 1))
(assert (<= (str.len var9J) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= (str.++ preG (str.++ stem9 sufG)) (str.++ unch19G (str.++ ch9G unch29G))))
(assert (= (str.++ preH (str.++ stem9 sufH)) (str.++ unch19H (str.++ ch9H unch29H))))
(assert (= (str.++ preI (str.++ stem9 sufI)) (str.++ unch19I (str.++ ch9I unch29I))))
(assert (= (str.++ preJ (str.++ stem9 sufJ)) (str.++ unch19J (str.++ ch9J unch29J))))
(assert (= "x3iw" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "x3ivam" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "x3ivoOi" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= "x3iOi" (str.++ unch19D (str.++ var9D unch29D))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (= (ite (= ch9G var9G) 0 1) sc9G))
(assert (= (ite (= ch9H var9H) 0 1) sc9H))
(assert (= (ite (= ch9I var9I) 0 1) sc9I))
(assert (= (ite (= ch9J var9J) 0 1) sc9J))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= sc9G 1))
(assert (<= sc9H 1))
(assert (<= sc9I 1))
(assert (<= sc9J 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (<= (str.len var10G) 1))
(assert (<= (str.len var10H) 1))
(assert (<= (str.len var10I) 1))
(assert (<= (str.len var10J) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= (str.++ preG (str.++ stem10 sufG)) (str.++ unch110G (str.++ ch10G unch210G))))
(assert (= (str.++ preH (str.++ stem10 sufH)) (str.++ unch110H (str.++ ch10H unch210H))))
(assert (= (str.++ preI (str.++ stem10 sufI)) (str.++ unch110I (str.++ ch10I unch210I))))
(assert (= (str.++ preJ (str.++ stem10 sufJ)) (str.++ unch110J (str.++ ch10J unch210J))))
(assert (= "holub" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "holubam" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "holuboOi" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= "holuXi" (str.++ unch110D (str.++ var10D unch210D))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (= (ite (= ch10G var10G) 0 1) sc10G))
(assert (= (ite (= ch10H var10H) 0 1) sc10H))
(assert (= (ite (= ch10I var10I) 0 1) sc10I))
(assert (= (ite (= ch10J var10J) 0 1) sc10J))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= sc10G 1))
(assert (<= sc10H 1))
(assert (<= sc10I 1))
(assert (<= sc10J 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (<= (str.len var11G) 1))
(assert (<= (str.len var11H) 1))
(assert (<= (str.len var11I) 1))
(assert (<= (str.len var11J) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= (str.++ preG (str.++ stem11 sufG)) (str.++ unch111G (str.++ ch11G unch211G))))
(assert (= (str.++ preH (str.++ stem11 sufH)) (str.++ unch111H (str.++ ch11H unch211H))))
(assert (= (str.++ preI (str.++ stem11 sufI)) (str.++ unch111I (str.++ ch11I unch211I))))
(assert (= (str.++ preJ (str.++ stem11 sufJ)) (str.++ unch111J (str.++ ch11J unch211J))))
(assert (= "6in" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "6inam" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "6inoOi" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= "6i8i" (str.++ unch111D (str.++ var11D unch211D))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (= (ite (= ch11G var11G) 0 1) sc11G))
(assert (= (ite (= ch11H var11H) 0 1) sc11H))
(assert (= (ite (= ch11I var11I) 0 1) sc11I))
(assert (= (ite (= ch11J var11J) 0 1) sc11J))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= sc11G 1))
(assert (<= sc11H 1))
(assert (<= sc11I 1))
(assert (<= sc11J 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (<= (str.len var12G) 1))
(assert (<= (str.len var12H) 1))
(assert (<= (str.len var12I) 1))
(assert (<= (str.len var12J) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= (str.++ preG (str.++ stem12 sufG)) (str.++ unch112G (str.++ ch12G unch212G))))
(assert (= (str.++ preH (str.++ stem12 sufH)) (str.++ unch112H (str.++ ch12H unch212H))))
(assert (= (str.++ preI (str.++ stem12 sufI)) (str.++ unch112I (str.++ ch12I unch212I))))
(assert (= (str.++ preJ (str.++ stem12 sufJ)) (str.++ unch112J (str.++ ch12J unch212J))))
(assert (= "leXi4" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "lebe4am" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "lebedeOi" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= "lebe4i" (str.++ unch112D (str.++ var12D unch212D))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (= (ite (= ch12G var12G) 0 1) sc12G))
(assert (= (ite (= ch12H var12H) 0 1) sc12H))
(assert (= (ite (= ch12I var12I) 0 1) sc12I))
(assert (= (ite (= ch12J var12J) 0 1) sc12J))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= sc12G 1))
(assert (<= sc12H 1))
(assert (<= sc12I 1))
(assert (<= sc12J 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (<= (str.len var13G) 1))
(assert (<= (str.len var13H) 1))
(assert (<= (str.len var13I) 1))
(assert (<= (str.len var13J) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= (str.++ preG (str.++ stem13 sufG)) (str.++ unch113G (str.++ ch13G unch213G))))
(assert (= (str.++ preH (str.++ stem13 sufH)) (str.++ unch113H (str.++ ch13H unch213H))))
(assert (= (str.++ preI (str.++ stem13 sufI)) (str.++ unch113I (str.++ ch13I unch213I))))
(assert (= (str.++ preJ (str.++ stem13 sufJ)) (str.++ unch113J (str.++ ch13J unch213J))))
(assert (= "su6id" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "su6idam" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "su6idoOi" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= "su6idoOi" (str.++ unch113E (str.++ var13E unch213E))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (= (ite (= ch13G var13G) 0 1) sc13G))
(assert (= (ite (= ch13H var13H) 0 1) sc13H))
(assert (= (ite (= ch13I var13I) 0 1) sc13I))
(assert (= (ite (= ch13J var13J) 0 1) sc13J))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= sc13G 1))
(assert (<= sc13H 1))
(assert (<= sc13I 1))
(assert (<= sc13J 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (<= (str.len var14G) 1))
(assert (<= (str.len var14H) 1))
(assert (<= (str.len var14I) 1))
(assert (<= (str.len var14J) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= (str.++ preG (str.++ stem14 sufG)) (str.++ unch114G (str.++ ch14G unch214G))))
(assert (= (str.++ preH (str.++ stem14 sufH)) (str.++ unch114H (str.++ ch14H unch214H))))
(assert (= (str.++ preI (str.++ stem14 sufI)) (str.++ unch114I (str.++ ch14I unch214I))))
(assert (= (str.++ preJ (str.++ stem14 sufJ)) (str.++ unch114J (str.++ ch14J unch214J))))
(assert (= "EoloOik" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "EoloOikam" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "EoloOikoOi" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= "EoloOikoOi" (str.++ unch114E (str.++ var14E unch214E))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (= (ite (= ch14G var14G) 0 1) sc14G))
(assert (= (ite (= ch14H var14H) 0 1) sc14H))
(assert (= (ite (= ch14I var14I) 0 1) sc14I))
(assert (= (ite (= ch14J var14J) 0 1) sc14J))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= sc14G 1))
(assert (<= sc14H 1))
(assert (<= sc14I 1))
(assert (<= sc14J 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (<= (str.len var15G) 1))
(assert (<= (str.len var15H) 1))
(assert (<= (str.len var15I) 1))
(assert (<= (str.len var15J) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= (str.++ preG (str.++ stem15 sufG)) (str.++ unch115G (str.++ ch15G unch215G))))
(assert (= (str.++ preH (str.++ stem15 sufH)) (str.++ unch115H (str.++ ch15H unch215H))))
(assert (= (str.++ preI (str.++ stem15 sufI)) (str.++ unch115I (str.++ ch15I unch215I))))
(assert (= (str.++ preJ (str.++ stem15 sufJ)) (str.++ unch115J (str.++ ch15J unch215J))))
(assert (= "3id" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "ledam" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "ledoOi" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= "le4i" (str.++ unch115D (str.++ var15D unch215D))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (= (ite (= ch15G var15G) 0 1) sc15G))
(assert (= (ite (= ch15H var15H) 0 1) sc15H))
(assert (= (ite (= ch15I var15I) 0 1) sc15I))
(assert (= (ite (= ch15J var15J) 0 1) sc15J))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= sc15G 1))
(assert (<= sc15H 1))
(assert (<= sc15I 1))
(assert (<= sc15J 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (<= (str.len var16G) 1))
(assert (<= (str.len var16H) 1))
(assert (<= (str.len var16I) 1))
(assert (<= (str.len var16J) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= (str.++ preG (str.++ stem16 sufG)) (str.++ unch116G (str.++ ch16G unch216G))))
(assert (= (str.++ preH (str.++ stem16 sufH)) (str.++ unch116H (str.++ ch16H unch216H))))
(assert (= (str.++ preI (str.++ stem16 sufI)) (str.++ unch116I (str.++ ch16I unch216I))))
(assert (= (str.++ preJ (str.++ stem16 sufJ)) (str.++ unch116J (str.++ ch16J unch216J))))
(assert (= "bi3" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bo3am" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "boleOi" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= "bo3i" (str.++ unch116D (str.++ var16D unch216D))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (= (ite (= ch16G var16G) 0 1) sc16G))
(assert (= (ite (= ch16H var16H) 0 1) sc16H))
(assert (= (ite (= ch16I var16I) 0 1) sc16I))
(assert (= (ite (= ch16J var16J) 0 1) sc16J))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= sc16G 1))
(assert (<= sc16H 1))
(assert (<= sc16I 1))
(assert (<= sc16J 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (<= (str.len var17G) 1))
(assert (<= (str.len var17H) 1))
(assert (<= (str.len var17I) 1))
(assert (<= (str.len var17J) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= (str.++ preG (str.++ stem17 sufG)) (str.++ unch117G (str.++ ch17G unch217G))))
(assert (= (str.++ preH (str.++ stem17 sufH)) (str.++ unch117H (str.++ ch17H unch217H))))
(assert (= (str.++ preI (str.++ stem17 sufI)) (str.++ unch117I (str.++ ch17I unch217I))))
(assert (= (str.++ preJ (str.++ stem17 sufJ)) (str.++ unch117J (str.++ ch17J unch217J))))
(assert (= "riw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "rovam" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "rovoOi" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= "roOi" (str.++ unch117D (str.++ var17D unch217D))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (= (ite (= ch17G var17G) 0 1) sc17G))
(assert (= (ite (= ch17H var17H) 0 1) sc17H))
(assert (= (ite (= ch17I var17I) 0 1) sc17I))
(assert (= (ite (= ch17J var17J) 0 1) sc17J))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= sc17G 1))
(assert (<= sc17H 1))
(assert (<= sc17I 1))
(assert (<= sc17J 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (<= (str.len var18G) 1))
(assert (<= (str.len var18H) 1))
(assert (<= (str.len var18I) 1))
(assert (<= (str.len var18J) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= (str.++ preG (str.++ stem18 sufG)) (str.++ unch118G (str.++ ch18G unch218G))))
(assert (= (str.++ preH (str.++ stem18 sufH)) (str.++ unch118H (str.++ ch18H unch218H))))
(assert (= (str.++ preI (str.++ stem18 sufI)) (str.++ unch118I (str.++ ch18I unch218I))))
(assert (= (str.++ preJ (str.++ stem18 sufJ)) (str.++ unch118J (str.++ ch18J unch218J))))
(assert (= "stiw" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "stolam" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "stoloOi" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= "sto3i" (str.++ unch118D (str.++ var18D unch218D))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (= (ite (= ch18G var18G) 0 1) sc18G))
(assert (= (ite (= ch18H var18H) 0 1) sc18H))
(assert (= (ite (= ch18I var18I) 0 1) sc18I))
(assert (= (ite (= ch18J var18J) 0 1) sc18J))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= sc18G 1))
(assert (<= sc18H 1))
(assert (<= sc18I 1))
(assert (<= sc18J 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (<= (str.len var19G) 1))
(assert (<= (str.len var19H) 1))
(assert (<= (str.len var19I) 1))
(assert (<= (str.len var19J) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= (str.++ preG (str.++ stem19 sufG)) (str.++ unch119G (str.++ ch19G unch219G))))
(assert (= (str.++ preH (str.++ stem19 sufH)) (str.++ unch119H (str.++ ch19H unch219H))))
(assert (= (str.++ preI (str.++ stem19 sufI)) (str.++ unch119I (str.++ ch19I unch219I))))
(assert (= (str.++ preJ (str.++ stem19 sufJ)) (str.++ unch119J (str.++ ch19J unch219J))))
(assert (= "4id" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "4idam" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "4idoOi" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= "4idoOi" (str.++ unch119E (str.++ var19E unch219E))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (= (ite (= ch19G var19G) 0 1) sc19G))
(assert (= (ite (= ch19H var19H) 0 1) sc19H))
(assert (= (ite (= ch19I var19I) 0 1) sc19I))
(assert (= (ite (= ch19J var19J) 0 1) sc19J))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= sc19G 1))
(assert (<= sc19H 1))
(assert (<= sc19I 1))
(assert (<= sc19J 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (<= (str.len var20G) 1))
(assert (<= (str.len var20H) 1))
(assert (<= (str.len var20I) 1))
(assert (<= (str.len var20J) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= (str.++ preG (str.++ stem20 sufG)) (str.++ unch120G (str.++ ch20G unch220G))))
(assert (= (str.++ preH (str.++ stem20 sufH)) (str.++ unch120H (str.++ ch20H unch220H))))
(assert (= (str.++ preI (str.++ stem20 sufI)) (str.++ unch120I (str.++ ch20I unch220I))))
(assert (= (str.++ preJ (str.++ stem20 sufJ)) (str.++ unch120J (str.++ ch20J unch220J))))
(assert (= "3it" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "3otam" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "3otoOi" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= "3oZi" (str.++ unch120D (str.++ var20D unch220D))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (= (ite (= ch20G var20G) 0 1) sc20G))
(assert (= (ite (= ch20H var20H) 0 1) sc20H))
(assert (= (ite (= ch20I var20I) 0 1) sc20I))
(assert (= (ite (= ch20J var20J) 0 1) sc20J))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= sc20G 1))
(assert (<= sc20H 1))
(assert (<= sc20I 1))
(assert (<= sc20J 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (<= (str.len var21G) 1))
(assert (<= (str.len var21H) 1))
(assert (<= (str.len var21I) 1))
(assert (<= (str.len var21J) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= (str.++ preG (str.++ stem21 sufG)) (str.++ unch121G (str.++ ch21G unch221G))))
(assert (= (str.++ preH (str.++ stem21 sufH)) (str.++ unch121H (str.++ ch21H unch221H))))
(assert (= (str.++ preI (str.++ stem21 sufI)) (str.++ unch121I (str.++ ch21I unch221I))))
(assert (= (str.++ preJ (str.++ stem21 sufJ)) (str.++ unch121J (str.++ ch21J unch221J))))
(assert (= "mist" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "mostam" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "mostoOi" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= "mosZi" (str.++ unch121D (str.++ var21D unch221D))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (= (ite (= ch21G var21G) 0 1) sc21G))
(assert (= (ite (= ch21H var21H) 0 1) sc21H))
(assert (= (ite (= ch21I var21I) 0 1) sc21I))
(assert (= (ite (= ch21J var21J) 0 1) sc21J))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= sc21G 1))
(assert (<= sc21H 1))
(assert (<= sc21I 1))
(assert (<= sc21J 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (<= (str.len var22G) 1))
(assert (<= (str.len var22H) 1))
(assert (<= (str.len var22I) 1))
(assert (<= (str.len var22J) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= (str.++ preG (str.++ stem22 sufG)) (str.++ unch122G (str.++ ch22G unch222G))))
(assert (= (str.++ preH (str.++ stem22 sufH)) (str.++ unch122H (str.++ ch22H unch222H))))
(assert (= (str.++ preI (str.++ stem22 sufI)) (str.++ unch122I (str.++ ch22I unch222I))))
(assert (= (str.++ preJ (str.++ stem22 sufJ)) (str.++ unch122J (str.++ ch22J unch222J))))
(assert (= "veEir" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "veEoram" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "veEoroOi" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= "veEo9i" (str.++ unch122D (str.++ var22D unch222D))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (= (ite (= ch22G var22G) 0 1) sc22G))
(assert (= (ite (= ch22H var22H) 0 1) sc22H))
(assert (= (ite (= ch22I var22I) 0 1) sc22I))
(assert (= (ite (= ch22J var22J) 0 1) sc22J))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= sc22G 1))
(assert (<= sc22H 1))
(assert (<= sc22I 1))
(assert (<= sc22J 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (<= (str.len var23G) 1))
(assert (<= (str.len var23H) 1))
(assert (<= (str.len var23I) 1))
(assert (<= (str.len var23J) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= (str.++ preG (str.++ stem23 sufG)) (str.++ unch123G (str.++ ch23G unch223G))))
(assert (= (str.++ preH (str.++ stem23 sufH)) (str.++ unch123H (str.++ ch23H unch223H))))
(assert (= (str.++ preI (str.++ stem23 sufI)) (str.++ unch123I (str.++ ch23I unch223I))))
(assert (= (str.++ preJ (str.++ stem23 sufJ)) (str.++ unch123J (str.++ ch23J unch223J))))
(assert (= "Zilo" (str.++ unch123F (str.++ var23F unch223F))))
(assert (= "Zila" (str.++ unch123G (str.++ var23G unch223G))))
(assert (= "Zilu" (str.++ unch123H (str.++ var23H unch223H))))
(assert (= "Zi3i" (str.++ unch123I (str.++ var23I unch223I))))
(assert (= "Ziw" (str.++ unch123J (str.++ var23J unch223J))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (= (ite (= ch23G var23G) 0 1) sc23G))
(assert (= (ite (= ch23H var23H) 0 1) sc23H))
(assert (= (ite (= ch23I var23I) 0 1) sc23I))
(assert (= (ite (= ch23J var23J) 0 1) sc23J))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= sc23G 1))
(assert (<= sc23H 1))
(assert (<= sc23I 1))
(assert (<= sc23J 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (<= (str.len var24G) 1))
(assert (<= (str.len var24H) 1))
(assert (<= (str.len var24I) 1))
(assert (<= (str.len var24J) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= (str.++ preG (str.++ stem24 sufG)) (str.++ unch124G (str.++ ch24G unch224G))))
(assert (= (str.++ preH (str.++ stem24 sufH)) (str.++ unch124H (str.++ ch24H unch224H))))
(assert (= (str.++ preI (str.++ stem24 sufI)) (str.++ unch124I (str.++ ch24I unch224I))))
(assert (= (str.++ preJ (str.++ stem24 sufJ)) (str.++ unch124J (str.++ ch24J unch224J))))
(assert (= "koleso" (str.++ unch124F (str.++ var24F unch224F))))
(assert (= "kolesa" (str.++ unch124G (str.++ var24G unch224G))))
(assert (= "kolesu" (str.++ unch124H (str.++ var24H unch224H))))
(assert (= "kole6i" (str.++ unch124I (str.++ var24I unch224I))))
(assert (= "ko3is" (str.++ unch124J (str.++ var24J unch224J))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (= (ite (= ch24G var24G) 0 1) sc24G))
(assert (= (ite (= ch24H var24H) 0 1) sc24H))
(assert (= (ite (= ch24I var24I) 0 1) sc24I))
(assert (= (ite (= ch24J var24J) 0 1) sc24J))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= sc24G 1))
(assert (<= sc24H 1))
(assert (<= sc24I 1))
(assert (<= sc24J 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (<= (str.len var25G) 1))
(assert (<= (str.len var25H) 1))
(assert (<= (str.len var25I) 1))
(assert (<= (str.len var25J) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= (str.++ preG (str.++ stem25 sufG)) (str.++ unch125G (str.++ ch25G unch225G))))
(assert (= (str.++ preH (str.++ stem25 sufH)) (str.++ unch125H (str.++ ch25H unch225H))))
(assert (= (str.++ preI (str.++ stem25 sufI)) (str.++ unch125I (str.++ ch25I unch225I))))
(assert (= (str.++ preJ (str.++ stem25 sufJ)) (str.++ unch125J (str.++ ch25J unch225J))))
(assert (= "ozero" (str.++ unch125F (str.++ var25F unch225F))))
(assert (= "ozera" (str.++ unch125G (str.++ var25G unch225G))))
(assert (= "ozeru" (str.++ unch125H (str.++ var25H unch225H))))
(assert (= "oze9i" (str.++ unch125I (str.++ var25I unch225I))))
(assert (= "o1ir" (str.++ unch125J (str.++ var25J unch225J))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (= (ite (= ch25G var25G) 0 1) sc25G))
(assert (= (ite (= ch25H var25H) 0 1) sc25H))
(assert (= (ite (= ch25I var25I) 0 1) sc25I))
(assert (= (ite (= ch25J var25J) 0 1) sc25J))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= sc25G 1))
(assert (<= sc25H 1))
(assert (<= sc25I 1))
(assert (<= sc25J 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (<= (str.len var26G) 1))
(assert (<= (str.len var26H) 1))
(assert (<= (str.len var26I) 1))
(assert (<= (str.len var26J) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= (str.++ preG (str.++ stem26 sufG)) (str.++ unch126G (str.++ ch26G unch226G))))
(assert (= (str.++ preH (str.++ stem26 sufH)) (str.++ unch126H (str.++ ch26H unch226H))))
(assert (= (str.++ preI (str.++ stem26 sufI)) (str.++ unch126I (str.++ ch26I unch226I))))
(assert (= (str.++ preJ (str.++ stem26 sufJ)) (str.++ unch126J (str.++ ch26J unch226J))))
(assert (= "selo" (str.++ unch126F (str.++ var26F unch226F))))
(assert (= "sela" (str.++ unch126G (str.++ var26G unch226G))))
(assert (= "selu" (str.++ unch126H (str.++ var26H unch226H))))
(assert (= "se3i" (str.++ unch126I (str.++ var26I unch226I))))
(assert (= "6iw" (str.++ unch126J (str.++ var26J unch226J))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (= (ite (= ch26G var26G) 0 1) sc26G))
(assert (= (ite (= ch26H var26H) 0 1) sc26H))
(assert (= (ite (= ch26I var26I) 0 1) sc26I))
(assert (= (ite (= ch26J var26J) 0 1) sc26J))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= sc26G 1))
(assert (<= sc26H 1))
(assert (<= sc26I 1))
(assert (<= sc26J 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (<= (str.len var27G) 1))
(assert (<= (str.len var27H) 1))
(assert (<= (str.len var27I) 1))
(assert (<= (str.len var27J) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= (str.++ preG (str.++ stem27 sufG)) (str.++ unch127G (str.++ ch27G unch227G))))
(assert (= (str.++ preH (str.++ stem27 sufH)) (str.++ unch127H (str.++ ch27H unch227H))))
(assert (= (str.++ preI (str.++ stem27 sufI)) (str.++ unch127I (str.++ ch27I unch227I))))
(assert (= (str.++ preJ (str.++ stem27 sufJ)) (str.++ unch127J (str.++ ch27J unch227J))))
(assert (= "pole" (str.++ unch127F (str.++ var27F unch227F))))
(assert (= "po3a" (str.++ unch127G (str.++ var27G unch227G))))
(assert (= "po3u" (str.++ unch127H (str.++ var27H unch227H))))
(assert (= "po3i" (str.++ unch127I (str.++ var27I unch227I))))
(assert (= "pi3" (str.++ unch127J (str.++ var27J unch227J))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (= (ite (= ch27G var27G) 0 1) sc27G))
(assert (= (ite (= ch27H var27H) 0 1) sc27H))
(assert (= (ite (= ch27I var27I) 0 1) sc27I))
(assert (= (ite (= ch27J var27J) 0 1) sc27J))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= sc27G 1))
(assert (<= sc27H 1))
(assert (<= sc27I 1))
(assert (<= sc27J 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (<= (str.len var28G) 1))
(assert (<= (str.len var28H) 1))
(assert (<= (str.len var28I) 1))
(assert (<= (str.len var28J) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= (str.++ preG (str.++ stem28 sufG)) (str.++ unch128G (str.++ ch28G unch228G))))
(assert (= (str.++ preH (str.++ stem28 sufH)) (str.++ unch128H (str.++ ch28H unch228H))))
(assert (= (str.++ preI (str.++ stem28 sufI)) (str.++ unch128I (str.++ ch28I unch228I))))
(assert (= (str.++ preJ (str.++ stem28 sufJ)) (str.++ unch128J (str.++ ch28J unch228J))))
(assert (= "slovo" (str.++ unch128F (str.++ var28F unch228F))))
(assert (= "slova" (str.++ unch128G (str.++ var28G unch228G))))
(assert (= "slovu" (str.++ unch128H (str.++ var28H unch228H))))
(assert (= "sloOi" (str.++ unch128I (str.++ var28I unch228I))))
(assert (= "sliw" (str.++ unch128J (str.++ var28J unch228J))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (= (ite (= ch28G var28G) 0 1) sc28G))
(assert (= (ite (= ch28H var28H) 0 1) sc28H))
(assert (= (ite (= ch28I var28I) 0 1) sc28I))
(assert (= (ite (= ch28J var28J) 0 1) sc28J))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= sc28G 1))
(assert (<= sc28H 1))
(assert (<= sc28I 1))
(assert (<= sc28J 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (<= (str.len var29G) 1))
(assert (<= (str.len var29H) 1))
(assert (<= (str.len var29I) 1))
(assert (<= (str.len var29J) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= (str.++ preG (str.++ stem29 sufG)) (str.++ unch129G (str.++ ch29G unch229G))))
(assert (= (str.++ preH (str.++ stem29 sufH)) (str.++ unch129H (str.++ ch29H unch229H))))
(assert (= (str.++ preI (str.++ stem29 sufI)) (str.++ unch129I (str.++ ch29I unch229I))))
(assert (= (str.++ preJ (str.++ stem29 sufJ)) (str.++ unch129J (str.++ ch29J unch229J))))
(assert (= "more" (str.++ unch129F (str.++ var29F unch229F))))
(assert (= "mo9a" (str.++ unch129G (str.++ var29G unch229G))))
(assert (= "mo9u" (str.++ unch129H (str.++ var29H unch229H))))
(assert (= "mo9i" (str.++ unch129I (str.++ var29I unch229I))))
(assert (= "mi9" (str.++ unch129J (str.++ var29J unch229J))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (= (ite (= ch29G var29G) 0 1) sc29G))
(assert (= (ite (= ch29H var29H) 0 1) sc29H))
(assert (= (ite (= ch29I var29I) 0 1) sc29I))
(assert (= (ite (= ch29J var29J) 0 1) sc29J))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= sc29G 1))
(assert (<= sc29H 1))
(assert (<= sc29I 1))
(assert (<= sc29J 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      sc0I
      sc0J
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      sc1I
      sc1J
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      sc2I
      sc2J
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      sc3I
      sc3J
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      sc4I
      sc4J
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      sc5I
      sc5J
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H
      sc6I
      sc6J
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      sc7G
      sc7H
      sc7I
      sc7J
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      sc8G
      sc8H
      sc8I
      sc8J
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      sc9G
      sc9H
      sc9I
      sc9J
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      sc10G
      sc10H
      sc10I
      sc10J
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      sc11G
      sc11H
      sc11I
      sc11J
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      sc12G
      sc12H
      sc12I
      sc12J
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      sc13G
      sc13H
      sc13I
      sc13J
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      sc14G
      sc14H
      sc14I
      sc14J
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      sc15G
      sc15H
      sc15I
      sc15J
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      sc16G
      sc16H
      sc16I
      sc16J
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      sc17G
      sc17H
      sc17I
      sc17J
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      sc18G
      sc18H
      sc18I
      sc18J
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      sc19G
      sc19H
      sc19I
      sc19J
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      sc20G
      sc20H
      sc20I
      sc20J
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      sc21G
      sc21H
      sc21I
      sc21J
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      sc22G
      sc22H
      sc22I
      sc22J
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      sc23G
      sc23H
      sc23I
      sc23J
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      sc24G
      sc24H
      sc24I
      sc24J
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      sc25G
      sc25H
      sc25I
      sc25J
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      sc26G
      sc26H
      sc26I
      sc26J
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      sc27G
      sc27H
      sc27I
      sc27J
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      sc28G
      sc28H
      sc28I
      sc28J
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      sc29G
      sc29H
      sc29I
      sc29J)
   4))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun var0I () String)
(declare-fun var0J () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun unch20I () String)
(declare-fun ch0I () String)
(declare-fun unch10I () String)
(declare-fun sufI () String)
(declare-fun preI () String)
(declare-fun unch20J () String)
(declare-fun ch0J () String)
(declare-fun unch10J () String)
(declare-fun sufJ () String)
(declare-fun preJ () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun sc0I () Int)
(declare-fun sc0J () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun var1I () String)
(declare-fun var1J () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun unch21I () String)
(declare-fun ch1I () String)
(declare-fun unch11I () String)
(declare-fun unch21J () String)
(declare-fun ch1J () String)
(declare-fun unch11J () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun sc1I () Int)
(declare-fun sc1J () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun var2I () String)
(declare-fun var2J () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun unch22I () String)
(declare-fun ch2I () String)
(declare-fun unch12I () String)
(declare-fun unch22J () String)
(declare-fun ch2J () String)
(declare-fun unch12J () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun sc2I () Int)
(declare-fun sc2J () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun var3I () String)
(declare-fun var3J () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun unch23I () String)
(declare-fun ch3I () String)
(declare-fun unch13I () String)
(declare-fun unch23J () String)
(declare-fun ch3J () String)
(declare-fun unch13J () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun sc3I () Int)
(declare-fun sc3J () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun var4I () String)
(declare-fun var4J () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun unch24I () String)
(declare-fun ch4I () String)
(declare-fun unch14I () String)
(declare-fun unch24J () String)
(declare-fun ch4J () String)
(declare-fun unch14J () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun sc4I () Int)
(declare-fun sc4J () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun var5I () String)
(declare-fun var5J () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun unch25I () String)
(declare-fun ch5I () String)
(declare-fun unch15I () String)
(declare-fun unch25J () String)
(declare-fun ch5J () String)
(declare-fun unch15J () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun sc5I () Int)
(declare-fun sc5J () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun var6I () String)
(declare-fun var6J () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun unch26I () String)
(declare-fun ch6I () String)
(declare-fun unch16I () String)
(declare-fun unch26J () String)
(declare-fun ch6J () String)
(declare-fun unch16J () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(declare-fun sc6I () Int)
(declare-fun sc6J () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun var7G () String)
(declare-fun var7H () String)
(declare-fun var7I () String)
(declare-fun var7J () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun unch27G () String)
(declare-fun ch7G () String)
(declare-fun unch17G () String)
(declare-fun unch27H () String)
(declare-fun ch7H () String)
(declare-fun unch17H () String)
(declare-fun unch27I () String)
(declare-fun ch7I () String)
(declare-fun unch17I () String)
(declare-fun unch27J () String)
(declare-fun ch7J () String)
(declare-fun unch17J () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun sc7G () Int)
(declare-fun sc7H () Int)
(declare-fun sc7I () Int)
(declare-fun sc7J () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun var8G () String)
(declare-fun var8H () String)
(declare-fun var8I () String)
(declare-fun var8J () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun unch28G () String)
(declare-fun ch8G () String)
(declare-fun unch18G () String)
(declare-fun unch28H () String)
(declare-fun ch8H () String)
(declare-fun unch18H () String)
(declare-fun unch28I () String)
(declare-fun ch8I () String)
(declare-fun unch18I () String)
(declare-fun unch28J () String)
(declare-fun ch8J () String)
(declare-fun unch18J () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun sc8G () Int)
(declare-fun sc8H () Int)
(declare-fun sc8I () Int)
(declare-fun sc8J () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun var9G () String)
(declare-fun var9H () String)
(declare-fun var9I () String)
(declare-fun var9J () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun unch29G () String)
(declare-fun ch9G () String)
(declare-fun unch19G () String)
(declare-fun unch29H () String)
(declare-fun ch9H () String)
(declare-fun unch19H () String)
(declare-fun unch29I () String)
(declare-fun ch9I () String)
(declare-fun unch19I () String)
(declare-fun unch29J () String)
(declare-fun ch9J () String)
(declare-fun unch19J () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun sc9G () Int)
(declare-fun sc9H () Int)
(declare-fun sc9I () Int)
(declare-fun sc9J () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun var10G () String)
(declare-fun var10H () String)
(declare-fun var10I () String)
(declare-fun var10J () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun unch210G () String)
(declare-fun ch10G () String)
(declare-fun unch110G () String)
(declare-fun unch210H () String)
(declare-fun ch10H () String)
(declare-fun unch110H () String)
(declare-fun unch210I () String)
(declare-fun ch10I () String)
(declare-fun unch110I () String)
(declare-fun unch210J () String)
(declare-fun ch10J () String)
(declare-fun unch110J () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun sc10G () Int)
(declare-fun sc10H () Int)
(declare-fun sc10I () Int)
(declare-fun sc10J () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun var11G () String)
(declare-fun var11H () String)
(declare-fun var11I () String)
(declare-fun var11J () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun unch211G () String)
(declare-fun ch11G () String)
(declare-fun unch111G () String)
(declare-fun unch211H () String)
(declare-fun ch11H () String)
(declare-fun unch111H () String)
(declare-fun unch211I () String)
(declare-fun ch11I () String)
(declare-fun unch111I () String)
(declare-fun unch211J () String)
(declare-fun ch11J () String)
(declare-fun unch111J () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun sc11G () Int)
(declare-fun sc11H () Int)
(declare-fun sc11I () Int)
(declare-fun sc11J () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun var12G () String)
(declare-fun var12H () String)
(declare-fun var12I () String)
(declare-fun var12J () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun unch212G () String)
(declare-fun ch12G () String)
(declare-fun unch112G () String)
(declare-fun unch212H () String)
(declare-fun ch12H () String)
(declare-fun unch112H () String)
(declare-fun unch212I () String)
(declare-fun ch12I () String)
(declare-fun unch112I () String)
(declare-fun unch212J () String)
(declare-fun ch12J () String)
(declare-fun unch112J () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun sc12G () Int)
(declare-fun sc12H () Int)
(declare-fun sc12I () Int)
(declare-fun sc12J () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun var13G () String)
(declare-fun var13H () String)
(declare-fun var13I () String)
(declare-fun var13J () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun unch213G () String)
(declare-fun ch13G () String)
(declare-fun unch113G () String)
(declare-fun unch213H () String)
(declare-fun ch13H () String)
(declare-fun unch113H () String)
(declare-fun unch213I () String)
(declare-fun ch13I () String)
(declare-fun unch113I () String)
(declare-fun unch213J () String)
(declare-fun ch13J () String)
(declare-fun unch113J () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun sc13G () Int)
(declare-fun sc13H () Int)
(declare-fun sc13I () Int)
(declare-fun sc13J () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun var14G () String)
(declare-fun var14H () String)
(declare-fun var14I () String)
(declare-fun var14J () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun unch214G () String)
(declare-fun ch14G () String)
(declare-fun unch114G () String)
(declare-fun unch214H () String)
(declare-fun ch14H () String)
(declare-fun unch114H () String)
(declare-fun unch214I () String)
(declare-fun ch14I () String)
(declare-fun unch114I () String)
(declare-fun unch214J () String)
(declare-fun ch14J () String)
(declare-fun unch114J () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun sc14G () Int)
(declare-fun sc14H () Int)
(declare-fun sc14I () Int)
(declare-fun sc14J () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun var15G () String)
(declare-fun var15H () String)
(declare-fun var15I () String)
(declare-fun var15J () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun unch215G () String)
(declare-fun ch15G () String)
(declare-fun unch115G () String)
(declare-fun unch215H () String)
(declare-fun ch15H () String)
(declare-fun unch115H () String)
(declare-fun unch215I () String)
(declare-fun ch15I () String)
(declare-fun unch115I () String)
(declare-fun unch215J () String)
(declare-fun ch15J () String)
(declare-fun unch115J () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun sc15G () Int)
(declare-fun sc15H () Int)
(declare-fun sc15I () Int)
(declare-fun sc15J () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun var16G () String)
(declare-fun var16H () String)
(declare-fun var16I () String)
(declare-fun var16J () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun unch216G () String)
(declare-fun ch16G () String)
(declare-fun unch116G () String)
(declare-fun unch216H () String)
(declare-fun ch16H () String)
(declare-fun unch116H () String)
(declare-fun unch216I () String)
(declare-fun ch16I () String)
(declare-fun unch116I () String)
(declare-fun unch216J () String)
(declare-fun ch16J () String)
(declare-fun unch116J () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun sc16G () Int)
(declare-fun sc16H () Int)
(declare-fun sc16I () Int)
(declare-fun sc16J () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun var17G () String)
(declare-fun var17H () String)
(declare-fun var17I () String)
(declare-fun var17J () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun unch217G () String)
(declare-fun ch17G () String)
(declare-fun unch117G () String)
(declare-fun unch217H () String)
(declare-fun ch17H () String)
(declare-fun unch117H () String)
(declare-fun unch217I () String)
(declare-fun ch17I () String)
(declare-fun unch117I () String)
(declare-fun unch217J () String)
(declare-fun ch17J () String)
(declare-fun unch117J () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun sc17G () Int)
(declare-fun sc17H () Int)
(declare-fun sc17I () Int)
(declare-fun sc17J () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun var18G () String)
(declare-fun var18H () String)
(declare-fun var18I () String)
(declare-fun var18J () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun unch218G () String)
(declare-fun ch18G () String)
(declare-fun unch118G () String)
(declare-fun unch218H () String)
(declare-fun ch18H () String)
(declare-fun unch118H () String)
(declare-fun unch218I () String)
(declare-fun ch18I () String)
(declare-fun unch118I () String)
(declare-fun unch218J () String)
(declare-fun ch18J () String)
(declare-fun unch118J () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun sc18G () Int)
(declare-fun sc18H () Int)
(declare-fun sc18I () Int)
(declare-fun sc18J () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun var19G () String)
(declare-fun var19H () String)
(declare-fun var19I () String)
(declare-fun var19J () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun unch219G () String)
(declare-fun ch19G () String)
(declare-fun unch119G () String)
(declare-fun unch219H () String)
(declare-fun ch19H () String)
(declare-fun unch119H () String)
(declare-fun unch219I () String)
(declare-fun ch19I () String)
(declare-fun unch119I () String)
(declare-fun unch219J () String)
(declare-fun ch19J () String)
(declare-fun unch119J () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun sc19G () Int)
(declare-fun sc19H () Int)
(declare-fun sc19I () Int)
(declare-fun sc19J () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun var20G () String)
(declare-fun var20H () String)
(declare-fun var20I () String)
(declare-fun var20J () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun unch220G () String)
(declare-fun ch20G () String)
(declare-fun unch120G () String)
(declare-fun unch220H () String)
(declare-fun ch20H () String)
(declare-fun unch120H () String)
(declare-fun unch220I () String)
(declare-fun ch20I () String)
(declare-fun unch120I () String)
(declare-fun unch220J () String)
(declare-fun ch20J () String)
(declare-fun unch120J () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun sc20G () Int)
(declare-fun sc20H () Int)
(declare-fun sc20I () Int)
(declare-fun sc20J () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun var21G () String)
(declare-fun var21H () String)
(declare-fun var21I () String)
(declare-fun var21J () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun unch221G () String)
(declare-fun ch21G () String)
(declare-fun unch121G () String)
(declare-fun unch221H () String)
(declare-fun ch21H () String)
(declare-fun unch121H () String)
(declare-fun unch221I () String)
(declare-fun ch21I () String)
(declare-fun unch121I () String)
(declare-fun unch221J () String)
(declare-fun ch21J () String)
(declare-fun unch121J () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun sc21G () Int)
(declare-fun sc21H () Int)
(declare-fun sc21I () Int)
(declare-fun sc21J () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun var22G () String)
(declare-fun var22H () String)
(declare-fun var22I () String)
(declare-fun var22J () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun unch222G () String)
(declare-fun ch22G () String)
(declare-fun unch122G () String)
(declare-fun unch222H () String)
(declare-fun ch22H () String)
(declare-fun unch122H () String)
(declare-fun unch222I () String)
(declare-fun ch22I () String)
(declare-fun unch122I () String)
(declare-fun unch222J () String)
(declare-fun ch22J () String)
(declare-fun unch122J () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun sc22G () Int)
(declare-fun sc22H () Int)
(declare-fun sc22I () Int)
(declare-fun sc22J () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun var23G () String)
(declare-fun var23H () String)
(declare-fun var23I () String)
(declare-fun var23J () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun unch223G () String)
(declare-fun ch23G () String)
(declare-fun unch123G () String)
(declare-fun unch223H () String)
(declare-fun ch23H () String)
(declare-fun unch123H () String)
(declare-fun unch223I () String)
(declare-fun ch23I () String)
(declare-fun unch123I () String)
(declare-fun unch223J () String)
(declare-fun ch23J () String)
(declare-fun unch123J () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun sc23G () Int)
(declare-fun sc23H () Int)
(declare-fun sc23I () Int)
(declare-fun sc23J () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun var24G () String)
(declare-fun var24H () String)
(declare-fun var24I () String)
(declare-fun var24J () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun unch224G () String)
(declare-fun ch24G () String)
(declare-fun unch124G () String)
(declare-fun unch224H () String)
(declare-fun ch24H () String)
(declare-fun unch124H () String)
(declare-fun unch224I () String)
(declare-fun ch24I () String)
(declare-fun unch124I () String)
(declare-fun unch224J () String)
(declare-fun ch24J () String)
(declare-fun unch124J () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun sc24G () Int)
(declare-fun sc24H () Int)
(declare-fun sc24I () Int)
(declare-fun sc24J () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun var25G () String)
(declare-fun var25H () String)
(declare-fun var25I () String)
(declare-fun var25J () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun unch225G () String)
(declare-fun ch25G () String)
(declare-fun unch125G () String)
(declare-fun unch225H () String)
(declare-fun ch25H () String)
(declare-fun unch125H () String)
(declare-fun unch225I () String)
(declare-fun ch25I () String)
(declare-fun unch125I () String)
(declare-fun unch225J () String)
(declare-fun ch25J () String)
(declare-fun unch125J () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun sc25G () Int)
(declare-fun sc25H () Int)
(declare-fun sc25I () Int)
(declare-fun sc25J () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun var26G () String)
(declare-fun var26H () String)
(declare-fun var26I () String)
(declare-fun var26J () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun unch226G () String)
(declare-fun ch26G () String)
(declare-fun unch126G () String)
(declare-fun unch226H () String)
(declare-fun ch26H () String)
(declare-fun unch126H () String)
(declare-fun unch226I () String)
(declare-fun ch26I () String)
(declare-fun unch126I () String)
(declare-fun unch226J () String)
(declare-fun ch26J () String)
(declare-fun unch126J () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun sc26G () Int)
(declare-fun sc26H () Int)
(declare-fun sc26I () Int)
(declare-fun sc26J () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun var27G () String)
(declare-fun var27H () String)
(declare-fun var27I () String)
(declare-fun var27J () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun unch227G () String)
(declare-fun ch27G () String)
(declare-fun unch127G () String)
(declare-fun unch227H () String)
(declare-fun ch27H () String)
(declare-fun unch127H () String)
(declare-fun unch227I () String)
(declare-fun ch27I () String)
(declare-fun unch127I () String)
(declare-fun unch227J () String)
(declare-fun ch27J () String)
(declare-fun unch127J () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun sc27G () Int)
(declare-fun sc27H () Int)
(declare-fun sc27I () Int)
(declare-fun sc27J () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun var28G () String)
(declare-fun var28H () String)
(declare-fun var28I () String)
(declare-fun var28J () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun unch228G () String)
(declare-fun ch28G () String)
(declare-fun unch128G () String)
(declare-fun unch228H () String)
(declare-fun ch28H () String)
(declare-fun unch128H () String)
(declare-fun unch228I () String)
(declare-fun ch28I () String)
(declare-fun unch128I () String)
(declare-fun unch228J () String)
(declare-fun ch28J () String)
(declare-fun unch128J () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun sc28G () Int)
(declare-fun sc28H () Int)
(declare-fun sc28I () Int)
(declare-fun sc28J () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun var29G () String)
(declare-fun var29H () String)
(declare-fun var29I () String)
(declare-fun var29J () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun unch229G () String)
(declare-fun ch29G () String)
(declare-fun unch129G () String)
(declare-fun unch229H () String)
(declare-fun ch29H () String)
(declare-fun unch129H () String)
(declare-fun unch229I () String)
(declare-fun ch29I () String)
(declare-fun unch129I () String)
(declare-fun unch229J () String)
(declare-fun ch29J () String)
(declare-fun unch129J () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun sc29G () Int)
(declare-fun sc29H () Int)
(declare-fun sc29I () Int)
(declare-fun sc29J () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (<= (str.len var0I) 1))
(assert (<= (str.len var0J) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= (str.++ preI (str.++ stem0 sufI)) (str.++ unch10I (str.++ ch0I unch20I))))
(assert (= (str.++ preJ (str.++ stem0 sufJ)) (str.++ unch10J (str.++ ch0J unch20J))))
(assert (= "zub" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "zubam" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "zuboOi" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "zuXi" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (= (ite (= ch0I var0I) 0 1) sc0I))
(assert (= (ite (= ch0J var0J) 0 1) sc0J))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= sc0I 1))
(assert (<= sc0J 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (<= (str.len var1I) 1))
(assert (<= (str.len var1J) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= (str.++ preI (str.++ stem1 sufI)) (str.++ unch11I (str.++ ch1I unch21I))))
(assert (= (str.++ preJ (str.++ stem1 sufJ)) (str.++ unch11J (str.++ ch1J unch21J))))
(assert (= "sOit" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "sOitam" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "sOitoOi" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "sOiZi" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (= (ite (= ch1I var1I) 0 1) sc1I))
(assert (= (ite (= ch1J var1J) 0 1) sc1J))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= sc1I 1))
(assert (<= sc1J 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (<= (str.len var2I) 1))
(assert (<= (str.len var2J) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= (str.++ preI (str.++ stem2 sufI)) (str.++ unch12I (str.++ ch2I unch22I))))
(assert (= (str.++ preJ (str.++ stem2 sufJ)) (str.++ unch12J (str.++ ch2J unch22J))))
(assert (= "1aZ" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "1aZam" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "1ateOi" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "1ateOi" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (= (ite (= ch2I var2I) 0 1) sc2I))
(assert (= (ite (= ch2J var2J) 0 1) sc2J))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= sc2I 1))
(assert (<= sc2J 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (<= (str.len var3I) 1))
(assert (<= (str.len var3J) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= (str.++ preI (str.++ stem3 sufI)) (str.++ unch13I (str.++ ch3I unch23I))))
(assert (= (str.++ preJ (str.++ stem3 sufJ)) (str.++ unch13J (str.++ ch3J unch23J))))
(assert (= "ko2i3" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "koBe3am" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "koBeleOi" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "koBe3i" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (= (ite (= ch3I var3I) 0 1) sc3I))
(assert (= (ite (= ch3J var3J) 0 1) sc3J))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= sc3I 1))
(assert (<= sc3J 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (<= (str.len var4I) 1))
(assert (<= (str.len var4J) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= (str.++ preI (str.++ stem4 sufI)) (str.++ unch14I (str.++ ch4I unch24I))))
(assert (= (str.++ preJ (str.++ stem4 sufJ)) (str.++ unch14J (str.++ ch4J unch24J))))
(assert (= "zlo4ij" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "zlo4ijam" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "zlo4ijeOi" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "zlo4ijeOi" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (= (ite (= ch4I var4I) 0 1) sc4I))
(assert (= (ite (= ch4J var4J) 0 1) sc4J))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= sc4I 1))
(assert (<= sc4J 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (<= (str.len var5I) 1))
(assert (<= (str.len var5J) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= (str.++ preI (str.++ stem5 sufI)) (str.++ unch15I (str.++ ch5I unch25I))))
(assert (= (str.++ preJ (str.++ stem5 sufJ)) (str.++ unch15J (str.++ ch5J unch25J))))
(assert (= "5i6a7" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "5i6a7am" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "5i6aPeOi" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "5i6a7i" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (= (ite (= ch5I var5I) 0 1) sc5I))
(assert (= (ite (= ch5J var5J) 0 1) sc5J))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= sc5I 1))
(assert (<= sc5J 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (<= (str.len var6I) 1))
(assert (<= (str.len var6J) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= (str.++ preI (str.++ stem6 sufI)) (str.++ unch16I (str.++ ch6I unch26I))))
(assert (= (str.++ preJ (str.++ stem6 sufJ)) (str.++ unch16J (str.++ ch6J unch26J))))
(assert (= "korovaj" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "korovajam" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "korovajeOi" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "korovaji" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (= (ite (= ch6I var6I) 0 1) sc6I))
(assert (= (ite (= ch6J var6J) 0 1) sc6J))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (<= sc6I 1))
(assert (<= sc6J 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (<= (str.len var7G) 1))
(assert (<= (str.len var7H) 1))
(assert (<= (str.len var7I) 1))
(assert (<= (str.len var7J) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= (str.++ preG (str.++ stem7 sufG)) (str.++ unch17G (str.++ ch7G unch27G))))
(assert (= (str.++ preH (str.++ stem7 sufH)) (str.++ unch17H (str.++ ch7H unch27H))))
(assert (= (str.++ preI (str.++ stem7 sufI)) (str.++ unch17I (str.++ ch7I unch27I))))
(assert (= (str.++ preJ (str.++ stem7 sufJ)) (str.++ unch17J (str.++ ch7J unch27J))))
(assert (= "ka5i8" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "kame8am" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "kameneOi" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= "kame8i" (str.++ unch17D (str.++ var7D unch27D))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (= (ite (= ch7G var7G) 0 1) sc7G))
(assert (= (ite (= ch7H var7H) 0 1) sc7H))
(assert (= (ite (= ch7I var7I) 0 1) sc7I))
(assert (= (ite (= ch7J var7J) 0 1) sc7J))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= sc7G 1))
(assert (<= sc7H 1))
(assert (<= sc7I 1))
(assert (<= sc7J 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (<= (str.len var8G) 1))
(assert (<= (str.len var8H) 1))
(assert (<= (str.len var8I) 1))
(assert (<= (str.len var8J) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= (str.++ preG (str.++ stem8 sufG)) (str.++ unch18G (str.++ ch8G unch28G))))
(assert (= (str.++ preH (str.++ stem8 sufH)) (str.++ unch18H (str.++ ch8H unch28H))))
(assert (= (str.++ preI (str.++ stem8 sufI)) (str.++ unch18I (str.++ ch8I unch28I))))
(assert (= (str.++ preJ (str.++ stem8 sufJ)) (str.++ unch18J (str.++ ch8J unch28J))))
(assert (= "5i4" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "5i4am" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "5ideOi" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= "5i4i" (str.++ unch18D (str.++ var8D unch28D))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (= (ite (= ch8G var8G) 0 1) sc8G))
(assert (= (ite (= ch8H var8H) 0 1) sc8H))
(assert (= (ite (= ch8I var8I) 0 1) sc8I))
(assert (= (ite (= ch8J var8J) 0 1) sc8J))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= sc8G 1))
(assert (<= sc8H 1))
(assert (<= sc8I 1))
(assert (<= sc8J 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (<= (str.len var9G) 1))
(assert (<= (str.len var9H) 1))
(assert (<= (str.len var9I) 1))
(assert (<= (str.len var9J) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= (str.++ preG (str.++ stem9 sufG)) (str.++ unch19G (str.++ ch9G unch29G))))
(assert (= (str.++ preH (str.++ stem9 sufH)) (str.++ unch19H (str.++ ch9H unch29H))))
(assert (= (str.++ preI (str.++ stem9 sufI)) (str.++ unch19I (str.++ ch9I unch29I))))
(assert (= (str.++ preJ (str.++ stem9 sufJ)) (str.++ unch19J (str.++ ch9J unch29J))))
(assert (= "x3iw" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "x3ivam" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "x3ivoOi" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= "x3iOi" (str.++ unch19D (str.++ var9D unch29D))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (= (ite (= ch9G var9G) 0 1) sc9G))
(assert (= (ite (= ch9H var9H) 0 1) sc9H))
(assert (= (ite (= ch9I var9I) 0 1) sc9I))
(assert (= (ite (= ch9J var9J) 0 1) sc9J))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= sc9G 1))
(assert (<= sc9H 1))
(assert (<= sc9I 1))
(assert (<= sc9J 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (<= (str.len var10G) 1))
(assert (<= (str.len var10H) 1))
(assert (<= (str.len var10I) 1))
(assert (<= (str.len var10J) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= (str.++ preG (str.++ stem10 sufG)) (str.++ unch110G (str.++ ch10G unch210G))))
(assert (= (str.++ preH (str.++ stem10 sufH)) (str.++ unch110H (str.++ ch10H unch210H))))
(assert (= (str.++ preI (str.++ stem10 sufI)) (str.++ unch110I (str.++ ch10I unch210I))))
(assert (= (str.++ preJ (str.++ stem10 sufJ)) (str.++ unch110J (str.++ ch10J unch210J))))
(assert (= "holub" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "holubam" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "holuboOi" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= "holuXi" (str.++ unch110D (str.++ var10D unch210D))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (= (ite (= ch10G var10G) 0 1) sc10G))
(assert (= (ite (= ch10H var10H) 0 1) sc10H))
(assert (= (ite (= ch10I var10I) 0 1) sc10I))
(assert (= (ite (= ch10J var10J) 0 1) sc10J))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= sc10G 1))
(assert (<= sc10H 1))
(assert (<= sc10I 1))
(assert (<= sc10J 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (<= (str.len var11G) 1))
(assert (<= (str.len var11H) 1))
(assert (<= (str.len var11I) 1))
(assert (<= (str.len var11J) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= (str.++ preG (str.++ stem11 sufG)) (str.++ unch111G (str.++ ch11G unch211G))))
(assert (= (str.++ preH (str.++ stem11 sufH)) (str.++ unch111H (str.++ ch11H unch211H))))
(assert (= (str.++ preI (str.++ stem11 sufI)) (str.++ unch111I (str.++ ch11I unch211I))))
(assert (= (str.++ preJ (str.++ stem11 sufJ)) (str.++ unch111J (str.++ ch11J unch211J))))
(assert (= "6in" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "6inam" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "6inoOi" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= "6i8i" (str.++ unch111D (str.++ var11D unch211D))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (= (ite (= ch11G var11G) 0 1) sc11G))
(assert (= (ite (= ch11H var11H) 0 1) sc11H))
(assert (= (ite (= ch11I var11I) 0 1) sc11I))
(assert (= (ite (= ch11J var11J) 0 1) sc11J))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= sc11G 1))
(assert (<= sc11H 1))
(assert (<= sc11I 1))
(assert (<= sc11J 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (<= (str.len var12G) 1))
(assert (<= (str.len var12H) 1))
(assert (<= (str.len var12I) 1))
(assert (<= (str.len var12J) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= (str.++ preG (str.++ stem12 sufG)) (str.++ unch112G (str.++ ch12G unch212G))))
(assert (= (str.++ preH (str.++ stem12 sufH)) (str.++ unch112H (str.++ ch12H unch212H))))
(assert (= (str.++ preI (str.++ stem12 sufI)) (str.++ unch112I (str.++ ch12I unch212I))))
(assert (= (str.++ preJ (str.++ stem12 sufJ)) (str.++ unch112J (str.++ ch12J unch212J))))
(assert (= "leXi4" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "lebe4am" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "lebedeOi" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= "lebe4i" (str.++ unch112D (str.++ var12D unch212D))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (= (ite (= ch12G var12G) 0 1) sc12G))
(assert (= (ite (= ch12H var12H) 0 1) sc12H))
(assert (= (ite (= ch12I var12I) 0 1) sc12I))
(assert (= (ite (= ch12J var12J) 0 1) sc12J))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= sc12G 1))
(assert (<= sc12H 1))
(assert (<= sc12I 1))
(assert (<= sc12J 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (<= (str.len var13G) 1))
(assert (<= (str.len var13H) 1))
(assert (<= (str.len var13I) 1))
(assert (<= (str.len var13J) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= (str.++ preG (str.++ stem13 sufG)) (str.++ unch113G (str.++ ch13G unch213G))))
(assert (= (str.++ preH (str.++ stem13 sufH)) (str.++ unch113H (str.++ ch13H unch213H))))
(assert (= (str.++ preI (str.++ stem13 sufI)) (str.++ unch113I (str.++ ch13I unch213I))))
(assert (= (str.++ preJ (str.++ stem13 sufJ)) (str.++ unch113J (str.++ ch13J unch213J))))
(assert (= "su6id" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "su6idam" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "su6idoOi" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= "su6idoOi" (str.++ unch113E (str.++ var13E unch213E))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (= (ite (= ch13G var13G) 0 1) sc13G))
(assert (= (ite (= ch13H var13H) 0 1) sc13H))
(assert (= (ite (= ch13I var13I) 0 1) sc13I))
(assert (= (ite (= ch13J var13J) 0 1) sc13J))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= sc13G 1))
(assert (<= sc13H 1))
(assert (<= sc13I 1))
(assert (<= sc13J 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (<= (str.len var14G) 1))
(assert (<= (str.len var14H) 1))
(assert (<= (str.len var14I) 1))
(assert (<= (str.len var14J) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= (str.++ preG (str.++ stem14 sufG)) (str.++ unch114G (str.++ ch14G unch214G))))
(assert (= (str.++ preH (str.++ stem14 sufH)) (str.++ unch114H (str.++ ch14H unch214H))))
(assert (= (str.++ preI (str.++ stem14 sufI)) (str.++ unch114I (str.++ ch14I unch214I))))
(assert (= (str.++ preJ (str.++ stem14 sufJ)) (str.++ unch114J (str.++ ch14J unch214J))))
(assert (= "EoloOik" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "EoloOikam" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "EoloOikoOi" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= "EoloOikoOi" (str.++ unch114E (str.++ var14E unch214E))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (= (ite (= ch14G var14G) 0 1) sc14G))
(assert (= (ite (= ch14H var14H) 0 1) sc14H))
(assert (= (ite (= ch14I var14I) 0 1) sc14I))
(assert (= (ite (= ch14J var14J) 0 1) sc14J))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= sc14G 1))
(assert (<= sc14H 1))
(assert (<= sc14I 1))
(assert (<= sc14J 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (<= (str.len var15G) 1))
(assert (<= (str.len var15H) 1))
(assert (<= (str.len var15I) 1))
(assert (<= (str.len var15J) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= (str.++ preG (str.++ stem15 sufG)) (str.++ unch115G (str.++ ch15G unch215G))))
(assert (= (str.++ preH (str.++ stem15 sufH)) (str.++ unch115H (str.++ ch15H unch215H))))
(assert (= (str.++ preI (str.++ stem15 sufI)) (str.++ unch115I (str.++ ch15I unch215I))))
(assert (= (str.++ preJ (str.++ stem15 sufJ)) (str.++ unch115J (str.++ ch15J unch215J))))
(assert (= "3id" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "ledam" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "ledoOi" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= "le4i" (str.++ unch115D (str.++ var15D unch215D))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (= (ite (= ch15G var15G) 0 1) sc15G))
(assert (= (ite (= ch15H var15H) 0 1) sc15H))
(assert (= (ite (= ch15I var15I) 0 1) sc15I))
(assert (= (ite (= ch15J var15J) 0 1) sc15J))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= sc15G 1))
(assert (<= sc15H 1))
(assert (<= sc15I 1))
(assert (<= sc15J 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (<= (str.len var16G) 1))
(assert (<= (str.len var16H) 1))
(assert (<= (str.len var16I) 1))
(assert (<= (str.len var16J) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= (str.++ preG (str.++ stem16 sufG)) (str.++ unch116G (str.++ ch16G unch216G))))
(assert (= (str.++ preH (str.++ stem16 sufH)) (str.++ unch116H (str.++ ch16H unch216H))))
(assert (= (str.++ preI (str.++ stem16 sufI)) (str.++ unch116I (str.++ ch16I unch216I))))
(assert (= (str.++ preJ (str.++ stem16 sufJ)) (str.++ unch116J (str.++ ch16J unch216J))))
(assert (= "bi3" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bo3am" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "boleOi" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= "bo3i" (str.++ unch116D (str.++ var16D unch216D))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (= (ite (= ch16G var16G) 0 1) sc16G))
(assert (= (ite (= ch16H var16H) 0 1) sc16H))
(assert (= (ite (= ch16I var16I) 0 1) sc16I))
(assert (= (ite (= ch16J var16J) 0 1) sc16J))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= sc16G 1))
(assert (<= sc16H 1))
(assert (<= sc16I 1))
(assert (<= sc16J 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (<= (str.len var17G) 1))
(assert (<= (str.len var17H) 1))
(assert (<= (str.len var17I) 1))
(assert (<= (str.len var17J) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= (str.++ preG (str.++ stem17 sufG)) (str.++ unch117G (str.++ ch17G unch217G))))
(assert (= (str.++ preH (str.++ stem17 sufH)) (str.++ unch117H (str.++ ch17H unch217H))))
(assert (= (str.++ preI (str.++ stem17 sufI)) (str.++ unch117I (str.++ ch17I unch217I))))
(assert (= (str.++ preJ (str.++ stem17 sufJ)) (str.++ unch117J (str.++ ch17J unch217J))))
(assert (= "riw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "rovam" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "rovoOi" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= "roOi" (str.++ unch117D (str.++ var17D unch217D))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (= (ite (= ch17G var17G) 0 1) sc17G))
(assert (= (ite (= ch17H var17H) 0 1) sc17H))
(assert (= (ite (= ch17I var17I) 0 1) sc17I))
(assert (= (ite (= ch17J var17J) 0 1) sc17J))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= sc17G 1))
(assert (<= sc17H 1))
(assert (<= sc17I 1))
(assert (<= sc17J 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (<= (str.len var18G) 1))
(assert (<= (str.len var18H) 1))
(assert (<= (str.len var18I) 1))
(assert (<= (str.len var18J) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= (str.++ preG (str.++ stem18 sufG)) (str.++ unch118G (str.++ ch18G unch218G))))
(assert (= (str.++ preH (str.++ stem18 sufH)) (str.++ unch118H (str.++ ch18H unch218H))))
(assert (= (str.++ preI (str.++ stem18 sufI)) (str.++ unch118I (str.++ ch18I unch218I))))
(assert (= (str.++ preJ (str.++ stem18 sufJ)) (str.++ unch118J (str.++ ch18J unch218J))))
(assert (= "stiw" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "stolam" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "stoloOi" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= "sto3i" (str.++ unch118D (str.++ var18D unch218D))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (= (ite (= ch18G var18G) 0 1) sc18G))
(assert (= (ite (= ch18H var18H) 0 1) sc18H))
(assert (= (ite (= ch18I var18I) 0 1) sc18I))
(assert (= (ite (= ch18J var18J) 0 1) sc18J))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= sc18G 1))
(assert (<= sc18H 1))
(assert (<= sc18I 1))
(assert (<= sc18J 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (<= (str.len var19G) 1))
(assert (<= (str.len var19H) 1))
(assert (<= (str.len var19I) 1))
(assert (<= (str.len var19J) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= (str.++ preG (str.++ stem19 sufG)) (str.++ unch119G (str.++ ch19G unch219G))))
(assert (= (str.++ preH (str.++ stem19 sufH)) (str.++ unch119H (str.++ ch19H unch219H))))
(assert (= (str.++ preI (str.++ stem19 sufI)) (str.++ unch119I (str.++ ch19I unch219I))))
(assert (= (str.++ preJ (str.++ stem19 sufJ)) (str.++ unch119J (str.++ ch19J unch219J))))
(assert (= "4id" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "4idam" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "4idoOi" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= "4idoOi" (str.++ unch119E (str.++ var19E unch219E))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (= (ite (= ch19G var19G) 0 1) sc19G))
(assert (= (ite (= ch19H var19H) 0 1) sc19H))
(assert (= (ite (= ch19I var19I) 0 1) sc19I))
(assert (= (ite (= ch19J var19J) 0 1) sc19J))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= sc19G 1))
(assert (<= sc19H 1))
(assert (<= sc19I 1))
(assert (<= sc19J 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (<= (str.len var20G) 1))
(assert (<= (str.len var20H) 1))
(assert (<= (str.len var20I) 1))
(assert (<= (str.len var20J) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= (str.++ preG (str.++ stem20 sufG)) (str.++ unch120G (str.++ ch20G unch220G))))
(assert (= (str.++ preH (str.++ stem20 sufH)) (str.++ unch120H (str.++ ch20H unch220H))))
(assert (= (str.++ preI (str.++ stem20 sufI)) (str.++ unch120I (str.++ ch20I unch220I))))
(assert (= (str.++ preJ (str.++ stem20 sufJ)) (str.++ unch120J (str.++ ch20J unch220J))))
(assert (= "3it" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "3otam" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "3otoOi" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= "3oZi" (str.++ unch120D (str.++ var20D unch220D))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (= (ite (= ch20G var20G) 0 1) sc20G))
(assert (= (ite (= ch20H var20H) 0 1) sc20H))
(assert (= (ite (= ch20I var20I) 0 1) sc20I))
(assert (= (ite (= ch20J var20J) 0 1) sc20J))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= sc20G 1))
(assert (<= sc20H 1))
(assert (<= sc20I 1))
(assert (<= sc20J 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (<= (str.len var21G) 1))
(assert (<= (str.len var21H) 1))
(assert (<= (str.len var21I) 1))
(assert (<= (str.len var21J) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= (str.++ preG (str.++ stem21 sufG)) (str.++ unch121G (str.++ ch21G unch221G))))
(assert (= (str.++ preH (str.++ stem21 sufH)) (str.++ unch121H (str.++ ch21H unch221H))))
(assert (= (str.++ preI (str.++ stem21 sufI)) (str.++ unch121I (str.++ ch21I unch221I))))
(assert (= (str.++ preJ (str.++ stem21 sufJ)) (str.++ unch121J (str.++ ch21J unch221J))))
(assert (= "mist" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "mostam" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "mostoOi" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= "mosZi" (str.++ unch121D (str.++ var21D unch221D))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (= (ite (= ch21G var21G) 0 1) sc21G))
(assert (= (ite (= ch21H var21H) 0 1) sc21H))
(assert (= (ite (= ch21I var21I) 0 1) sc21I))
(assert (= (ite (= ch21J var21J) 0 1) sc21J))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= sc21G 1))
(assert (<= sc21H 1))
(assert (<= sc21I 1))
(assert (<= sc21J 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (<= (str.len var22G) 1))
(assert (<= (str.len var22H) 1))
(assert (<= (str.len var22I) 1))
(assert (<= (str.len var22J) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= (str.++ preG (str.++ stem22 sufG)) (str.++ unch122G (str.++ ch22G unch222G))))
(assert (= (str.++ preH (str.++ stem22 sufH)) (str.++ unch122H (str.++ ch22H unch222H))))
(assert (= (str.++ preI (str.++ stem22 sufI)) (str.++ unch122I (str.++ ch22I unch222I))))
(assert (= (str.++ preJ (str.++ stem22 sufJ)) (str.++ unch122J (str.++ ch22J unch222J))))
(assert (= "veEir" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "veEoram" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "veEoroOi" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= "veEo9i" (str.++ unch122D (str.++ var22D unch222D))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (= (ite (= ch22G var22G) 0 1) sc22G))
(assert (= (ite (= ch22H var22H) 0 1) sc22H))
(assert (= (ite (= ch22I var22I) 0 1) sc22I))
(assert (= (ite (= ch22J var22J) 0 1) sc22J))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= sc22G 1))
(assert (<= sc22H 1))
(assert (<= sc22I 1))
(assert (<= sc22J 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (<= (str.len var23G) 1))
(assert (<= (str.len var23H) 1))
(assert (<= (str.len var23I) 1))
(assert (<= (str.len var23J) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= (str.++ preG (str.++ stem23 sufG)) (str.++ unch123G (str.++ ch23G unch223G))))
(assert (= (str.++ preH (str.++ stem23 sufH)) (str.++ unch123H (str.++ ch23H unch223H))))
(assert (= (str.++ preI (str.++ stem23 sufI)) (str.++ unch123I (str.++ ch23I unch223I))))
(assert (= (str.++ preJ (str.++ stem23 sufJ)) (str.++ unch123J (str.++ ch23J unch223J))))
(assert (= "Zilo" (str.++ unch123F (str.++ var23F unch223F))))
(assert (= "Zila" (str.++ unch123G (str.++ var23G unch223G))))
(assert (= "Zilu" (str.++ unch123H (str.++ var23H unch223H))))
(assert (= "Zi3i" (str.++ unch123I (str.++ var23I unch223I))))
(assert (= "Ziw" (str.++ unch123J (str.++ var23J unch223J))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (= (ite (= ch23G var23G) 0 1) sc23G))
(assert (= (ite (= ch23H var23H) 0 1) sc23H))
(assert (= (ite (= ch23I var23I) 0 1) sc23I))
(assert (= (ite (= ch23J var23J) 0 1) sc23J))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= sc23G 1))
(assert (<= sc23H 1))
(assert (<= sc23I 1))
(assert (<= sc23J 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (<= (str.len var24G) 1))
(assert (<= (str.len var24H) 1))
(assert (<= (str.len var24I) 1))
(assert (<= (str.len var24J) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= (str.++ preG (str.++ stem24 sufG)) (str.++ unch124G (str.++ ch24G unch224G))))
(assert (= (str.++ preH (str.++ stem24 sufH)) (str.++ unch124H (str.++ ch24H unch224H))))
(assert (= (str.++ preI (str.++ stem24 sufI)) (str.++ unch124I (str.++ ch24I unch224I))))
(assert (= (str.++ preJ (str.++ stem24 sufJ)) (str.++ unch124J (str.++ ch24J unch224J))))
(assert (= "koleso" (str.++ unch124F (str.++ var24F unch224F))))
(assert (= "kolesa" (str.++ unch124G (str.++ var24G unch224G))))
(assert (= "kolesu" (str.++ unch124H (str.++ var24H unch224H))))
(assert (= "kole6i" (str.++ unch124I (str.++ var24I unch224I))))
(assert (= "ko3is" (str.++ unch124J (str.++ var24J unch224J))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (= (ite (= ch24G var24G) 0 1) sc24G))
(assert (= (ite (= ch24H var24H) 0 1) sc24H))
(assert (= (ite (= ch24I var24I) 0 1) sc24I))
(assert (= (ite (= ch24J var24J) 0 1) sc24J))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= sc24G 1))
(assert (<= sc24H 1))
(assert (<= sc24I 1))
(assert (<= sc24J 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (<= (str.len var25G) 1))
(assert (<= (str.len var25H) 1))
(assert (<= (str.len var25I) 1))
(assert (<= (str.len var25J) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= (str.++ preG (str.++ stem25 sufG)) (str.++ unch125G (str.++ ch25G unch225G))))
(assert (= (str.++ preH (str.++ stem25 sufH)) (str.++ unch125H (str.++ ch25H unch225H))))
(assert (= (str.++ preI (str.++ stem25 sufI)) (str.++ unch125I (str.++ ch25I unch225I))))
(assert (= (str.++ preJ (str.++ stem25 sufJ)) (str.++ unch125J (str.++ ch25J unch225J))))
(assert (= "ozero" (str.++ unch125F (str.++ var25F unch225F))))
(assert (= "ozera" (str.++ unch125G (str.++ var25G unch225G))))
(assert (= "ozeru" (str.++ unch125H (str.++ var25H unch225H))))
(assert (= "oze9i" (str.++ unch125I (str.++ var25I unch225I))))
(assert (= "o1ir" (str.++ unch125J (str.++ var25J unch225J))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (= (ite (= ch25G var25G) 0 1) sc25G))
(assert (= (ite (= ch25H var25H) 0 1) sc25H))
(assert (= (ite (= ch25I var25I) 0 1) sc25I))
(assert (= (ite (= ch25J var25J) 0 1) sc25J))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= sc25G 1))
(assert (<= sc25H 1))
(assert (<= sc25I 1))
(assert (<= sc25J 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (<= (str.len var26G) 1))
(assert (<= (str.len var26H) 1))
(assert (<= (str.len var26I) 1))
(assert (<= (str.len var26J) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= (str.++ preG (str.++ stem26 sufG)) (str.++ unch126G (str.++ ch26G unch226G))))
(assert (= (str.++ preH (str.++ stem26 sufH)) (str.++ unch126H (str.++ ch26H unch226H))))
(assert (= (str.++ preI (str.++ stem26 sufI)) (str.++ unch126I (str.++ ch26I unch226I))))
(assert (= (str.++ preJ (str.++ stem26 sufJ)) (str.++ unch126J (str.++ ch26J unch226J))))
(assert (= "selo" (str.++ unch126F (str.++ var26F unch226F))))
(assert (= "sela" (str.++ unch126G (str.++ var26G unch226G))))
(assert (= "selu" (str.++ unch126H (str.++ var26H unch226H))))
(assert (= "se3i" (str.++ unch126I (str.++ var26I unch226I))))
(assert (= "6iw" (str.++ unch126J (str.++ var26J unch226J))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (= (ite (= ch26G var26G) 0 1) sc26G))
(assert (= (ite (= ch26H var26H) 0 1) sc26H))
(assert (= (ite (= ch26I var26I) 0 1) sc26I))
(assert (= (ite (= ch26J var26J) 0 1) sc26J))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= sc26G 1))
(assert (<= sc26H 1))
(assert (<= sc26I 1))
(assert (<= sc26J 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (<= (str.len var27G) 1))
(assert (<= (str.len var27H) 1))
(assert (<= (str.len var27I) 1))
(assert (<= (str.len var27J) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= (str.++ preG (str.++ stem27 sufG)) (str.++ unch127G (str.++ ch27G unch227G))))
(assert (= (str.++ preH (str.++ stem27 sufH)) (str.++ unch127H (str.++ ch27H unch227H))))
(assert (= (str.++ preI (str.++ stem27 sufI)) (str.++ unch127I (str.++ ch27I unch227I))))
(assert (= (str.++ preJ (str.++ stem27 sufJ)) (str.++ unch127J (str.++ ch27J unch227J))))
(assert (= "pole" (str.++ unch127F (str.++ var27F unch227F))))
(assert (= "po3a" (str.++ unch127G (str.++ var27G unch227G))))
(assert (= "po3u" (str.++ unch127H (str.++ var27H unch227H))))
(assert (= "po3i" (str.++ unch127I (str.++ var27I unch227I))))
(assert (= "pi3" (str.++ unch127J (str.++ var27J unch227J))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (= (ite (= ch27G var27G) 0 1) sc27G))
(assert (= (ite (= ch27H var27H) 0 1) sc27H))
(assert (= (ite (= ch27I var27I) 0 1) sc27I))
(assert (= (ite (= ch27J var27J) 0 1) sc27J))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= sc27G 1))
(assert (<= sc27H 1))
(assert (<= sc27I 1))
(assert (<= sc27J 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (<= (str.len var28G) 1))
(assert (<= (str.len var28H) 1))
(assert (<= (str.len var28I) 1))
(assert (<= (str.len var28J) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= (str.++ preG (str.++ stem28 sufG)) (str.++ unch128G (str.++ ch28G unch228G))))
(assert (= (str.++ preH (str.++ stem28 sufH)) (str.++ unch128H (str.++ ch28H unch228H))))
(assert (= (str.++ preI (str.++ stem28 sufI)) (str.++ unch128I (str.++ ch28I unch228I))))
(assert (= (str.++ preJ (str.++ stem28 sufJ)) (str.++ unch128J (str.++ ch28J unch228J))))
(assert (= "slovo" (str.++ unch128F (str.++ var28F unch228F))))
(assert (= "slova" (str.++ unch128G (str.++ var28G unch228G))))
(assert (= "slovu" (str.++ unch128H (str.++ var28H unch228H))))
(assert (= "sloOi" (str.++ unch128I (str.++ var28I unch228I))))
(assert (= "sliw" (str.++ unch128J (str.++ var28J unch228J))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (= (ite (= ch28G var28G) 0 1) sc28G))
(assert (= (ite (= ch28H var28H) 0 1) sc28H))
(assert (= (ite (= ch28I var28I) 0 1) sc28I))
(assert (= (ite (= ch28J var28J) 0 1) sc28J))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= sc28G 1))
(assert (<= sc28H 1))
(assert (<= sc28I 1))
(assert (<= sc28J 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (<= (str.len var29G) 1))
(assert (<= (str.len var29H) 1))
(assert (<= (str.len var29I) 1))
(assert (<= (str.len var29J) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= (str.++ preG (str.++ stem29 sufG)) (str.++ unch129G (str.++ ch29G unch229G))))
(assert (= (str.++ preH (str.++ stem29 sufH)) (str.++ unch129H (str.++ ch29H unch229H))))
(assert (= (str.++ preI (str.++ stem29 sufI)) (str.++ unch129I (str.++ ch29I unch229I))))
(assert (= (str.++ preJ (str.++ stem29 sufJ)) (str.++ unch129J (str.++ ch29J unch229J))))
(assert (= "more" (str.++ unch129F (str.++ var29F unch229F))))
(assert (= "mo9a" (str.++ unch129G (str.++ var29G unch229G))))
(assert (= "mo9u" (str.++ unch129H (str.++ var29H unch229H))))
(assert (= "mo9i" (str.++ unch129I (str.++ var29I unch229I))))
(assert (= "mi9" (str.++ unch129J (str.++ var29J unch229J))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (= (ite (= ch29G var29G) 0 1) sc29G))
(assert (= (ite (= ch29H var29H) 0 1) sc29H))
(assert (= (ite (= ch29I var29I) 0 1) sc29I))
(assert (= (ite (= ch29J var29J) 0 1) sc29J))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= sc29G 1))
(assert (<= sc29H 1))
(assert (<= sc29I 1))
(assert (<= sc29J 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      sc0I
      sc0J
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      sc1I
      sc1J
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      sc2I
      sc2J
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      sc3I
      sc3J
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      sc4I
      sc4J
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      sc5I
      sc5J
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H
      sc6I
      sc6J
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      sc7G
      sc7H
      sc7I
      sc7J
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      sc8G
      sc8H
      sc8I
      sc8J
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      sc9G
      sc9H
      sc9I
      sc9J
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      sc10G
      sc10H
      sc10I
      sc10J
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      sc11G
      sc11H
      sc11I
      sc11J
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      sc12G
      sc12H
      sc12I
      sc12J
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      sc13G
      sc13H
      sc13I
      sc13J
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      sc14G
      sc14H
      sc14I
      sc14J
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      sc15G
      sc15H
      sc15I
      sc15J
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      sc16G
      sc16H
      sc16I
      sc16J
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      sc17G
      sc17H
      sc17I
      sc17J
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      sc18G
      sc18H
      sc18I
      sc18J
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      sc19G
      sc19H
      sc19I
      sc19J
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      sc20G
      sc20H
      sc20I
      sc20J
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      sc21G
      sc21H
      sc21I
      sc21J
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      sc22G
      sc22H
      sc22I
      sc22J
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      sc23G
      sc23H
      sc23I
      sc23J
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      sc24G
      sc24H
      sc24I
      sc24J
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      sc25G
      sc25H
      sc25I
      sc25J
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      sc26G
      sc26H
      sc26I
      sc26J
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      sc27G
      sc27H
      sc27I
      sc27J
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      sc28G
      sc28H
      sc28I
      sc28J
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      sc29G
      sc29H
      sc29I
      sc29J)
   5))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun var0I () String)
(declare-fun var0J () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun unch20I () String)
(declare-fun ch0I () String)
(declare-fun unch10I () String)
(declare-fun sufI () String)
(declare-fun preI () String)
(declare-fun unch20J () String)
(declare-fun ch0J () String)
(declare-fun unch10J () String)
(declare-fun sufJ () String)
(declare-fun preJ () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun sc0I () Int)
(declare-fun sc0J () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun var1I () String)
(declare-fun var1J () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun unch21I () String)
(declare-fun ch1I () String)
(declare-fun unch11I () String)
(declare-fun unch21J () String)
(declare-fun ch1J () String)
(declare-fun unch11J () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun sc1I () Int)
(declare-fun sc1J () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun var2I () String)
(declare-fun var2J () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun unch22I () String)
(declare-fun ch2I () String)
(declare-fun unch12I () String)
(declare-fun unch22J () String)
(declare-fun ch2J () String)
(declare-fun unch12J () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun sc2I () Int)
(declare-fun sc2J () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun var3I () String)
(declare-fun var3J () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun unch23I () String)
(declare-fun ch3I () String)
(declare-fun unch13I () String)
(declare-fun unch23J () String)
(declare-fun ch3J () String)
(declare-fun unch13J () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun sc3I () Int)
(declare-fun sc3J () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun var4I () String)
(declare-fun var4J () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun unch24I () String)
(declare-fun ch4I () String)
(declare-fun unch14I () String)
(declare-fun unch24J () String)
(declare-fun ch4J () String)
(declare-fun unch14J () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun sc4I () Int)
(declare-fun sc4J () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun var5I () String)
(declare-fun var5J () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun unch25I () String)
(declare-fun ch5I () String)
(declare-fun unch15I () String)
(declare-fun unch25J () String)
(declare-fun ch5J () String)
(declare-fun unch15J () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun sc5I () Int)
(declare-fun sc5J () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun var6I () String)
(declare-fun var6J () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun unch26I () String)
(declare-fun ch6I () String)
(declare-fun unch16I () String)
(declare-fun unch26J () String)
(declare-fun ch6J () String)
(declare-fun unch16J () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(declare-fun sc6I () Int)
(declare-fun sc6J () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun var7G () String)
(declare-fun var7H () String)
(declare-fun var7I () String)
(declare-fun var7J () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun unch27G () String)
(declare-fun ch7G () String)
(declare-fun unch17G () String)
(declare-fun unch27H () String)
(declare-fun ch7H () String)
(declare-fun unch17H () String)
(declare-fun unch27I () String)
(declare-fun ch7I () String)
(declare-fun unch17I () String)
(declare-fun unch27J () String)
(declare-fun ch7J () String)
(declare-fun unch17J () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun sc7G () Int)
(declare-fun sc7H () Int)
(declare-fun sc7I () Int)
(declare-fun sc7J () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun var8G () String)
(declare-fun var8H () String)
(declare-fun var8I () String)
(declare-fun var8J () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun unch28G () String)
(declare-fun ch8G () String)
(declare-fun unch18G () String)
(declare-fun unch28H () String)
(declare-fun ch8H () String)
(declare-fun unch18H () String)
(declare-fun unch28I () String)
(declare-fun ch8I () String)
(declare-fun unch18I () String)
(declare-fun unch28J () String)
(declare-fun ch8J () String)
(declare-fun unch18J () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun sc8G () Int)
(declare-fun sc8H () Int)
(declare-fun sc8I () Int)
(declare-fun sc8J () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun var9G () String)
(declare-fun var9H () String)
(declare-fun var9I () String)
(declare-fun var9J () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun unch29G () String)
(declare-fun ch9G () String)
(declare-fun unch19G () String)
(declare-fun unch29H () String)
(declare-fun ch9H () String)
(declare-fun unch19H () String)
(declare-fun unch29I () String)
(declare-fun ch9I () String)
(declare-fun unch19I () String)
(declare-fun unch29J () String)
(declare-fun ch9J () String)
(declare-fun unch19J () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun sc9G () Int)
(declare-fun sc9H () Int)
(declare-fun sc9I () Int)
(declare-fun sc9J () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun var10G () String)
(declare-fun var10H () String)
(declare-fun var10I () String)
(declare-fun var10J () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun unch210G () String)
(declare-fun ch10G () String)
(declare-fun unch110G () String)
(declare-fun unch210H () String)
(declare-fun ch10H () String)
(declare-fun unch110H () String)
(declare-fun unch210I () String)
(declare-fun ch10I () String)
(declare-fun unch110I () String)
(declare-fun unch210J () String)
(declare-fun ch10J () String)
(declare-fun unch110J () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun sc10G () Int)
(declare-fun sc10H () Int)
(declare-fun sc10I () Int)
(declare-fun sc10J () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun var11G () String)
(declare-fun var11H () String)
(declare-fun var11I () String)
(declare-fun var11J () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun unch211G () String)
(declare-fun ch11G () String)
(declare-fun unch111G () String)
(declare-fun unch211H () String)
(declare-fun ch11H () String)
(declare-fun unch111H () String)
(declare-fun unch211I () String)
(declare-fun ch11I () String)
(declare-fun unch111I () String)
(declare-fun unch211J () String)
(declare-fun ch11J () String)
(declare-fun unch111J () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun sc11G () Int)
(declare-fun sc11H () Int)
(declare-fun sc11I () Int)
(declare-fun sc11J () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun var12G () String)
(declare-fun var12H () String)
(declare-fun var12I () String)
(declare-fun var12J () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun unch212G () String)
(declare-fun ch12G () String)
(declare-fun unch112G () String)
(declare-fun unch212H () String)
(declare-fun ch12H () String)
(declare-fun unch112H () String)
(declare-fun unch212I () String)
(declare-fun ch12I () String)
(declare-fun unch112I () String)
(declare-fun unch212J () String)
(declare-fun ch12J () String)
(declare-fun unch112J () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun sc12G () Int)
(declare-fun sc12H () Int)
(declare-fun sc12I () Int)
(declare-fun sc12J () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun var13G () String)
(declare-fun var13H () String)
(declare-fun var13I () String)
(declare-fun var13J () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun unch213G () String)
(declare-fun ch13G () String)
(declare-fun unch113G () String)
(declare-fun unch213H () String)
(declare-fun ch13H () String)
(declare-fun unch113H () String)
(declare-fun unch213I () String)
(declare-fun ch13I () String)
(declare-fun unch113I () String)
(declare-fun unch213J () String)
(declare-fun ch13J () String)
(declare-fun unch113J () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun sc13G () Int)
(declare-fun sc13H () Int)
(declare-fun sc13I () Int)
(declare-fun sc13J () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun var14G () String)
(declare-fun var14H () String)
(declare-fun var14I () String)
(declare-fun var14J () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun unch214G () String)
(declare-fun ch14G () String)
(declare-fun unch114G () String)
(declare-fun unch214H () String)
(declare-fun ch14H () String)
(declare-fun unch114H () String)
(declare-fun unch214I () String)
(declare-fun ch14I () String)
(declare-fun unch114I () String)
(declare-fun unch214J () String)
(declare-fun ch14J () String)
(declare-fun unch114J () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun sc14G () Int)
(declare-fun sc14H () Int)
(declare-fun sc14I () Int)
(declare-fun sc14J () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun var15G () String)
(declare-fun var15H () String)
(declare-fun var15I () String)
(declare-fun var15J () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun unch215G () String)
(declare-fun ch15G () String)
(declare-fun unch115G () String)
(declare-fun unch215H () String)
(declare-fun ch15H () String)
(declare-fun unch115H () String)
(declare-fun unch215I () String)
(declare-fun ch15I () String)
(declare-fun unch115I () String)
(declare-fun unch215J () String)
(declare-fun ch15J () String)
(declare-fun unch115J () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun sc15G () Int)
(declare-fun sc15H () Int)
(declare-fun sc15I () Int)
(declare-fun sc15J () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun var16G () String)
(declare-fun var16H () String)
(declare-fun var16I () String)
(declare-fun var16J () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun unch216G () String)
(declare-fun ch16G () String)
(declare-fun unch116G () String)
(declare-fun unch216H () String)
(declare-fun ch16H () String)
(declare-fun unch116H () String)
(declare-fun unch216I () String)
(declare-fun ch16I () String)
(declare-fun unch116I () String)
(declare-fun unch216J () String)
(declare-fun ch16J () String)
(declare-fun unch116J () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun sc16G () Int)
(declare-fun sc16H () Int)
(declare-fun sc16I () Int)
(declare-fun sc16J () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun var17G () String)
(declare-fun var17H () String)
(declare-fun var17I () String)
(declare-fun var17J () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun unch217G () String)
(declare-fun ch17G () String)
(declare-fun unch117G () String)
(declare-fun unch217H () String)
(declare-fun ch17H () String)
(declare-fun unch117H () String)
(declare-fun unch217I () String)
(declare-fun ch17I () String)
(declare-fun unch117I () String)
(declare-fun unch217J () String)
(declare-fun ch17J () String)
(declare-fun unch117J () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun sc17G () Int)
(declare-fun sc17H () Int)
(declare-fun sc17I () Int)
(declare-fun sc17J () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun var18G () String)
(declare-fun var18H () String)
(declare-fun var18I () String)
(declare-fun var18J () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun unch218G () String)
(declare-fun ch18G () String)
(declare-fun unch118G () String)
(declare-fun unch218H () String)
(declare-fun ch18H () String)
(declare-fun unch118H () String)
(declare-fun unch218I () String)
(declare-fun ch18I () String)
(declare-fun unch118I () String)
(declare-fun unch218J () String)
(declare-fun ch18J () String)
(declare-fun unch118J () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun sc18G () Int)
(declare-fun sc18H () Int)
(declare-fun sc18I () Int)
(declare-fun sc18J () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun var19G () String)
(declare-fun var19H () String)
(declare-fun var19I () String)
(declare-fun var19J () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun unch219G () String)
(declare-fun ch19G () String)
(declare-fun unch119G () String)
(declare-fun unch219H () String)
(declare-fun ch19H () String)
(declare-fun unch119H () String)
(declare-fun unch219I () String)
(declare-fun ch19I () String)
(declare-fun unch119I () String)
(declare-fun unch219J () String)
(declare-fun ch19J () String)
(declare-fun unch119J () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun sc19G () Int)
(declare-fun sc19H () Int)
(declare-fun sc19I () Int)
(declare-fun sc19J () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun var20G () String)
(declare-fun var20H () String)
(declare-fun var20I () String)
(declare-fun var20J () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun unch220G () String)
(declare-fun ch20G () String)
(declare-fun unch120G () String)
(declare-fun unch220H () String)
(declare-fun ch20H () String)
(declare-fun unch120H () String)
(declare-fun unch220I () String)
(declare-fun ch20I () String)
(declare-fun unch120I () String)
(declare-fun unch220J () String)
(declare-fun ch20J () String)
(declare-fun unch120J () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun sc20G () Int)
(declare-fun sc20H () Int)
(declare-fun sc20I () Int)
(declare-fun sc20J () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun var21G () String)
(declare-fun var21H () String)
(declare-fun var21I () String)
(declare-fun var21J () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun unch221G () String)
(declare-fun ch21G () String)
(declare-fun unch121G () String)
(declare-fun unch221H () String)
(declare-fun ch21H () String)
(declare-fun unch121H () String)
(declare-fun unch221I () String)
(declare-fun ch21I () String)
(declare-fun unch121I () String)
(declare-fun unch221J () String)
(declare-fun ch21J () String)
(declare-fun unch121J () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun sc21G () Int)
(declare-fun sc21H () Int)
(declare-fun sc21I () Int)
(declare-fun sc21J () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun var22G () String)
(declare-fun var22H () String)
(declare-fun var22I () String)
(declare-fun var22J () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun unch222G () String)
(declare-fun ch22G () String)
(declare-fun unch122G () String)
(declare-fun unch222H () String)
(declare-fun ch22H () String)
(declare-fun unch122H () String)
(declare-fun unch222I () String)
(declare-fun ch22I () String)
(declare-fun unch122I () String)
(declare-fun unch222J () String)
(declare-fun ch22J () String)
(declare-fun unch122J () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun sc22G () Int)
(declare-fun sc22H () Int)
(declare-fun sc22I () Int)
(declare-fun sc22J () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun var23G () String)
(declare-fun var23H () String)
(declare-fun var23I () String)
(declare-fun var23J () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun unch223G () String)
(declare-fun ch23G () String)
(declare-fun unch123G () String)
(declare-fun unch223H () String)
(declare-fun ch23H () String)
(declare-fun unch123H () String)
(declare-fun unch223I () String)
(declare-fun ch23I () String)
(declare-fun unch123I () String)
(declare-fun unch223J () String)
(declare-fun ch23J () String)
(declare-fun unch123J () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun sc23G () Int)
(declare-fun sc23H () Int)
(declare-fun sc23I () Int)
(declare-fun sc23J () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun var24G () String)
(declare-fun var24H () String)
(declare-fun var24I () String)
(declare-fun var24J () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun unch224G () String)
(declare-fun ch24G () String)
(declare-fun unch124G () String)
(declare-fun unch224H () String)
(declare-fun ch24H () String)
(declare-fun unch124H () String)
(declare-fun unch224I () String)
(declare-fun ch24I () String)
(declare-fun unch124I () String)
(declare-fun unch224J () String)
(declare-fun ch24J () String)
(declare-fun unch124J () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun sc24G () Int)
(declare-fun sc24H () Int)
(declare-fun sc24I () Int)
(declare-fun sc24J () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun var25G () String)
(declare-fun var25H () String)
(declare-fun var25I () String)
(declare-fun var25J () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun unch225G () String)
(declare-fun ch25G () String)
(declare-fun unch125G () String)
(declare-fun unch225H () String)
(declare-fun ch25H () String)
(declare-fun unch125H () String)
(declare-fun unch225I () String)
(declare-fun ch25I () String)
(declare-fun unch125I () String)
(declare-fun unch225J () String)
(declare-fun ch25J () String)
(declare-fun unch125J () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun sc25G () Int)
(declare-fun sc25H () Int)
(declare-fun sc25I () Int)
(declare-fun sc25J () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun var26G () String)
(declare-fun var26H () String)
(declare-fun var26I () String)
(declare-fun var26J () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun unch226G () String)
(declare-fun ch26G () String)
(declare-fun unch126G () String)
(declare-fun unch226H () String)
(declare-fun ch26H () String)
(declare-fun unch126H () String)
(declare-fun unch226I () String)
(declare-fun ch26I () String)
(declare-fun unch126I () String)
(declare-fun unch226J () String)
(declare-fun ch26J () String)
(declare-fun unch126J () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun sc26G () Int)
(declare-fun sc26H () Int)
(declare-fun sc26I () Int)
(declare-fun sc26J () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun var27G () String)
(declare-fun var27H () String)
(declare-fun var27I () String)
(declare-fun var27J () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun unch227G () String)
(declare-fun ch27G () String)
(declare-fun unch127G () String)
(declare-fun unch227H () String)
(declare-fun ch27H () String)
(declare-fun unch127H () String)
(declare-fun unch227I () String)
(declare-fun ch27I () String)
(declare-fun unch127I () String)
(declare-fun unch227J () String)
(declare-fun ch27J () String)
(declare-fun unch127J () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun sc27G () Int)
(declare-fun sc27H () Int)
(declare-fun sc27I () Int)
(declare-fun sc27J () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun var28G () String)
(declare-fun var28H () String)
(declare-fun var28I () String)
(declare-fun var28J () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun unch228G () String)
(declare-fun ch28G () String)
(declare-fun unch128G () String)
(declare-fun unch228H () String)
(declare-fun ch28H () String)
(declare-fun unch128H () String)
(declare-fun unch228I () String)
(declare-fun ch28I () String)
(declare-fun unch128I () String)
(declare-fun unch228J () String)
(declare-fun ch28J () String)
(declare-fun unch128J () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun sc28G () Int)
(declare-fun sc28H () Int)
(declare-fun sc28I () Int)
(declare-fun sc28J () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun var29G () String)
(declare-fun var29H () String)
(declare-fun var29I () String)
(declare-fun var29J () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun unch229G () String)
(declare-fun ch29G () String)
(declare-fun unch129G () String)
(declare-fun unch229H () String)
(declare-fun ch29H () String)
(declare-fun unch129H () String)
(declare-fun unch229I () String)
(declare-fun ch29I () String)
(declare-fun unch129I () String)
(declare-fun unch229J () String)
(declare-fun ch29J () String)
(declare-fun unch129J () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun sc29G () Int)
(declare-fun sc29H () Int)
(declare-fun sc29I () Int)
(declare-fun sc29J () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (<= (str.len var0I) 1))
(assert (<= (str.len var0J) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= (str.++ preI (str.++ stem0 sufI)) (str.++ unch10I (str.++ ch0I unch20I))))
(assert (= (str.++ preJ (str.++ stem0 sufJ)) (str.++ unch10J (str.++ ch0J unch20J))))
(assert (= "zub" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "zubam" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "zuboOi" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "zuXi" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (= (ite (= ch0I var0I) 0 1) sc0I))
(assert (= (ite (= ch0J var0J) 0 1) sc0J))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= sc0I 1))
(assert (<= sc0J 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (<= (str.len var1I) 1))
(assert (<= (str.len var1J) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= (str.++ preI (str.++ stem1 sufI)) (str.++ unch11I (str.++ ch1I unch21I))))
(assert (= (str.++ preJ (str.++ stem1 sufJ)) (str.++ unch11J (str.++ ch1J unch21J))))
(assert (= "sOit" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "sOitam" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "sOitoOi" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "sOiZi" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (= (ite (= ch1I var1I) 0 1) sc1I))
(assert (= (ite (= ch1J var1J) 0 1) sc1J))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= sc1I 1))
(assert (<= sc1J 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (<= (str.len var2I) 1))
(assert (<= (str.len var2J) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= (str.++ preI (str.++ stem2 sufI)) (str.++ unch12I (str.++ ch2I unch22I))))
(assert (= (str.++ preJ (str.++ stem2 sufJ)) (str.++ unch12J (str.++ ch2J unch22J))))
(assert (= "1aZ" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "1aZam" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "1ateOi" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "1ateOi" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (= (ite (= ch2I var2I) 0 1) sc2I))
(assert (= (ite (= ch2J var2J) 0 1) sc2J))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= sc2I 1))
(assert (<= sc2J 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (<= (str.len var3I) 1))
(assert (<= (str.len var3J) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= (str.++ preI (str.++ stem3 sufI)) (str.++ unch13I (str.++ ch3I unch23I))))
(assert (= (str.++ preJ (str.++ stem3 sufJ)) (str.++ unch13J (str.++ ch3J unch23J))))
(assert (= "ko2i3" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "koBe3am" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "koBeleOi" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "koBe3i" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (= (ite (= ch3I var3I) 0 1) sc3I))
(assert (= (ite (= ch3J var3J) 0 1) sc3J))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= sc3I 1))
(assert (<= sc3J 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (<= (str.len var4I) 1))
(assert (<= (str.len var4J) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= (str.++ preI (str.++ stem4 sufI)) (str.++ unch14I (str.++ ch4I unch24I))))
(assert (= (str.++ preJ (str.++ stem4 sufJ)) (str.++ unch14J (str.++ ch4J unch24J))))
(assert (= "zlo4ij" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "zlo4ijam" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "zlo4ijeOi" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "zlo4ijeOi" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (= (ite (= ch4I var4I) 0 1) sc4I))
(assert (= (ite (= ch4J var4J) 0 1) sc4J))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= sc4I 1))
(assert (<= sc4J 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (<= (str.len var5I) 1))
(assert (<= (str.len var5J) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= (str.++ preI (str.++ stem5 sufI)) (str.++ unch15I (str.++ ch5I unch25I))))
(assert (= (str.++ preJ (str.++ stem5 sufJ)) (str.++ unch15J (str.++ ch5J unch25J))))
(assert (= "5i6a7" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "5i6a7am" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "5i6aPeOi" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "5i6a7i" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (= (ite (= ch5I var5I) 0 1) sc5I))
(assert (= (ite (= ch5J var5J) 0 1) sc5J))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= sc5I 1))
(assert (<= sc5J 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (<= (str.len var6I) 1))
(assert (<= (str.len var6J) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= (str.++ preI (str.++ stem6 sufI)) (str.++ unch16I (str.++ ch6I unch26I))))
(assert (= (str.++ preJ (str.++ stem6 sufJ)) (str.++ unch16J (str.++ ch6J unch26J))))
(assert (= "korovaj" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "korovajam" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "korovajeOi" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "korovaji" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (= (ite (= ch6I var6I) 0 1) sc6I))
(assert (= (ite (= ch6J var6J) 0 1) sc6J))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (<= sc6I 1))
(assert (<= sc6J 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (<= (str.len var7G) 1))
(assert (<= (str.len var7H) 1))
(assert (<= (str.len var7I) 1))
(assert (<= (str.len var7J) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= (str.++ preG (str.++ stem7 sufG)) (str.++ unch17G (str.++ ch7G unch27G))))
(assert (= (str.++ preH (str.++ stem7 sufH)) (str.++ unch17H (str.++ ch7H unch27H))))
(assert (= (str.++ preI (str.++ stem7 sufI)) (str.++ unch17I (str.++ ch7I unch27I))))
(assert (= (str.++ preJ (str.++ stem7 sufJ)) (str.++ unch17J (str.++ ch7J unch27J))))
(assert (= "ka5i8" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "kame8am" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "kameneOi" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= "kame8i" (str.++ unch17D (str.++ var7D unch27D))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (= (ite (= ch7G var7G) 0 1) sc7G))
(assert (= (ite (= ch7H var7H) 0 1) sc7H))
(assert (= (ite (= ch7I var7I) 0 1) sc7I))
(assert (= (ite (= ch7J var7J) 0 1) sc7J))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= sc7G 1))
(assert (<= sc7H 1))
(assert (<= sc7I 1))
(assert (<= sc7J 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (<= (str.len var8G) 1))
(assert (<= (str.len var8H) 1))
(assert (<= (str.len var8I) 1))
(assert (<= (str.len var8J) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= (str.++ preG (str.++ stem8 sufG)) (str.++ unch18G (str.++ ch8G unch28G))))
(assert (= (str.++ preH (str.++ stem8 sufH)) (str.++ unch18H (str.++ ch8H unch28H))))
(assert (= (str.++ preI (str.++ stem8 sufI)) (str.++ unch18I (str.++ ch8I unch28I))))
(assert (= (str.++ preJ (str.++ stem8 sufJ)) (str.++ unch18J (str.++ ch8J unch28J))))
(assert (= "5i4" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "5i4am" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "5ideOi" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= "5i4i" (str.++ unch18D (str.++ var8D unch28D))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (= (ite (= ch8G var8G) 0 1) sc8G))
(assert (= (ite (= ch8H var8H) 0 1) sc8H))
(assert (= (ite (= ch8I var8I) 0 1) sc8I))
(assert (= (ite (= ch8J var8J) 0 1) sc8J))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= sc8G 1))
(assert (<= sc8H 1))
(assert (<= sc8I 1))
(assert (<= sc8J 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (<= (str.len var9G) 1))
(assert (<= (str.len var9H) 1))
(assert (<= (str.len var9I) 1))
(assert (<= (str.len var9J) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= (str.++ preG (str.++ stem9 sufG)) (str.++ unch19G (str.++ ch9G unch29G))))
(assert (= (str.++ preH (str.++ stem9 sufH)) (str.++ unch19H (str.++ ch9H unch29H))))
(assert (= (str.++ preI (str.++ stem9 sufI)) (str.++ unch19I (str.++ ch9I unch29I))))
(assert (= (str.++ preJ (str.++ stem9 sufJ)) (str.++ unch19J (str.++ ch9J unch29J))))
(assert (= "x3iw" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "x3ivam" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "x3ivoOi" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= "x3iOi" (str.++ unch19D (str.++ var9D unch29D))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (= (ite (= ch9G var9G) 0 1) sc9G))
(assert (= (ite (= ch9H var9H) 0 1) sc9H))
(assert (= (ite (= ch9I var9I) 0 1) sc9I))
(assert (= (ite (= ch9J var9J) 0 1) sc9J))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= sc9G 1))
(assert (<= sc9H 1))
(assert (<= sc9I 1))
(assert (<= sc9J 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (<= (str.len var10G) 1))
(assert (<= (str.len var10H) 1))
(assert (<= (str.len var10I) 1))
(assert (<= (str.len var10J) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= (str.++ preG (str.++ stem10 sufG)) (str.++ unch110G (str.++ ch10G unch210G))))
(assert (= (str.++ preH (str.++ stem10 sufH)) (str.++ unch110H (str.++ ch10H unch210H))))
(assert (= (str.++ preI (str.++ stem10 sufI)) (str.++ unch110I (str.++ ch10I unch210I))))
(assert (= (str.++ preJ (str.++ stem10 sufJ)) (str.++ unch110J (str.++ ch10J unch210J))))
(assert (= "holub" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "holubam" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "holuboOi" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= "holuXi" (str.++ unch110D (str.++ var10D unch210D))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (= (ite (= ch10G var10G) 0 1) sc10G))
(assert (= (ite (= ch10H var10H) 0 1) sc10H))
(assert (= (ite (= ch10I var10I) 0 1) sc10I))
(assert (= (ite (= ch10J var10J) 0 1) sc10J))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= sc10G 1))
(assert (<= sc10H 1))
(assert (<= sc10I 1))
(assert (<= sc10J 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (<= (str.len var11G) 1))
(assert (<= (str.len var11H) 1))
(assert (<= (str.len var11I) 1))
(assert (<= (str.len var11J) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= (str.++ preG (str.++ stem11 sufG)) (str.++ unch111G (str.++ ch11G unch211G))))
(assert (= (str.++ preH (str.++ stem11 sufH)) (str.++ unch111H (str.++ ch11H unch211H))))
(assert (= (str.++ preI (str.++ stem11 sufI)) (str.++ unch111I (str.++ ch11I unch211I))))
(assert (= (str.++ preJ (str.++ stem11 sufJ)) (str.++ unch111J (str.++ ch11J unch211J))))
(assert (= "6in" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "6inam" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "6inoOi" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= "6i8i" (str.++ unch111D (str.++ var11D unch211D))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (= (ite (= ch11G var11G) 0 1) sc11G))
(assert (= (ite (= ch11H var11H) 0 1) sc11H))
(assert (= (ite (= ch11I var11I) 0 1) sc11I))
(assert (= (ite (= ch11J var11J) 0 1) sc11J))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= sc11G 1))
(assert (<= sc11H 1))
(assert (<= sc11I 1))
(assert (<= sc11J 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (<= (str.len var12G) 1))
(assert (<= (str.len var12H) 1))
(assert (<= (str.len var12I) 1))
(assert (<= (str.len var12J) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= (str.++ preG (str.++ stem12 sufG)) (str.++ unch112G (str.++ ch12G unch212G))))
(assert (= (str.++ preH (str.++ stem12 sufH)) (str.++ unch112H (str.++ ch12H unch212H))))
(assert (= (str.++ preI (str.++ stem12 sufI)) (str.++ unch112I (str.++ ch12I unch212I))))
(assert (= (str.++ preJ (str.++ stem12 sufJ)) (str.++ unch112J (str.++ ch12J unch212J))))
(assert (= "leXi4" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "lebe4am" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "lebedeOi" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= "lebe4i" (str.++ unch112D (str.++ var12D unch212D))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (= (ite (= ch12G var12G) 0 1) sc12G))
(assert (= (ite (= ch12H var12H) 0 1) sc12H))
(assert (= (ite (= ch12I var12I) 0 1) sc12I))
(assert (= (ite (= ch12J var12J) 0 1) sc12J))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= sc12G 1))
(assert (<= sc12H 1))
(assert (<= sc12I 1))
(assert (<= sc12J 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (<= (str.len var13G) 1))
(assert (<= (str.len var13H) 1))
(assert (<= (str.len var13I) 1))
(assert (<= (str.len var13J) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= (str.++ preG (str.++ stem13 sufG)) (str.++ unch113G (str.++ ch13G unch213G))))
(assert (= (str.++ preH (str.++ stem13 sufH)) (str.++ unch113H (str.++ ch13H unch213H))))
(assert (= (str.++ preI (str.++ stem13 sufI)) (str.++ unch113I (str.++ ch13I unch213I))))
(assert (= (str.++ preJ (str.++ stem13 sufJ)) (str.++ unch113J (str.++ ch13J unch213J))))
(assert (= "su6id" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "su6idam" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "su6idoOi" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= "su6idoOi" (str.++ unch113E (str.++ var13E unch213E))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (= (ite (= ch13G var13G) 0 1) sc13G))
(assert (= (ite (= ch13H var13H) 0 1) sc13H))
(assert (= (ite (= ch13I var13I) 0 1) sc13I))
(assert (= (ite (= ch13J var13J) 0 1) sc13J))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= sc13G 1))
(assert (<= sc13H 1))
(assert (<= sc13I 1))
(assert (<= sc13J 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (<= (str.len var14G) 1))
(assert (<= (str.len var14H) 1))
(assert (<= (str.len var14I) 1))
(assert (<= (str.len var14J) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= (str.++ preG (str.++ stem14 sufG)) (str.++ unch114G (str.++ ch14G unch214G))))
(assert (= (str.++ preH (str.++ stem14 sufH)) (str.++ unch114H (str.++ ch14H unch214H))))
(assert (= (str.++ preI (str.++ stem14 sufI)) (str.++ unch114I (str.++ ch14I unch214I))))
(assert (= (str.++ preJ (str.++ stem14 sufJ)) (str.++ unch114J (str.++ ch14J unch214J))))
(assert (= "EoloOik" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "EoloOikam" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "EoloOikoOi" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= "EoloOikoOi" (str.++ unch114E (str.++ var14E unch214E))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (= (ite (= ch14G var14G) 0 1) sc14G))
(assert (= (ite (= ch14H var14H) 0 1) sc14H))
(assert (= (ite (= ch14I var14I) 0 1) sc14I))
(assert (= (ite (= ch14J var14J) 0 1) sc14J))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= sc14G 1))
(assert (<= sc14H 1))
(assert (<= sc14I 1))
(assert (<= sc14J 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (<= (str.len var15G) 1))
(assert (<= (str.len var15H) 1))
(assert (<= (str.len var15I) 1))
(assert (<= (str.len var15J) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= (str.++ preG (str.++ stem15 sufG)) (str.++ unch115G (str.++ ch15G unch215G))))
(assert (= (str.++ preH (str.++ stem15 sufH)) (str.++ unch115H (str.++ ch15H unch215H))))
(assert (= (str.++ preI (str.++ stem15 sufI)) (str.++ unch115I (str.++ ch15I unch215I))))
(assert (= (str.++ preJ (str.++ stem15 sufJ)) (str.++ unch115J (str.++ ch15J unch215J))))
(assert (= "3id" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "ledam" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "ledoOi" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= "le4i" (str.++ unch115D (str.++ var15D unch215D))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (= (ite (= ch15G var15G) 0 1) sc15G))
(assert (= (ite (= ch15H var15H) 0 1) sc15H))
(assert (= (ite (= ch15I var15I) 0 1) sc15I))
(assert (= (ite (= ch15J var15J) 0 1) sc15J))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= sc15G 1))
(assert (<= sc15H 1))
(assert (<= sc15I 1))
(assert (<= sc15J 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (<= (str.len var16G) 1))
(assert (<= (str.len var16H) 1))
(assert (<= (str.len var16I) 1))
(assert (<= (str.len var16J) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= (str.++ preG (str.++ stem16 sufG)) (str.++ unch116G (str.++ ch16G unch216G))))
(assert (= (str.++ preH (str.++ stem16 sufH)) (str.++ unch116H (str.++ ch16H unch216H))))
(assert (= (str.++ preI (str.++ stem16 sufI)) (str.++ unch116I (str.++ ch16I unch216I))))
(assert (= (str.++ preJ (str.++ stem16 sufJ)) (str.++ unch116J (str.++ ch16J unch216J))))
(assert (= "bi3" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bo3am" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "boleOi" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= "bo3i" (str.++ unch116D (str.++ var16D unch216D))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (= (ite (= ch16G var16G) 0 1) sc16G))
(assert (= (ite (= ch16H var16H) 0 1) sc16H))
(assert (= (ite (= ch16I var16I) 0 1) sc16I))
(assert (= (ite (= ch16J var16J) 0 1) sc16J))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= sc16G 1))
(assert (<= sc16H 1))
(assert (<= sc16I 1))
(assert (<= sc16J 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (<= (str.len var17G) 1))
(assert (<= (str.len var17H) 1))
(assert (<= (str.len var17I) 1))
(assert (<= (str.len var17J) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= (str.++ preG (str.++ stem17 sufG)) (str.++ unch117G (str.++ ch17G unch217G))))
(assert (= (str.++ preH (str.++ stem17 sufH)) (str.++ unch117H (str.++ ch17H unch217H))))
(assert (= (str.++ preI (str.++ stem17 sufI)) (str.++ unch117I (str.++ ch17I unch217I))))
(assert (= (str.++ preJ (str.++ stem17 sufJ)) (str.++ unch117J (str.++ ch17J unch217J))))
(assert (= "riw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "rovam" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "rovoOi" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= "roOi" (str.++ unch117D (str.++ var17D unch217D))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (= (ite (= ch17G var17G) 0 1) sc17G))
(assert (= (ite (= ch17H var17H) 0 1) sc17H))
(assert (= (ite (= ch17I var17I) 0 1) sc17I))
(assert (= (ite (= ch17J var17J) 0 1) sc17J))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= sc17G 1))
(assert (<= sc17H 1))
(assert (<= sc17I 1))
(assert (<= sc17J 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (<= (str.len var18G) 1))
(assert (<= (str.len var18H) 1))
(assert (<= (str.len var18I) 1))
(assert (<= (str.len var18J) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= (str.++ preG (str.++ stem18 sufG)) (str.++ unch118G (str.++ ch18G unch218G))))
(assert (= (str.++ preH (str.++ stem18 sufH)) (str.++ unch118H (str.++ ch18H unch218H))))
(assert (= (str.++ preI (str.++ stem18 sufI)) (str.++ unch118I (str.++ ch18I unch218I))))
(assert (= (str.++ preJ (str.++ stem18 sufJ)) (str.++ unch118J (str.++ ch18J unch218J))))
(assert (= "stiw" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "stolam" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "stoloOi" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= "sto3i" (str.++ unch118D (str.++ var18D unch218D))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (= (ite (= ch18G var18G) 0 1) sc18G))
(assert (= (ite (= ch18H var18H) 0 1) sc18H))
(assert (= (ite (= ch18I var18I) 0 1) sc18I))
(assert (= (ite (= ch18J var18J) 0 1) sc18J))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= sc18G 1))
(assert (<= sc18H 1))
(assert (<= sc18I 1))
(assert (<= sc18J 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (<= (str.len var19G) 1))
(assert (<= (str.len var19H) 1))
(assert (<= (str.len var19I) 1))
(assert (<= (str.len var19J) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= (str.++ preG (str.++ stem19 sufG)) (str.++ unch119G (str.++ ch19G unch219G))))
(assert (= (str.++ preH (str.++ stem19 sufH)) (str.++ unch119H (str.++ ch19H unch219H))))
(assert (= (str.++ preI (str.++ stem19 sufI)) (str.++ unch119I (str.++ ch19I unch219I))))
(assert (= (str.++ preJ (str.++ stem19 sufJ)) (str.++ unch119J (str.++ ch19J unch219J))))
(assert (= "4id" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "4idam" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "4idoOi" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= "4idoOi" (str.++ unch119E (str.++ var19E unch219E))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (= (ite (= ch19G var19G) 0 1) sc19G))
(assert (= (ite (= ch19H var19H) 0 1) sc19H))
(assert (= (ite (= ch19I var19I) 0 1) sc19I))
(assert (= (ite (= ch19J var19J) 0 1) sc19J))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= sc19G 1))
(assert (<= sc19H 1))
(assert (<= sc19I 1))
(assert (<= sc19J 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (<= (str.len var20G) 1))
(assert (<= (str.len var20H) 1))
(assert (<= (str.len var20I) 1))
(assert (<= (str.len var20J) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= (str.++ preG (str.++ stem20 sufG)) (str.++ unch120G (str.++ ch20G unch220G))))
(assert (= (str.++ preH (str.++ stem20 sufH)) (str.++ unch120H (str.++ ch20H unch220H))))
(assert (= (str.++ preI (str.++ stem20 sufI)) (str.++ unch120I (str.++ ch20I unch220I))))
(assert (= (str.++ preJ (str.++ stem20 sufJ)) (str.++ unch120J (str.++ ch20J unch220J))))
(assert (= "3it" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "3otam" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "3otoOi" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= "3oZi" (str.++ unch120D (str.++ var20D unch220D))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (= (ite (= ch20G var20G) 0 1) sc20G))
(assert (= (ite (= ch20H var20H) 0 1) sc20H))
(assert (= (ite (= ch20I var20I) 0 1) sc20I))
(assert (= (ite (= ch20J var20J) 0 1) sc20J))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= sc20G 1))
(assert (<= sc20H 1))
(assert (<= sc20I 1))
(assert (<= sc20J 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (<= (str.len var21G) 1))
(assert (<= (str.len var21H) 1))
(assert (<= (str.len var21I) 1))
(assert (<= (str.len var21J) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= (str.++ preG (str.++ stem21 sufG)) (str.++ unch121G (str.++ ch21G unch221G))))
(assert (= (str.++ preH (str.++ stem21 sufH)) (str.++ unch121H (str.++ ch21H unch221H))))
(assert (= (str.++ preI (str.++ stem21 sufI)) (str.++ unch121I (str.++ ch21I unch221I))))
(assert (= (str.++ preJ (str.++ stem21 sufJ)) (str.++ unch121J (str.++ ch21J unch221J))))
(assert (= "mist" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "mostam" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "mostoOi" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= "mosZi" (str.++ unch121D (str.++ var21D unch221D))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (= (ite (= ch21G var21G) 0 1) sc21G))
(assert (= (ite (= ch21H var21H) 0 1) sc21H))
(assert (= (ite (= ch21I var21I) 0 1) sc21I))
(assert (= (ite (= ch21J var21J) 0 1) sc21J))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= sc21G 1))
(assert (<= sc21H 1))
(assert (<= sc21I 1))
(assert (<= sc21J 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (<= (str.len var22G) 1))
(assert (<= (str.len var22H) 1))
(assert (<= (str.len var22I) 1))
(assert (<= (str.len var22J) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= (str.++ preG (str.++ stem22 sufG)) (str.++ unch122G (str.++ ch22G unch222G))))
(assert (= (str.++ preH (str.++ stem22 sufH)) (str.++ unch122H (str.++ ch22H unch222H))))
(assert (= (str.++ preI (str.++ stem22 sufI)) (str.++ unch122I (str.++ ch22I unch222I))))
(assert (= (str.++ preJ (str.++ stem22 sufJ)) (str.++ unch122J (str.++ ch22J unch222J))))
(assert (= "veEir" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "veEoram" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "veEoroOi" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= "veEo9i" (str.++ unch122D (str.++ var22D unch222D))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (= (ite (= ch22G var22G) 0 1) sc22G))
(assert (= (ite (= ch22H var22H) 0 1) sc22H))
(assert (= (ite (= ch22I var22I) 0 1) sc22I))
(assert (= (ite (= ch22J var22J) 0 1) sc22J))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= sc22G 1))
(assert (<= sc22H 1))
(assert (<= sc22I 1))
(assert (<= sc22J 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (<= (str.len var23G) 1))
(assert (<= (str.len var23H) 1))
(assert (<= (str.len var23I) 1))
(assert (<= (str.len var23J) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= (str.++ preG (str.++ stem23 sufG)) (str.++ unch123G (str.++ ch23G unch223G))))
(assert (= (str.++ preH (str.++ stem23 sufH)) (str.++ unch123H (str.++ ch23H unch223H))))
(assert (= (str.++ preI (str.++ stem23 sufI)) (str.++ unch123I (str.++ ch23I unch223I))))
(assert (= (str.++ preJ (str.++ stem23 sufJ)) (str.++ unch123J (str.++ ch23J unch223J))))
(assert (= "Zilo" (str.++ unch123F (str.++ var23F unch223F))))
(assert (= "Zila" (str.++ unch123G (str.++ var23G unch223G))))
(assert (= "Zilu" (str.++ unch123H (str.++ var23H unch223H))))
(assert (= "Zi3i" (str.++ unch123I (str.++ var23I unch223I))))
(assert (= "Ziw" (str.++ unch123J (str.++ var23J unch223J))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (= (ite (= ch23G var23G) 0 1) sc23G))
(assert (= (ite (= ch23H var23H) 0 1) sc23H))
(assert (= (ite (= ch23I var23I) 0 1) sc23I))
(assert (= (ite (= ch23J var23J) 0 1) sc23J))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= sc23G 1))
(assert (<= sc23H 1))
(assert (<= sc23I 1))
(assert (<= sc23J 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (<= (str.len var24G) 1))
(assert (<= (str.len var24H) 1))
(assert (<= (str.len var24I) 1))
(assert (<= (str.len var24J) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= (str.++ preG (str.++ stem24 sufG)) (str.++ unch124G (str.++ ch24G unch224G))))
(assert (= (str.++ preH (str.++ stem24 sufH)) (str.++ unch124H (str.++ ch24H unch224H))))
(assert (= (str.++ preI (str.++ stem24 sufI)) (str.++ unch124I (str.++ ch24I unch224I))))
(assert (= (str.++ preJ (str.++ stem24 sufJ)) (str.++ unch124J (str.++ ch24J unch224J))))
(assert (= "koleso" (str.++ unch124F (str.++ var24F unch224F))))
(assert (= "kolesa" (str.++ unch124G (str.++ var24G unch224G))))
(assert (= "kolesu" (str.++ unch124H (str.++ var24H unch224H))))
(assert (= "kole6i" (str.++ unch124I (str.++ var24I unch224I))))
(assert (= "ko3is" (str.++ unch124J (str.++ var24J unch224J))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (= (ite (= ch24G var24G) 0 1) sc24G))
(assert (= (ite (= ch24H var24H) 0 1) sc24H))
(assert (= (ite (= ch24I var24I) 0 1) sc24I))
(assert (= (ite (= ch24J var24J) 0 1) sc24J))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= sc24G 1))
(assert (<= sc24H 1))
(assert (<= sc24I 1))
(assert (<= sc24J 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (<= (str.len var25G) 1))
(assert (<= (str.len var25H) 1))
(assert (<= (str.len var25I) 1))
(assert (<= (str.len var25J) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= (str.++ preG (str.++ stem25 sufG)) (str.++ unch125G (str.++ ch25G unch225G))))
(assert (= (str.++ preH (str.++ stem25 sufH)) (str.++ unch125H (str.++ ch25H unch225H))))
(assert (= (str.++ preI (str.++ stem25 sufI)) (str.++ unch125I (str.++ ch25I unch225I))))
(assert (= (str.++ preJ (str.++ stem25 sufJ)) (str.++ unch125J (str.++ ch25J unch225J))))
(assert (= "ozero" (str.++ unch125F (str.++ var25F unch225F))))
(assert (= "ozera" (str.++ unch125G (str.++ var25G unch225G))))
(assert (= "ozeru" (str.++ unch125H (str.++ var25H unch225H))))
(assert (= "oze9i" (str.++ unch125I (str.++ var25I unch225I))))
(assert (= "o1ir" (str.++ unch125J (str.++ var25J unch225J))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (= (ite (= ch25G var25G) 0 1) sc25G))
(assert (= (ite (= ch25H var25H) 0 1) sc25H))
(assert (= (ite (= ch25I var25I) 0 1) sc25I))
(assert (= (ite (= ch25J var25J) 0 1) sc25J))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= sc25G 1))
(assert (<= sc25H 1))
(assert (<= sc25I 1))
(assert (<= sc25J 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (<= (str.len var26G) 1))
(assert (<= (str.len var26H) 1))
(assert (<= (str.len var26I) 1))
(assert (<= (str.len var26J) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= (str.++ preG (str.++ stem26 sufG)) (str.++ unch126G (str.++ ch26G unch226G))))
(assert (= (str.++ preH (str.++ stem26 sufH)) (str.++ unch126H (str.++ ch26H unch226H))))
(assert (= (str.++ preI (str.++ stem26 sufI)) (str.++ unch126I (str.++ ch26I unch226I))))
(assert (= (str.++ preJ (str.++ stem26 sufJ)) (str.++ unch126J (str.++ ch26J unch226J))))
(assert (= "selo" (str.++ unch126F (str.++ var26F unch226F))))
(assert (= "sela" (str.++ unch126G (str.++ var26G unch226G))))
(assert (= "selu" (str.++ unch126H (str.++ var26H unch226H))))
(assert (= "se3i" (str.++ unch126I (str.++ var26I unch226I))))
(assert (= "6iw" (str.++ unch126J (str.++ var26J unch226J))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (= (ite (= ch26G var26G) 0 1) sc26G))
(assert (= (ite (= ch26H var26H) 0 1) sc26H))
(assert (= (ite (= ch26I var26I) 0 1) sc26I))
(assert (= (ite (= ch26J var26J) 0 1) sc26J))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= sc26G 1))
(assert (<= sc26H 1))
(assert (<= sc26I 1))
(assert (<= sc26J 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (<= (str.len var27G) 1))
(assert (<= (str.len var27H) 1))
(assert (<= (str.len var27I) 1))
(assert (<= (str.len var27J) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= (str.++ preG (str.++ stem27 sufG)) (str.++ unch127G (str.++ ch27G unch227G))))
(assert (= (str.++ preH (str.++ stem27 sufH)) (str.++ unch127H (str.++ ch27H unch227H))))
(assert (= (str.++ preI (str.++ stem27 sufI)) (str.++ unch127I (str.++ ch27I unch227I))))
(assert (= (str.++ preJ (str.++ stem27 sufJ)) (str.++ unch127J (str.++ ch27J unch227J))))
(assert (= "pole" (str.++ unch127F (str.++ var27F unch227F))))
(assert (= "po3a" (str.++ unch127G (str.++ var27G unch227G))))
(assert (= "po3u" (str.++ unch127H (str.++ var27H unch227H))))
(assert (= "po3i" (str.++ unch127I (str.++ var27I unch227I))))
(assert (= "pi3" (str.++ unch127J (str.++ var27J unch227J))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (= (ite (= ch27G var27G) 0 1) sc27G))
(assert (= (ite (= ch27H var27H) 0 1) sc27H))
(assert (= (ite (= ch27I var27I) 0 1) sc27I))
(assert (= (ite (= ch27J var27J) 0 1) sc27J))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= sc27G 1))
(assert (<= sc27H 1))
(assert (<= sc27I 1))
(assert (<= sc27J 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (<= (str.len var28G) 1))
(assert (<= (str.len var28H) 1))
(assert (<= (str.len var28I) 1))
(assert (<= (str.len var28J) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= (str.++ preG (str.++ stem28 sufG)) (str.++ unch128G (str.++ ch28G unch228G))))
(assert (= (str.++ preH (str.++ stem28 sufH)) (str.++ unch128H (str.++ ch28H unch228H))))
(assert (= (str.++ preI (str.++ stem28 sufI)) (str.++ unch128I (str.++ ch28I unch228I))))
(assert (= (str.++ preJ (str.++ stem28 sufJ)) (str.++ unch128J (str.++ ch28J unch228J))))
(assert (= "slovo" (str.++ unch128F (str.++ var28F unch228F))))
(assert (= "slova" (str.++ unch128G (str.++ var28G unch228G))))
(assert (= "slovu" (str.++ unch128H (str.++ var28H unch228H))))
(assert (= "sloOi" (str.++ unch128I (str.++ var28I unch228I))))
(assert (= "sliw" (str.++ unch128J (str.++ var28J unch228J))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (= (ite (= ch28G var28G) 0 1) sc28G))
(assert (= (ite (= ch28H var28H) 0 1) sc28H))
(assert (= (ite (= ch28I var28I) 0 1) sc28I))
(assert (= (ite (= ch28J var28J) 0 1) sc28J))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= sc28G 1))
(assert (<= sc28H 1))
(assert (<= sc28I 1))
(assert (<= sc28J 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (<= (str.len var29G) 1))
(assert (<= (str.len var29H) 1))
(assert (<= (str.len var29I) 1))
(assert (<= (str.len var29J) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= (str.++ preG (str.++ stem29 sufG)) (str.++ unch129G (str.++ ch29G unch229G))))
(assert (= (str.++ preH (str.++ stem29 sufH)) (str.++ unch129H (str.++ ch29H unch229H))))
(assert (= (str.++ preI (str.++ stem29 sufI)) (str.++ unch129I (str.++ ch29I unch229I))))
(assert (= (str.++ preJ (str.++ stem29 sufJ)) (str.++ unch129J (str.++ ch29J unch229J))))
(assert (= "more" (str.++ unch129F (str.++ var29F unch229F))))
(assert (= "mo9a" (str.++ unch129G (str.++ var29G unch229G))))
(assert (= "mo9u" (str.++ unch129H (str.++ var29H unch229H))))
(assert (= "mo9i" (str.++ unch129I (str.++ var29I unch229I))))
(assert (= "mi9" (str.++ unch129J (str.++ var29J unch229J))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (= (ite (= ch29G var29G) 0 1) sc29G))
(assert (= (ite (= ch29H var29H) 0 1) sc29H))
(assert (= (ite (= ch29I var29I) 0 1) sc29I))
(assert (= (ite (= ch29J var29J) 0 1) sc29J))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= sc29G 1))
(assert (<= sc29H 1))
(assert (<= sc29I 1))
(assert (<= sc29J 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      sc0I
      sc0J
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      sc1I
      sc1J
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      sc2I
      sc2J
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      sc3I
      sc3J
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      sc4I
      sc4J
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      sc5I
      sc5J
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H
      sc6I
      sc6J
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      sc7G
      sc7H
      sc7I
      sc7J
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      sc8G
      sc8H
      sc8I
      sc8J
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      sc9G
      sc9H
      sc9I
      sc9J
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      sc10G
      sc10H
      sc10I
      sc10J
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      sc11G
      sc11H
      sc11I
      sc11J
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      sc12G
      sc12H
      sc12I
      sc12J
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      sc13G
      sc13H
      sc13I
      sc13J
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      sc14G
      sc14H
      sc14I
      sc14J
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      sc15G
      sc15H
      sc15I
      sc15J
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      sc16G
      sc16H
      sc16I
      sc16J
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      sc17G
      sc17H
      sc17I
      sc17J
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      sc18G
      sc18H
      sc18I
      sc18J
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      sc19G
      sc19H
      sc19I
      sc19J
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      sc20G
      sc20H
      sc20I
      sc20J
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      sc21G
      sc21H
      sc21I
      sc21J
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      sc22G
      sc22H
      sc22I
      sc22J
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      sc23G
      sc23H
      sc23I
      sc23J
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      sc24G
      sc24H
      sc24I
      sc24J
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      sc25G
      sc25H
      sc25I
      sc25J
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      sc26G
      sc26H
      sc26I
      sc26J
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      sc27G
      sc27H
      sc27I
      sc27J
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      sc28G
      sc28H
      sc28I
      sc28J
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      sc29G
      sc29H
      sc29I
      sc29J)
   6))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun var0I () String)
(declare-fun var0J () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun unch20I () String)
(declare-fun ch0I () String)
(declare-fun unch10I () String)
(declare-fun sufI () String)
(declare-fun preI () String)
(declare-fun unch20J () String)
(declare-fun ch0J () String)
(declare-fun unch10J () String)
(declare-fun sufJ () String)
(declare-fun preJ () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun sc0I () Int)
(declare-fun sc0J () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun var1I () String)
(declare-fun var1J () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun unch21I () String)
(declare-fun ch1I () String)
(declare-fun unch11I () String)
(declare-fun unch21J () String)
(declare-fun ch1J () String)
(declare-fun unch11J () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun sc1I () Int)
(declare-fun sc1J () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun var2I () String)
(declare-fun var2J () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun unch22I () String)
(declare-fun ch2I () String)
(declare-fun unch12I () String)
(declare-fun unch22J () String)
(declare-fun ch2J () String)
(declare-fun unch12J () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun sc2I () Int)
(declare-fun sc2J () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun var3I () String)
(declare-fun var3J () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun unch23I () String)
(declare-fun ch3I () String)
(declare-fun unch13I () String)
(declare-fun unch23J () String)
(declare-fun ch3J () String)
(declare-fun unch13J () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun sc3I () Int)
(declare-fun sc3J () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun var4I () String)
(declare-fun var4J () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun unch24I () String)
(declare-fun ch4I () String)
(declare-fun unch14I () String)
(declare-fun unch24J () String)
(declare-fun ch4J () String)
(declare-fun unch14J () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun sc4I () Int)
(declare-fun sc4J () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun var5I () String)
(declare-fun var5J () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun unch25I () String)
(declare-fun ch5I () String)
(declare-fun unch15I () String)
(declare-fun unch25J () String)
(declare-fun ch5J () String)
(declare-fun unch15J () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun sc5I () Int)
(declare-fun sc5J () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun var6I () String)
(declare-fun var6J () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun unch26I () String)
(declare-fun ch6I () String)
(declare-fun unch16I () String)
(declare-fun unch26J () String)
(declare-fun ch6J () String)
(declare-fun unch16J () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(declare-fun sc6I () Int)
(declare-fun sc6J () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun var7G () String)
(declare-fun var7H () String)
(declare-fun var7I () String)
(declare-fun var7J () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun unch27G () String)
(declare-fun ch7G () String)
(declare-fun unch17G () String)
(declare-fun unch27H () String)
(declare-fun ch7H () String)
(declare-fun unch17H () String)
(declare-fun unch27I () String)
(declare-fun ch7I () String)
(declare-fun unch17I () String)
(declare-fun unch27J () String)
(declare-fun ch7J () String)
(declare-fun unch17J () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun sc7G () Int)
(declare-fun sc7H () Int)
(declare-fun sc7I () Int)
(declare-fun sc7J () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun var8G () String)
(declare-fun var8H () String)
(declare-fun var8I () String)
(declare-fun var8J () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun unch28G () String)
(declare-fun ch8G () String)
(declare-fun unch18G () String)
(declare-fun unch28H () String)
(declare-fun ch8H () String)
(declare-fun unch18H () String)
(declare-fun unch28I () String)
(declare-fun ch8I () String)
(declare-fun unch18I () String)
(declare-fun unch28J () String)
(declare-fun ch8J () String)
(declare-fun unch18J () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun sc8G () Int)
(declare-fun sc8H () Int)
(declare-fun sc8I () Int)
(declare-fun sc8J () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun var9G () String)
(declare-fun var9H () String)
(declare-fun var9I () String)
(declare-fun var9J () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun unch29G () String)
(declare-fun ch9G () String)
(declare-fun unch19G () String)
(declare-fun unch29H () String)
(declare-fun ch9H () String)
(declare-fun unch19H () String)
(declare-fun unch29I () String)
(declare-fun ch9I () String)
(declare-fun unch19I () String)
(declare-fun unch29J () String)
(declare-fun ch9J () String)
(declare-fun unch19J () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun sc9G () Int)
(declare-fun sc9H () Int)
(declare-fun sc9I () Int)
(declare-fun sc9J () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun var10G () String)
(declare-fun var10H () String)
(declare-fun var10I () String)
(declare-fun var10J () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun unch210G () String)
(declare-fun ch10G () String)
(declare-fun unch110G () String)
(declare-fun unch210H () String)
(declare-fun ch10H () String)
(declare-fun unch110H () String)
(declare-fun unch210I () String)
(declare-fun ch10I () String)
(declare-fun unch110I () String)
(declare-fun unch210J () String)
(declare-fun ch10J () String)
(declare-fun unch110J () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun sc10G () Int)
(declare-fun sc10H () Int)
(declare-fun sc10I () Int)
(declare-fun sc10J () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun var11G () String)
(declare-fun var11H () String)
(declare-fun var11I () String)
(declare-fun var11J () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun unch211G () String)
(declare-fun ch11G () String)
(declare-fun unch111G () String)
(declare-fun unch211H () String)
(declare-fun ch11H () String)
(declare-fun unch111H () String)
(declare-fun unch211I () String)
(declare-fun ch11I () String)
(declare-fun unch111I () String)
(declare-fun unch211J () String)
(declare-fun ch11J () String)
(declare-fun unch111J () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun sc11G () Int)
(declare-fun sc11H () Int)
(declare-fun sc11I () Int)
(declare-fun sc11J () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun var12G () String)
(declare-fun var12H () String)
(declare-fun var12I () String)
(declare-fun var12J () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun unch212G () String)
(declare-fun ch12G () String)
(declare-fun unch112G () String)
(declare-fun unch212H () String)
(declare-fun ch12H () String)
(declare-fun unch112H () String)
(declare-fun unch212I () String)
(declare-fun ch12I () String)
(declare-fun unch112I () String)
(declare-fun unch212J () String)
(declare-fun ch12J () String)
(declare-fun unch112J () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun sc12G () Int)
(declare-fun sc12H () Int)
(declare-fun sc12I () Int)
(declare-fun sc12J () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun var13G () String)
(declare-fun var13H () String)
(declare-fun var13I () String)
(declare-fun var13J () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun unch213G () String)
(declare-fun ch13G () String)
(declare-fun unch113G () String)
(declare-fun unch213H () String)
(declare-fun ch13H () String)
(declare-fun unch113H () String)
(declare-fun unch213I () String)
(declare-fun ch13I () String)
(declare-fun unch113I () String)
(declare-fun unch213J () String)
(declare-fun ch13J () String)
(declare-fun unch113J () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun sc13G () Int)
(declare-fun sc13H () Int)
(declare-fun sc13I () Int)
(declare-fun sc13J () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun var14G () String)
(declare-fun var14H () String)
(declare-fun var14I () String)
(declare-fun var14J () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun unch214G () String)
(declare-fun ch14G () String)
(declare-fun unch114G () String)
(declare-fun unch214H () String)
(declare-fun ch14H () String)
(declare-fun unch114H () String)
(declare-fun unch214I () String)
(declare-fun ch14I () String)
(declare-fun unch114I () String)
(declare-fun unch214J () String)
(declare-fun ch14J () String)
(declare-fun unch114J () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun sc14G () Int)
(declare-fun sc14H () Int)
(declare-fun sc14I () Int)
(declare-fun sc14J () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun var15G () String)
(declare-fun var15H () String)
(declare-fun var15I () String)
(declare-fun var15J () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun unch215G () String)
(declare-fun ch15G () String)
(declare-fun unch115G () String)
(declare-fun unch215H () String)
(declare-fun ch15H () String)
(declare-fun unch115H () String)
(declare-fun unch215I () String)
(declare-fun ch15I () String)
(declare-fun unch115I () String)
(declare-fun unch215J () String)
(declare-fun ch15J () String)
(declare-fun unch115J () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun sc15G () Int)
(declare-fun sc15H () Int)
(declare-fun sc15I () Int)
(declare-fun sc15J () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun var16G () String)
(declare-fun var16H () String)
(declare-fun var16I () String)
(declare-fun var16J () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun unch216G () String)
(declare-fun ch16G () String)
(declare-fun unch116G () String)
(declare-fun unch216H () String)
(declare-fun ch16H () String)
(declare-fun unch116H () String)
(declare-fun unch216I () String)
(declare-fun ch16I () String)
(declare-fun unch116I () String)
(declare-fun unch216J () String)
(declare-fun ch16J () String)
(declare-fun unch116J () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun sc16G () Int)
(declare-fun sc16H () Int)
(declare-fun sc16I () Int)
(declare-fun sc16J () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun var17G () String)
(declare-fun var17H () String)
(declare-fun var17I () String)
(declare-fun var17J () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun unch217G () String)
(declare-fun ch17G () String)
(declare-fun unch117G () String)
(declare-fun unch217H () String)
(declare-fun ch17H () String)
(declare-fun unch117H () String)
(declare-fun unch217I () String)
(declare-fun ch17I () String)
(declare-fun unch117I () String)
(declare-fun unch217J () String)
(declare-fun ch17J () String)
(declare-fun unch117J () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun sc17G () Int)
(declare-fun sc17H () Int)
(declare-fun sc17I () Int)
(declare-fun sc17J () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun var18G () String)
(declare-fun var18H () String)
(declare-fun var18I () String)
(declare-fun var18J () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun unch218G () String)
(declare-fun ch18G () String)
(declare-fun unch118G () String)
(declare-fun unch218H () String)
(declare-fun ch18H () String)
(declare-fun unch118H () String)
(declare-fun unch218I () String)
(declare-fun ch18I () String)
(declare-fun unch118I () String)
(declare-fun unch218J () String)
(declare-fun ch18J () String)
(declare-fun unch118J () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun sc18G () Int)
(declare-fun sc18H () Int)
(declare-fun sc18I () Int)
(declare-fun sc18J () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun var19G () String)
(declare-fun var19H () String)
(declare-fun var19I () String)
(declare-fun var19J () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun unch219G () String)
(declare-fun ch19G () String)
(declare-fun unch119G () String)
(declare-fun unch219H () String)
(declare-fun ch19H () String)
(declare-fun unch119H () String)
(declare-fun unch219I () String)
(declare-fun ch19I () String)
(declare-fun unch119I () String)
(declare-fun unch219J () String)
(declare-fun ch19J () String)
(declare-fun unch119J () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun sc19G () Int)
(declare-fun sc19H () Int)
(declare-fun sc19I () Int)
(declare-fun sc19J () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun var20G () String)
(declare-fun var20H () String)
(declare-fun var20I () String)
(declare-fun var20J () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun unch220G () String)
(declare-fun ch20G () String)
(declare-fun unch120G () String)
(declare-fun unch220H () String)
(declare-fun ch20H () String)
(declare-fun unch120H () String)
(declare-fun unch220I () String)
(declare-fun ch20I () String)
(declare-fun unch120I () String)
(declare-fun unch220J () String)
(declare-fun ch20J () String)
(declare-fun unch120J () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun sc20G () Int)
(declare-fun sc20H () Int)
(declare-fun sc20I () Int)
(declare-fun sc20J () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun var21G () String)
(declare-fun var21H () String)
(declare-fun var21I () String)
(declare-fun var21J () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun unch221G () String)
(declare-fun ch21G () String)
(declare-fun unch121G () String)
(declare-fun unch221H () String)
(declare-fun ch21H () String)
(declare-fun unch121H () String)
(declare-fun unch221I () String)
(declare-fun ch21I () String)
(declare-fun unch121I () String)
(declare-fun unch221J () String)
(declare-fun ch21J () String)
(declare-fun unch121J () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun sc21G () Int)
(declare-fun sc21H () Int)
(declare-fun sc21I () Int)
(declare-fun sc21J () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun var22G () String)
(declare-fun var22H () String)
(declare-fun var22I () String)
(declare-fun var22J () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun unch222G () String)
(declare-fun ch22G () String)
(declare-fun unch122G () String)
(declare-fun unch222H () String)
(declare-fun ch22H () String)
(declare-fun unch122H () String)
(declare-fun unch222I () String)
(declare-fun ch22I () String)
(declare-fun unch122I () String)
(declare-fun unch222J () String)
(declare-fun ch22J () String)
(declare-fun unch122J () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun sc22G () Int)
(declare-fun sc22H () Int)
(declare-fun sc22I () Int)
(declare-fun sc22J () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun var23G () String)
(declare-fun var23H () String)
(declare-fun var23I () String)
(declare-fun var23J () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun unch223G () String)
(declare-fun ch23G () String)
(declare-fun unch123G () String)
(declare-fun unch223H () String)
(declare-fun ch23H () String)
(declare-fun unch123H () String)
(declare-fun unch223I () String)
(declare-fun ch23I () String)
(declare-fun unch123I () String)
(declare-fun unch223J () String)
(declare-fun ch23J () String)
(declare-fun unch123J () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun sc23G () Int)
(declare-fun sc23H () Int)
(declare-fun sc23I () Int)
(declare-fun sc23J () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun var24G () String)
(declare-fun var24H () String)
(declare-fun var24I () String)
(declare-fun var24J () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun unch224G () String)
(declare-fun ch24G () String)
(declare-fun unch124G () String)
(declare-fun unch224H () String)
(declare-fun ch24H () String)
(declare-fun unch124H () String)
(declare-fun unch224I () String)
(declare-fun ch24I () String)
(declare-fun unch124I () String)
(declare-fun unch224J () String)
(declare-fun ch24J () String)
(declare-fun unch124J () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun sc24G () Int)
(declare-fun sc24H () Int)
(declare-fun sc24I () Int)
(declare-fun sc24J () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun var25G () String)
(declare-fun var25H () String)
(declare-fun var25I () String)
(declare-fun var25J () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun unch225G () String)
(declare-fun ch25G () String)
(declare-fun unch125G () String)
(declare-fun unch225H () String)
(declare-fun ch25H () String)
(declare-fun unch125H () String)
(declare-fun unch225I () String)
(declare-fun ch25I () String)
(declare-fun unch125I () String)
(declare-fun unch225J () String)
(declare-fun ch25J () String)
(declare-fun unch125J () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun sc25G () Int)
(declare-fun sc25H () Int)
(declare-fun sc25I () Int)
(declare-fun sc25J () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun var26G () String)
(declare-fun var26H () String)
(declare-fun var26I () String)
(declare-fun var26J () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun unch226G () String)
(declare-fun ch26G () String)
(declare-fun unch126G () String)
(declare-fun unch226H () String)
(declare-fun ch26H () String)
(declare-fun unch126H () String)
(declare-fun unch226I () String)
(declare-fun ch26I () String)
(declare-fun unch126I () String)
(declare-fun unch226J () String)
(declare-fun ch26J () String)
(declare-fun unch126J () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun sc26G () Int)
(declare-fun sc26H () Int)
(declare-fun sc26I () Int)
(declare-fun sc26J () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun var27G () String)
(declare-fun var27H () String)
(declare-fun var27I () String)
(declare-fun var27J () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun unch227G () String)
(declare-fun ch27G () String)
(declare-fun unch127G () String)
(declare-fun unch227H () String)
(declare-fun ch27H () String)
(declare-fun unch127H () String)
(declare-fun unch227I () String)
(declare-fun ch27I () String)
(declare-fun unch127I () String)
(declare-fun unch227J () String)
(declare-fun ch27J () String)
(declare-fun unch127J () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun sc27G () Int)
(declare-fun sc27H () Int)
(declare-fun sc27I () Int)
(declare-fun sc27J () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun var28G () String)
(declare-fun var28H () String)
(declare-fun var28I () String)
(declare-fun var28J () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun unch228G () String)
(declare-fun ch28G () String)
(declare-fun unch128G () String)
(declare-fun unch228H () String)
(declare-fun ch28H () String)
(declare-fun unch128H () String)
(declare-fun unch228I () String)
(declare-fun ch28I () String)
(declare-fun unch128I () String)
(declare-fun unch228J () String)
(declare-fun ch28J () String)
(declare-fun unch128J () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun sc28G () Int)
(declare-fun sc28H () Int)
(declare-fun sc28I () Int)
(declare-fun sc28J () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun var29G () String)
(declare-fun var29H () String)
(declare-fun var29I () String)
(declare-fun var29J () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun unch229G () String)
(declare-fun ch29G () String)
(declare-fun unch129G () String)
(declare-fun unch229H () String)
(declare-fun ch29H () String)
(declare-fun unch129H () String)
(declare-fun unch229I () String)
(declare-fun ch29I () String)
(declare-fun unch129I () String)
(declare-fun unch229J () String)
(declare-fun ch29J () String)
(declare-fun unch129J () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun sc29G () Int)
(declare-fun sc29H () Int)
(declare-fun sc29I () Int)
(declare-fun sc29J () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (<= (str.len var0I) 1))
(assert (<= (str.len var0J) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= (str.++ preI (str.++ stem0 sufI)) (str.++ unch10I (str.++ ch0I unch20I))))
(assert (= (str.++ preJ (str.++ stem0 sufJ)) (str.++ unch10J (str.++ ch0J unch20J))))
(assert (= "zub" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "zubam" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "zuboOi" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "zuXi" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (= (ite (= ch0I var0I) 0 1) sc0I))
(assert (= (ite (= ch0J var0J) 0 1) sc0J))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= sc0I 1))
(assert (<= sc0J 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (<= (str.len var1I) 1))
(assert (<= (str.len var1J) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= (str.++ preI (str.++ stem1 sufI)) (str.++ unch11I (str.++ ch1I unch21I))))
(assert (= (str.++ preJ (str.++ stem1 sufJ)) (str.++ unch11J (str.++ ch1J unch21J))))
(assert (= "sOit" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "sOitam" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "sOitoOi" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "sOiZi" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (= (ite (= ch1I var1I) 0 1) sc1I))
(assert (= (ite (= ch1J var1J) 0 1) sc1J))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= sc1I 1))
(assert (<= sc1J 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (<= (str.len var2I) 1))
(assert (<= (str.len var2J) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= (str.++ preI (str.++ stem2 sufI)) (str.++ unch12I (str.++ ch2I unch22I))))
(assert (= (str.++ preJ (str.++ stem2 sufJ)) (str.++ unch12J (str.++ ch2J unch22J))))
(assert (= "1aZ" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "1aZam" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "1ateOi" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "1ateOi" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (= (ite (= ch2I var2I) 0 1) sc2I))
(assert (= (ite (= ch2J var2J) 0 1) sc2J))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= sc2I 1))
(assert (<= sc2J 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (<= (str.len var3I) 1))
(assert (<= (str.len var3J) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= (str.++ preI (str.++ stem3 sufI)) (str.++ unch13I (str.++ ch3I unch23I))))
(assert (= (str.++ preJ (str.++ stem3 sufJ)) (str.++ unch13J (str.++ ch3J unch23J))))
(assert (= "ko2i3" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "koBe3am" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "koBeleOi" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "koBe3i" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (= (ite (= ch3I var3I) 0 1) sc3I))
(assert (= (ite (= ch3J var3J) 0 1) sc3J))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= sc3I 1))
(assert (<= sc3J 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (<= (str.len var4I) 1))
(assert (<= (str.len var4J) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= (str.++ preI (str.++ stem4 sufI)) (str.++ unch14I (str.++ ch4I unch24I))))
(assert (= (str.++ preJ (str.++ stem4 sufJ)) (str.++ unch14J (str.++ ch4J unch24J))))
(assert (= "zlo4ij" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "zlo4ijam" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "zlo4ijeOi" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "zlo4ijeOi" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (= (ite (= ch4I var4I) 0 1) sc4I))
(assert (= (ite (= ch4J var4J) 0 1) sc4J))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= sc4I 1))
(assert (<= sc4J 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (<= (str.len var5I) 1))
(assert (<= (str.len var5J) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= (str.++ preI (str.++ stem5 sufI)) (str.++ unch15I (str.++ ch5I unch25I))))
(assert (= (str.++ preJ (str.++ stem5 sufJ)) (str.++ unch15J (str.++ ch5J unch25J))))
(assert (= "5i6a7" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "5i6a7am" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "5i6aPeOi" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "5i6a7i" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (= (ite (= ch5I var5I) 0 1) sc5I))
(assert (= (ite (= ch5J var5J) 0 1) sc5J))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= sc5I 1))
(assert (<= sc5J 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (<= (str.len var6I) 1))
(assert (<= (str.len var6J) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= (str.++ preI (str.++ stem6 sufI)) (str.++ unch16I (str.++ ch6I unch26I))))
(assert (= (str.++ preJ (str.++ stem6 sufJ)) (str.++ unch16J (str.++ ch6J unch26J))))
(assert (= "korovaj" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "korovajam" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "korovajeOi" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "korovaji" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (= (ite (= ch6I var6I) 0 1) sc6I))
(assert (= (ite (= ch6J var6J) 0 1) sc6J))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (<= sc6I 1))
(assert (<= sc6J 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (<= (str.len var7G) 1))
(assert (<= (str.len var7H) 1))
(assert (<= (str.len var7I) 1))
(assert (<= (str.len var7J) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= (str.++ preG (str.++ stem7 sufG)) (str.++ unch17G (str.++ ch7G unch27G))))
(assert (= (str.++ preH (str.++ stem7 sufH)) (str.++ unch17H (str.++ ch7H unch27H))))
(assert (= (str.++ preI (str.++ stem7 sufI)) (str.++ unch17I (str.++ ch7I unch27I))))
(assert (= (str.++ preJ (str.++ stem7 sufJ)) (str.++ unch17J (str.++ ch7J unch27J))))
(assert (= "ka5i8" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "kame8am" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "kameneOi" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= "kame8i" (str.++ unch17D (str.++ var7D unch27D))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (= (ite (= ch7G var7G) 0 1) sc7G))
(assert (= (ite (= ch7H var7H) 0 1) sc7H))
(assert (= (ite (= ch7I var7I) 0 1) sc7I))
(assert (= (ite (= ch7J var7J) 0 1) sc7J))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= sc7G 1))
(assert (<= sc7H 1))
(assert (<= sc7I 1))
(assert (<= sc7J 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (<= (str.len var8G) 1))
(assert (<= (str.len var8H) 1))
(assert (<= (str.len var8I) 1))
(assert (<= (str.len var8J) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= (str.++ preG (str.++ stem8 sufG)) (str.++ unch18G (str.++ ch8G unch28G))))
(assert (= (str.++ preH (str.++ stem8 sufH)) (str.++ unch18H (str.++ ch8H unch28H))))
(assert (= (str.++ preI (str.++ stem8 sufI)) (str.++ unch18I (str.++ ch8I unch28I))))
(assert (= (str.++ preJ (str.++ stem8 sufJ)) (str.++ unch18J (str.++ ch8J unch28J))))
(assert (= "5i4" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "5i4am" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "5ideOi" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= "5i4i" (str.++ unch18D (str.++ var8D unch28D))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (= (ite (= ch8G var8G) 0 1) sc8G))
(assert (= (ite (= ch8H var8H) 0 1) sc8H))
(assert (= (ite (= ch8I var8I) 0 1) sc8I))
(assert (= (ite (= ch8J var8J) 0 1) sc8J))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= sc8G 1))
(assert (<= sc8H 1))
(assert (<= sc8I 1))
(assert (<= sc8J 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (<= (str.len var9G) 1))
(assert (<= (str.len var9H) 1))
(assert (<= (str.len var9I) 1))
(assert (<= (str.len var9J) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= (str.++ preG (str.++ stem9 sufG)) (str.++ unch19G (str.++ ch9G unch29G))))
(assert (= (str.++ preH (str.++ stem9 sufH)) (str.++ unch19H (str.++ ch9H unch29H))))
(assert (= (str.++ preI (str.++ stem9 sufI)) (str.++ unch19I (str.++ ch9I unch29I))))
(assert (= (str.++ preJ (str.++ stem9 sufJ)) (str.++ unch19J (str.++ ch9J unch29J))))
(assert (= "x3iw" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "x3ivam" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "x3ivoOi" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= "x3iOi" (str.++ unch19D (str.++ var9D unch29D))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (= (ite (= ch9G var9G) 0 1) sc9G))
(assert (= (ite (= ch9H var9H) 0 1) sc9H))
(assert (= (ite (= ch9I var9I) 0 1) sc9I))
(assert (= (ite (= ch9J var9J) 0 1) sc9J))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= sc9G 1))
(assert (<= sc9H 1))
(assert (<= sc9I 1))
(assert (<= sc9J 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (<= (str.len var10G) 1))
(assert (<= (str.len var10H) 1))
(assert (<= (str.len var10I) 1))
(assert (<= (str.len var10J) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= (str.++ preG (str.++ stem10 sufG)) (str.++ unch110G (str.++ ch10G unch210G))))
(assert (= (str.++ preH (str.++ stem10 sufH)) (str.++ unch110H (str.++ ch10H unch210H))))
(assert (= (str.++ preI (str.++ stem10 sufI)) (str.++ unch110I (str.++ ch10I unch210I))))
(assert (= (str.++ preJ (str.++ stem10 sufJ)) (str.++ unch110J (str.++ ch10J unch210J))))
(assert (= "holub" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "holubam" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "holuboOi" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= "holuXi" (str.++ unch110D (str.++ var10D unch210D))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (= (ite (= ch10G var10G) 0 1) sc10G))
(assert (= (ite (= ch10H var10H) 0 1) sc10H))
(assert (= (ite (= ch10I var10I) 0 1) sc10I))
(assert (= (ite (= ch10J var10J) 0 1) sc10J))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= sc10G 1))
(assert (<= sc10H 1))
(assert (<= sc10I 1))
(assert (<= sc10J 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (<= (str.len var11G) 1))
(assert (<= (str.len var11H) 1))
(assert (<= (str.len var11I) 1))
(assert (<= (str.len var11J) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= (str.++ preG (str.++ stem11 sufG)) (str.++ unch111G (str.++ ch11G unch211G))))
(assert (= (str.++ preH (str.++ stem11 sufH)) (str.++ unch111H (str.++ ch11H unch211H))))
(assert (= (str.++ preI (str.++ stem11 sufI)) (str.++ unch111I (str.++ ch11I unch211I))))
(assert (= (str.++ preJ (str.++ stem11 sufJ)) (str.++ unch111J (str.++ ch11J unch211J))))
(assert (= "6in" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "6inam" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "6inoOi" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= "6i8i" (str.++ unch111D (str.++ var11D unch211D))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (= (ite (= ch11G var11G) 0 1) sc11G))
(assert (= (ite (= ch11H var11H) 0 1) sc11H))
(assert (= (ite (= ch11I var11I) 0 1) sc11I))
(assert (= (ite (= ch11J var11J) 0 1) sc11J))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= sc11G 1))
(assert (<= sc11H 1))
(assert (<= sc11I 1))
(assert (<= sc11J 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (<= (str.len var12G) 1))
(assert (<= (str.len var12H) 1))
(assert (<= (str.len var12I) 1))
(assert (<= (str.len var12J) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= (str.++ preG (str.++ stem12 sufG)) (str.++ unch112G (str.++ ch12G unch212G))))
(assert (= (str.++ preH (str.++ stem12 sufH)) (str.++ unch112H (str.++ ch12H unch212H))))
(assert (= (str.++ preI (str.++ stem12 sufI)) (str.++ unch112I (str.++ ch12I unch212I))))
(assert (= (str.++ preJ (str.++ stem12 sufJ)) (str.++ unch112J (str.++ ch12J unch212J))))
(assert (= "leXi4" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "lebe4am" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "lebedeOi" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= "lebe4i" (str.++ unch112D (str.++ var12D unch212D))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (= (ite (= ch12G var12G) 0 1) sc12G))
(assert (= (ite (= ch12H var12H) 0 1) sc12H))
(assert (= (ite (= ch12I var12I) 0 1) sc12I))
(assert (= (ite (= ch12J var12J) 0 1) sc12J))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= sc12G 1))
(assert (<= sc12H 1))
(assert (<= sc12I 1))
(assert (<= sc12J 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (<= (str.len var13G) 1))
(assert (<= (str.len var13H) 1))
(assert (<= (str.len var13I) 1))
(assert (<= (str.len var13J) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= (str.++ preG (str.++ stem13 sufG)) (str.++ unch113G (str.++ ch13G unch213G))))
(assert (= (str.++ preH (str.++ stem13 sufH)) (str.++ unch113H (str.++ ch13H unch213H))))
(assert (= (str.++ preI (str.++ stem13 sufI)) (str.++ unch113I (str.++ ch13I unch213I))))
(assert (= (str.++ preJ (str.++ stem13 sufJ)) (str.++ unch113J (str.++ ch13J unch213J))))
(assert (= "su6id" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "su6idam" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "su6idoOi" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= "su6idoOi" (str.++ unch113E (str.++ var13E unch213E))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (= (ite (= ch13G var13G) 0 1) sc13G))
(assert (= (ite (= ch13H var13H) 0 1) sc13H))
(assert (= (ite (= ch13I var13I) 0 1) sc13I))
(assert (= (ite (= ch13J var13J) 0 1) sc13J))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= sc13G 1))
(assert (<= sc13H 1))
(assert (<= sc13I 1))
(assert (<= sc13J 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (<= (str.len var14G) 1))
(assert (<= (str.len var14H) 1))
(assert (<= (str.len var14I) 1))
(assert (<= (str.len var14J) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= (str.++ preG (str.++ stem14 sufG)) (str.++ unch114G (str.++ ch14G unch214G))))
(assert (= (str.++ preH (str.++ stem14 sufH)) (str.++ unch114H (str.++ ch14H unch214H))))
(assert (= (str.++ preI (str.++ stem14 sufI)) (str.++ unch114I (str.++ ch14I unch214I))))
(assert (= (str.++ preJ (str.++ stem14 sufJ)) (str.++ unch114J (str.++ ch14J unch214J))))
(assert (= "EoloOik" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "EoloOikam" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "EoloOikoOi" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= "EoloOikoOi" (str.++ unch114E (str.++ var14E unch214E))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (= (ite (= ch14G var14G) 0 1) sc14G))
(assert (= (ite (= ch14H var14H) 0 1) sc14H))
(assert (= (ite (= ch14I var14I) 0 1) sc14I))
(assert (= (ite (= ch14J var14J) 0 1) sc14J))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= sc14G 1))
(assert (<= sc14H 1))
(assert (<= sc14I 1))
(assert (<= sc14J 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (<= (str.len var15G) 1))
(assert (<= (str.len var15H) 1))
(assert (<= (str.len var15I) 1))
(assert (<= (str.len var15J) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= (str.++ preG (str.++ stem15 sufG)) (str.++ unch115G (str.++ ch15G unch215G))))
(assert (= (str.++ preH (str.++ stem15 sufH)) (str.++ unch115H (str.++ ch15H unch215H))))
(assert (= (str.++ preI (str.++ stem15 sufI)) (str.++ unch115I (str.++ ch15I unch215I))))
(assert (= (str.++ preJ (str.++ stem15 sufJ)) (str.++ unch115J (str.++ ch15J unch215J))))
(assert (= "3id" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "ledam" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "ledoOi" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= "le4i" (str.++ unch115D (str.++ var15D unch215D))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (= (ite (= ch15G var15G) 0 1) sc15G))
(assert (= (ite (= ch15H var15H) 0 1) sc15H))
(assert (= (ite (= ch15I var15I) 0 1) sc15I))
(assert (= (ite (= ch15J var15J) 0 1) sc15J))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= sc15G 1))
(assert (<= sc15H 1))
(assert (<= sc15I 1))
(assert (<= sc15J 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (<= (str.len var16G) 1))
(assert (<= (str.len var16H) 1))
(assert (<= (str.len var16I) 1))
(assert (<= (str.len var16J) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= (str.++ preG (str.++ stem16 sufG)) (str.++ unch116G (str.++ ch16G unch216G))))
(assert (= (str.++ preH (str.++ stem16 sufH)) (str.++ unch116H (str.++ ch16H unch216H))))
(assert (= (str.++ preI (str.++ stem16 sufI)) (str.++ unch116I (str.++ ch16I unch216I))))
(assert (= (str.++ preJ (str.++ stem16 sufJ)) (str.++ unch116J (str.++ ch16J unch216J))))
(assert (= "bi3" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bo3am" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "boleOi" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= "bo3i" (str.++ unch116D (str.++ var16D unch216D))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (= (ite (= ch16G var16G) 0 1) sc16G))
(assert (= (ite (= ch16H var16H) 0 1) sc16H))
(assert (= (ite (= ch16I var16I) 0 1) sc16I))
(assert (= (ite (= ch16J var16J) 0 1) sc16J))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= sc16G 1))
(assert (<= sc16H 1))
(assert (<= sc16I 1))
(assert (<= sc16J 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (<= (str.len var17G) 1))
(assert (<= (str.len var17H) 1))
(assert (<= (str.len var17I) 1))
(assert (<= (str.len var17J) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= (str.++ preG (str.++ stem17 sufG)) (str.++ unch117G (str.++ ch17G unch217G))))
(assert (= (str.++ preH (str.++ stem17 sufH)) (str.++ unch117H (str.++ ch17H unch217H))))
(assert (= (str.++ preI (str.++ stem17 sufI)) (str.++ unch117I (str.++ ch17I unch217I))))
(assert (= (str.++ preJ (str.++ stem17 sufJ)) (str.++ unch117J (str.++ ch17J unch217J))))
(assert (= "riw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "rovam" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "rovoOi" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= "roOi" (str.++ unch117D (str.++ var17D unch217D))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (= (ite (= ch17G var17G) 0 1) sc17G))
(assert (= (ite (= ch17H var17H) 0 1) sc17H))
(assert (= (ite (= ch17I var17I) 0 1) sc17I))
(assert (= (ite (= ch17J var17J) 0 1) sc17J))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= sc17G 1))
(assert (<= sc17H 1))
(assert (<= sc17I 1))
(assert (<= sc17J 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (<= (str.len var18G) 1))
(assert (<= (str.len var18H) 1))
(assert (<= (str.len var18I) 1))
(assert (<= (str.len var18J) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= (str.++ preG (str.++ stem18 sufG)) (str.++ unch118G (str.++ ch18G unch218G))))
(assert (= (str.++ preH (str.++ stem18 sufH)) (str.++ unch118H (str.++ ch18H unch218H))))
(assert (= (str.++ preI (str.++ stem18 sufI)) (str.++ unch118I (str.++ ch18I unch218I))))
(assert (= (str.++ preJ (str.++ stem18 sufJ)) (str.++ unch118J (str.++ ch18J unch218J))))
(assert (= "stiw" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "stolam" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "stoloOi" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= "sto3i" (str.++ unch118D (str.++ var18D unch218D))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (= (ite (= ch18G var18G) 0 1) sc18G))
(assert (= (ite (= ch18H var18H) 0 1) sc18H))
(assert (= (ite (= ch18I var18I) 0 1) sc18I))
(assert (= (ite (= ch18J var18J) 0 1) sc18J))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= sc18G 1))
(assert (<= sc18H 1))
(assert (<= sc18I 1))
(assert (<= sc18J 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (<= (str.len var19G) 1))
(assert (<= (str.len var19H) 1))
(assert (<= (str.len var19I) 1))
(assert (<= (str.len var19J) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= (str.++ preG (str.++ stem19 sufG)) (str.++ unch119G (str.++ ch19G unch219G))))
(assert (= (str.++ preH (str.++ stem19 sufH)) (str.++ unch119H (str.++ ch19H unch219H))))
(assert (= (str.++ preI (str.++ stem19 sufI)) (str.++ unch119I (str.++ ch19I unch219I))))
(assert (= (str.++ preJ (str.++ stem19 sufJ)) (str.++ unch119J (str.++ ch19J unch219J))))
(assert (= "4id" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "4idam" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "4idoOi" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= "4idoOi" (str.++ unch119E (str.++ var19E unch219E))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (= (ite (= ch19G var19G) 0 1) sc19G))
(assert (= (ite (= ch19H var19H) 0 1) sc19H))
(assert (= (ite (= ch19I var19I) 0 1) sc19I))
(assert (= (ite (= ch19J var19J) 0 1) sc19J))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= sc19G 1))
(assert (<= sc19H 1))
(assert (<= sc19I 1))
(assert (<= sc19J 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (<= (str.len var20G) 1))
(assert (<= (str.len var20H) 1))
(assert (<= (str.len var20I) 1))
(assert (<= (str.len var20J) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= (str.++ preG (str.++ stem20 sufG)) (str.++ unch120G (str.++ ch20G unch220G))))
(assert (= (str.++ preH (str.++ stem20 sufH)) (str.++ unch120H (str.++ ch20H unch220H))))
(assert (= (str.++ preI (str.++ stem20 sufI)) (str.++ unch120I (str.++ ch20I unch220I))))
(assert (= (str.++ preJ (str.++ stem20 sufJ)) (str.++ unch120J (str.++ ch20J unch220J))))
(assert (= "3it" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "3otam" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "3otoOi" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= "3oZi" (str.++ unch120D (str.++ var20D unch220D))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (= (ite (= ch20G var20G) 0 1) sc20G))
(assert (= (ite (= ch20H var20H) 0 1) sc20H))
(assert (= (ite (= ch20I var20I) 0 1) sc20I))
(assert (= (ite (= ch20J var20J) 0 1) sc20J))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= sc20G 1))
(assert (<= sc20H 1))
(assert (<= sc20I 1))
(assert (<= sc20J 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (<= (str.len var21G) 1))
(assert (<= (str.len var21H) 1))
(assert (<= (str.len var21I) 1))
(assert (<= (str.len var21J) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= (str.++ preG (str.++ stem21 sufG)) (str.++ unch121G (str.++ ch21G unch221G))))
(assert (= (str.++ preH (str.++ stem21 sufH)) (str.++ unch121H (str.++ ch21H unch221H))))
(assert (= (str.++ preI (str.++ stem21 sufI)) (str.++ unch121I (str.++ ch21I unch221I))))
(assert (= (str.++ preJ (str.++ stem21 sufJ)) (str.++ unch121J (str.++ ch21J unch221J))))
(assert (= "mist" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "mostam" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "mostoOi" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= "mosZi" (str.++ unch121D (str.++ var21D unch221D))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (= (ite (= ch21G var21G) 0 1) sc21G))
(assert (= (ite (= ch21H var21H) 0 1) sc21H))
(assert (= (ite (= ch21I var21I) 0 1) sc21I))
(assert (= (ite (= ch21J var21J) 0 1) sc21J))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= sc21G 1))
(assert (<= sc21H 1))
(assert (<= sc21I 1))
(assert (<= sc21J 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (<= (str.len var22G) 1))
(assert (<= (str.len var22H) 1))
(assert (<= (str.len var22I) 1))
(assert (<= (str.len var22J) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= (str.++ preG (str.++ stem22 sufG)) (str.++ unch122G (str.++ ch22G unch222G))))
(assert (= (str.++ preH (str.++ stem22 sufH)) (str.++ unch122H (str.++ ch22H unch222H))))
(assert (= (str.++ preI (str.++ stem22 sufI)) (str.++ unch122I (str.++ ch22I unch222I))))
(assert (= (str.++ preJ (str.++ stem22 sufJ)) (str.++ unch122J (str.++ ch22J unch222J))))
(assert (= "veEir" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "veEoram" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "veEoroOi" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= "veEo9i" (str.++ unch122D (str.++ var22D unch222D))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (= (ite (= ch22G var22G) 0 1) sc22G))
(assert (= (ite (= ch22H var22H) 0 1) sc22H))
(assert (= (ite (= ch22I var22I) 0 1) sc22I))
(assert (= (ite (= ch22J var22J) 0 1) sc22J))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= sc22G 1))
(assert (<= sc22H 1))
(assert (<= sc22I 1))
(assert (<= sc22J 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (<= (str.len var23G) 1))
(assert (<= (str.len var23H) 1))
(assert (<= (str.len var23I) 1))
(assert (<= (str.len var23J) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= (str.++ preG (str.++ stem23 sufG)) (str.++ unch123G (str.++ ch23G unch223G))))
(assert (= (str.++ preH (str.++ stem23 sufH)) (str.++ unch123H (str.++ ch23H unch223H))))
(assert (= (str.++ preI (str.++ stem23 sufI)) (str.++ unch123I (str.++ ch23I unch223I))))
(assert (= (str.++ preJ (str.++ stem23 sufJ)) (str.++ unch123J (str.++ ch23J unch223J))))
(assert (= "Zilo" (str.++ unch123F (str.++ var23F unch223F))))
(assert (= "Zila" (str.++ unch123G (str.++ var23G unch223G))))
(assert (= "Zilu" (str.++ unch123H (str.++ var23H unch223H))))
(assert (= "Zi3i" (str.++ unch123I (str.++ var23I unch223I))))
(assert (= "Ziw" (str.++ unch123J (str.++ var23J unch223J))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (= (ite (= ch23G var23G) 0 1) sc23G))
(assert (= (ite (= ch23H var23H) 0 1) sc23H))
(assert (= (ite (= ch23I var23I) 0 1) sc23I))
(assert (= (ite (= ch23J var23J) 0 1) sc23J))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= sc23G 1))
(assert (<= sc23H 1))
(assert (<= sc23I 1))
(assert (<= sc23J 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (<= (str.len var24G) 1))
(assert (<= (str.len var24H) 1))
(assert (<= (str.len var24I) 1))
(assert (<= (str.len var24J) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= (str.++ preG (str.++ stem24 sufG)) (str.++ unch124G (str.++ ch24G unch224G))))
(assert (= (str.++ preH (str.++ stem24 sufH)) (str.++ unch124H (str.++ ch24H unch224H))))
(assert (= (str.++ preI (str.++ stem24 sufI)) (str.++ unch124I (str.++ ch24I unch224I))))
(assert (= (str.++ preJ (str.++ stem24 sufJ)) (str.++ unch124J (str.++ ch24J unch224J))))
(assert (= "koleso" (str.++ unch124F (str.++ var24F unch224F))))
(assert (= "kolesa" (str.++ unch124G (str.++ var24G unch224G))))
(assert (= "kolesu" (str.++ unch124H (str.++ var24H unch224H))))
(assert (= "kole6i" (str.++ unch124I (str.++ var24I unch224I))))
(assert (= "ko3is" (str.++ unch124J (str.++ var24J unch224J))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (= (ite (= ch24G var24G) 0 1) sc24G))
(assert (= (ite (= ch24H var24H) 0 1) sc24H))
(assert (= (ite (= ch24I var24I) 0 1) sc24I))
(assert (= (ite (= ch24J var24J) 0 1) sc24J))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= sc24G 1))
(assert (<= sc24H 1))
(assert (<= sc24I 1))
(assert (<= sc24J 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (<= (str.len var25G) 1))
(assert (<= (str.len var25H) 1))
(assert (<= (str.len var25I) 1))
(assert (<= (str.len var25J) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= (str.++ preG (str.++ stem25 sufG)) (str.++ unch125G (str.++ ch25G unch225G))))
(assert (= (str.++ preH (str.++ stem25 sufH)) (str.++ unch125H (str.++ ch25H unch225H))))
(assert (= (str.++ preI (str.++ stem25 sufI)) (str.++ unch125I (str.++ ch25I unch225I))))
(assert (= (str.++ preJ (str.++ stem25 sufJ)) (str.++ unch125J (str.++ ch25J unch225J))))
(assert (= "ozero" (str.++ unch125F (str.++ var25F unch225F))))
(assert (= "ozera" (str.++ unch125G (str.++ var25G unch225G))))
(assert (= "ozeru" (str.++ unch125H (str.++ var25H unch225H))))
(assert (= "oze9i" (str.++ unch125I (str.++ var25I unch225I))))
(assert (= "o1ir" (str.++ unch125J (str.++ var25J unch225J))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (= (ite (= ch25G var25G) 0 1) sc25G))
(assert (= (ite (= ch25H var25H) 0 1) sc25H))
(assert (= (ite (= ch25I var25I) 0 1) sc25I))
(assert (= (ite (= ch25J var25J) 0 1) sc25J))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= sc25G 1))
(assert (<= sc25H 1))
(assert (<= sc25I 1))
(assert (<= sc25J 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (<= (str.len var26G) 1))
(assert (<= (str.len var26H) 1))
(assert (<= (str.len var26I) 1))
(assert (<= (str.len var26J) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= (str.++ preG (str.++ stem26 sufG)) (str.++ unch126G (str.++ ch26G unch226G))))
(assert (= (str.++ preH (str.++ stem26 sufH)) (str.++ unch126H (str.++ ch26H unch226H))))
(assert (= (str.++ preI (str.++ stem26 sufI)) (str.++ unch126I (str.++ ch26I unch226I))))
(assert (= (str.++ preJ (str.++ stem26 sufJ)) (str.++ unch126J (str.++ ch26J unch226J))))
(assert (= "selo" (str.++ unch126F (str.++ var26F unch226F))))
(assert (= "sela" (str.++ unch126G (str.++ var26G unch226G))))
(assert (= "selu" (str.++ unch126H (str.++ var26H unch226H))))
(assert (= "se3i" (str.++ unch126I (str.++ var26I unch226I))))
(assert (= "6iw" (str.++ unch126J (str.++ var26J unch226J))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (= (ite (= ch26G var26G) 0 1) sc26G))
(assert (= (ite (= ch26H var26H) 0 1) sc26H))
(assert (= (ite (= ch26I var26I) 0 1) sc26I))
(assert (= (ite (= ch26J var26J) 0 1) sc26J))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= sc26G 1))
(assert (<= sc26H 1))
(assert (<= sc26I 1))
(assert (<= sc26J 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (<= (str.len var27G) 1))
(assert (<= (str.len var27H) 1))
(assert (<= (str.len var27I) 1))
(assert (<= (str.len var27J) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= (str.++ preG (str.++ stem27 sufG)) (str.++ unch127G (str.++ ch27G unch227G))))
(assert (= (str.++ preH (str.++ stem27 sufH)) (str.++ unch127H (str.++ ch27H unch227H))))
(assert (= (str.++ preI (str.++ stem27 sufI)) (str.++ unch127I (str.++ ch27I unch227I))))
(assert (= (str.++ preJ (str.++ stem27 sufJ)) (str.++ unch127J (str.++ ch27J unch227J))))
(assert (= "pole" (str.++ unch127F (str.++ var27F unch227F))))
(assert (= "po3a" (str.++ unch127G (str.++ var27G unch227G))))
(assert (= "po3u" (str.++ unch127H (str.++ var27H unch227H))))
(assert (= "po3i" (str.++ unch127I (str.++ var27I unch227I))))
(assert (= "pi3" (str.++ unch127J (str.++ var27J unch227J))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (= (ite (= ch27G var27G) 0 1) sc27G))
(assert (= (ite (= ch27H var27H) 0 1) sc27H))
(assert (= (ite (= ch27I var27I) 0 1) sc27I))
(assert (= (ite (= ch27J var27J) 0 1) sc27J))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= sc27G 1))
(assert (<= sc27H 1))
(assert (<= sc27I 1))
(assert (<= sc27J 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (<= (str.len var28G) 1))
(assert (<= (str.len var28H) 1))
(assert (<= (str.len var28I) 1))
(assert (<= (str.len var28J) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= (str.++ preG (str.++ stem28 sufG)) (str.++ unch128G (str.++ ch28G unch228G))))
(assert (= (str.++ preH (str.++ stem28 sufH)) (str.++ unch128H (str.++ ch28H unch228H))))
(assert (= (str.++ preI (str.++ stem28 sufI)) (str.++ unch128I (str.++ ch28I unch228I))))
(assert (= (str.++ preJ (str.++ stem28 sufJ)) (str.++ unch128J (str.++ ch28J unch228J))))
(assert (= "slovo" (str.++ unch128F (str.++ var28F unch228F))))
(assert (= "slova" (str.++ unch128G (str.++ var28G unch228G))))
(assert (= "slovu" (str.++ unch128H (str.++ var28H unch228H))))
(assert (= "sloOi" (str.++ unch128I (str.++ var28I unch228I))))
(assert (= "sliw" (str.++ unch128J (str.++ var28J unch228J))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (= (ite (= ch28G var28G) 0 1) sc28G))
(assert (= (ite (= ch28H var28H) 0 1) sc28H))
(assert (= (ite (= ch28I var28I) 0 1) sc28I))
(assert (= (ite (= ch28J var28J) 0 1) sc28J))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= sc28G 1))
(assert (<= sc28H 1))
(assert (<= sc28I 1))
(assert (<= sc28J 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (<= (str.len var29G) 1))
(assert (<= (str.len var29H) 1))
(assert (<= (str.len var29I) 1))
(assert (<= (str.len var29J) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= (str.++ preG (str.++ stem29 sufG)) (str.++ unch129G (str.++ ch29G unch229G))))
(assert (= (str.++ preH (str.++ stem29 sufH)) (str.++ unch129H (str.++ ch29H unch229H))))
(assert (= (str.++ preI (str.++ stem29 sufI)) (str.++ unch129I (str.++ ch29I unch229I))))
(assert (= (str.++ preJ (str.++ stem29 sufJ)) (str.++ unch129J (str.++ ch29J unch229J))))
(assert (= "more" (str.++ unch129F (str.++ var29F unch229F))))
(assert (= "mo9a" (str.++ unch129G (str.++ var29G unch229G))))
(assert (= "mo9u" (str.++ unch129H (str.++ var29H unch229H))))
(assert (= "mo9i" (str.++ unch129I (str.++ var29I unch229I))))
(assert (= "mi9" (str.++ unch129J (str.++ var29J unch229J))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (= (ite (= ch29G var29G) 0 1) sc29G))
(assert (= (ite (= ch29H var29H) 0 1) sc29H))
(assert (= (ite (= ch29I var29I) 0 1) sc29I))
(assert (= (ite (= ch29J var29J) 0 1) sc29J))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= sc29G 1))
(assert (<= sc29H 1))
(assert (<= sc29I 1))
(assert (<= sc29J 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      sc0I
      sc0J
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      sc1I
      sc1J
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      sc2I
      sc2J
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      sc3I
      sc3J
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      sc4I
      sc4J
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      sc5I
      sc5J
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H
      sc6I
      sc6J
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      sc7G
      sc7H
      sc7I
      sc7J
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      sc8G
      sc8H
      sc8I
      sc8J
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      sc9G
      sc9H
      sc9I
      sc9J
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      sc10G
      sc10H
      sc10I
      sc10J
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      sc11G
      sc11H
      sc11I
      sc11J
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      sc12G
      sc12H
      sc12I
      sc12J
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      sc13G
      sc13H
      sc13I
      sc13J
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      sc14G
      sc14H
      sc14I
      sc14J
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      sc15G
      sc15H
      sc15I
      sc15J
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      sc16G
      sc16H
      sc16I
      sc16J
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      sc17G
      sc17H
      sc17I
      sc17J
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      sc18G
      sc18H
      sc18I
      sc18J
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      sc19G
      sc19H
      sc19I
      sc19J
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      sc20G
      sc20H
      sc20I
      sc20J
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      sc21G
      sc21H
      sc21I
      sc21J
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      sc22G
      sc22H
      sc22I
      sc22J
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      sc23G
      sc23H
      sc23I
      sc23J
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      sc24G
      sc24H
      sc24I
      sc24J
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      sc25G
      sc25H
      sc25I
      sc25J
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      sc26G
      sc26H
      sc26I
      sc26J
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      sc27G
      sc27H
      sc27I
      sc27J
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      sc28G
      sc28H
      sc28I
      sc28J
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      sc29G
      sc29H
      sc29I
      sc29J)
   7))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun var0I () String)
(declare-fun var0J () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun unch20I () String)
(declare-fun ch0I () String)
(declare-fun unch10I () String)
(declare-fun sufI () String)
(declare-fun preI () String)
(declare-fun unch20J () String)
(declare-fun ch0J () String)
(declare-fun unch10J () String)
(declare-fun sufJ () String)
(declare-fun preJ () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun sc0I () Int)
(declare-fun sc0J () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun var1I () String)
(declare-fun var1J () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun unch21I () String)
(declare-fun ch1I () String)
(declare-fun unch11I () String)
(declare-fun unch21J () String)
(declare-fun ch1J () String)
(declare-fun unch11J () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun sc1I () Int)
(declare-fun sc1J () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun var2I () String)
(declare-fun var2J () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun unch22I () String)
(declare-fun ch2I () String)
(declare-fun unch12I () String)
(declare-fun unch22J () String)
(declare-fun ch2J () String)
(declare-fun unch12J () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun sc2I () Int)
(declare-fun sc2J () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun var3I () String)
(declare-fun var3J () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun unch23I () String)
(declare-fun ch3I () String)
(declare-fun unch13I () String)
(declare-fun unch23J () String)
(declare-fun ch3J () String)
(declare-fun unch13J () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun sc3I () Int)
(declare-fun sc3J () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun var4I () String)
(declare-fun var4J () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun unch24I () String)
(declare-fun ch4I () String)
(declare-fun unch14I () String)
(declare-fun unch24J () String)
(declare-fun ch4J () String)
(declare-fun unch14J () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun sc4I () Int)
(declare-fun sc4J () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun var5I () String)
(declare-fun var5J () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun unch25I () String)
(declare-fun ch5I () String)
(declare-fun unch15I () String)
(declare-fun unch25J () String)
(declare-fun ch5J () String)
(declare-fun unch15J () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun sc5I () Int)
(declare-fun sc5J () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun var6I () String)
(declare-fun var6J () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun unch26I () String)
(declare-fun ch6I () String)
(declare-fun unch16I () String)
(declare-fun unch26J () String)
(declare-fun ch6J () String)
(declare-fun unch16J () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(declare-fun sc6I () Int)
(declare-fun sc6J () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun var7G () String)
(declare-fun var7H () String)
(declare-fun var7I () String)
(declare-fun var7J () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun unch27G () String)
(declare-fun ch7G () String)
(declare-fun unch17G () String)
(declare-fun unch27H () String)
(declare-fun ch7H () String)
(declare-fun unch17H () String)
(declare-fun unch27I () String)
(declare-fun ch7I () String)
(declare-fun unch17I () String)
(declare-fun unch27J () String)
(declare-fun ch7J () String)
(declare-fun unch17J () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun sc7G () Int)
(declare-fun sc7H () Int)
(declare-fun sc7I () Int)
(declare-fun sc7J () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun var8G () String)
(declare-fun var8H () String)
(declare-fun var8I () String)
(declare-fun var8J () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun unch28G () String)
(declare-fun ch8G () String)
(declare-fun unch18G () String)
(declare-fun unch28H () String)
(declare-fun ch8H () String)
(declare-fun unch18H () String)
(declare-fun unch28I () String)
(declare-fun ch8I () String)
(declare-fun unch18I () String)
(declare-fun unch28J () String)
(declare-fun ch8J () String)
(declare-fun unch18J () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun sc8G () Int)
(declare-fun sc8H () Int)
(declare-fun sc8I () Int)
(declare-fun sc8J () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun var9G () String)
(declare-fun var9H () String)
(declare-fun var9I () String)
(declare-fun var9J () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun unch29G () String)
(declare-fun ch9G () String)
(declare-fun unch19G () String)
(declare-fun unch29H () String)
(declare-fun ch9H () String)
(declare-fun unch19H () String)
(declare-fun unch29I () String)
(declare-fun ch9I () String)
(declare-fun unch19I () String)
(declare-fun unch29J () String)
(declare-fun ch9J () String)
(declare-fun unch19J () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun sc9G () Int)
(declare-fun sc9H () Int)
(declare-fun sc9I () Int)
(declare-fun sc9J () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun var10G () String)
(declare-fun var10H () String)
(declare-fun var10I () String)
(declare-fun var10J () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun unch210G () String)
(declare-fun ch10G () String)
(declare-fun unch110G () String)
(declare-fun unch210H () String)
(declare-fun ch10H () String)
(declare-fun unch110H () String)
(declare-fun unch210I () String)
(declare-fun ch10I () String)
(declare-fun unch110I () String)
(declare-fun unch210J () String)
(declare-fun ch10J () String)
(declare-fun unch110J () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun sc10G () Int)
(declare-fun sc10H () Int)
(declare-fun sc10I () Int)
(declare-fun sc10J () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun var11G () String)
(declare-fun var11H () String)
(declare-fun var11I () String)
(declare-fun var11J () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun unch211G () String)
(declare-fun ch11G () String)
(declare-fun unch111G () String)
(declare-fun unch211H () String)
(declare-fun ch11H () String)
(declare-fun unch111H () String)
(declare-fun unch211I () String)
(declare-fun ch11I () String)
(declare-fun unch111I () String)
(declare-fun unch211J () String)
(declare-fun ch11J () String)
(declare-fun unch111J () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun sc11G () Int)
(declare-fun sc11H () Int)
(declare-fun sc11I () Int)
(declare-fun sc11J () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun var12G () String)
(declare-fun var12H () String)
(declare-fun var12I () String)
(declare-fun var12J () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun unch212G () String)
(declare-fun ch12G () String)
(declare-fun unch112G () String)
(declare-fun unch212H () String)
(declare-fun ch12H () String)
(declare-fun unch112H () String)
(declare-fun unch212I () String)
(declare-fun ch12I () String)
(declare-fun unch112I () String)
(declare-fun unch212J () String)
(declare-fun ch12J () String)
(declare-fun unch112J () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun sc12G () Int)
(declare-fun sc12H () Int)
(declare-fun sc12I () Int)
(declare-fun sc12J () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun var13G () String)
(declare-fun var13H () String)
(declare-fun var13I () String)
(declare-fun var13J () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun unch213G () String)
(declare-fun ch13G () String)
(declare-fun unch113G () String)
(declare-fun unch213H () String)
(declare-fun ch13H () String)
(declare-fun unch113H () String)
(declare-fun unch213I () String)
(declare-fun ch13I () String)
(declare-fun unch113I () String)
(declare-fun unch213J () String)
(declare-fun ch13J () String)
(declare-fun unch113J () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun sc13G () Int)
(declare-fun sc13H () Int)
(declare-fun sc13I () Int)
(declare-fun sc13J () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun var14G () String)
(declare-fun var14H () String)
(declare-fun var14I () String)
(declare-fun var14J () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun unch214G () String)
(declare-fun ch14G () String)
(declare-fun unch114G () String)
(declare-fun unch214H () String)
(declare-fun ch14H () String)
(declare-fun unch114H () String)
(declare-fun unch214I () String)
(declare-fun ch14I () String)
(declare-fun unch114I () String)
(declare-fun unch214J () String)
(declare-fun ch14J () String)
(declare-fun unch114J () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun sc14G () Int)
(declare-fun sc14H () Int)
(declare-fun sc14I () Int)
(declare-fun sc14J () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun var15G () String)
(declare-fun var15H () String)
(declare-fun var15I () String)
(declare-fun var15J () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun unch215G () String)
(declare-fun ch15G () String)
(declare-fun unch115G () String)
(declare-fun unch215H () String)
(declare-fun ch15H () String)
(declare-fun unch115H () String)
(declare-fun unch215I () String)
(declare-fun ch15I () String)
(declare-fun unch115I () String)
(declare-fun unch215J () String)
(declare-fun ch15J () String)
(declare-fun unch115J () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun sc15G () Int)
(declare-fun sc15H () Int)
(declare-fun sc15I () Int)
(declare-fun sc15J () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun var16G () String)
(declare-fun var16H () String)
(declare-fun var16I () String)
(declare-fun var16J () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun unch216G () String)
(declare-fun ch16G () String)
(declare-fun unch116G () String)
(declare-fun unch216H () String)
(declare-fun ch16H () String)
(declare-fun unch116H () String)
(declare-fun unch216I () String)
(declare-fun ch16I () String)
(declare-fun unch116I () String)
(declare-fun unch216J () String)
(declare-fun ch16J () String)
(declare-fun unch116J () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun sc16G () Int)
(declare-fun sc16H () Int)
(declare-fun sc16I () Int)
(declare-fun sc16J () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun var17G () String)
(declare-fun var17H () String)
(declare-fun var17I () String)
(declare-fun var17J () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun unch217G () String)
(declare-fun ch17G () String)
(declare-fun unch117G () String)
(declare-fun unch217H () String)
(declare-fun ch17H () String)
(declare-fun unch117H () String)
(declare-fun unch217I () String)
(declare-fun ch17I () String)
(declare-fun unch117I () String)
(declare-fun unch217J () String)
(declare-fun ch17J () String)
(declare-fun unch117J () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun sc17G () Int)
(declare-fun sc17H () Int)
(declare-fun sc17I () Int)
(declare-fun sc17J () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun var18G () String)
(declare-fun var18H () String)
(declare-fun var18I () String)
(declare-fun var18J () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun unch218G () String)
(declare-fun ch18G () String)
(declare-fun unch118G () String)
(declare-fun unch218H () String)
(declare-fun ch18H () String)
(declare-fun unch118H () String)
(declare-fun unch218I () String)
(declare-fun ch18I () String)
(declare-fun unch118I () String)
(declare-fun unch218J () String)
(declare-fun ch18J () String)
(declare-fun unch118J () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun sc18G () Int)
(declare-fun sc18H () Int)
(declare-fun sc18I () Int)
(declare-fun sc18J () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun var19G () String)
(declare-fun var19H () String)
(declare-fun var19I () String)
(declare-fun var19J () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun unch219G () String)
(declare-fun ch19G () String)
(declare-fun unch119G () String)
(declare-fun unch219H () String)
(declare-fun ch19H () String)
(declare-fun unch119H () String)
(declare-fun unch219I () String)
(declare-fun ch19I () String)
(declare-fun unch119I () String)
(declare-fun unch219J () String)
(declare-fun ch19J () String)
(declare-fun unch119J () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun sc19G () Int)
(declare-fun sc19H () Int)
(declare-fun sc19I () Int)
(declare-fun sc19J () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun var20G () String)
(declare-fun var20H () String)
(declare-fun var20I () String)
(declare-fun var20J () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun unch220G () String)
(declare-fun ch20G () String)
(declare-fun unch120G () String)
(declare-fun unch220H () String)
(declare-fun ch20H () String)
(declare-fun unch120H () String)
(declare-fun unch220I () String)
(declare-fun ch20I () String)
(declare-fun unch120I () String)
(declare-fun unch220J () String)
(declare-fun ch20J () String)
(declare-fun unch120J () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun sc20G () Int)
(declare-fun sc20H () Int)
(declare-fun sc20I () Int)
(declare-fun sc20J () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun var21G () String)
(declare-fun var21H () String)
(declare-fun var21I () String)
(declare-fun var21J () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun unch221G () String)
(declare-fun ch21G () String)
(declare-fun unch121G () String)
(declare-fun unch221H () String)
(declare-fun ch21H () String)
(declare-fun unch121H () String)
(declare-fun unch221I () String)
(declare-fun ch21I () String)
(declare-fun unch121I () String)
(declare-fun unch221J () String)
(declare-fun ch21J () String)
(declare-fun unch121J () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun sc21G () Int)
(declare-fun sc21H () Int)
(declare-fun sc21I () Int)
(declare-fun sc21J () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun var22G () String)
(declare-fun var22H () String)
(declare-fun var22I () String)
(declare-fun var22J () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun unch222G () String)
(declare-fun ch22G () String)
(declare-fun unch122G () String)
(declare-fun unch222H () String)
(declare-fun ch22H () String)
(declare-fun unch122H () String)
(declare-fun unch222I () String)
(declare-fun ch22I () String)
(declare-fun unch122I () String)
(declare-fun unch222J () String)
(declare-fun ch22J () String)
(declare-fun unch122J () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun sc22G () Int)
(declare-fun sc22H () Int)
(declare-fun sc22I () Int)
(declare-fun sc22J () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun var23G () String)
(declare-fun var23H () String)
(declare-fun var23I () String)
(declare-fun var23J () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun unch223G () String)
(declare-fun ch23G () String)
(declare-fun unch123G () String)
(declare-fun unch223H () String)
(declare-fun ch23H () String)
(declare-fun unch123H () String)
(declare-fun unch223I () String)
(declare-fun ch23I () String)
(declare-fun unch123I () String)
(declare-fun unch223J () String)
(declare-fun ch23J () String)
(declare-fun unch123J () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun sc23G () Int)
(declare-fun sc23H () Int)
(declare-fun sc23I () Int)
(declare-fun sc23J () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun var24G () String)
(declare-fun var24H () String)
(declare-fun var24I () String)
(declare-fun var24J () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun unch224G () String)
(declare-fun ch24G () String)
(declare-fun unch124G () String)
(declare-fun unch224H () String)
(declare-fun ch24H () String)
(declare-fun unch124H () String)
(declare-fun unch224I () String)
(declare-fun ch24I () String)
(declare-fun unch124I () String)
(declare-fun unch224J () String)
(declare-fun ch24J () String)
(declare-fun unch124J () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun sc24G () Int)
(declare-fun sc24H () Int)
(declare-fun sc24I () Int)
(declare-fun sc24J () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun var25G () String)
(declare-fun var25H () String)
(declare-fun var25I () String)
(declare-fun var25J () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun unch225G () String)
(declare-fun ch25G () String)
(declare-fun unch125G () String)
(declare-fun unch225H () String)
(declare-fun ch25H () String)
(declare-fun unch125H () String)
(declare-fun unch225I () String)
(declare-fun ch25I () String)
(declare-fun unch125I () String)
(declare-fun unch225J () String)
(declare-fun ch25J () String)
(declare-fun unch125J () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun sc25G () Int)
(declare-fun sc25H () Int)
(declare-fun sc25I () Int)
(declare-fun sc25J () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun var26G () String)
(declare-fun var26H () String)
(declare-fun var26I () String)
(declare-fun var26J () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun unch226G () String)
(declare-fun ch26G () String)
(declare-fun unch126G () String)
(declare-fun unch226H () String)
(declare-fun ch26H () String)
(declare-fun unch126H () String)
(declare-fun unch226I () String)
(declare-fun ch26I () String)
(declare-fun unch126I () String)
(declare-fun unch226J () String)
(declare-fun ch26J () String)
(declare-fun unch126J () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun sc26G () Int)
(declare-fun sc26H () Int)
(declare-fun sc26I () Int)
(declare-fun sc26J () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun var27G () String)
(declare-fun var27H () String)
(declare-fun var27I () String)
(declare-fun var27J () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun unch227G () String)
(declare-fun ch27G () String)
(declare-fun unch127G () String)
(declare-fun unch227H () String)
(declare-fun ch27H () String)
(declare-fun unch127H () String)
(declare-fun unch227I () String)
(declare-fun ch27I () String)
(declare-fun unch127I () String)
(declare-fun unch227J () String)
(declare-fun ch27J () String)
(declare-fun unch127J () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun sc27G () Int)
(declare-fun sc27H () Int)
(declare-fun sc27I () Int)
(declare-fun sc27J () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun var28G () String)
(declare-fun var28H () String)
(declare-fun var28I () String)
(declare-fun var28J () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun unch228G () String)
(declare-fun ch28G () String)
(declare-fun unch128G () String)
(declare-fun unch228H () String)
(declare-fun ch28H () String)
(declare-fun unch128H () String)
(declare-fun unch228I () String)
(declare-fun ch28I () String)
(declare-fun unch128I () String)
(declare-fun unch228J () String)
(declare-fun ch28J () String)
(declare-fun unch128J () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun sc28G () Int)
(declare-fun sc28H () Int)
(declare-fun sc28I () Int)
(declare-fun sc28J () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun var29G () String)
(declare-fun var29H () String)
(declare-fun var29I () String)
(declare-fun var29J () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun unch229G () String)
(declare-fun ch29G () String)
(declare-fun unch129G () String)
(declare-fun unch229H () String)
(declare-fun ch29H () String)
(declare-fun unch129H () String)
(declare-fun unch229I () String)
(declare-fun ch29I () String)
(declare-fun unch129I () String)
(declare-fun unch229J () String)
(declare-fun ch29J () String)
(declare-fun unch129J () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun sc29G () Int)
(declare-fun sc29H () Int)
(declare-fun sc29I () Int)
(declare-fun sc29J () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (<= (str.len var0I) 1))
(assert (<= (str.len var0J) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= (str.++ preI (str.++ stem0 sufI)) (str.++ unch10I (str.++ ch0I unch20I))))
(assert (= (str.++ preJ (str.++ stem0 sufJ)) (str.++ unch10J (str.++ ch0J unch20J))))
(assert (= "zub" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "zubam" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "zuboOi" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "zuXi" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (= (ite (= ch0I var0I) 0 1) sc0I))
(assert (= (ite (= ch0J var0J) 0 1) sc0J))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= sc0I 1))
(assert (<= sc0J 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (<= (str.len var1I) 1))
(assert (<= (str.len var1J) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= (str.++ preI (str.++ stem1 sufI)) (str.++ unch11I (str.++ ch1I unch21I))))
(assert (= (str.++ preJ (str.++ stem1 sufJ)) (str.++ unch11J (str.++ ch1J unch21J))))
(assert (= "sOit" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "sOitam" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "sOitoOi" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "sOiZi" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (= (ite (= ch1I var1I) 0 1) sc1I))
(assert (= (ite (= ch1J var1J) 0 1) sc1J))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= sc1I 1))
(assert (<= sc1J 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (<= (str.len var2I) 1))
(assert (<= (str.len var2J) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= (str.++ preI (str.++ stem2 sufI)) (str.++ unch12I (str.++ ch2I unch22I))))
(assert (= (str.++ preJ (str.++ stem2 sufJ)) (str.++ unch12J (str.++ ch2J unch22J))))
(assert (= "1aZ" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "1aZam" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "1ateOi" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "1ateOi" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (= (ite (= ch2I var2I) 0 1) sc2I))
(assert (= (ite (= ch2J var2J) 0 1) sc2J))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= sc2I 1))
(assert (<= sc2J 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (<= (str.len var3I) 1))
(assert (<= (str.len var3J) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= (str.++ preI (str.++ stem3 sufI)) (str.++ unch13I (str.++ ch3I unch23I))))
(assert (= (str.++ preJ (str.++ stem3 sufJ)) (str.++ unch13J (str.++ ch3J unch23J))))
(assert (= "ko2i3" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "koBe3am" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "koBeleOi" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "koBe3i" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (= (ite (= ch3I var3I) 0 1) sc3I))
(assert (= (ite (= ch3J var3J) 0 1) sc3J))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= sc3I 1))
(assert (<= sc3J 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (<= (str.len var4I) 1))
(assert (<= (str.len var4J) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= (str.++ preI (str.++ stem4 sufI)) (str.++ unch14I (str.++ ch4I unch24I))))
(assert (= (str.++ preJ (str.++ stem4 sufJ)) (str.++ unch14J (str.++ ch4J unch24J))))
(assert (= "zlo4ij" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "zlo4ijam" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "zlo4ijeOi" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "zlo4ijeOi" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (= (ite (= ch4I var4I) 0 1) sc4I))
(assert (= (ite (= ch4J var4J) 0 1) sc4J))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= sc4I 1))
(assert (<= sc4J 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (<= (str.len var5I) 1))
(assert (<= (str.len var5J) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= (str.++ preI (str.++ stem5 sufI)) (str.++ unch15I (str.++ ch5I unch25I))))
(assert (= (str.++ preJ (str.++ stem5 sufJ)) (str.++ unch15J (str.++ ch5J unch25J))))
(assert (= "5i6a7" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "5i6a7am" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "5i6aPeOi" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "5i6a7i" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (= (ite (= ch5I var5I) 0 1) sc5I))
(assert (= (ite (= ch5J var5J) 0 1) sc5J))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= sc5I 1))
(assert (<= sc5J 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (<= (str.len var6I) 1))
(assert (<= (str.len var6J) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= (str.++ preI (str.++ stem6 sufI)) (str.++ unch16I (str.++ ch6I unch26I))))
(assert (= (str.++ preJ (str.++ stem6 sufJ)) (str.++ unch16J (str.++ ch6J unch26J))))
(assert (= "korovaj" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "korovajam" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "korovajeOi" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "korovaji" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (= (ite (= ch6I var6I) 0 1) sc6I))
(assert (= (ite (= ch6J var6J) 0 1) sc6J))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (<= sc6I 1))
(assert (<= sc6J 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (<= (str.len var7G) 1))
(assert (<= (str.len var7H) 1))
(assert (<= (str.len var7I) 1))
(assert (<= (str.len var7J) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= (str.++ preG (str.++ stem7 sufG)) (str.++ unch17G (str.++ ch7G unch27G))))
(assert (= (str.++ preH (str.++ stem7 sufH)) (str.++ unch17H (str.++ ch7H unch27H))))
(assert (= (str.++ preI (str.++ stem7 sufI)) (str.++ unch17I (str.++ ch7I unch27I))))
(assert (= (str.++ preJ (str.++ stem7 sufJ)) (str.++ unch17J (str.++ ch7J unch27J))))
(assert (= "ka5i8" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "kame8am" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "kameneOi" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= "kame8i" (str.++ unch17D (str.++ var7D unch27D))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (= (ite (= ch7G var7G) 0 1) sc7G))
(assert (= (ite (= ch7H var7H) 0 1) sc7H))
(assert (= (ite (= ch7I var7I) 0 1) sc7I))
(assert (= (ite (= ch7J var7J) 0 1) sc7J))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= sc7G 1))
(assert (<= sc7H 1))
(assert (<= sc7I 1))
(assert (<= sc7J 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (<= (str.len var8G) 1))
(assert (<= (str.len var8H) 1))
(assert (<= (str.len var8I) 1))
(assert (<= (str.len var8J) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= (str.++ preG (str.++ stem8 sufG)) (str.++ unch18G (str.++ ch8G unch28G))))
(assert (= (str.++ preH (str.++ stem8 sufH)) (str.++ unch18H (str.++ ch8H unch28H))))
(assert (= (str.++ preI (str.++ stem8 sufI)) (str.++ unch18I (str.++ ch8I unch28I))))
(assert (= (str.++ preJ (str.++ stem8 sufJ)) (str.++ unch18J (str.++ ch8J unch28J))))
(assert (= "5i4" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "5i4am" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "5ideOi" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= "5i4i" (str.++ unch18D (str.++ var8D unch28D))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (= (ite (= ch8G var8G) 0 1) sc8G))
(assert (= (ite (= ch8H var8H) 0 1) sc8H))
(assert (= (ite (= ch8I var8I) 0 1) sc8I))
(assert (= (ite (= ch8J var8J) 0 1) sc8J))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= sc8G 1))
(assert (<= sc8H 1))
(assert (<= sc8I 1))
(assert (<= sc8J 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (<= (str.len var9G) 1))
(assert (<= (str.len var9H) 1))
(assert (<= (str.len var9I) 1))
(assert (<= (str.len var9J) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= (str.++ preG (str.++ stem9 sufG)) (str.++ unch19G (str.++ ch9G unch29G))))
(assert (= (str.++ preH (str.++ stem9 sufH)) (str.++ unch19H (str.++ ch9H unch29H))))
(assert (= (str.++ preI (str.++ stem9 sufI)) (str.++ unch19I (str.++ ch9I unch29I))))
(assert (= (str.++ preJ (str.++ stem9 sufJ)) (str.++ unch19J (str.++ ch9J unch29J))))
(assert (= "x3iw" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "x3ivam" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "x3ivoOi" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= "x3iOi" (str.++ unch19D (str.++ var9D unch29D))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (= (ite (= ch9G var9G) 0 1) sc9G))
(assert (= (ite (= ch9H var9H) 0 1) sc9H))
(assert (= (ite (= ch9I var9I) 0 1) sc9I))
(assert (= (ite (= ch9J var9J) 0 1) sc9J))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= sc9G 1))
(assert (<= sc9H 1))
(assert (<= sc9I 1))
(assert (<= sc9J 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (<= (str.len var10G) 1))
(assert (<= (str.len var10H) 1))
(assert (<= (str.len var10I) 1))
(assert (<= (str.len var10J) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= (str.++ preG (str.++ stem10 sufG)) (str.++ unch110G (str.++ ch10G unch210G))))
(assert (= (str.++ preH (str.++ stem10 sufH)) (str.++ unch110H (str.++ ch10H unch210H))))
(assert (= (str.++ preI (str.++ stem10 sufI)) (str.++ unch110I (str.++ ch10I unch210I))))
(assert (= (str.++ preJ (str.++ stem10 sufJ)) (str.++ unch110J (str.++ ch10J unch210J))))
(assert (= "holub" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "holubam" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "holuboOi" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= "holuXi" (str.++ unch110D (str.++ var10D unch210D))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (= (ite (= ch10G var10G) 0 1) sc10G))
(assert (= (ite (= ch10H var10H) 0 1) sc10H))
(assert (= (ite (= ch10I var10I) 0 1) sc10I))
(assert (= (ite (= ch10J var10J) 0 1) sc10J))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= sc10G 1))
(assert (<= sc10H 1))
(assert (<= sc10I 1))
(assert (<= sc10J 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (<= (str.len var11G) 1))
(assert (<= (str.len var11H) 1))
(assert (<= (str.len var11I) 1))
(assert (<= (str.len var11J) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= (str.++ preG (str.++ stem11 sufG)) (str.++ unch111G (str.++ ch11G unch211G))))
(assert (= (str.++ preH (str.++ stem11 sufH)) (str.++ unch111H (str.++ ch11H unch211H))))
(assert (= (str.++ preI (str.++ stem11 sufI)) (str.++ unch111I (str.++ ch11I unch211I))))
(assert (= (str.++ preJ (str.++ stem11 sufJ)) (str.++ unch111J (str.++ ch11J unch211J))))
(assert (= "6in" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "6inam" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "6inoOi" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= "6i8i" (str.++ unch111D (str.++ var11D unch211D))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (= (ite (= ch11G var11G) 0 1) sc11G))
(assert (= (ite (= ch11H var11H) 0 1) sc11H))
(assert (= (ite (= ch11I var11I) 0 1) sc11I))
(assert (= (ite (= ch11J var11J) 0 1) sc11J))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= sc11G 1))
(assert (<= sc11H 1))
(assert (<= sc11I 1))
(assert (<= sc11J 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (<= (str.len var12G) 1))
(assert (<= (str.len var12H) 1))
(assert (<= (str.len var12I) 1))
(assert (<= (str.len var12J) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= (str.++ preG (str.++ stem12 sufG)) (str.++ unch112G (str.++ ch12G unch212G))))
(assert (= (str.++ preH (str.++ stem12 sufH)) (str.++ unch112H (str.++ ch12H unch212H))))
(assert (= (str.++ preI (str.++ stem12 sufI)) (str.++ unch112I (str.++ ch12I unch212I))))
(assert (= (str.++ preJ (str.++ stem12 sufJ)) (str.++ unch112J (str.++ ch12J unch212J))))
(assert (= "leXi4" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "lebe4am" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "lebedeOi" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= "lebe4i" (str.++ unch112D (str.++ var12D unch212D))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (= (ite (= ch12G var12G) 0 1) sc12G))
(assert (= (ite (= ch12H var12H) 0 1) sc12H))
(assert (= (ite (= ch12I var12I) 0 1) sc12I))
(assert (= (ite (= ch12J var12J) 0 1) sc12J))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= sc12G 1))
(assert (<= sc12H 1))
(assert (<= sc12I 1))
(assert (<= sc12J 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (<= (str.len var13G) 1))
(assert (<= (str.len var13H) 1))
(assert (<= (str.len var13I) 1))
(assert (<= (str.len var13J) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= (str.++ preG (str.++ stem13 sufG)) (str.++ unch113G (str.++ ch13G unch213G))))
(assert (= (str.++ preH (str.++ stem13 sufH)) (str.++ unch113H (str.++ ch13H unch213H))))
(assert (= (str.++ preI (str.++ stem13 sufI)) (str.++ unch113I (str.++ ch13I unch213I))))
(assert (= (str.++ preJ (str.++ stem13 sufJ)) (str.++ unch113J (str.++ ch13J unch213J))))
(assert (= "su6id" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "su6idam" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "su6idoOi" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= "su6idoOi" (str.++ unch113E (str.++ var13E unch213E))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (= (ite (= ch13G var13G) 0 1) sc13G))
(assert (= (ite (= ch13H var13H) 0 1) sc13H))
(assert (= (ite (= ch13I var13I) 0 1) sc13I))
(assert (= (ite (= ch13J var13J) 0 1) sc13J))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= sc13G 1))
(assert (<= sc13H 1))
(assert (<= sc13I 1))
(assert (<= sc13J 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (<= (str.len var14G) 1))
(assert (<= (str.len var14H) 1))
(assert (<= (str.len var14I) 1))
(assert (<= (str.len var14J) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= (str.++ preG (str.++ stem14 sufG)) (str.++ unch114G (str.++ ch14G unch214G))))
(assert (= (str.++ preH (str.++ stem14 sufH)) (str.++ unch114H (str.++ ch14H unch214H))))
(assert (= (str.++ preI (str.++ stem14 sufI)) (str.++ unch114I (str.++ ch14I unch214I))))
(assert (= (str.++ preJ (str.++ stem14 sufJ)) (str.++ unch114J (str.++ ch14J unch214J))))
(assert (= "EoloOik" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "EoloOikam" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "EoloOikoOi" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= "EoloOikoOi" (str.++ unch114E (str.++ var14E unch214E))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (= (ite (= ch14G var14G) 0 1) sc14G))
(assert (= (ite (= ch14H var14H) 0 1) sc14H))
(assert (= (ite (= ch14I var14I) 0 1) sc14I))
(assert (= (ite (= ch14J var14J) 0 1) sc14J))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= sc14G 1))
(assert (<= sc14H 1))
(assert (<= sc14I 1))
(assert (<= sc14J 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (<= (str.len var15G) 1))
(assert (<= (str.len var15H) 1))
(assert (<= (str.len var15I) 1))
(assert (<= (str.len var15J) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= (str.++ preG (str.++ stem15 sufG)) (str.++ unch115G (str.++ ch15G unch215G))))
(assert (= (str.++ preH (str.++ stem15 sufH)) (str.++ unch115H (str.++ ch15H unch215H))))
(assert (= (str.++ preI (str.++ stem15 sufI)) (str.++ unch115I (str.++ ch15I unch215I))))
(assert (= (str.++ preJ (str.++ stem15 sufJ)) (str.++ unch115J (str.++ ch15J unch215J))))
(assert (= "3id" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "ledam" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "ledoOi" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= "le4i" (str.++ unch115D (str.++ var15D unch215D))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (= (ite (= ch15G var15G) 0 1) sc15G))
(assert (= (ite (= ch15H var15H) 0 1) sc15H))
(assert (= (ite (= ch15I var15I) 0 1) sc15I))
(assert (= (ite (= ch15J var15J) 0 1) sc15J))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= sc15G 1))
(assert (<= sc15H 1))
(assert (<= sc15I 1))
(assert (<= sc15J 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (<= (str.len var16G) 1))
(assert (<= (str.len var16H) 1))
(assert (<= (str.len var16I) 1))
(assert (<= (str.len var16J) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= (str.++ preG (str.++ stem16 sufG)) (str.++ unch116G (str.++ ch16G unch216G))))
(assert (= (str.++ preH (str.++ stem16 sufH)) (str.++ unch116H (str.++ ch16H unch216H))))
(assert (= (str.++ preI (str.++ stem16 sufI)) (str.++ unch116I (str.++ ch16I unch216I))))
(assert (= (str.++ preJ (str.++ stem16 sufJ)) (str.++ unch116J (str.++ ch16J unch216J))))
(assert (= "bi3" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bo3am" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "boleOi" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= "bo3i" (str.++ unch116D (str.++ var16D unch216D))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (= (ite (= ch16G var16G) 0 1) sc16G))
(assert (= (ite (= ch16H var16H) 0 1) sc16H))
(assert (= (ite (= ch16I var16I) 0 1) sc16I))
(assert (= (ite (= ch16J var16J) 0 1) sc16J))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= sc16G 1))
(assert (<= sc16H 1))
(assert (<= sc16I 1))
(assert (<= sc16J 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (<= (str.len var17G) 1))
(assert (<= (str.len var17H) 1))
(assert (<= (str.len var17I) 1))
(assert (<= (str.len var17J) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= (str.++ preG (str.++ stem17 sufG)) (str.++ unch117G (str.++ ch17G unch217G))))
(assert (= (str.++ preH (str.++ stem17 sufH)) (str.++ unch117H (str.++ ch17H unch217H))))
(assert (= (str.++ preI (str.++ stem17 sufI)) (str.++ unch117I (str.++ ch17I unch217I))))
(assert (= (str.++ preJ (str.++ stem17 sufJ)) (str.++ unch117J (str.++ ch17J unch217J))))
(assert (= "riw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "rovam" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "rovoOi" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= "roOi" (str.++ unch117D (str.++ var17D unch217D))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (= (ite (= ch17G var17G) 0 1) sc17G))
(assert (= (ite (= ch17H var17H) 0 1) sc17H))
(assert (= (ite (= ch17I var17I) 0 1) sc17I))
(assert (= (ite (= ch17J var17J) 0 1) sc17J))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= sc17G 1))
(assert (<= sc17H 1))
(assert (<= sc17I 1))
(assert (<= sc17J 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (<= (str.len var18G) 1))
(assert (<= (str.len var18H) 1))
(assert (<= (str.len var18I) 1))
(assert (<= (str.len var18J) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= (str.++ preG (str.++ stem18 sufG)) (str.++ unch118G (str.++ ch18G unch218G))))
(assert (= (str.++ preH (str.++ stem18 sufH)) (str.++ unch118H (str.++ ch18H unch218H))))
(assert (= (str.++ preI (str.++ stem18 sufI)) (str.++ unch118I (str.++ ch18I unch218I))))
(assert (= (str.++ preJ (str.++ stem18 sufJ)) (str.++ unch118J (str.++ ch18J unch218J))))
(assert (= "stiw" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "stolam" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "stoloOi" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= "sto3i" (str.++ unch118D (str.++ var18D unch218D))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (= (ite (= ch18G var18G) 0 1) sc18G))
(assert (= (ite (= ch18H var18H) 0 1) sc18H))
(assert (= (ite (= ch18I var18I) 0 1) sc18I))
(assert (= (ite (= ch18J var18J) 0 1) sc18J))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= sc18G 1))
(assert (<= sc18H 1))
(assert (<= sc18I 1))
(assert (<= sc18J 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (<= (str.len var19G) 1))
(assert (<= (str.len var19H) 1))
(assert (<= (str.len var19I) 1))
(assert (<= (str.len var19J) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= (str.++ preG (str.++ stem19 sufG)) (str.++ unch119G (str.++ ch19G unch219G))))
(assert (= (str.++ preH (str.++ stem19 sufH)) (str.++ unch119H (str.++ ch19H unch219H))))
(assert (= (str.++ preI (str.++ stem19 sufI)) (str.++ unch119I (str.++ ch19I unch219I))))
(assert (= (str.++ preJ (str.++ stem19 sufJ)) (str.++ unch119J (str.++ ch19J unch219J))))
(assert (= "4id" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "4idam" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "4idoOi" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= "4idoOi" (str.++ unch119E (str.++ var19E unch219E))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (= (ite (= ch19G var19G) 0 1) sc19G))
(assert (= (ite (= ch19H var19H) 0 1) sc19H))
(assert (= (ite (= ch19I var19I) 0 1) sc19I))
(assert (= (ite (= ch19J var19J) 0 1) sc19J))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= sc19G 1))
(assert (<= sc19H 1))
(assert (<= sc19I 1))
(assert (<= sc19J 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (<= (str.len var20G) 1))
(assert (<= (str.len var20H) 1))
(assert (<= (str.len var20I) 1))
(assert (<= (str.len var20J) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= (str.++ preG (str.++ stem20 sufG)) (str.++ unch120G (str.++ ch20G unch220G))))
(assert (= (str.++ preH (str.++ stem20 sufH)) (str.++ unch120H (str.++ ch20H unch220H))))
(assert (= (str.++ preI (str.++ stem20 sufI)) (str.++ unch120I (str.++ ch20I unch220I))))
(assert (= (str.++ preJ (str.++ stem20 sufJ)) (str.++ unch120J (str.++ ch20J unch220J))))
(assert (= "3it" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "3otam" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "3otoOi" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= "3oZi" (str.++ unch120D (str.++ var20D unch220D))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (= (ite (= ch20G var20G) 0 1) sc20G))
(assert (= (ite (= ch20H var20H) 0 1) sc20H))
(assert (= (ite (= ch20I var20I) 0 1) sc20I))
(assert (= (ite (= ch20J var20J) 0 1) sc20J))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= sc20G 1))
(assert (<= sc20H 1))
(assert (<= sc20I 1))
(assert (<= sc20J 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (<= (str.len var21G) 1))
(assert (<= (str.len var21H) 1))
(assert (<= (str.len var21I) 1))
(assert (<= (str.len var21J) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= (str.++ preG (str.++ stem21 sufG)) (str.++ unch121G (str.++ ch21G unch221G))))
(assert (= (str.++ preH (str.++ stem21 sufH)) (str.++ unch121H (str.++ ch21H unch221H))))
(assert (= (str.++ preI (str.++ stem21 sufI)) (str.++ unch121I (str.++ ch21I unch221I))))
(assert (= (str.++ preJ (str.++ stem21 sufJ)) (str.++ unch121J (str.++ ch21J unch221J))))
(assert (= "mist" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "mostam" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "mostoOi" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= "mosZi" (str.++ unch121D (str.++ var21D unch221D))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (= (ite (= ch21G var21G) 0 1) sc21G))
(assert (= (ite (= ch21H var21H) 0 1) sc21H))
(assert (= (ite (= ch21I var21I) 0 1) sc21I))
(assert (= (ite (= ch21J var21J) 0 1) sc21J))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= sc21G 1))
(assert (<= sc21H 1))
(assert (<= sc21I 1))
(assert (<= sc21J 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (<= (str.len var22G) 1))
(assert (<= (str.len var22H) 1))
(assert (<= (str.len var22I) 1))
(assert (<= (str.len var22J) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= (str.++ preG (str.++ stem22 sufG)) (str.++ unch122G (str.++ ch22G unch222G))))
(assert (= (str.++ preH (str.++ stem22 sufH)) (str.++ unch122H (str.++ ch22H unch222H))))
(assert (= (str.++ preI (str.++ stem22 sufI)) (str.++ unch122I (str.++ ch22I unch222I))))
(assert (= (str.++ preJ (str.++ stem22 sufJ)) (str.++ unch122J (str.++ ch22J unch222J))))
(assert (= "veEir" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "veEoram" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "veEoroOi" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= "veEo9i" (str.++ unch122D (str.++ var22D unch222D))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (= (ite (= ch22G var22G) 0 1) sc22G))
(assert (= (ite (= ch22H var22H) 0 1) sc22H))
(assert (= (ite (= ch22I var22I) 0 1) sc22I))
(assert (= (ite (= ch22J var22J) 0 1) sc22J))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= sc22G 1))
(assert (<= sc22H 1))
(assert (<= sc22I 1))
(assert (<= sc22J 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (<= (str.len var23G) 1))
(assert (<= (str.len var23H) 1))
(assert (<= (str.len var23I) 1))
(assert (<= (str.len var23J) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= (str.++ preG (str.++ stem23 sufG)) (str.++ unch123G (str.++ ch23G unch223G))))
(assert (= (str.++ preH (str.++ stem23 sufH)) (str.++ unch123H (str.++ ch23H unch223H))))
(assert (= (str.++ preI (str.++ stem23 sufI)) (str.++ unch123I (str.++ ch23I unch223I))))
(assert (= (str.++ preJ (str.++ stem23 sufJ)) (str.++ unch123J (str.++ ch23J unch223J))))
(assert (= "Zilo" (str.++ unch123F (str.++ var23F unch223F))))
(assert (= "Zila" (str.++ unch123G (str.++ var23G unch223G))))
(assert (= "Zilu" (str.++ unch123H (str.++ var23H unch223H))))
(assert (= "Zi3i" (str.++ unch123I (str.++ var23I unch223I))))
(assert (= "Ziw" (str.++ unch123J (str.++ var23J unch223J))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (= (ite (= ch23G var23G) 0 1) sc23G))
(assert (= (ite (= ch23H var23H) 0 1) sc23H))
(assert (= (ite (= ch23I var23I) 0 1) sc23I))
(assert (= (ite (= ch23J var23J) 0 1) sc23J))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= sc23G 1))
(assert (<= sc23H 1))
(assert (<= sc23I 1))
(assert (<= sc23J 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (<= (str.len var24G) 1))
(assert (<= (str.len var24H) 1))
(assert (<= (str.len var24I) 1))
(assert (<= (str.len var24J) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= (str.++ preG (str.++ stem24 sufG)) (str.++ unch124G (str.++ ch24G unch224G))))
(assert (= (str.++ preH (str.++ stem24 sufH)) (str.++ unch124H (str.++ ch24H unch224H))))
(assert (= (str.++ preI (str.++ stem24 sufI)) (str.++ unch124I (str.++ ch24I unch224I))))
(assert (= (str.++ preJ (str.++ stem24 sufJ)) (str.++ unch124J (str.++ ch24J unch224J))))
(assert (= "koleso" (str.++ unch124F (str.++ var24F unch224F))))
(assert (= "kolesa" (str.++ unch124G (str.++ var24G unch224G))))
(assert (= "kolesu" (str.++ unch124H (str.++ var24H unch224H))))
(assert (= "kole6i" (str.++ unch124I (str.++ var24I unch224I))))
(assert (= "ko3is" (str.++ unch124J (str.++ var24J unch224J))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (= (ite (= ch24G var24G) 0 1) sc24G))
(assert (= (ite (= ch24H var24H) 0 1) sc24H))
(assert (= (ite (= ch24I var24I) 0 1) sc24I))
(assert (= (ite (= ch24J var24J) 0 1) sc24J))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= sc24G 1))
(assert (<= sc24H 1))
(assert (<= sc24I 1))
(assert (<= sc24J 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (<= (str.len var25G) 1))
(assert (<= (str.len var25H) 1))
(assert (<= (str.len var25I) 1))
(assert (<= (str.len var25J) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= (str.++ preG (str.++ stem25 sufG)) (str.++ unch125G (str.++ ch25G unch225G))))
(assert (= (str.++ preH (str.++ stem25 sufH)) (str.++ unch125H (str.++ ch25H unch225H))))
(assert (= (str.++ preI (str.++ stem25 sufI)) (str.++ unch125I (str.++ ch25I unch225I))))
(assert (= (str.++ preJ (str.++ stem25 sufJ)) (str.++ unch125J (str.++ ch25J unch225J))))
(assert (= "ozero" (str.++ unch125F (str.++ var25F unch225F))))
(assert (= "ozera" (str.++ unch125G (str.++ var25G unch225G))))
(assert (= "ozeru" (str.++ unch125H (str.++ var25H unch225H))))
(assert (= "oze9i" (str.++ unch125I (str.++ var25I unch225I))))
(assert (= "o1ir" (str.++ unch125J (str.++ var25J unch225J))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (= (ite (= ch25G var25G) 0 1) sc25G))
(assert (= (ite (= ch25H var25H) 0 1) sc25H))
(assert (= (ite (= ch25I var25I) 0 1) sc25I))
(assert (= (ite (= ch25J var25J) 0 1) sc25J))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= sc25G 1))
(assert (<= sc25H 1))
(assert (<= sc25I 1))
(assert (<= sc25J 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (<= (str.len var26G) 1))
(assert (<= (str.len var26H) 1))
(assert (<= (str.len var26I) 1))
(assert (<= (str.len var26J) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= (str.++ preG (str.++ stem26 sufG)) (str.++ unch126G (str.++ ch26G unch226G))))
(assert (= (str.++ preH (str.++ stem26 sufH)) (str.++ unch126H (str.++ ch26H unch226H))))
(assert (= (str.++ preI (str.++ stem26 sufI)) (str.++ unch126I (str.++ ch26I unch226I))))
(assert (= (str.++ preJ (str.++ stem26 sufJ)) (str.++ unch126J (str.++ ch26J unch226J))))
(assert (= "selo" (str.++ unch126F (str.++ var26F unch226F))))
(assert (= "sela" (str.++ unch126G (str.++ var26G unch226G))))
(assert (= "selu" (str.++ unch126H (str.++ var26H unch226H))))
(assert (= "se3i" (str.++ unch126I (str.++ var26I unch226I))))
(assert (= "6iw" (str.++ unch126J (str.++ var26J unch226J))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (= (ite (= ch26G var26G) 0 1) sc26G))
(assert (= (ite (= ch26H var26H) 0 1) sc26H))
(assert (= (ite (= ch26I var26I) 0 1) sc26I))
(assert (= (ite (= ch26J var26J) 0 1) sc26J))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= sc26G 1))
(assert (<= sc26H 1))
(assert (<= sc26I 1))
(assert (<= sc26J 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (<= (str.len var27G) 1))
(assert (<= (str.len var27H) 1))
(assert (<= (str.len var27I) 1))
(assert (<= (str.len var27J) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= (str.++ preG (str.++ stem27 sufG)) (str.++ unch127G (str.++ ch27G unch227G))))
(assert (= (str.++ preH (str.++ stem27 sufH)) (str.++ unch127H (str.++ ch27H unch227H))))
(assert (= (str.++ preI (str.++ stem27 sufI)) (str.++ unch127I (str.++ ch27I unch227I))))
(assert (= (str.++ preJ (str.++ stem27 sufJ)) (str.++ unch127J (str.++ ch27J unch227J))))
(assert (= "pole" (str.++ unch127F (str.++ var27F unch227F))))
(assert (= "po3a" (str.++ unch127G (str.++ var27G unch227G))))
(assert (= "po3u" (str.++ unch127H (str.++ var27H unch227H))))
(assert (= "po3i" (str.++ unch127I (str.++ var27I unch227I))))
(assert (= "pi3" (str.++ unch127J (str.++ var27J unch227J))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (= (ite (= ch27G var27G) 0 1) sc27G))
(assert (= (ite (= ch27H var27H) 0 1) sc27H))
(assert (= (ite (= ch27I var27I) 0 1) sc27I))
(assert (= (ite (= ch27J var27J) 0 1) sc27J))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= sc27G 1))
(assert (<= sc27H 1))
(assert (<= sc27I 1))
(assert (<= sc27J 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (<= (str.len var28G) 1))
(assert (<= (str.len var28H) 1))
(assert (<= (str.len var28I) 1))
(assert (<= (str.len var28J) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= (str.++ preG (str.++ stem28 sufG)) (str.++ unch128G (str.++ ch28G unch228G))))
(assert (= (str.++ preH (str.++ stem28 sufH)) (str.++ unch128H (str.++ ch28H unch228H))))
(assert (= (str.++ preI (str.++ stem28 sufI)) (str.++ unch128I (str.++ ch28I unch228I))))
(assert (= (str.++ preJ (str.++ stem28 sufJ)) (str.++ unch128J (str.++ ch28J unch228J))))
(assert (= "slovo" (str.++ unch128F (str.++ var28F unch228F))))
(assert (= "slova" (str.++ unch128G (str.++ var28G unch228G))))
(assert (= "slovu" (str.++ unch128H (str.++ var28H unch228H))))
(assert (= "sloOi" (str.++ unch128I (str.++ var28I unch228I))))
(assert (= "sliw" (str.++ unch128J (str.++ var28J unch228J))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (= (ite (= ch28G var28G) 0 1) sc28G))
(assert (= (ite (= ch28H var28H) 0 1) sc28H))
(assert (= (ite (= ch28I var28I) 0 1) sc28I))
(assert (= (ite (= ch28J var28J) 0 1) sc28J))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= sc28G 1))
(assert (<= sc28H 1))
(assert (<= sc28I 1))
(assert (<= sc28J 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (<= (str.len var29G) 1))
(assert (<= (str.len var29H) 1))
(assert (<= (str.len var29I) 1))
(assert (<= (str.len var29J) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= (str.++ preG (str.++ stem29 sufG)) (str.++ unch129G (str.++ ch29G unch229G))))
(assert (= (str.++ preH (str.++ stem29 sufH)) (str.++ unch129H (str.++ ch29H unch229H))))
(assert (= (str.++ preI (str.++ stem29 sufI)) (str.++ unch129I (str.++ ch29I unch229I))))
(assert (= (str.++ preJ (str.++ stem29 sufJ)) (str.++ unch129J (str.++ ch29J unch229J))))
(assert (= "more" (str.++ unch129F (str.++ var29F unch229F))))
(assert (= "mo9a" (str.++ unch129G (str.++ var29G unch229G))))
(assert (= "mo9u" (str.++ unch129H (str.++ var29H unch229H))))
(assert (= "mo9i" (str.++ unch129I (str.++ var29I unch229I))))
(assert (= "mi9" (str.++ unch129J (str.++ var29J unch229J))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (= (ite (= ch29G var29G) 0 1) sc29G))
(assert (= (ite (= ch29H var29H) 0 1) sc29H))
(assert (= (ite (= ch29I var29I) 0 1) sc29I))
(assert (= (ite (= ch29J var29J) 0 1) sc29J))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= sc29G 1))
(assert (<= sc29H 1))
(assert (<= sc29I 1))
(assert (<= sc29J 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      sc0I
      sc0J
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      sc1I
      sc1J
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      sc2I
      sc2J
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      sc3I
      sc3J
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      sc4I
      sc4J
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      sc5I
      sc5J
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H
      sc6I
      sc6J
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      sc7G
      sc7H
      sc7I
      sc7J
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      sc8G
      sc8H
      sc8I
      sc8J
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      sc9G
      sc9H
      sc9I
      sc9J
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      sc10G
      sc10H
      sc10I
      sc10J
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      sc11G
      sc11H
      sc11I
      sc11J
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      sc12G
      sc12H
      sc12I
      sc12J
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      sc13G
      sc13H
      sc13I
      sc13J
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      sc14G
      sc14H
      sc14I
      sc14J
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      sc15G
      sc15H
      sc15I
      sc15J
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      sc16G
      sc16H
      sc16I
      sc16J
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      sc17G
      sc17H
      sc17I
      sc17J
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      sc18G
      sc18H
      sc18I
      sc18J
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      sc19G
      sc19H
      sc19I
      sc19J
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      sc20G
      sc20H
      sc20I
      sc20J
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      sc21G
      sc21H
      sc21I
      sc21J
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      sc22G
      sc22H
      sc22I
      sc22J
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      sc23G
      sc23H
      sc23I
      sc23J
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      sc24G
      sc24H
      sc24I
      sc24J
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      sc25G
      sc25H
      sc25I
      sc25J
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      sc26G
      sc26H
      sc26I
      sc26J
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      sc27G
      sc27H
      sc27I
      sc27J
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      sc28G
      sc28H
      sc28I
      sc28J
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      sc29G
      sc29H
      sc29I
      sc29J)
   8))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun var0I () String)
(declare-fun var0J () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun unch20I () String)
(declare-fun ch0I () String)
(declare-fun unch10I () String)
(declare-fun sufI () String)
(declare-fun preI () String)
(declare-fun unch20J () String)
(declare-fun ch0J () String)
(declare-fun unch10J () String)
(declare-fun sufJ () String)
(declare-fun preJ () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun sc0I () Int)
(declare-fun sc0J () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun var1I () String)
(declare-fun var1J () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun unch21I () String)
(declare-fun ch1I () String)
(declare-fun unch11I () String)
(declare-fun unch21J () String)
(declare-fun ch1J () String)
(declare-fun unch11J () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun sc1I () Int)
(declare-fun sc1J () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun var2I () String)
(declare-fun var2J () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun unch22I () String)
(declare-fun ch2I () String)
(declare-fun unch12I () String)
(declare-fun unch22J () String)
(declare-fun ch2J () String)
(declare-fun unch12J () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun sc2I () Int)
(declare-fun sc2J () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun var3I () String)
(declare-fun var3J () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun unch23I () String)
(declare-fun ch3I () String)
(declare-fun unch13I () String)
(declare-fun unch23J () String)
(declare-fun ch3J () String)
(declare-fun unch13J () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun sc3I () Int)
(declare-fun sc3J () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun var4I () String)
(declare-fun var4J () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun unch24I () String)
(declare-fun ch4I () String)
(declare-fun unch14I () String)
(declare-fun unch24J () String)
(declare-fun ch4J () String)
(declare-fun unch14J () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun sc4I () Int)
(declare-fun sc4J () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun var5I () String)
(declare-fun var5J () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun unch25I () String)
(declare-fun ch5I () String)
(declare-fun unch15I () String)
(declare-fun unch25J () String)
(declare-fun ch5J () String)
(declare-fun unch15J () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun sc5I () Int)
(declare-fun sc5J () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun var6I () String)
(declare-fun var6J () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun unch26I () String)
(declare-fun ch6I () String)
(declare-fun unch16I () String)
(declare-fun unch26J () String)
(declare-fun ch6J () String)
(declare-fun unch16J () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(declare-fun sc6I () Int)
(declare-fun sc6J () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun var7G () String)
(declare-fun var7H () String)
(declare-fun var7I () String)
(declare-fun var7J () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun unch27G () String)
(declare-fun ch7G () String)
(declare-fun unch17G () String)
(declare-fun unch27H () String)
(declare-fun ch7H () String)
(declare-fun unch17H () String)
(declare-fun unch27I () String)
(declare-fun ch7I () String)
(declare-fun unch17I () String)
(declare-fun unch27J () String)
(declare-fun ch7J () String)
(declare-fun unch17J () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun sc7G () Int)
(declare-fun sc7H () Int)
(declare-fun sc7I () Int)
(declare-fun sc7J () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun var8G () String)
(declare-fun var8H () String)
(declare-fun var8I () String)
(declare-fun var8J () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun unch28G () String)
(declare-fun ch8G () String)
(declare-fun unch18G () String)
(declare-fun unch28H () String)
(declare-fun ch8H () String)
(declare-fun unch18H () String)
(declare-fun unch28I () String)
(declare-fun ch8I () String)
(declare-fun unch18I () String)
(declare-fun unch28J () String)
(declare-fun ch8J () String)
(declare-fun unch18J () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun sc8G () Int)
(declare-fun sc8H () Int)
(declare-fun sc8I () Int)
(declare-fun sc8J () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun var9G () String)
(declare-fun var9H () String)
(declare-fun var9I () String)
(declare-fun var9J () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun unch29G () String)
(declare-fun ch9G () String)
(declare-fun unch19G () String)
(declare-fun unch29H () String)
(declare-fun ch9H () String)
(declare-fun unch19H () String)
(declare-fun unch29I () String)
(declare-fun ch9I () String)
(declare-fun unch19I () String)
(declare-fun unch29J () String)
(declare-fun ch9J () String)
(declare-fun unch19J () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun sc9G () Int)
(declare-fun sc9H () Int)
(declare-fun sc9I () Int)
(declare-fun sc9J () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun var10G () String)
(declare-fun var10H () String)
(declare-fun var10I () String)
(declare-fun var10J () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun unch210G () String)
(declare-fun ch10G () String)
(declare-fun unch110G () String)
(declare-fun unch210H () String)
(declare-fun ch10H () String)
(declare-fun unch110H () String)
(declare-fun unch210I () String)
(declare-fun ch10I () String)
(declare-fun unch110I () String)
(declare-fun unch210J () String)
(declare-fun ch10J () String)
(declare-fun unch110J () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun sc10G () Int)
(declare-fun sc10H () Int)
(declare-fun sc10I () Int)
(declare-fun sc10J () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun var11G () String)
(declare-fun var11H () String)
(declare-fun var11I () String)
(declare-fun var11J () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun unch211G () String)
(declare-fun ch11G () String)
(declare-fun unch111G () String)
(declare-fun unch211H () String)
(declare-fun ch11H () String)
(declare-fun unch111H () String)
(declare-fun unch211I () String)
(declare-fun ch11I () String)
(declare-fun unch111I () String)
(declare-fun unch211J () String)
(declare-fun ch11J () String)
(declare-fun unch111J () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun sc11G () Int)
(declare-fun sc11H () Int)
(declare-fun sc11I () Int)
(declare-fun sc11J () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun var12G () String)
(declare-fun var12H () String)
(declare-fun var12I () String)
(declare-fun var12J () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun unch212G () String)
(declare-fun ch12G () String)
(declare-fun unch112G () String)
(declare-fun unch212H () String)
(declare-fun ch12H () String)
(declare-fun unch112H () String)
(declare-fun unch212I () String)
(declare-fun ch12I () String)
(declare-fun unch112I () String)
(declare-fun unch212J () String)
(declare-fun ch12J () String)
(declare-fun unch112J () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun sc12G () Int)
(declare-fun sc12H () Int)
(declare-fun sc12I () Int)
(declare-fun sc12J () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun var13G () String)
(declare-fun var13H () String)
(declare-fun var13I () String)
(declare-fun var13J () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun unch213G () String)
(declare-fun ch13G () String)
(declare-fun unch113G () String)
(declare-fun unch213H () String)
(declare-fun ch13H () String)
(declare-fun unch113H () String)
(declare-fun unch213I () String)
(declare-fun ch13I () String)
(declare-fun unch113I () String)
(declare-fun unch213J () String)
(declare-fun ch13J () String)
(declare-fun unch113J () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun sc13G () Int)
(declare-fun sc13H () Int)
(declare-fun sc13I () Int)
(declare-fun sc13J () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun var14G () String)
(declare-fun var14H () String)
(declare-fun var14I () String)
(declare-fun var14J () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun unch214G () String)
(declare-fun ch14G () String)
(declare-fun unch114G () String)
(declare-fun unch214H () String)
(declare-fun ch14H () String)
(declare-fun unch114H () String)
(declare-fun unch214I () String)
(declare-fun ch14I () String)
(declare-fun unch114I () String)
(declare-fun unch214J () String)
(declare-fun ch14J () String)
(declare-fun unch114J () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun sc14G () Int)
(declare-fun sc14H () Int)
(declare-fun sc14I () Int)
(declare-fun sc14J () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun var15G () String)
(declare-fun var15H () String)
(declare-fun var15I () String)
(declare-fun var15J () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun unch215G () String)
(declare-fun ch15G () String)
(declare-fun unch115G () String)
(declare-fun unch215H () String)
(declare-fun ch15H () String)
(declare-fun unch115H () String)
(declare-fun unch215I () String)
(declare-fun ch15I () String)
(declare-fun unch115I () String)
(declare-fun unch215J () String)
(declare-fun ch15J () String)
(declare-fun unch115J () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun sc15G () Int)
(declare-fun sc15H () Int)
(declare-fun sc15I () Int)
(declare-fun sc15J () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun var16G () String)
(declare-fun var16H () String)
(declare-fun var16I () String)
(declare-fun var16J () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun unch216G () String)
(declare-fun ch16G () String)
(declare-fun unch116G () String)
(declare-fun unch216H () String)
(declare-fun ch16H () String)
(declare-fun unch116H () String)
(declare-fun unch216I () String)
(declare-fun ch16I () String)
(declare-fun unch116I () String)
(declare-fun unch216J () String)
(declare-fun ch16J () String)
(declare-fun unch116J () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun sc16G () Int)
(declare-fun sc16H () Int)
(declare-fun sc16I () Int)
(declare-fun sc16J () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun var17G () String)
(declare-fun var17H () String)
(declare-fun var17I () String)
(declare-fun var17J () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun unch217G () String)
(declare-fun ch17G () String)
(declare-fun unch117G () String)
(declare-fun unch217H () String)
(declare-fun ch17H () String)
(declare-fun unch117H () String)
(declare-fun unch217I () String)
(declare-fun ch17I () String)
(declare-fun unch117I () String)
(declare-fun unch217J () String)
(declare-fun ch17J () String)
(declare-fun unch117J () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun sc17G () Int)
(declare-fun sc17H () Int)
(declare-fun sc17I () Int)
(declare-fun sc17J () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun var18G () String)
(declare-fun var18H () String)
(declare-fun var18I () String)
(declare-fun var18J () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun unch218G () String)
(declare-fun ch18G () String)
(declare-fun unch118G () String)
(declare-fun unch218H () String)
(declare-fun ch18H () String)
(declare-fun unch118H () String)
(declare-fun unch218I () String)
(declare-fun ch18I () String)
(declare-fun unch118I () String)
(declare-fun unch218J () String)
(declare-fun ch18J () String)
(declare-fun unch118J () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun sc18G () Int)
(declare-fun sc18H () Int)
(declare-fun sc18I () Int)
(declare-fun sc18J () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun var19G () String)
(declare-fun var19H () String)
(declare-fun var19I () String)
(declare-fun var19J () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun unch219G () String)
(declare-fun ch19G () String)
(declare-fun unch119G () String)
(declare-fun unch219H () String)
(declare-fun ch19H () String)
(declare-fun unch119H () String)
(declare-fun unch219I () String)
(declare-fun ch19I () String)
(declare-fun unch119I () String)
(declare-fun unch219J () String)
(declare-fun ch19J () String)
(declare-fun unch119J () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun sc19G () Int)
(declare-fun sc19H () Int)
(declare-fun sc19I () Int)
(declare-fun sc19J () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun var20G () String)
(declare-fun var20H () String)
(declare-fun var20I () String)
(declare-fun var20J () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun unch220G () String)
(declare-fun ch20G () String)
(declare-fun unch120G () String)
(declare-fun unch220H () String)
(declare-fun ch20H () String)
(declare-fun unch120H () String)
(declare-fun unch220I () String)
(declare-fun ch20I () String)
(declare-fun unch120I () String)
(declare-fun unch220J () String)
(declare-fun ch20J () String)
(declare-fun unch120J () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun sc20G () Int)
(declare-fun sc20H () Int)
(declare-fun sc20I () Int)
(declare-fun sc20J () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun var21G () String)
(declare-fun var21H () String)
(declare-fun var21I () String)
(declare-fun var21J () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun unch221G () String)
(declare-fun ch21G () String)
(declare-fun unch121G () String)
(declare-fun unch221H () String)
(declare-fun ch21H () String)
(declare-fun unch121H () String)
(declare-fun unch221I () String)
(declare-fun ch21I () String)
(declare-fun unch121I () String)
(declare-fun unch221J () String)
(declare-fun ch21J () String)
(declare-fun unch121J () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun sc21G () Int)
(declare-fun sc21H () Int)
(declare-fun sc21I () Int)
(declare-fun sc21J () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun var22G () String)
(declare-fun var22H () String)
(declare-fun var22I () String)
(declare-fun var22J () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun unch222G () String)
(declare-fun ch22G () String)
(declare-fun unch122G () String)
(declare-fun unch222H () String)
(declare-fun ch22H () String)
(declare-fun unch122H () String)
(declare-fun unch222I () String)
(declare-fun ch22I () String)
(declare-fun unch122I () String)
(declare-fun unch222J () String)
(declare-fun ch22J () String)
(declare-fun unch122J () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun sc22G () Int)
(declare-fun sc22H () Int)
(declare-fun sc22I () Int)
(declare-fun sc22J () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun var23G () String)
(declare-fun var23H () String)
(declare-fun var23I () String)
(declare-fun var23J () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun unch223G () String)
(declare-fun ch23G () String)
(declare-fun unch123G () String)
(declare-fun unch223H () String)
(declare-fun ch23H () String)
(declare-fun unch123H () String)
(declare-fun unch223I () String)
(declare-fun ch23I () String)
(declare-fun unch123I () String)
(declare-fun unch223J () String)
(declare-fun ch23J () String)
(declare-fun unch123J () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun sc23G () Int)
(declare-fun sc23H () Int)
(declare-fun sc23I () Int)
(declare-fun sc23J () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun var24G () String)
(declare-fun var24H () String)
(declare-fun var24I () String)
(declare-fun var24J () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun unch224G () String)
(declare-fun ch24G () String)
(declare-fun unch124G () String)
(declare-fun unch224H () String)
(declare-fun ch24H () String)
(declare-fun unch124H () String)
(declare-fun unch224I () String)
(declare-fun ch24I () String)
(declare-fun unch124I () String)
(declare-fun unch224J () String)
(declare-fun ch24J () String)
(declare-fun unch124J () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun sc24G () Int)
(declare-fun sc24H () Int)
(declare-fun sc24I () Int)
(declare-fun sc24J () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun var25G () String)
(declare-fun var25H () String)
(declare-fun var25I () String)
(declare-fun var25J () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun unch225G () String)
(declare-fun ch25G () String)
(declare-fun unch125G () String)
(declare-fun unch225H () String)
(declare-fun ch25H () String)
(declare-fun unch125H () String)
(declare-fun unch225I () String)
(declare-fun ch25I () String)
(declare-fun unch125I () String)
(declare-fun unch225J () String)
(declare-fun ch25J () String)
(declare-fun unch125J () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun sc25G () Int)
(declare-fun sc25H () Int)
(declare-fun sc25I () Int)
(declare-fun sc25J () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun var26G () String)
(declare-fun var26H () String)
(declare-fun var26I () String)
(declare-fun var26J () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun unch226G () String)
(declare-fun ch26G () String)
(declare-fun unch126G () String)
(declare-fun unch226H () String)
(declare-fun ch26H () String)
(declare-fun unch126H () String)
(declare-fun unch226I () String)
(declare-fun ch26I () String)
(declare-fun unch126I () String)
(declare-fun unch226J () String)
(declare-fun ch26J () String)
(declare-fun unch126J () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun sc26G () Int)
(declare-fun sc26H () Int)
(declare-fun sc26I () Int)
(declare-fun sc26J () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun var27G () String)
(declare-fun var27H () String)
(declare-fun var27I () String)
(declare-fun var27J () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun unch227G () String)
(declare-fun ch27G () String)
(declare-fun unch127G () String)
(declare-fun unch227H () String)
(declare-fun ch27H () String)
(declare-fun unch127H () String)
(declare-fun unch227I () String)
(declare-fun ch27I () String)
(declare-fun unch127I () String)
(declare-fun unch227J () String)
(declare-fun ch27J () String)
(declare-fun unch127J () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun sc27G () Int)
(declare-fun sc27H () Int)
(declare-fun sc27I () Int)
(declare-fun sc27J () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun var28G () String)
(declare-fun var28H () String)
(declare-fun var28I () String)
(declare-fun var28J () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun unch228G () String)
(declare-fun ch28G () String)
(declare-fun unch128G () String)
(declare-fun unch228H () String)
(declare-fun ch28H () String)
(declare-fun unch128H () String)
(declare-fun unch228I () String)
(declare-fun ch28I () String)
(declare-fun unch128I () String)
(declare-fun unch228J () String)
(declare-fun ch28J () String)
(declare-fun unch128J () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun sc28G () Int)
(declare-fun sc28H () Int)
(declare-fun sc28I () Int)
(declare-fun sc28J () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun var29G () String)
(declare-fun var29H () String)
(declare-fun var29I () String)
(declare-fun var29J () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun unch229G () String)
(declare-fun ch29G () String)
(declare-fun unch129G () String)
(declare-fun unch229H () String)
(declare-fun ch29H () String)
(declare-fun unch129H () String)
(declare-fun unch229I () String)
(declare-fun ch29I () String)
(declare-fun unch129I () String)
(declare-fun unch229J () String)
(declare-fun ch29J () String)
(declare-fun unch129J () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun sc29G () Int)
(declare-fun sc29H () Int)
(declare-fun sc29I () Int)
(declare-fun sc29J () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (<= (str.len var0I) 1))
(assert (<= (str.len var0J) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= (str.++ preI (str.++ stem0 sufI)) (str.++ unch10I (str.++ ch0I unch20I))))
(assert (= (str.++ preJ (str.++ stem0 sufJ)) (str.++ unch10J (str.++ ch0J unch20J))))
(assert (= "zub" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "zubam" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "zuboOi" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "zuXi" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (= (ite (= ch0I var0I) 0 1) sc0I))
(assert (= (ite (= ch0J var0J) 0 1) sc0J))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= sc0I 1))
(assert (<= sc0J 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (<= (str.len var1I) 1))
(assert (<= (str.len var1J) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= (str.++ preI (str.++ stem1 sufI)) (str.++ unch11I (str.++ ch1I unch21I))))
(assert (= (str.++ preJ (str.++ stem1 sufJ)) (str.++ unch11J (str.++ ch1J unch21J))))
(assert (= "sOit" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "sOitam" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "sOitoOi" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "sOiZi" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (= (ite (= ch1I var1I) 0 1) sc1I))
(assert (= (ite (= ch1J var1J) 0 1) sc1J))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= sc1I 1))
(assert (<= sc1J 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (<= (str.len var2I) 1))
(assert (<= (str.len var2J) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= (str.++ preI (str.++ stem2 sufI)) (str.++ unch12I (str.++ ch2I unch22I))))
(assert (= (str.++ preJ (str.++ stem2 sufJ)) (str.++ unch12J (str.++ ch2J unch22J))))
(assert (= "1aZ" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "1aZam" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "1ateOi" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "1ateOi" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (= (ite (= ch2I var2I) 0 1) sc2I))
(assert (= (ite (= ch2J var2J) 0 1) sc2J))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= sc2I 1))
(assert (<= sc2J 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (<= (str.len var3I) 1))
(assert (<= (str.len var3J) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= (str.++ preI (str.++ stem3 sufI)) (str.++ unch13I (str.++ ch3I unch23I))))
(assert (= (str.++ preJ (str.++ stem3 sufJ)) (str.++ unch13J (str.++ ch3J unch23J))))
(assert (= "ko2i3" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "koBe3am" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "koBeleOi" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "koBe3i" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (= (ite (= ch3I var3I) 0 1) sc3I))
(assert (= (ite (= ch3J var3J) 0 1) sc3J))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= sc3I 1))
(assert (<= sc3J 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (<= (str.len var4I) 1))
(assert (<= (str.len var4J) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= (str.++ preI (str.++ stem4 sufI)) (str.++ unch14I (str.++ ch4I unch24I))))
(assert (= (str.++ preJ (str.++ stem4 sufJ)) (str.++ unch14J (str.++ ch4J unch24J))))
(assert (= "zlo4ij" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "zlo4ijam" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "zlo4ijeOi" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "zlo4ijeOi" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (= (ite (= ch4I var4I) 0 1) sc4I))
(assert (= (ite (= ch4J var4J) 0 1) sc4J))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= sc4I 1))
(assert (<= sc4J 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (<= (str.len var5I) 1))
(assert (<= (str.len var5J) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= (str.++ preI (str.++ stem5 sufI)) (str.++ unch15I (str.++ ch5I unch25I))))
(assert (= (str.++ preJ (str.++ stem5 sufJ)) (str.++ unch15J (str.++ ch5J unch25J))))
(assert (= "5i6a7" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "5i6a7am" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "5i6aPeOi" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "5i6a7i" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (= (ite (= ch5I var5I) 0 1) sc5I))
(assert (= (ite (= ch5J var5J) 0 1) sc5J))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= sc5I 1))
(assert (<= sc5J 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (<= (str.len var6I) 1))
(assert (<= (str.len var6J) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= (str.++ preI (str.++ stem6 sufI)) (str.++ unch16I (str.++ ch6I unch26I))))
(assert (= (str.++ preJ (str.++ stem6 sufJ)) (str.++ unch16J (str.++ ch6J unch26J))))
(assert (= "korovaj" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "korovajam" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "korovajeOi" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "korovaji" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (= (ite (= ch6I var6I) 0 1) sc6I))
(assert (= (ite (= ch6J var6J) 0 1) sc6J))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (<= sc6I 1))
(assert (<= sc6J 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (<= (str.len var7G) 1))
(assert (<= (str.len var7H) 1))
(assert (<= (str.len var7I) 1))
(assert (<= (str.len var7J) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= (str.++ preG (str.++ stem7 sufG)) (str.++ unch17G (str.++ ch7G unch27G))))
(assert (= (str.++ preH (str.++ stem7 sufH)) (str.++ unch17H (str.++ ch7H unch27H))))
(assert (= (str.++ preI (str.++ stem7 sufI)) (str.++ unch17I (str.++ ch7I unch27I))))
(assert (= (str.++ preJ (str.++ stem7 sufJ)) (str.++ unch17J (str.++ ch7J unch27J))))
(assert (= "ka5i8" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "kame8am" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "kameneOi" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= "kame8i" (str.++ unch17D (str.++ var7D unch27D))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (= (ite (= ch7G var7G) 0 1) sc7G))
(assert (= (ite (= ch7H var7H) 0 1) sc7H))
(assert (= (ite (= ch7I var7I) 0 1) sc7I))
(assert (= (ite (= ch7J var7J) 0 1) sc7J))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= sc7G 1))
(assert (<= sc7H 1))
(assert (<= sc7I 1))
(assert (<= sc7J 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (<= (str.len var8G) 1))
(assert (<= (str.len var8H) 1))
(assert (<= (str.len var8I) 1))
(assert (<= (str.len var8J) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= (str.++ preG (str.++ stem8 sufG)) (str.++ unch18G (str.++ ch8G unch28G))))
(assert (= (str.++ preH (str.++ stem8 sufH)) (str.++ unch18H (str.++ ch8H unch28H))))
(assert (= (str.++ preI (str.++ stem8 sufI)) (str.++ unch18I (str.++ ch8I unch28I))))
(assert (= (str.++ preJ (str.++ stem8 sufJ)) (str.++ unch18J (str.++ ch8J unch28J))))
(assert (= "5i4" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "5i4am" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "5ideOi" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= "5i4i" (str.++ unch18D (str.++ var8D unch28D))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (= (ite (= ch8G var8G) 0 1) sc8G))
(assert (= (ite (= ch8H var8H) 0 1) sc8H))
(assert (= (ite (= ch8I var8I) 0 1) sc8I))
(assert (= (ite (= ch8J var8J) 0 1) sc8J))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= sc8G 1))
(assert (<= sc8H 1))
(assert (<= sc8I 1))
(assert (<= sc8J 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (<= (str.len var9G) 1))
(assert (<= (str.len var9H) 1))
(assert (<= (str.len var9I) 1))
(assert (<= (str.len var9J) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= (str.++ preG (str.++ stem9 sufG)) (str.++ unch19G (str.++ ch9G unch29G))))
(assert (= (str.++ preH (str.++ stem9 sufH)) (str.++ unch19H (str.++ ch9H unch29H))))
(assert (= (str.++ preI (str.++ stem9 sufI)) (str.++ unch19I (str.++ ch9I unch29I))))
(assert (= (str.++ preJ (str.++ stem9 sufJ)) (str.++ unch19J (str.++ ch9J unch29J))))
(assert (= "x3iw" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "x3ivam" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "x3ivoOi" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= "x3iOi" (str.++ unch19D (str.++ var9D unch29D))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (= (ite (= ch9G var9G) 0 1) sc9G))
(assert (= (ite (= ch9H var9H) 0 1) sc9H))
(assert (= (ite (= ch9I var9I) 0 1) sc9I))
(assert (= (ite (= ch9J var9J) 0 1) sc9J))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= sc9G 1))
(assert (<= sc9H 1))
(assert (<= sc9I 1))
(assert (<= sc9J 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (<= (str.len var10G) 1))
(assert (<= (str.len var10H) 1))
(assert (<= (str.len var10I) 1))
(assert (<= (str.len var10J) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= (str.++ preG (str.++ stem10 sufG)) (str.++ unch110G (str.++ ch10G unch210G))))
(assert (= (str.++ preH (str.++ stem10 sufH)) (str.++ unch110H (str.++ ch10H unch210H))))
(assert (= (str.++ preI (str.++ stem10 sufI)) (str.++ unch110I (str.++ ch10I unch210I))))
(assert (= (str.++ preJ (str.++ stem10 sufJ)) (str.++ unch110J (str.++ ch10J unch210J))))
(assert (= "holub" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "holubam" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "holuboOi" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= "holuXi" (str.++ unch110D (str.++ var10D unch210D))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (= (ite (= ch10G var10G) 0 1) sc10G))
(assert (= (ite (= ch10H var10H) 0 1) sc10H))
(assert (= (ite (= ch10I var10I) 0 1) sc10I))
(assert (= (ite (= ch10J var10J) 0 1) sc10J))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= sc10G 1))
(assert (<= sc10H 1))
(assert (<= sc10I 1))
(assert (<= sc10J 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (<= (str.len var11G) 1))
(assert (<= (str.len var11H) 1))
(assert (<= (str.len var11I) 1))
(assert (<= (str.len var11J) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= (str.++ preG (str.++ stem11 sufG)) (str.++ unch111G (str.++ ch11G unch211G))))
(assert (= (str.++ preH (str.++ stem11 sufH)) (str.++ unch111H (str.++ ch11H unch211H))))
(assert (= (str.++ preI (str.++ stem11 sufI)) (str.++ unch111I (str.++ ch11I unch211I))))
(assert (= (str.++ preJ (str.++ stem11 sufJ)) (str.++ unch111J (str.++ ch11J unch211J))))
(assert (= "6in" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "6inam" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "6inoOi" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= "6i8i" (str.++ unch111D (str.++ var11D unch211D))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (= (ite (= ch11G var11G) 0 1) sc11G))
(assert (= (ite (= ch11H var11H) 0 1) sc11H))
(assert (= (ite (= ch11I var11I) 0 1) sc11I))
(assert (= (ite (= ch11J var11J) 0 1) sc11J))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= sc11G 1))
(assert (<= sc11H 1))
(assert (<= sc11I 1))
(assert (<= sc11J 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (<= (str.len var12G) 1))
(assert (<= (str.len var12H) 1))
(assert (<= (str.len var12I) 1))
(assert (<= (str.len var12J) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= (str.++ preG (str.++ stem12 sufG)) (str.++ unch112G (str.++ ch12G unch212G))))
(assert (= (str.++ preH (str.++ stem12 sufH)) (str.++ unch112H (str.++ ch12H unch212H))))
(assert (= (str.++ preI (str.++ stem12 sufI)) (str.++ unch112I (str.++ ch12I unch212I))))
(assert (= (str.++ preJ (str.++ stem12 sufJ)) (str.++ unch112J (str.++ ch12J unch212J))))
(assert (= "leXi4" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "lebe4am" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "lebedeOi" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= "lebe4i" (str.++ unch112D (str.++ var12D unch212D))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (= (ite (= ch12G var12G) 0 1) sc12G))
(assert (= (ite (= ch12H var12H) 0 1) sc12H))
(assert (= (ite (= ch12I var12I) 0 1) sc12I))
(assert (= (ite (= ch12J var12J) 0 1) sc12J))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= sc12G 1))
(assert (<= sc12H 1))
(assert (<= sc12I 1))
(assert (<= sc12J 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (<= (str.len var13G) 1))
(assert (<= (str.len var13H) 1))
(assert (<= (str.len var13I) 1))
(assert (<= (str.len var13J) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= (str.++ preG (str.++ stem13 sufG)) (str.++ unch113G (str.++ ch13G unch213G))))
(assert (= (str.++ preH (str.++ stem13 sufH)) (str.++ unch113H (str.++ ch13H unch213H))))
(assert (= (str.++ preI (str.++ stem13 sufI)) (str.++ unch113I (str.++ ch13I unch213I))))
(assert (= (str.++ preJ (str.++ stem13 sufJ)) (str.++ unch113J (str.++ ch13J unch213J))))
(assert (= "su6id" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "su6idam" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "su6idoOi" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= "su6idoOi" (str.++ unch113E (str.++ var13E unch213E))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (= (ite (= ch13G var13G) 0 1) sc13G))
(assert (= (ite (= ch13H var13H) 0 1) sc13H))
(assert (= (ite (= ch13I var13I) 0 1) sc13I))
(assert (= (ite (= ch13J var13J) 0 1) sc13J))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= sc13G 1))
(assert (<= sc13H 1))
(assert (<= sc13I 1))
(assert (<= sc13J 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (<= (str.len var14G) 1))
(assert (<= (str.len var14H) 1))
(assert (<= (str.len var14I) 1))
(assert (<= (str.len var14J) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= (str.++ preG (str.++ stem14 sufG)) (str.++ unch114G (str.++ ch14G unch214G))))
(assert (= (str.++ preH (str.++ stem14 sufH)) (str.++ unch114H (str.++ ch14H unch214H))))
(assert (= (str.++ preI (str.++ stem14 sufI)) (str.++ unch114I (str.++ ch14I unch214I))))
(assert (= (str.++ preJ (str.++ stem14 sufJ)) (str.++ unch114J (str.++ ch14J unch214J))))
(assert (= "EoloOik" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "EoloOikam" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "EoloOikoOi" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= "EoloOikoOi" (str.++ unch114E (str.++ var14E unch214E))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (= (ite (= ch14G var14G) 0 1) sc14G))
(assert (= (ite (= ch14H var14H) 0 1) sc14H))
(assert (= (ite (= ch14I var14I) 0 1) sc14I))
(assert (= (ite (= ch14J var14J) 0 1) sc14J))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= sc14G 1))
(assert (<= sc14H 1))
(assert (<= sc14I 1))
(assert (<= sc14J 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (<= (str.len var15G) 1))
(assert (<= (str.len var15H) 1))
(assert (<= (str.len var15I) 1))
(assert (<= (str.len var15J) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= (str.++ preG (str.++ stem15 sufG)) (str.++ unch115G (str.++ ch15G unch215G))))
(assert (= (str.++ preH (str.++ stem15 sufH)) (str.++ unch115H (str.++ ch15H unch215H))))
(assert (= (str.++ preI (str.++ stem15 sufI)) (str.++ unch115I (str.++ ch15I unch215I))))
(assert (= (str.++ preJ (str.++ stem15 sufJ)) (str.++ unch115J (str.++ ch15J unch215J))))
(assert (= "3id" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "ledam" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "ledoOi" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= "le4i" (str.++ unch115D (str.++ var15D unch215D))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (= (ite (= ch15G var15G) 0 1) sc15G))
(assert (= (ite (= ch15H var15H) 0 1) sc15H))
(assert (= (ite (= ch15I var15I) 0 1) sc15I))
(assert (= (ite (= ch15J var15J) 0 1) sc15J))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= sc15G 1))
(assert (<= sc15H 1))
(assert (<= sc15I 1))
(assert (<= sc15J 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (<= (str.len var16G) 1))
(assert (<= (str.len var16H) 1))
(assert (<= (str.len var16I) 1))
(assert (<= (str.len var16J) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= (str.++ preG (str.++ stem16 sufG)) (str.++ unch116G (str.++ ch16G unch216G))))
(assert (= (str.++ preH (str.++ stem16 sufH)) (str.++ unch116H (str.++ ch16H unch216H))))
(assert (= (str.++ preI (str.++ stem16 sufI)) (str.++ unch116I (str.++ ch16I unch216I))))
(assert (= (str.++ preJ (str.++ stem16 sufJ)) (str.++ unch116J (str.++ ch16J unch216J))))
(assert (= "bi3" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bo3am" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "boleOi" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= "bo3i" (str.++ unch116D (str.++ var16D unch216D))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (= (ite (= ch16G var16G) 0 1) sc16G))
(assert (= (ite (= ch16H var16H) 0 1) sc16H))
(assert (= (ite (= ch16I var16I) 0 1) sc16I))
(assert (= (ite (= ch16J var16J) 0 1) sc16J))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= sc16G 1))
(assert (<= sc16H 1))
(assert (<= sc16I 1))
(assert (<= sc16J 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (<= (str.len var17G) 1))
(assert (<= (str.len var17H) 1))
(assert (<= (str.len var17I) 1))
(assert (<= (str.len var17J) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= (str.++ preG (str.++ stem17 sufG)) (str.++ unch117G (str.++ ch17G unch217G))))
(assert (= (str.++ preH (str.++ stem17 sufH)) (str.++ unch117H (str.++ ch17H unch217H))))
(assert (= (str.++ preI (str.++ stem17 sufI)) (str.++ unch117I (str.++ ch17I unch217I))))
(assert (= (str.++ preJ (str.++ stem17 sufJ)) (str.++ unch117J (str.++ ch17J unch217J))))
(assert (= "riw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "rovam" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "rovoOi" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= "roOi" (str.++ unch117D (str.++ var17D unch217D))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (= (ite (= ch17G var17G) 0 1) sc17G))
(assert (= (ite (= ch17H var17H) 0 1) sc17H))
(assert (= (ite (= ch17I var17I) 0 1) sc17I))
(assert (= (ite (= ch17J var17J) 0 1) sc17J))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= sc17G 1))
(assert (<= sc17H 1))
(assert (<= sc17I 1))
(assert (<= sc17J 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (<= (str.len var18G) 1))
(assert (<= (str.len var18H) 1))
(assert (<= (str.len var18I) 1))
(assert (<= (str.len var18J) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= (str.++ preG (str.++ stem18 sufG)) (str.++ unch118G (str.++ ch18G unch218G))))
(assert (= (str.++ preH (str.++ stem18 sufH)) (str.++ unch118H (str.++ ch18H unch218H))))
(assert (= (str.++ preI (str.++ stem18 sufI)) (str.++ unch118I (str.++ ch18I unch218I))))
(assert (= (str.++ preJ (str.++ stem18 sufJ)) (str.++ unch118J (str.++ ch18J unch218J))))
(assert (= "stiw" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "stolam" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "stoloOi" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= "sto3i" (str.++ unch118D (str.++ var18D unch218D))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (= (ite (= ch18G var18G) 0 1) sc18G))
(assert (= (ite (= ch18H var18H) 0 1) sc18H))
(assert (= (ite (= ch18I var18I) 0 1) sc18I))
(assert (= (ite (= ch18J var18J) 0 1) sc18J))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= sc18G 1))
(assert (<= sc18H 1))
(assert (<= sc18I 1))
(assert (<= sc18J 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (<= (str.len var19G) 1))
(assert (<= (str.len var19H) 1))
(assert (<= (str.len var19I) 1))
(assert (<= (str.len var19J) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= (str.++ preG (str.++ stem19 sufG)) (str.++ unch119G (str.++ ch19G unch219G))))
(assert (= (str.++ preH (str.++ stem19 sufH)) (str.++ unch119H (str.++ ch19H unch219H))))
(assert (= (str.++ preI (str.++ stem19 sufI)) (str.++ unch119I (str.++ ch19I unch219I))))
(assert (= (str.++ preJ (str.++ stem19 sufJ)) (str.++ unch119J (str.++ ch19J unch219J))))
(assert (= "4id" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "4idam" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "4idoOi" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= "4idoOi" (str.++ unch119E (str.++ var19E unch219E))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (= (ite (= ch19G var19G) 0 1) sc19G))
(assert (= (ite (= ch19H var19H) 0 1) sc19H))
(assert (= (ite (= ch19I var19I) 0 1) sc19I))
(assert (= (ite (= ch19J var19J) 0 1) sc19J))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= sc19G 1))
(assert (<= sc19H 1))
(assert (<= sc19I 1))
(assert (<= sc19J 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (<= (str.len var20G) 1))
(assert (<= (str.len var20H) 1))
(assert (<= (str.len var20I) 1))
(assert (<= (str.len var20J) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= (str.++ preG (str.++ stem20 sufG)) (str.++ unch120G (str.++ ch20G unch220G))))
(assert (= (str.++ preH (str.++ stem20 sufH)) (str.++ unch120H (str.++ ch20H unch220H))))
(assert (= (str.++ preI (str.++ stem20 sufI)) (str.++ unch120I (str.++ ch20I unch220I))))
(assert (= (str.++ preJ (str.++ stem20 sufJ)) (str.++ unch120J (str.++ ch20J unch220J))))
(assert (= "3it" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "3otam" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "3otoOi" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= "3oZi" (str.++ unch120D (str.++ var20D unch220D))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (= (ite (= ch20G var20G) 0 1) sc20G))
(assert (= (ite (= ch20H var20H) 0 1) sc20H))
(assert (= (ite (= ch20I var20I) 0 1) sc20I))
(assert (= (ite (= ch20J var20J) 0 1) sc20J))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= sc20G 1))
(assert (<= sc20H 1))
(assert (<= sc20I 1))
(assert (<= sc20J 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (<= (str.len var21G) 1))
(assert (<= (str.len var21H) 1))
(assert (<= (str.len var21I) 1))
(assert (<= (str.len var21J) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= (str.++ preG (str.++ stem21 sufG)) (str.++ unch121G (str.++ ch21G unch221G))))
(assert (= (str.++ preH (str.++ stem21 sufH)) (str.++ unch121H (str.++ ch21H unch221H))))
(assert (= (str.++ preI (str.++ stem21 sufI)) (str.++ unch121I (str.++ ch21I unch221I))))
(assert (= (str.++ preJ (str.++ stem21 sufJ)) (str.++ unch121J (str.++ ch21J unch221J))))
(assert (= "mist" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "mostam" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "mostoOi" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= "mosZi" (str.++ unch121D (str.++ var21D unch221D))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (= (ite (= ch21G var21G) 0 1) sc21G))
(assert (= (ite (= ch21H var21H) 0 1) sc21H))
(assert (= (ite (= ch21I var21I) 0 1) sc21I))
(assert (= (ite (= ch21J var21J) 0 1) sc21J))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= sc21G 1))
(assert (<= sc21H 1))
(assert (<= sc21I 1))
(assert (<= sc21J 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (<= (str.len var22G) 1))
(assert (<= (str.len var22H) 1))
(assert (<= (str.len var22I) 1))
(assert (<= (str.len var22J) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= (str.++ preG (str.++ stem22 sufG)) (str.++ unch122G (str.++ ch22G unch222G))))
(assert (= (str.++ preH (str.++ stem22 sufH)) (str.++ unch122H (str.++ ch22H unch222H))))
(assert (= (str.++ preI (str.++ stem22 sufI)) (str.++ unch122I (str.++ ch22I unch222I))))
(assert (= (str.++ preJ (str.++ stem22 sufJ)) (str.++ unch122J (str.++ ch22J unch222J))))
(assert (= "veEir" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "veEoram" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "veEoroOi" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= "veEo9i" (str.++ unch122D (str.++ var22D unch222D))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (= (ite (= ch22G var22G) 0 1) sc22G))
(assert (= (ite (= ch22H var22H) 0 1) sc22H))
(assert (= (ite (= ch22I var22I) 0 1) sc22I))
(assert (= (ite (= ch22J var22J) 0 1) sc22J))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= sc22G 1))
(assert (<= sc22H 1))
(assert (<= sc22I 1))
(assert (<= sc22J 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (<= (str.len var23G) 1))
(assert (<= (str.len var23H) 1))
(assert (<= (str.len var23I) 1))
(assert (<= (str.len var23J) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= (str.++ preG (str.++ stem23 sufG)) (str.++ unch123G (str.++ ch23G unch223G))))
(assert (= (str.++ preH (str.++ stem23 sufH)) (str.++ unch123H (str.++ ch23H unch223H))))
(assert (= (str.++ preI (str.++ stem23 sufI)) (str.++ unch123I (str.++ ch23I unch223I))))
(assert (= (str.++ preJ (str.++ stem23 sufJ)) (str.++ unch123J (str.++ ch23J unch223J))))
(assert (= "Zilo" (str.++ unch123F (str.++ var23F unch223F))))
(assert (= "Zila" (str.++ unch123G (str.++ var23G unch223G))))
(assert (= "Zilu" (str.++ unch123H (str.++ var23H unch223H))))
(assert (= "Zi3i" (str.++ unch123I (str.++ var23I unch223I))))
(assert (= "Ziw" (str.++ unch123J (str.++ var23J unch223J))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (= (ite (= ch23G var23G) 0 1) sc23G))
(assert (= (ite (= ch23H var23H) 0 1) sc23H))
(assert (= (ite (= ch23I var23I) 0 1) sc23I))
(assert (= (ite (= ch23J var23J) 0 1) sc23J))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= sc23G 1))
(assert (<= sc23H 1))
(assert (<= sc23I 1))
(assert (<= sc23J 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (<= (str.len var24G) 1))
(assert (<= (str.len var24H) 1))
(assert (<= (str.len var24I) 1))
(assert (<= (str.len var24J) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= (str.++ preG (str.++ stem24 sufG)) (str.++ unch124G (str.++ ch24G unch224G))))
(assert (= (str.++ preH (str.++ stem24 sufH)) (str.++ unch124H (str.++ ch24H unch224H))))
(assert (= (str.++ preI (str.++ stem24 sufI)) (str.++ unch124I (str.++ ch24I unch224I))))
(assert (= (str.++ preJ (str.++ stem24 sufJ)) (str.++ unch124J (str.++ ch24J unch224J))))
(assert (= "koleso" (str.++ unch124F (str.++ var24F unch224F))))
(assert (= "kolesa" (str.++ unch124G (str.++ var24G unch224G))))
(assert (= "kolesu" (str.++ unch124H (str.++ var24H unch224H))))
(assert (= "kole6i" (str.++ unch124I (str.++ var24I unch224I))))
(assert (= "ko3is" (str.++ unch124J (str.++ var24J unch224J))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (= (ite (= ch24G var24G) 0 1) sc24G))
(assert (= (ite (= ch24H var24H) 0 1) sc24H))
(assert (= (ite (= ch24I var24I) 0 1) sc24I))
(assert (= (ite (= ch24J var24J) 0 1) sc24J))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= sc24G 1))
(assert (<= sc24H 1))
(assert (<= sc24I 1))
(assert (<= sc24J 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (<= (str.len var25G) 1))
(assert (<= (str.len var25H) 1))
(assert (<= (str.len var25I) 1))
(assert (<= (str.len var25J) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= (str.++ preG (str.++ stem25 sufG)) (str.++ unch125G (str.++ ch25G unch225G))))
(assert (= (str.++ preH (str.++ stem25 sufH)) (str.++ unch125H (str.++ ch25H unch225H))))
(assert (= (str.++ preI (str.++ stem25 sufI)) (str.++ unch125I (str.++ ch25I unch225I))))
(assert (= (str.++ preJ (str.++ stem25 sufJ)) (str.++ unch125J (str.++ ch25J unch225J))))
(assert (= "ozero" (str.++ unch125F (str.++ var25F unch225F))))
(assert (= "ozera" (str.++ unch125G (str.++ var25G unch225G))))
(assert (= "ozeru" (str.++ unch125H (str.++ var25H unch225H))))
(assert (= "oze9i" (str.++ unch125I (str.++ var25I unch225I))))
(assert (= "o1ir" (str.++ unch125J (str.++ var25J unch225J))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (= (ite (= ch25G var25G) 0 1) sc25G))
(assert (= (ite (= ch25H var25H) 0 1) sc25H))
(assert (= (ite (= ch25I var25I) 0 1) sc25I))
(assert (= (ite (= ch25J var25J) 0 1) sc25J))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= sc25G 1))
(assert (<= sc25H 1))
(assert (<= sc25I 1))
(assert (<= sc25J 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (<= (str.len var26G) 1))
(assert (<= (str.len var26H) 1))
(assert (<= (str.len var26I) 1))
(assert (<= (str.len var26J) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= (str.++ preG (str.++ stem26 sufG)) (str.++ unch126G (str.++ ch26G unch226G))))
(assert (= (str.++ preH (str.++ stem26 sufH)) (str.++ unch126H (str.++ ch26H unch226H))))
(assert (= (str.++ preI (str.++ stem26 sufI)) (str.++ unch126I (str.++ ch26I unch226I))))
(assert (= (str.++ preJ (str.++ stem26 sufJ)) (str.++ unch126J (str.++ ch26J unch226J))))
(assert (= "selo" (str.++ unch126F (str.++ var26F unch226F))))
(assert (= "sela" (str.++ unch126G (str.++ var26G unch226G))))
(assert (= "selu" (str.++ unch126H (str.++ var26H unch226H))))
(assert (= "se3i" (str.++ unch126I (str.++ var26I unch226I))))
(assert (= "6iw" (str.++ unch126J (str.++ var26J unch226J))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (= (ite (= ch26G var26G) 0 1) sc26G))
(assert (= (ite (= ch26H var26H) 0 1) sc26H))
(assert (= (ite (= ch26I var26I) 0 1) sc26I))
(assert (= (ite (= ch26J var26J) 0 1) sc26J))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= sc26G 1))
(assert (<= sc26H 1))
(assert (<= sc26I 1))
(assert (<= sc26J 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (<= (str.len var27G) 1))
(assert (<= (str.len var27H) 1))
(assert (<= (str.len var27I) 1))
(assert (<= (str.len var27J) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= (str.++ preG (str.++ stem27 sufG)) (str.++ unch127G (str.++ ch27G unch227G))))
(assert (= (str.++ preH (str.++ stem27 sufH)) (str.++ unch127H (str.++ ch27H unch227H))))
(assert (= (str.++ preI (str.++ stem27 sufI)) (str.++ unch127I (str.++ ch27I unch227I))))
(assert (= (str.++ preJ (str.++ stem27 sufJ)) (str.++ unch127J (str.++ ch27J unch227J))))
(assert (= "pole" (str.++ unch127F (str.++ var27F unch227F))))
(assert (= "po3a" (str.++ unch127G (str.++ var27G unch227G))))
(assert (= "po3u" (str.++ unch127H (str.++ var27H unch227H))))
(assert (= "po3i" (str.++ unch127I (str.++ var27I unch227I))))
(assert (= "pi3" (str.++ unch127J (str.++ var27J unch227J))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (= (ite (= ch27G var27G) 0 1) sc27G))
(assert (= (ite (= ch27H var27H) 0 1) sc27H))
(assert (= (ite (= ch27I var27I) 0 1) sc27I))
(assert (= (ite (= ch27J var27J) 0 1) sc27J))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= sc27G 1))
(assert (<= sc27H 1))
(assert (<= sc27I 1))
(assert (<= sc27J 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (<= (str.len var28G) 1))
(assert (<= (str.len var28H) 1))
(assert (<= (str.len var28I) 1))
(assert (<= (str.len var28J) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= (str.++ preG (str.++ stem28 sufG)) (str.++ unch128G (str.++ ch28G unch228G))))
(assert (= (str.++ preH (str.++ stem28 sufH)) (str.++ unch128H (str.++ ch28H unch228H))))
(assert (= (str.++ preI (str.++ stem28 sufI)) (str.++ unch128I (str.++ ch28I unch228I))))
(assert (= (str.++ preJ (str.++ stem28 sufJ)) (str.++ unch128J (str.++ ch28J unch228J))))
(assert (= "slovo" (str.++ unch128F (str.++ var28F unch228F))))
(assert (= "slova" (str.++ unch128G (str.++ var28G unch228G))))
(assert (= "slovu" (str.++ unch128H (str.++ var28H unch228H))))
(assert (= "sloOi" (str.++ unch128I (str.++ var28I unch228I))))
(assert (= "sliw" (str.++ unch128J (str.++ var28J unch228J))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (= (ite (= ch28G var28G) 0 1) sc28G))
(assert (= (ite (= ch28H var28H) 0 1) sc28H))
(assert (= (ite (= ch28I var28I) 0 1) sc28I))
(assert (= (ite (= ch28J var28J) 0 1) sc28J))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= sc28G 1))
(assert (<= sc28H 1))
(assert (<= sc28I 1))
(assert (<= sc28J 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (<= (str.len var29G) 1))
(assert (<= (str.len var29H) 1))
(assert (<= (str.len var29I) 1))
(assert (<= (str.len var29J) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= (str.++ preG (str.++ stem29 sufG)) (str.++ unch129G (str.++ ch29G unch229G))))
(assert (= (str.++ preH (str.++ stem29 sufH)) (str.++ unch129H (str.++ ch29H unch229H))))
(assert (= (str.++ preI (str.++ stem29 sufI)) (str.++ unch129I (str.++ ch29I unch229I))))
(assert (= (str.++ preJ (str.++ stem29 sufJ)) (str.++ unch129J (str.++ ch29J unch229J))))
(assert (= "more" (str.++ unch129F (str.++ var29F unch229F))))
(assert (= "mo9a" (str.++ unch129G (str.++ var29G unch229G))))
(assert (= "mo9u" (str.++ unch129H (str.++ var29H unch229H))))
(assert (= "mo9i" (str.++ unch129I (str.++ var29I unch229I))))
(assert (= "mi9" (str.++ unch129J (str.++ var29J unch229J))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (= (ite (= ch29G var29G) 0 1) sc29G))
(assert (= (ite (= ch29H var29H) 0 1) sc29H))
(assert (= (ite (= ch29I var29I) 0 1) sc29I))
(assert (= (ite (= ch29J var29J) 0 1) sc29J))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= sc29G 1))
(assert (<= sc29H 1))
(assert (<= sc29I 1))
(assert (<= sc29J 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      sc0I
      sc0J
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      sc1I
      sc1J
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      sc2I
      sc2J
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      sc3I
      sc3J
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      sc4I
      sc4J
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      sc5I
      sc5J
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H
      sc6I
      sc6J
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      sc7G
      sc7H
      sc7I
      sc7J
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      sc8G
      sc8H
      sc8I
      sc8J
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      sc9G
      sc9H
      sc9I
      sc9J
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      sc10G
      sc10H
      sc10I
      sc10J
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      sc11G
      sc11H
      sc11I
      sc11J
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      sc12G
      sc12H
      sc12I
      sc12J
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      sc13G
      sc13H
      sc13I
      sc13J
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      sc14G
      sc14H
      sc14I
      sc14J
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      sc15G
      sc15H
      sc15I
      sc15J
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      sc16G
      sc16H
      sc16I
      sc16J
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      sc17G
      sc17H
      sc17I
      sc17J
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      sc18G
      sc18H
      sc18I
      sc18J
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      sc19G
      sc19H
      sc19I
      sc19J
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      sc20G
      sc20H
      sc20I
      sc20J
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      sc21G
      sc21H
      sc21I
      sc21J
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      sc22G
      sc22H
      sc22I
      sc22J
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      sc23G
      sc23H
      sc23I
      sc23J
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      sc24G
      sc24H
      sc24I
      sc24J
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      sc25G
      sc25H
      sc25I
      sc25J
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      sc26G
      sc26H
      sc26I
      sc26J
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      sc27G
      sc27H
      sc27I
      sc27J
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      sc28G
      sc28H
      sc28I
      sc28J
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      sc29G
      sc29H
      sc29I
      sc29J)
   9))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun var0I () String)
(declare-fun var0J () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun unch20I () String)
(declare-fun ch0I () String)
(declare-fun unch10I () String)
(declare-fun sufI () String)
(declare-fun preI () String)
(declare-fun unch20J () String)
(declare-fun ch0J () String)
(declare-fun unch10J () String)
(declare-fun sufJ () String)
(declare-fun preJ () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun sc0I () Int)
(declare-fun sc0J () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun var1I () String)
(declare-fun var1J () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun unch21I () String)
(declare-fun ch1I () String)
(declare-fun unch11I () String)
(declare-fun unch21J () String)
(declare-fun ch1J () String)
(declare-fun unch11J () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun sc1I () Int)
(declare-fun sc1J () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun var2I () String)
(declare-fun var2J () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun unch22I () String)
(declare-fun ch2I () String)
(declare-fun unch12I () String)
(declare-fun unch22J () String)
(declare-fun ch2J () String)
(declare-fun unch12J () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun sc2I () Int)
(declare-fun sc2J () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun var3I () String)
(declare-fun var3J () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun unch23I () String)
(declare-fun ch3I () String)
(declare-fun unch13I () String)
(declare-fun unch23J () String)
(declare-fun ch3J () String)
(declare-fun unch13J () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun sc3I () Int)
(declare-fun sc3J () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun var4I () String)
(declare-fun var4J () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun unch24I () String)
(declare-fun ch4I () String)
(declare-fun unch14I () String)
(declare-fun unch24J () String)
(declare-fun ch4J () String)
(declare-fun unch14J () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun sc4I () Int)
(declare-fun sc4J () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun var5I () String)
(declare-fun var5J () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun unch25I () String)
(declare-fun ch5I () String)
(declare-fun unch15I () String)
(declare-fun unch25J () String)
(declare-fun ch5J () String)
(declare-fun unch15J () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun sc5I () Int)
(declare-fun sc5J () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun var6I () String)
(declare-fun var6J () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun unch26I () String)
(declare-fun ch6I () String)
(declare-fun unch16I () String)
(declare-fun unch26J () String)
(declare-fun ch6J () String)
(declare-fun unch16J () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(declare-fun sc6I () Int)
(declare-fun sc6J () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun var7G () String)
(declare-fun var7H () String)
(declare-fun var7I () String)
(declare-fun var7J () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun unch27G () String)
(declare-fun ch7G () String)
(declare-fun unch17G () String)
(declare-fun unch27H () String)
(declare-fun ch7H () String)
(declare-fun unch17H () String)
(declare-fun unch27I () String)
(declare-fun ch7I () String)
(declare-fun unch17I () String)
(declare-fun unch27J () String)
(declare-fun ch7J () String)
(declare-fun unch17J () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun sc7G () Int)
(declare-fun sc7H () Int)
(declare-fun sc7I () Int)
(declare-fun sc7J () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun var8G () String)
(declare-fun var8H () String)
(declare-fun var8I () String)
(declare-fun var8J () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun unch28G () String)
(declare-fun ch8G () String)
(declare-fun unch18G () String)
(declare-fun unch28H () String)
(declare-fun ch8H () String)
(declare-fun unch18H () String)
(declare-fun unch28I () String)
(declare-fun ch8I () String)
(declare-fun unch18I () String)
(declare-fun unch28J () String)
(declare-fun ch8J () String)
(declare-fun unch18J () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun sc8G () Int)
(declare-fun sc8H () Int)
(declare-fun sc8I () Int)
(declare-fun sc8J () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun var9G () String)
(declare-fun var9H () String)
(declare-fun var9I () String)
(declare-fun var9J () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun unch29G () String)
(declare-fun ch9G () String)
(declare-fun unch19G () String)
(declare-fun unch29H () String)
(declare-fun ch9H () String)
(declare-fun unch19H () String)
(declare-fun unch29I () String)
(declare-fun ch9I () String)
(declare-fun unch19I () String)
(declare-fun unch29J () String)
(declare-fun ch9J () String)
(declare-fun unch19J () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun sc9G () Int)
(declare-fun sc9H () Int)
(declare-fun sc9I () Int)
(declare-fun sc9J () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun var10G () String)
(declare-fun var10H () String)
(declare-fun var10I () String)
(declare-fun var10J () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun unch210G () String)
(declare-fun ch10G () String)
(declare-fun unch110G () String)
(declare-fun unch210H () String)
(declare-fun ch10H () String)
(declare-fun unch110H () String)
(declare-fun unch210I () String)
(declare-fun ch10I () String)
(declare-fun unch110I () String)
(declare-fun unch210J () String)
(declare-fun ch10J () String)
(declare-fun unch110J () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun sc10G () Int)
(declare-fun sc10H () Int)
(declare-fun sc10I () Int)
(declare-fun sc10J () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun var11G () String)
(declare-fun var11H () String)
(declare-fun var11I () String)
(declare-fun var11J () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun unch211G () String)
(declare-fun ch11G () String)
(declare-fun unch111G () String)
(declare-fun unch211H () String)
(declare-fun ch11H () String)
(declare-fun unch111H () String)
(declare-fun unch211I () String)
(declare-fun ch11I () String)
(declare-fun unch111I () String)
(declare-fun unch211J () String)
(declare-fun ch11J () String)
(declare-fun unch111J () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun sc11G () Int)
(declare-fun sc11H () Int)
(declare-fun sc11I () Int)
(declare-fun sc11J () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun var12G () String)
(declare-fun var12H () String)
(declare-fun var12I () String)
(declare-fun var12J () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun unch212G () String)
(declare-fun ch12G () String)
(declare-fun unch112G () String)
(declare-fun unch212H () String)
(declare-fun ch12H () String)
(declare-fun unch112H () String)
(declare-fun unch212I () String)
(declare-fun ch12I () String)
(declare-fun unch112I () String)
(declare-fun unch212J () String)
(declare-fun ch12J () String)
(declare-fun unch112J () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun sc12G () Int)
(declare-fun sc12H () Int)
(declare-fun sc12I () Int)
(declare-fun sc12J () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun var13G () String)
(declare-fun var13H () String)
(declare-fun var13I () String)
(declare-fun var13J () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun unch213G () String)
(declare-fun ch13G () String)
(declare-fun unch113G () String)
(declare-fun unch213H () String)
(declare-fun ch13H () String)
(declare-fun unch113H () String)
(declare-fun unch213I () String)
(declare-fun ch13I () String)
(declare-fun unch113I () String)
(declare-fun unch213J () String)
(declare-fun ch13J () String)
(declare-fun unch113J () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun sc13G () Int)
(declare-fun sc13H () Int)
(declare-fun sc13I () Int)
(declare-fun sc13J () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun var14G () String)
(declare-fun var14H () String)
(declare-fun var14I () String)
(declare-fun var14J () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun unch214G () String)
(declare-fun ch14G () String)
(declare-fun unch114G () String)
(declare-fun unch214H () String)
(declare-fun ch14H () String)
(declare-fun unch114H () String)
(declare-fun unch214I () String)
(declare-fun ch14I () String)
(declare-fun unch114I () String)
(declare-fun unch214J () String)
(declare-fun ch14J () String)
(declare-fun unch114J () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun sc14G () Int)
(declare-fun sc14H () Int)
(declare-fun sc14I () Int)
(declare-fun sc14J () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun var15G () String)
(declare-fun var15H () String)
(declare-fun var15I () String)
(declare-fun var15J () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun unch215G () String)
(declare-fun ch15G () String)
(declare-fun unch115G () String)
(declare-fun unch215H () String)
(declare-fun ch15H () String)
(declare-fun unch115H () String)
(declare-fun unch215I () String)
(declare-fun ch15I () String)
(declare-fun unch115I () String)
(declare-fun unch215J () String)
(declare-fun ch15J () String)
(declare-fun unch115J () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun sc15G () Int)
(declare-fun sc15H () Int)
(declare-fun sc15I () Int)
(declare-fun sc15J () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun var16G () String)
(declare-fun var16H () String)
(declare-fun var16I () String)
(declare-fun var16J () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun unch216G () String)
(declare-fun ch16G () String)
(declare-fun unch116G () String)
(declare-fun unch216H () String)
(declare-fun ch16H () String)
(declare-fun unch116H () String)
(declare-fun unch216I () String)
(declare-fun ch16I () String)
(declare-fun unch116I () String)
(declare-fun unch216J () String)
(declare-fun ch16J () String)
(declare-fun unch116J () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun sc16G () Int)
(declare-fun sc16H () Int)
(declare-fun sc16I () Int)
(declare-fun sc16J () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun var17G () String)
(declare-fun var17H () String)
(declare-fun var17I () String)
(declare-fun var17J () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun unch217G () String)
(declare-fun ch17G () String)
(declare-fun unch117G () String)
(declare-fun unch217H () String)
(declare-fun ch17H () String)
(declare-fun unch117H () String)
(declare-fun unch217I () String)
(declare-fun ch17I () String)
(declare-fun unch117I () String)
(declare-fun unch217J () String)
(declare-fun ch17J () String)
(declare-fun unch117J () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun sc17G () Int)
(declare-fun sc17H () Int)
(declare-fun sc17I () Int)
(declare-fun sc17J () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun var18G () String)
(declare-fun var18H () String)
(declare-fun var18I () String)
(declare-fun var18J () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun unch218G () String)
(declare-fun ch18G () String)
(declare-fun unch118G () String)
(declare-fun unch218H () String)
(declare-fun ch18H () String)
(declare-fun unch118H () String)
(declare-fun unch218I () String)
(declare-fun ch18I () String)
(declare-fun unch118I () String)
(declare-fun unch218J () String)
(declare-fun ch18J () String)
(declare-fun unch118J () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun sc18G () Int)
(declare-fun sc18H () Int)
(declare-fun sc18I () Int)
(declare-fun sc18J () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun var19G () String)
(declare-fun var19H () String)
(declare-fun var19I () String)
(declare-fun var19J () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun unch219G () String)
(declare-fun ch19G () String)
(declare-fun unch119G () String)
(declare-fun unch219H () String)
(declare-fun ch19H () String)
(declare-fun unch119H () String)
(declare-fun unch219I () String)
(declare-fun ch19I () String)
(declare-fun unch119I () String)
(declare-fun unch219J () String)
(declare-fun ch19J () String)
(declare-fun unch119J () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun sc19G () Int)
(declare-fun sc19H () Int)
(declare-fun sc19I () Int)
(declare-fun sc19J () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun var20G () String)
(declare-fun var20H () String)
(declare-fun var20I () String)
(declare-fun var20J () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun unch220G () String)
(declare-fun ch20G () String)
(declare-fun unch120G () String)
(declare-fun unch220H () String)
(declare-fun ch20H () String)
(declare-fun unch120H () String)
(declare-fun unch220I () String)
(declare-fun ch20I () String)
(declare-fun unch120I () String)
(declare-fun unch220J () String)
(declare-fun ch20J () String)
(declare-fun unch120J () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun sc20G () Int)
(declare-fun sc20H () Int)
(declare-fun sc20I () Int)
(declare-fun sc20J () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun var21G () String)
(declare-fun var21H () String)
(declare-fun var21I () String)
(declare-fun var21J () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun unch221G () String)
(declare-fun ch21G () String)
(declare-fun unch121G () String)
(declare-fun unch221H () String)
(declare-fun ch21H () String)
(declare-fun unch121H () String)
(declare-fun unch221I () String)
(declare-fun ch21I () String)
(declare-fun unch121I () String)
(declare-fun unch221J () String)
(declare-fun ch21J () String)
(declare-fun unch121J () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun sc21G () Int)
(declare-fun sc21H () Int)
(declare-fun sc21I () Int)
(declare-fun sc21J () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun var22G () String)
(declare-fun var22H () String)
(declare-fun var22I () String)
(declare-fun var22J () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun unch222G () String)
(declare-fun ch22G () String)
(declare-fun unch122G () String)
(declare-fun unch222H () String)
(declare-fun ch22H () String)
(declare-fun unch122H () String)
(declare-fun unch222I () String)
(declare-fun ch22I () String)
(declare-fun unch122I () String)
(declare-fun unch222J () String)
(declare-fun ch22J () String)
(declare-fun unch122J () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun sc22G () Int)
(declare-fun sc22H () Int)
(declare-fun sc22I () Int)
(declare-fun sc22J () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun var23G () String)
(declare-fun var23H () String)
(declare-fun var23I () String)
(declare-fun var23J () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun unch223G () String)
(declare-fun ch23G () String)
(declare-fun unch123G () String)
(declare-fun unch223H () String)
(declare-fun ch23H () String)
(declare-fun unch123H () String)
(declare-fun unch223I () String)
(declare-fun ch23I () String)
(declare-fun unch123I () String)
(declare-fun unch223J () String)
(declare-fun ch23J () String)
(declare-fun unch123J () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun sc23G () Int)
(declare-fun sc23H () Int)
(declare-fun sc23I () Int)
(declare-fun sc23J () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun var24G () String)
(declare-fun var24H () String)
(declare-fun var24I () String)
(declare-fun var24J () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun unch224G () String)
(declare-fun ch24G () String)
(declare-fun unch124G () String)
(declare-fun unch224H () String)
(declare-fun ch24H () String)
(declare-fun unch124H () String)
(declare-fun unch224I () String)
(declare-fun ch24I () String)
(declare-fun unch124I () String)
(declare-fun unch224J () String)
(declare-fun ch24J () String)
(declare-fun unch124J () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun sc24G () Int)
(declare-fun sc24H () Int)
(declare-fun sc24I () Int)
(declare-fun sc24J () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun var25G () String)
(declare-fun var25H () String)
(declare-fun var25I () String)
(declare-fun var25J () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun unch225G () String)
(declare-fun ch25G () String)
(declare-fun unch125G () String)
(declare-fun unch225H () String)
(declare-fun ch25H () String)
(declare-fun unch125H () String)
(declare-fun unch225I () String)
(declare-fun ch25I () String)
(declare-fun unch125I () String)
(declare-fun unch225J () String)
(declare-fun ch25J () String)
(declare-fun unch125J () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun sc25G () Int)
(declare-fun sc25H () Int)
(declare-fun sc25I () Int)
(declare-fun sc25J () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun var26G () String)
(declare-fun var26H () String)
(declare-fun var26I () String)
(declare-fun var26J () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun unch226G () String)
(declare-fun ch26G () String)
(declare-fun unch126G () String)
(declare-fun unch226H () String)
(declare-fun ch26H () String)
(declare-fun unch126H () String)
(declare-fun unch226I () String)
(declare-fun ch26I () String)
(declare-fun unch126I () String)
(declare-fun unch226J () String)
(declare-fun ch26J () String)
(declare-fun unch126J () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun sc26G () Int)
(declare-fun sc26H () Int)
(declare-fun sc26I () Int)
(declare-fun sc26J () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun var27G () String)
(declare-fun var27H () String)
(declare-fun var27I () String)
(declare-fun var27J () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun unch227G () String)
(declare-fun ch27G () String)
(declare-fun unch127G () String)
(declare-fun unch227H () String)
(declare-fun ch27H () String)
(declare-fun unch127H () String)
(declare-fun unch227I () String)
(declare-fun ch27I () String)
(declare-fun unch127I () String)
(declare-fun unch227J () String)
(declare-fun ch27J () String)
(declare-fun unch127J () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun sc27G () Int)
(declare-fun sc27H () Int)
(declare-fun sc27I () Int)
(declare-fun sc27J () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun var28G () String)
(declare-fun var28H () String)
(declare-fun var28I () String)
(declare-fun var28J () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun unch228G () String)
(declare-fun ch28G () String)
(declare-fun unch128G () String)
(declare-fun unch228H () String)
(declare-fun ch28H () String)
(declare-fun unch128H () String)
(declare-fun unch228I () String)
(declare-fun ch28I () String)
(declare-fun unch128I () String)
(declare-fun unch228J () String)
(declare-fun ch28J () String)
(declare-fun unch128J () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun sc28G () Int)
(declare-fun sc28H () Int)
(declare-fun sc28I () Int)
(declare-fun sc28J () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun var29G () String)
(declare-fun var29H () String)
(declare-fun var29I () String)
(declare-fun var29J () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun unch229G () String)
(declare-fun ch29G () String)
(declare-fun unch129G () String)
(declare-fun unch229H () String)
(declare-fun ch29H () String)
(declare-fun unch129H () String)
(declare-fun unch229I () String)
(declare-fun ch29I () String)
(declare-fun unch129I () String)
(declare-fun unch229J () String)
(declare-fun ch29J () String)
(declare-fun unch129J () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun sc29G () Int)
(declare-fun sc29H () Int)
(declare-fun sc29I () Int)
(declare-fun sc29J () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (<= (str.len var0I) 1))
(assert (<= (str.len var0J) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= (str.++ preI (str.++ stem0 sufI)) (str.++ unch10I (str.++ ch0I unch20I))))
(assert (= (str.++ preJ (str.++ stem0 sufJ)) (str.++ unch10J (str.++ ch0J unch20J))))
(assert (= "zub" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "zubam" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "zuboOi" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "zuXi" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (= (ite (= ch0I var0I) 0 1) sc0I))
(assert (= (ite (= ch0J var0J) 0 1) sc0J))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= sc0I 1))
(assert (<= sc0J 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (<= (str.len var1I) 1))
(assert (<= (str.len var1J) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= (str.++ preI (str.++ stem1 sufI)) (str.++ unch11I (str.++ ch1I unch21I))))
(assert (= (str.++ preJ (str.++ stem1 sufJ)) (str.++ unch11J (str.++ ch1J unch21J))))
(assert (= "sOit" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "sOitam" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "sOitoOi" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "sOiZi" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (= (ite (= ch1I var1I) 0 1) sc1I))
(assert (= (ite (= ch1J var1J) 0 1) sc1J))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= sc1I 1))
(assert (<= sc1J 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (<= (str.len var2I) 1))
(assert (<= (str.len var2J) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= (str.++ preI (str.++ stem2 sufI)) (str.++ unch12I (str.++ ch2I unch22I))))
(assert (= (str.++ preJ (str.++ stem2 sufJ)) (str.++ unch12J (str.++ ch2J unch22J))))
(assert (= "1aZ" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "1aZam" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "1ateOi" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "1ateOi" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (= (ite (= ch2I var2I) 0 1) sc2I))
(assert (= (ite (= ch2J var2J) 0 1) sc2J))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= sc2I 1))
(assert (<= sc2J 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (<= (str.len var3I) 1))
(assert (<= (str.len var3J) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= (str.++ preI (str.++ stem3 sufI)) (str.++ unch13I (str.++ ch3I unch23I))))
(assert (= (str.++ preJ (str.++ stem3 sufJ)) (str.++ unch13J (str.++ ch3J unch23J))))
(assert (= "ko2i3" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "koBe3am" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "koBeleOi" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "koBe3i" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (= (ite (= ch3I var3I) 0 1) sc3I))
(assert (= (ite (= ch3J var3J) 0 1) sc3J))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= sc3I 1))
(assert (<= sc3J 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (<= (str.len var4I) 1))
(assert (<= (str.len var4J) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= (str.++ preI (str.++ stem4 sufI)) (str.++ unch14I (str.++ ch4I unch24I))))
(assert (= (str.++ preJ (str.++ stem4 sufJ)) (str.++ unch14J (str.++ ch4J unch24J))))
(assert (= "zlo4ij" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "zlo4ijam" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "zlo4ijeOi" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "zlo4ijeOi" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (= (ite (= ch4I var4I) 0 1) sc4I))
(assert (= (ite (= ch4J var4J) 0 1) sc4J))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= sc4I 1))
(assert (<= sc4J 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (<= (str.len var5I) 1))
(assert (<= (str.len var5J) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= (str.++ preI (str.++ stem5 sufI)) (str.++ unch15I (str.++ ch5I unch25I))))
(assert (= (str.++ preJ (str.++ stem5 sufJ)) (str.++ unch15J (str.++ ch5J unch25J))))
(assert (= "5i6a7" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "5i6a7am" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "5i6aPeOi" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "5i6a7i" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (= (ite (= ch5I var5I) 0 1) sc5I))
(assert (= (ite (= ch5J var5J) 0 1) sc5J))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= sc5I 1))
(assert (<= sc5J 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (<= (str.len var6I) 1))
(assert (<= (str.len var6J) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= (str.++ preI (str.++ stem6 sufI)) (str.++ unch16I (str.++ ch6I unch26I))))
(assert (= (str.++ preJ (str.++ stem6 sufJ)) (str.++ unch16J (str.++ ch6J unch26J))))
(assert (= "korovaj" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "korovajam" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "korovajeOi" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "korovaji" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (= (ite (= ch6I var6I) 0 1) sc6I))
(assert (= (ite (= ch6J var6J) 0 1) sc6J))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (<= sc6I 1))
(assert (<= sc6J 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (<= (str.len var7G) 1))
(assert (<= (str.len var7H) 1))
(assert (<= (str.len var7I) 1))
(assert (<= (str.len var7J) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= (str.++ preG (str.++ stem7 sufG)) (str.++ unch17G (str.++ ch7G unch27G))))
(assert (= (str.++ preH (str.++ stem7 sufH)) (str.++ unch17H (str.++ ch7H unch27H))))
(assert (= (str.++ preI (str.++ stem7 sufI)) (str.++ unch17I (str.++ ch7I unch27I))))
(assert (= (str.++ preJ (str.++ stem7 sufJ)) (str.++ unch17J (str.++ ch7J unch27J))))
(assert (= "ka5i8" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "kame8am" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "kameneOi" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= "kame8i" (str.++ unch17D (str.++ var7D unch27D))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (= (ite (= ch7G var7G) 0 1) sc7G))
(assert (= (ite (= ch7H var7H) 0 1) sc7H))
(assert (= (ite (= ch7I var7I) 0 1) sc7I))
(assert (= (ite (= ch7J var7J) 0 1) sc7J))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= sc7G 1))
(assert (<= sc7H 1))
(assert (<= sc7I 1))
(assert (<= sc7J 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (<= (str.len var8G) 1))
(assert (<= (str.len var8H) 1))
(assert (<= (str.len var8I) 1))
(assert (<= (str.len var8J) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= (str.++ preG (str.++ stem8 sufG)) (str.++ unch18G (str.++ ch8G unch28G))))
(assert (= (str.++ preH (str.++ stem8 sufH)) (str.++ unch18H (str.++ ch8H unch28H))))
(assert (= (str.++ preI (str.++ stem8 sufI)) (str.++ unch18I (str.++ ch8I unch28I))))
(assert (= (str.++ preJ (str.++ stem8 sufJ)) (str.++ unch18J (str.++ ch8J unch28J))))
(assert (= "5i4" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "5i4am" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "5ideOi" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= "5i4i" (str.++ unch18D (str.++ var8D unch28D))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (= (ite (= ch8G var8G) 0 1) sc8G))
(assert (= (ite (= ch8H var8H) 0 1) sc8H))
(assert (= (ite (= ch8I var8I) 0 1) sc8I))
(assert (= (ite (= ch8J var8J) 0 1) sc8J))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= sc8G 1))
(assert (<= sc8H 1))
(assert (<= sc8I 1))
(assert (<= sc8J 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (<= (str.len var9G) 1))
(assert (<= (str.len var9H) 1))
(assert (<= (str.len var9I) 1))
(assert (<= (str.len var9J) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= (str.++ preG (str.++ stem9 sufG)) (str.++ unch19G (str.++ ch9G unch29G))))
(assert (= (str.++ preH (str.++ stem9 sufH)) (str.++ unch19H (str.++ ch9H unch29H))))
(assert (= (str.++ preI (str.++ stem9 sufI)) (str.++ unch19I (str.++ ch9I unch29I))))
(assert (= (str.++ preJ (str.++ stem9 sufJ)) (str.++ unch19J (str.++ ch9J unch29J))))
(assert (= "x3iw" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "x3ivam" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "x3ivoOi" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= "x3iOi" (str.++ unch19D (str.++ var9D unch29D))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (= (ite (= ch9G var9G) 0 1) sc9G))
(assert (= (ite (= ch9H var9H) 0 1) sc9H))
(assert (= (ite (= ch9I var9I) 0 1) sc9I))
(assert (= (ite (= ch9J var9J) 0 1) sc9J))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= sc9G 1))
(assert (<= sc9H 1))
(assert (<= sc9I 1))
(assert (<= sc9J 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (<= (str.len var10G) 1))
(assert (<= (str.len var10H) 1))
(assert (<= (str.len var10I) 1))
(assert (<= (str.len var10J) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= (str.++ preG (str.++ stem10 sufG)) (str.++ unch110G (str.++ ch10G unch210G))))
(assert (= (str.++ preH (str.++ stem10 sufH)) (str.++ unch110H (str.++ ch10H unch210H))))
(assert (= (str.++ preI (str.++ stem10 sufI)) (str.++ unch110I (str.++ ch10I unch210I))))
(assert (= (str.++ preJ (str.++ stem10 sufJ)) (str.++ unch110J (str.++ ch10J unch210J))))
(assert (= "holub" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "holubam" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "holuboOi" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= "holuXi" (str.++ unch110D (str.++ var10D unch210D))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (= (ite (= ch10G var10G) 0 1) sc10G))
(assert (= (ite (= ch10H var10H) 0 1) sc10H))
(assert (= (ite (= ch10I var10I) 0 1) sc10I))
(assert (= (ite (= ch10J var10J) 0 1) sc10J))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= sc10G 1))
(assert (<= sc10H 1))
(assert (<= sc10I 1))
(assert (<= sc10J 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (<= (str.len var11G) 1))
(assert (<= (str.len var11H) 1))
(assert (<= (str.len var11I) 1))
(assert (<= (str.len var11J) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= (str.++ preG (str.++ stem11 sufG)) (str.++ unch111G (str.++ ch11G unch211G))))
(assert (= (str.++ preH (str.++ stem11 sufH)) (str.++ unch111H (str.++ ch11H unch211H))))
(assert (= (str.++ preI (str.++ stem11 sufI)) (str.++ unch111I (str.++ ch11I unch211I))))
(assert (= (str.++ preJ (str.++ stem11 sufJ)) (str.++ unch111J (str.++ ch11J unch211J))))
(assert (= "6in" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "6inam" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "6inoOi" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= "6i8i" (str.++ unch111D (str.++ var11D unch211D))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (= (ite (= ch11G var11G) 0 1) sc11G))
(assert (= (ite (= ch11H var11H) 0 1) sc11H))
(assert (= (ite (= ch11I var11I) 0 1) sc11I))
(assert (= (ite (= ch11J var11J) 0 1) sc11J))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= sc11G 1))
(assert (<= sc11H 1))
(assert (<= sc11I 1))
(assert (<= sc11J 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (<= (str.len var12G) 1))
(assert (<= (str.len var12H) 1))
(assert (<= (str.len var12I) 1))
(assert (<= (str.len var12J) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= (str.++ preG (str.++ stem12 sufG)) (str.++ unch112G (str.++ ch12G unch212G))))
(assert (= (str.++ preH (str.++ stem12 sufH)) (str.++ unch112H (str.++ ch12H unch212H))))
(assert (= (str.++ preI (str.++ stem12 sufI)) (str.++ unch112I (str.++ ch12I unch212I))))
(assert (= (str.++ preJ (str.++ stem12 sufJ)) (str.++ unch112J (str.++ ch12J unch212J))))
(assert (= "leXi4" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "lebe4am" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "lebedeOi" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= "lebe4i" (str.++ unch112D (str.++ var12D unch212D))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (= (ite (= ch12G var12G) 0 1) sc12G))
(assert (= (ite (= ch12H var12H) 0 1) sc12H))
(assert (= (ite (= ch12I var12I) 0 1) sc12I))
(assert (= (ite (= ch12J var12J) 0 1) sc12J))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= sc12G 1))
(assert (<= sc12H 1))
(assert (<= sc12I 1))
(assert (<= sc12J 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (<= (str.len var13G) 1))
(assert (<= (str.len var13H) 1))
(assert (<= (str.len var13I) 1))
(assert (<= (str.len var13J) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= (str.++ preG (str.++ stem13 sufG)) (str.++ unch113G (str.++ ch13G unch213G))))
(assert (= (str.++ preH (str.++ stem13 sufH)) (str.++ unch113H (str.++ ch13H unch213H))))
(assert (= (str.++ preI (str.++ stem13 sufI)) (str.++ unch113I (str.++ ch13I unch213I))))
(assert (= (str.++ preJ (str.++ stem13 sufJ)) (str.++ unch113J (str.++ ch13J unch213J))))
(assert (= "su6id" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "su6idam" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "su6idoOi" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= "su6idoOi" (str.++ unch113E (str.++ var13E unch213E))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (= (ite (= ch13G var13G) 0 1) sc13G))
(assert (= (ite (= ch13H var13H) 0 1) sc13H))
(assert (= (ite (= ch13I var13I) 0 1) sc13I))
(assert (= (ite (= ch13J var13J) 0 1) sc13J))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= sc13G 1))
(assert (<= sc13H 1))
(assert (<= sc13I 1))
(assert (<= sc13J 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (<= (str.len var14G) 1))
(assert (<= (str.len var14H) 1))
(assert (<= (str.len var14I) 1))
(assert (<= (str.len var14J) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= (str.++ preG (str.++ stem14 sufG)) (str.++ unch114G (str.++ ch14G unch214G))))
(assert (= (str.++ preH (str.++ stem14 sufH)) (str.++ unch114H (str.++ ch14H unch214H))))
(assert (= (str.++ preI (str.++ stem14 sufI)) (str.++ unch114I (str.++ ch14I unch214I))))
(assert (= (str.++ preJ (str.++ stem14 sufJ)) (str.++ unch114J (str.++ ch14J unch214J))))
(assert (= "EoloOik" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "EoloOikam" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "EoloOikoOi" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= "EoloOikoOi" (str.++ unch114E (str.++ var14E unch214E))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (= (ite (= ch14G var14G) 0 1) sc14G))
(assert (= (ite (= ch14H var14H) 0 1) sc14H))
(assert (= (ite (= ch14I var14I) 0 1) sc14I))
(assert (= (ite (= ch14J var14J) 0 1) sc14J))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= sc14G 1))
(assert (<= sc14H 1))
(assert (<= sc14I 1))
(assert (<= sc14J 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (<= (str.len var15G) 1))
(assert (<= (str.len var15H) 1))
(assert (<= (str.len var15I) 1))
(assert (<= (str.len var15J) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= (str.++ preG (str.++ stem15 sufG)) (str.++ unch115G (str.++ ch15G unch215G))))
(assert (= (str.++ preH (str.++ stem15 sufH)) (str.++ unch115H (str.++ ch15H unch215H))))
(assert (= (str.++ preI (str.++ stem15 sufI)) (str.++ unch115I (str.++ ch15I unch215I))))
(assert (= (str.++ preJ (str.++ stem15 sufJ)) (str.++ unch115J (str.++ ch15J unch215J))))
(assert (= "3id" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "ledam" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "ledoOi" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= "le4i" (str.++ unch115D (str.++ var15D unch215D))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (= (ite (= ch15G var15G) 0 1) sc15G))
(assert (= (ite (= ch15H var15H) 0 1) sc15H))
(assert (= (ite (= ch15I var15I) 0 1) sc15I))
(assert (= (ite (= ch15J var15J) 0 1) sc15J))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= sc15G 1))
(assert (<= sc15H 1))
(assert (<= sc15I 1))
(assert (<= sc15J 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (<= (str.len var16G) 1))
(assert (<= (str.len var16H) 1))
(assert (<= (str.len var16I) 1))
(assert (<= (str.len var16J) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= (str.++ preG (str.++ stem16 sufG)) (str.++ unch116G (str.++ ch16G unch216G))))
(assert (= (str.++ preH (str.++ stem16 sufH)) (str.++ unch116H (str.++ ch16H unch216H))))
(assert (= (str.++ preI (str.++ stem16 sufI)) (str.++ unch116I (str.++ ch16I unch216I))))
(assert (= (str.++ preJ (str.++ stem16 sufJ)) (str.++ unch116J (str.++ ch16J unch216J))))
(assert (= "bi3" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bo3am" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "boleOi" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= "bo3i" (str.++ unch116D (str.++ var16D unch216D))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (= (ite (= ch16G var16G) 0 1) sc16G))
(assert (= (ite (= ch16H var16H) 0 1) sc16H))
(assert (= (ite (= ch16I var16I) 0 1) sc16I))
(assert (= (ite (= ch16J var16J) 0 1) sc16J))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= sc16G 1))
(assert (<= sc16H 1))
(assert (<= sc16I 1))
(assert (<= sc16J 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (<= (str.len var17G) 1))
(assert (<= (str.len var17H) 1))
(assert (<= (str.len var17I) 1))
(assert (<= (str.len var17J) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= (str.++ preG (str.++ stem17 sufG)) (str.++ unch117G (str.++ ch17G unch217G))))
(assert (= (str.++ preH (str.++ stem17 sufH)) (str.++ unch117H (str.++ ch17H unch217H))))
(assert (= (str.++ preI (str.++ stem17 sufI)) (str.++ unch117I (str.++ ch17I unch217I))))
(assert (= (str.++ preJ (str.++ stem17 sufJ)) (str.++ unch117J (str.++ ch17J unch217J))))
(assert (= "riw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "rovam" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "rovoOi" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= "roOi" (str.++ unch117D (str.++ var17D unch217D))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (= (ite (= ch17G var17G) 0 1) sc17G))
(assert (= (ite (= ch17H var17H) 0 1) sc17H))
(assert (= (ite (= ch17I var17I) 0 1) sc17I))
(assert (= (ite (= ch17J var17J) 0 1) sc17J))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= sc17G 1))
(assert (<= sc17H 1))
(assert (<= sc17I 1))
(assert (<= sc17J 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (<= (str.len var18G) 1))
(assert (<= (str.len var18H) 1))
(assert (<= (str.len var18I) 1))
(assert (<= (str.len var18J) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= (str.++ preG (str.++ stem18 sufG)) (str.++ unch118G (str.++ ch18G unch218G))))
(assert (= (str.++ preH (str.++ stem18 sufH)) (str.++ unch118H (str.++ ch18H unch218H))))
(assert (= (str.++ preI (str.++ stem18 sufI)) (str.++ unch118I (str.++ ch18I unch218I))))
(assert (= (str.++ preJ (str.++ stem18 sufJ)) (str.++ unch118J (str.++ ch18J unch218J))))
(assert (= "stiw" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "stolam" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "stoloOi" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= "sto3i" (str.++ unch118D (str.++ var18D unch218D))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (= (ite (= ch18G var18G) 0 1) sc18G))
(assert (= (ite (= ch18H var18H) 0 1) sc18H))
(assert (= (ite (= ch18I var18I) 0 1) sc18I))
(assert (= (ite (= ch18J var18J) 0 1) sc18J))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= sc18G 1))
(assert (<= sc18H 1))
(assert (<= sc18I 1))
(assert (<= sc18J 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (<= (str.len var19G) 1))
(assert (<= (str.len var19H) 1))
(assert (<= (str.len var19I) 1))
(assert (<= (str.len var19J) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= (str.++ preG (str.++ stem19 sufG)) (str.++ unch119G (str.++ ch19G unch219G))))
(assert (= (str.++ preH (str.++ stem19 sufH)) (str.++ unch119H (str.++ ch19H unch219H))))
(assert (= (str.++ preI (str.++ stem19 sufI)) (str.++ unch119I (str.++ ch19I unch219I))))
(assert (= (str.++ preJ (str.++ stem19 sufJ)) (str.++ unch119J (str.++ ch19J unch219J))))
(assert (= "4id" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "4idam" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "4idoOi" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= "4idoOi" (str.++ unch119E (str.++ var19E unch219E))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (= (ite (= ch19G var19G) 0 1) sc19G))
(assert (= (ite (= ch19H var19H) 0 1) sc19H))
(assert (= (ite (= ch19I var19I) 0 1) sc19I))
(assert (= (ite (= ch19J var19J) 0 1) sc19J))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= sc19G 1))
(assert (<= sc19H 1))
(assert (<= sc19I 1))
(assert (<= sc19J 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (<= (str.len var20G) 1))
(assert (<= (str.len var20H) 1))
(assert (<= (str.len var20I) 1))
(assert (<= (str.len var20J) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= (str.++ preG (str.++ stem20 sufG)) (str.++ unch120G (str.++ ch20G unch220G))))
(assert (= (str.++ preH (str.++ stem20 sufH)) (str.++ unch120H (str.++ ch20H unch220H))))
(assert (= (str.++ preI (str.++ stem20 sufI)) (str.++ unch120I (str.++ ch20I unch220I))))
(assert (= (str.++ preJ (str.++ stem20 sufJ)) (str.++ unch120J (str.++ ch20J unch220J))))
(assert (= "3it" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "3otam" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "3otoOi" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= "3oZi" (str.++ unch120D (str.++ var20D unch220D))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (= (ite (= ch20G var20G) 0 1) sc20G))
(assert (= (ite (= ch20H var20H) 0 1) sc20H))
(assert (= (ite (= ch20I var20I) 0 1) sc20I))
(assert (= (ite (= ch20J var20J) 0 1) sc20J))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= sc20G 1))
(assert (<= sc20H 1))
(assert (<= sc20I 1))
(assert (<= sc20J 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (<= (str.len var21G) 1))
(assert (<= (str.len var21H) 1))
(assert (<= (str.len var21I) 1))
(assert (<= (str.len var21J) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= (str.++ preG (str.++ stem21 sufG)) (str.++ unch121G (str.++ ch21G unch221G))))
(assert (= (str.++ preH (str.++ stem21 sufH)) (str.++ unch121H (str.++ ch21H unch221H))))
(assert (= (str.++ preI (str.++ stem21 sufI)) (str.++ unch121I (str.++ ch21I unch221I))))
(assert (= (str.++ preJ (str.++ stem21 sufJ)) (str.++ unch121J (str.++ ch21J unch221J))))
(assert (= "mist" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "mostam" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "mostoOi" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= "mosZi" (str.++ unch121D (str.++ var21D unch221D))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (= (ite (= ch21G var21G) 0 1) sc21G))
(assert (= (ite (= ch21H var21H) 0 1) sc21H))
(assert (= (ite (= ch21I var21I) 0 1) sc21I))
(assert (= (ite (= ch21J var21J) 0 1) sc21J))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= sc21G 1))
(assert (<= sc21H 1))
(assert (<= sc21I 1))
(assert (<= sc21J 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (<= (str.len var22G) 1))
(assert (<= (str.len var22H) 1))
(assert (<= (str.len var22I) 1))
(assert (<= (str.len var22J) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= (str.++ preG (str.++ stem22 sufG)) (str.++ unch122G (str.++ ch22G unch222G))))
(assert (= (str.++ preH (str.++ stem22 sufH)) (str.++ unch122H (str.++ ch22H unch222H))))
(assert (= (str.++ preI (str.++ stem22 sufI)) (str.++ unch122I (str.++ ch22I unch222I))))
(assert (= (str.++ preJ (str.++ stem22 sufJ)) (str.++ unch122J (str.++ ch22J unch222J))))
(assert (= "veEir" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "veEoram" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "veEoroOi" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= "veEo9i" (str.++ unch122D (str.++ var22D unch222D))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (= (ite (= ch22G var22G) 0 1) sc22G))
(assert (= (ite (= ch22H var22H) 0 1) sc22H))
(assert (= (ite (= ch22I var22I) 0 1) sc22I))
(assert (= (ite (= ch22J var22J) 0 1) sc22J))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= sc22G 1))
(assert (<= sc22H 1))
(assert (<= sc22I 1))
(assert (<= sc22J 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (<= (str.len var23G) 1))
(assert (<= (str.len var23H) 1))
(assert (<= (str.len var23I) 1))
(assert (<= (str.len var23J) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= (str.++ preG (str.++ stem23 sufG)) (str.++ unch123G (str.++ ch23G unch223G))))
(assert (= (str.++ preH (str.++ stem23 sufH)) (str.++ unch123H (str.++ ch23H unch223H))))
(assert (= (str.++ preI (str.++ stem23 sufI)) (str.++ unch123I (str.++ ch23I unch223I))))
(assert (= (str.++ preJ (str.++ stem23 sufJ)) (str.++ unch123J (str.++ ch23J unch223J))))
(assert (= "Zilo" (str.++ unch123F (str.++ var23F unch223F))))
(assert (= "Zila" (str.++ unch123G (str.++ var23G unch223G))))
(assert (= "Zilu" (str.++ unch123H (str.++ var23H unch223H))))
(assert (= "Zi3i" (str.++ unch123I (str.++ var23I unch223I))))
(assert (= "Ziw" (str.++ unch123J (str.++ var23J unch223J))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (= (ite (= ch23G var23G) 0 1) sc23G))
(assert (= (ite (= ch23H var23H) 0 1) sc23H))
(assert (= (ite (= ch23I var23I) 0 1) sc23I))
(assert (= (ite (= ch23J var23J) 0 1) sc23J))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= sc23G 1))
(assert (<= sc23H 1))
(assert (<= sc23I 1))
(assert (<= sc23J 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (<= (str.len var24G) 1))
(assert (<= (str.len var24H) 1))
(assert (<= (str.len var24I) 1))
(assert (<= (str.len var24J) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= (str.++ preG (str.++ stem24 sufG)) (str.++ unch124G (str.++ ch24G unch224G))))
(assert (= (str.++ preH (str.++ stem24 sufH)) (str.++ unch124H (str.++ ch24H unch224H))))
(assert (= (str.++ preI (str.++ stem24 sufI)) (str.++ unch124I (str.++ ch24I unch224I))))
(assert (= (str.++ preJ (str.++ stem24 sufJ)) (str.++ unch124J (str.++ ch24J unch224J))))
(assert (= "koleso" (str.++ unch124F (str.++ var24F unch224F))))
(assert (= "kolesa" (str.++ unch124G (str.++ var24G unch224G))))
(assert (= "kolesu" (str.++ unch124H (str.++ var24H unch224H))))
(assert (= "kole6i" (str.++ unch124I (str.++ var24I unch224I))))
(assert (= "ko3is" (str.++ unch124J (str.++ var24J unch224J))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (= (ite (= ch24G var24G) 0 1) sc24G))
(assert (= (ite (= ch24H var24H) 0 1) sc24H))
(assert (= (ite (= ch24I var24I) 0 1) sc24I))
(assert (= (ite (= ch24J var24J) 0 1) sc24J))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= sc24G 1))
(assert (<= sc24H 1))
(assert (<= sc24I 1))
(assert (<= sc24J 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (<= (str.len var25G) 1))
(assert (<= (str.len var25H) 1))
(assert (<= (str.len var25I) 1))
(assert (<= (str.len var25J) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= (str.++ preG (str.++ stem25 sufG)) (str.++ unch125G (str.++ ch25G unch225G))))
(assert (= (str.++ preH (str.++ stem25 sufH)) (str.++ unch125H (str.++ ch25H unch225H))))
(assert (= (str.++ preI (str.++ stem25 sufI)) (str.++ unch125I (str.++ ch25I unch225I))))
(assert (= (str.++ preJ (str.++ stem25 sufJ)) (str.++ unch125J (str.++ ch25J unch225J))))
(assert (= "ozero" (str.++ unch125F (str.++ var25F unch225F))))
(assert (= "ozera" (str.++ unch125G (str.++ var25G unch225G))))
(assert (= "ozeru" (str.++ unch125H (str.++ var25H unch225H))))
(assert (= "oze9i" (str.++ unch125I (str.++ var25I unch225I))))
(assert (= "o1ir" (str.++ unch125J (str.++ var25J unch225J))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (= (ite (= ch25G var25G) 0 1) sc25G))
(assert (= (ite (= ch25H var25H) 0 1) sc25H))
(assert (= (ite (= ch25I var25I) 0 1) sc25I))
(assert (= (ite (= ch25J var25J) 0 1) sc25J))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= sc25G 1))
(assert (<= sc25H 1))
(assert (<= sc25I 1))
(assert (<= sc25J 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (<= (str.len var26G) 1))
(assert (<= (str.len var26H) 1))
(assert (<= (str.len var26I) 1))
(assert (<= (str.len var26J) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= (str.++ preG (str.++ stem26 sufG)) (str.++ unch126G (str.++ ch26G unch226G))))
(assert (= (str.++ preH (str.++ stem26 sufH)) (str.++ unch126H (str.++ ch26H unch226H))))
(assert (= (str.++ preI (str.++ stem26 sufI)) (str.++ unch126I (str.++ ch26I unch226I))))
(assert (= (str.++ preJ (str.++ stem26 sufJ)) (str.++ unch126J (str.++ ch26J unch226J))))
(assert (= "selo" (str.++ unch126F (str.++ var26F unch226F))))
(assert (= "sela" (str.++ unch126G (str.++ var26G unch226G))))
(assert (= "selu" (str.++ unch126H (str.++ var26H unch226H))))
(assert (= "se3i" (str.++ unch126I (str.++ var26I unch226I))))
(assert (= "6iw" (str.++ unch126J (str.++ var26J unch226J))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (= (ite (= ch26G var26G) 0 1) sc26G))
(assert (= (ite (= ch26H var26H) 0 1) sc26H))
(assert (= (ite (= ch26I var26I) 0 1) sc26I))
(assert (= (ite (= ch26J var26J) 0 1) sc26J))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= sc26G 1))
(assert (<= sc26H 1))
(assert (<= sc26I 1))
(assert (<= sc26J 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (<= (str.len var27G) 1))
(assert (<= (str.len var27H) 1))
(assert (<= (str.len var27I) 1))
(assert (<= (str.len var27J) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= (str.++ preG (str.++ stem27 sufG)) (str.++ unch127G (str.++ ch27G unch227G))))
(assert (= (str.++ preH (str.++ stem27 sufH)) (str.++ unch127H (str.++ ch27H unch227H))))
(assert (= (str.++ preI (str.++ stem27 sufI)) (str.++ unch127I (str.++ ch27I unch227I))))
(assert (= (str.++ preJ (str.++ stem27 sufJ)) (str.++ unch127J (str.++ ch27J unch227J))))
(assert (= "pole" (str.++ unch127F (str.++ var27F unch227F))))
(assert (= "po3a" (str.++ unch127G (str.++ var27G unch227G))))
(assert (= "po3u" (str.++ unch127H (str.++ var27H unch227H))))
(assert (= "po3i" (str.++ unch127I (str.++ var27I unch227I))))
(assert (= "pi3" (str.++ unch127J (str.++ var27J unch227J))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (= (ite (= ch27G var27G) 0 1) sc27G))
(assert (= (ite (= ch27H var27H) 0 1) sc27H))
(assert (= (ite (= ch27I var27I) 0 1) sc27I))
(assert (= (ite (= ch27J var27J) 0 1) sc27J))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= sc27G 1))
(assert (<= sc27H 1))
(assert (<= sc27I 1))
(assert (<= sc27J 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (<= (str.len var28G) 1))
(assert (<= (str.len var28H) 1))
(assert (<= (str.len var28I) 1))
(assert (<= (str.len var28J) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= (str.++ preG (str.++ stem28 sufG)) (str.++ unch128G (str.++ ch28G unch228G))))
(assert (= (str.++ preH (str.++ stem28 sufH)) (str.++ unch128H (str.++ ch28H unch228H))))
(assert (= (str.++ preI (str.++ stem28 sufI)) (str.++ unch128I (str.++ ch28I unch228I))))
(assert (= (str.++ preJ (str.++ stem28 sufJ)) (str.++ unch128J (str.++ ch28J unch228J))))
(assert (= "slovo" (str.++ unch128F (str.++ var28F unch228F))))
(assert (= "slova" (str.++ unch128G (str.++ var28G unch228G))))
(assert (= "slovu" (str.++ unch128H (str.++ var28H unch228H))))
(assert (= "sloOi" (str.++ unch128I (str.++ var28I unch228I))))
(assert (= "sliw" (str.++ unch128J (str.++ var28J unch228J))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (= (ite (= ch28G var28G) 0 1) sc28G))
(assert (= (ite (= ch28H var28H) 0 1) sc28H))
(assert (= (ite (= ch28I var28I) 0 1) sc28I))
(assert (= (ite (= ch28J var28J) 0 1) sc28J))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= sc28G 1))
(assert (<= sc28H 1))
(assert (<= sc28I 1))
(assert (<= sc28J 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (<= (str.len var29G) 1))
(assert (<= (str.len var29H) 1))
(assert (<= (str.len var29I) 1))
(assert (<= (str.len var29J) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= (str.++ preG (str.++ stem29 sufG)) (str.++ unch129G (str.++ ch29G unch229G))))
(assert (= (str.++ preH (str.++ stem29 sufH)) (str.++ unch129H (str.++ ch29H unch229H))))
(assert (= (str.++ preI (str.++ stem29 sufI)) (str.++ unch129I (str.++ ch29I unch229I))))
(assert (= (str.++ preJ (str.++ stem29 sufJ)) (str.++ unch129J (str.++ ch29J unch229J))))
(assert (= "more" (str.++ unch129F (str.++ var29F unch229F))))
(assert (= "mo9a" (str.++ unch129G (str.++ var29G unch229G))))
(assert (= "mo9u" (str.++ unch129H (str.++ var29H unch229H))))
(assert (= "mo9i" (str.++ unch129I (str.++ var29I unch229I))))
(assert (= "mi9" (str.++ unch129J (str.++ var29J unch229J))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (= (ite (= ch29G var29G) 0 1) sc29G))
(assert (= (ite (= ch29H var29H) 0 1) sc29H))
(assert (= (ite (= ch29I var29I) 0 1) sc29I))
(assert (= (ite (= ch29J var29J) 0 1) sc29J))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= sc29G 1))
(assert (<= sc29H 1))
(assert (<= sc29I 1))
(assert (<= sc29J 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      sc0I
      sc0J
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      sc1I
      sc1J
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      sc2I
      sc2J
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      sc3I
      sc3J
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      sc4I
      sc4J
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      sc5I
      sc5J
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H
      sc6I
      sc6J
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      sc7G
      sc7H
      sc7I
      sc7J
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      sc8G
      sc8H
      sc8I
      sc8J
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      sc9G
      sc9H
      sc9I
      sc9J
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      sc10G
      sc10H
      sc10I
      sc10J
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      sc11G
      sc11H
      sc11I
      sc11J
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      sc12G
      sc12H
      sc12I
      sc12J
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      sc13G
      sc13H
      sc13I
      sc13J
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      sc14G
      sc14H
      sc14I
      sc14J
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      sc15G
      sc15H
      sc15I
      sc15J
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      sc16G
      sc16H
      sc16I
      sc16J
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      sc17G
      sc17H
      sc17I
      sc17J
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      sc18G
      sc18H
      sc18I
      sc18J
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      sc19G
      sc19H
      sc19I
      sc19J
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      sc20G
      sc20H
      sc20I
      sc20J
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      sc21G
      sc21H
      sc21I
      sc21J
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      sc22G
      sc22H
      sc22I
      sc22J
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      sc23G
      sc23H
      sc23I
      sc23J
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      sc24G
      sc24H
      sc24I
      sc24J
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      sc25G
      sc25H
      sc25I
      sc25J
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      sc26G
      sc26H
      sc26I
      sc26J
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      sc27G
      sc27H
      sc27I
      sc27J
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      sc28G
      sc28H
      sc28I
      sc28J
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      sc29G
      sc29H
      sc29I
      sc29J)
   10))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun var0I () String)
(declare-fun var0J () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun unch20I () String)
(declare-fun ch0I () String)
(declare-fun unch10I () String)
(declare-fun sufI () String)
(declare-fun preI () String)
(declare-fun unch20J () String)
(declare-fun ch0J () String)
(declare-fun unch10J () String)
(declare-fun sufJ () String)
(declare-fun preJ () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun sc0I () Int)
(declare-fun sc0J () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun var1I () String)
(declare-fun var1J () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun unch21I () String)
(declare-fun ch1I () String)
(declare-fun unch11I () String)
(declare-fun unch21J () String)
(declare-fun ch1J () String)
(declare-fun unch11J () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun sc1I () Int)
(declare-fun sc1J () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun var2I () String)
(declare-fun var2J () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun unch22I () String)
(declare-fun ch2I () String)
(declare-fun unch12I () String)
(declare-fun unch22J () String)
(declare-fun ch2J () String)
(declare-fun unch12J () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun sc2I () Int)
(declare-fun sc2J () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun var3I () String)
(declare-fun var3J () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun unch23I () String)
(declare-fun ch3I () String)
(declare-fun unch13I () String)
(declare-fun unch23J () String)
(declare-fun ch3J () String)
(declare-fun unch13J () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun sc3I () Int)
(declare-fun sc3J () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun var4I () String)
(declare-fun var4J () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun unch24I () String)
(declare-fun ch4I () String)
(declare-fun unch14I () String)
(declare-fun unch24J () String)
(declare-fun ch4J () String)
(declare-fun unch14J () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun sc4I () Int)
(declare-fun sc4J () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun var5I () String)
(declare-fun var5J () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun unch25I () String)
(declare-fun ch5I () String)
(declare-fun unch15I () String)
(declare-fun unch25J () String)
(declare-fun ch5J () String)
(declare-fun unch15J () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun sc5I () Int)
(declare-fun sc5J () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun var6I () String)
(declare-fun var6J () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun unch26I () String)
(declare-fun ch6I () String)
(declare-fun unch16I () String)
(declare-fun unch26J () String)
(declare-fun ch6J () String)
(declare-fun unch16J () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(declare-fun sc6I () Int)
(declare-fun sc6J () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun var7G () String)
(declare-fun var7H () String)
(declare-fun var7I () String)
(declare-fun var7J () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun unch27G () String)
(declare-fun ch7G () String)
(declare-fun unch17G () String)
(declare-fun unch27H () String)
(declare-fun ch7H () String)
(declare-fun unch17H () String)
(declare-fun unch27I () String)
(declare-fun ch7I () String)
(declare-fun unch17I () String)
(declare-fun unch27J () String)
(declare-fun ch7J () String)
(declare-fun unch17J () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun sc7G () Int)
(declare-fun sc7H () Int)
(declare-fun sc7I () Int)
(declare-fun sc7J () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun var8G () String)
(declare-fun var8H () String)
(declare-fun var8I () String)
(declare-fun var8J () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun unch28G () String)
(declare-fun ch8G () String)
(declare-fun unch18G () String)
(declare-fun unch28H () String)
(declare-fun ch8H () String)
(declare-fun unch18H () String)
(declare-fun unch28I () String)
(declare-fun ch8I () String)
(declare-fun unch18I () String)
(declare-fun unch28J () String)
(declare-fun ch8J () String)
(declare-fun unch18J () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun sc8G () Int)
(declare-fun sc8H () Int)
(declare-fun sc8I () Int)
(declare-fun sc8J () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun var9G () String)
(declare-fun var9H () String)
(declare-fun var9I () String)
(declare-fun var9J () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun unch29G () String)
(declare-fun ch9G () String)
(declare-fun unch19G () String)
(declare-fun unch29H () String)
(declare-fun ch9H () String)
(declare-fun unch19H () String)
(declare-fun unch29I () String)
(declare-fun ch9I () String)
(declare-fun unch19I () String)
(declare-fun unch29J () String)
(declare-fun ch9J () String)
(declare-fun unch19J () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun sc9G () Int)
(declare-fun sc9H () Int)
(declare-fun sc9I () Int)
(declare-fun sc9J () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun var10G () String)
(declare-fun var10H () String)
(declare-fun var10I () String)
(declare-fun var10J () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun unch210G () String)
(declare-fun ch10G () String)
(declare-fun unch110G () String)
(declare-fun unch210H () String)
(declare-fun ch10H () String)
(declare-fun unch110H () String)
(declare-fun unch210I () String)
(declare-fun ch10I () String)
(declare-fun unch110I () String)
(declare-fun unch210J () String)
(declare-fun ch10J () String)
(declare-fun unch110J () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun sc10G () Int)
(declare-fun sc10H () Int)
(declare-fun sc10I () Int)
(declare-fun sc10J () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun var11G () String)
(declare-fun var11H () String)
(declare-fun var11I () String)
(declare-fun var11J () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun unch211G () String)
(declare-fun ch11G () String)
(declare-fun unch111G () String)
(declare-fun unch211H () String)
(declare-fun ch11H () String)
(declare-fun unch111H () String)
(declare-fun unch211I () String)
(declare-fun ch11I () String)
(declare-fun unch111I () String)
(declare-fun unch211J () String)
(declare-fun ch11J () String)
(declare-fun unch111J () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun sc11G () Int)
(declare-fun sc11H () Int)
(declare-fun sc11I () Int)
(declare-fun sc11J () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun var12G () String)
(declare-fun var12H () String)
(declare-fun var12I () String)
(declare-fun var12J () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun unch212G () String)
(declare-fun ch12G () String)
(declare-fun unch112G () String)
(declare-fun unch212H () String)
(declare-fun ch12H () String)
(declare-fun unch112H () String)
(declare-fun unch212I () String)
(declare-fun ch12I () String)
(declare-fun unch112I () String)
(declare-fun unch212J () String)
(declare-fun ch12J () String)
(declare-fun unch112J () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun sc12G () Int)
(declare-fun sc12H () Int)
(declare-fun sc12I () Int)
(declare-fun sc12J () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun var13G () String)
(declare-fun var13H () String)
(declare-fun var13I () String)
(declare-fun var13J () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun unch213G () String)
(declare-fun ch13G () String)
(declare-fun unch113G () String)
(declare-fun unch213H () String)
(declare-fun ch13H () String)
(declare-fun unch113H () String)
(declare-fun unch213I () String)
(declare-fun ch13I () String)
(declare-fun unch113I () String)
(declare-fun unch213J () String)
(declare-fun ch13J () String)
(declare-fun unch113J () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun sc13G () Int)
(declare-fun sc13H () Int)
(declare-fun sc13I () Int)
(declare-fun sc13J () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun var14G () String)
(declare-fun var14H () String)
(declare-fun var14I () String)
(declare-fun var14J () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun unch214G () String)
(declare-fun ch14G () String)
(declare-fun unch114G () String)
(declare-fun unch214H () String)
(declare-fun ch14H () String)
(declare-fun unch114H () String)
(declare-fun unch214I () String)
(declare-fun ch14I () String)
(declare-fun unch114I () String)
(declare-fun unch214J () String)
(declare-fun ch14J () String)
(declare-fun unch114J () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun sc14G () Int)
(declare-fun sc14H () Int)
(declare-fun sc14I () Int)
(declare-fun sc14J () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun var15G () String)
(declare-fun var15H () String)
(declare-fun var15I () String)
(declare-fun var15J () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun unch215G () String)
(declare-fun ch15G () String)
(declare-fun unch115G () String)
(declare-fun unch215H () String)
(declare-fun ch15H () String)
(declare-fun unch115H () String)
(declare-fun unch215I () String)
(declare-fun ch15I () String)
(declare-fun unch115I () String)
(declare-fun unch215J () String)
(declare-fun ch15J () String)
(declare-fun unch115J () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun sc15G () Int)
(declare-fun sc15H () Int)
(declare-fun sc15I () Int)
(declare-fun sc15J () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun var16G () String)
(declare-fun var16H () String)
(declare-fun var16I () String)
(declare-fun var16J () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun unch216G () String)
(declare-fun ch16G () String)
(declare-fun unch116G () String)
(declare-fun unch216H () String)
(declare-fun ch16H () String)
(declare-fun unch116H () String)
(declare-fun unch216I () String)
(declare-fun ch16I () String)
(declare-fun unch116I () String)
(declare-fun unch216J () String)
(declare-fun ch16J () String)
(declare-fun unch116J () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun sc16G () Int)
(declare-fun sc16H () Int)
(declare-fun sc16I () Int)
(declare-fun sc16J () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun var17G () String)
(declare-fun var17H () String)
(declare-fun var17I () String)
(declare-fun var17J () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun unch217G () String)
(declare-fun ch17G () String)
(declare-fun unch117G () String)
(declare-fun unch217H () String)
(declare-fun ch17H () String)
(declare-fun unch117H () String)
(declare-fun unch217I () String)
(declare-fun ch17I () String)
(declare-fun unch117I () String)
(declare-fun unch217J () String)
(declare-fun ch17J () String)
(declare-fun unch117J () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun sc17G () Int)
(declare-fun sc17H () Int)
(declare-fun sc17I () Int)
(declare-fun sc17J () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun var18G () String)
(declare-fun var18H () String)
(declare-fun var18I () String)
(declare-fun var18J () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun unch218G () String)
(declare-fun ch18G () String)
(declare-fun unch118G () String)
(declare-fun unch218H () String)
(declare-fun ch18H () String)
(declare-fun unch118H () String)
(declare-fun unch218I () String)
(declare-fun ch18I () String)
(declare-fun unch118I () String)
(declare-fun unch218J () String)
(declare-fun ch18J () String)
(declare-fun unch118J () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun sc18G () Int)
(declare-fun sc18H () Int)
(declare-fun sc18I () Int)
(declare-fun sc18J () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun var19G () String)
(declare-fun var19H () String)
(declare-fun var19I () String)
(declare-fun var19J () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun unch219G () String)
(declare-fun ch19G () String)
(declare-fun unch119G () String)
(declare-fun unch219H () String)
(declare-fun ch19H () String)
(declare-fun unch119H () String)
(declare-fun unch219I () String)
(declare-fun ch19I () String)
(declare-fun unch119I () String)
(declare-fun unch219J () String)
(declare-fun ch19J () String)
(declare-fun unch119J () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun sc19G () Int)
(declare-fun sc19H () Int)
(declare-fun sc19I () Int)
(declare-fun sc19J () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun var20G () String)
(declare-fun var20H () String)
(declare-fun var20I () String)
(declare-fun var20J () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun unch220G () String)
(declare-fun ch20G () String)
(declare-fun unch120G () String)
(declare-fun unch220H () String)
(declare-fun ch20H () String)
(declare-fun unch120H () String)
(declare-fun unch220I () String)
(declare-fun ch20I () String)
(declare-fun unch120I () String)
(declare-fun unch220J () String)
(declare-fun ch20J () String)
(declare-fun unch120J () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun sc20G () Int)
(declare-fun sc20H () Int)
(declare-fun sc20I () Int)
(declare-fun sc20J () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun var21G () String)
(declare-fun var21H () String)
(declare-fun var21I () String)
(declare-fun var21J () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun unch221G () String)
(declare-fun ch21G () String)
(declare-fun unch121G () String)
(declare-fun unch221H () String)
(declare-fun ch21H () String)
(declare-fun unch121H () String)
(declare-fun unch221I () String)
(declare-fun ch21I () String)
(declare-fun unch121I () String)
(declare-fun unch221J () String)
(declare-fun ch21J () String)
(declare-fun unch121J () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun sc21G () Int)
(declare-fun sc21H () Int)
(declare-fun sc21I () Int)
(declare-fun sc21J () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun var22G () String)
(declare-fun var22H () String)
(declare-fun var22I () String)
(declare-fun var22J () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun unch222G () String)
(declare-fun ch22G () String)
(declare-fun unch122G () String)
(declare-fun unch222H () String)
(declare-fun ch22H () String)
(declare-fun unch122H () String)
(declare-fun unch222I () String)
(declare-fun ch22I () String)
(declare-fun unch122I () String)
(declare-fun unch222J () String)
(declare-fun ch22J () String)
(declare-fun unch122J () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun sc22G () Int)
(declare-fun sc22H () Int)
(declare-fun sc22I () Int)
(declare-fun sc22J () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun var23G () String)
(declare-fun var23H () String)
(declare-fun var23I () String)
(declare-fun var23J () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun unch223G () String)
(declare-fun ch23G () String)
(declare-fun unch123G () String)
(declare-fun unch223H () String)
(declare-fun ch23H () String)
(declare-fun unch123H () String)
(declare-fun unch223I () String)
(declare-fun ch23I () String)
(declare-fun unch123I () String)
(declare-fun unch223J () String)
(declare-fun ch23J () String)
(declare-fun unch123J () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun sc23G () Int)
(declare-fun sc23H () Int)
(declare-fun sc23I () Int)
(declare-fun sc23J () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun var24G () String)
(declare-fun var24H () String)
(declare-fun var24I () String)
(declare-fun var24J () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun unch224G () String)
(declare-fun ch24G () String)
(declare-fun unch124G () String)
(declare-fun unch224H () String)
(declare-fun ch24H () String)
(declare-fun unch124H () String)
(declare-fun unch224I () String)
(declare-fun ch24I () String)
(declare-fun unch124I () String)
(declare-fun unch224J () String)
(declare-fun ch24J () String)
(declare-fun unch124J () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun sc24G () Int)
(declare-fun sc24H () Int)
(declare-fun sc24I () Int)
(declare-fun sc24J () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun var25G () String)
(declare-fun var25H () String)
(declare-fun var25I () String)
(declare-fun var25J () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun unch225G () String)
(declare-fun ch25G () String)
(declare-fun unch125G () String)
(declare-fun unch225H () String)
(declare-fun ch25H () String)
(declare-fun unch125H () String)
(declare-fun unch225I () String)
(declare-fun ch25I () String)
(declare-fun unch125I () String)
(declare-fun unch225J () String)
(declare-fun ch25J () String)
(declare-fun unch125J () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun sc25G () Int)
(declare-fun sc25H () Int)
(declare-fun sc25I () Int)
(declare-fun sc25J () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun var26G () String)
(declare-fun var26H () String)
(declare-fun var26I () String)
(declare-fun var26J () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun unch226G () String)
(declare-fun ch26G () String)
(declare-fun unch126G () String)
(declare-fun unch226H () String)
(declare-fun ch26H () String)
(declare-fun unch126H () String)
(declare-fun unch226I () String)
(declare-fun ch26I () String)
(declare-fun unch126I () String)
(declare-fun unch226J () String)
(declare-fun ch26J () String)
(declare-fun unch126J () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun sc26G () Int)
(declare-fun sc26H () Int)
(declare-fun sc26I () Int)
(declare-fun sc26J () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun var27G () String)
(declare-fun var27H () String)
(declare-fun var27I () String)
(declare-fun var27J () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun unch227G () String)
(declare-fun ch27G () String)
(declare-fun unch127G () String)
(declare-fun unch227H () String)
(declare-fun ch27H () String)
(declare-fun unch127H () String)
(declare-fun unch227I () String)
(declare-fun ch27I () String)
(declare-fun unch127I () String)
(declare-fun unch227J () String)
(declare-fun ch27J () String)
(declare-fun unch127J () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun sc27G () Int)
(declare-fun sc27H () Int)
(declare-fun sc27I () Int)
(declare-fun sc27J () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun var28G () String)
(declare-fun var28H () String)
(declare-fun var28I () String)
(declare-fun var28J () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun unch228G () String)
(declare-fun ch28G () String)
(declare-fun unch128G () String)
(declare-fun unch228H () String)
(declare-fun ch28H () String)
(declare-fun unch128H () String)
(declare-fun unch228I () String)
(declare-fun ch28I () String)
(declare-fun unch128I () String)
(declare-fun unch228J () String)
(declare-fun ch28J () String)
(declare-fun unch128J () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun sc28G () Int)
(declare-fun sc28H () Int)
(declare-fun sc28I () Int)
(declare-fun sc28J () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun var29G () String)
(declare-fun var29H () String)
(declare-fun var29I () String)
(declare-fun var29J () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun unch229G () String)
(declare-fun ch29G () String)
(declare-fun unch129G () String)
(declare-fun unch229H () String)
(declare-fun ch29H () String)
(declare-fun unch129H () String)
(declare-fun unch229I () String)
(declare-fun ch29I () String)
(declare-fun unch129I () String)
(declare-fun unch229J () String)
(declare-fun ch29J () String)
(declare-fun unch129J () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun sc29G () Int)
(declare-fun sc29H () Int)
(declare-fun sc29I () Int)
(declare-fun sc29J () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (<= (str.len var0I) 1))
(assert (<= (str.len var0J) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= (str.++ preI (str.++ stem0 sufI)) (str.++ unch10I (str.++ ch0I unch20I))))
(assert (= (str.++ preJ (str.++ stem0 sufJ)) (str.++ unch10J (str.++ ch0J unch20J))))
(assert (= "zub" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "zubam" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "zuboOi" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "zuXi" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (= (ite (= ch0I var0I) 0 1) sc0I))
(assert (= (ite (= ch0J var0J) 0 1) sc0J))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= sc0I 1))
(assert (<= sc0J 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (<= (str.len var1I) 1))
(assert (<= (str.len var1J) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= (str.++ preI (str.++ stem1 sufI)) (str.++ unch11I (str.++ ch1I unch21I))))
(assert (= (str.++ preJ (str.++ stem1 sufJ)) (str.++ unch11J (str.++ ch1J unch21J))))
(assert (= "sOit" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "sOitam" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "sOitoOi" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "sOiZi" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (= (ite (= ch1I var1I) 0 1) sc1I))
(assert (= (ite (= ch1J var1J) 0 1) sc1J))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= sc1I 1))
(assert (<= sc1J 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (<= (str.len var2I) 1))
(assert (<= (str.len var2J) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= (str.++ preI (str.++ stem2 sufI)) (str.++ unch12I (str.++ ch2I unch22I))))
(assert (= (str.++ preJ (str.++ stem2 sufJ)) (str.++ unch12J (str.++ ch2J unch22J))))
(assert (= "1aZ" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "1aZam" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "1ateOi" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "1ateOi" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (= (ite (= ch2I var2I) 0 1) sc2I))
(assert (= (ite (= ch2J var2J) 0 1) sc2J))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= sc2I 1))
(assert (<= sc2J 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (<= (str.len var3I) 1))
(assert (<= (str.len var3J) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= (str.++ preI (str.++ stem3 sufI)) (str.++ unch13I (str.++ ch3I unch23I))))
(assert (= (str.++ preJ (str.++ stem3 sufJ)) (str.++ unch13J (str.++ ch3J unch23J))))
(assert (= "ko2i3" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "koBe3am" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "koBeleOi" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "koBe3i" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (= (ite (= ch3I var3I) 0 1) sc3I))
(assert (= (ite (= ch3J var3J) 0 1) sc3J))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= sc3I 1))
(assert (<= sc3J 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (<= (str.len var4I) 1))
(assert (<= (str.len var4J) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= (str.++ preI (str.++ stem4 sufI)) (str.++ unch14I (str.++ ch4I unch24I))))
(assert (= (str.++ preJ (str.++ stem4 sufJ)) (str.++ unch14J (str.++ ch4J unch24J))))
(assert (= "zlo4ij" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "zlo4ijam" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "zlo4ijeOi" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "zlo4ijeOi" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (= (ite (= ch4I var4I) 0 1) sc4I))
(assert (= (ite (= ch4J var4J) 0 1) sc4J))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= sc4I 1))
(assert (<= sc4J 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (<= (str.len var5I) 1))
(assert (<= (str.len var5J) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= (str.++ preI (str.++ stem5 sufI)) (str.++ unch15I (str.++ ch5I unch25I))))
(assert (= (str.++ preJ (str.++ stem5 sufJ)) (str.++ unch15J (str.++ ch5J unch25J))))
(assert (= "5i6a7" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "5i6a7am" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "5i6aPeOi" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "5i6a7i" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (= (ite (= ch5I var5I) 0 1) sc5I))
(assert (= (ite (= ch5J var5J) 0 1) sc5J))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= sc5I 1))
(assert (<= sc5J 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (<= (str.len var6I) 1))
(assert (<= (str.len var6J) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= (str.++ preI (str.++ stem6 sufI)) (str.++ unch16I (str.++ ch6I unch26I))))
(assert (= (str.++ preJ (str.++ stem6 sufJ)) (str.++ unch16J (str.++ ch6J unch26J))))
(assert (= "korovaj" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "korovajam" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "korovajeOi" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "korovaji" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (= (ite (= ch6I var6I) 0 1) sc6I))
(assert (= (ite (= ch6J var6J) 0 1) sc6J))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (<= sc6I 1))
(assert (<= sc6J 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (<= (str.len var7G) 1))
(assert (<= (str.len var7H) 1))
(assert (<= (str.len var7I) 1))
(assert (<= (str.len var7J) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= (str.++ preG (str.++ stem7 sufG)) (str.++ unch17G (str.++ ch7G unch27G))))
(assert (= (str.++ preH (str.++ stem7 sufH)) (str.++ unch17H (str.++ ch7H unch27H))))
(assert (= (str.++ preI (str.++ stem7 sufI)) (str.++ unch17I (str.++ ch7I unch27I))))
(assert (= (str.++ preJ (str.++ stem7 sufJ)) (str.++ unch17J (str.++ ch7J unch27J))))
(assert (= "ka5i8" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "kame8am" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "kameneOi" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= "kame8i" (str.++ unch17D (str.++ var7D unch27D))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (= (ite (= ch7G var7G) 0 1) sc7G))
(assert (= (ite (= ch7H var7H) 0 1) sc7H))
(assert (= (ite (= ch7I var7I) 0 1) sc7I))
(assert (= (ite (= ch7J var7J) 0 1) sc7J))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= sc7G 1))
(assert (<= sc7H 1))
(assert (<= sc7I 1))
(assert (<= sc7J 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (<= (str.len var8G) 1))
(assert (<= (str.len var8H) 1))
(assert (<= (str.len var8I) 1))
(assert (<= (str.len var8J) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= (str.++ preG (str.++ stem8 sufG)) (str.++ unch18G (str.++ ch8G unch28G))))
(assert (= (str.++ preH (str.++ stem8 sufH)) (str.++ unch18H (str.++ ch8H unch28H))))
(assert (= (str.++ preI (str.++ stem8 sufI)) (str.++ unch18I (str.++ ch8I unch28I))))
(assert (= (str.++ preJ (str.++ stem8 sufJ)) (str.++ unch18J (str.++ ch8J unch28J))))
(assert (= "5i4" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "5i4am" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "5ideOi" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= "5i4i" (str.++ unch18D (str.++ var8D unch28D))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (= (ite (= ch8G var8G) 0 1) sc8G))
(assert (= (ite (= ch8H var8H) 0 1) sc8H))
(assert (= (ite (= ch8I var8I) 0 1) sc8I))
(assert (= (ite (= ch8J var8J) 0 1) sc8J))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= sc8G 1))
(assert (<= sc8H 1))
(assert (<= sc8I 1))
(assert (<= sc8J 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (<= (str.len var9G) 1))
(assert (<= (str.len var9H) 1))
(assert (<= (str.len var9I) 1))
(assert (<= (str.len var9J) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= (str.++ preG (str.++ stem9 sufG)) (str.++ unch19G (str.++ ch9G unch29G))))
(assert (= (str.++ preH (str.++ stem9 sufH)) (str.++ unch19H (str.++ ch9H unch29H))))
(assert (= (str.++ preI (str.++ stem9 sufI)) (str.++ unch19I (str.++ ch9I unch29I))))
(assert (= (str.++ preJ (str.++ stem9 sufJ)) (str.++ unch19J (str.++ ch9J unch29J))))
(assert (= "x3iw" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "x3ivam" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "x3ivoOi" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= "x3iOi" (str.++ unch19D (str.++ var9D unch29D))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (= (ite (= ch9G var9G) 0 1) sc9G))
(assert (= (ite (= ch9H var9H) 0 1) sc9H))
(assert (= (ite (= ch9I var9I) 0 1) sc9I))
(assert (= (ite (= ch9J var9J) 0 1) sc9J))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= sc9G 1))
(assert (<= sc9H 1))
(assert (<= sc9I 1))
(assert (<= sc9J 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (<= (str.len var10G) 1))
(assert (<= (str.len var10H) 1))
(assert (<= (str.len var10I) 1))
(assert (<= (str.len var10J) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= (str.++ preG (str.++ stem10 sufG)) (str.++ unch110G (str.++ ch10G unch210G))))
(assert (= (str.++ preH (str.++ stem10 sufH)) (str.++ unch110H (str.++ ch10H unch210H))))
(assert (= (str.++ preI (str.++ stem10 sufI)) (str.++ unch110I (str.++ ch10I unch210I))))
(assert (= (str.++ preJ (str.++ stem10 sufJ)) (str.++ unch110J (str.++ ch10J unch210J))))
(assert (= "holub" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "holubam" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "holuboOi" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= "holuXi" (str.++ unch110D (str.++ var10D unch210D))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (= (ite (= ch10G var10G) 0 1) sc10G))
(assert (= (ite (= ch10H var10H) 0 1) sc10H))
(assert (= (ite (= ch10I var10I) 0 1) sc10I))
(assert (= (ite (= ch10J var10J) 0 1) sc10J))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= sc10G 1))
(assert (<= sc10H 1))
(assert (<= sc10I 1))
(assert (<= sc10J 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (<= (str.len var11G) 1))
(assert (<= (str.len var11H) 1))
(assert (<= (str.len var11I) 1))
(assert (<= (str.len var11J) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= (str.++ preG (str.++ stem11 sufG)) (str.++ unch111G (str.++ ch11G unch211G))))
(assert (= (str.++ preH (str.++ stem11 sufH)) (str.++ unch111H (str.++ ch11H unch211H))))
(assert (= (str.++ preI (str.++ stem11 sufI)) (str.++ unch111I (str.++ ch11I unch211I))))
(assert (= (str.++ preJ (str.++ stem11 sufJ)) (str.++ unch111J (str.++ ch11J unch211J))))
(assert (= "6in" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "6inam" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "6inoOi" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= "6i8i" (str.++ unch111D (str.++ var11D unch211D))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (= (ite (= ch11G var11G) 0 1) sc11G))
(assert (= (ite (= ch11H var11H) 0 1) sc11H))
(assert (= (ite (= ch11I var11I) 0 1) sc11I))
(assert (= (ite (= ch11J var11J) 0 1) sc11J))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= sc11G 1))
(assert (<= sc11H 1))
(assert (<= sc11I 1))
(assert (<= sc11J 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (<= (str.len var12G) 1))
(assert (<= (str.len var12H) 1))
(assert (<= (str.len var12I) 1))
(assert (<= (str.len var12J) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= (str.++ preG (str.++ stem12 sufG)) (str.++ unch112G (str.++ ch12G unch212G))))
(assert (= (str.++ preH (str.++ stem12 sufH)) (str.++ unch112H (str.++ ch12H unch212H))))
(assert (= (str.++ preI (str.++ stem12 sufI)) (str.++ unch112I (str.++ ch12I unch212I))))
(assert (= (str.++ preJ (str.++ stem12 sufJ)) (str.++ unch112J (str.++ ch12J unch212J))))
(assert (= "leXi4" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "lebe4am" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "lebedeOi" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= "lebe4i" (str.++ unch112D (str.++ var12D unch212D))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (= (ite (= ch12G var12G) 0 1) sc12G))
(assert (= (ite (= ch12H var12H) 0 1) sc12H))
(assert (= (ite (= ch12I var12I) 0 1) sc12I))
(assert (= (ite (= ch12J var12J) 0 1) sc12J))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= sc12G 1))
(assert (<= sc12H 1))
(assert (<= sc12I 1))
(assert (<= sc12J 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (<= (str.len var13G) 1))
(assert (<= (str.len var13H) 1))
(assert (<= (str.len var13I) 1))
(assert (<= (str.len var13J) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= (str.++ preG (str.++ stem13 sufG)) (str.++ unch113G (str.++ ch13G unch213G))))
(assert (= (str.++ preH (str.++ stem13 sufH)) (str.++ unch113H (str.++ ch13H unch213H))))
(assert (= (str.++ preI (str.++ stem13 sufI)) (str.++ unch113I (str.++ ch13I unch213I))))
(assert (= (str.++ preJ (str.++ stem13 sufJ)) (str.++ unch113J (str.++ ch13J unch213J))))
(assert (= "su6id" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "su6idam" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "su6idoOi" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= "su6idoOi" (str.++ unch113E (str.++ var13E unch213E))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (= (ite (= ch13G var13G) 0 1) sc13G))
(assert (= (ite (= ch13H var13H) 0 1) sc13H))
(assert (= (ite (= ch13I var13I) 0 1) sc13I))
(assert (= (ite (= ch13J var13J) 0 1) sc13J))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= sc13G 1))
(assert (<= sc13H 1))
(assert (<= sc13I 1))
(assert (<= sc13J 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (<= (str.len var14G) 1))
(assert (<= (str.len var14H) 1))
(assert (<= (str.len var14I) 1))
(assert (<= (str.len var14J) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= (str.++ preG (str.++ stem14 sufG)) (str.++ unch114G (str.++ ch14G unch214G))))
(assert (= (str.++ preH (str.++ stem14 sufH)) (str.++ unch114H (str.++ ch14H unch214H))))
(assert (= (str.++ preI (str.++ stem14 sufI)) (str.++ unch114I (str.++ ch14I unch214I))))
(assert (= (str.++ preJ (str.++ stem14 sufJ)) (str.++ unch114J (str.++ ch14J unch214J))))
(assert (= "EoloOik" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "EoloOikam" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "EoloOikoOi" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= "EoloOikoOi" (str.++ unch114E (str.++ var14E unch214E))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (= (ite (= ch14G var14G) 0 1) sc14G))
(assert (= (ite (= ch14H var14H) 0 1) sc14H))
(assert (= (ite (= ch14I var14I) 0 1) sc14I))
(assert (= (ite (= ch14J var14J) 0 1) sc14J))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= sc14G 1))
(assert (<= sc14H 1))
(assert (<= sc14I 1))
(assert (<= sc14J 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (<= (str.len var15G) 1))
(assert (<= (str.len var15H) 1))
(assert (<= (str.len var15I) 1))
(assert (<= (str.len var15J) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= (str.++ preG (str.++ stem15 sufG)) (str.++ unch115G (str.++ ch15G unch215G))))
(assert (= (str.++ preH (str.++ stem15 sufH)) (str.++ unch115H (str.++ ch15H unch215H))))
(assert (= (str.++ preI (str.++ stem15 sufI)) (str.++ unch115I (str.++ ch15I unch215I))))
(assert (= (str.++ preJ (str.++ stem15 sufJ)) (str.++ unch115J (str.++ ch15J unch215J))))
(assert (= "3id" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "ledam" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "ledoOi" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= "le4i" (str.++ unch115D (str.++ var15D unch215D))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (= (ite (= ch15G var15G) 0 1) sc15G))
(assert (= (ite (= ch15H var15H) 0 1) sc15H))
(assert (= (ite (= ch15I var15I) 0 1) sc15I))
(assert (= (ite (= ch15J var15J) 0 1) sc15J))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= sc15G 1))
(assert (<= sc15H 1))
(assert (<= sc15I 1))
(assert (<= sc15J 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (<= (str.len var16G) 1))
(assert (<= (str.len var16H) 1))
(assert (<= (str.len var16I) 1))
(assert (<= (str.len var16J) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= (str.++ preG (str.++ stem16 sufG)) (str.++ unch116G (str.++ ch16G unch216G))))
(assert (= (str.++ preH (str.++ stem16 sufH)) (str.++ unch116H (str.++ ch16H unch216H))))
(assert (= (str.++ preI (str.++ stem16 sufI)) (str.++ unch116I (str.++ ch16I unch216I))))
(assert (= (str.++ preJ (str.++ stem16 sufJ)) (str.++ unch116J (str.++ ch16J unch216J))))
(assert (= "bi3" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bo3am" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "boleOi" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= "bo3i" (str.++ unch116D (str.++ var16D unch216D))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (= (ite (= ch16G var16G) 0 1) sc16G))
(assert (= (ite (= ch16H var16H) 0 1) sc16H))
(assert (= (ite (= ch16I var16I) 0 1) sc16I))
(assert (= (ite (= ch16J var16J) 0 1) sc16J))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= sc16G 1))
(assert (<= sc16H 1))
(assert (<= sc16I 1))
(assert (<= sc16J 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (<= (str.len var17G) 1))
(assert (<= (str.len var17H) 1))
(assert (<= (str.len var17I) 1))
(assert (<= (str.len var17J) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= (str.++ preG (str.++ stem17 sufG)) (str.++ unch117G (str.++ ch17G unch217G))))
(assert (= (str.++ preH (str.++ stem17 sufH)) (str.++ unch117H (str.++ ch17H unch217H))))
(assert (= (str.++ preI (str.++ stem17 sufI)) (str.++ unch117I (str.++ ch17I unch217I))))
(assert (= (str.++ preJ (str.++ stem17 sufJ)) (str.++ unch117J (str.++ ch17J unch217J))))
(assert (= "riw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "rovam" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "rovoOi" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= "roOi" (str.++ unch117D (str.++ var17D unch217D))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (= (ite (= ch17G var17G) 0 1) sc17G))
(assert (= (ite (= ch17H var17H) 0 1) sc17H))
(assert (= (ite (= ch17I var17I) 0 1) sc17I))
(assert (= (ite (= ch17J var17J) 0 1) sc17J))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= sc17G 1))
(assert (<= sc17H 1))
(assert (<= sc17I 1))
(assert (<= sc17J 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (<= (str.len var18G) 1))
(assert (<= (str.len var18H) 1))
(assert (<= (str.len var18I) 1))
(assert (<= (str.len var18J) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= (str.++ preG (str.++ stem18 sufG)) (str.++ unch118G (str.++ ch18G unch218G))))
(assert (= (str.++ preH (str.++ stem18 sufH)) (str.++ unch118H (str.++ ch18H unch218H))))
(assert (= (str.++ preI (str.++ stem18 sufI)) (str.++ unch118I (str.++ ch18I unch218I))))
(assert (= (str.++ preJ (str.++ stem18 sufJ)) (str.++ unch118J (str.++ ch18J unch218J))))
(assert (= "stiw" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "stolam" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "stoloOi" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= "sto3i" (str.++ unch118D (str.++ var18D unch218D))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (= (ite (= ch18G var18G) 0 1) sc18G))
(assert (= (ite (= ch18H var18H) 0 1) sc18H))
(assert (= (ite (= ch18I var18I) 0 1) sc18I))
(assert (= (ite (= ch18J var18J) 0 1) sc18J))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= sc18G 1))
(assert (<= sc18H 1))
(assert (<= sc18I 1))
(assert (<= sc18J 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (<= (str.len var19G) 1))
(assert (<= (str.len var19H) 1))
(assert (<= (str.len var19I) 1))
(assert (<= (str.len var19J) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= (str.++ preG (str.++ stem19 sufG)) (str.++ unch119G (str.++ ch19G unch219G))))
(assert (= (str.++ preH (str.++ stem19 sufH)) (str.++ unch119H (str.++ ch19H unch219H))))
(assert (= (str.++ preI (str.++ stem19 sufI)) (str.++ unch119I (str.++ ch19I unch219I))))
(assert (= (str.++ preJ (str.++ stem19 sufJ)) (str.++ unch119J (str.++ ch19J unch219J))))
(assert (= "4id" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "4idam" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "4idoOi" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= "4idoOi" (str.++ unch119E (str.++ var19E unch219E))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (= (ite (= ch19G var19G) 0 1) sc19G))
(assert (= (ite (= ch19H var19H) 0 1) sc19H))
(assert (= (ite (= ch19I var19I) 0 1) sc19I))
(assert (= (ite (= ch19J var19J) 0 1) sc19J))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= sc19G 1))
(assert (<= sc19H 1))
(assert (<= sc19I 1))
(assert (<= sc19J 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (<= (str.len var20G) 1))
(assert (<= (str.len var20H) 1))
(assert (<= (str.len var20I) 1))
(assert (<= (str.len var20J) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= (str.++ preG (str.++ stem20 sufG)) (str.++ unch120G (str.++ ch20G unch220G))))
(assert (= (str.++ preH (str.++ stem20 sufH)) (str.++ unch120H (str.++ ch20H unch220H))))
(assert (= (str.++ preI (str.++ stem20 sufI)) (str.++ unch120I (str.++ ch20I unch220I))))
(assert (= (str.++ preJ (str.++ stem20 sufJ)) (str.++ unch120J (str.++ ch20J unch220J))))
(assert (= "3it" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "3otam" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "3otoOi" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= "3oZi" (str.++ unch120D (str.++ var20D unch220D))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (= (ite (= ch20G var20G) 0 1) sc20G))
(assert (= (ite (= ch20H var20H) 0 1) sc20H))
(assert (= (ite (= ch20I var20I) 0 1) sc20I))
(assert (= (ite (= ch20J var20J) 0 1) sc20J))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= sc20G 1))
(assert (<= sc20H 1))
(assert (<= sc20I 1))
(assert (<= sc20J 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (<= (str.len var21G) 1))
(assert (<= (str.len var21H) 1))
(assert (<= (str.len var21I) 1))
(assert (<= (str.len var21J) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= (str.++ preG (str.++ stem21 sufG)) (str.++ unch121G (str.++ ch21G unch221G))))
(assert (= (str.++ preH (str.++ stem21 sufH)) (str.++ unch121H (str.++ ch21H unch221H))))
(assert (= (str.++ preI (str.++ stem21 sufI)) (str.++ unch121I (str.++ ch21I unch221I))))
(assert (= (str.++ preJ (str.++ stem21 sufJ)) (str.++ unch121J (str.++ ch21J unch221J))))
(assert (= "mist" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "mostam" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "mostoOi" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= "mosZi" (str.++ unch121D (str.++ var21D unch221D))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (= (ite (= ch21G var21G) 0 1) sc21G))
(assert (= (ite (= ch21H var21H) 0 1) sc21H))
(assert (= (ite (= ch21I var21I) 0 1) sc21I))
(assert (= (ite (= ch21J var21J) 0 1) sc21J))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= sc21G 1))
(assert (<= sc21H 1))
(assert (<= sc21I 1))
(assert (<= sc21J 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (<= (str.len var22G) 1))
(assert (<= (str.len var22H) 1))
(assert (<= (str.len var22I) 1))
(assert (<= (str.len var22J) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= (str.++ preG (str.++ stem22 sufG)) (str.++ unch122G (str.++ ch22G unch222G))))
(assert (= (str.++ preH (str.++ stem22 sufH)) (str.++ unch122H (str.++ ch22H unch222H))))
(assert (= (str.++ preI (str.++ stem22 sufI)) (str.++ unch122I (str.++ ch22I unch222I))))
(assert (= (str.++ preJ (str.++ stem22 sufJ)) (str.++ unch122J (str.++ ch22J unch222J))))
(assert (= "veEir" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "veEoram" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "veEoroOi" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= "veEo9i" (str.++ unch122D (str.++ var22D unch222D))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (= (ite (= ch22G var22G) 0 1) sc22G))
(assert (= (ite (= ch22H var22H) 0 1) sc22H))
(assert (= (ite (= ch22I var22I) 0 1) sc22I))
(assert (= (ite (= ch22J var22J) 0 1) sc22J))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= sc22G 1))
(assert (<= sc22H 1))
(assert (<= sc22I 1))
(assert (<= sc22J 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (<= (str.len var23G) 1))
(assert (<= (str.len var23H) 1))
(assert (<= (str.len var23I) 1))
(assert (<= (str.len var23J) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= (str.++ preG (str.++ stem23 sufG)) (str.++ unch123G (str.++ ch23G unch223G))))
(assert (= (str.++ preH (str.++ stem23 sufH)) (str.++ unch123H (str.++ ch23H unch223H))))
(assert (= (str.++ preI (str.++ stem23 sufI)) (str.++ unch123I (str.++ ch23I unch223I))))
(assert (= (str.++ preJ (str.++ stem23 sufJ)) (str.++ unch123J (str.++ ch23J unch223J))))
(assert (= "Zilo" (str.++ unch123F (str.++ var23F unch223F))))
(assert (= "Zila" (str.++ unch123G (str.++ var23G unch223G))))
(assert (= "Zilu" (str.++ unch123H (str.++ var23H unch223H))))
(assert (= "Zi3i" (str.++ unch123I (str.++ var23I unch223I))))
(assert (= "Ziw" (str.++ unch123J (str.++ var23J unch223J))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (= (ite (= ch23G var23G) 0 1) sc23G))
(assert (= (ite (= ch23H var23H) 0 1) sc23H))
(assert (= (ite (= ch23I var23I) 0 1) sc23I))
(assert (= (ite (= ch23J var23J) 0 1) sc23J))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= sc23G 1))
(assert (<= sc23H 1))
(assert (<= sc23I 1))
(assert (<= sc23J 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (<= (str.len var24G) 1))
(assert (<= (str.len var24H) 1))
(assert (<= (str.len var24I) 1))
(assert (<= (str.len var24J) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= (str.++ preG (str.++ stem24 sufG)) (str.++ unch124G (str.++ ch24G unch224G))))
(assert (= (str.++ preH (str.++ stem24 sufH)) (str.++ unch124H (str.++ ch24H unch224H))))
(assert (= (str.++ preI (str.++ stem24 sufI)) (str.++ unch124I (str.++ ch24I unch224I))))
(assert (= (str.++ preJ (str.++ stem24 sufJ)) (str.++ unch124J (str.++ ch24J unch224J))))
(assert (= "koleso" (str.++ unch124F (str.++ var24F unch224F))))
(assert (= "kolesa" (str.++ unch124G (str.++ var24G unch224G))))
(assert (= "kolesu" (str.++ unch124H (str.++ var24H unch224H))))
(assert (= "kole6i" (str.++ unch124I (str.++ var24I unch224I))))
(assert (= "ko3is" (str.++ unch124J (str.++ var24J unch224J))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (= (ite (= ch24G var24G) 0 1) sc24G))
(assert (= (ite (= ch24H var24H) 0 1) sc24H))
(assert (= (ite (= ch24I var24I) 0 1) sc24I))
(assert (= (ite (= ch24J var24J) 0 1) sc24J))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= sc24G 1))
(assert (<= sc24H 1))
(assert (<= sc24I 1))
(assert (<= sc24J 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (<= (str.len var25G) 1))
(assert (<= (str.len var25H) 1))
(assert (<= (str.len var25I) 1))
(assert (<= (str.len var25J) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= (str.++ preG (str.++ stem25 sufG)) (str.++ unch125G (str.++ ch25G unch225G))))
(assert (= (str.++ preH (str.++ stem25 sufH)) (str.++ unch125H (str.++ ch25H unch225H))))
(assert (= (str.++ preI (str.++ stem25 sufI)) (str.++ unch125I (str.++ ch25I unch225I))))
(assert (= (str.++ preJ (str.++ stem25 sufJ)) (str.++ unch125J (str.++ ch25J unch225J))))
(assert (= "ozero" (str.++ unch125F (str.++ var25F unch225F))))
(assert (= "ozera" (str.++ unch125G (str.++ var25G unch225G))))
(assert (= "ozeru" (str.++ unch125H (str.++ var25H unch225H))))
(assert (= "oze9i" (str.++ unch125I (str.++ var25I unch225I))))
(assert (= "o1ir" (str.++ unch125J (str.++ var25J unch225J))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (= (ite (= ch25G var25G) 0 1) sc25G))
(assert (= (ite (= ch25H var25H) 0 1) sc25H))
(assert (= (ite (= ch25I var25I) 0 1) sc25I))
(assert (= (ite (= ch25J var25J) 0 1) sc25J))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= sc25G 1))
(assert (<= sc25H 1))
(assert (<= sc25I 1))
(assert (<= sc25J 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (<= (str.len var26G) 1))
(assert (<= (str.len var26H) 1))
(assert (<= (str.len var26I) 1))
(assert (<= (str.len var26J) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= (str.++ preG (str.++ stem26 sufG)) (str.++ unch126G (str.++ ch26G unch226G))))
(assert (= (str.++ preH (str.++ stem26 sufH)) (str.++ unch126H (str.++ ch26H unch226H))))
(assert (= (str.++ preI (str.++ stem26 sufI)) (str.++ unch126I (str.++ ch26I unch226I))))
(assert (= (str.++ preJ (str.++ stem26 sufJ)) (str.++ unch126J (str.++ ch26J unch226J))))
(assert (= "selo" (str.++ unch126F (str.++ var26F unch226F))))
(assert (= "sela" (str.++ unch126G (str.++ var26G unch226G))))
(assert (= "selu" (str.++ unch126H (str.++ var26H unch226H))))
(assert (= "se3i" (str.++ unch126I (str.++ var26I unch226I))))
(assert (= "6iw" (str.++ unch126J (str.++ var26J unch226J))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (= (ite (= ch26G var26G) 0 1) sc26G))
(assert (= (ite (= ch26H var26H) 0 1) sc26H))
(assert (= (ite (= ch26I var26I) 0 1) sc26I))
(assert (= (ite (= ch26J var26J) 0 1) sc26J))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= sc26G 1))
(assert (<= sc26H 1))
(assert (<= sc26I 1))
(assert (<= sc26J 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (<= (str.len var27G) 1))
(assert (<= (str.len var27H) 1))
(assert (<= (str.len var27I) 1))
(assert (<= (str.len var27J) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= (str.++ preG (str.++ stem27 sufG)) (str.++ unch127G (str.++ ch27G unch227G))))
(assert (= (str.++ preH (str.++ stem27 sufH)) (str.++ unch127H (str.++ ch27H unch227H))))
(assert (= (str.++ preI (str.++ stem27 sufI)) (str.++ unch127I (str.++ ch27I unch227I))))
(assert (= (str.++ preJ (str.++ stem27 sufJ)) (str.++ unch127J (str.++ ch27J unch227J))))
(assert (= "pole" (str.++ unch127F (str.++ var27F unch227F))))
(assert (= "po3a" (str.++ unch127G (str.++ var27G unch227G))))
(assert (= "po3u" (str.++ unch127H (str.++ var27H unch227H))))
(assert (= "po3i" (str.++ unch127I (str.++ var27I unch227I))))
(assert (= "pi3" (str.++ unch127J (str.++ var27J unch227J))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (= (ite (= ch27G var27G) 0 1) sc27G))
(assert (= (ite (= ch27H var27H) 0 1) sc27H))
(assert (= (ite (= ch27I var27I) 0 1) sc27I))
(assert (= (ite (= ch27J var27J) 0 1) sc27J))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= sc27G 1))
(assert (<= sc27H 1))
(assert (<= sc27I 1))
(assert (<= sc27J 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (<= (str.len var28G) 1))
(assert (<= (str.len var28H) 1))
(assert (<= (str.len var28I) 1))
(assert (<= (str.len var28J) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= (str.++ preG (str.++ stem28 sufG)) (str.++ unch128G (str.++ ch28G unch228G))))
(assert (= (str.++ preH (str.++ stem28 sufH)) (str.++ unch128H (str.++ ch28H unch228H))))
(assert (= (str.++ preI (str.++ stem28 sufI)) (str.++ unch128I (str.++ ch28I unch228I))))
(assert (= (str.++ preJ (str.++ stem28 sufJ)) (str.++ unch128J (str.++ ch28J unch228J))))
(assert (= "slovo" (str.++ unch128F (str.++ var28F unch228F))))
(assert (= "slova" (str.++ unch128G (str.++ var28G unch228G))))
(assert (= "slovu" (str.++ unch128H (str.++ var28H unch228H))))
(assert (= "sloOi" (str.++ unch128I (str.++ var28I unch228I))))
(assert (= "sliw" (str.++ unch128J (str.++ var28J unch228J))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (= (ite (= ch28G var28G) 0 1) sc28G))
(assert (= (ite (= ch28H var28H) 0 1) sc28H))
(assert (= (ite (= ch28I var28I) 0 1) sc28I))
(assert (= (ite (= ch28J var28J) 0 1) sc28J))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= sc28G 1))
(assert (<= sc28H 1))
(assert (<= sc28I 1))
(assert (<= sc28J 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (<= (str.len var29G) 1))
(assert (<= (str.len var29H) 1))
(assert (<= (str.len var29I) 1))
(assert (<= (str.len var29J) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= (str.++ preG (str.++ stem29 sufG)) (str.++ unch129G (str.++ ch29G unch229G))))
(assert (= (str.++ preH (str.++ stem29 sufH)) (str.++ unch129H (str.++ ch29H unch229H))))
(assert (= (str.++ preI (str.++ stem29 sufI)) (str.++ unch129I (str.++ ch29I unch229I))))
(assert (= (str.++ preJ (str.++ stem29 sufJ)) (str.++ unch129J (str.++ ch29J unch229J))))
(assert (= "more" (str.++ unch129F (str.++ var29F unch229F))))
(assert (= "mo9a" (str.++ unch129G (str.++ var29G unch229G))))
(assert (= "mo9u" (str.++ unch129H (str.++ var29H unch229H))))
(assert (= "mo9i" (str.++ unch129I (str.++ var29I unch229I))))
(assert (= "mi9" (str.++ unch129J (str.++ var29J unch229J))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (= (ite (= ch29G var29G) 0 1) sc29G))
(assert (= (ite (= ch29H var29H) 0 1) sc29H))
(assert (= (ite (= ch29I var29I) 0 1) sc29I))
(assert (= (ite (= ch29J var29J) 0 1) sc29J))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= sc29G 1))
(assert (<= sc29H 1))
(assert (<= sc29I 1))
(assert (<= sc29J 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      sc0I
      sc0J
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      sc1I
      sc1J
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      sc2I
      sc2J
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      sc3I
      sc3J
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      sc4I
      sc4J
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      sc5I
      sc5J
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H
      sc6I
      sc6J
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      sc7G
      sc7H
      sc7I
      sc7J
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      sc8G
      sc8H
      sc8I
      sc8J
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      sc9G
      sc9H
      sc9I
      sc9J
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      sc10G
      sc10H
      sc10I
      sc10J
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      sc11G
      sc11H
      sc11I
      sc11J
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      sc12G
      sc12H
      sc12I
      sc12J
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      sc13G
      sc13H
      sc13I
      sc13J
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      sc14G
      sc14H
      sc14I
      sc14J
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      sc15G
      sc15H
      sc15I
      sc15J
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      sc16G
      sc16H
      sc16I
      sc16J
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      sc17G
      sc17H
      sc17I
      sc17J
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      sc18G
      sc18H
      sc18I
      sc18J
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      sc19G
      sc19H
      sc19I
      sc19J
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      sc20G
      sc20H
      sc20I
      sc20J
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      sc21G
      sc21H
      sc21I
      sc21J
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      sc22G
      sc22H
      sc22I
      sc22J
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      sc23G
      sc23H
      sc23I
      sc23J
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      sc24G
      sc24H
      sc24I
      sc24J
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      sc25G
      sc25H
      sc25I
      sc25J
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      sc26G
      sc26H
      sc26I
      sc26J
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      sc27G
      sc27H
      sc27I
      sc27J
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      sc28G
      sc28H
      sc28I
      sc28J
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      sc29G
      sc29H
      sc29I
      sc29J)
   11))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun var0I () String)
(declare-fun var0J () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun unch20I () String)
(declare-fun ch0I () String)
(declare-fun unch10I () String)
(declare-fun sufI () String)
(declare-fun preI () String)
(declare-fun unch20J () String)
(declare-fun ch0J () String)
(declare-fun unch10J () String)
(declare-fun sufJ () String)
(declare-fun preJ () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun sc0I () Int)
(declare-fun sc0J () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun var1I () String)
(declare-fun var1J () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun unch21I () String)
(declare-fun ch1I () String)
(declare-fun unch11I () String)
(declare-fun unch21J () String)
(declare-fun ch1J () String)
(declare-fun unch11J () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun sc1I () Int)
(declare-fun sc1J () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun var2I () String)
(declare-fun var2J () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun unch22I () String)
(declare-fun ch2I () String)
(declare-fun unch12I () String)
(declare-fun unch22J () String)
(declare-fun ch2J () String)
(declare-fun unch12J () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun sc2I () Int)
(declare-fun sc2J () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun var3I () String)
(declare-fun var3J () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun unch23I () String)
(declare-fun ch3I () String)
(declare-fun unch13I () String)
(declare-fun unch23J () String)
(declare-fun ch3J () String)
(declare-fun unch13J () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun sc3I () Int)
(declare-fun sc3J () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun var4I () String)
(declare-fun var4J () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun unch24I () String)
(declare-fun ch4I () String)
(declare-fun unch14I () String)
(declare-fun unch24J () String)
(declare-fun ch4J () String)
(declare-fun unch14J () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun sc4I () Int)
(declare-fun sc4J () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun var5I () String)
(declare-fun var5J () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun unch25I () String)
(declare-fun ch5I () String)
(declare-fun unch15I () String)
(declare-fun unch25J () String)
(declare-fun ch5J () String)
(declare-fun unch15J () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun sc5I () Int)
(declare-fun sc5J () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun var6I () String)
(declare-fun var6J () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun unch26I () String)
(declare-fun ch6I () String)
(declare-fun unch16I () String)
(declare-fun unch26J () String)
(declare-fun ch6J () String)
(declare-fun unch16J () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(declare-fun sc6I () Int)
(declare-fun sc6J () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun var7G () String)
(declare-fun var7H () String)
(declare-fun var7I () String)
(declare-fun var7J () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun unch27G () String)
(declare-fun ch7G () String)
(declare-fun unch17G () String)
(declare-fun unch27H () String)
(declare-fun ch7H () String)
(declare-fun unch17H () String)
(declare-fun unch27I () String)
(declare-fun ch7I () String)
(declare-fun unch17I () String)
(declare-fun unch27J () String)
(declare-fun ch7J () String)
(declare-fun unch17J () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun sc7G () Int)
(declare-fun sc7H () Int)
(declare-fun sc7I () Int)
(declare-fun sc7J () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun var8G () String)
(declare-fun var8H () String)
(declare-fun var8I () String)
(declare-fun var8J () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun unch28G () String)
(declare-fun ch8G () String)
(declare-fun unch18G () String)
(declare-fun unch28H () String)
(declare-fun ch8H () String)
(declare-fun unch18H () String)
(declare-fun unch28I () String)
(declare-fun ch8I () String)
(declare-fun unch18I () String)
(declare-fun unch28J () String)
(declare-fun ch8J () String)
(declare-fun unch18J () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun sc8G () Int)
(declare-fun sc8H () Int)
(declare-fun sc8I () Int)
(declare-fun sc8J () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun var9G () String)
(declare-fun var9H () String)
(declare-fun var9I () String)
(declare-fun var9J () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun unch29G () String)
(declare-fun ch9G () String)
(declare-fun unch19G () String)
(declare-fun unch29H () String)
(declare-fun ch9H () String)
(declare-fun unch19H () String)
(declare-fun unch29I () String)
(declare-fun ch9I () String)
(declare-fun unch19I () String)
(declare-fun unch29J () String)
(declare-fun ch9J () String)
(declare-fun unch19J () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun sc9G () Int)
(declare-fun sc9H () Int)
(declare-fun sc9I () Int)
(declare-fun sc9J () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun var10G () String)
(declare-fun var10H () String)
(declare-fun var10I () String)
(declare-fun var10J () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun unch210G () String)
(declare-fun ch10G () String)
(declare-fun unch110G () String)
(declare-fun unch210H () String)
(declare-fun ch10H () String)
(declare-fun unch110H () String)
(declare-fun unch210I () String)
(declare-fun ch10I () String)
(declare-fun unch110I () String)
(declare-fun unch210J () String)
(declare-fun ch10J () String)
(declare-fun unch110J () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun sc10G () Int)
(declare-fun sc10H () Int)
(declare-fun sc10I () Int)
(declare-fun sc10J () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun var11G () String)
(declare-fun var11H () String)
(declare-fun var11I () String)
(declare-fun var11J () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun unch211G () String)
(declare-fun ch11G () String)
(declare-fun unch111G () String)
(declare-fun unch211H () String)
(declare-fun ch11H () String)
(declare-fun unch111H () String)
(declare-fun unch211I () String)
(declare-fun ch11I () String)
(declare-fun unch111I () String)
(declare-fun unch211J () String)
(declare-fun ch11J () String)
(declare-fun unch111J () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun sc11G () Int)
(declare-fun sc11H () Int)
(declare-fun sc11I () Int)
(declare-fun sc11J () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun var12G () String)
(declare-fun var12H () String)
(declare-fun var12I () String)
(declare-fun var12J () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun unch212G () String)
(declare-fun ch12G () String)
(declare-fun unch112G () String)
(declare-fun unch212H () String)
(declare-fun ch12H () String)
(declare-fun unch112H () String)
(declare-fun unch212I () String)
(declare-fun ch12I () String)
(declare-fun unch112I () String)
(declare-fun unch212J () String)
(declare-fun ch12J () String)
(declare-fun unch112J () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun sc12G () Int)
(declare-fun sc12H () Int)
(declare-fun sc12I () Int)
(declare-fun sc12J () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun var13G () String)
(declare-fun var13H () String)
(declare-fun var13I () String)
(declare-fun var13J () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun unch213G () String)
(declare-fun ch13G () String)
(declare-fun unch113G () String)
(declare-fun unch213H () String)
(declare-fun ch13H () String)
(declare-fun unch113H () String)
(declare-fun unch213I () String)
(declare-fun ch13I () String)
(declare-fun unch113I () String)
(declare-fun unch213J () String)
(declare-fun ch13J () String)
(declare-fun unch113J () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun sc13G () Int)
(declare-fun sc13H () Int)
(declare-fun sc13I () Int)
(declare-fun sc13J () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun var14G () String)
(declare-fun var14H () String)
(declare-fun var14I () String)
(declare-fun var14J () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun unch214G () String)
(declare-fun ch14G () String)
(declare-fun unch114G () String)
(declare-fun unch214H () String)
(declare-fun ch14H () String)
(declare-fun unch114H () String)
(declare-fun unch214I () String)
(declare-fun ch14I () String)
(declare-fun unch114I () String)
(declare-fun unch214J () String)
(declare-fun ch14J () String)
(declare-fun unch114J () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun sc14G () Int)
(declare-fun sc14H () Int)
(declare-fun sc14I () Int)
(declare-fun sc14J () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun var15G () String)
(declare-fun var15H () String)
(declare-fun var15I () String)
(declare-fun var15J () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun unch215G () String)
(declare-fun ch15G () String)
(declare-fun unch115G () String)
(declare-fun unch215H () String)
(declare-fun ch15H () String)
(declare-fun unch115H () String)
(declare-fun unch215I () String)
(declare-fun ch15I () String)
(declare-fun unch115I () String)
(declare-fun unch215J () String)
(declare-fun ch15J () String)
(declare-fun unch115J () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun sc15G () Int)
(declare-fun sc15H () Int)
(declare-fun sc15I () Int)
(declare-fun sc15J () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun var16G () String)
(declare-fun var16H () String)
(declare-fun var16I () String)
(declare-fun var16J () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun unch216G () String)
(declare-fun ch16G () String)
(declare-fun unch116G () String)
(declare-fun unch216H () String)
(declare-fun ch16H () String)
(declare-fun unch116H () String)
(declare-fun unch216I () String)
(declare-fun ch16I () String)
(declare-fun unch116I () String)
(declare-fun unch216J () String)
(declare-fun ch16J () String)
(declare-fun unch116J () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun sc16G () Int)
(declare-fun sc16H () Int)
(declare-fun sc16I () Int)
(declare-fun sc16J () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun var17G () String)
(declare-fun var17H () String)
(declare-fun var17I () String)
(declare-fun var17J () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun unch217G () String)
(declare-fun ch17G () String)
(declare-fun unch117G () String)
(declare-fun unch217H () String)
(declare-fun ch17H () String)
(declare-fun unch117H () String)
(declare-fun unch217I () String)
(declare-fun ch17I () String)
(declare-fun unch117I () String)
(declare-fun unch217J () String)
(declare-fun ch17J () String)
(declare-fun unch117J () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun sc17G () Int)
(declare-fun sc17H () Int)
(declare-fun sc17I () Int)
(declare-fun sc17J () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun var18G () String)
(declare-fun var18H () String)
(declare-fun var18I () String)
(declare-fun var18J () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun unch218G () String)
(declare-fun ch18G () String)
(declare-fun unch118G () String)
(declare-fun unch218H () String)
(declare-fun ch18H () String)
(declare-fun unch118H () String)
(declare-fun unch218I () String)
(declare-fun ch18I () String)
(declare-fun unch118I () String)
(declare-fun unch218J () String)
(declare-fun ch18J () String)
(declare-fun unch118J () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun sc18G () Int)
(declare-fun sc18H () Int)
(declare-fun sc18I () Int)
(declare-fun sc18J () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun var19G () String)
(declare-fun var19H () String)
(declare-fun var19I () String)
(declare-fun var19J () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun unch219G () String)
(declare-fun ch19G () String)
(declare-fun unch119G () String)
(declare-fun unch219H () String)
(declare-fun ch19H () String)
(declare-fun unch119H () String)
(declare-fun unch219I () String)
(declare-fun ch19I () String)
(declare-fun unch119I () String)
(declare-fun unch219J () String)
(declare-fun ch19J () String)
(declare-fun unch119J () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun sc19G () Int)
(declare-fun sc19H () Int)
(declare-fun sc19I () Int)
(declare-fun sc19J () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun var20G () String)
(declare-fun var20H () String)
(declare-fun var20I () String)
(declare-fun var20J () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun unch220G () String)
(declare-fun ch20G () String)
(declare-fun unch120G () String)
(declare-fun unch220H () String)
(declare-fun ch20H () String)
(declare-fun unch120H () String)
(declare-fun unch220I () String)
(declare-fun ch20I () String)
(declare-fun unch120I () String)
(declare-fun unch220J () String)
(declare-fun ch20J () String)
(declare-fun unch120J () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun sc20G () Int)
(declare-fun sc20H () Int)
(declare-fun sc20I () Int)
(declare-fun sc20J () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun var21G () String)
(declare-fun var21H () String)
(declare-fun var21I () String)
(declare-fun var21J () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun unch221G () String)
(declare-fun ch21G () String)
(declare-fun unch121G () String)
(declare-fun unch221H () String)
(declare-fun ch21H () String)
(declare-fun unch121H () String)
(declare-fun unch221I () String)
(declare-fun ch21I () String)
(declare-fun unch121I () String)
(declare-fun unch221J () String)
(declare-fun ch21J () String)
(declare-fun unch121J () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun sc21G () Int)
(declare-fun sc21H () Int)
(declare-fun sc21I () Int)
(declare-fun sc21J () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun var22G () String)
(declare-fun var22H () String)
(declare-fun var22I () String)
(declare-fun var22J () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun unch222G () String)
(declare-fun ch22G () String)
(declare-fun unch122G () String)
(declare-fun unch222H () String)
(declare-fun ch22H () String)
(declare-fun unch122H () String)
(declare-fun unch222I () String)
(declare-fun ch22I () String)
(declare-fun unch122I () String)
(declare-fun unch222J () String)
(declare-fun ch22J () String)
(declare-fun unch122J () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun sc22G () Int)
(declare-fun sc22H () Int)
(declare-fun sc22I () Int)
(declare-fun sc22J () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun var23G () String)
(declare-fun var23H () String)
(declare-fun var23I () String)
(declare-fun var23J () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun unch223G () String)
(declare-fun ch23G () String)
(declare-fun unch123G () String)
(declare-fun unch223H () String)
(declare-fun ch23H () String)
(declare-fun unch123H () String)
(declare-fun unch223I () String)
(declare-fun ch23I () String)
(declare-fun unch123I () String)
(declare-fun unch223J () String)
(declare-fun ch23J () String)
(declare-fun unch123J () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun sc23G () Int)
(declare-fun sc23H () Int)
(declare-fun sc23I () Int)
(declare-fun sc23J () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun var24G () String)
(declare-fun var24H () String)
(declare-fun var24I () String)
(declare-fun var24J () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun unch224G () String)
(declare-fun ch24G () String)
(declare-fun unch124G () String)
(declare-fun unch224H () String)
(declare-fun ch24H () String)
(declare-fun unch124H () String)
(declare-fun unch224I () String)
(declare-fun ch24I () String)
(declare-fun unch124I () String)
(declare-fun unch224J () String)
(declare-fun ch24J () String)
(declare-fun unch124J () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun sc24G () Int)
(declare-fun sc24H () Int)
(declare-fun sc24I () Int)
(declare-fun sc24J () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun var25G () String)
(declare-fun var25H () String)
(declare-fun var25I () String)
(declare-fun var25J () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun unch225G () String)
(declare-fun ch25G () String)
(declare-fun unch125G () String)
(declare-fun unch225H () String)
(declare-fun ch25H () String)
(declare-fun unch125H () String)
(declare-fun unch225I () String)
(declare-fun ch25I () String)
(declare-fun unch125I () String)
(declare-fun unch225J () String)
(declare-fun ch25J () String)
(declare-fun unch125J () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun sc25G () Int)
(declare-fun sc25H () Int)
(declare-fun sc25I () Int)
(declare-fun sc25J () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun var26G () String)
(declare-fun var26H () String)
(declare-fun var26I () String)
(declare-fun var26J () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun unch226G () String)
(declare-fun ch26G () String)
(declare-fun unch126G () String)
(declare-fun unch226H () String)
(declare-fun ch26H () String)
(declare-fun unch126H () String)
(declare-fun unch226I () String)
(declare-fun ch26I () String)
(declare-fun unch126I () String)
(declare-fun unch226J () String)
(declare-fun ch26J () String)
(declare-fun unch126J () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun sc26G () Int)
(declare-fun sc26H () Int)
(declare-fun sc26I () Int)
(declare-fun sc26J () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun var27G () String)
(declare-fun var27H () String)
(declare-fun var27I () String)
(declare-fun var27J () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun unch227G () String)
(declare-fun ch27G () String)
(declare-fun unch127G () String)
(declare-fun unch227H () String)
(declare-fun ch27H () String)
(declare-fun unch127H () String)
(declare-fun unch227I () String)
(declare-fun ch27I () String)
(declare-fun unch127I () String)
(declare-fun unch227J () String)
(declare-fun ch27J () String)
(declare-fun unch127J () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun sc27G () Int)
(declare-fun sc27H () Int)
(declare-fun sc27I () Int)
(declare-fun sc27J () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun var28G () String)
(declare-fun var28H () String)
(declare-fun var28I () String)
(declare-fun var28J () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun unch228G () String)
(declare-fun ch28G () String)
(declare-fun unch128G () String)
(declare-fun unch228H () String)
(declare-fun ch28H () String)
(declare-fun unch128H () String)
(declare-fun unch228I () String)
(declare-fun ch28I () String)
(declare-fun unch128I () String)
(declare-fun unch228J () String)
(declare-fun ch28J () String)
(declare-fun unch128J () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun sc28G () Int)
(declare-fun sc28H () Int)
(declare-fun sc28I () Int)
(declare-fun sc28J () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun var29G () String)
(declare-fun var29H () String)
(declare-fun var29I () String)
(declare-fun var29J () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun unch229G () String)
(declare-fun ch29G () String)
(declare-fun unch129G () String)
(declare-fun unch229H () String)
(declare-fun ch29H () String)
(declare-fun unch129H () String)
(declare-fun unch229I () String)
(declare-fun ch29I () String)
(declare-fun unch129I () String)
(declare-fun unch229J () String)
(declare-fun ch29J () String)
(declare-fun unch129J () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun sc29G () Int)
(declare-fun sc29H () Int)
(declare-fun sc29I () Int)
(declare-fun sc29J () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (<= (str.len var0I) 1))
(assert (<= (str.len var0J) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= (str.++ preI (str.++ stem0 sufI)) (str.++ unch10I (str.++ ch0I unch20I))))
(assert (= (str.++ preJ (str.++ stem0 sufJ)) (str.++ unch10J (str.++ ch0J unch20J))))
(assert (= "zub" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "zubam" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "zuboOi" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "zuXi" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (= (ite (= ch0I var0I) 0 1) sc0I))
(assert (= (ite (= ch0J var0J) 0 1) sc0J))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= sc0I 1))
(assert (<= sc0J 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (<= (str.len var1I) 1))
(assert (<= (str.len var1J) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= (str.++ preI (str.++ stem1 sufI)) (str.++ unch11I (str.++ ch1I unch21I))))
(assert (= (str.++ preJ (str.++ stem1 sufJ)) (str.++ unch11J (str.++ ch1J unch21J))))
(assert (= "sOit" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "sOitam" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "sOitoOi" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "sOiZi" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (= (ite (= ch1I var1I) 0 1) sc1I))
(assert (= (ite (= ch1J var1J) 0 1) sc1J))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= sc1I 1))
(assert (<= sc1J 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (<= (str.len var2I) 1))
(assert (<= (str.len var2J) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= (str.++ preI (str.++ stem2 sufI)) (str.++ unch12I (str.++ ch2I unch22I))))
(assert (= (str.++ preJ (str.++ stem2 sufJ)) (str.++ unch12J (str.++ ch2J unch22J))))
(assert (= "1aZ" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "1aZam" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "1ateOi" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "1ateOi" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (= (ite (= ch2I var2I) 0 1) sc2I))
(assert (= (ite (= ch2J var2J) 0 1) sc2J))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= sc2I 1))
(assert (<= sc2J 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (<= (str.len var3I) 1))
(assert (<= (str.len var3J) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= (str.++ preI (str.++ stem3 sufI)) (str.++ unch13I (str.++ ch3I unch23I))))
(assert (= (str.++ preJ (str.++ stem3 sufJ)) (str.++ unch13J (str.++ ch3J unch23J))))
(assert (= "ko2i3" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "koBe3am" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "koBeleOi" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "koBe3i" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (= (ite (= ch3I var3I) 0 1) sc3I))
(assert (= (ite (= ch3J var3J) 0 1) sc3J))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= sc3I 1))
(assert (<= sc3J 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (<= (str.len var4I) 1))
(assert (<= (str.len var4J) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= (str.++ preI (str.++ stem4 sufI)) (str.++ unch14I (str.++ ch4I unch24I))))
(assert (= (str.++ preJ (str.++ stem4 sufJ)) (str.++ unch14J (str.++ ch4J unch24J))))
(assert (= "zlo4ij" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "zlo4ijam" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "zlo4ijeOi" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "zlo4ijeOi" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (= (ite (= ch4I var4I) 0 1) sc4I))
(assert (= (ite (= ch4J var4J) 0 1) sc4J))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= sc4I 1))
(assert (<= sc4J 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (<= (str.len var5I) 1))
(assert (<= (str.len var5J) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= (str.++ preI (str.++ stem5 sufI)) (str.++ unch15I (str.++ ch5I unch25I))))
(assert (= (str.++ preJ (str.++ stem5 sufJ)) (str.++ unch15J (str.++ ch5J unch25J))))
(assert (= "5i6a7" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "5i6a7am" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "5i6aPeOi" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "5i6a7i" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (= (ite (= ch5I var5I) 0 1) sc5I))
(assert (= (ite (= ch5J var5J) 0 1) sc5J))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= sc5I 1))
(assert (<= sc5J 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (<= (str.len var6I) 1))
(assert (<= (str.len var6J) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= (str.++ preI (str.++ stem6 sufI)) (str.++ unch16I (str.++ ch6I unch26I))))
(assert (= (str.++ preJ (str.++ stem6 sufJ)) (str.++ unch16J (str.++ ch6J unch26J))))
(assert (= "korovaj" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "korovajam" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "korovajeOi" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "korovaji" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (= (ite (= ch6I var6I) 0 1) sc6I))
(assert (= (ite (= ch6J var6J) 0 1) sc6J))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (<= sc6I 1))
(assert (<= sc6J 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (<= (str.len var7G) 1))
(assert (<= (str.len var7H) 1))
(assert (<= (str.len var7I) 1))
(assert (<= (str.len var7J) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= (str.++ preG (str.++ stem7 sufG)) (str.++ unch17G (str.++ ch7G unch27G))))
(assert (= (str.++ preH (str.++ stem7 sufH)) (str.++ unch17H (str.++ ch7H unch27H))))
(assert (= (str.++ preI (str.++ stem7 sufI)) (str.++ unch17I (str.++ ch7I unch27I))))
(assert (= (str.++ preJ (str.++ stem7 sufJ)) (str.++ unch17J (str.++ ch7J unch27J))))
(assert (= "ka5i8" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "kame8am" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "kameneOi" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= "kame8i" (str.++ unch17D (str.++ var7D unch27D))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (= (ite (= ch7G var7G) 0 1) sc7G))
(assert (= (ite (= ch7H var7H) 0 1) sc7H))
(assert (= (ite (= ch7I var7I) 0 1) sc7I))
(assert (= (ite (= ch7J var7J) 0 1) sc7J))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= sc7G 1))
(assert (<= sc7H 1))
(assert (<= sc7I 1))
(assert (<= sc7J 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (<= (str.len var8G) 1))
(assert (<= (str.len var8H) 1))
(assert (<= (str.len var8I) 1))
(assert (<= (str.len var8J) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= (str.++ preG (str.++ stem8 sufG)) (str.++ unch18G (str.++ ch8G unch28G))))
(assert (= (str.++ preH (str.++ stem8 sufH)) (str.++ unch18H (str.++ ch8H unch28H))))
(assert (= (str.++ preI (str.++ stem8 sufI)) (str.++ unch18I (str.++ ch8I unch28I))))
(assert (= (str.++ preJ (str.++ stem8 sufJ)) (str.++ unch18J (str.++ ch8J unch28J))))
(assert (= "5i4" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "5i4am" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "5ideOi" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= "5i4i" (str.++ unch18D (str.++ var8D unch28D))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (= (ite (= ch8G var8G) 0 1) sc8G))
(assert (= (ite (= ch8H var8H) 0 1) sc8H))
(assert (= (ite (= ch8I var8I) 0 1) sc8I))
(assert (= (ite (= ch8J var8J) 0 1) sc8J))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= sc8G 1))
(assert (<= sc8H 1))
(assert (<= sc8I 1))
(assert (<= sc8J 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (<= (str.len var9G) 1))
(assert (<= (str.len var9H) 1))
(assert (<= (str.len var9I) 1))
(assert (<= (str.len var9J) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= (str.++ preG (str.++ stem9 sufG)) (str.++ unch19G (str.++ ch9G unch29G))))
(assert (= (str.++ preH (str.++ stem9 sufH)) (str.++ unch19H (str.++ ch9H unch29H))))
(assert (= (str.++ preI (str.++ stem9 sufI)) (str.++ unch19I (str.++ ch9I unch29I))))
(assert (= (str.++ preJ (str.++ stem9 sufJ)) (str.++ unch19J (str.++ ch9J unch29J))))
(assert (= "x3iw" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "x3ivam" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "x3ivoOi" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= "x3iOi" (str.++ unch19D (str.++ var9D unch29D))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (= (ite (= ch9G var9G) 0 1) sc9G))
(assert (= (ite (= ch9H var9H) 0 1) sc9H))
(assert (= (ite (= ch9I var9I) 0 1) sc9I))
(assert (= (ite (= ch9J var9J) 0 1) sc9J))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= sc9G 1))
(assert (<= sc9H 1))
(assert (<= sc9I 1))
(assert (<= sc9J 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (<= (str.len var10G) 1))
(assert (<= (str.len var10H) 1))
(assert (<= (str.len var10I) 1))
(assert (<= (str.len var10J) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= (str.++ preG (str.++ stem10 sufG)) (str.++ unch110G (str.++ ch10G unch210G))))
(assert (= (str.++ preH (str.++ stem10 sufH)) (str.++ unch110H (str.++ ch10H unch210H))))
(assert (= (str.++ preI (str.++ stem10 sufI)) (str.++ unch110I (str.++ ch10I unch210I))))
(assert (= (str.++ preJ (str.++ stem10 sufJ)) (str.++ unch110J (str.++ ch10J unch210J))))
(assert (= "holub" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "holubam" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "holuboOi" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= "holuXi" (str.++ unch110D (str.++ var10D unch210D))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (= (ite (= ch10G var10G) 0 1) sc10G))
(assert (= (ite (= ch10H var10H) 0 1) sc10H))
(assert (= (ite (= ch10I var10I) 0 1) sc10I))
(assert (= (ite (= ch10J var10J) 0 1) sc10J))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= sc10G 1))
(assert (<= sc10H 1))
(assert (<= sc10I 1))
(assert (<= sc10J 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (<= (str.len var11G) 1))
(assert (<= (str.len var11H) 1))
(assert (<= (str.len var11I) 1))
(assert (<= (str.len var11J) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= (str.++ preG (str.++ stem11 sufG)) (str.++ unch111G (str.++ ch11G unch211G))))
(assert (= (str.++ preH (str.++ stem11 sufH)) (str.++ unch111H (str.++ ch11H unch211H))))
(assert (= (str.++ preI (str.++ stem11 sufI)) (str.++ unch111I (str.++ ch11I unch211I))))
(assert (= (str.++ preJ (str.++ stem11 sufJ)) (str.++ unch111J (str.++ ch11J unch211J))))
(assert (= "6in" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "6inam" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "6inoOi" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= "6i8i" (str.++ unch111D (str.++ var11D unch211D))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (= (ite (= ch11G var11G) 0 1) sc11G))
(assert (= (ite (= ch11H var11H) 0 1) sc11H))
(assert (= (ite (= ch11I var11I) 0 1) sc11I))
(assert (= (ite (= ch11J var11J) 0 1) sc11J))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= sc11G 1))
(assert (<= sc11H 1))
(assert (<= sc11I 1))
(assert (<= sc11J 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (<= (str.len var12G) 1))
(assert (<= (str.len var12H) 1))
(assert (<= (str.len var12I) 1))
(assert (<= (str.len var12J) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= (str.++ preG (str.++ stem12 sufG)) (str.++ unch112G (str.++ ch12G unch212G))))
(assert (= (str.++ preH (str.++ stem12 sufH)) (str.++ unch112H (str.++ ch12H unch212H))))
(assert (= (str.++ preI (str.++ stem12 sufI)) (str.++ unch112I (str.++ ch12I unch212I))))
(assert (= (str.++ preJ (str.++ stem12 sufJ)) (str.++ unch112J (str.++ ch12J unch212J))))
(assert (= "leXi4" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "lebe4am" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "lebedeOi" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= "lebe4i" (str.++ unch112D (str.++ var12D unch212D))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (= (ite (= ch12G var12G) 0 1) sc12G))
(assert (= (ite (= ch12H var12H) 0 1) sc12H))
(assert (= (ite (= ch12I var12I) 0 1) sc12I))
(assert (= (ite (= ch12J var12J) 0 1) sc12J))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= sc12G 1))
(assert (<= sc12H 1))
(assert (<= sc12I 1))
(assert (<= sc12J 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (<= (str.len var13G) 1))
(assert (<= (str.len var13H) 1))
(assert (<= (str.len var13I) 1))
(assert (<= (str.len var13J) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= (str.++ preG (str.++ stem13 sufG)) (str.++ unch113G (str.++ ch13G unch213G))))
(assert (= (str.++ preH (str.++ stem13 sufH)) (str.++ unch113H (str.++ ch13H unch213H))))
(assert (= (str.++ preI (str.++ stem13 sufI)) (str.++ unch113I (str.++ ch13I unch213I))))
(assert (= (str.++ preJ (str.++ stem13 sufJ)) (str.++ unch113J (str.++ ch13J unch213J))))
(assert (= "su6id" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "su6idam" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "su6idoOi" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= "su6idoOi" (str.++ unch113E (str.++ var13E unch213E))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (= (ite (= ch13G var13G) 0 1) sc13G))
(assert (= (ite (= ch13H var13H) 0 1) sc13H))
(assert (= (ite (= ch13I var13I) 0 1) sc13I))
(assert (= (ite (= ch13J var13J) 0 1) sc13J))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= sc13G 1))
(assert (<= sc13H 1))
(assert (<= sc13I 1))
(assert (<= sc13J 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (<= (str.len var14G) 1))
(assert (<= (str.len var14H) 1))
(assert (<= (str.len var14I) 1))
(assert (<= (str.len var14J) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= (str.++ preG (str.++ stem14 sufG)) (str.++ unch114G (str.++ ch14G unch214G))))
(assert (= (str.++ preH (str.++ stem14 sufH)) (str.++ unch114H (str.++ ch14H unch214H))))
(assert (= (str.++ preI (str.++ stem14 sufI)) (str.++ unch114I (str.++ ch14I unch214I))))
(assert (= (str.++ preJ (str.++ stem14 sufJ)) (str.++ unch114J (str.++ ch14J unch214J))))
(assert (= "EoloOik" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "EoloOikam" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "EoloOikoOi" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= "EoloOikoOi" (str.++ unch114E (str.++ var14E unch214E))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (= (ite (= ch14G var14G) 0 1) sc14G))
(assert (= (ite (= ch14H var14H) 0 1) sc14H))
(assert (= (ite (= ch14I var14I) 0 1) sc14I))
(assert (= (ite (= ch14J var14J) 0 1) sc14J))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= sc14G 1))
(assert (<= sc14H 1))
(assert (<= sc14I 1))
(assert (<= sc14J 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (<= (str.len var15G) 1))
(assert (<= (str.len var15H) 1))
(assert (<= (str.len var15I) 1))
(assert (<= (str.len var15J) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= (str.++ preG (str.++ stem15 sufG)) (str.++ unch115G (str.++ ch15G unch215G))))
(assert (= (str.++ preH (str.++ stem15 sufH)) (str.++ unch115H (str.++ ch15H unch215H))))
(assert (= (str.++ preI (str.++ stem15 sufI)) (str.++ unch115I (str.++ ch15I unch215I))))
(assert (= (str.++ preJ (str.++ stem15 sufJ)) (str.++ unch115J (str.++ ch15J unch215J))))
(assert (= "3id" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "ledam" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "ledoOi" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= "le4i" (str.++ unch115D (str.++ var15D unch215D))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (= (ite (= ch15G var15G) 0 1) sc15G))
(assert (= (ite (= ch15H var15H) 0 1) sc15H))
(assert (= (ite (= ch15I var15I) 0 1) sc15I))
(assert (= (ite (= ch15J var15J) 0 1) sc15J))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= sc15G 1))
(assert (<= sc15H 1))
(assert (<= sc15I 1))
(assert (<= sc15J 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (<= (str.len var16G) 1))
(assert (<= (str.len var16H) 1))
(assert (<= (str.len var16I) 1))
(assert (<= (str.len var16J) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= (str.++ preG (str.++ stem16 sufG)) (str.++ unch116G (str.++ ch16G unch216G))))
(assert (= (str.++ preH (str.++ stem16 sufH)) (str.++ unch116H (str.++ ch16H unch216H))))
(assert (= (str.++ preI (str.++ stem16 sufI)) (str.++ unch116I (str.++ ch16I unch216I))))
(assert (= (str.++ preJ (str.++ stem16 sufJ)) (str.++ unch116J (str.++ ch16J unch216J))))
(assert (= "bi3" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bo3am" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "boleOi" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= "bo3i" (str.++ unch116D (str.++ var16D unch216D))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (= (ite (= ch16G var16G) 0 1) sc16G))
(assert (= (ite (= ch16H var16H) 0 1) sc16H))
(assert (= (ite (= ch16I var16I) 0 1) sc16I))
(assert (= (ite (= ch16J var16J) 0 1) sc16J))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= sc16G 1))
(assert (<= sc16H 1))
(assert (<= sc16I 1))
(assert (<= sc16J 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (<= (str.len var17G) 1))
(assert (<= (str.len var17H) 1))
(assert (<= (str.len var17I) 1))
(assert (<= (str.len var17J) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= (str.++ preG (str.++ stem17 sufG)) (str.++ unch117G (str.++ ch17G unch217G))))
(assert (= (str.++ preH (str.++ stem17 sufH)) (str.++ unch117H (str.++ ch17H unch217H))))
(assert (= (str.++ preI (str.++ stem17 sufI)) (str.++ unch117I (str.++ ch17I unch217I))))
(assert (= (str.++ preJ (str.++ stem17 sufJ)) (str.++ unch117J (str.++ ch17J unch217J))))
(assert (= "riw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "rovam" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "rovoOi" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= "roOi" (str.++ unch117D (str.++ var17D unch217D))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (= (ite (= ch17G var17G) 0 1) sc17G))
(assert (= (ite (= ch17H var17H) 0 1) sc17H))
(assert (= (ite (= ch17I var17I) 0 1) sc17I))
(assert (= (ite (= ch17J var17J) 0 1) sc17J))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= sc17G 1))
(assert (<= sc17H 1))
(assert (<= sc17I 1))
(assert (<= sc17J 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (<= (str.len var18G) 1))
(assert (<= (str.len var18H) 1))
(assert (<= (str.len var18I) 1))
(assert (<= (str.len var18J) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= (str.++ preG (str.++ stem18 sufG)) (str.++ unch118G (str.++ ch18G unch218G))))
(assert (= (str.++ preH (str.++ stem18 sufH)) (str.++ unch118H (str.++ ch18H unch218H))))
(assert (= (str.++ preI (str.++ stem18 sufI)) (str.++ unch118I (str.++ ch18I unch218I))))
(assert (= (str.++ preJ (str.++ stem18 sufJ)) (str.++ unch118J (str.++ ch18J unch218J))))
(assert (= "stiw" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "stolam" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "stoloOi" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= "sto3i" (str.++ unch118D (str.++ var18D unch218D))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (= (ite (= ch18G var18G) 0 1) sc18G))
(assert (= (ite (= ch18H var18H) 0 1) sc18H))
(assert (= (ite (= ch18I var18I) 0 1) sc18I))
(assert (= (ite (= ch18J var18J) 0 1) sc18J))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= sc18G 1))
(assert (<= sc18H 1))
(assert (<= sc18I 1))
(assert (<= sc18J 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (<= (str.len var19G) 1))
(assert (<= (str.len var19H) 1))
(assert (<= (str.len var19I) 1))
(assert (<= (str.len var19J) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= (str.++ preG (str.++ stem19 sufG)) (str.++ unch119G (str.++ ch19G unch219G))))
(assert (= (str.++ preH (str.++ stem19 sufH)) (str.++ unch119H (str.++ ch19H unch219H))))
(assert (= (str.++ preI (str.++ stem19 sufI)) (str.++ unch119I (str.++ ch19I unch219I))))
(assert (= (str.++ preJ (str.++ stem19 sufJ)) (str.++ unch119J (str.++ ch19J unch219J))))
(assert (= "4id" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "4idam" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "4idoOi" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= "4idoOi" (str.++ unch119E (str.++ var19E unch219E))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (= (ite (= ch19G var19G) 0 1) sc19G))
(assert (= (ite (= ch19H var19H) 0 1) sc19H))
(assert (= (ite (= ch19I var19I) 0 1) sc19I))
(assert (= (ite (= ch19J var19J) 0 1) sc19J))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= sc19G 1))
(assert (<= sc19H 1))
(assert (<= sc19I 1))
(assert (<= sc19J 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (<= (str.len var20G) 1))
(assert (<= (str.len var20H) 1))
(assert (<= (str.len var20I) 1))
(assert (<= (str.len var20J) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= (str.++ preG (str.++ stem20 sufG)) (str.++ unch120G (str.++ ch20G unch220G))))
(assert (= (str.++ preH (str.++ stem20 sufH)) (str.++ unch120H (str.++ ch20H unch220H))))
(assert (= (str.++ preI (str.++ stem20 sufI)) (str.++ unch120I (str.++ ch20I unch220I))))
(assert (= (str.++ preJ (str.++ stem20 sufJ)) (str.++ unch120J (str.++ ch20J unch220J))))
(assert (= "3it" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "3otam" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "3otoOi" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= "3oZi" (str.++ unch120D (str.++ var20D unch220D))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (= (ite (= ch20G var20G) 0 1) sc20G))
(assert (= (ite (= ch20H var20H) 0 1) sc20H))
(assert (= (ite (= ch20I var20I) 0 1) sc20I))
(assert (= (ite (= ch20J var20J) 0 1) sc20J))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= sc20G 1))
(assert (<= sc20H 1))
(assert (<= sc20I 1))
(assert (<= sc20J 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (<= (str.len var21G) 1))
(assert (<= (str.len var21H) 1))
(assert (<= (str.len var21I) 1))
(assert (<= (str.len var21J) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= (str.++ preG (str.++ stem21 sufG)) (str.++ unch121G (str.++ ch21G unch221G))))
(assert (= (str.++ preH (str.++ stem21 sufH)) (str.++ unch121H (str.++ ch21H unch221H))))
(assert (= (str.++ preI (str.++ stem21 sufI)) (str.++ unch121I (str.++ ch21I unch221I))))
(assert (= (str.++ preJ (str.++ stem21 sufJ)) (str.++ unch121J (str.++ ch21J unch221J))))
(assert (= "mist" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "mostam" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "mostoOi" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= "mosZi" (str.++ unch121D (str.++ var21D unch221D))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (= (ite (= ch21G var21G) 0 1) sc21G))
(assert (= (ite (= ch21H var21H) 0 1) sc21H))
(assert (= (ite (= ch21I var21I) 0 1) sc21I))
(assert (= (ite (= ch21J var21J) 0 1) sc21J))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= sc21G 1))
(assert (<= sc21H 1))
(assert (<= sc21I 1))
(assert (<= sc21J 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (<= (str.len var22G) 1))
(assert (<= (str.len var22H) 1))
(assert (<= (str.len var22I) 1))
(assert (<= (str.len var22J) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= (str.++ preG (str.++ stem22 sufG)) (str.++ unch122G (str.++ ch22G unch222G))))
(assert (= (str.++ preH (str.++ stem22 sufH)) (str.++ unch122H (str.++ ch22H unch222H))))
(assert (= (str.++ preI (str.++ stem22 sufI)) (str.++ unch122I (str.++ ch22I unch222I))))
(assert (= (str.++ preJ (str.++ stem22 sufJ)) (str.++ unch122J (str.++ ch22J unch222J))))
(assert (= "veEir" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "veEoram" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "veEoroOi" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= "veEo9i" (str.++ unch122D (str.++ var22D unch222D))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (= (ite (= ch22G var22G) 0 1) sc22G))
(assert (= (ite (= ch22H var22H) 0 1) sc22H))
(assert (= (ite (= ch22I var22I) 0 1) sc22I))
(assert (= (ite (= ch22J var22J) 0 1) sc22J))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= sc22G 1))
(assert (<= sc22H 1))
(assert (<= sc22I 1))
(assert (<= sc22J 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (<= (str.len var23G) 1))
(assert (<= (str.len var23H) 1))
(assert (<= (str.len var23I) 1))
(assert (<= (str.len var23J) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= (str.++ preG (str.++ stem23 sufG)) (str.++ unch123G (str.++ ch23G unch223G))))
(assert (= (str.++ preH (str.++ stem23 sufH)) (str.++ unch123H (str.++ ch23H unch223H))))
(assert (= (str.++ preI (str.++ stem23 sufI)) (str.++ unch123I (str.++ ch23I unch223I))))
(assert (= (str.++ preJ (str.++ stem23 sufJ)) (str.++ unch123J (str.++ ch23J unch223J))))
(assert (= "Zilo" (str.++ unch123F (str.++ var23F unch223F))))
(assert (= "Zila" (str.++ unch123G (str.++ var23G unch223G))))
(assert (= "Zilu" (str.++ unch123H (str.++ var23H unch223H))))
(assert (= "Zi3i" (str.++ unch123I (str.++ var23I unch223I))))
(assert (= "Ziw" (str.++ unch123J (str.++ var23J unch223J))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (= (ite (= ch23G var23G) 0 1) sc23G))
(assert (= (ite (= ch23H var23H) 0 1) sc23H))
(assert (= (ite (= ch23I var23I) 0 1) sc23I))
(assert (= (ite (= ch23J var23J) 0 1) sc23J))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= sc23G 1))
(assert (<= sc23H 1))
(assert (<= sc23I 1))
(assert (<= sc23J 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (<= (str.len var24G) 1))
(assert (<= (str.len var24H) 1))
(assert (<= (str.len var24I) 1))
(assert (<= (str.len var24J) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= (str.++ preG (str.++ stem24 sufG)) (str.++ unch124G (str.++ ch24G unch224G))))
(assert (= (str.++ preH (str.++ stem24 sufH)) (str.++ unch124H (str.++ ch24H unch224H))))
(assert (= (str.++ preI (str.++ stem24 sufI)) (str.++ unch124I (str.++ ch24I unch224I))))
(assert (= (str.++ preJ (str.++ stem24 sufJ)) (str.++ unch124J (str.++ ch24J unch224J))))
(assert (= "koleso" (str.++ unch124F (str.++ var24F unch224F))))
(assert (= "kolesa" (str.++ unch124G (str.++ var24G unch224G))))
(assert (= "kolesu" (str.++ unch124H (str.++ var24H unch224H))))
(assert (= "kole6i" (str.++ unch124I (str.++ var24I unch224I))))
(assert (= "ko3is" (str.++ unch124J (str.++ var24J unch224J))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (= (ite (= ch24G var24G) 0 1) sc24G))
(assert (= (ite (= ch24H var24H) 0 1) sc24H))
(assert (= (ite (= ch24I var24I) 0 1) sc24I))
(assert (= (ite (= ch24J var24J) 0 1) sc24J))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= sc24G 1))
(assert (<= sc24H 1))
(assert (<= sc24I 1))
(assert (<= sc24J 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (<= (str.len var25G) 1))
(assert (<= (str.len var25H) 1))
(assert (<= (str.len var25I) 1))
(assert (<= (str.len var25J) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= (str.++ preG (str.++ stem25 sufG)) (str.++ unch125G (str.++ ch25G unch225G))))
(assert (= (str.++ preH (str.++ stem25 sufH)) (str.++ unch125H (str.++ ch25H unch225H))))
(assert (= (str.++ preI (str.++ stem25 sufI)) (str.++ unch125I (str.++ ch25I unch225I))))
(assert (= (str.++ preJ (str.++ stem25 sufJ)) (str.++ unch125J (str.++ ch25J unch225J))))
(assert (= "ozero" (str.++ unch125F (str.++ var25F unch225F))))
(assert (= "ozera" (str.++ unch125G (str.++ var25G unch225G))))
(assert (= "ozeru" (str.++ unch125H (str.++ var25H unch225H))))
(assert (= "oze9i" (str.++ unch125I (str.++ var25I unch225I))))
(assert (= "o1ir" (str.++ unch125J (str.++ var25J unch225J))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (= (ite (= ch25G var25G) 0 1) sc25G))
(assert (= (ite (= ch25H var25H) 0 1) sc25H))
(assert (= (ite (= ch25I var25I) 0 1) sc25I))
(assert (= (ite (= ch25J var25J) 0 1) sc25J))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= sc25G 1))
(assert (<= sc25H 1))
(assert (<= sc25I 1))
(assert (<= sc25J 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (<= (str.len var26G) 1))
(assert (<= (str.len var26H) 1))
(assert (<= (str.len var26I) 1))
(assert (<= (str.len var26J) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= (str.++ preG (str.++ stem26 sufG)) (str.++ unch126G (str.++ ch26G unch226G))))
(assert (= (str.++ preH (str.++ stem26 sufH)) (str.++ unch126H (str.++ ch26H unch226H))))
(assert (= (str.++ preI (str.++ stem26 sufI)) (str.++ unch126I (str.++ ch26I unch226I))))
(assert (= (str.++ preJ (str.++ stem26 sufJ)) (str.++ unch126J (str.++ ch26J unch226J))))
(assert (= "selo" (str.++ unch126F (str.++ var26F unch226F))))
(assert (= "sela" (str.++ unch126G (str.++ var26G unch226G))))
(assert (= "selu" (str.++ unch126H (str.++ var26H unch226H))))
(assert (= "se3i" (str.++ unch126I (str.++ var26I unch226I))))
(assert (= "6iw" (str.++ unch126J (str.++ var26J unch226J))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (= (ite (= ch26G var26G) 0 1) sc26G))
(assert (= (ite (= ch26H var26H) 0 1) sc26H))
(assert (= (ite (= ch26I var26I) 0 1) sc26I))
(assert (= (ite (= ch26J var26J) 0 1) sc26J))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= sc26G 1))
(assert (<= sc26H 1))
(assert (<= sc26I 1))
(assert (<= sc26J 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (<= (str.len var27G) 1))
(assert (<= (str.len var27H) 1))
(assert (<= (str.len var27I) 1))
(assert (<= (str.len var27J) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= (str.++ preG (str.++ stem27 sufG)) (str.++ unch127G (str.++ ch27G unch227G))))
(assert (= (str.++ preH (str.++ stem27 sufH)) (str.++ unch127H (str.++ ch27H unch227H))))
(assert (= (str.++ preI (str.++ stem27 sufI)) (str.++ unch127I (str.++ ch27I unch227I))))
(assert (= (str.++ preJ (str.++ stem27 sufJ)) (str.++ unch127J (str.++ ch27J unch227J))))
(assert (= "pole" (str.++ unch127F (str.++ var27F unch227F))))
(assert (= "po3a" (str.++ unch127G (str.++ var27G unch227G))))
(assert (= "po3u" (str.++ unch127H (str.++ var27H unch227H))))
(assert (= "po3i" (str.++ unch127I (str.++ var27I unch227I))))
(assert (= "pi3" (str.++ unch127J (str.++ var27J unch227J))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (= (ite (= ch27G var27G) 0 1) sc27G))
(assert (= (ite (= ch27H var27H) 0 1) sc27H))
(assert (= (ite (= ch27I var27I) 0 1) sc27I))
(assert (= (ite (= ch27J var27J) 0 1) sc27J))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= sc27G 1))
(assert (<= sc27H 1))
(assert (<= sc27I 1))
(assert (<= sc27J 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (<= (str.len var28G) 1))
(assert (<= (str.len var28H) 1))
(assert (<= (str.len var28I) 1))
(assert (<= (str.len var28J) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= (str.++ preG (str.++ stem28 sufG)) (str.++ unch128G (str.++ ch28G unch228G))))
(assert (= (str.++ preH (str.++ stem28 sufH)) (str.++ unch128H (str.++ ch28H unch228H))))
(assert (= (str.++ preI (str.++ stem28 sufI)) (str.++ unch128I (str.++ ch28I unch228I))))
(assert (= (str.++ preJ (str.++ stem28 sufJ)) (str.++ unch128J (str.++ ch28J unch228J))))
(assert (= "slovo" (str.++ unch128F (str.++ var28F unch228F))))
(assert (= "slova" (str.++ unch128G (str.++ var28G unch228G))))
(assert (= "slovu" (str.++ unch128H (str.++ var28H unch228H))))
(assert (= "sloOi" (str.++ unch128I (str.++ var28I unch228I))))
(assert (= "sliw" (str.++ unch128J (str.++ var28J unch228J))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (= (ite (= ch28G var28G) 0 1) sc28G))
(assert (= (ite (= ch28H var28H) 0 1) sc28H))
(assert (= (ite (= ch28I var28I) 0 1) sc28I))
(assert (= (ite (= ch28J var28J) 0 1) sc28J))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= sc28G 1))
(assert (<= sc28H 1))
(assert (<= sc28I 1))
(assert (<= sc28J 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (<= (str.len var29G) 1))
(assert (<= (str.len var29H) 1))
(assert (<= (str.len var29I) 1))
(assert (<= (str.len var29J) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= (str.++ preG (str.++ stem29 sufG)) (str.++ unch129G (str.++ ch29G unch229G))))
(assert (= (str.++ preH (str.++ stem29 sufH)) (str.++ unch129H (str.++ ch29H unch229H))))
(assert (= (str.++ preI (str.++ stem29 sufI)) (str.++ unch129I (str.++ ch29I unch229I))))
(assert (= (str.++ preJ (str.++ stem29 sufJ)) (str.++ unch129J (str.++ ch29J unch229J))))
(assert (= "more" (str.++ unch129F (str.++ var29F unch229F))))
(assert (= "mo9a" (str.++ unch129G (str.++ var29G unch229G))))
(assert (= "mo9u" (str.++ unch129H (str.++ var29H unch229H))))
(assert (= "mo9i" (str.++ unch129I (str.++ var29I unch229I))))
(assert (= "mi9" (str.++ unch129J (str.++ var29J unch229J))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (= (ite (= ch29G var29G) 0 1) sc29G))
(assert (= (ite (= ch29H var29H) 0 1) sc29H))
(assert (= (ite (= ch29I var29I) 0 1) sc29I))
(assert (= (ite (= ch29J var29J) 0 1) sc29J))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= sc29G 1))
(assert (<= sc29H 1))
(assert (<= sc29I 1))
(assert (<= sc29J 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      sc0I
      sc0J
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      sc1I
      sc1J
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      sc2I
      sc2J
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      sc3I
      sc3J
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      sc4I
      sc4J
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      sc5I
      sc5J
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H
      sc6I
      sc6J
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      sc7G
      sc7H
      sc7I
      sc7J
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      sc8G
      sc8H
      sc8I
      sc8J
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      sc9G
      sc9H
      sc9I
      sc9J
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      sc10G
      sc10H
      sc10I
      sc10J
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      sc11G
      sc11H
      sc11I
      sc11J
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      sc12G
      sc12H
      sc12I
      sc12J
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      sc13G
      sc13H
      sc13I
      sc13J
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      sc14G
      sc14H
      sc14I
      sc14J
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      sc15G
      sc15H
      sc15I
      sc15J
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      sc16G
      sc16H
      sc16I
      sc16J
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      sc17G
      sc17H
      sc17I
      sc17J
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      sc18G
      sc18H
      sc18I
      sc18J
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      sc19G
      sc19H
      sc19I
      sc19J
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      sc20G
      sc20H
      sc20I
      sc20J
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      sc21G
      sc21H
      sc21I
      sc21J
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      sc22G
      sc22H
      sc22I
      sc22J
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      sc23G
      sc23H
      sc23I
      sc23J
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      sc24G
      sc24H
      sc24I
      sc24J
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      sc25G
      sc25H
      sc25I
      sc25J
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      sc26G
      sc26H
      sc26I
      sc26J
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      sc27G
      sc27H
      sc27I
      sc27J
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      sc28G
      sc28H
      sc28I
      sc28J
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      sc29G
      sc29H
      sc29I
      sc29J)
   12))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun var0I () String)
(declare-fun var0J () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun unch20I () String)
(declare-fun ch0I () String)
(declare-fun unch10I () String)
(declare-fun sufI () String)
(declare-fun preI () String)
(declare-fun unch20J () String)
(declare-fun ch0J () String)
(declare-fun unch10J () String)
(declare-fun sufJ () String)
(declare-fun preJ () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun sc0I () Int)
(declare-fun sc0J () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun var1I () String)
(declare-fun var1J () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun unch21I () String)
(declare-fun ch1I () String)
(declare-fun unch11I () String)
(declare-fun unch21J () String)
(declare-fun ch1J () String)
(declare-fun unch11J () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun sc1I () Int)
(declare-fun sc1J () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun var2I () String)
(declare-fun var2J () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun unch22I () String)
(declare-fun ch2I () String)
(declare-fun unch12I () String)
(declare-fun unch22J () String)
(declare-fun ch2J () String)
(declare-fun unch12J () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun sc2I () Int)
(declare-fun sc2J () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun var3I () String)
(declare-fun var3J () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun unch23I () String)
(declare-fun ch3I () String)
(declare-fun unch13I () String)
(declare-fun unch23J () String)
(declare-fun ch3J () String)
(declare-fun unch13J () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun sc3I () Int)
(declare-fun sc3J () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun var4I () String)
(declare-fun var4J () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun unch24I () String)
(declare-fun ch4I () String)
(declare-fun unch14I () String)
(declare-fun unch24J () String)
(declare-fun ch4J () String)
(declare-fun unch14J () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun sc4I () Int)
(declare-fun sc4J () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun var5I () String)
(declare-fun var5J () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun unch25I () String)
(declare-fun ch5I () String)
(declare-fun unch15I () String)
(declare-fun unch25J () String)
(declare-fun ch5J () String)
(declare-fun unch15J () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun sc5I () Int)
(declare-fun sc5J () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun var6I () String)
(declare-fun var6J () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun unch26I () String)
(declare-fun ch6I () String)
(declare-fun unch16I () String)
(declare-fun unch26J () String)
(declare-fun ch6J () String)
(declare-fun unch16J () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(declare-fun sc6I () Int)
(declare-fun sc6J () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun var7G () String)
(declare-fun var7H () String)
(declare-fun var7I () String)
(declare-fun var7J () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun unch27G () String)
(declare-fun ch7G () String)
(declare-fun unch17G () String)
(declare-fun unch27H () String)
(declare-fun ch7H () String)
(declare-fun unch17H () String)
(declare-fun unch27I () String)
(declare-fun ch7I () String)
(declare-fun unch17I () String)
(declare-fun unch27J () String)
(declare-fun ch7J () String)
(declare-fun unch17J () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun sc7G () Int)
(declare-fun sc7H () Int)
(declare-fun sc7I () Int)
(declare-fun sc7J () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun var8G () String)
(declare-fun var8H () String)
(declare-fun var8I () String)
(declare-fun var8J () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun unch28G () String)
(declare-fun ch8G () String)
(declare-fun unch18G () String)
(declare-fun unch28H () String)
(declare-fun ch8H () String)
(declare-fun unch18H () String)
(declare-fun unch28I () String)
(declare-fun ch8I () String)
(declare-fun unch18I () String)
(declare-fun unch28J () String)
(declare-fun ch8J () String)
(declare-fun unch18J () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun sc8G () Int)
(declare-fun sc8H () Int)
(declare-fun sc8I () Int)
(declare-fun sc8J () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun var9G () String)
(declare-fun var9H () String)
(declare-fun var9I () String)
(declare-fun var9J () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun unch29G () String)
(declare-fun ch9G () String)
(declare-fun unch19G () String)
(declare-fun unch29H () String)
(declare-fun ch9H () String)
(declare-fun unch19H () String)
(declare-fun unch29I () String)
(declare-fun ch9I () String)
(declare-fun unch19I () String)
(declare-fun unch29J () String)
(declare-fun ch9J () String)
(declare-fun unch19J () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun sc9G () Int)
(declare-fun sc9H () Int)
(declare-fun sc9I () Int)
(declare-fun sc9J () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun var10G () String)
(declare-fun var10H () String)
(declare-fun var10I () String)
(declare-fun var10J () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun unch210G () String)
(declare-fun ch10G () String)
(declare-fun unch110G () String)
(declare-fun unch210H () String)
(declare-fun ch10H () String)
(declare-fun unch110H () String)
(declare-fun unch210I () String)
(declare-fun ch10I () String)
(declare-fun unch110I () String)
(declare-fun unch210J () String)
(declare-fun ch10J () String)
(declare-fun unch110J () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun sc10G () Int)
(declare-fun sc10H () Int)
(declare-fun sc10I () Int)
(declare-fun sc10J () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun var11G () String)
(declare-fun var11H () String)
(declare-fun var11I () String)
(declare-fun var11J () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun unch211G () String)
(declare-fun ch11G () String)
(declare-fun unch111G () String)
(declare-fun unch211H () String)
(declare-fun ch11H () String)
(declare-fun unch111H () String)
(declare-fun unch211I () String)
(declare-fun ch11I () String)
(declare-fun unch111I () String)
(declare-fun unch211J () String)
(declare-fun ch11J () String)
(declare-fun unch111J () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun sc11G () Int)
(declare-fun sc11H () Int)
(declare-fun sc11I () Int)
(declare-fun sc11J () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun var12G () String)
(declare-fun var12H () String)
(declare-fun var12I () String)
(declare-fun var12J () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun unch212G () String)
(declare-fun ch12G () String)
(declare-fun unch112G () String)
(declare-fun unch212H () String)
(declare-fun ch12H () String)
(declare-fun unch112H () String)
(declare-fun unch212I () String)
(declare-fun ch12I () String)
(declare-fun unch112I () String)
(declare-fun unch212J () String)
(declare-fun ch12J () String)
(declare-fun unch112J () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun sc12G () Int)
(declare-fun sc12H () Int)
(declare-fun sc12I () Int)
(declare-fun sc12J () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun var13G () String)
(declare-fun var13H () String)
(declare-fun var13I () String)
(declare-fun var13J () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun unch213G () String)
(declare-fun ch13G () String)
(declare-fun unch113G () String)
(declare-fun unch213H () String)
(declare-fun ch13H () String)
(declare-fun unch113H () String)
(declare-fun unch213I () String)
(declare-fun ch13I () String)
(declare-fun unch113I () String)
(declare-fun unch213J () String)
(declare-fun ch13J () String)
(declare-fun unch113J () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun sc13G () Int)
(declare-fun sc13H () Int)
(declare-fun sc13I () Int)
(declare-fun sc13J () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun var14G () String)
(declare-fun var14H () String)
(declare-fun var14I () String)
(declare-fun var14J () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun unch214G () String)
(declare-fun ch14G () String)
(declare-fun unch114G () String)
(declare-fun unch214H () String)
(declare-fun ch14H () String)
(declare-fun unch114H () String)
(declare-fun unch214I () String)
(declare-fun ch14I () String)
(declare-fun unch114I () String)
(declare-fun unch214J () String)
(declare-fun ch14J () String)
(declare-fun unch114J () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun sc14G () Int)
(declare-fun sc14H () Int)
(declare-fun sc14I () Int)
(declare-fun sc14J () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun var15G () String)
(declare-fun var15H () String)
(declare-fun var15I () String)
(declare-fun var15J () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun unch215G () String)
(declare-fun ch15G () String)
(declare-fun unch115G () String)
(declare-fun unch215H () String)
(declare-fun ch15H () String)
(declare-fun unch115H () String)
(declare-fun unch215I () String)
(declare-fun ch15I () String)
(declare-fun unch115I () String)
(declare-fun unch215J () String)
(declare-fun ch15J () String)
(declare-fun unch115J () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun sc15G () Int)
(declare-fun sc15H () Int)
(declare-fun sc15I () Int)
(declare-fun sc15J () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun var16G () String)
(declare-fun var16H () String)
(declare-fun var16I () String)
(declare-fun var16J () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun unch216G () String)
(declare-fun ch16G () String)
(declare-fun unch116G () String)
(declare-fun unch216H () String)
(declare-fun ch16H () String)
(declare-fun unch116H () String)
(declare-fun unch216I () String)
(declare-fun ch16I () String)
(declare-fun unch116I () String)
(declare-fun unch216J () String)
(declare-fun ch16J () String)
(declare-fun unch116J () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun sc16G () Int)
(declare-fun sc16H () Int)
(declare-fun sc16I () Int)
(declare-fun sc16J () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun var17G () String)
(declare-fun var17H () String)
(declare-fun var17I () String)
(declare-fun var17J () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun unch217G () String)
(declare-fun ch17G () String)
(declare-fun unch117G () String)
(declare-fun unch217H () String)
(declare-fun ch17H () String)
(declare-fun unch117H () String)
(declare-fun unch217I () String)
(declare-fun ch17I () String)
(declare-fun unch117I () String)
(declare-fun unch217J () String)
(declare-fun ch17J () String)
(declare-fun unch117J () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun sc17G () Int)
(declare-fun sc17H () Int)
(declare-fun sc17I () Int)
(declare-fun sc17J () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun var18G () String)
(declare-fun var18H () String)
(declare-fun var18I () String)
(declare-fun var18J () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun unch218G () String)
(declare-fun ch18G () String)
(declare-fun unch118G () String)
(declare-fun unch218H () String)
(declare-fun ch18H () String)
(declare-fun unch118H () String)
(declare-fun unch218I () String)
(declare-fun ch18I () String)
(declare-fun unch118I () String)
(declare-fun unch218J () String)
(declare-fun ch18J () String)
(declare-fun unch118J () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun sc18G () Int)
(declare-fun sc18H () Int)
(declare-fun sc18I () Int)
(declare-fun sc18J () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun var19G () String)
(declare-fun var19H () String)
(declare-fun var19I () String)
(declare-fun var19J () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun unch219G () String)
(declare-fun ch19G () String)
(declare-fun unch119G () String)
(declare-fun unch219H () String)
(declare-fun ch19H () String)
(declare-fun unch119H () String)
(declare-fun unch219I () String)
(declare-fun ch19I () String)
(declare-fun unch119I () String)
(declare-fun unch219J () String)
(declare-fun ch19J () String)
(declare-fun unch119J () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun sc19G () Int)
(declare-fun sc19H () Int)
(declare-fun sc19I () Int)
(declare-fun sc19J () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun var20G () String)
(declare-fun var20H () String)
(declare-fun var20I () String)
(declare-fun var20J () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun unch220G () String)
(declare-fun ch20G () String)
(declare-fun unch120G () String)
(declare-fun unch220H () String)
(declare-fun ch20H () String)
(declare-fun unch120H () String)
(declare-fun unch220I () String)
(declare-fun ch20I () String)
(declare-fun unch120I () String)
(declare-fun unch220J () String)
(declare-fun ch20J () String)
(declare-fun unch120J () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun sc20G () Int)
(declare-fun sc20H () Int)
(declare-fun sc20I () Int)
(declare-fun sc20J () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun var21G () String)
(declare-fun var21H () String)
(declare-fun var21I () String)
(declare-fun var21J () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun unch221G () String)
(declare-fun ch21G () String)
(declare-fun unch121G () String)
(declare-fun unch221H () String)
(declare-fun ch21H () String)
(declare-fun unch121H () String)
(declare-fun unch221I () String)
(declare-fun ch21I () String)
(declare-fun unch121I () String)
(declare-fun unch221J () String)
(declare-fun ch21J () String)
(declare-fun unch121J () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun sc21G () Int)
(declare-fun sc21H () Int)
(declare-fun sc21I () Int)
(declare-fun sc21J () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun var22G () String)
(declare-fun var22H () String)
(declare-fun var22I () String)
(declare-fun var22J () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun unch222G () String)
(declare-fun ch22G () String)
(declare-fun unch122G () String)
(declare-fun unch222H () String)
(declare-fun ch22H () String)
(declare-fun unch122H () String)
(declare-fun unch222I () String)
(declare-fun ch22I () String)
(declare-fun unch122I () String)
(declare-fun unch222J () String)
(declare-fun ch22J () String)
(declare-fun unch122J () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun sc22G () Int)
(declare-fun sc22H () Int)
(declare-fun sc22I () Int)
(declare-fun sc22J () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun var23G () String)
(declare-fun var23H () String)
(declare-fun var23I () String)
(declare-fun var23J () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun unch223G () String)
(declare-fun ch23G () String)
(declare-fun unch123G () String)
(declare-fun unch223H () String)
(declare-fun ch23H () String)
(declare-fun unch123H () String)
(declare-fun unch223I () String)
(declare-fun ch23I () String)
(declare-fun unch123I () String)
(declare-fun unch223J () String)
(declare-fun ch23J () String)
(declare-fun unch123J () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun sc23G () Int)
(declare-fun sc23H () Int)
(declare-fun sc23I () Int)
(declare-fun sc23J () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun var24G () String)
(declare-fun var24H () String)
(declare-fun var24I () String)
(declare-fun var24J () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun unch224G () String)
(declare-fun ch24G () String)
(declare-fun unch124G () String)
(declare-fun unch224H () String)
(declare-fun ch24H () String)
(declare-fun unch124H () String)
(declare-fun unch224I () String)
(declare-fun ch24I () String)
(declare-fun unch124I () String)
(declare-fun unch224J () String)
(declare-fun ch24J () String)
(declare-fun unch124J () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun sc24G () Int)
(declare-fun sc24H () Int)
(declare-fun sc24I () Int)
(declare-fun sc24J () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun var25G () String)
(declare-fun var25H () String)
(declare-fun var25I () String)
(declare-fun var25J () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun unch225G () String)
(declare-fun ch25G () String)
(declare-fun unch125G () String)
(declare-fun unch225H () String)
(declare-fun ch25H () String)
(declare-fun unch125H () String)
(declare-fun unch225I () String)
(declare-fun ch25I () String)
(declare-fun unch125I () String)
(declare-fun unch225J () String)
(declare-fun ch25J () String)
(declare-fun unch125J () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun sc25G () Int)
(declare-fun sc25H () Int)
(declare-fun sc25I () Int)
(declare-fun sc25J () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun var26G () String)
(declare-fun var26H () String)
(declare-fun var26I () String)
(declare-fun var26J () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun unch226G () String)
(declare-fun ch26G () String)
(declare-fun unch126G () String)
(declare-fun unch226H () String)
(declare-fun ch26H () String)
(declare-fun unch126H () String)
(declare-fun unch226I () String)
(declare-fun ch26I () String)
(declare-fun unch126I () String)
(declare-fun unch226J () String)
(declare-fun ch26J () String)
(declare-fun unch126J () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun sc26G () Int)
(declare-fun sc26H () Int)
(declare-fun sc26I () Int)
(declare-fun sc26J () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun var27G () String)
(declare-fun var27H () String)
(declare-fun var27I () String)
(declare-fun var27J () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun unch227G () String)
(declare-fun ch27G () String)
(declare-fun unch127G () String)
(declare-fun unch227H () String)
(declare-fun ch27H () String)
(declare-fun unch127H () String)
(declare-fun unch227I () String)
(declare-fun ch27I () String)
(declare-fun unch127I () String)
(declare-fun unch227J () String)
(declare-fun ch27J () String)
(declare-fun unch127J () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun sc27G () Int)
(declare-fun sc27H () Int)
(declare-fun sc27I () Int)
(declare-fun sc27J () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun var28G () String)
(declare-fun var28H () String)
(declare-fun var28I () String)
(declare-fun var28J () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun unch228G () String)
(declare-fun ch28G () String)
(declare-fun unch128G () String)
(declare-fun unch228H () String)
(declare-fun ch28H () String)
(declare-fun unch128H () String)
(declare-fun unch228I () String)
(declare-fun ch28I () String)
(declare-fun unch128I () String)
(declare-fun unch228J () String)
(declare-fun ch28J () String)
(declare-fun unch128J () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun sc28G () Int)
(declare-fun sc28H () Int)
(declare-fun sc28I () Int)
(declare-fun sc28J () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun var29G () String)
(declare-fun var29H () String)
(declare-fun var29I () String)
(declare-fun var29J () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun unch229G () String)
(declare-fun ch29G () String)
(declare-fun unch129G () String)
(declare-fun unch229H () String)
(declare-fun ch29H () String)
(declare-fun unch129H () String)
(declare-fun unch229I () String)
(declare-fun ch29I () String)
(declare-fun unch129I () String)
(declare-fun unch229J () String)
(declare-fun ch29J () String)
(declare-fun unch129J () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun sc29G () Int)
(declare-fun sc29H () Int)
(declare-fun sc29I () Int)
(declare-fun sc29J () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (<= (str.len var0I) 1))
(assert (<= (str.len var0J) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= (str.++ preI (str.++ stem0 sufI)) (str.++ unch10I (str.++ ch0I unch20I))))
(assert (= (str.++ preJ (str.++ stem0 sufJ)) (str.++ unch10J (str.++ ch0J unch20J))))
(assert (= "zub" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "zubam" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "zuboOi" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "zuXi" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (= (ite (= ch0I var0I) 0 1) sc0I))
(assert (= (ite (= ch0J var0J) 0 1) sc0J))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= sc0I 1))
(assert (<= sc0J 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (<= (str.len var1I) 1))
(assert (<= (str.len var1J) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= (str.++ preI (str.++ stem1 sufI)) (str.++ unch11I (str.++ ch1I unch21I))))
(assert (= (str.++ preJ (str.++ stem1 sufJ)) (str.++ unch11J (str.++ ch1J unch21J))))
(assert (= "sOit" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "sOitam" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "sOitoOi" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "sOiZi" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (= (ite (= ch1I var1I) 0 1) sc1I))
(assert (= (ite (= ch1J var1J) 0 1) sc1J))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= sc1I 1))
(assert (<= sc1J 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (<= (str.len var2I) 1))
(assert (<= (str.len var2J) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= (str.++ preI (str.++ stem2 sufI)) (str.++ unch12I (str.++ ch2I unch22I))))
(assert (= (str.++ preJ (str.++ stem2 sufJ)) (str.++ unch12J (str.++ ch2J unch22J))))
(assert (= "1aZ" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "1aZam" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "1ateOi" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "1ateOi" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (= (ite (= ch2I var2I) 0 1) sc2I))
(assert (= (ite (= ch2J var2J) 0 1) sc2J))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= sc2I 1))
(assert (<= sc2J 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (<= (str.len var3I) 1))
(assert (<= (str.len var3J) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= (str.++ preI (str.++ stem3 sufI)) (str.++ unch13I (str.++ ch3I unch23I))))
(assert (= (str.++ preJ (str.++ stem3 sufJ)) (str.++ unch13J (str.++ ch3J unch23J))))
(assert (= "ko2i3" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "koBe3am" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "koBeleOi" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "koBe3i" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (= (ite (= ch3I var3I) 0 1) sc3I))
(assert (= (ite (= ch3J var3J) 0 1) sc3J))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= sc3I 1))
(assert (<= sc3J 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (<= (str.len var4I) 1))
(assert (<= (str.len var4J) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= (str.++ preI (str.++ stem4 sufI)) (str.++ unch14I (str.++ ch4I unch24I))))
(assert (= (str.++ preJ (str.++ stem4 sufJ)) (str.++ unch14J (str.++ ch4J unch24J))))
(assert (= "zlo4ij" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "zlo4ijam" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "zlo4ijeOi" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "zlo4ijeOi" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (= (ite (= ch4I var4I) 0 1) sc4I))
(assert (= (ite (= ch4J var4J) 0 1) sc4J))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= sc4I 1))
(assert (<= sc4J 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (<= (str.len var5I) 1))
(assert (<= (str.len var5J) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= (str.++ preI (str.++ stem5 sufI)) (str.++ unch15I (str.++ ch5I unch25I))))
(assert (= (str.++ preJ (str.++ stem5 sufJ)) (str.++ unch15J (str.++ ch5J unch25J))))
(assert (= "5i6a7" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "5i6a7am" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "5i6aPeOi" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "5i6a7i" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (= (ite (= ch5I var5I) 0 1) sc5I))
(assert (= (ite (= ch5J var5J) 0 1) sc5J))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= sc5I 1))
(assert (<= sc5J 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (<= (str.len var6I) 1))
(assert (<= (str.len var6J) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= (str.++ preI (str.++ stem6 sufI)) (str.++ unch16I (str.++ ch6I unch26I))))
(assert (= (str.++ preJ (str.++ stem6 sufJ)) (str.++ unch16J (str.++ ch6J unch26J))))
(assert (= "korovaj" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "korovajam" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "korovajeOi" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "korovaji" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (= (ite (= ch6I var6I) 0 1) sc6I))
(assert (= (ite (= ch6J var6J) 0 1) sc6J))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (<= sc6I 1))
(assert (<= sc6J 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (<= (str.len var7G) 1))
(assert (<= (str.len var7H) 1))
(assert (<= (str.len var7I) 1))
(assert (<= (str.len var7J) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= (str.++ preG (str.++ stem7 sufG)) (str.++ unch17G (str.++ ch7G unch27G))))
(assert (= (str.++ preH (str.++ stem7 sufH)) (str.++ unch17H (str.++ ch7H unch27H))))
(assert (= (str.++ preI (str.++ stem7 sufI)) (str.++ unch17I (str.++ ch7I unch27I))))
(assert (= (str.++ preJ (str.++ stem7 sufJ)) (str.++ unch17J (str.++ ch7J unch27J))))
(assert (= "ka5i8" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "kame8am" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "kameneOi" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= "kame8i" (str.++ unch17D (str.++ var7D unch27D))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (= (ite (= ch7G var7G) 0 1) sc7G))
(assert (= (ite (= ch7H var7H) 0 1) sc7H))
(assert (= (ite (= ch7I var7I) 0 1) sc7I))
(assert (= (ite (= ch7J var7J) 0 1) sc7J))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= sc7G 1))
(assert (<= sc7H 1))
(assert (<= sc7I 1))
(assert (<= sc7J 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (<= (str.len var8G) 1))
(assert (<= (str.len var8H) 1))
(assert (<= (str.len var8I) 1))
(assert (<= (str.len var8J) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= (str.++ preG (str.++ stem8 sufG)) (str.++ unch18G (str.++ ch8G unch28G))))
(assert (= (str.++ preH (str.++ stem8 sufH)) (str.++ unch18H (str.++ ch8H unch28H))))
(assert (= (str.++ preI (str.++ stem8 sufI)) (str.++ unch18I (str.++ ch8I unch28I))))
(assert (= (str.++ preJ (str.++ stem8 sufJ)) (str.++ unch18J (str.++ ch8J unch28J))))
(assert (= "5i4" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "5i4am" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "5ideOi" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= "5i4i" (str.++ unch18D (str.++ var8D unch28D))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (= (ite (= ch8G var8G) 0 1) sc8G))
(assert (= (ite (= ch8H var8H) 0 1) sc8H))
(assert (= (ite (= ch8I var8I) 0 1) sc8I))
(assert (= (ite (= ch8J var8J) 0 1) sc8J))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= sc8G 1))
(assert (<= sc8H 1))
(assert (<= sc8I 1))
(assert (<= sc8J 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (<= (str.len var9G) 1))
(assert (<= (str.len var9H) 1))
(assert (<= (str.len var9I) 1))
(assert (<= (str.len var9J) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= (str.++ preG (str.++ stem9 sufG)) (str.++ unch19G (str.++ ch9G unch29G))))
(assert (= (str.++ preH (str.++ stem9 sufH)) (str.++ unch19H (str.++ ch9H unch29H))))
(assert (= (str.++ preI (str.++ stem9 sufI)) (str.++ unch19I (str.++ ch9I unch29I))))
(assert (= (str.++ preJ (str.++ stem9 sufJ)) (str.++ unch19J (str.++ ch9J unch29J))))
(assert (= "x3iw" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "x3ivam" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "x3ivoOi" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= "x3iOi" (str.++ unch19D (str.++ var9D unch29D))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (= (ite (= ch9G var9G) 0 1) sc9G))
(assert (= (ite (= ch9H var9H) 0 1) sc9H))
(assert (= (ite (= ch9I var9I) 0 1) sc9I))
(assert (= (ite (= ch9J var9J) 0 1) sc9J))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= sc9G 1))
(assert (<= sc9H 1))
(assert (<= sc9I 1))
(assert (<= sc9J 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (<= (str.len var10G) 1))
(assert (<= (str.len var10H) 1))
(assert (<= (str.len var10I) 1))
(assert (<= (str.len var10J) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= (str.++ preG (str.++ stem10 sufG)) (str.++ unch110G (str.++ ch10G unch210G))))
(assert (= (str.++ preH (str.++ stem10 sufH)) (str.++ unch110H (str.++ ch10H unch210H))))
(assert (= (str.++ preI (str.++ stem10 sufI)) (str.++ unch110I (str.++ ch10I unch210I))))
(assert (= (str.++ preJ (str.++ stem10 sufJ)) (str.++ unch110J (str.++ ch10J unch210J))))
(assert (= "holub" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "holubam" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "holuboOi" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= "holuXi" (str.++ unch110D (str.++ var10D unch210D))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (= (ite (= ch10G var10G) 0 1) sc10G))
(assert (= (ite (= ch10H var10H) 0 1) sc10H))
(assert (= (ite (= ch10I var10I) 0 1) sc10I))
(assert (= (ite (= ch10J var10J) 0 1) sc10J))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= sc10G 1))
(assert (<= sc10H 1))
(assert (<= sc10I 1))
(assert (<= sc10J 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (<= (str.len var11G) 1))
(assert (<= (str.len var11H) 1))
(assert (<= (str.len var11I) 1))
(assert (<= (str.len var11J) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= (str.++ preG (str.++ stem11 sufG)) (str.++ unch111G (str.++ ch11G unch211G))))
(assert (= (str.++ preH (str.++ stem11 sufH)) (str.++ unch111H (str.++ ch11H unch211H))))
(assert (= (str.++ preI (str.++ stem11 sufI)) (str.++ unch111I (str.++ ch11I unch211I))))
(assert (= (str.++ preJ (str.++ stem11 sufJ)) (str.++ unch111J (str.++ ch11J unch211J))))
(assert (= "6in" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "6inam" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "6inoOi" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= "6i8i" (str.++ unch111D (str.++ var11D unch211D))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (= (ite (= ch11G var11G) 0 1) sc11G))
(assert (= (ite (= ch11H var11H) 0 1) sc11H))
(assert (= (ite (= ch11I var11I) 0 1) sc11I))
(assert (= (ite (= ch11J var11J) 0 1) sc11J))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= sc11G 1))
(assert (<= sc11H 1))
(assert (<= sc11I 1))
(assert (<= sc11J 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (<= (str.len var12G) 1))
(assert (<= (str.len var12H) 1))
(assert (<= (str.len var12I) 1))
(assert (<= (str.len var12J) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= (str.++ preG (str.++ stem12 sufG)) (str.++ unch112G (str.++ ch12G unch212G))))
(assert (= (str.++ preH (str.++ stem12 sufH)) (str.++ unch112H (str.++ ch12H unch212H))))
(assert (= (str.++ preI (str.++ stem12 sufI)) (str.++ unch112I (str.++ ch12I unch212I))))
(assert (= (str.++ preJ (str.++ stem12 sufJ)) (str.++ unch112J (str.++ ch12J unch212J))))
(assert (= "leXi4" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "lebe4am" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "lebedeOi" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= "lebe4i" (str.++ unch112D (str.++ var12D unch212D))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (= (ite (= ch12G var12G) 0 1) sc12G))
(assert (= (ite (= ch12H var12H) 0 1) sc12H))
(assert (= (ite (= ch12I var12I) 0 1) sc12I))
(assert (= (ite (= ch12J var12J) 0 1) sc12J))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= sc12G 1))
(assert (<= sc12H 1))
(assert (<= sc12I 1))
(assert (<= sc12J 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (<= (str.len var13G) 1))
(assert (<= (str.len var13H) 1))
(assert (<= (str.len var13I) 1))
(assert (<= (str.len var13J) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= (str.++ preG (str.++ stem13 sufG)) (str.++ unch113G (str.++ ch13G unch213G))))
(assert (= (str.++ preH (str.++ stem13 sufH)) (str.++ unch113H (str.++ ch13H unch213H))))
(assert (= (str.++ preI (str.++ stem13 sufI)) (str.++ unch113I (str.++ ch13I unch213I))))
(assert (= (str.++ preJ (str.++ stem13 sufJ)) (str.++ unch113J (str.++ ch13J unch213J))))
(assert (= "su6id" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "su6idam" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "su6idoOi" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= "su6idoOi" (str.++ unch113E (str.++ var13E unch213E))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (= (ite (= ch13G var13G) 0 1) sc13G))
(assert (= (ite (= ch13H var13H) 0 1) sc13H))
(assert (= (ite (= ch13I var13I) 0 1) sc13I))
(assert (= (ite (= ch13J var13J) 0 1) sc13J))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= sc13G 1))
(assert (<= sc13H 1))
(assert (<= sc13I 1))
(assert (<= sc13J 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (<= (str.len var14G) 1))
(assert (<= (str.len var14H) 1))
(assert (<= (str.len var14I) 1))
(assert (<= (str.len var14J) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= (str.++ preG (str.++ stem14 sufG)) (str.++ unch114G (str.++ ch14G unch214G))))
(assert (= (str.++ preH (str.++ stem14 sufH)) (str.++ unch114H (str.++ ch14H unch214H))))
(assert (= (str.++ preI (str.++ stem14 sufI)) (str.++ unch114I (str.++ ch14I unch214I))))
(assert (= (str.++ preJ (str.++ stem14 sufJ)) (str.++ unch114J (str.++ ch14J unch214J))))
(assert (= "EoloOik" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "EoloOikam" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "EoloOikoOi" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= "EoloOikoOi" (str.++ unch114E (str.++ var14E unch214E))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (= (ite (= ch14G var14G) 0 1) sc14G))
(assert (= (ite (= ch14H var14H) 0 1) sc14H))
(assert (= (ite (= ch14I var14I) 0 1) sc14I))
(assert (= (ite (= ch14J var14J) 0 1) sc14J))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= sc14G 1))
(assert (<= sc14H 1))
(assert (<= sc14I 1))
(assert (<= sc14J 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (<= (str.len var15G) 1))
(assert (<= (str.len var15H) 1))
(assert (<= (str.len var15I) 1))
(assert (<= (str.len var15J) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= (str.++ preG (str.++ stem15 sufG)) (str.++ unch115G (str.++ ch15G unch215G))))
(assert (= (str.++ preH (str.++ stem15 sufH)) (str.++ unch115H (str.++ ch15H unch215H))))
(assert (= (str.++ preI (str.++ stem15 sufI)) (str.++ unch115I (str.++ ch15I unch215I))))
(assert (= (str.++ preJ (str.++ stem15 sufJ)) (str.++ unch115J (str.++ ch15J unch215J))))
(assert (= "3id" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "ledam" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "ledoOi" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= "le4i" (str.++ unch115D (str.++ var15D unch215D))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (= (ite (= ch15G var15G) 0 1) sc15G))
(assert (= (ite (= ch15H var15H) 0 1) sc15H))
(assert (= (ite (= ch15I var15I) 0 1) sc15I))
(assert (= (ite (= ch15J var15J) 0 1) sc15J))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= sc15G 1))
(assert (<= sc15H 1))
(assert (<= sc15I 1))
(assert (<= sc15J 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (<= (str.len var16G) 1))
(assert (<= (str.len var16H) 1))
(assert (<= (str.len var16I) 1))
(assert (<= (str.len var16J) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= (str.++ preG (str.++ stem16 sufG)) (str.++ unch116G (str.++ ch16G unch216G))))
(assert (= (str.++ preH (str.++ stem16 sufH)) (str.++ unch116H (str.++ ch16H unch216H))))
(assert (= (str.++ preI (str.++ stem16 sufI)) (str.++ unch116I (str.++ ch16I unch216I))))
(assert (= (str.++ preJ (str.++ stem16 sufJ)) (str.++ unch116J (str.++ ch16J unch216J))))
(assert (= "bi3" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bo3am" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "boleOi" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= "bo3i" (str.++ unch116D (str.++ var16D unch216D))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (= (ite (= ch16G var16G) 0 1) sc16G))
(assert (= (ite (= ch16H var16H) 0 1) sc16H))
(assert (= (ite (= ch16I var16I) 0 1) sc16I))
(assert (= (ite (= ch16J var16J) 0 1) sc16J))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= sc16G 1))
(assert (<= sc16H 1))
(assert (<= sc16I 1))
(assert (<= sc16J 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (<= (str.len var17G) 1))
(assert (<= (str.len var17H) 1))
(assert (<= (str.len var17I) 1))
(assert (<= (str.len var17J) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= (str.++ preG (str.++ stem17 sufG)) (str.++ unch117G (str.++ ch17G unch217G))))
(assert (= (str.++ preH (str.++ stem17 sufH)) (str.++ unch117H (str.++ ch17H unch217H))))
(assert (= (str.++ preI (str.++ stem17 sufI)) (str.++ unch117I (str.++ ch17I unch217I))))
(assert (= (str.++ preJ (str.++ stem17 sufJ)) (str.++ unch117J (str.++ ch17J unch217J))))
(assert (= "riw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "rovam" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "rovoOi" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= "roOi" (str.++ unch117D (str.++ var17D unch217D))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (= (ite (= ch17G var17G) 0 1) sc17G))
(assert (= (ite (= ch17H var17H) 0 1) sc17H))
(assert (= (ite (= ch17I var17I) 0 1) sc17I))
(assert (= (ite (= ch17J var17J) 0 1) sc17J))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= sc17G 1))
(assert (<= sc17H 1))
(assert (<= sc17I 1))
(assert (<= sc17J 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (<= (str.len var18G) 1))
(assert (<= (str.len var18H) 1))
(assert (<= (str.len var18I) 1))
(assert (<= (str.len var18J) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= (str.++ preG (str.++ stem18 sufG)) (str.++ unch118G (str.++ ch18G unch218G))))
(assert (= (str.++ preH (str.++ stem18 sufH)) (str.++ unch118H (str.++ ch18H unch218H))))
(assert (= (str.++ preI (str.++ stem18 sufI)) (str.++ unch118I (str.++ ch18I unch218I))))
(assert (= (str.++ preJ (str.++ stem18 sufJ)) (str.++ unch118J (str.++ ch18J unch218J))))
(assert (= "stiw" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "stolam" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "stoloOi" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= "sto3i" (str.++ unch118D (str.++ var18D unch218D))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (= (ite (= ch18G var18G) 0 1) sc18G))
(assert (= (ite (= ch18H var18H) 0 1) sc18H))
(assert (= (ite (= ch18I var18I) 0 1) sc18I))
(assert (= (ite (= ch18J var18J) 0 1) sc18J))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= sc18G 1))
(assert (<= sc18H 1))
(assert (<= sc18I 1))
(assert (<= sc18J 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (<= (str.len var19G) 1))
(assert (<= (str.len var19H) 1))
(assert (<= (str.len var19I) 1))
(assert (<= (str.len var19J) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= (str.++ preG (str.++ stem19 sufG)) (str.++ unch119G (str.++ ch19G unch219G))))
(assert (= (str.++ preH (str.++ stem19 sufH)) (str.++ unch119H (str.++ ch19H unch219H))))
(assert (= (str.++ preI (str.++ stem19 sufI)) (str.++ unch119I (str.++ ch19I unch219I))))
(assert (= (str.++ preJ (str.++ stem19 sufJ)) (str.++ unch119J (str.++ ch19J unch219J))))
(assert (= "4id" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "4idam" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "4idoOi" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= "4idoOi" (str.++ unch119E (str.++ var19E unch219E))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (= (ite (= ch19G var19G) 0 1) sc19G))
(assert (= (ite (= ch19H var19H) 0 1) sc19H))
(assert (= (ite (= ch19I var19I) 0 1) sc19I))
(assert (= (ite (= ch19J var19J) 0 1) sc19J))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= sc19G 1))
(assert (<= sc19H 1))
(assert (<= sc19I 1))
(assert (<= sc19J 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (<= (str.len var20G) 1))
(assert (<= (str.len var20H) 1))
(assert (<= (str.len var20I) 1))
(assert (<= (str.len var20J) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= (str.++ preG (str.++ stem20 sufG)) (str.++ unch120G (str.++ ch20G unch220G))))
(assert (= (str.++ preH (str.++ stem20 sufH)) (str.++ unch120H (str.++ ch20H unch220H))))
(assert (= (str.++ preI (str.++ stem20 sufI)) (str.++ unch120I (str.++ ch20I unch220I))))
(assert (= (str.++ preJ (str.++ stem20 sufJ)) (str.++ unch120J (str.++ ch20J unch220J))))
(assert (= "3it" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "3otam" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "3otoOi" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= "3oZi" (str.++ unch120D (str.++ var20D unch220D))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (= (ite (= ch20G var20G) 0 1) sc20G))
(assert (= (ite (= ch20H var20H) 0 1) sc20H))
(assert (= (ite (= ch20I var20I) 0 1) sc20I))
(assert (= (ite (= ch20J var20J) 0 1) sc20J))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= sc20G 1))
(assert (<= sc20H 1))
(assert (<= sc20I 1))
(assert (<= sc20J 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (<= (str.len var21G) 1))
(assert (<= (str.len var21H) 1))
(assert (<= (str.len var21I) 1))
(assert (<= (str.len var21J) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= (str.++ preG (str.++ stem21 sufG)) (str.++ unch121G (str.++ ch21G unch221G))))
(assert (= (str.++ preH (str.++ stem21 sufH)) (str.++ unch121H (str.++ ch21H unch221H))))
(assert (= (str.++ preI (str.++ stem21 sufI)) (str.++ unch121I (str.++ ch21I unch221I))))
(assert (= (str.++ preJ (str.++ stem21 sufJ)) (str.++ unch121J (str.++ ch21J unch221J))))
(assert (= "mist" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "mostam" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "mostoOi" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= "mosZi" (str.++ unch121D (str.++ var21D unch221D))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (= (ite (= ch21G var21G) 0 1) sc21G))
(assert (= (ite (= ch21H var21H) 0 1) sc21H))
(assert (= (ite (= ch21I var21I) 0 1) sc21I))
(assert (= (ite (= ch21J var21J) 0 1) sc21J))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= sc21G 1))
(assert (<= sc21H 1))
(assert (<= sc21I 1))
(assert (<= sc21J 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (<= (str.len var22G) 1))
(assert (<= (str.len var22H) 1))
(assert (<= (str.len var22I) 1))
(assert (<= (str.len var22J) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= (str.++ preG (str.++ stem22 sufG)) (str.++ unch122G (str.++ ch22G unch222G))))
(assert (= (str.++ preH (str.++ stem22 sufH)) (str.++ unch122H (str.++ ch22H unch222H))))
(assert (= (str.++ preI (str.++ stem22 sufI)) (str.++ unch122I (str.++ ch22I unch222I))))
(assert (= (str.++ preJ (str.++ stem22 sufJ)) (str.++ unch122J (str.++ ch22J unch222J))))
(assert (= "veEir" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "veEoram" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "veEoroOi" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= "veEo9i" (str.++ unch122D (str.++ var22D unch222D))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (= (ite (= ch22G var22G) 0 1) sc22G))
(assert (= (ite (= ch22H var22H) 0 1) sc22H))
(assert (= (ite (= ch22I var22I) 0 1) sc22I))
(assert (= (ite (= ch22J var22J) 0 1) sc22J))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= sc22G 1))
(assert (<= sc22H 1))
(assert (<= sc22I 1))
(assert (<= sc22J 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (<= (str.len var23G) 1))
(assert (<= (str.len var23H) 1))
(assert (<= (str.len var23I) 1))
(assert (<= (str.len var23J) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= (str.++ preG (str.++ stem23 sufG)) (str.++ unch123G (str.++ ch23G unch223G))))
(assert (= (str.++ preH (str.++ stem23 sufH)) (str.++ unch123H (str.++ ch23H unch223H))))
(assert (= (str.++ preI (str.++ stem23 sufI)) (str.++ unch123I (str.++ ch23I unch223I))))
(assert (= (str.++ preJ (str.++ stem23 sufJ)) (str.++ unch123J (str.++ ch23J unch223J))))
(assert (= "Zilo" (str.++ unch123F (str.++ var23F unch223F))))
(assert (= "Zila" (str.++ unch123G (str.++ var23G unch223G))))
(assert (= "Zilu" (str.++ unch123H (str.++ var23H unch223H))))
(assert (= "Zi3i" (str.++ unch123I (str.++ var23I unch223I))))
(assert (= "Ziw" (str.++ unch123J (str.++ var23J unch223J))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (= (ite (= ch23G var23G) 0 1) sc23G))
(assert (= (ite (= ch23H var23H) 0 1) sc23H))
(assert (= (ite (= ch23I var23I) 0 1) sc23I))
(assert (= (ite (= ch23J var23J) 0 1) sc23J))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= sc23G 1))
(assert (<= sc23H 1))
(assert (<= sc23I 1))
(assert (<= sc23J 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (<= (str.len var24G) 1))
(assert (<= (str.len var24H) 1))
(assert (<= (str.len var24I) 1))
(assert (<= (str.len var24J) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= (str.++ preG (str.++ stem24 sufG)) (str.++ unch124G (str.++ ch24G unch224G))))
(assert (= (str.++ preH (str.++ stem24 sufH)) (str.++ unch124H (str.++ ch24H unch224H))))
(assert (= (str.++ preI (str.++ stem24 sufI)) (str.++ unch124I (str.++ ch24I unch224I))))
(assert (= (str.++ preJ (str.++ stem24 sufJ)) (str.++ unch124J (str.++ ch24J unch224J))))
(assert (= "koleso" (str.++ unch124F (str.++ var24F unch224F))))
(assert (= "kolesa" (str.++ unch124G (str.++ var24G unch224G))))
(assert (= "kolesu" (str.++ unch124H (str.++ var24H unch224H))))
(assert (= "kole6i" (str.++ unch124I (str.++ var24I unch224I))))
(assert (= "ko3is" (str.++ unch124J (str.++ var24J unch224J))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (= (ite (= ch24G var24G) 0 1) sc24G))
(assert (= (ite (= ch24H var24H) 0 1) sc24H))
(assert (= (ite (= ch24I var24I) 0 1) sc24I))
(assert (= (ite (= ch24J var24J) 0 1) sc24J))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= sc24G 1))
(assert (<= sc24H 1))
(assert (<= sc24I 1))
(assert (<= sc24J 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (<= (str.len var25G) 1))
(assert (<= (str.len var25H) 1))
(assert (<= (str.len var25I) 1))
(assert (<= (str.len var25J) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= (str.++ preG (str.++ stem25 sufG)) (str.++ unch125G (str.++ ch25G unch225G))))
(assert (= (str.++ preH (str.++ stem25 sufH)) (str.++ unch125H (str.++ ch25H unch225H))))
(assert (= (str.++ preI (str.++ stem25 sufI)) (str.++ unch125I (str.++ ch25I unch225I))))
(assert (= (str.++ preJ (str.++ stem25 sufJ)) (str.++ unch125J (str.++ ch25J unch225J))))
(assert (= "ozero" (str.++ unch125F (str.++ var25F unch225F))))
(assert (= "ozera" (str.++ unch125G (str.++ var25G unch225G))))
(assert (= "ozeru" (str.++ unch125H (str.++ var25H unch225H))))
(assert (= "oze9i" (str.++ unch125I (str.++ var25I unch225I))))
(assert (= "o1ir" (str.++ unch125J (str.++ var25J unch225J))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (= (ite (= ch25G var25G) 0 1) sc25G))
(assert (= (ite (= ch25H var25H) 0 1) sc25H))
(assert (= (ite (= ch25I var25I) 0 1) sc25I))
(assert (= (ite (= ch25J var25J) 0 1) sc25J))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= sc25G 1))
(assert (<= sc25H 1))
(assert (<= sc25I 1))
(assert (<= sc25J 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (<= (str.len var26G) 1))
(assert (<= (str.len var26H) 1))
(assert (<= (str.len var26I) 1))
(assert (<= (str.len var26J) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= (str.++ preG (str.++ stem26 sufG)) (str.++ unch126G (str.++ ch26G unch226G))))
(assert (= (str.++ preH (str.++ stem26 sufH)) (str.++ unch126H (str.++ ch26H unch226H))))
(assert (= (str.++ preI (str.++ stem26 sufI)) (str.++ unch126I (str.++ ch26I unch226I))))
(assert (= (str.++ preJ (str.++ stem26 sufJ)) (str.++ unch126J (str.++ ch26J unch226J))))
(assert (= "selo" (str.++ unch126F (str.++ var26F unch226F))))
(assert (= "sela" (str.++ unch126G (str.++ var26G unch226G))))
(assert (= "selu" (str.++ unch126H (str.++ var26H unch226H))))
(assert (= "se3i" (str.++ unch126I (str.++ var26I unch226I))))
(assert (= "6iw" (str.++ unch126J (str.++ var26J unch226J))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (= (ite (= ch26G var26G) 0 1) sc26G))
(assert (= (ite (= ch26H var26H) 0 1) sc26H))
(assert (= (ite (= ch26I var26I) 0 1) sc26I))
(assert (= (ite (= ch26J var26J) 0 1) sc26J))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= sc26G 1))
(assert (<= sc26H 1))
(assert (<= sc26I 1))
(assert (<= sc26J 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (<= (str.len var27G) 1))
(assert (<= (str.len var27H) 1))
(assert (<= (str.len var27I) 1))
(assert (<= (str.len var27J) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= (str.++ preG (str.++ stem27 sufG)) (str.++ unch127G (str.++ ch27G unch227G))))
(assert (= (str.++ preH (str.++ stem27 sufH)) (str.++ unch127H (str.++ ch27H unch227H))))
(assert (= (str.++ preI (str.++ stem27 sufI)) (str.++ unch127I (str.++ ch27I unch227I))))
(assert (= (str.++ preJ (str.++ stem27 sufJ)) (str.++ unch127J (str.++ ch27J unch227J))))
(assert (= "pole" (str.++ unch127F (str.++ var27F unch227F))))
(assert (= "po3a" (str.++ unch127G (str.++ var27G unch227G))))
(assert (= "po3u" (str.++ unch127H (str.++ var27H unch227H))))
(assert (= "po3i" (str.++ unch127I (str.++ var27I unch227I))))
(assert (= "pi3" (str.++ unch127J (str.++ var27J unch227J))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (= (ite (= ch27G var27G) 0 1) sc27G))
(assert (= (ite (= ch27H var27H) 0 1) sc27H))
(assert (= (ite (= ch27I var27I) 0 1) sc27I))
(assert (= (ite (= ch27J var27J) 0 1) sc27J))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= sc27G 1))
(assert (<= sc27H 1))
(assert (<= sc27I 1))
(assert (<= sc27J 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (<= (str.len var28G) 1))
(assert (<= (str.len var28H) 1))
(assert (<= (str.len var28I) 1))
(assert (<= (str.len var28J) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= (str.++ preG (str.++ stem28 sufG)) (str.++ unch128G (str.++ ch28G unch228G))))
(assert (= (str.++ preH (str.++ stem28 sufH)) (str.++ unch128H (str.++ ch28H unch228H))))
(assert (= (str.++ preI (str.++ stem28 sufI)) (str.++ unch128I (str.++ ch28I unch228I))))
(assert (= (str.++ preJ (str.++ stem28 sufJ)) (str.++ unch128J (str.++ ch28J unch228J))))
(assert (= "slovo" (str.++ unch128F (str.++ var28F unch228F))))
(assert (= "slova" (str.++ unch128G (str.++ var28G unch228G))))
(assert (= "slovu" (str.++ unch128H (str.++ var28H unch228H))))
(assert (= "sloOi" (str.++ unch128I (str.++ var28I unch228I))))
(assert (= "sliw" (str.++ unch128J (str.++ var28J unch228J))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (= (ite (= ch28G var28G) 0 1) sc28G))
(assert (= (ite (= ch28H var28H) 0 1) sc28H))
(assert (= (ite (= ch28I var28I) 0 1) sc28I))
(assert (= (ite (= ch28J var28J) 0 1) sc28J))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= sc28G 1))
(assert (<= sc28H 1))
(assert (<= sc28I 1))
(assert (<= sc28J 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (<= (str.len var29G) 1))
(assert (<= (str.len var29H) 1))
(assert (<= (str.len var29I) 1))
(assert (<= (str.len var29J) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= (str.++ preG (str.++ stem29 sufG)) (str.++ unch129G (str.++ ch29G unch229G))))
(assert (= (str.++ preH (str.++ stem29 sufH)) (str.++ unch129H (str.++ ch29H unch229H))))
(assert (= (str.++ preI (str.++ stem29 sufI)) (str.++ unch129I (str.++ ch29I unch229I))))
(assert (= (str.++ preJ (str.++ stem29 sufJ)) (str.++ unch129J (str.++ ch29J unch229J))))
(assert (= "more" (str.++ unch129F (str.++ var29F unch229F))))
(assert (= "mo9a" (str.++ unch129G (str.++ var29G unch229G))))
(assert (= "mo9u" (str.++ unch129H (str.++ var29H unch229H))))
(assert (= "mo9i" (str.++ unch129I (str.++ var29I unch229I))))
(assert (= "mi9" (str.++ unch129J (str.++ var29J unch229J))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (= (ite (= ch29G var29G) 0 1) sc29G))
(assert (= (ite (= ch29H var29H) 0 1) sc29H))
(assert (= (ite (= ch29I var29I) 0 1) sc29I))
(assert (= (ite (= ch29J var29J) 0 1) sc29J))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= sc29G 1))
(assert (<= sc29H 1))
(assert (<= sc29I 1))
(assert (<= sc29J 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      sc0I
      sc0J
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      sc1I
      sc1J
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      sc2I
      sc2J
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      sc3I
      sc3J
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      sc4I
      sc4J
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      sc5I
      sc5J
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H
      sc6I
      sc6J
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      sc7G
      sc7H
      sc7I
      sc7J
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      sc8G
      sc8H
      sc8I
      sc8J
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      sc9G
      sc9H
      sc9I
      sc9J
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      sc10G
      sc10H
      sc10I
      sc10J
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      sc11G
      sc11H
      sc11I
      sc11J
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      sc12G
      sc12H
      sc12I
      sc12J
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      sc13G
      sc13H
      sc13I
      sc13J
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      sc14G
      sc14H
      sc14I
      sc14J
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      sc15G
      sc15H
      sc15I
      sc15J
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      sc16G
      sc16H
      sc16I
      sc16J
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      sc17G
      sc17H
      sc17I
      sc17J
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      sc18G
      sc18H
      sc18I
      sc18J
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      sc19G
      sc19H
      sc19I
      sc19J
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      sc20G
      sc20H
      sc20I
      sc20J
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      sc21G
      sc21H
      sc21I
      sc21J
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      sc22G
      sc22H
      sc22I
      sc22J
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      sc23G
      sc23H
      sc23I
      sc23J
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      sc24G
      sc24H
      sc24I
      sc24J
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      sc25G
      sc25H
      sc25I
      sc25J
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      sc26G
      sc26H
      sc26I
      sc26J
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      sc27G
      sc27H
      sc27I
      sc27J
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      sc28G
      sc28H
      sc28I
      sc28J
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      sc29G
      sc29H
      sc29I
      sc29J)
   13))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun var0I () String)
(declare-fun var0J () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun unch20I () String)
(declare-fun ch0I () String)
(declare-fun unch10I () String)
(declare-fun sufI () String)
(declare-fun preI () String)
(declare-fun unch20J () String)
(declare-fun ch0J () String)
(declare-fun unch10J () String)
(declare-fun sufJ () String)
(declare-fun preJ () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun sc0I () Int)
(declare-fun sc0J () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun var1I () String)
(declare-fun var1J () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun unch21I () String)
(declare-fun ch1I () String)
(declare-fun unch11I () String)
(declare-fun unch21J () String)
(declare-fun ch1J () String)
(declare-fun unch11J () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun sc1I () Int)
(declare-fun sc1J () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun var2I () String)
(declare-fun var2J () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun unch22I () String)
(declare-fun ch2I () String)
(declare-fun unch12I () String)
(declare-fun unch22J () String)
(declare-fun ch2J () String)
(declare-fun unch12J () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun sc2I () Int)
(declare-fun sc2J () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun var3I () String)
(declare-fun var3J () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun unch23I () String)
(declare-fun ch3I () String)
(declare-fun unch13I () String)
(declare-fun unch23J () String)
(declare-fun ch3J () String)
(declare-fun unch13J () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun sc3I () Int)
(declare-fun sc3J () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun var4I () String)
(declare-fun var4J () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun unch24I () String)
(declare-fun ch4I () String)
(declare-fun unch14I () String)
(declare-fun unch24J () String)
(declare-fun ch4J () String)
(declare-fun unch14J () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun sc4I () Int)
(declare-fun sc4J () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun var5I () String)
(declare-fun var5J () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun unch25I () String)
(declare-fun ch5I () String)
(declare-fun unch15I () String)
(declare-fun unch25J () String)
(declare-fun ch5J () String)
(declare-fun unch15J () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun sc5I () Int)
(declare-fun sc5J () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun var6I () String)
(declare-fun var6J () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun unch26I () String)
(declare-fun ch6I () String)
(declare-fun unch16I () String)
(declare-fun unch26J () String)
(declare-fun ch6J () String)
(declare-fun unch16J () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(declare-fun sc6I () Int)
(declare-fun sc6J () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun var7G () String)
(declare-fun var7H () String)
(declare-fun var7I () String)
(declare-fun var7J () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun unch27G () String)
(declare-fun ch7G () String)
(declare-fun unch17G () String)
(declare-fun unch27H () String)
(declare-fun ch7H () String)
(declare-fun unch17H () String)
(declare-fun unch27I () String)
(declare-fun ch7I () String)
(declare-fun unch17I () String)
(declare-fun unch27J () String)
(declare-fun ch7J () String)
(declare-fun unch17J () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun sc7G () Int)
(declare-fun sc7H () Int)
(declare-fun sc7I () Int)
(declare-fun sc7J () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun var8G () String)
(declare-fun var8H () String)
(declare-fun var8I () String)
(declare-fun var8J () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun unch28G () String)
(declare-fun ch8G () String)
(declare-fun unch18G () String)
(declare-fun unch28H () String)
(declare-fun ch8H () String)
(declare-fun unch18H () String)
(declare-fun unch28I () String)
(declare-fun ch8I () String)
(declare-fun unch18I () String)
(declare-fun unch28J () String)
(declare-fun ch8J () String)
(declare-fun unch18J () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun sc8G () Int)
(declare-fun sc8H () Int)
(declare-fun sc8I () Int)
(declare-fun sc8J () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun var9G () String)
(declare-fun var9H () String)
(declare-fun var9I () String)
(declare-fun var9J () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun unch29G () String)
(declare-fun ch9G () String)
(declare-fun unch19G () String)
(declare-fun unch29H () String)
(declare-fun ch9H () String)
(declare-fun unch19H () String)
(declare-fun unch29I () String)
(declare-fun ch9I () String)
(declare-fun unch19I () String)
(declare-fun unch29J () String)
(declare-fun ch9J () String)
(declare-fun unch19J () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun sc9G () Int)
(declare-fun sc9H () Int)
(declare-fun sc9I () Int)
(declare-fun sc9J () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun var10G () String)
(declare-fun var10H () String)
(declare-fun var10I () String)
(declare-fun var10J () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun unch210G () String)
(declare-fun ch10G () String)
(declare-fun unch110G () String)
(declare-fun unch210H () String)
(declare-fun ch10H () String)
(declare-fun unch110H () String)
(declare-fun unch210I () String)
(declare-fun ch10I () String)
(declare-fun unch110I () String)
(declare-fun unch210J () String)
(declare-fun ch10J () String)
(declare-fun unch110J () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun sc10G () Int)
(declare-fun sc10H () Int)
(declare-fun sc10I () Int)
(declare-fun sc10J () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun var11G () String)
(declare-fun var11H () String)
(declare-fun var11I () String)
(declare-fun var11J () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun unch211G () String)
(declare-fun ch11G () String)
(declare-fun unch111G () String)
(declare-fun unch211H () String)
(declare-fun ch11H () String)
(declare-fun unch111H () String)
(declare-fun unch211I () String)
(declare-fun ch11I () String)
(declare-fun unch111I () String)
(declare-fun unch211J () String)
(declare-fun ch11J () String)
(declare-fun unch111J () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun sc11G () Int)
(declare-fun sc11H () Int)
(declare-fun sc11I () Int)
(declare-fun sc11J () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun var12G () String)
(declare-fun var12H () String)
(declare-fun var12I () String)
(declare-fun var12J () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun unch212G () String)
(declare-fun ch12G () String)
(declare-fun unch112G () String)
(declare-fun unch212H () String)
(declare-fun ch12H () String)
(declare-fun unch112H () String)
(declare-fun unch212I () String)
(declare-fun ch12I () String)
(declare-fun unch112I () String)
(declare-fun unch212J () String)
(declare-fun ch12J () String)
(declare-fun unch112J () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun sc12G () Int)
(declare-fun sc12H () Int)
(declare-fun sc12I () Int)
(declare-fun sc12J () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun var13G () String)
(declare-fun var13H () String)
(declare-fun var13I () String)
(declare-fun var13J () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun unch213G () String)
(declare-fun ch13G () String)
(declare-fun unch113G () String)
(declare-fun unch213H () String)
(declare-fun ch13H () String)
(declare-fun unch113H () String)
(declare-fun unch213I () String)
(declare-fun ch13I () String)
(declare-fun unch113I () String)
(declare-fun unch213J () String)
(declare-fun ch13J () String)
(declare-fun unch113J () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun sc13G () Int)
(declare-fun sc13H () Int)
(declare-fun sc13I () Int)
(declare-fun sc13J () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun var14G () String)
(declare-fun var14H () String)
(declare-fun var14I () String)
(declare-fun var14J () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun unch214G () String)
(declare-fun ch14G () String)
(declare-fun unch114G () String)
(declare-fun unch214H () String)
(declare-fun ch14H () String)
(declare-fun unch114H () String)
(declare-fun unch214I () String)
(declare-fun ch14I () String)
(declare-fun unch114I () String)
(declare-fun unch214J () String)
(declare-fun ch14J () String)
(declare-fun unch114J () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun sc14G () Int)
(declare-fun sc14H () Int)
(declare-fun sc14I () Int)
(declare-fun sc14J () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun var15G () String)
(declare-fun var15H () String)
(declare-fun var15I () String)
(declare-fun var15J () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun unch215G () String)
(declare-fun ch15G () String)
(declare-fun unch115G () String)
(declare-fun unch215H () String)
(declare-fun ch15H () String)
(declare-fun unch115H () String)
(declare-fun unch215I () String)
(declare-fun ch15I () String)
(declare-fun unch115I () String)
(declare-fun unch215J () String)
(declare-fun ch15J () String)
(declare-fun unch115J () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun sc15G () Int)
(declare-fun sc15H () Int)
(declare-fun sc15I () Int)
(declare-fun sc15J () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun var16G () String)
(declare-fun var16H () String)
(declare-fun var16I () String)
(declare-fun var16J () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun unch216G () String)
(declare-fun ch16G () String)
(declare-fun unch116G () String)
(declare-fun unch216H () String)
(declare-fun ch16H () String)
(declare-fun unch116H () String)
(declare-fun unch216I () String)
(declare-fun ch16I () String)
(declare-fun unch116I () String)
(declare-fun unch216J () String)
(declare-fun ch16J () String)
(declare-fun unch116J () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun sc16G () Int)
(declare-fun sc16H () Int)
(declare-fun sc16I () Int)
(declare-fun sc16J () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun var17G () String)
(declare-fun var17H () String)
(declare-fun var17I () String)
(declare-fun var17J () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun unch217G () String)
(declare-fun ch17G () String)
(declare-fun unch117G () String)
(declare-fun unch217H () String)
(declare-fun ch17H () String)
(declare-fun unch117H () String)
(declare-fun unch217I () String)
(declare-fun ch17I () String)
(declare-fun unch117I () String)
(declare-fun unch217J () String)
(declare-fun ch17J () String)
(declare-fun unch117J () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun sc17G () Int)
(declare-fun sc17H () Int)
(declare-fun sc17I () Int)
(declare-fun sc17J () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun var18G () String)
(declare-fun var18H () String)
(declare-fun var18I () String)
(declare-fun var18J () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun unch218G () String)
(declare-fun ch18G () String)
(declare-fun unch118G () String)
(declare-fun unch218H () String)
(declare-fun ch18H () String)
(declare-fun unch118H () String)
(declare-fun unch218I () String)
(declare-fun ch18I () String)
(declare-fun unch118I () String)
(declare-fun unch218J () String)
(declare-fun ch18J () String)
(declare-fun unch118J () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun sc18G () Int)
(declare-fun sc18H () Int)
(declare-fun sc18I () Int)
(declare-fun sc18J () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun var19G () String)
(declare-fun var19H () String)
(declare-fun var19I () String)
(declare-fun var19J () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun unch219G () String)
(declare-fun ch19G () String)
(declare-fun unch119G () String)
(declare-fun unch219H () String)
(declare-fun ch19H () String)
(declare-fun unch119H () String)
(declare-fun unch219I () String)
(declare-fun ch19I () String)
(declare-fun unch119I () String)
(declare-fun unch219J () String)
(declare-fun ch19J () String)
(declare-fun unch119J () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun sc19G () Int)
(declare-fun sc19H () Int)
(declare-fun sc19I () Int)
(declare-fun sc19J () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun var20G () String)
(declare-fun var20H () String)
(declare-fun var20I () String)
(declare-fun var20J () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun unch220G () String)
(declare-fun ch20G () String)
(declare-fun unch120G () String)
(declare-fun unch220H () String)
(declare-fun ch20H () String)
(declare-fun unch120H () String)
(declare-fun unch220I () String)
(declare-fun ch20I () String)
(declare-fun unch120I () String)
(declare-fun unch220J () String)
(declare-fun ch20J () String)
(declare-fun unch120J () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun sc20G () Int)
(declare-fun sc20H () Int)
(declare-fun sc20I () Int)
(declare-fun sc20J () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun var21G () String)
(declare-fun var21H () String)
(declare-fun var21I () String)
(declare-fun var21J () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun unch221G () String)
(declare-fun ch21G () String)
(declare-fun unch121G () String)
(declare-fun unch221H () String)
(declare-fun ch21H () String)
(declare-fun unch121H () String)
(declare-fun unch221I () String)
(declare-fun ch21I () String)
(declare-fun unch121I () String)
(declare-fun unch221J () String)
(declare-fun ch21J () String)
(declare-fun unch121J () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun sc21G () Int)
(declare-fun sc21H () Int)
(declare-fun sc21I () Int)
(declare-fun sc21J () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun var22G () String)
(declare-fun var22H () String)
(declare-fun var22I () String)
(declare-fun var22J () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun unch222G () String)
(declare-fun ch22G () String)
(declare-fun unch122G () String)
(declare-fun unch222H () String)
(declare-fun ch22H () String)
(declare-fun unch122H () String)
(declare-fun unch222I () String)
(declare-fun ch22I () String)
(declare-fun unch122I () String)
(declare-fun unch222J () String)
(declare-fun ch22J () String)
(declare-fun unch122J () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun sc22G () Int)
(declare-fun sc22H () Int)
(declare-fun sc22I () Int)
(declare-fun sc22J () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun var23G () String)
(declare-fun var23H () String)
(declare-fun var23I () String)
(declare-fun var23J () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun unch223G () String)
(declare-fun ch23G () String)
(declare-fun unch123G () String)
(declare-fun unch223H () String)
(declare-fun ch23H () String)
(declare-fun unch123H () String)
(declare-fun unch223I () String)
(declare-fun ch23I () String)
(declare-fun unch123I () String)
(declare-fun unch223J () String)
(declare-fun ch23J () String)
(declare-fun unch123J () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun sc23G () Int)
(declare-fun sc23H () Int)
(declare-fun sc23I () Int)
(declare-fun sc23J () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun var24G () String)
(declare-fun var24H () String)
(declare-fun var24I () String)
(declare-fun var24J () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun unch224G () String)
(declare-fun ch24G () String)
(declare-fun unch124G () String)
(declare-fun unch224H () String)
(declare-fun ch24H () String)
(declare-fun unch124H () String)
(declare-fun unch224I () String)
(declare-fun ch24I () String)
(declare-fun unch124I () String)
(declare-fun unch224J () String)
(declare-fun ch24J () String)
(declare-fun unch124J () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun sc24G () Int)
(declare-fun sc24H () Int)
(declare-fun sc24I () Int)
(declare-fun sc24J () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun var25G () String)
(declare-fun var25H () String)
(declare-fun var25I () String)
(declare-fun var25J () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun unch225G () String)
(declare-fun ch25G () String)
(declare-fun unch125G () String)
(declare-fun unch225H () String)
(declare-fun ch25H () String)
(declare-fun unch125H () String)
(declare-fun unch225I () String)
(declare-fun ch25I () String)
(declare-fun unch125I () String)
(declare-fun unch225J () String)
(declare-fun ch25J () String)
(declare-fun unch125J () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun sc25G () Int)
(declare-fun sc25H () Int)
(declare-fun sc25I () Int)
(declare-fun sc25J () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun var26G () String)
(declare-fun var26H () String)
(declare-fun var26I () String)
(declare-fun var26J () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun unch226G () String)
(declare-fun ch26G () String)
(declare-fun unch126G () String)
(declare-fun unch226H () String)
(declare-fun ch26H () String)
(declare-fun unch126H () String)
(declare-fun unch226I () String)
(declare-fun ch26I () String)
(declare-fun unch126I () String)
(declare-fun unch226J () String)
(declare-fun ch26J () String)
(declare-fun unch126J () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun sc26G () Int)
(declare-fun sc26H () Int)
(declare-fun sc26I () Int)
(declare-fun sc26J () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun var27G () String)
(declare-fun var27H () String)
(declare-fun var27I () String)
(declare-fun var27J () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun unch227G () String)
(declare-fun ch27G () String)
(declare-fun unch127G () String)
(declare-fun unch227H () String)
(declare-fun ch27H () String)
(declare-fun unch127H () String)
(declare-fun unch227I () String)
(declare-fun ch27I () String)
(declare-fun unch127I () String)
(declare-fun unch227J () String)
(declare-fun ch27J () String)
(declare-fun unch127J () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun sc27G () Int)
(declare-fun sc27H () Int)
(declare-fun sc27I () Int)
(declare-fun sc27J () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun var28G () String)
(declare-fun var28H () String)
(declare-fun var28I () String)
(declare-fun var28J () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun unch228G () String)
(declare-fun ch28G () String)
(declare-fun unch128G () String)
(declare-fun unch228H () String)
(declare-fun ch28H () String)
(declare-fun unch128H () String)
(declare-fun unch228I () String)
(declare-fun ch28I () String)
(declare-fun unch128I () String)
(declare-fun unch228J () String)
(declare-fun ch28J () String)
(declare-fun unch128J () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun sc28G () Int)
(declare-fun sc28H () Int)
(declare-fun sc28I () Int)
(declare-fun sc28J () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun var29G () String)
(declare-fun var29H () String)
(declare-fun var29I () String)
(declare-fun var29J () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun unch229G () String)
(declare-fun ch29G () String)
(declare-fun unch129G () String)
(declare-fun unch229H () String)
(declare-fun ch29H () String)
(declare-fun unch129H () String)
(declare-fun unch229I () String)
(declare-fun ch29I () String)
(declare-fun unch129I () String)
(declare-fun unch229J () String)
(declare-fun ch29J () String)
(declare-fun unch129J () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun sc29G () Int)
(declare-fun sc29H () Int)
(declare-fun sc29I () Int)
(declare-fun sc29J () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (<= (str.len var0I) 1))
(assert (<= (str.len var0J) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= (str.++ preI (str.++ stem0 sufI)) (str.++ unch10I (str.++ ch0I unch20I))))
(assert (= (str.++ preJ (str.++ stem0 sufJ)) (str.++ unch10J (str.++ ch0J unch20J))))
(assert (= "zub" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "zubam" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "zuboOi" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "zuXi" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (= (ite (= ch0I var0I) 0 1) sc0I))
(assert (= (ite (= ch0J var0J) 0 1) sc0J))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= sc0I 1))
(assert (<= sc0J 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (<= (str.len var1I) 1))
(assert (<= (str.len var1J) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= (str.++ preI (str.++ stem1 sufI)) (str.++ unch11I (str.++ ch1I unch21I))))
(assert (= (str.++ preJ (str.++ stem1 sufJ)) (str.++ unch11J (str.++ ch1J unch21J))))
(assert (= "sOit" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "sOitam" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "sOitoOi" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "sOiZi" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (= (ite (= ch1I var1I) 0 1) sc1I))
(assert (= (ite (= ch1J var1J) 0 1) sc1J))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= sc1I 1))
(assert (<= sc1J 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (<= (str.len var2I) 1))
(assert (<= (str.len var2J) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= (str.++ preI (str.++ stem2 sufI)) (str.++ unch12I (str.++ ch2I unch22I))))
(assert (= (str.++ preJ (str.++ stem2 sufJ)) (str.++ unch12J (str.++ ch2J unch22J))))
(assert (= "1aZ" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "1aZam" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "1ateOi" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "1ateOi" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (= (ite (= ch2I var2I) 0 1) sc2I))
(assert (= (ite (= ch2J var2J) 0 1) sc2J))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= sc2I 1))
(assert (<= sc2J 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (<= (str.len var3I) 1))
(assert (<= (str.len var3J) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= (str.++ preI (str.++ stem3 sufI)) (str.++ unch13I (str.++ ch3I unch23I))))
(assert (= (str.++ preJ (str.++ stem3 sufJ)) (str.++ unch13J (str.++ ch3J unch23J))))
(assert (= "ko2i3" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "koBe3am" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "koBeleOi" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "koBe3i" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (= (ite (= ch3I var3I) 0 1) sc3I))
(assert (= (ite (= ch3J var3J) 0 1) sc3J))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= sc3I 1))
(assert (<= sc3J 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (<= (str.len var4I) 1))
(assert (<= (str.len var4J) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= (str.++ preI (str.++ stem4 sufI)) (str.++ unch14I (str.++ ch4I unch24I))))
(assert (= (str.++ preJ (str.++ stem4 sufJ)) (str.++ unch14J (str.++ ch4J unch24J))))
(assert (= "zlo4ij" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "zlo4ijam" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "zlo4ijeOi" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "zlo4ijeOi" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (= (ite (= ch4I var4I) 0 1) sc4I))
(assert (= (ite (= ch4J var4J) 0 1) sc4J))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= sc4I 1))
(assert (<= sc4J 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (<= (str.len var5I) 1))
(assert (<= (str.len var5J) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= (str.++ preI (str.++ stem5 sufI)) (str.++ unch15I (str.++ ch5I unch25I))))
(assert (= (str.++ preJ (str.++ stem5 sufJ)) (str.++ unch15J (str.++ ch5J unch25J))))
(assert (= "5i6a7" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "5i6a7am" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "5i6aPeOi" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "5i6a7i" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (= (ite (= ch5I var5I) 0 1) sc5I))
(assert (= (ite (= ch5J var5J) 0 1) sc5J))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= sc5I 1))
(assert (<= sc5J 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (<= (str.len var6I) 1))
(assert (<= (str.len var6J) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= (str.++ preI (str.++ stem6 sufI)) (str.++ unch16I (str.++ ch6I unch26I))))
(assert (= (str.++ preJ (str.++ stem6 sufJ)) (str.++ unch16J (str.++ ch6J unch26J))))
(assert (= "korovaj" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "korovajam" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "korovajeOi" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "korovaji" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (= (ite (= ch6I var6I) 0 1) sc6I))
(assert (= (ite (= ch6J var6J) 0 1) sc6J))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (<= sc6I 1))
(assert (<= sc6J 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (<= (str.len var7G) 1))
(assert (<= (str.len var7H) 1))
(assert (<= (str.len var7I) 1))
(assert (<= (str.len var7J) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= (str.++ preG (str.++ stem7 sufG)) (str.++ unch17G (str.++ ch7G unch27G))))
(assert (= (str.++ preH (str.++ stem7 sufH)) (str.++ unch17H (str.++ ch7H unch27H))))
(assert (= (str.++ preI (str.++ stem7 sufI)) (str.++ unch17I (str.++ ch7I unch27I))))
(assert (= (str.++ preJ (str.++ stem7 sufJ)) (str.++ unch17J (str.++ ch7J unch27J))))
(assert (= "ka5i8" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "kame8am" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "kameneOi" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= "kame8i" (str.++ unch17D (str.++ var7D unch27D))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (= (ite (= ch7G var7G) 0 1) sc7G))
(assert (= (ite (= ch7H var7H) 0 1) sc7H))
(assert (= (ite (= ch7I var7I) 0 1) sc7I))
(assert (= (ite (= ch7J var7J) 0 1) sc7J))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= sc7G 1))
(assert (<= sc7H 1))
(assert (<= sc7I 1))
(assert (<= sc7J 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (<= (str.len var8G) 1))
(assert (<= (str.len var8H) 1))
(assert (<= (str.len var8I) 1))
(assert (<= (str.len var8J) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= (str.++ preG (str.++ stem8 sufG)) (str.++ unch18G (str.++ ch8G unch28G))))
(assert (= (str.++ preH (str.++ stem8 sufH)) (str.++ unch18H (str.++ ch8H unch28H))))
(assert (= (str.++ preI (str.++ stem8 sufI)) (str.++ unch18I (str.++ ch8I unch28I))))
(assert (= (str.++ preJ (str.++ stem8 sufJ)) (str.++ unch18J (str.++ ch8J unch28J))))
(assert (= "5i4" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "5i4am" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "5ideOi" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= "5i4i" (str.++ unch18D (str.++ var8D unch28D))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (= (ite (= ch8G var8G) 0 1) sc8G))
(assert (= (ite (= ch8H var8H) 0 1) sc8H))
(assert (= (ite (= ch8I var8I) 0 1) sc8I))
(assert (= (ite (= ch8J var8J) 0 1) sc8J))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= sc8G 1))
(assert (<= sc8H 1))
(assert (<= sc8I 1))
(assert (<= sc8J 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (<= (str.len var9G) 1))
(assert (<= (str.len var9H) 1))
(assert (<= (str.len var9I) 1))
(assert (<= (str.len var9J) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= (str.++ preG (str.++ stem9 sufG)) (str.++ unch19G (str.++ ch9G unch29G))))
(assert (= (str.++ preH (str.++ stem9 sufH)) (str.++ unch19H (str.++ ch9H unch29H))))
(assert (= (str.++ preI (str.++ stem9 sufI)) (str.++ unch19I (str.++ ch9I unch29I))))
(assert (= (str.++ preJ (str.++ stem9 sufJ)) (str.++ unch19J (str.++ ch9J unch29J))))
(assert (= "x3iw" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "x3ivam" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "x3ivoOi" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= "x3iOi" (str.++ unch19D (str.++ var9D unch29D))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (= (ite (= ch9G var9G) 0 1) sc9G))
(assert (= (ite (= ch9H var9H) 0 1) sc9H))
(assert (= (ite (= ch9I var9I) 0 1) sc9I))
(assert (= (ite (= ch9J var9J) 0 1) sc9J))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= sc9G 1))
(assert (<= sc9H 1))
(assert (<= sc9I 1))
(assert (<= sc9J 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (<= (str.len var10G) 1))
(assert (<= (str.len var10H) 1))
(assert (<= (str.len var10I) 1))
(assert (<= (str.len var10J) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= (str.++ preG (str.++ stem10 sufG)) (str.++ unch110G (str.++ ch10G unch210G))))
(assert (= (str.++ preH (str.++ stem10 sufH)) (str.++ unch110H (str.++ ch10H unch210H))))
(assert (= (str.++ preI (str.++ stem10 sufI)) (str.++ unch110I (str.++ ch10I unch210I))))
(assert (= (str.++ preJ (str.++ stem10 sufJ)) (str.++ unch110J (str.++ ch10J unch210J))))
(assert (= "holub" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "holubam" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "holuboOi" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= "holuXi" (str.++ unch110D (str.++ var10D unch210D))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (= (ite (= ch10G var10G) 0 1) sc10G))
(assert (= (ite (= ch10H var10H) 0 1) sc10H))
(assert (= (ite (= ch10I var10I) 0 1) sc10I))
(assert (= (ite (= ch10J var10J) 0 1) sc10J))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= sc10G 1))
(assert (<= sc10H 1))
(assert (<= sc10I 1))
(assert (<= sc10J 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (<= (str.len var11G) 1))
(assert (<= (str.len var11H) 1))
(assert (<= (str.len var11I) 1))
(assert (<= (str.len var11J) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= (str.++ preG (str.++ stem11 sufG)) (str.++ unch111G (str.++ ch11G unch211G))))
(assert (= (str.++ preH (str.++ stem11 sufH)) (str.++ unch111H (str.++ ch11H unch211H))))
(assert (= (str.++ preI (str.++ stem11 sufI)) (str.++ unch111I (str.++ ch11I unch211I))))
(assert (= (str.++ preJ (str.++ stem11 sufJ)) (str.++ unch111J (str.++ ch11J unch211J))))
(assert (= "6in" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "6inam" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "6inoOi" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= "6i8i" (str.++ unch111D (str.++ var11D unch211D))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (= (ite (= ch11G var11G) 0 1) sc11G))
(assert (= (ite (= ch11H var11H) 0 1) sc11H))
(assert (= (ite (= ch11I var11I) 0 1) sc11I))
(assert (= (ite (= ch11J var11J) 0 1) sc11J))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= sc11G 1))
(assert (<= sc11H 1))
(assert (<= sc11I 1))
(assert (<= sc11J 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (<= (str.len var12G) 1))
(assert (<= (str.len var12H) 1))
(assert (<= (str.len var12I) 1))
(assert (<= (str.len var12J) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= (str.++ preG (str.++ stem12 sufG)) (str.++ unch112G (str.++ ch12G unch212G))))
(assert (= (str.++ preH (str.++ stem12 sufH)) (str.++ unch112H (str.++ ch12H unch212H))))
(assert (= (str.++ preI (str.++ stem12 sufI)) (str.++ unch112I (str.++ ch12I unch212I))))
(assert (= (str.++ preJ (str.++ stem12 sufJ)) (str.++ unch112J (str.++ ch12J unch212J))))
(assert (= "leXi4" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "lebe4am" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "lebedeOi" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= "lebe4i" (str.++ unch112D (str.++ var12D unch212D))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (= (ite (= ch12G var12G) 0 1) sc12G))
(assert (= (ite (= ch12H var12H) 0 1) sc12H))
(assert (= (ite (= ch12I var12I) 0 1) sc12I))
(assert (= (ite (= ch12J var12J) 0 1) sc12J))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= sc12G 1))
(assert (<= sc12H 1))
(assert (<= sc12I 1))
(assert (<= sc12J 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (<= (str.len var13G) 1))
(assert (<= (str.len var13H) 1))
(assert (<= (str.len var13I) 1))
(assert (<= (str.len var13J) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= (str.++ preG (str.++ stem13 sufG)) (str.++ unch113G (str.++ ch13G unch213G))))
(assert (= (str.++ preH (str.++ stem13 sufH)) (str.++ unch113H (str.++ ch13H unch213H))))
(assert (= (str.++ preI (str.++ stem13 sufI)) (str.++ unch113I (str.++ ch13I unch213I))))
(assert (= (str.++ preJ (str.++ stem13 sufJ)) (str.++ unch113J (str.++ ch13J unch213J))))
(assert (= "su6id" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "su6idam" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "su6idoOi" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= "su6idoOi" (str.++ unch113E (str.++ var13E unch213E))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (= (ite (= ch13G var13G) 0 1) sc13G))
(assert (= (ite (= ch13H var13H) 0 1) sc13H))
(assert (= (ite (= ch13I var13I) 0 1) sc13I))
(assert (= (ite (= ch13J var13J) 0 1) sc13J))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= sc13G 1))
(assert (<= sc13H 1))
(assert (<= sc13I 1))
(assert (<= sc13J 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (<= (str.len var14G) 1))
(assert (<= (str.len var14H) 1))
(assert (<= (str.len var14I) 1))
(assert (<= (str.len var14J) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= (str.++ preG (str.++ stem14 sufG)) (str.++ unch114G (str.++ ch14G unch214G))))
(assert (= (str.++ preH (str.++ stem14 sufH)) (str.++ unch114H (str.++ ch14H unch214H))))
(assert (= (str.++ preI (str.++ stem14 sufI)) (str.++ unch114I (str.++ ch14I unch214I))))
(assert (= (str.++ preJ (str.++ stem14 sufJ)) (str.++ unch114J (str.++ ch14J unch214J))))
(assert (= "EoloOik" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "EoloOikam" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "EoloOikoOi" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= "EoloOikoOi" (str.++ unch114E (str.++ var14E unch214E))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (= (ite (= ch14G var14G) 0 1) sc14G))
(assert (= (ite (= ch14H var14H) 0 1) sc14H))
(assert (= (ite (= ch14I var14I) 0 1) sc14I))
(assert (= (ite (= ch14J var14J) 0 1) sc14J))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= sc14G 1))
(assert (<= sc14H 1))
(assert (<= sc14I 1))
(assert (<= sc14J 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (<= (str.len var15G) 1))
(assert (<= (str.len var15H) 1))
(assert (<= (str.len var15I) 1))
(assert (<= (str.len var15J) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= (str.++ preG (str.++ stem15 sufG)) (str.++ unch115G (str.++ ch15G unch215G))))
(assert (= (str.++ preH (str.++ stem15 sufH)) (str.++ unch115H (str.++ ch15H unch215H))))
(assert (= (str.++ preI (str.++ stem15 sufI)) (str.++ unch115I (str.++ ch15I unch215I))))
(assert (= (str.++ preJ (str.++ stem15 sufJ)) (str.++ unch115J (str.++ ch15J unch215J))))
(assert (= "3id" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "ledam" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "ledoOi" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= "le4i" (str.++ unch115D (str.++ var15D unch215D))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (= (ite (= ch15G var15G) 0 1) sc15G))
(assert (= (ite (= ch15H var15H) 0 1) sc15H))
(assert (= (ite (= ch15I var15I) 0 1) sc15I))
(assert (= (ite (= ch15J var15J) 0 1) sc15J))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= sc15G 1))
(assert (<= sc15H 1))
(assert (<= sc15I 1))
(assert (<= sc15J 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (<= (str.len var16G) 1))
(assert (<= (str.len var16H) 1))
(assert (<= (str.len var16I) 1))
(assert (<= (str.len var16J) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= (str.++ preG (str.++ stem16 sufG)) (str.++ unch116G (str.++ ch16G unch216G))))
(assert (= (str.++ preH (str.++ stem16 sufH)) (str.++ unch116H (str.++ ch16H unch216H))))
(assert (= (str.++ preI (str.++ stem16 sufI)) (str.++ unch116I (str.++ ch16I unch216I))))
(assert (= (str.++ preJ (str.++ stem16 sufJ)) (str.++ unch116J (str.++ ch16J unch216J))))
(assert (= "bi3" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bo3am" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "boleOi" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= "bo3i" (str.++ unch116D (str.++ var16D unch216D))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (= (ite (= ch16G var16G) 0 1) sc16G))
(assert (= (ite (= ch16H var16H) 0 1) sc16H))
(assert (= (ite (= ch16I var16I) 0 1) sc16I))
(assert (= (ite (= ch16J var16J) 0 1) sc16J))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= sc16G 1))
(assert (<= sc16H 1))
(assert (<= sc16I 1))
(assert (<= sc16J 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (<= (str.len var17G) 1))
(assert (<= (str.len var17H) 1))
(assert (<= (str.len var17I) 1))
(assert (<= (str.len var17J) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= (str.++ preG (str.++ stem17 sufG)) (str.++ unch117G (str.++ ch17G unch217G))))
(assert (= (str.++ preH (str.++ stem17 sufH)) (str.++ unch117H (str.++ ch17H unch217H))))
(assert (= (str.++ preI (str.++ stem17 sufI)) (str.++ unch117I (str.++ ch17I unch217I))))
(assert (= (str.++ preJ (str.++ stem17 sufJ)) (str.++ unch117J (str.++ ch17J unch217J))))
(assert (= "riw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "rovam" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "rovoOi" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= "roOi" (str.++ unch117D (str.++ var17D unch217D))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (= (ite (= ch17G var17G) 0 1) sc17G))
(assert (= (ite (= ch17H var17H) 0 1) sc17H))
(assert (= (ite (= ch17I var17I) 0 1) sc17I))
(assert (= (ite (= ch17J var17J) 0 1) sc17J))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= sc17G 1))
(assert (<= sc17H 1))
(assert (<= sc17I 1))
(assert (<= sc17J 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (<= (str.len var18G) 1))
(assert (<= (str.len var18H) 1))
(assert (<= (str.len var18I) 1))
(assert (<= (str.len var18J) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= (str.++ preG (str.++ stem18 sufG)) (str.++ unch118G (str.++ ch18G unch218G))))
(assert (= (str.++ preH (str.++ stem18 sufH)) (str.++ unch118H (str.++ ch18H unch218H))))
(assert (= (str.++ preI (str.++ stem18 sufI)) (str.++ unch118I (str.++ ch18I unch218I))))
(assert (= (str.++ preJ (str.++ stem18 sufJ)) (str.++ unch118J (str.++ ch18J unch218J))))
(assert (= "stiw" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "stolam" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "stoloOi" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= "sto3i" (str.++ unch118D (str.++ var18D unch218D))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (= (ite (= ch18G var18G) 0 1) sc18G))
(assert (= (ite (= ch18H var18H) 0 1) sc18H))
(assert (= (ite (= ch18I var18I) 0 1) sc18I))
(assert (= (ite (= ch18J var18J) 0 1) sc18J))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= sc18G 1))
(assert (<= sc18H 1))
(assert (<= sc18I 1))
(assert (<= sc18J 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (<= (str.len var19G) 1))
(assert (<= (str.len var19H) 1))
(assert (<= (str.len var19I) 1))
(assert (<= (str.len var19J) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= (str.++ preG (str.++ stem19 sufG)) (str.++ unch119G (str.++ ch19G unch219G))))
(assert (= (str.++ preH (str.++ stem19 sufH)) (str.++ unch119H (str.++ ch19H unch219H))))
(assert (= (str.++ preI (str.++ stem19 sufI)) (str.++ unch119I (str.++ ch19I unch219I))))
(assert (= (str.++ preJ (str.++ stem19 sufJ)) (str.++ unch119J (str.++ ch19J unch219J))))
(assert (= "4id" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "4idam" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "4idoOi" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= "4idoOi" (str.++ unch119E (str.++ var19E unch219E))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (= (ite (= ch19G var19G) 0 1) sc19G))
(assert (= (ite (= ch19H var19H) 0 1) sc19H))
(assert (= (ite (= ch19I var19I) 0 1) sc19I))
(assert (= (ite (= ch19J var19J) 0 1) sc19J))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= sc19G 1))
(assert (<= sc19H 1))
(assert (<= sc19I 1))
(assert (<= sc19J 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (<= (str.len var20G) 1))
(assert (<= (str.len var20H) 1))
(assert (<= (str.len var20I) 1))
(assert (<= (str.len var20J) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= (str.++ preG (str.++ stem20 sufG)) (str.++ unch120G (str.++ ch20G unch220G))))
(assert (= (str.++ preH (str.++ stem20 sufH)) (str.++ unch120H (str.++ ch20H unch220H))))
(assert (= (str.++ preI (str.++ stem20 sufI)) (str.++ unch120I (str.++ ch20I unch220I))))
(assert (= (str.++ preJ (str.++ stem20 sufJ)) (str.++ unch120J (str.++ ch20J unch220J))))
(assert (= "3it" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "3otam" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "3otoOi" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= "3oZi" (str.++ unch120D (str.++ var20D unch220D))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (= (ite (= ch20G var20G) 0 1) sc20G))
(assert (= (ite (= ch20H var20H) 0 1) sc20H))
(assert (= (ite (= ch20I var20I) 0 1) sc20I))
(assert (= (ite (= ch20J var20J) 0 1) sc20J))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= sc20G 1))
(assert (<= sc20H 1))
(assert (<= sc20I 1))
(assert (<= sc20J 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (<= (str.len var21G) 1))
(assert (<= (str.len var21H) 1))
(assert (<= (str.len var21I) 1))
(assert (<= (str.len var21J) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= (str.++ preG (str.++ stem21 sufG)) (str.++ unch121G (str.++ ch21G unch221G))))
(assert (= (str.++ preH (str.++ stem21 sufH)) (str.++ unch121H (str.++ ch21H unch221H))))
(assert (= (str.++ preI (str.++ stem21 sufI)) (str.++ unch121I (str.++ ch21I unch221I))))
(assert (= (str.++ preJ (str.++ stem21 sufJ)) (str.++ unch121J (str.++ ch21J unch221J))))
(assert (= "mist" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "mostam" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "mostoOi" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= "mosZi" (str.++ unch121D (str.++ var21D unch221D))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (= (ite (= ch21G var21G) 0 1) sc21G))
(assert (= (ite (= ch21H var21H) 0 1) sc21H))
(assert (= (ite (= ch21I var21I) 0 1) sc21I))
(assert (= (ite (= ch21J var21J) 0 1) sc21J))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= sc21G 1))
(assert (<= sc21H 1))
(assert (<= sc21I 1))
(assert (<= sc21J 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (<= (str.len var22G) 1))
(assert (<= (str.len var22H) 1))
(assert (<= (str.len var22I) 1))
(assert (<= (str.len var22J) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= (str.++ preG (str.++ stem22 sufG)) (str.++ unch122G (str.++ ch22G unch222G))))
(assert (= (str.++ preH (str.++ stem22 sufH)) (str.++ unch122H (str.++ ch22H unch222H))))
(assert (= (str.++ preI (str.++ stem22 sufI)) (str.++ unch122I (str.++ ch22I unch222I))))
(assert (= (str.++ preJ (str.++ stem22 sufJ)) (str.++ unch122J (str.++ ch22J unch222J))))
(assert (= "veEir" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "veEoram" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "veEoroOi" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= "veEo9i" (str.++ unch122D (str.++ var22D unch222D))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (= (ite (= ch22G var22G) 0 1) sc22G))
(assert (= (ite (= ch22H var22H) 0 1) sc22H))
(assert (= (ite (= ch22I var22I) 0 1) sc22I))
(assert (= (ite (= ch22J var22J) 0 1) sc22J))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= sc22G 1))
(assert (<= sc22H 1))
(assert (<= sc22I 1))
(assert (<= sc22J 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (<= (str.len var23G) 1))
(assert (<= (str.len var23H) 1))
(assert (<= (str.len var23I) 1))
(assert (<= (str.len var23J) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= (str.++ preG (str.++ stem23 sufG)) (str.++ unch123G (str.++ ch23G unch223G))))
(assert (= (str.++ preH (str.++ stem23 sufH)) (str.++ unch123H (str.++ ch23H unch223H))))
(assert (= (str.++ preI (str.++ stem23 sufI)) (str.++ unch123I (str.++ ch23I unch223I))))
(assert (= (str.++ preJ (str.++ stem23 sufJ)) (str.++ unch123J (str.++ ch23J unch223J))))
(assert (= "Zilo" (str.++ unch123F (str.++ var23F unch223F))))
(assert (= "Zila" (str.++ unch123G (str.++ var23G unch223G))))
(assert (= "Zilu" (str.++ unch123H (str.++ var23H unch223H))))
(assert (= "Zi3i" (str.++ unch123I (str.++ var23I unch223I))))
(assert (= "Ziw" (str.++ unch123J (str.++ var23J unch223J))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (= (ite (= ch23G var23G) 0 1) sc23G))
(assert (= (ite (= ch23H var23H) 0 1) sc23H))
(assert (= (ite (= ch23I var23I) 0 1) sc23I))
(assert (= (ite (= ch23J var23J) 0 1) sc23J))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= sc23G 1))
(assert (<= sc23H 1))
(assert (<= sc23I 1))
(assert (<= sc23J 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (<= (str.len var24G) 1))
(assert (<= (str.len var24H) 1))
(assert (<= (str.len var24I) 1))
(assert (<= (str.len var24J) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= (str.++ preG (str.++ stem24 sufG)) (str.++ unch124G (str.++ ch24G unch224G))))
(assert (= (str.++ preH (str.++ stem24 sufH)) (str.++ unch124H (str.++ ch24H unch224H))))
(assert (= (str.++ preI (str.++ stem24 sufI)) (str.++ unch124I (str.++ ch24I unch224I))))
(assert (= (str.++ preJ (str.++ stem24 sufJ)) (str.++ unch124J (str.++ ch24J unch224J))))
(assert (= "koleso" (str.++ unch124F (str.++ var24F unch224F))))
(assert (= "kolesa" (str.++ unch124G (str.++ var24G unch224G))))
(assert (= "kolesu" (str.++ unch124H (str.++ var24H unch224H))))
(assert (= "kole6i" (str.++ unch124I (str.++ var24I unch224I))))
(assert (= "ko3is" (str.++ unch124J (str.++ var24J unch224J))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (= (ite (= ch24G var24G) 0 1) sc24G))
(assert (= (ite (= ch24H var24H) 0 1) sc24H))
(assert (= (ite (= ch24I var24I) 0 1) sc24I))
(assert (= (ite (= ch24J var24J) 0 1) sc24J))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= sc24G 1))
(assert (<= sc24H 1))
(assert (<= sc24I 1))
(assert (<= sc24J 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (<= (str.len var25G) 1))
(assert (<= (str.len var25H) 1))
(assert (<= (str.len var25I) 1))
(assert (<= (str.len var25J) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= (str.++ preG (str.++ stem25 sufG)) (str.++ unch125G (str.++ ch25G unch225G))))
(assert (= (str.++ preH (str.++ stem25 sufH)) (str.++ unch125H (str.++ ch25H unch225H))))
(assert (= (str.++ preI (str.++ stem25 sufI)) (str.++ unch125I (str.++ ch25I unch225I))))
(assert (= (str.++ preJ (str.++ stem25 sufJ)) (str.++ unch125J (str.++ ch25J unch225J))))
(assert (= "ozero" (str.++ unch125F (str.++ var25F unch225F))))
(assert (= "ozera" (str.++ unch125G (str.++ var25G unch225G))))
(assert (= "ozeru" (str.++ unch125H (str.++ var25H unch225H))))
(assert (= "oze9i" (str.++ unch125I (str.++ var25I unch225I))))
(assert (= "o1ir" (str.++ unch125J (str.++ var25J unch225J))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (= (ite (= ch25G var25G) 0 1) sc25G))
(assert (= (ite (= ch25H var25H) 0 1) sc25H))
(assert (= (ite (= ch25I var25I) 0 1) sc25I))
(assert (= (ite (= ch25J var25J) 0 1) sc25J))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= sc25G 1))
(assert (<= sc25H 1))
(assert (<= sc25I 1))
(assert (<= sc25J 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (<= (str.len var26G) 1))
(assert (<= (str.len var26H) 1))
(assert (<= (str.len var26I) 1))
(assert (<= (str.len var26J) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= (str.++ preG (str.++ stem26 sufG)) (str.++ unch126G (str.++ ch26G unch226G))))
(assert (= (str.++ preH (str.++ stem26 sufH)) (str.++ unch126H (str.++ ch26H unch226H))))
(assert (= (str.++ preI (str.++ stem26 sufI)) (str.++ unch126I (str.++ ch26I unch226I))))
(assert (= (str.++ preJ (str.++ stem26 sufJ)) (str.++ unch126J (str.++ ch26J unch226J))))
(assert (= "selo" (str.++ unch126F (str.++ var26F unch226F))))
(assert (= "sela" (str.++ unch126G (str.++ var26G unch226G))))
(assert (= "selu" (str.++ unch126H (str.++ var26H unch226H))))
(assert (= "se3i" (str.++ unch126I (str.++ var26I unch226I))))
(assert (= "6iw" (str.++ unch126J (str.++ var26J unch226J))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (= (ite (= ch26G var26G) 0 1) sc26G))
(assert (= (ite (= ch26H var26H) 0 1) sc26H))
(assert (= (ite (= ch26I var26I) 0 1) sc26I))
(assert (= (ite (= ch26J var26J) 0 1) sc26J))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= sc26G 1))
(assert (<= sc26H 1))
(assert (<= sc26I 1))
(assert (<= sc26J 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (<= (str.len var27G) 1))
(assert (<= (str.len var27H) 1))
(assert (<= (str.len var27I) 1))
(assert (<= (str.len var27J) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= (str.++ preG (str.++ stem27 sufG)) (str.++ unch127G (str.++ ch27G unch227G))))
(assert (= (str.++ preH (str.++ stem27 sufH)) (str.++ unch127H (str.++ ch27H unch227H))))
(assert (= (str.++ preI (str.++ stem27 sufI)) (str.++ unch127I (str.++ ch27I unch227I))))
(assert (= (str.++ preJ (str.++ stem27 sufJ)) (str.++ unch127J (str.++ ch27J unch227J))))
(assert (= "pole" (str.++ unch127F (str.++ var27F unch227F))))
(assert (= "po3a" (str.++ unch127G (str.++ var27G unch227G))))
(assert (= "po3u" (str.++ unch127H (str.++ var27H unch227H))))
(assert (= "po3i" (str.++ unch127I (str.++ var27I unch227I))))
(assert (= "pi3" (str.++ unch127J (str.++ var27J unch227J))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (= (ite (= ch27G var27G) 0 1) sc27G))
(assert (= (ite (= ch27H var27H) 0 1) sc27H))
(assert (= (ite (= ch27I var27I) 0 1) sc27I))
(assert (= (ite (= ch27J var27J) 0 1) sc27J))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= sc27G 1))
(assert (<= sc27H 1))
(assert (<= sc27I 1))
(assert (<= sc27J 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (<= (str.len var28G) 1))
(assert (<= (str.len var28H) 1))
(assert (<= (str.len var28I) 1))
(assert (<= (str.len var28J) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= (str.++ preG (str.++ stem28 sufG)) (str.++ unch128G (str.++ ch28G unch228G))))
(assert (= (str.++ preH (str.++ stem28 sufH)) (str.++ unch128H (str.++ ch28H unch228H))))
(assert (= (str.++ preI (str.++ stem28 sufI)) (str.++ unch128I (str.++ ch28I unch228I))))
(assert (= (str.++ preJ (str.++ stem28 sufJ)) (str.++ unch128J (str.++ ch28J unch228J))))
(assert (= "slovo" (str.++ unch128F (str.++ var28F unch228F))))
(assert (= "slova" (str.++ unch128G (str.++ var28G unch228G))))
(assert (= "slovu" (str.++ unch128H (str.++ var28H unch228H))))
(assert (= "sloOi" (str.++ unch128I (str.++ var28I unch228I))))
(assert (= "sliw" (str.++ unch128J (str.++ var28J unch228J))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (= (ite (= ch28G var28G) 0 1) sc28G))
(assert (= (ite (= ch28H var28H) 0 1) sc28H))
(assert (= (ite (= ch28I var28I) 0 1) sc28I))
(assert (= (ite (= ch28J var28J) 0 1) sc28J))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= sc28G 1))
(assert (<= sc28H 1))
(assert (<= sc28I 1))
(assert (<= sc28J 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (<= (str.len var29G) 1))
(assert (<= (str.len var29H) 1))
(assert (<= (str.len var29I) 1))
(assert (<= (str.len var29J) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= (str.++ preG (str.++ stem29 sufG)) (str.++ unch129G (str.++ ch29G unch229G))))
(assert (= (str.++ preH (str.++ stem29 sufH)) (str.++ unch129H (str.++ ch29H unch229H))))
(assert (= (str.++ preI (str.++ stem29 sufI)) (str.++ unch129I (str.++ ch29I unch229I))))
(assert (= (str.++ preJ (str.++ stem29 sufJ)) (str.++ unch129J (str.++ ch29J unch229J))))
(assert (= "more" (str.++ unch129F (str.++ var29F unch229F))))
(assert (= "mo9a" (str.++ unch129G (str.++ var29G unch229G))))
(assert (= "mo9u" (str.++ unch129H (str.++ var29H unch229H))))
(assert (= "mo9i" (str.++ unch129I (str.++ var29I unch229I))))
(assert (= "mi9" (str.++ unch129J (str.++ var29J unch229J))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (= (ite (= ch29G var29G) 0 1) sc29G))
(assert (= (ite (= ch29H var29H) 0 1) sc29H))
(assert (= (ite (= ch29I var29I) 0 1) sc29I))
(assert (= (ite (= ch29J var29J) 0 1) sc29J))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= sc29G 1))
(assert (<= sc29H 1))
(assert (<= sc29I 1))
(assert (<= sc29J 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      sc0I
      sc0J
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      sc1I
      sc1J
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      sc2I
      sc2J
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      sc3I
      sc3J
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      sc4I
      sc4J
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      sc5I
      sc5J
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H
      sc6I
      sc6J
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      sc7G
      sc7H
      sc7I
      sc7J
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      sc8G
      sc8H
      sc8I
      sc8J
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      sc9G
      sc9H
      sc9I
      sc9J
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      sc10G
      sc10H
      sc10I
      sc10J
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      sc11G
      sc11H
      sc11I
      sc11J
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      sc12G
      sc12H
      sc12I
      sc12J
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      sc13G
      sc13H
      sc13I
      sc13J
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      sc14G
      sc14H
      sc14I
      sc14J
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      sc15G
      sc15H
      sc15I
      sc15J
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      sc16G
      sc16H
      sc16I
      sc16J
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      sc17G
      sc17H
      sc17I
      sc17J
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      sc18G
      sc18H
      sc18I
      sc18J
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      sc19G
      sc19H
      sc19I
      sc19J
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      sc20G
      sc20H
      sc20I
      sc20J
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      sc21G
      sc21H
      sc21I
      sc21J
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      sc22G
      sc22H
      sc22I
      sc22J
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      sc23G
      sc23H
      sc23I
      sc23J
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      sc24G
      sc24H
      sc24I
      sc24J
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      sc25G
      sc25H
      sc25I
      sc25J
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      sc26G
      sc26H
      sc26I
      sc26J
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      sc27G
      sc27H
      sc27I
      sc27J
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      sc28G
      sc28H
      sc28I
      sc28J
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      sc29G
      sc29H
      sc29I
      sc29J)
   14))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun var0I () String)
(declare-fun var0J () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun unch20I () String)
(declare-fun ch0I () String)
(declare-fun unch10I () String)
(declare-fun sufI () String)
(declare-fun preI () String)
(declare-fun unch20J () String)
(declare-fun ch0J () String)
(declare-fun unch10J () String)
(declare-fun sufJ () String)
(declare-fun preJ () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun sc0I () Int)
(declare-fun sc0J () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun var1I () String)
(declare-fun var1J () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun unch21I () String)
(declare-fun ch1I () String)
(declare-fun unch11I () String)
(declare-fun unch21J () String)
(declare-fun ch1J () String)
(declare-fun unch11J () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun sc1I () Int)
(declare-fun sc1J () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun var2I () String)
(declare-fun var2J () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun unch22I () String)
(declare-fun ch2I () String)
(declare-fun unch12I () String)
(declare-fun unch22J () String)
(declare-fun ch2J () String)
(declare-fun unch12J () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun sc2I () Int)
(declare-fun sc2J () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun var3I () String)
(declare-fun var3J () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun unch23I () String)
(declare-fun ch3I () String)
(declare-fun unch13I () String)
(declare-fun unch23J () String)
(declare-fun ch3J () String)
(declare-fun unch13J () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun sc3I () Int)
(declare-fun sc3J () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun var4I () String)
(declare-fun var4J () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun unch24I () String)
(declare-fun ch4I () String)
(declare-fun unch14I () String)
(declare-fun unch24J () String)
(declare-fun ch4J () String)
(declare-fun unch14J () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun sc4I () Int)
(declare-fun sc4J () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun var5I () String)
(declare-fun var5J () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun unch25I () String)
(declare-fun ch5I () String)
(declare-fun unch15I () String)
(declare-fun unch25J () String)
(declare-fun ch5J () String)
(declare-fun unch15J () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun sc5I () Int)
(declare-fun sc5J () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun var6I () String)
(declare-fun var6J () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun unch26I () String)
(declare-fun ch6I () String)
(declare-fun unch16I () String)
(declare-fun unch26J () String)
(declare-fun ch6J () String)
(declare-fun unch16J () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(declare-fun sc6I () Int)
(declare-fun sc6J () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun var7G () String)
(declare-fun var7H () String)
(declare-fun var7I () String)
(declare-fun var7J () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun unch27G () String)
(declare-fun ch7G () String)
(declare-fun unch17G () String)
(declare-fun unch27H () String)
(declare-fun ch7H () String)
(declare-fun unch17H () String)
(declare-fun unch27I () String)
(declare-fun ch7I () String)
(declare-fun unch17I () String)
(declare-fun unch27J () String)
(declare-fun ch7J () String)
(declare-fun unch17J () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun sc7G () Int)
(declare-fun sc7H () Int)
(declare-fun sc7I () Int)
(declare-fun sc7J () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun var8G () String)
(declare-fun var8H () String)
(declare-fun var8I () String)
(declare-fun var8J () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun unch28G () String)
(declare-fun ch8G () String)
(declare-fun unch18G () String)
(declare-fun unch28H () String)
(declare-fun ch8H () String)
(declare-fun unch18H () String)
(declare-fun unch28I () String)
(declare-fun ch8I () String)
(declare-fun unch18I () String)
(declare-fun unch28J () String)
(declare-fun ch8J () String)
(declare-fun unch18J () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun sc8G () Int)
(declare-fun sc8H () Int)
(declare-fun sc8I () Int)
(declare-fun sc8J () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun var9G () String)
(declare-fun var9H () String)
(declare-fun var9I () String)
(declare-fun var9J () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun unch29G () String)
(declare-fun ch9G () String)
(declare-fun unch19G () String)
(declare-fun unch29H () String)
(declare-fun ch9H () String)
(declare-fun unch19H () String)
(declare-fun unch29I () String)
(declare-fun ch9I () String)
(declare-fun unch19I () String)
(declare-fun unch29J () String)
(declare-fun ch9J () String)
(declare-fun unch19J () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun sc9G () Int)
(declare-fun sc9H () Int)
(declare-fun sc9I () Int)
(declare-fun sc9J () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun var10G () String)
(declare-fun var10H () String)
(declare-fun var10I () String)
(declare-fun var10J () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun unch210G () String)
(declare-fun ch10G () String)
(declare-fun unch110G () String)
(declare-fun unch210H () String)
(declare-fun ch10H () String)
(declare-fun unch110H () String)
(declare-fun unch210I () String)
(declare-fun ch10I () String)
(declare-fun unch110I () String)
(declare-fun unch210J () String)
(declare-fun ch10J () String)
(declare-fun unch110J () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun sc10G () Int)
(declare-fun sc10H () Int)
(declare-fun sc10I () Int)
(declare-fun sc10J () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun var11G () String)
(declare-fun var11H () String)
(declare-fun var11I () String)
(declare-fun var11J () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun unch211G () String)
(declare-fun ch11G () String)
(declare-fun unch111G () String)
(declare-fun unch211H () String)
(declare-fun ch11H () String)
(declare-fun unch111H () String)
(declare-fun unch211I () String)
(declare-fun ch11I () String)
(declare-fun unch111I () String)
(declare-fun unch211J () String)
(declare-fun ch11J () String)
(declare-fun unch111J () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun sc11G () Int)
(declare-fun sc11H () Int)
(declare-fun sc11I () Int)
(declare-fun sc11J () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun var12G () String)
(declare-fun var12H () String)
(declare-fun var12I () String)
(declare-fun var12J () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun unch212G () String)
(declare-fun ch12G () String)
(declare-fun unch112G () String)
(declare-fun unch212H () String)
(declare-fun ch12H () String)
(declare-fun unch112H () String)
(declare-fun unch212I () String)
(declare-fun ch12I () String)
(declare-fun unch112I () String)
(declare-fun unch212J () String)
(declare-fun ch12J () String)
(declare-fun unch112J () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun sc12G () Int)
(declare-fun sc12H () Int)
(declare-fun sc12I () Int)
(declare-fun sc12J () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun var13G () String)
(declare-fun var13H () String)
(declare-fun var13I () String)
(declare-fun var13J () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun unch213G () String)
(declare-fun ch13G () String)
(declare-fun unch113G () String)
(declare-fun unch213H () String)
(declare-fun ch13H () String)
(declare-fun unch113H () String)
(declare-fun unch213I () String)
(declare-fun ch13I () String)
(declare-fun unch113I () String)
(declare-fun unch213J () String)
(declare-fun ch13J () String)
(declare-fun unch113J () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun sc13G () Int)
(declare-fun sc13H () Int)
(declare-fun sc13I () Int)
(declare-fun sc13J () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun var14G () String)
(declare-fun var14H () String)
(declare-fun var14I () String)
(declare-fun var14J () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun unch214G () String)
(declare-fun ch14G () String)
(declare-fun unch114G () String)
(declare-fun unch214H () String)
(declare-fun ch14H () String)
(declare-fun unch114H () String)
(declare-fun unch214I () String)
(declare-fun ch14I () String)
(declare-fun unch114I () String)
(declare-fun unch214J () String)
(declare-fun ch14J () String)
(declare-fun unch114J () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun sc14G () Int)
(declare-fun sc14H () Int)
(declare-fun sc14I () Int)
(declare-fun sc14J () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun var15G () String)
(declare-fun var15H () String)
(declare-fun var15I () String)
(declare-fun var15J () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun unch215G () String)
(declare-fun ch15G () String)
(declare-fun unch115G () String)
(declare-fun unch215H () String)
(declare-fun ch15H () String)
(declare-fun unch115H () String)
(declare-fun unch215I () String)
(declare-fun ch15I () String)
(declare-fun unch115I () String)
(declare-fun unch215J () String)
(declare-fun ch15J () String)
(declare-fun unch115J () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun sc15G () Int)
(declare-fun sc15H () Int)
(declare-fun sc15I () Int)
(declare-fun sc15J () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun var16G () String)
(declare-fun var16H () String)
(declare-fun var16I () String)
(declare-fun var16J () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun unch216G () String)
(declare-fun ch16G () String)
(declare-fun unch116G () String)
(declare-fun unch216H () String)
(declare-fun ch16H () String)
(declare-fun unch116H () String)
(declare-fun unch216I () String)
(declare-fun ch16I () String)
(declare-fun unch116I () String)
(declare-fun unch216J () String)
(declare-fun ch16J () String)
(declare-fun unch116J () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun sc16G () Int)
(declare-fun sc16H () Int)
(declare-fun sc16I () Int)
(declare-fun sc16J () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun var17G () String)
(declare-fun var17H () String)
(declare-fun var17I () String)
(declare-fun var17J () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun unch217G () String)
(declare-fun ch17G () String)
(declare-fun unch117G () String)
(declare-fun unch217H () String)
(declare-fun ch17H () String)
(declare-fun unch117H () String)
(declare-fun unch217I () String)
(declare-fun ch17I () String)
(declare-fun unch117I () String)
(declare-fun unch217J () String)
(declare-fun ch17J () String)
(declare-fun unch117J () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun sc17G () Int)
(declare-fun sc17H () Int)
(declare-fun sc17I () Int)
(declare-fun sc17J () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun var18G () String)
(declare-fun var18H () String)
(declare-fun var18I () String)
(declare-fun var18J () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun unch218G () String)
(declare-fun ch18G () String)
(declare-fun unch118G () String)
(declare-fun unch218H () String)
(declare-fun ch18H () String)
(declare-fun unch118H () String)
(declare-fun unch218I () String)
(declare-fun ch18I () String)
(declare-fun unch118I () String)
(declare-fun unch218J () String)
(declare-fun ch18J () String)
(declare-fun unch118J () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun sc18G () Int)
(declare-fun sc18H () Int)
(declare-fun sc18I () Int)
(declare-fun sc18J () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun var19G () String)
(declare-fun var19H () String)
(declare-fun var19I () String)
(declare-fun var19J () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun unch219G () String)
(declare-fun ch19G () String)
(declare-fun unch119G () String)
(declare-fun unch219H () String)
(declare-fun ch19H () String)
(declare-fun unch119H () String)
(declare-fun unch219I () String)
(declare-fun ch19I () String)
(declare-fun unch119I () String)
(declare-fun unch219J () String)
(declare-fun ch19J () String)
(declare-fun unch119J () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun sc19G () Int)
(declare-fun sc19H () Int)
(declare-fun sc19I () Int)
(declare-fun sc19J () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun var20G () String)
(declare-fun var20H () String)
(declare-fun var20I () String)
(declare-fun var20J () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun unch220G () String)
(declare-fun ch20G () String)
(declare-fun unch120G () String)
(declare-fun unch220H () String)
(declare-fun ch20H () String)
(declare-fun unch120H () String)
(declare-fun unch220I () String)
(declare-fun ch20I () String)
(declare-fun unch120I () String)
(declare-fun unch220J () String)
(declare-fun ch20J () String)
(declare-fun unch120J () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun sc20G () Int)
(declare-fun sc20H () Int)
(declare-fun sc20I () Int)
(declare-fun sc20J () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun var21G () String)
(declare-fun var21H () String)
(declare-fun var21I () String)
(declare-fun var21J () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun unch221G () String)
(declare-fun ch21G () String)
(declare-fun unch121G () String)
(declare-fun unch221H () String)
(declare-fun ch21H () String)
(declare-fun unch121H () String)
(declare-fun unch221I () String)
(declare-fun ch21I () String)
(declare-fun unch121I () String)
(declare-fun unch221J () String)
(declare-fun ch21J () String)
(declare-fun unch121J () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun sc21G () Int)
(declare-fun sc21H () Int)
(declare-fun sc21I () Int)
(declare-fun sc21J () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun var22G () String)
(declare-fun var22H () String)
(declare-fun var22I () String)
(declare-fun var22J () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun unch222G () String)
(declare-fun ch22G () String)
(declare-fun unch122G () String)
(declare-fun unch222H () String)
(declare-fun ch22H () String)
(declare-fun unch122H () String)
(declare-fun unch222I () String)
(declare-fun ch22I () String)
(declare-fun unch122I () String)
(declare-fun unch222J () String)
(declare-fun ch22J () String)
(declare-fun unch122J () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun sc22G () Int)
(declare-fun sc22H () Int)
(declare-fun sc22I () Int)
(declare-fun sc22J () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun var23G () String)
(declare-fun var23H () String)
(declare-fun var23I () String)
(declare-fun var23J () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun unch223G () String)
(declare-fun ch23G () String)
(declare-fun unch123G () String)
(declare-fun unch223H () String)
(declare-fun ch23H () String)
(declare-fun unch123H () String)
(declare-fun unch223I () String)
(declare-fun ch23I () String)
(declare-fun unch123I () String)
(declare-fun unch223J () String)
(declare-fun ch23J () String)
(declare-fun unch123J () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun sc23G () Int)
(declare-fun sc23H () Int)
(declare-fun sc23I () Int)
(declare-fun sc23J () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun var24G () String)
(declare-fun var24H () String)
(declare-fun var24I () String)
(declare-fun var24J () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun unch224G () String)
(declare-fun ch24G () String)
(declare-fun unch124G () String)
(declare-fun unch224H () String)
(declare-fun ch24H () String)
(declare-fun unch124H () String)
(declare-fun unch224I () String)
(declare-fun ch24I () String)
(declare-fun unch124I () String)
(declare-fun unch224J () String)
(declare-fun ch24J () String)
(declare-fun unch124J () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun sc24G () Int)
(declare-fun sc24H () Int)
(declare-fun sc24I () Int)
(declare-fun sc24J () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun var25G () String)
(declare-fun var25H () String)
(declare-fun var25I () String)
(declare-fun var25J () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun unch225G () String)
(declare-fun ch25G () String)
(declare-fun unch125G () String)
(declare-fun unch225H () String)
(declare-fun ch25H () String)
(declare-fun unch125H () String)
(declare-fun unch225I () String)
(declare-fun ch25I () String)
(declare-fun unch125I () String)
(declare-fun unch225J () String)
(declare-fun ch25J () String)
(declare-fun unch125J () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun sc25G () Int)
(declare-fun sc25H () Int)
(declare-fun sc25I () Int)
(declare-fun sc25J () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun var26G () String)
(declare-fun var26H () String)
(declare-fun var26I () String)
(declare-fun var26J () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun unch226G () String)
(declare-fun ch26G () String)
(declare-fun unch126G () String)
(declare-fun unch226H () String)
(declare-fun ch26H () String)
(declare-fun unch126H () String)
(declare-fun unch226I () String)
(declare-fun ch26I () String)
(declare-fun unch126I () String)
(declare-fun unch226J () String)
(declare-fun ch26J () String)
(declare-fun unch126J () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun sc26G () Int)
(declare-fun sc26H () Int)
(declare-fun sc26I () Int)
(declare-fun sc26J () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun var27G () String)
(declare-fun var27H () String)
(declare-fun var27I () String)
(declare-fun var27J () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun unch227G () String)
(declare-fun ch27G () String)
(declare-fun unch127G () String)
(declare-fun unch227H () String)
(declare-fun ch27H () String)
(declare-fun unch127H () String)
(declare-fun unch227I () String)
(declare-fun ch27I () String)
(declare-fun unch127I () String)
(declare-fun unch227J () String)
(declare-fun ch27J () String)
(declare-fun unch127J () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun sc27G () Int)
(declare-fun sc27H () Int)
(declare-fun sc27I () Int)
(declare-fun sc27J () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun var28G () String)
(declare-fun var28H () String)
(declare-fun var28I () String)
(declare-fun var28J () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun unch228G () String)
(declare-fun ch28G () String)
(declare-fun unch128G () String)
(declare-fun unch228H () String)
(declare-fun ch28H () String)
(declare-fun unch128H () String)
(declare-fun unch228I () String)
(declare-fun ch28I () String)
(declare-fun unch128I () String)
(declare-fun unch228J () String)
(declare-fun ch28J () String)
(declare-fun unch128J () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun sc28G () Int)
(declare-fun sc28H () Int)
(declare-fun sc28I () Int)
(declare-fun sc28J () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun var29G () String)
(declare-fun var29H () String)
(declare-fun var29I () String)
(declare-fun var29J () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun unch229G () String)
(declare-fun ch29G () String)
(declare-fun unch129G () String)
(declare-fun unch229H () String)
(declare-fun ch29H () String)
(declare-fun unch129H () String)
(declare-fun unch229I () String)
(declare-fun ch29I () String)
(declare-fun unch129I () String)
(declare-fun unch229J () String)
(declare-fun ch29J () String)
(declare-fun unch129J () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun sc29G () Int)
(declare-fun sc29H () Int)
(declare-fun sc29I () Int)
(declare-fun sc29J () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (<= (str.len var0I) 1))
(assert (<= (str.len var0J) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= (str.++ preI (str.++ stem0 sufI)) (str.++ unch10I (str.++ ch0I unch20I))))
(assert (= (str.++ preJ (str.++ stem0 sufJ)) (str.++ unch10J (str.++ ch0J unch20J))))
(assert (= "zub" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "zubam" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "zuboOi" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "zuXi" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (= (ite (= ch0I var0I) 0 1) sc0I))
(assert (= (ite (= ch0J var0J) 0 1) sc0J))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= sc0I 1))
(assert (<= sc0J 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (<= (str.len var1I) 1))
(assert (<= (str.len var1J) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= (str.++ preI (str.++ stem1 sufI)) (str.++ unch11I (str.++ ch1I unch21I))))
(assert (= (str.++ preJ (str.++ stem1 sufJ)) (str.++ unch11J (str.++ ch1J unch21J))))
(assert (= "sOit" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "sOitam" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "sOitoOi" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "sOiZi" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (= (ite (= ch1I var1I) 0 1) sc1I))
(assert (= (ite (= ch1J var1J) 0 1) sc1J))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= sc1I 1))
(assert (<= sc1J 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (<= (str.len var2I) 1))
(assert (<= (str.len var2J) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= (str.++ preI (str.++ stem2 sufI)) (str.++ unch12I (str.++ ch2I unch22I))))
(assert (= (str.++ preJ (str.++ stem2 sufJ)) (str.++ unch12J (str.++ ch2J unch22J))))
(assert (= "1aZ" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "1aZam" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "1ateOi" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "1ateOi" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (= (ite (= ch2I var2I) 0 1) sc2I))
(assert (= (ite (= ch2J var2J) 0 1) sc2J))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= sc2I 1))
(assert (<= sc2J 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (<= (str.len var3I) 1))
(assert (<= (str.len var3J) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= (str.++ preI (str.++ stem3 sufI)) (str.++ unch13I (str.++ ch3I unch23I))))
(assert (= (str.++ preJ (str.++ stem3 sufJ)) (str.++ unch13J (str.++ ch3J unch23J))))
(assert (= "ko2i3" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "koBe3am" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "koBeleOi" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "koBe3i" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (= (ite (= ch3I var3I) 0 1) sc3I))
(assert (= (ite (= ch3J var3J) 0 1) sc3J))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= sc3I 1))
(assert (<= sc3J 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (<= (str.len var4I) 1))
(assert (<= (str.len var4J) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= (str.++ preI (str.++ stem4 sufI)) (str.++ unch14I (str.++ ch4I unch24I))))
(assert (= (str.++ preJ (str.++ stem4 sufJ)) (str.++ unch14J (str.++ ch4J unch24J))))
(assert (= "zlo4ij" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "zlo4ijam" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "zlo4ijeOi" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "zlo4ijeOi" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (= (ite (= ch4I var4I) 0 1) sc4I))
(assert (= (ite (= ch4J var4J) 0 1) sc4J))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= sc4I 1))
(assert (<= sc4J 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (<= (str.len var5I) 1))
(assert (<= (str.len var5J) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= (str.++ preI (str.++ stem5 sufI)) (str.++ unch15I (str.++ ch5I unch25I))))
(assert (= (str.++ preJ (str.++ stem5 sufJ)) (str.++ unch15J (str.++ ch5J unch25J))))
(assert (= "5i6a7" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "5i6a7am" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "5i6aPeOi" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "5i6a7i" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (= (ite (= ch5I var5I) 0 1) sc5I))
(assert (= (ite (= ch5J var5J) 0 1) sc5J))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= sc5I 1))
(assert (<= sc5J 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (<= (str.len var6I) 1))
(assert (<= (str.len var6J) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= (str.++ preI (str.++ stem6 sufI)) (str.++ unch16I (str.++ ch6I unch26I))))
(assert (= (str.++ preJ (str.++ stem6 sufJ)) (str.++ unch16J (str.++ ch6J unch26J))))
(assert (= "korovaj" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "korovajam" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "korovajeOi" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "korovaji" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (= (ite (= ch6I var6I) 0 1) sc6I))
(assert (= (ite (= ch6J var6J) 0 1) sc6J))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (<= sc6I 1))
(assert (<= sc6J 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (<= (str.len var7G) 1))
(assert (<= (str.len var7H) 1))
(assert (<= (str.len var7I) 1))
(assert (<= (str.len var7J) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= (str.++ preG (str.++ stem7 sufG)) (str.++ unch17G (str.++ ch7G unch27G))))
(assert (= (str.++ preH (str.++ stem7 sufH)) (str.++ unch17H (str.++ ch7H unch27H))))
(assert (= (str.++ preI (str.++ stem7 sufI)) (str.++ unch17I (str.++ ch7I unch27I))))
(assert (= (str.++ preJ (str.++ stem7 sufJ)) (str.++ unch17J (str.++ ch7J unch27J))))
(assert (= "ka5i8" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "kame8am" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "kameneOi" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= "kame8i" (str.++ unch17D (str.++ var7D unch27D))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (= (ite (= ch7G var7G) 0 1) sc7G))
(assert (= (ite (= ch7H var7H) 0 1) sc7H))
(assert (= (ite (= ch7I var7I) 0 1) sc7I))
(assert (= (ite (= ch7J var7J) 0 1) sc7J))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= sc7G 1))
(assert (<= sc7H 1))
(assert (<= sc7I 1))
(assert (<= sc7J 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (<= (str.len var8G) 1))
(assert (<= (str.len var8H) 1))
(assert (<= (str.len var8I) 1))
(assert (<= (str.len var8J) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= (str.++ preG (str.++ stem8 sufG)) (str.++ unch18G (str.++ ch8G unch28G))))
(assert (= (str.++ preH (str.++ stem8 sufH)) (str.++ unch18H (str.++ ch8H unch28H))))
(assert (= (str.++ preI (str.++ stem8 sufI)) (str.++ unch18I (str.++ ch8I unch28I))))
(assert (= (str.++ preJ (str.++ stem8 sufJ)) (str.++ unch18J (str.++ ch8J unch28J))))
(assert (= "5i4" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "5i4am" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "5ideOi" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= "5i4i" (str.++ unch18D (str.++ var8D unch28D))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (= (ite (= ch8G var8G) 0 1) sc8G))
(assert (= (ite (= ch8H var8H) 0 1) sc8H))
(assert (= (ite (= ch8I var8I) 0 1) sc8I))
(assert (= (ite (= ch8J var8J) 0 1) sc8J))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= sc8G 1))
(assert (<= sc8H 1))
(assert (<= sc8I 1))
(assert (<= sc8J 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (<= (str.len var9G) 1))
(assert (<= (str.len var9H) 1))
(assert (<= (str.len var9I) 1))
(assert (<= (str.len var9J) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= (str.++ preG (str.++ stem9 sufG)) (str.++ unch19G (str.++ ch9G unch29G))))
(assert (= (str.++ preH (str.++ stem9 sufH)) (str.++ unch19H (str.++ ch9H unch29H))))
(assert (= (str.++ preI (str.++ stem9 sufI)) (str.++ unch19I (str.++ ch9I unch29I))))
(assert (= (str.++ preJ (str.++ stem9 sufJ)) (str.++ unch19J (str.++ ch9J unch29J))))
(assert (= "x3iw" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "x3ivam" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "x3ivoOi" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= "x3iOi" (str.++ unch19D (str.++ var9D unch29D))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (= (ite (= ch9G var9G) 0 1) sc9G))
(assert (= (ite (= ch9H var9H) 0 1) sc9H))
(assert (= (ite (= ch9I var9I) 0 1) sc9I))
(assert (= (ite (= ch9J var9J) 0 1) sc9J))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= sc9G 1))
(assert (<= sc9H 1))
(assert (<= sc9I 1))
(assert (<= sc9J 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (<= (str.len var10G) 1))
(assert (<= (str.len var10H) 1))
(assert (<= (str.len var10I) 1))
(assert (<= (str.len var10J) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= (str.++ preG (str.++ stem10 sufG)) (str.++ unch110G (str.++ ch10G unch210G))))
(assert (= (str.++ preH (str.++ stem10 sufH)) (str.++ unch110H (str.++ ch10H unch210H))))
(assert (= (str.++ preI (str.++ stem10 sufI)) (str.++ unch110I (str.++ ch10I unch210I))))
(assert (= (str.++ preJ (str.++ stem10 sufJ)) (str.++ unch110J (str.++ ch10J unch210J))))
(assert (= "holub" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "holubam" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "holuboOi" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= "holuXi" (str.++ unch110D (str.++ var10D unch210D))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (= (ite (= ch10G var10G) 0 1) sc10G))
(assert (= (ite (= ch10H var10H) 0 1) sc10H))
(assert (= (ite (= ch10I var10I) 0 1) sc10I))
(assert (= (ite (= ch10J var10J) 0 1) sc10J))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= sc10G 1))
(assert (<= sc10H 1))
(assert (<= sc10I 1))
(assert (<= sc10J 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (<= (str.len var11G) 1))
(assert (<= (str.len var11H) 1))
(assert (<= (str.len var11I) 1))
(assert (<= (str.len var11J) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= (str.++ preG (str.++ stem11 sufG)) (str.++ unch111G (str.++ ch11G unch211G))))
(assert (= (str.++ preH (str.++ stem11 sufH)) (str.++ unch111H (str.++ ch11H unch211H))))
(assert (= (str.++ preI (str.++ stem11 sufI)) (str.++ unch111I (str.++ ch11I unch211I))))
(assert (= (str.++ preJ (str.++ stem11 sufJ)) (str.++ unch111J (str.++ ch11J unch211J))))
(assert (= "6in" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "6inam" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "6inoOi" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= "6i8i" (str.++ unch111D (str.++ var11D unch211D))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (= (ite (= ch11G var11G) 0 1) sc11G))
(assert (= (ite (= ch11H var11H) 0 1) sc11H))
(assert (= (ite (= ch11I var11I) 0 1) sc11I))
(assert (= (ite (= ch11J var11J) 0 1) sc11J))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= sc11G 1))
(assert (<= sc11H 1))
(assert (<= sc11I 1))
(assert (<= sc11J 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (<= (str.len var12G) 1))
(assert (<= (str.len var12H) 1))
(assert (<= (str.len var12I) 1))
(assert (<= (str.len var12J) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= (str.++ preG (str.++ stem12 sufG)) (str.++ unch112G (str.++ ch12G unch212G))))
(assert (= (str.++ preH (str.++ stem12 sufH)) (str.++ unch112H (str.++ ch12H unch212H))))
(assert (= (str.++ preI (str.++ stem12 sufI)) (str.++ unch112I (str.++ ch12I unch212I))))
(assert (= (str.++ preJ (str.++ stem12 sufJ)) (str.++ unch112J (str.++ ch12J unch212J))))
(assert (= "leXi4" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "lebe4am" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "lebedeOi" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= "lebe4i" (str.++ unch112D (str.++ var12D unch212D))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (= (ite (= ch12G var12G) 0 1) sc12G))
(assert (= (ite (= ch12H var12H) 0 1) sc12H))
(assert (= (ite (= ch12I var12I) 0 1) sc12I))
(assert (= (ite (= ch12J var12J) 0 1) sc12J))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= sc12G 1))
(assert (<= sc12H 1))
(assert (<= sc12I 1))
(assert (<= sc12J 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (<= (str.len var13G) 1))
(assert (<= (str.len var13H) 1))
(assert (<= (str.len var13I) 1))
(assert (<= (str.len var13J) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= (str.++ preG (str.++ stem13 sufG)) (str.++ unch113G (str.++ ch13G unch213G))))
(assert (= (str.++ preH (str.++ stem13 sufH)) (str.++ unch113H (str.++ ch13H unch213H))))
(assert (= (str.++ preI (str.++ stem13 sufI)) (str.++ unch113I (str.++ ch13I unch213I))))
(assert (= (str.++ preJ (str.++ stem13 sufJ)) (str.++ unch113J (str.++ ch13J unch213J))))
(assert (= "su6id" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "su6idam" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "su6idoOi" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= "su6idoOi" (str.++ unch113E (str.++ var13E unch213E))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (= (ite (= ch13G var13G) 0 1) sc13G))
(assert (= (ite (= ch13H var13H) 0 1) sc13H))
(assert (= (ite (= ch13I var13I) 0 1) sc13I))
(assert (= (ite (= ch13J var13J) 0 1) sc13J))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= sc13G 1))
(assert (<= sc13H 1))
(assert (<= sc13I 1))
(assert (<= sc13J 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (<= (str.len var14G) 1))
(assert (<= (str.len var14H) 1))
(assert (<= (str.len var14I) 1))
(assert (<= (str.len var14J) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= (str.++ preG (str.++ stem14 sufG)) (str.++ unch114G (str.++ ch14G unch214G))))
(assert (= (str.++ preH (str.++ stem14 sufH)) (str.++ unch114H (str.++ ch14H unch214H))))
(assert (= (str.++ preI (str.++ stem14 sufI)) (str.++ unch114I (str.++ ch14I unch214I))))
(assert (= (str.++ preJ (str.++ stem14 sufJ)) (str.++ unch114J (str.++ ch14J unch214J))))
(assert (= "EoloOik" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "EoloOikam" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "EoloOikoOi" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= "EoloOikoOi" (str.++ unch114E (str.++ var14E unch214E))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (= (ite (= ch14G var14G) 0 1) sc14G))
(assert (= (ite (= ch14H var14H) 0 1) sc14H))
(assert (= (ite (= ch14I var14I) 0 1) sc14I))
(assert (= (ite (= ch14J var14J) 0 1) sc14J))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= sc14G 1))
(assert (<= sc14H 1))
(assert (<= sc14I 1))
(assert (<= sc14J 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (<= (str.len var15G) 1))
(assert (<= (str.len var15H) 1))
(assert (<= (str.len var15I) 1))
(assert (<= (str.len var15J) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= (str.++ preG (str.++ stem15 sufG)) (str.++ unch115G (str.++ ch15G unch215G))))
(assert (= (str.++ preH (str.++ stem15 sufH)) (str.++ unch115H (str.++ ch15H unch215H))))
(assert (= (str.++ preI (str.++ stem15 sufI)) (str.++ unch115I (str.++ ch15I unch215I))))
(assert (= (str.++ preJ (str.++ stem15 sufJ)) (str.++ unch115J (str.++ ch15J unch215J))))
(assert (= "3id" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "ledam" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "ledoOi" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= "le4i" (str.++ unch115D (str.++ var15D unch215D))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (= (ite (= ch15G var15G) 0 1) sc15G))
(assert (= (ite (= ch15H var15H) 0 1) sc15H))
(assert (= (ite (= ch15I var15I) 0 1) sc15I))
(assert (= (ite (= ch15J var15J) 0 1) sc15J))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= sc15G 1))
(assert (<= sc15H 1))
(assert (<= sc15I 1))
(assert (<= sc15J 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (<= (str.len var16G) 1))
(assert (<= (str.len var16H) 1))
(assert (<= (str.len var16I) 1))
(assert (<= (str.len var16J) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= (str.++ preG (str.++ stem16 sufG)) (str.++ unch116G (str.++ ch16G unch216G))))
(assert (= (str.++ preH (str.++ stem16 sufH)) (str.++ unch116H (str.++ ch16H unch216H))))
(assert (= (str.++ preI (str.++ stem16 sufI)) (str.++ unch116I (str.++ ch16I unch216I))))
(assert (= (str.++ preJ (str.++ stem16 sufJ)) (str.++ unch116J (str.++ ch16J unch216J))))
(assert (= "bi3" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bo3am" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "boleOi" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= "bo3i" (str.++ unch116D (str.++ var16D unch216D))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (= (ite (= ch16G var16G) 0 1) sc16G))
(assert (= (ite (= ch16H var16H) 0 1) sc16H))
(assert (= (ite (= ch16I var16I) 0 1) sc16I))
(assert (= (ite (= ch16J var16J) 0 1) sc16J))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= sc16G 1))
(assert (<= sc16H 1))
(assert (<= sc16I 1))
(assert (<= sc16J 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (<= (str.len var17G) 1))
(assert (<= (str.len var17H) 1))
(assert (<= (str.len var17I) 1))
(assert (<= (str.len var17J) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= (str.++ preG (str.++ stem17 sufG)) (str.++ unch117G (str.++ ch17G unch217G))))
(assert (= (str.++ preH (str.++ stem17 sufH)) (str.++ unch117H (str.++ ch17H unch217H))))
(assert (= (str.++ preI (str.++ stem17 sufI)) (str.++ unch117I (str.++ ch17I unch217I))))
(assert (= (str.++ preJ (str.++ stem17 sufJ)) (str.++ unch117J (str.++ ch17J unch217J))))
(assert (= "riw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "rovam" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "rovoOi" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= "roOi" (str.++ unch117D (str.++ var17D unch217D))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (= (ite (= ch17G var17G) 0 1) sc17G))
(assert (= (ite (= ch17H var17H) 0 1) sc17H))
(assert (= (ite (= ch17I var17I) 0 1) sc17I))
(assert (= (ite (= ch17J var17J) 0 1) sc17J))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= sc17G 1))
(assert (<= sc17H 1))
(assert (<= sc17I 1))
(assert (<= sc17J 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (<= (str.len var18G) 1))
(assert (<= (str.len var18H) 1))
(assert (<= (str.len var18I) 1))
(assert (<= (str.len var18J) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= (str.++ preG (str.++ stem18 sufG)) (str.++ unch118G (str.++ ch18G unch218G))))
(assert (= (str.++ preH (str.++ stem18 sufH)) (str.++ unch118H (str.++ ch18H unch218H))))
(assert (= (str.++ preI (str.++ stem18 sufI)) (str.++ unch118I (str.++ ch18I unch218I))))
(assert (= (str.++ preJ (str.++ stem18 sufJ)) (str.++ unch118J (str.++ ch18J unch218J))))
(assert (= "stiw" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "stolam" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "stoloOi" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= "sto3i" (str.++ unch118D (str.++ var18D unch218D))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (= (ite (= ch18G var18G) 0 1) sc18G))
(assert (= (ite (= ch18H var18H) 0 1) sc18H))
(assert (= (ite (= ch18I var18I) 0 1) sc18I))
(assert (= (ite (= ch18J var18J) 0 1) sc18J))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= sc18G 1))
(assert (<= sc18H 1))
(assert (<= sc18I 1))
(assert (<= sc18J 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (<= (str.len var19G) 1))
(assert (<= (str.len var19H) 1))
(assert (<= (str.len var19I) 1))
(assert (<= (str.len var19J) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= (str.++ preG (str.++ stem19 sufG)) (str.++ unch119G (str.++ ch19G unch219G))))
(assert (= (str.++ preH (str.++ stem19 sufH)) (str.++ unch119H (str.++ ch19H unch219H))))
(assert (= (str.++ preI (str.++ stem19 sufI)) (str.++ unch119I (str.++ ch19I unch219I))))
(assert (= (str.++ preJ (str.++ stem19 sufJ)) (str.++ unch119J (str.++ ch19J unch219J))))
(assert (= "4id" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "4idam" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "4idoOi" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= "4idoOi" (str.++ unch119E (str.++ var19E unch219E))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (= (ite (= ch19G var19G) 0 1) sc19G))
(assert (= (ite (= ch19H var19H) 0 1) sc19H))
(assert (= (ite (= ch19I var19I) 0 1) sc19I))
(assert (= (ite (= ch19J var19J) 0 1) sc19J))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= sc19G 1))
(assert (<= sc19H 1))
(assert (<= sc19I 1))
(assert (<= sc19J 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (<= (str.len var20G) 1))
(assert (<= (str.len var20H) 1))
(assert (<= (str.len var20I) 1))
(assert (<= (str.len var20J) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= (str.++ preG (str.++ stem20 sufG)) (str.++ unch120G (str.++ ch20G unch220G))))
(assert (= (str.++ preH (str.++ stem20 sufH)) (str.++ unch120H (str.++ ch20H unch220H))))
(assert (= (str.++ preI (str.++ stem20 sufI)) (str.++ unch120I (str.++ ch20I unch220I))))
(assert (= (str.++ preJ (str.++ stem20 sufJ)) (str.++ unch120J (str.++ ch20J unch220J))))
(assert (= "3it" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "3otam" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "3otoOi" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= "3oZi" (str.++ unch120D (str.++ var20D unch220D))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (= (ite (= ch20G var20G) 0 1) sc20G))
(assert (= (ite (= ch20H var20H) 0 1) sc20H))
(assert (= (ite (= ch20I var20I) 0 1) sc20I))
(assert (= (ite (= ch20J var20J) 0 1) sc20J))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= sc20G 1))
(assert (<= sc20H 1))
(assert (<= sc20I 1))
(assert (<= sc20J 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (<= (str.len var21G) 1))
(assert (<= (str.len var21H) 1))
(assert (<= (str.len var21I) 1))
(assert (<= (str.len var21J) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= (str.++ preG (str.++ stem21 sufG)) (str.++ unch121G (str.++ ch21G unch221G))))
(assert (= (str.++ preH (str.++ stem21 sufH)) (str.++ unch121H (str.++ ch21H unch221H))))
(assert (= (str.++ preI (str.++ stem21 sufI)) (str.++ unch121I (str.++ ch21I unch221I))))
(assert (= (str.++ preJ (str.++ stem21 sufJ)) (str.++ unch121J (str.++ ch21J unch221J))))
(assert (= "mist" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "mostam" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "mostoOi" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= "mosZi" (str.++ unch121D (str.++ var21D unch221D))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (= (ite (= ch21G var21G) 0 1) sc21G))
(assert (= (ite (= ch21H var21H) 0 1) sc21H))
(assert (= (ite (= ch21I var21I) 0 1) sc21I))
(assert (= (ite (= ch21J var21J) 0 1) sc21J))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= sc21G 1))
(assert (<= sc21H 1))
(assert (<= sc21I 1))
(assert (<= sc21J 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (<= (str.len var22G) 1))
(assert (<= (str.len var22H) 1))
(assert (<= (str.len var22I) 1))
(assert (<= (str.len var22J) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= (str.++ preG (str.++ stem22 sufG)) (str.++ unch122G (str.++ ch22G unch222G))))
(assert (= (str.++ preH (str.++ stem22 sufH)) (str.++ unch122H (str.++ ch22H unch222H))))
(assert (= (str.++ preI (str.++ stem22 sufI)) (str.++ unch122I (str.++ ch22I unch222I))))
(assert (= (str.++ preJ (str.++ stem22 sufJ)) (str.++ unch122J (str.++ ch22J unch222J))))
(assert (= "veEir" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "veEoram" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "veEoroOi" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= "veEo9i" (str.++ unch122D (str.++ var22D unch222D))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (= (ite (= ch22G var22G) 0 1) sc22G))
(assert (= (ite (= ch22H var22H) 0 1) sc22H))
(assert (= (ite (= ch22I var22I) 0 1) sc22I))
(assert (= (ite (= ch22J var22J) 0 1) sc22J))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= sc22G 1))
(assert (<= sc22H 1))
(assert (<= sc22I 1))
(assert (<= sc22J 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (<= (str.len var23G) 1))
(assert (<= (str.len var23H) 1))
(assert (<= (str.len var23I) 1))
(assert (<= (str.len var23J) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= (str.++ preG (str.++ stem23 sufG)) (str.++ unch123G (str.++ ch23G unch223G))))
(assert (= (str.++ preH (str.++ stem23 sufH)) (str.++ unch123H (str.++ ch23H unch223H))))
(assert (= (str.++ preI (str.++ stem23 sufI)) (str.++ unch123I (str.++ ch23I unch223I))))
(assert (= (str.++ preJ (str.++ stem23 sufJ)) (str.++ unch123J (str.++ ch23J unch223J))))
(assert (= "Zilo" (str.++ unch123F (str.++ var23F unch223F))))
(assert (= "Zila" (str.++ unch123G (str.++ var23G unch223G))))
(assert (= "Zilu" (str.++ unch123H (str.++ var23H unch223H))))
(assert (= "Zi3i" (str.++ unch123I (str.++ var23I unch223I))))
(assert (= "Ziw" (str.++ unch123J (str.++ var23J unch223J))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (= (ite (= ch23G var23G) 0 1) sc23G))
(assert (= (ite (= ch23H var23H) 0 1) sc23H))
(assert (= (ite (= ch23I var23I) 0 1) sc23I))
(assert (= (ite (= ch23J var23J) 0 1) sc23J))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= sc23G 1))
(assert (<= sc23H 1))
(assert (<= sc23I 1))
(assert (<= sc23J 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (<= (str.len var24G) 1))
(assert (<= (str.len var24H) 1))
(assert (<= (str.len var24I) 1))
(assert (<= (str.len var24J) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= (str.++ preG (str.++ stem24 sufG)) (str.++ unch124G (str.++ ch24G unch224G))))
(assert (= (str.++ preH (str.++ stem24 sufH)) (str.++ unch124H (str.++ ch24H unch224H))))
(assert (= (str.++ preI (str.++ stem24 sufI)) (str.++ unch124I (str.++ ch24I unch224I))))
(assert (= (str.++ preJ (str.++ stem24 sufJ)) (str.++ unch124J (str.++ ch24J unch224J))))
(assert (= "koleso" (str.++ unch124F (str.++ var24F unch224F))))
(assert (= "kolesa" (str.++ unch124G (str.++ var24G unch224G))))
(assert (= "kolesu" (str.++ unch124H (str.++ var24H unch224H))))
(assert (= "kole6i" (str.++ unch124I (str.++ var24I unch224I))))
(assert (= "ko3is" (str.++ unch124J (str.++ var24J unch224J))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (= (ite (= ch24G var24G) 0 1) sc24G))
(assert (= (ite (= ch24H var24H) 0 1) sc24H))
(assert (= (ite (= ch24I var24I) 0 1) sc24I))
(assert (= (ite (= ch24J var24J) 0 1) sc24J))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= sc24G 1))
(assert (<= sc24H 1))
(assert (<= sc24I 1))
(assert (<= sc24J 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (<= (str.len var25G) 1))
(assert (<= (str.len var25H) 1))
(assert (<= (str.len var25I) 1))
(assert (<= (str.len var25J) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= (str.++ preG (str.++ stem25 sufG)) (str.++ unch125G (str.++ ch25G unch225G))))
(assert (= (str.++ preH (str.++ stem25 sufH)) (str.++ unch125H (str.++ ch25H unch225H))))
(assert (= (str.++ preI (str.++ stem25 sufI)) (str.++ unch125I (str.++ ch25I unch225I))))
(assert (= (str.++ preJ (str.++ stem25 sufJ)) (str.++ unch125J (str.++ ch25J unch225J))))
(assert (= "ozero" (str.++ unch125F (str.++ var25F unch225F))))
(assert (= "ozera" (str.++ unch125G (str.++ var25G unch225G))))
(assert (= "ozeru" (str.++ unch125H (str.++ var25H unch225H))))
(assert (= "oze9i" (str.++ unch125I (str.++ var25I unch225I))))
(assert (= "o1ir" (str.++ unch125J (str.++ var25J unch225J))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (= (ite (= ch25G var25G) 0 1) sc25G))
(assert (= (ite (= ch25H var25H) 0 1) sc25H))
(assert (= (ite (= ch25I var25I) 0 1) sc25I))
(assert (= (ite (= ch25J var25J) 0 1) sc25J))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= sc25G 1))
(assert (<= sc25H 1))
(assert (<= sc25I 1))
(assert (<= sc25J 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (<= (str.len var26G) 1))
(assert (<= (str.len var26H) 1))
(assert (<= (str.len var26I) 1))
(assert (<= (str.len var26J) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= (str.++ preG (str.++ stem26 sufG)) (str.++ unch126G (str.++ ch26G unch226G))))
(assert (= (str.++ preH (str.++ stem26 sufH)) (str.++ unch126H (str.++ ch26H unch226H))))
(assert (= (str.++ preI (str.++ stem26 sufI)) (str.++ unch126I (str.++ ch26I unch226I))))
(assert (= (str.++ preJ (str.++ stem26 sufJ)) (str.++ unch126J (str.++ ch26J unch226J))))
(assert (= "selo" (str.++ unch126F (str.++ var26F unch226F))))
(assert (= "sela" (str.++ unch126G (str.++ var26G unch226G))))
(assert (= "selu" (str.++ unch126H (str.++ var26H unch226H))))
(assert (= "se3i" (str.++ unch126I (str.++ var26I unch226I))))
(assert (= "6iw" (str.++ unch126J (str.++ var26J unch226J))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (= (ite (= ch26G var26G) 0 1) sc26G))
(assert (= (ite (= ch26H var26H) 0 1) sc26H))
(assert (= (ite (= ch26I var26I) 0 1) sc26I))
(assert (= (ite (= ch26J var26J) 0 1) sc26J))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= sc26G 1))
(assert (<= sc26H 1))
(assert (<= sc26I 1))
(assert (<= sc26J 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (<= (str.len var27G) 1))
(assert (<= (str.len var27H) 1))
(assert (<= (str.len var27I) 1))
(assert (<= (str.len var27J) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= (str.++ preG (str.++ stem27 sufG)) (str.++ unch127G (str.++ ch27G unch227G))))
(assert (= (str.++ preH (str.++ stem27 sufH)) (str.++ unch127H (str.++ ch27H unch227H))))
(assert (= (str.++ preI (str.++ stem27 sufI)) (str.++ unch127I (str.++ ch27I unch227I))))
(assert (= (str.++ preJ (str.++ stem27 sufJ)) (str.++ unch127J (str.++ ch27J unch227J))))
(assert (= "pole" (str.++ unch127F (str.++ var27F unch227F))))
(assert (= "po3a" (str.++ unch127G (str.++ var27G unch227G))))
(assert (= "po3u" (str.++ unch127H (str.++ var27H unch227H))))
(assert (= "po3i" (str.++ unch127I (str.++ var27I unch227I))))
(assert (= "pi3" (str.++ unch127J (str.++ var27J unch227J))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (= (ite (= ch27G var27G) 0 1) sc27G))
(assert (= (ite (= ch27H var27H) 0 1) sc27H))
(assert (= (ite (= ch27I var27I) 0 1) sc27I))
(assert (= (ite (= ch27J var27J) 0 1) sc27J))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= sc27G 1))
(assert (<= sc27H 1))
(assert (<= sc27I 1))
(assert (<= sc27J 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (<= (str.len var28G) 1))
(assert (<= (str.len var28H) 1))
(assert (<= (str.len var28I) 1))
(assert (<= (str.len var28J) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= (str.++ preG (str.++ stem28 sufG)) (str.++ unch128G (str.++ ch28G unch228G))))
(assert (= (str.++ preH (str.++ stem28 sufH)) (str.++ unch128H (str.++ ch28H unch228H))))
(assert (= (str.++ preI (str.++ stem28 sufI)) (str.++ unch128I (str.++ ch28I unch228I))))
(assert (= (str.++ preJ (str.++ stem28 sufJ)) (str.++ unch128J (str.++ ch28J unch228J))))
(assert (= "slovo" (str.++ unch128F (str.++ var28F unch228F))))
(assert (= "slova" (str.++ unch128G (str.++ var28G unch228G))))
(assert (= "slovu" (str.++ unch128H (str.++ var28H unch228H))))
(assert (= "sloOi" (str.++ unch128I (str.++ var28I unch228I))))
(assert (= "sliw" (str.++ unch128J (str.++ var28J unch228J))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (= (ite (= ch28G var28G) 0 1) sc28G))
(assert (= (ite (= ch28H var28H) 0 1) sc28H))
(assert (= (ite (= ch28I var28I) 0 1) sc28I))
(assert (= (ite (= ch28J var28J) 0 1) sc28J))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= sc28G 1))
(assert (<= sc28H 1))
(assert (<= sc28I 1))
(assert (<= sc28J 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (<= (str.len var29G) 1))
(assert (<= (str.len var29H) 1))
(assert (<= (str.len var29I) 1))
(assert (<= (str.len var29J) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= (str.++ preG (str.++ stem29 sufG)) (str.++ unch129G (str.++ ch29G unch229G))))
(assert (= (str.++ preH (str.++ stem29 sufH)) (str.++ unch129H (str.++ ch29H unch229H))))
(assert (= (str.++ preI (str.++ stem29 sufI)) (str.++ unch129I (str.++ ch29I unch229I))))
(assert (= (str.++ preJ (str.++ stem29 sufJ)) (str.++ unch129J (str.++ ch29J unch229J))))
(assert (= "more" (str.++ unch129F (str.++ var29F unch229F))))
(assert (= "mo9a" (str.++ unch129G (str.++ var29G unch229G))))
(assert (= "mo9u" (str.++ unch129H (str.++ var29H unch229H))))
(assert (= "mo9i" (str.++ unch129I (str.++ var29I unch229I))))
(assert (= "mi9" (str.++ unch129J (str.++ var29J unch229J))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (= (ite (= ch29G var29G) 0 1) sc29G))
(assert (= (ite (= ch29H var29H) 0 1) sc29H))
(assert (= (ite (= ch29I var29I) 0 1) sc29I))
(assert (= (ite (= ch29J var29J) 0 1) sc29J))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= sc29G 1))
(assert (<= sc29H 1))
(assert (<= sc29I 1))
(assert (<= sc29J 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      sc0I
      sc0J
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      sc1I
      sc1J
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      sc2I
      sc2J
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      sc3I
      sc3J
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      sc4I
      sc4J
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      sc5I
      sc5J
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H
      sc6I
      sc6J
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      sc7G
      sc7H
      sc7I
      sc7J
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      sc8G
      sc8H
      sc8I
      sc8J
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      sc9G
      sc9H
      sc9I
      sc9J
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      sc10G
      sc10H
      sc10I
      sc10J
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      sc11G
      sc11H
      sc11I
      sc11J
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      sc12G
      sc12H
      sc12I
      sc12J
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      sc13G
      sc13H
      sc13I
      sc13J
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      sc14G
      sc14H
      sc14I
      sc14J
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      sc15G
      sc15H
      sc15I
      sc15J
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      sc16G
      sc16H
      sc16I
      sc16J
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      sc17G
      sc17H
      sc17I
      sc17J
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      sc18G
      sc18H
      sc18I
      sc18J
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      sc19G
      sc19H
      sc19I
      sc19J
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      sc20G
      sc20H
      sc20I
      sc20J
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      sc21G
      sc21H
      sc21I
      sc21J
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      sc22G
      sc22H
      sc22I
      sc22J
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      sc23G
      sc23H
      sc23I
      sc23J
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      sc24G
      sc24H
      sc24I
      sc24J
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      sc25G
      sc25H
      sc25I
      sc25J
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      sc26G
      sc26H
      sc26I
      sc26J
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      sc27G
      sc27H
      sc27I
      sc27J
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      sc28G
      sc28H
      sc28I
      sc28J
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      sc29G
      sc29H
      sc29I
      sc29J)
   15))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun var0I () String)
(declare-fun var0J () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun unch20I () String)
(declare-fun ch0I () String)
(declare-fun unch10I () String)
(declare-fun sufI () String)
(declare-fun preI () String)
(declare-fun unch20J () String)
(declare-fun ch0J () String)
(declare-fun unch10J () String)
(declare-fun sufJ () String)
(declare-fun preJ () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun sc0I () Int)
(declare-fun sc0J () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun var1I () String)
(declare-fun var1J () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun unch21I () String)
(declare-fun ch1I () String)
(declare-fun unch11I () String)
(declare-fun unch21J () String)
(declare-fun ch1J () String)
(declare-fun unch11J () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun sc1I () Int)
(declare-fun sc1J () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun var2I () String)
(declare-fun var2J () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun unch22I () String)
(declare-fun ch2I () String)
(declare-fun unch12I () String)
(declare-fun unch22J () String)
(declare-fun ch2J () String)
(declare-fun unch12J () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun sc2I () Int)
(declare-fun sc2J () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun var3I () String)
(declare-fun var3J () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun unch23I () String)
(declare-fun ch3I () String)
(declare-fun unch13I () String)
(declare-fun unch23J () String)
(declare-fun ch3J () String)
(declare-fun unch13J () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun sc3I () Int)
(declare-fun sc3J () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun var4I () String)
(declare-fun var4J () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun unch24I () String)
(declare-fun ch4I () String)
(declare-fun unch14I () String)
(declare-fun unch24J () String)
(declare-fun ch4J () String)
(declare-fun unch14J () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun sc4I () Int)
(declare-fun sc4J () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun var5I () String)
(declare-fun var5J () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun unch25I () String)
(declare-fun ch5I () String)
(declare-fun unch15I () String)
(declare-fun unch25J () String)
(declare-fun ch5J () String)
(declare-fun unch15J () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun sc5I () Int)
(declare-fun sc5J () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun var6I () String)
(declare-fun var6J () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun unch26I () String)
(declare-fun ch6I () String)
(declare-fun unch16I () String)
(declare-fun unch26J () String)
(declare-fun ch6J () String)
(declare-fun unch16J () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(declare-fun sc6I () Int)
(declare-fun sc6J () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun var7G () String)
(declare-fun var7H () String)
(declare-fun var7I () String)
(declare-fun var7J () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun unch27G () String)
(declare-fun ch7G () String)
(declare-fun unch17G () String)
(declare-fun unch27H () String)
(declare-fun ch7H () String)
(declare-fun unch17H () String)
(declare-fun unch27I () String)
(declare-fun ch7I () String)
(declare-fun unch17I () String)
(declare-fun unch27J () String)
(declare-fun ch7J () String)
(declare-fun unch17J () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun sc7G () Int)
(declare-fun sc7H () Int)
(declare-fun sc7I () Int)
(declare-fun sc7J () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun var8G () String)
(declare-fun var8H () String)
(declare-fun var8I () String)
(declare-fun var8J () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun unch28G () String)
(declare-fun ch8G () String)
(declare-fun unch18G () String)
(declare-fun unch28H () String)
(declare-fun ch8H () String)
(declare-fun unch18H () String)
(declare-fun unch28I () String)
(declare-fun ch8I () String)
(declare-fun unch18I () String)
(declare-fun unch28J () String)
(declare-fun ch8J () String)
(declare-fun unch18J () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun sc8G () Int)
(declare-fun sc8H () Int)
(declare-fun sc8I () Int)
(declare-fun sc8J () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun var9G () String)
(declare-fun var9H () String)
(declare-fun var9I () String)
(declare-fun var9J () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun unch29G () String)
(declare-fun ch9G () String)
(declare-fun unch19G () String)
(declare-fun unch29H () String)
(declare-fun ch9H () String)
(declare-fun unch19H () String)
(declare-fun unch29I () String)
(declare-fun ch9I () String)
(declare-fun unch19I () String)
(declare-fun unch29J () String)
(declare-fun ch9J () String)
(declare-fun unch19J () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun sc9G () Int)
(declare-fun sc9H () Int)
(declare-fun sc9I () Int)
(declare-fun sc9J () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun var10G () String)
(declare-fun var10H () String)
(declare-fun var10I () String)
(declare-fun var10J () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun unch210G () String)
(declare-fun ch10G () String)
(declare-fun unch110G () String)
(declare-fun unch210H () String)
(declare-fun ch10H () String)
(declare-fun unch110H () String)
(declare-fun unch210I () String)
(declare-fun ch10I () String)
(declare-fun unch110I () String)
(declare-fun unch210J () String)
(declare-fun ch10J () String)
(declare-fun unch110J () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun sc10G () Int)
(declare-fun sc10H () Int)
(declare-fun sc10I () Int)
(declare-fun sc10J () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun var11G () String)
(declare-fun var11H () String)
(declare-fun var11I () String)
(declare-fun var11J () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun unch211G () String)
(declare-fun ch11G () String)
(declare-fun unch111G () String)
(declare-fun unch211H () String)
(declare-fun ch11H () String)
(declare-fun unch111H () String)
(declare-fun unch211I () String)
(declare-fun ch11I () String)
(declare-fun unch111I () String)
(declare-fun unch211J () String)
(declare-fun ch11J () String)
(declare-fun unch111J () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun sc11G () Int)
(declare-fun sc11H () Int)
(declare-fun sc11I () Int)
(declare-fun sc11J () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun var12G () String)
(declare-fun var12H () String)
(declare-fun var12I () String)
(declare-fun var12J () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun unch212G () String)
(declare-fun ch12G () String)
(declare-fun unch112G () String)
(declare-fun unch212H () String)
(declare-fun ch12H () String)
(declare-fun unch112H () String)
(declare-fun unch212I () String)
(declare-fun ch12I () String)
(declare-fun unch112I () String)
(declare-fun unch212J () String)
(declare-fun ch12J () String)
(declare-fun unch112J () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun sc12G () Int)
(declare-fun sc12H () Int)
(declare-fun sc12I () Int)
(declare-fun sc12J () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun var13G () String)
(declare-fun var13H () String)
(declare-fun var13I () String)
(declare-fun var13J () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun unch213G () String)
(declare-fun ch13G () String)
(declare-fun unch113G () String)
(declare-fun unch213H () String)
(declare-fun ch13H () String)
(declare-fun unch113H () String)
(declare-fun unch213I () String)
(declare-fun ch13I () String)
(declare-fun unch113I () String)
(declare-fun unch213J () String)
(declare-fun ch13J () String)
(declare-fun unch113J () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun sc13G () Int)
(declare-fun sc13H () Int)
(declare-fun sc13I () Int)
(declare-fun sc13J () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun var14G () String)
(declare-fun var14H () String)
(declare-fun var14I () String)
(declare-fun var14J () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun unch214G () String)
(declare-fun ch14G () String)
(declare-fun unch114G () String)
(declare-fun unch214H () String)
(declare-fun ch14H () String)
(declare-fun unch114H () String)
(declare-fun unch214I () String)
(declare-fun ch14I () String)
(declare-fun unch114I () String)
(declare-fun unch214J () String)
(declare-fun ch14J () String)
(declare-fun unch114J () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun sc14G () Int)
(declare-fun sc14H () Int)
(declare-fun sc14I () Int)
(declare-fun sc14J () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun var15G () String)
(declare-fun var15H () String)
(declare-fun var15I () String)
(declare-fun var15J () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun unch215G () String)
(declare-fun ch15G () String)
(declare-fun unch115G () String)
(declare-fun unch215H () String)
(declare-fun ch15H () String)
(declare-fun unch115H () String)
(declare-fun unch215I () String)
(declare-fun ch15I () String)
(declare-fun unch115I () String)
(declare-fun unch215J () String)
(declare-fun ch15J () String)
(declare-fun unch115J () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun sc15G () Int)
(declare-fun sc15H () Int)
(declare-fun sc15I () Int)
(declare-fun sc15J () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun var16G () String)
(declare-fun var16H () String)
(declare-fun var16I () String)
(declare-fun var16J () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun unch216G () String)
(declare-fun ch16G () String)
(declare-fun unch116G () String)
(declare-fun unch216H () String)
(declare-fun ch16H () String)
(declare-fun unch116H () String)
(declare-fun unch216I () String)
(declare-fun ch16I () String)
(declare-fun unch116I () String)
(declare-fun unch216J () String)
(declare-fun ch16J () String)
(declare-fun unch116J () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun sc16G () Int)
(declare-fun sc16H () Int)
(declare-fun sc16I () Int)
(declare-fun sc16J () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun var17G () String)
(declare-fun var17H () String)
(declare-fun var17I () String)
(declare-fun var17J () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun unch217G () String)
(declare-fun ch17G () String)
(declare-fun unch117G () String)
(declare-fun unch217H () String)
(declare-fun ch17H () String)
(declare-fun unch117H () String)
(declare-fun unch217I () String)
(declare-fun ch17I () String)
(declare-fun unch117I () String)
(declare-fun unch217J () String)
(declare-fun ch17J () String)
(declare-fun unch117J () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun sc17G () Int)
(declare-fun sc17H () Int)
(declare-fun sc17I () Int)
(declare-fun sc17J () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun var18G () String)
(declare-fun var18H () String)
(declare-fun var18I () String)
(declare-fun var18J () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun unch218G () String)
(declare-fun ch18G () String)
(declare-fun unch118G () String)
(declare-fun unch218H () String)
(declare-fun ch18H () String)
(declare-fun unch118H () String)
(declare-fun unch218I () String)
(declare-fun ch18I () String)
(declare-fun unch118I () String)
(declare-fun unch218J () String)
(declare-fun ch18J () String)
(declare-fun unch118J () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun sc18G () Int)
(declare-fun sc18H () Int)
(declare-fun sc18I () Int)
(declare-fun sc18J () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun var19G () String)
(declare-fun var19H () String)
(declare-fun var19I () String)
(declare-fun var19J () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun unch219G () String)
(declare-fun ch19G () String)
(declare-fun unch119G () String)
(declare-fun unch219H () String)
(declare-fun ch19H () String)
(declare-fun unch119H () String)
(declare-fun unch219I () String)
(declare-fun ch19I () String)
(declare-fun unch119I () String)
(declare-fun unch219J () String)
(declare-fun ch19J () String)
(declare-fun unch119J () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun sc19G () Int)
(declare-fun sc19H () Int)
(declare-fun sc19I () Int)
(declare-fun sc19J () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun var20G () String)
(declare-fun var20H () String)
(declare-fun var20I () String)
(declare-fun var20J () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun unch220G () String)
(declare-fun ch20G () String)
(declare-fun unch120G () String)
(declare-fun unch220H () String)
(declare-fun ch20H () String)
(declare-fun unch120H () String)
(declare-fun unch220I () String)
(declare-fun ch20I () String)
(declare-fun unch120I () String)
(declare-fun unch220J () String)
(declare-fun ch20J () String)
(declare-fun unch120J () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun sc20G () Int)
(declare-fun sc20H () Int)
(declare-fun sc20I () Int)
(declare-fun sc20J () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun var21G () String)
(declare-fun var21H () String)
(declare-fun var21I () String)
(declare-fun var21J () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun unch221G () String)
(declare-fun ch21G () String)
(declare-fun unch121G () String)
(declare-fun unch221H () String)
(declare-fun ch21H () String)
(declare-fun unch121H () String)
(declare-fun unch221I () String)
(declare-fun ch21I () String)
(declare-fun unch121I () String)
(declare-fun unch221J () String)
(declare-fun ch21J () String)
(declare-fun unch121J () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun sc21G () Int)
(declare-fun sc21H () Int)
(declare-fun sc21I () Int)
(declare-fun sc21J () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun var22G () String)
(declare-fun var22H () String)
(declare-fun var22I () String)
(declare-fun var22J () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun unch222G () String)
(declare-fun ch22G () String)
(declare-fun unch122G () String)
(declare-fun unch222H () String)
(declare-fun ch22H () String)
(declare-fun unch122H () String)
(declare-fun unch222I () String)
(declare-fun ch22I () String)
(declare-fun unch122I () String)
(declare-fun unch222J () String)
(declare-fun ch22J () String)
(declare-fun unch122J () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun sc22G () Int)
(declare-fun sc22H () Int)
(declare-fun sc22I () Int)
(declare-fun sc22J () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun var23G () String)
(declare-fun var23H () String)
(declare-fun var23I () String)
(declare-fun var23J () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun unch223G () String)
(declare-fun ch23G () String)
(declare-fun unch123G () String)
(declare-fun unch223H () String)
(declare-fun ch23H () String)
(declare-fun unch123H () String)
(declare-fun unch223I () String)
(declare-fun ch23I () String)
(declare-fun unch123I () String)
(declare-fun unch223J () String)
(declare-fun ch23J () String)
(declare-fun unch123J () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun sc23G () Int)
(declare-fun sc23H () Int)
(declare-fun sc23I () Int)
(declare-fun sc23J () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun var24G () String)
(declare-fun var24H () String)
(declare-fun var24I () String)
(declare-fun var24J () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun unch224G () String)
(declare-fun ch24G () String)
(declare-fun unch124G () String)
(declare-fun unch224H () String)
(declare-fun ch24H () String)
(declare-fun unch124H () String)
(declare-fun unch224I () String)
(declare-fun ch24I () String)
(declare-fun unch124I () String)
(declare-fun unch224J () String)
(declare-fun ch24J () String)
(declare-fun unch124J () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun sc24G () Int)
(declare-fun sc24H () Int)
(declare-fun sc24I () Int)
(declare-fun sc24J () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun var25G () String)
(declare-fun var25H () String)
(declare-fun var25I () String)
(declare-fun var25J () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun unch225G () String)
(declare-fun ch25G () String)
(declare-fun unch125G () String)
(declare-fun unch225H () String)
(declare-fun ch25H () String)
(declare-fun unch125H () String)
(declare-fun unch225I () String)
(declare-fun ch25I () String)
(declare-fun unch125I () String)
(declare-fun unch225J () String)
(declare-fun ch25J () String)
(declare-fun unch125J () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun sc25G () Int)
(declare-fun sc25H () Int)
(declare-fun sc25I () Int)
(declare-fun sc25J () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun var26G () String)
(declare-fun var26H () String)
(declare-fun var26I () String)
(declare-fun var26J () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun unch226G () String)
(declare-fun ch26G () String)
(declare-fun unch126G () String)
(declare-fun unch226H () String)
(declare-fun ch26H () String)
(declare-fun unch126H () String)
(declare-fun unch226I () String)
(declare-fun ch26I () String)
(declare-fun unch126I () String)
(declare-fun unch226J () String)
(declare-fun ch26J () String)
(declare-fun unch126J () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun sc26G () Int)
(declare-fun sc26H () Int)
(declare-fun sc26I () Int)
(declare-fun sc26J () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun var27G () String)
(declare-fun var27H () String)
(declare-fun var27I () String)
(declare-fun var27J () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun unch227G () String)
(declare-fun ch27G () String)
(declare-fun unch127G () String)
(declare-fun unch227H () String)
(declare-fun ch27H () String)
(declare-fun unch127H () String)
(declare-fun unch227I () String)
(declare-fun ch27I () String)
(declare-fun unch127I () String)
(declare-fun unch227J () String)
(declare-fun ch27J () String)
(declare-fun unch127J () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun sc27G () Int)
(declare-fun sc27H () Int)
(declare-fun sc27I () Int)
(declare-fun sc27J () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun var28G () String)
(declare-fun var28H () String)
(declare-fun var28I () String)
(declare-fun var28J () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun unch228G () String)
(declare-fun ch28G () String)
(declare-fun unch128G () String)
(declare-fun unch228H () String)
(declare-fun ch28H () String)
(declare-fun unch128H () String)
(declare-fun unch228I () String)
(declare-fun ch28I () String)
(declare-fun unch128I () String)
(declare-fun unch228J () String)
(declare-fun ch28J () String)
(declare-fun unch128J () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun sc28G () Int)
(declare-fun sc28H () Int)
(declare-fun sc28I () Int)
(declare-fun sc28J () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun var29G () String)
(declare-fun var29H () String)
(declare-fun var29I () String)
(declare-fun var29J () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun unch229G () String)
(declare-fun ch29G () String)
(declare-fun unch129G () String)
(declare-fun unch229H () String)
(declare-fun ch29H () String)
(declare-fun unch129H () String)
(declare-fun unch229I () String)
(declare-fun ch29I () String)
(declare-fun unch129I () String)
(declare-fun unch229J () String)
(declare-fun ch29J () String)
(declare-fun unch129J () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun sc29G () Int)
(declare-fun sc29H () Int)
(declare-fun sc29I () Int)
(declare-fun sc29J () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (<= (str.len var0I) 1))
(assert (<= (str.len var0J) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= (str.++ preI (str.++ stem0 sufI)) (str.++ unch10I (str.++ ch0I unch20I))))
(assert (= (str.++ preJ (str.++ stem0 sufJ)) (str.++ unch10J (str.++ ch0J unch20J))))
(assert (= "zub" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "zubam" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "zuboOi" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "zuXi" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (= (ite (= ch0I var0I) 0 1) sc0I))
(assert (= (ite (= ch0J var0J) 0 1) sc0J))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= sc0I 1))
(assert (<= sc0J 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (<= (str.len var1I) 1))
(assert (<= (str.len var1J) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= (str.++ preI (str.++ stem1 sufI)) (str.++ unch11I (str.++ ch1I unch21I))))
(assert (= (str.++ preJ (str.++ stem1 sufJ)) (str.++ unch11J (str.++ ch1J unch21J))))
(assert (= "sOit" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "sOitam" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "sOitoOi" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "sOiZi" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (= (ite (= ch1I var1I) 0 1) sc1I))
(assert (= (ite (= ch1J var1J) 0 1) sc1J))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= sc1I 1))
(assert (<= sc1J 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (<= (str.len var2I) 1))
(assert (<= (str.len var2J) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= (str.++ preI (str.++ stem2 sufI)) (str.++ unch12I (str.++ ch2I unch22I))))
(assert (= (str.++ preJ (str.++ stem2 sufJ)) (str.++ unch12J (str.++ ch2J unch22J))))
(assert (= "1aZ" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "1aZam" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "1ateOi" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "1ateOi" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (= (ite (= ch2I var2I) 0 1) sc2I))
(assert (= (ite (= ch2J var2J) 0 1) sc2J))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= sc2I 1))
(assert (<= sc2J 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (<= (str.len var3I) 1))
(assert (<= (str.len var3J) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= (str.++ preI (str.++ stem3 sufI)) (str.++ unch13I (str.++ ch3I unch23I))))
(assert (= (str.++ preJ (str.++ stem3 sufJ)) (str.++ unch13J (str.++ ch3J unch23J))))
(assert (= "ko2i3" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "koBe3am" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "koBeleOi" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "koBe3i" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (= (ite (= ch3I var3I) 0 1) sc3I))
(assert (= (ite (= ch3J var3J) 0 1) sc3J))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= sc3I 1))
(assert (<= sc3J 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (<= (str.len var4I) 1))
(assert (<= (str.len var4J) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= (str.++ preI (str.++ stem4 sufI)) (str.++ unch14I (str.++ ch4I unch24I))))
(assert (= (str.++ preJ (str.++ stem4 sufJ)) (str.++ unch14J (str.++ ch4J unch24J))))
(assert (= "zlo4ij" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "zlo4ijam" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "zlo4ijeOi" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "zlo4ijeOi" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (= (ite (= ch4I var4I) 0 1) sc4I))
(assert (= (ite (= ch4J var4J) 0 1) sc4J))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= sc4I 1))
(assert (<= sc4J 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (<= (str.len var5I) 1))
(assert (<= (str.len var5J) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= (str.++ preI (str.++ stem5 sufI)) (str.++ unch15I (str.++ ch5I unch25I))))
(assert (= (str.++ preJ (str.++ stem5 sufJ)) (str.++ unch15J (str.++ ch5J unch25J))))
(assert (= "5i6a7" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "5i6a7am" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "5i6aPeOi" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "5i6a7i" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (= (ite (= ch5I var5I) 0 1) sc5I))
(assert (= (ite (= ch5J var5J) 0 1) sc5J))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= sc5I 1))
(assert (<= sc5J 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (<= (str.len var6I) 1))
(assert (<= (str.len var6J) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= (str.++ preI (str.++ stem6 sufI)) (str.++ unch16I (str.++ ch6I unch26I))))
(assert (= (str.++ preJ (str.++ stem6 sufJ)) (str.++ unch16J (str.++ ch6J unch26J))))
(assert (= "korovaj" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "korovajam" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "korovajeOi" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "korovaji" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (= (ite (= ch6I var6I) 0 1) sc6I))
(assert (= (ite (= ch6J var6J) 0 1) sc6J))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (<= sc6I 1))
(assert (<= sc6J 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (<= (str.len var7G) 1))
(assert (<= (str.len var7H) 1))
(assert (<= (str.len var7I) 1))
(assert (<= (str.len var7J) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= (str.++ preG (str.++ stem7 sufG)) (str.++ unch17G (str.++ ch7G unch27G))))
(assert (= (str.++ preH (str.++ stem7 sufH)) (str.++ unch17H (str.++ ch7H unch27H))))
(assert (= (str.++ preI (str.++ stem7 sufI)) (str.++ unch17I (str.++ ch7I unch27I))))
(assert (= (str.++ preJ (str.++ stem7 sufJ)) (str.++ unch17J (str.++ ch7J unch27J))))
(assert (= "ka5i8" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "kame8am" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "kameneOi" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= "kame8i" (str.++ unch17D (str.++ var7D unch27D))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (= (ite (= ch7G var7G) 0 1) sc7G))
(assert (= (ite (= ch7H var7H) 0 1) sc7H))
(assert (= (ite (= ch7I var7I) 0 1) sc7I))
(assert (= (ite (= ch7J var7J) 0 1) sc7J))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= sc7G 1))
(assert (<= sc7H 1))
(assert (<= sc7I 1))
(assert (<= sc7J 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (<= (str.len var8G) 1))
(assert (<= (str.len var8H) 1))
(assert (<= (str.len var8I) 1))
(assert (<= (str.len var8J) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= (str.++ preG (str.++ stem8 sufG)) (str.++ unch18G (str.++ ch8G unch28G))))
(assert (= (str.++ preH (str.++ stem8 sufH)) (str.++ unch18H (str.++ ch8H unch28H))))
(assert (= (str.++ preI (str.++ stem8 sufI)) (str.++ unch18I (str.++ ch8I unch28I))))
(assert (= (str.++ preJ (str.++ stem8 sufJ)) (str.++ unch18J (str.++ ch8J unch28J))))
(assert (= "5i4" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "5i4am" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "5ideOi" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= "5i4i" (str.++ unch18D (str.++ var8D unch28D))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (= (ite (= ch8G var8G) 0 1) sc8G))
(assert (= (ite (= ch8H var8H) 0 1) sc8H))
(assert (= (ite (= ch8I var8I) 0 1) sc8I))
(assert (= (ite (= ch8J var8J) 0 1) sc8J))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= sc8G 1))
(assert (<= sc8H 1))
(assert (<= sc8I 1))
(assert (<= sc8J 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (<= (str.len var9G) 1))
(assert (<= (str.len var9H) 1))
(assert (<= (str.len var9I) 1))
(assert (<= (str.len var9J) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= (str.++ preG (str.++ stem9 sufG)) (str.++ unch19G (str.++ ch9G unch29G))))
(assert (= (str.++ preH (str.++ stem9 sufH)) (str.++ unch19H (str.++ ch9H unch29H))))
(assert (= (str.++ preI (str.++ stem9 sufI)) (str.++ unch19I (str.++ ch9I unch29I))))
(assert (= (str.++ preJ (str.++ stem9 sufJ)) (str.++ unch19J (str.++ ch9J unch29J))))
(assert (= "x3iw" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "x3ivam" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "x3ivoOi" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= "x3iOi" (str.++ unch19D (str.++ var9D unch29D))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (= (ite (= ch9G var9G) 0 1) sc9G))
(assert (= (ite (= ch9H var9H) 0 1) sc9H))
(assert (= (ite (= ch9I var9I) 0 1) sc9I))
(assert (= (ite (= ch9J var9J) 0 1) sc9J))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= sc9G 1))
(assert (<= sc9H 1))
(assert (<= sc9I 1))
(assert (<= sc9J 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (<= (str.len var10G) 1))
(assert (<= (str.len var10H) 1))
(assert (<= (str.len var10I) 1))
(assert (<= (str.len var10J) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= (str.++ preG (str.++ stem10 sufG)) (str.++ unch110G (str.++ ch10G unch210G))))
(assert (= (str.++ preH (str.++ stem10 sufH)) (str.++ unch110H (str.++ ch10H unch210H))))
(assert (= (str.++ preI (str.++ stem10 sufI)) (str.++ unch110I (str.++ ch10I unch210I))))
(assert (= (str.++ preJ (str.++ stem10 sufJ)) (str.++ unch110J (str.++ ch10J unch210J))))
(assert (= "holub" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "holubam" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "holuboOi" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= "holuXi" (str.++ unch110D (str.++ var10D unch210D))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (= (ite (= ch10G var10G) 0 1) sc10G))
(assert (= (ite (= ch10H var10H) 0 1) sc10H))
(assert (= (ite (= ch10I var10I) 0 1) sc10I))
(assert (= (ite (= ch10J var10J) 0 1) sc10J))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= sc10G 1))
(assert (<= sc10H 1))
(assert (<= sc10I 1))
(assert (<= sc10J 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (<= (str.len var11G) 1))
(assert (<= (str.len var11H) 1))
(assert (<= (str.len var11I) 1))
(assert (<= (str.len var11J) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= (str.++ preG (str.++ stem11 sufG)) (str.++ unch111G (str.++ ch11G unch211G))))
(assert (= (str.++ preH (str.++ stem11 sufH)) (str.++ unch111H (str.++ ch11H unch211H))))
(assert (= (str.++ preI (str.++ stem11 sufI)) (str.++ unch111I (str.++ ch11I unch211I))))
(assert (= (str.++ preJ (str.++ stem11 sufJ)) (str.++ unch111J (str.++ ch11J unch211J))))
(assert (= "6in" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "6inam" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "6inoOi" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= "6i8i" (str.++ unch111D (str.++ var11D unch211D))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (= (ite (= ch11G var11G) 0 1) sc11G))
(assert (= (ite (= ch11H var11H) 0 1) sc11H))
(assert (= (ite (= ch11I var11I) 0 1) sc11I))
(assert (= (ite (= ch11J var11J) 0 1) sc11J))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= sc11G 1))
(assert (<= sc11H 1))
(assert (<= sc11I 1))
(assert (<= sc11J 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (<= (str.len var12G) 1))
(assert (<= (str.len var12H) 1))
(assert (<= (str.len var12I) 1))
(assert (<= (str.len var12J) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= (str.++ preG (str.++ stem12 sufG)) (str.++ unch112G (str.++ ch12G unch212G))))
(assert (= (str.++ preH (str.++ stem12 sufH)) (str.++ unch112H (str.++ ch12H unch212H))))
(assert (= (str.++ preI (str.++ stem12 sufI)) (str.++ unch112I (str.++ ch12I unch212I))))
(assert (= (str.++ preJ (str.++ stem12 sufJ)) (str.++ unch112J (str.++ ch12J unch212J))))
(assert (= "leXi4" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "lebe4am" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "lebedeOi" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= "lebe4i" (str.++ unch112D (str.++ var12D unch212D))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (= (ite (= ch12G var12G) 0 1) sc12G))
(assert (= (ite (= ch12H var12H) 0 1) sc12H))
(assert (= (ite (= ch12I var12I) 0 1) sc12I))
(assert (= (ite (= ch12J var12J) 0 1) sc12J))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= sc12G 1))
(assert (<= sc12H 1))
(assert (<= sc12I 1))
(assert (<= sc12J 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (<= (str.len var13G) 1))
(assert (<= (str.len var13H) 1))
(assert (<= (str.len var13I) 1))
(assert (<= (str.len var13J) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= (str.++ preG (str.++ stem13 sufG)) (str.++ unch113G (str.++ ch13G unch213G))))
(assert (= (str.++ preH (str.++ stem13 sufH)) (str.++ unch113H (str.++ ch13H unch213H))))
(assert (= (str.++ preI (str.++ stem13 sufI)) (str.++ unch113I (str.++ ch13I unch213I))))
(assert (= (str.++ preJ (str.++ stem13 sufJ)) (str.++ unch113J (str.++ ch13J unch213J))))
(assert (= "su6id" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "su6idam" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "su6idoOi" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= "su6idoOi" (str.++ unch113E (str.++ var13E unch213E))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (= (ite (= ch13G var13G) 0 1) sc13G))
(assert (= (ite (= ch13H var13H) 0 1) sc13H))
(assert (= (ite (= ch13I var13I) 0 1) sc13I))
(assert (= (ite (= ch13J var13J) 0 1) sc13J))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= sc13G 1))
(assert (<= sc13H 1))
(assert (<= sc13I 1))
(assert (<= sc13J 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (<= (str.len var14G) 1))
(assert (<= (str.len var14H) 1))
(assert (<= (str.len var14I) 1))
(assert (<= (str.len var14J) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= (str.++ preG (str.++ stem14 sufG)) (str.++ unch114G (str.++ ch14G unch214G))))
(assert (= (str.++ preH (str.++ stem14 sufH)) (str.++ unch114H (str.++ ch14H unch214H))))
(assert (= (str.++ preI (str.++ stem14 sufI)) (str.++ unch114I (str.++ ch14I unch214I))))
(assert (= (str.++ preJ (str.++ stem14 sufJ)) (str.++ unch114J (str.++ ch14J unch214J))))
(assert (= "EoloOik" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "EoloOikam" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "EoloOikoOi" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= "EoloOikoOi" (str.++ unch114E (str.++ var14E unch214E))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (= (ite (= ch14G var14G) 0 1) sc14G))
(assert (= (ite (= ch14H var14H) 0 1) sc14H))
(assert (= (ite (= ch14I var14I) 0 1) sc14I))
(assert (= (ite (= ch14J var14J) 0 1) sc14J))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= sc14G 1))
(assert (<= sc14H 1))
(assert (<= sc14I 1))
(assert (<= sc14J 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (<= (str.len var15G) 1))
(assert (<= (str.len var15H) 1))
(assert (<= (str.len var15I) 1))
(assert (<= (str.len var15J) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= (str.++ preG (str.++ stem15 sufG)) (str.++ unch115G (str.++ ch15G unch215G))))
(assert (= (str.++ preH (str.++ stem15 sufH)) (str.++ unch115H (str.++ ch15H unch215H))))
(assert (= (str.++ preI (str.++ stem15 sufI)) (str.++ unch115I (str.++ ch15I unch215I))))
(assert (= (str.++ preJ (str.++ stem15 sufJ)) (str.++ unch115J (str.++ ch15J unch215J))))
(assert (= "3id" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "ledam" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "ledoOi" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= "le4i" (str.++ unch115D (str.++ var15D unch215D))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (= (ite (= ch15G var15G) 0 1) sc15G))
(assert (= (ite (= ch15H var15H) 0 1) sc15H))
(assert (= (ite (= ch15I var15I) 0 1) sc15I))
(assert (= (ite (= ch15J var15J) 0 1) sc15J))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= sc15G 1))
(assert (<= sc15H 1))
(assert (<= sc15I 1))
(assert (<= sc15J 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (<= (str.len var16G) 1))
(assert (<= (str.len var16H) 1))
(assert (<= (str.len var16I) 1))
(assert (<= (str.len var16J) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= (str.++ preG (str.++ stem16 sufG)) (str.++ unch116G (str.++ ch16G unch216G))))
(assert (= (str.++ preH (str.++ stem16 sufH)) (str.++ unch116H (str.++ ch16H unch216H))))
(assert (= (str.++ preI (str.++ stem16 sufI)) (str.++ unch116I (str.++ ch16I unch216I))))
(assert (= (str.++ preJ (str.++ stem16 sufJ)) (str.++ unch116J (str.++ ch16J unch216J))))
(assert (= "bi3" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bo3am" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "boleOi" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= "bo3i" (str.++ unch116D (str.++ var16D unch216D))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (= (ite (= ch16G var16G) 0 1) sc16G))
(assert (= (ite (= ch16H var16H) 0 1) sc16H))
(assert (= (ite (= ch16I var16I) 0 1) sc16I))
(assert (= (ite (= ch16J var16J) 0 1) sc16J))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= sc16G 1))
(assert (<= sc16H 1))
(assert (<= sc16I 1))
(assert (<= sc16J 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (<= (str.len var17G) 1))
(assert (<= (str.len var17H) 1))
(assert (<= (str.len var17I) 1))
(assert (<= (str.len var17J) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= (str.++ preG (str.++ stem17 sufG)) (str.++ unch117G (str.++ ch17G unch217G))))
(assert (= (str.++ preH (str.++ stem17 sufH)) (str.++ unch117H (str.++ ch17H unch217H))))
(assert (= (str.++ preI (str.++ stem17 sufI)) (str.++ unch117I (str.++ ch17I unch217I))))
(assert (= (str.++ preJ (str.++ stem17 sufJ)) (str.++ unch117J (str.++ ch17J unch217J))))
(assert (= "riw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "rovam" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "rovoOi" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= "roOi" (str.++ unch117D (str.++ var17D unch217D))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (= (ite (= ch17G var17G) 0 1) sc17G))
(assert (= (ite (= ch17H var17H) 0 1) sc17H))
(assert (= (ite (= ch17I var17I) 0 1) sc17I))
(assert (= (ite (= ch17J var17J) 0 1) sc17J))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= sc17G 1))
(assert (<= sc17H 1))
(assert (<= sc17I 1))
(assert (<= sc17J 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (<= (str.len var18G) 1))
(assert (<= (str.len var18H) 1))
(assert (<= (str.len var18I) 1))
(assert (<= (str.len var18J) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= (str.++ preG (str.++ stem18 sufG)) (str.++ unch118G (str.++ ch18G unch218G))))
(assert (= (str.++ preH (str.++ stem18 sufH)) (str.++ unch118H (str.++ ch18H unch218H))))
(assert (= (str.++ preI (str.++ stem18 sufI)) (str.++ unch118I (str.++ ch18I unch218I))))
(assert (= (str.++ preJ (str.++ stem18 sufJ)) (str.++ unch118J (str.++ ch18J unch218J))))
(assert (= "stiw" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "stolam" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "stoloOi" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= "sto3i" (str.++ unch118D (str.++ var18D unch218D))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (= (ite (= ch18G var18G) 0 1) sc18G))
(assert (= (ite (= ch18H var18H) 0 1) sc18H))
(assert (= (ite (= ch18I var18I) 0 1) sc18I))
(assert (= (ite (= ch18J var18J) 0 1) sc18J))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= sc18G 1))
(assert (<= sc18H 1))
(assert (<= sc18I 1))
(assert (<= sc18J 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (<= (str.len var19G) 1))
(assert (<= (str.len var19H) 1))
(assert (<= (str.len var19I) 1))
(assert (<= (str.len var19J) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= (str.++ preG (str.++ stem19 sufG)) (str.++ unch119G (str.++ ch19G unch219G))))
(assert (= (str.++ preH (str.++ stem19 sufH)) (str.++ unch119H (str.++ ch19H unch219H))))
(assert (= (str.++ preI (str.++ stem19 sufI)) (str.++ unch119I (str.++ ch19I unch219I))))
(assert (= (str.++ preJ (str.++ stem19 sufJ)) (str.++ unch119J (str.++ ch19J unch219J))))
(assert (= "4id" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "4idam" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "4idoOi" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= "4idoOi" (str.++ unch119E (str.++ var19E unch219E))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (= (ite (= ch19G var19G) 0 1) sc19G))
(assert (= (ite (= ch19H var19H) 0 1) sc19H))
(assert (= (ite (= ch19I var19I) 0 1) sc19I))
(assert (= (ite (= ch19J var19J) 0 1) sc19J))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= sc19G 1))
(assert (<= sc19H 1))
(assert (<= sc19I 1))
(assert (<= sc19J 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (<= (str.len var20G) 1))
(assert (<= (str.len var20H) 1))
(assert (<= (str.len var20I) 1))
(assert (<= (str.len var20J) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= (str.++ preG (str.++ stem20 sufG)) (str.++ unch120G (str.++ ch20G unch220G))))
(assert (= (str.++ preH (str.++ stem20 sufH)) (str.++ unch120H (str.++ ch20H unch220H))))
(assert (= (str.++ preI (str.++ stem20 sufI)) (str.++ unch120I (str.++ ch20I unch220I))))
(assert (= (str.++ preJ (str.++ stem20 sufJ)) (str.++ unch120J (str.++ ch20J unch220J))))
(assert (= "3it" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "3otam" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "3otoOi" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= "3oZi" (str.++ unch120D (str.++ var20D unch220D))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (= (ite (= ch20G var20G) 0 1) sc20G))
(assert (= (ite (= ch20H var20H) 0 1) sc20H))
(assert (= (ite (= ch20I var20I) 0 1) sc20I))
(assert (= (ite (= ch20J var20J) 0 1) sc20J))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= sc20G 1))
(assert (<= sc20H 1))
(assert (<= sc20I 1))
(assert (<= sc20J 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (<= (str.len var21G) 1))
(assert (<= (str.len var21H) 1))
(assert (<= (str.len var21I) 1))
(assert (<= (str.len var21J) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= (str.++ preG (str.++ stem21 sufG)) (str.++ unch121G (str.++ ch21G unch221G))))
(assert (= (str.++ preH (str.++ stem21 sufH)) (str.++ unch121H (str.++ ch21H unch221H))))
(assert (= (str.++ preI (str.++ stem21 sufI)) (str.++ unch121I (str.++ ch21I unch221I))))
(assert (= (str.++ preJ (str.++ stem21 sufJ)) (str.++ unch121J (str.++ ch21J unch221J))))
(assert (= "mist" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "mostam" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "mostoOi" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= "mosZi" (str.++ unch121D (str.++ var21D unch221D))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (= (ite (= ch21G var21G) 0 1) sc21G))
(assert (= (ite (= ch21H var21H) 0 1) sc21H))
(assert (= (ite (= ch21I var21I) 0 1) sc21I))
(assert (= (ite (= ch21J var21J) 0 1) sc21J))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= sc21G 1))
(assert (<= sc21H 1))
(assert (<= sc21I 1))
(assert (<= sc21J 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (<= (str.len var22G) 1))
(assert (<= (str.len var22H) 1))
(assert (<= (str.len var22I) 1))
(assert (<= (str.len var22J) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= (str.++ preG (str.++ stem22 sufG)) (str.++ unch122G (str.++ ch22G unch222G))))
(assert (= (str.++ preH (str.++ stem22 sufH)) (str.++ unch122H (str.++ ch22H unch222H))))
(assert (= (str.++ preI (str.++ stem22 sufI)) (str.++ unch122I (str.++ ch22I unch222I))))
(assert (= (str.++ preJ (str.++ stem22 sufJ)) (str.++ unch122J (str.++ ch22J unch222J))))
(assert (= "veEir" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "veEoram" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "veEoroOi" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= "veEo9i" (str.++ unch122D (str.++ var22D unch222D))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (= (ite (= ch22G var22G) 0 1) sc22G))
(assert (= (ite (= ch22H var22H) 0 1) sc22H))
(assert (= (ite (= ch22I var22I) 0 1) sc22I))
(assert (= (ite (= ch22J var22J) 0 1) sc22J))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= sc22G 1))
(assert (<= sc22H 1))
(assert (<= sc22I 1))
(assert (<= sc22J 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (<= (str.len var23G) 1))
(assert (<= (str.len var23H) 1))
(assert (<= (str.len var23I) 1))
(assert (<= (str.len var23J) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= (str.++ preG (str.++ stem23 sufG)) (str.++ unch123G (str.++ ch23G unch223G))))
(assert (= (str.++ preH (str.++ stem23 sufH)) (str.++ unch123H (str.++ ch23H unch223H))))
(assert (= (str.++ preI (str.++ stem23 sufI)) (str.++ unch123I (str.++ ch23I unch223I))))
(assert (= (str.++ preJ (str.++ stem23 sufJ)) (str.++ unch123J (str.++ ch23J unch223J))))
(assert (= "Zilo" (str.++ unch123F (str.++ var23F unch223F))))
(assert (= "Zila" (str.++ unch123G (str.++ var23G unch223G))))
(assert (= "Zilu" (str.++ unch123H (str.++ var23H unch223H))))
(assert (= "Zi3i" (str.++ unch123I (str.++ var23I unch223I))))
(assert (= "Ziw" (str.++ unch123J (str.++ var23J unch223J))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (= (ite (= ch23G var23G) 0 1) sc23G))
(assert (= (ite (= ch23H var23H) 0 1) sc23H))
(assert (= (ite (= ch23I var23I) 0 1) sc23I))
(assert (= (ite (= ch23J var23J) 0 1) sc23J))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= sc23G 1))
(assert (<= sc23H 1))
(assert (<= sc23I 1))
(assert (<= sc23J 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (<= (str.len var24G) 1))
(assert (<= (str.len var24H) 1))
(assert (<= (str.len var24I) 1))
(assert (<= (str.len var24J) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= (str.++ preG (str.++ stem24 sufG)) (str.++ unch124G (str.++ ch24G unch224G))))
(assert (= (str.++ preH (str.++ stem24 sufH)) (str.++ unch124H (str.++ ch24H unch224H))))
(assert (= (str.++ preI (str.++ stem24 sufI)) (str.++ unch124I (str.++ ch24I unch224I))))
(assert (= (str.++ preJ (str.++ stem24 sufJ)) (str.++ unch124J (str.++ ch24J unch224J))))
(assert (= "koleso" (str.++ unch124F (str.++ var24F unch224F))))
(assert (= "kolesa" (str.++ unch124G (str.++ var24G unch224G))))
(assert (= "kolesu" (str.++ unch124H (str.++ var24H unch224H))))
(assert (= "kole6i" (str.++ unch124I (str.++ var24I unch224I))))
(assert (= "ko3is" (str.++ unch124J (str.++ var24J unch224J))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (= (ite (= ch24G var24G) 0 1) sc24G))
(assert (= (ite (= ch24H var24H) 0 1) sc24H))
(assert (= (ite (= ch24I var24I) 0 1) sc24I))
(assert (= (ite (= ch24J var24J) 0 1) sc24J))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= sc24G 1))
(assert (<= sc24H 1))
(assert (<= sc24I 1))
(assert (<= sc24J 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (<= (str.len var25G) 1))
(assert (<= (str.len var25H) 1))
(assert (<= (str.len var25I) 1))
(assert (<= (str.len var25J) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= (str.++ preG (str.++ stem25 sufG)) (str.++ unch125G (str.++ ch25G unch225G))))
(assert (= (str.++ preH (str.++ stem25 sufH)) (str.++ unch125H (str.++ ch25H unch225H))))
(assert (= (str.++ preI (str.++ stem25 sufI)) (str.++ unch125I (str.++ ch25I unch225I))))
(assert (= (str.++ preJ (str.++ stem25 sufJ)) (str.++ unch125J (str.++ ch25J unch225J))))
(assert (= "ozero" (str.++ unch125F (str.++ var25F unch225F))))
(assert (= "ozera" (str.++ unch125G (str.++ var25G unch225G))))
(assert (= "ozeru" (str.++ unch125H (str.++ var25H unch225H))))
(assert (= "oze9i" (str.++ unch125I (str.++ var25I unch225I))))
(assert (= "o1ir" (str.++ unch125J (str.++ var25J unch225J))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (= (ite (= ch25G var25G) 0 1) sc25G))
(assert (= (ite (= ch25H var25H) 0 1) sc25H))
(assert (= (ite (= ch25I var25I) 0 1) sc25I))
(assert (= (ite (= ch25J var25J) 0 1) sc25J))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= sc25G 1))
(assert (<= sc25H 1))
(assert (<= sc25I 1))
(assert (<= sc25J 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (<= (str.len var26G) 1))
(assert (<= (str.len var26H) 1))
(assert (<= (str.len var26I) 1))
(assert (<= (str.len var26J) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= (str.++ preG (str.++ stem26 sufG)) (str.++ unch126G (str.++ ch26G unch226G))))
(assert (= (str.++ preH (str.++ stem26 sufH)) (str.++ unch126H (str.++ ch26H unch226H))))
(assert (= (str.++ preI (str.++ stem26 sufI)) (str.++ unch126I (str.++ ch26I unch226I))))
(assert (= (str.++ preJ (str.++ stem26 sufJ)) (str.++ unch126J (str.++ ch26J unch226J))))
(assert (= "selo" (str.++ unch126F (str.++ var26F unch226F))))
(assert (= "sela" (str.++ unch126G (str.++ var26G unch226G))))
(assert (= "selu" (str.++ unch126H (str.++ var26H unch226H))))
(assert (= "se3i" (str.++ unch126I (str.++ var26I unch226I))))
(assert (= "6iw" (str.++ unch126J (str.++ var26J unch226J))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (= (ite (= ch26G var26G) 0 1) sc26G))
(assert (= (ite (= ch26H var26H) 0 1) sc26H))
(assert (= (ite (= ch26I var26I) 0 1) sc26I))
(assert (= (ite (= ch26J var26J) 0 1) sc26J))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= sc26G 1))
(assert (<= sc26H 1))
(assert (<= sc26I 1))
(assert (<= sc26J 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (<= (str.len var27G) 1))
(assert (<= (str.len var27H) 1))
(assert (<= (str.len var27I) 1))
(assert (<= (str.len var27J) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= (str.++ preG (str.++ stem27 sufG)) (str.++ unch127G (str.++ ch27G unch227G))))
(assert (= (str.++ preH (str.++ stem27 sufH)) (str.++ unch127H (str.++ ch27H unch227H))))
(assert (= (str.++ preI (str.++ stem27 sufI)) (str.++ unch127I (str.++ ch27I unch227I))))
(assert (= (str.++ preJ (str.++ stem27 sufJ)) (str.++ unch127J (str.++ ch27J unch227J))))
(assert (= "pole" (str.++ unch127F (str.++ var27F unch227F))))
(assert (= "po3a" (str.++ unch127G (str.++ var27G unch227G))))
(assert (= "po3u" (str.++ unch127H (str.++ var27H unch227H))))
(assert (= "po3i" (str.++ unch127I (str.++ var27I unch227I))))
(assert (= "pi3" (str.++ unch127J (str.++ var27J unch227J))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (= (ite (= ch27G var27G) 0 1) sc27G))
(assert (= (ite (= ch27H var27H) 0 1) sc27H))
(assert (= (ite (= ch27I var27I) 0 1) sc27I))
(assert (= (ite (= ch27J var27J) 0 1) sc27J))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= sc27G 1))
(assert (<= sc27H 1))
(assert (<= sc27I 1))
(assert (<= sc27J 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (<= (str.len var28G) 1))
(assert (<= (str.len var28H) 1))
(assert (<= (str.len var28I) 1))
(assert (<= (str.len var28J) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= (str.++ preG (str.++ stem28 sufG)) (str.++ unch128G (str.++ ch28G unch228G))))
(assert (= (str.++ preH (str.++ stem28 sufH)) (str.++ unch128H (str.++ ch28H unch228H))))
(assert (= (str.++ preI (str.++ stem28 sufI)) (str.++ unch128I (str.++ ch28I unch228I))))
(assert (= (str.++ preJ (str.++ stem28 sufJ)) (str.++ unch128J (str.++ ch28J unch228J))))
(assert (= "slovo" (str.++ unch128F (str.++ var28F unch228F))))
(assert (= "slova" (str.++ unch128G (str.++ var28G unch228G))))
(assert (= "slovu" (str.++ unch128H (str.++ var28H unch228H))))
(assert (= "sloOi" (str.++ unch128I (str.++ var28I unch228I))))
(assert (= "sliw" (str.++ unch128J (str.++ var28J unch228J))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (= (ite (= ch28G var28G) 0 1) sc28G))
(assert (= (ite (= ch28H var28H) 0 1) sc28H))
(assert (= (ite (= ch28I var28I) 0 1) sc28I))
(assert (= (ite (= ch28J var28J) 0 1) sc28J))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= sc28G 1))
(assert (<= sc28H 1))
(assert (<= sc28I 1))
(assert (<= sc28J 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (<= (str.len var29G) 1))
(assert (<= (str.len var29H) 1))
(assert (<= (str.len var29I) 1))
(assert (<= (str.len var29J) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= (str.++ preG (str.++ stem29 sufG)) (str.++ unch129G (str.++ ch29G unch229G))))
(assert (= (str.++ preH (str.++ stem29 sufH)) (str.++ unch129H (str.++ ch29H unch229H))))
(assert (= (str.++ preI (str.++ stem29 sufI)) (str.++ unch129I (str.++ ch29I unch229I))))
(assert (= (str.++ preJ (str.++ stem29 sufJ)) (str.++ unch129J (str.++ ch29J unch229J))))
(assert (= "more" (str.++ unch129F (str.++ var29F unch229F))))
(assert (= "mo9a" (str.++ unch129G (str.++ var29G unch229G))))
(assert (= "mo9u" (str.++ unch129H (str.++ var29H unch229H))))
(assert (= "mo9i" (str.++ unch129I (str.++ var29I unch229I))))
(assert (= "mi9" (str.++ unch129J (str.++ var29J unch229J))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (= (ite (= ch29G var29G) 0 1) sc29G))
(assert (= (ite (= ch29H var29H) 0 1) sc29H))
(assert (= (ite (= ch29I var29I) 0 1) sc29I))
(assert (= (ite (= ch29J var29J) 0 1) sc29J))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= sc29G 1))
(assert (<= sc29H 1))
(assert (<= sc29I 1))
(assert (<= sc29J 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      sc0I
      sc0J
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      sc1I
      sc1J
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      sc2I
      sc2J
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      sc3I
      sc3J
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      sc4I
      sc4J
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      sc5I
      sc5J
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H
      sc6I
      sc6J
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      sc7G
      sc7H
      sc7I
      sc7J
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      sc8G
      sc8H
      sc8I
      sc8J
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      sc9G
      sc9H
      sc9I
      sc9J
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      sc10G
      sc10H
      sc10I
      sc10J
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      sc11G
      sc11H
      sc11I
      sc11J
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      sc12G
      sc12H
      sc12I
      sc12J
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      sc13G
      sc13H
      sc13I
      sc13J
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      sc14G
      sc14H
      sc14I
      sc14J
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      sc15G
      sc15H
      sc15I
      sc15J
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      sc16G
      sc16H
      sc16I
      sc16J
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      sc17G
      sc17H
      sc17I
      sc17J
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      sc18G
      sc18H
      sc18I
      sc18J
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      sc19G
      sc19H
      sc19I
      sc19J
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      sc20G
      sc20H
      sc20I
      sc20J
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      sc21G
      sc21H
      sc21I
      sc21J
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      sc22G
      sc22H
      sc22I
      sc22J
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      sc23G
      sc23H
      sc23I
      sc23J
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      sc24G
      sc24H
      sc24I
      sc24J
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      sc25G
      sc25H
      sc25I
      sc25J
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      sc26G
      sc26H
      sc26I
      sc26J
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      sc27G
      sc27H
      sc27I
      sc27J
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      sc28G
      sc28H
      sc28I
      sc28J
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      sc29G
      sc29H
      sc29I
      sc29J)
   16))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun var0I () String)
(declare-fun var0J () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun unch20I () String)
(declare-fun ch0I () String)
(declare-fun unch10I () String)
(declare-fun sufI () String)
(declare-fun preI () String)
(declare-fun unch20J () String)
(declare-fun ch0J () String)
(declare-fun unch10J () String)
(declare-fun sufJ () String)
(declare-fun preJ () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun sc0I () Int)
(declare-fun sc0J () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun var1I () String)
(declare-fun var1J () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun unch21I () String)
(declare-fun ch1I () String)
(declare-fun unch11I () String)
(declare-fun unch21J () String)
(declare-fun ch1J () String)
(declare-fun unch11J () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun sc1I () Int)
(declare-fun sc1J () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun var2I () String)
(declare-fun var2J () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun unch22I () String)
(declare-fun ch2I () String)
(declare-fun unch12I () String)
(declare-fun unch22J () String)
(declare-fun ch2J () String)
(declare-fun unch12J () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun sc2I () Int)
(declare-fun sc2J () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun var3I () String)
(declare-fun var3J () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun unch23I () String)
(declare-fun ch3I () String)
(declare-fun unch13I () String)
(declare-fun unch23J () String)
(declare-fun ch3J () String)
(declare-fun unch13J () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun sc3I () Int)
(declare-fun sc3J () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun var4I () String)
(declare-fun var4J () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun unch24I () String)
(declare-fun ch4I () String)
(declare-fun unch14I () String)
(declare-fun unch24J () String)
(declare-fun ch4J () String)
(declare-fun unch14J () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun sc4I () Int)
(declare-fun sc4J () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun var5I () String)
(declare-fun var5J () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun unch25I () String)
(declare-fun ch5I () String)
(declare-fun unch15I () String)
(declare-fun unch25J () String)
(declare-fun ch5J () String)
(declare-fun unch15J () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun sc5I () Int)
(declare-fun sc5J () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun var6I () String)
(declare-fun var6J () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun unch26I () String)
(declare-fun ch6I () String)
(declare-fun unch16I () String)
(declare-fun unch26J () String)
(declare-fun ch6J () String)
(declare-fun unch16J () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(declare-fun sc6I () Int)
(declare-fun sc6J () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun var7G () String)
(declare-fun var7H () String)
(declare-fun var7I () String)
(declare-fun var7J () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun unch27G () String)
(declare-fun ch7G () String)
(declare-fun unch17G () String)
(declare-fun unch27H () String)
(declare-fun ch7H () String)
(declare-fun unch17H () String)
(declare-fun unch27I () String)
(declare-fun ch7I () String)
(declare-fun unch17I () String)
(declare-fun unch27J () String)
(declare-fun ch7J () String)
(declare-fun unch17J () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun sc7G () Int)
(declare-fun sc7H () Int)
(declare-fun sc7I () Int)
(declare-fun sc7J () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun var8G () String)
(declare-fun var8H () String)
(declare-fun var8I () String)
(declare-fun var8J () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun unch28G () String)
(declare-fun ch8G () String)
(declare-fun unch18G () String)
(declare-fun unch28H () String)
(declare-fun ch8H () String)
(declare-fun unch18H () String)
(declare-fun unch28I () String)
(declare-fun ch8I () String)
(declare-fun unch18I () String)
(declare-fun unch28J () String)
(declare-fun ch8J () String)
(declare-fun unch18J () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun sc8G () Int)
(declare-fun sc8H () Int)
(declare-fun sc8I () Int)
(declare-fun sc8J () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun var9G () String)
(declare-fun var9H () String)
(declare-fun var9I () String)
(declare-fun var9J () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun unch29G () String)
(declare-fun ch9G () String)
(declare-fun unch19G () String)
(declare-fun unch29H () String)
(declare-fun ch9H () String)
(declare-fun unch19H () String)
(declare-fun unch29I () String)
(declare-fun ch9I () String)
(declare-fun unch19I () String)
(declare-fun unch29J () String)
(declare-fun ch9J () String)
(declare-fun unch19J () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun sc9G () Int)
(declare-fun sc9H () Int)
(declare-fun sc9I () Int)
(declare-fun sc9J () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun var10G () String)
(declare-fun var10H () String)
(declare-fun var10I () String)
(declare-fun var10J () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun unch210G () String)
(declare-fun ch10G () String)
(declare-fun unch110G () String)
(declare-fun unch210H () String)
(declare-fun ch10H () String)
(declare-fun unch110H () String)
(declare-fun unch210I () String)
(declare-fun ch10I () String)
(declare-fun unch110I () String)
(declare-fun unch210J () String)
(declare-fun ch10J () String)
(declare-fun unch110J () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun sc10G () Int)
(declare-fun sc10H () Int)
(declare-fun sc10I () Int)
(declare-fun sc10J () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun var11G () String)
(declare-fun var11H () String)
(declare-fun var11I () String)
(declare-fun var11J () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun unch211G () String)
(declare-fun ch11G () String)
(declare-fun unch111G () String)
(declare-fun unch211H () String)
(declare-fun ch11H () String)
(declare-fun unch111H () String)
(declare-fun unch211I () String)
(declare-fun ch11I () String)
(declare-fun unch111I () String)
(declare-fun unch211J () String)
(declare-fun ch11J () String)
(declare-fun unch111J () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun sc11G () Int)
(declare-fun sc11H () Int)
(declare-fun sc11I () Int)
(declare-fun sc11J () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun var12G () String)
(declare-fun var12H () String)
(declare-fun var12I () String)
(declare-fun var12J () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun unch212G () String)
(declare-fun ch12G () String)
(declare-fun unch112G () String)
(declare-fun unch212H () String)
(declare-fun ch12H () String)
(declare-fun unch112H () String)
(declare-fun unch212I () String)
(declare-fun ch12I () String)
(declare-fun unch112I () String)
(declare-fun unch212J () String)
(declare-fun ch12J () String)
(declare-fun unch112J () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun sc12G () Int)
(declare-fun sc12H () Int)
(declare-fun sc12I () Int)
(declare-fun sc12J () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun var13G () String)
(declare-fun var13H () String)
(declare-fun var13I () String)
(declare-fun var13J () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun unch213G () String)
(declare-fun ch13G () String)
(declare-fun unch113G () String)
(declare-fun unch213H () String)
(declare-fun ch13H () String)
(declare-fun unch113H () String)
(declare-fun unch213I () String)
(declare-fun ch13I () String)
(declare-fun unch113I () String)
(declare-fun unch213J () String)
(declare-fun ch13J () String)
(declare-fun unch113J () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun sc13G () Int)
(declare-fun sc13H () Int)
(declare-fun sc13I () Int)
(declare-fun sc13J () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun var14G () String)
(declare-fun var14H () String)
(declare-fun var14I () String)
(declare-fun var14J () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun unch214G () String)
(declare-fun ch14G () String)
(declare-fun unch114G () String)
(declare-fun unch214H () String)
(declare-fun ch14H () String)
(declare-fun unch114H () String)
(declare-fun unch214I () String)
(declare-fun ch14I () String)
(declare-fun unch114I () String)
(declare-fun unch214J () String)
(declare-fun ch14J () String)
(declare-fun unch114J () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun sc14G () Int)
(declare-fun sc14H () Int)
(declare-fun sc14I () Int)
(declare-fun sc14J () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun var15G () String)
(declare-fun var15H () String)
(declare-fun var15I () String)
(declare-fun var15J () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun unch215G () String)
(declare-fun ch15G () String)
(declare-fun unch115G () String)
(declare-fun unch215H () String)
(declare-fun ch15H () String)
(declare-fun unch115H () String)
(declare-fun unch215I () String)
(declare-fun ch15I () String)
(declare-fun unch115I () String)
(declare-fun unch215J () String)
(declare-fun ch15J () String)
(declare-fun unch115J () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun sc15G () Int)
(declare-fun sc15H () Int)
(declare-fun sc15I () Int)
(declare-fun sc15J () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun var16G () String)
(declare-fun var16H () String)
(declare-fun var16I () String)
(declare-fun var16J () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun unch216G () String)
(declare-fun ch16G () String)
(declare-fun unch116G () String)
(declare-fun unch216H () String)
(declare-fun ch16H () String)
(declare-fun unch116H () String)
(declare-fun unch216I () String)
(declare-fun ch16I () String)
(declare-fun unch116I () String)
(declare-fun unch216J () String)
(declare-fun ch16J () String)
(declare-fun unch116J () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun sc16G () Int)
(declare-fun sc16H () Int)
(declare-fun sc16I () Int)
(declare-fun sc16J () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun var17G () String)
(declare-fun var17H () String)
(declare-fun var17I () String)
(declare-fun var17J () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun unch217G () String)
(declare-fun ch17G () String)
(declare-fun unch117G () String)
(declare-fun unch217H () String)
(declare-fun ch17H () String)
(declare-fun unch117H () String)
(declare-fun unch217I () String)
(declare-fun ch17I () String)
(declare-fun unch117I () String)
(declare-fun unch217J () String)
(declare-fun ch17J () String)
(declare-fun unch117J () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun sc17G () Int)
(declare-fun sc17H () Int)
(declare-fun sc17I () Int)
(declare-fun sc17J () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun var18G () String)
(declare-fun var18H () String)
(declare-fun var18I () String)
(declare-fun var18J () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun unch218G () String)
(declare-fun ch18G () String)
(declare-fun unch118G () String)
(declare-fun unch218H () String)
(declare-fun ch18H () String)
(declare-fun unch118H () String)
(declare-fun unch218I () String)
(declare-fun ch18I () String)
(declare-fun unch118I () String)
(declare-fun unch218J () String)
(declare-fun ch18J () String)
(declare-fun unch118J () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun sc18G () Int)
(declare-fun sc18H () Int)
(declare-fun sc18I () Int)
(declare-fun sc18J () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun var19G () String)
(declare-fun var19H () String)
(declare-fun var19I () String)
(declare-fun var19J () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun unch219G () String)
(declare-fun ch19G () String)
(declare-fun unch119G () String)
(declare-fun unch219H () String)
(declare-fun ch19H () String)
(declare-fun unch119H () String)
(declare-fun unch219I () String)
(declare-fun ch19I () String)
(declare-fun unch119I () String)
(declare-fun unch219J () String)
(declare-fun ch19J () String)
(declare-fun unch119J () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun sc19G () Int)
(declare-fun sc19H () Int)
(declare-fun sc19I () Int)
(declare-fun sc19J () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun var20G () String)
(declare-fun var20H () String)
(declare-fun var20I () String)
(declare-fun var20J () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun unch220G () String)
(declare-fun ch20G () String)
(declare-fun unch120G () String)
(declare-fun unch220H () String)
(declare-fun ch20H () String)
(declare-fun unch120H () String)
(declare-fun unch220I () String)
(declare-fun ch20I () String)
(declare-fun unch120I () String)
(declare-fun unch220J () String)
(declare-fun ch20J () String)
(declare-fun unch120J () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun sc20G () Int)
(declare-fun sc20H () Int)
(declare-fun sc20I () Int)
(declare-fun sc20J () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun var21G () String)
(declare-fun var21H () String)
(declare-fun var21I () String)
(declare-fun var21J () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun unch221G () String)
(declare-fun ch21G () String)
(declare-fun unch121G () String)
(declare-fun unch221H () String)
(declare-fun ch21H () String)
(declare-fun unch121H () String)
(declare-fun unch221I () String)
(declare-fun ch21I () String)
(declare-fun unch121I () String)
(declare-fun unch221J () String)
(declare-fun ch21J () String)
(declare-fun unch121J () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun sc21G () Int)
(declare-fun sc21H () Int)
(declare-fun sc21I () Int)
(declare-fun sc21J () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun var22G () String)
(declare-fun var22H () String)
(declare-fun var22I () String)
(declare-fun var22J () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun unch222G () String)
(declare-fun ch22G () String)
(declare-fun unch122G () String)
(declare-fun unch222H () String)
(declare-fun ch22H () String)
(declare-fun unch122H () String)
(declare-fun unch222I () String)
(declare-fun ch22I () String)
(declare-fun unch122I () String)
(declare-fun unch222J () String)
(declare-fun ch22J () String)
(declare-fun unch122J () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun sc22G () Int)
(declare-fun sc22H () Int)
(declare-fun sc22I () Int)
(declare-fun sc22J () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun var23G () String)
(declare-fun var23H () String)
(declare-fun var23I () String)
(declare-fun var23J () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun unch223G () String)
(declare-fun ch23G () String)
(declare-fun unch123G () String)
(declare-fun unch223H () String)
(declare-fun ch23H () String)
(declare-fun unch123H () String)
(declare-fun unch223I () String)
(declare-fun ch23I () String)
(declare-fun unch123I () String)
(declare-fun unch223J () String)
(declare-fun ch23J () String)
(declare-fun unch123J () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun sc23G () Int)
(declare-fun sc23H () Int)
(declare-fun sc23I () Int)
(declare-fun sc23J () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun var24G () String)
(declare-fun var24H () String)
(declare-fun var24I () String)
(declare-fun var24J () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun unch224G () String)
(declare-fun ch24G () String)
(declare-fun unch124G () String)
(declare-fun unch224H () String)
(declare-fun ch24H () String)
(declare-fun unch124H () String)
(declare-fun unch224I () String)
(declare-fun ch24I () String)
(declare-fun unch124I () String)
(declare-fun unch224J () String)
(declare-fun ch24J () String)
(declare-fun unch124J () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun sc24G () Int)
(declare-fun sc24H () Int)
(declare-fun sc24I () Int)
(declare-fun sc24J () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun var25G () String)
(declare-fun var25H () String)
(declare-fun var25I () String)
(declare-fun var25J () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun unch225G () String)
(declare-fun ch25G () String)
(declare-fun unch125G () String)
(declare-fun unch225H () String)
(declare-fun ch25H () String)
(declare-fun unch125H () String)
(declare-fun unch225I () String)
(declare-fun ch25I () String)
(declare-fun unch125I () String)
(declare-fun unch225J () String)
(declare-fun ch25J () String)
(declare-fun unch125J () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun sc25G () Int)
(declare-fun sc25H () Int)
(declare-fun sc25I () Int)
(declare-fun sc25J () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun var26G () String)
(declare-fun var26H () String)
(declare-fun var26I () String)
(declare-fun var26J () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun unch226G () String)
(declare-fun ch26G () String)
(declare-fun unch126G () String)
(declare-fun unch226H () String)
(declare-fun ch26H () String)
(declare-fun unch126H () String)
(declare-fun unch226I () String)
(declare-fun ch26I () String)
(declare-fun unch126I () String)
(declare-fun unch226J () String)
(declare-fun ch26J () String)
(declare-fun unch126J () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun sc26G () Int)
(declare-fun sc26H () Int)
(declare-fun sc26I () Int)
(declare-fun sc26J () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun var27G () String)
(declare-fun var27H () String)
(declare-fun var27I () String)
(declare-fun var27J () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun unch227G () String)
(declare-fun ch27G () String)
(declare-fun unch127G () String)
(declare-fun unch227H () String)
(declare-fun ch27H () String)
(declare-fun unch127H () String)
(declare-fun unch227I () String)
(declare-fun ch27I () String)
(declare-fun unch127I () String)
(declare-fun unch227J () String)
(declare-fun ch27J () String)
(declare-fun unch127J () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun sc27G () Int)
(declare-fun sc27H () Int)
(declare-fun sc27I () Int)
(declare-fun sc27J () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun var28G () String)
(declare-fun var28H () String)
(declare-fun var28I () String)
(declare-fun var28J () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun unch228G () String)
(declare-fun ch28G () String)
(declare-fun unch128G () String)
(declare-fun unch228H () String)
(declare-fun ch28H () String)
(declare-fun unch128H () String)
(declare-fun unch228I () String)
(declare-fun ch28I () String)
(declare-fun unch128I () String)
(declare-fun unch228J () String)
(declare-fun ch28J () String)
(declare-fun unch128J () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun sc28G () Int)
(declare-fun sc28H () Int)
(declare-fun sc28I () Int)
(declare-fun sc28J () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun var29G () String)
(declare-fun var29H () String)
(declare-fun var29I () String)
(declare-fun var29J () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun unch229G () String)
(declare-fun ch29G () String)
(declare-fun unch129G () String)
(declare-fun unch229H () String)
(declare-fun ch29H () String)
(declare-fun unch129H () String)
(declare-fun unch229I () String)
(declare-fun ch29I () String)
(declare-fun unch129I () String)
(declare-fun unch229J () String)
(declare-fun ch29J () String)
(declare-fun unch129J () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun sc29G () Int)
(declare-fun sc29H () Int)
(declare-fun sc29I () Int)
(declare-fun sc29J () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (<= (str.len var0I) 1))
(assert (<= (str.len var0J) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= (str.++ preI (str.++ stem0 sufI)) (str.++ unch10I (str.++ ch0I unch20I))))
(assert (= (str.++ preJ (str.++ stem0 sufJ)) (str.++ unch10J (str.++ ch0J unch20J))))
(assert (= "zub" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "zubam" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "zuboOi" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "zuXi" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (= (ite (= ch0I var0I) 0 1) sc0I))
(assert (= (ite (= ch0J var0J) 0 1) sc0J))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= sc0I 1))
(assert (<= sc0J 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (<= (str.len var1I) 1))
(assert (<= (str.len var1J) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= (str.++ preI (str.++ stem1 sufI)) (str.++ unch11I (str.++ ch1I unch21I))))
(assert (= (str.++ preJ (str.++ stem1 sufJ)) (str.++ unch11J (str.++ ch1J unch21J))))
(assert (= "sOit" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "sOitam" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "sOitoOi" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "sOiZi" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (= (ite (= ch1I var1I) 0 1) sc1I))
(assert (= (ite (= ch1J var1J) 0 1) sc1J))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= sc1I 1))
(assert (<= sc1J 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (<= (str.len var2I) 1))
(assert (<= (str.len var2J) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= (str.++ preI (str.++ stem2 sufI)) (str.++ unch12I (str.++ ch2I unch22I))))
(assert (= (str.++ preJ (str.++ stem2 sufJ)) (str.++ unch12J (str.++ ch2J unch22J))))
(assert (= "1aZ" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "1aZam" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "1ateOi" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "1ateOi" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (= (ite (= ch2I var2I) 0 1) sc2I))
(assert (= (ite (= ch2J var2J) 0 1) sc2J))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= sc2I 1))
(assert (<= sc2J 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (<= (str.len var3I) 1))
(assert (<= (str.len var3J) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= (str.++ preI (str.++ stem3 sufI)) (str.++ unch13I (str.++ ch3I unch23I))))
(assert (= (str.++ preJ (str.++ stem3 sufJ)) (str.++ unch13J (str.++ ch3J unch23J))))
(assert (= "ko2i3" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "koBe3am" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "koBeleOi" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "koBe3i" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (= (ite (= ch3I var3I) 0 1) sc3I))
(assert (= (ite (= ch3J var3J) 0 1) sc3J))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= sc3I 1))
(assert (<= sc3J 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (<= (str.len var4I) 1))
(assert (<= (str.len var4J) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= (str.++ preI (str.++ stem4 sufI)) (str.++ unch14I (str.++ ch4I unch24I))))
(assert (= (str.++ preJ (str.++ stem4 sufJ)) (str.++ unch14J (str.++ ch4J unch24J))))
(assert (= "zlo4ij" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "zlo4ijam" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "zlo4ijeOi" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "zlo4ijeOi" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (= (ite (= ch4I var4I) 0 1) sc4I))
(assert (= (ite (= ch4J var4J) 0 1) sc4J))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= sc4I 1))
(assert (<= sc4J 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (<= (str.len var5I) 1))
(assert (<= (str.len var5J) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= (str.++ preI (str.++ stem5 sufI)) (str.++ unch15I (str.++ ch5I unch25I))))
(assert (= (str.++ preJ (str.++ stem5 sufJ)) (str.++ unch15J (str.++ ch5J unch25J))))
(assert (= "5i6a7" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "5i6a7am" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "5i6aPeOi" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "5i6a7i" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (= (ite (= ch5I var5I) 0 1) sc5I))
(assert (= (ite (= ch5J var5J) 0 1) sc5J))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= sc5I 1))
(assert (<= sc5J 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (<= (str.len var6I) 1))
(assert (<= (str.len var6J) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= (str.++ preI (str.++ stem6 sufI)) (str.++ unch16I (str.++ ch6I unch26I))))
(assert (= (str.++ preJ (str.++ stem6 sufJ)) (str.++ unch16J (str.++ ch6J unch26J))))
(assert (= "korovaj" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "korovajam" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "korovajeOi" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "korovaji" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (= (ite (= ch6I var6I) 0 1) sc6I))
(assert (= (ite (= ch6J var6J) 0 1) sc6J))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (<= sc6I 1))
(assert (<= sc6J 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (<= (str.len var7G) 1))
(assert (<= (str.len var7H) 1))
(assert (<= (str.len var7I) 1))
(assert (<= (str.len var7J) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= (str.++ preG (str.++ stem7 sufG)) (str.++ unch17G (str.++ ch7G unch27G))))
(assert (= (str.++ preH (str.++ stem7 sufH)) (str.++ unch17H (str.++ ch7H unch27H))))
(assert (= (str.++ preI (str.++ stem7 sufI)) (str.++ unch17I (str.++ ch7I unch27I))))
(assert (= (str.++ preJ (str.++ stem7 sufJ)) (str.++ unch17J (str.++ ch7J unch27J))))
(assert (= "ka5i8" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "kame8am" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "kameneOi" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= "kame8i" (str.++ unch17D (str.++ var7D unch27D))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (= (ite (= ch7G var7G) 0 1) sc7G))
(assert (= (ite (= ch7H var7H) 0 1) sc7H))
(assert (= (ite (= ch7I var7I) 0 1) sc7I))
(assert (= (ite (= ch7J var7J) 0 1) sc7J))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= sc7G 1))
(assert (<= sc7H 1))
(assert (<= sc7I 1))
(assert (<= sc7J 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (<= (str.len var8G) 1))
(assert (<= (str.len var8H) 1))
(assert (<= (str.len var8I) 1))
(assert (<= (str.len var8J) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= (str.++ preG (str.++ stem8 sufG)) (str.++ unch18G (str.++ ch8G unch28G))))
(assert (= (str.++ preH (str.++ stem8 sufH)) (str.++ unch18H (str.++ ch8H unch28H))))
(assert (= (str.++ preI (str.++ stem8 sufI)) (str.++ unch18I (str.++ ch8I unch28I))))
(assert (= (str.++ preJ (str.++ stem8 sufJ)) (str.++ unch18J (str.++ ch8J unch28J))))
(assert (= "5i4" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "5i4am" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "5ideOi" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= "5i4i" (str.++ unch18D (str.++ var8D unch28D))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (= (ite (= ch8G var8G) 0 1) sc8G))
(assert (= (ite (= ch8H var8H) 0 1) sc8H))
(assert (= (ite (= ch8I var8I) 0 1) sc8I))
(assert (= (ite (= ch8J var8J) 0 1) sc8J))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= sc8G 1))
(assert (<= sc8H 1))
(assert (<= sc8I 1))
(assert (<= sc8J 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (<= (str.len var9G) 1))
(assert (<= (str.len var9H) 1))
(assert (<= (str.len var9I) 1))
(assert (<= (str.len var9J) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= (str.++ preG (str.++ stem9 sufG)) (str.++ unch19G (str.++ ch9G unch29G))))
(assert (= (str.++ preH (str.++ stem9 sufH)) (str.++ unch19H (str.++ ch9H unch29H))))
(assert (= (str.++ preI (str.++ stem9 sufI)) (str.++ unch19I (str.++ ch9I unch29I))))
(assert (= (str.++ preJ (str.++ stem9 sufJ)) (str.++ unch19J (str.++ ch9J unch29J))))
(assert (= "x3iw" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "x3ivam" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "x3ivoOi" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= "x3iOi" (str.++ unch19D (str.++ var9D unch29D))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (= (ite (= ch9G var9G) 0 1) sc9G))
(assert (= (ite (= ch9H var9H) 0 1) sc9H))
(assert (= (ite (= ch9I var9I) 0 1) sc9I))
(assert (= (ite (= ch9J var9J) 0 1) sc9J))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= sc9G 1))
(assert (<= sc9H 1))
(assert (<= sc9I 1))
(assert (<= sc9J 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (<= (str.len var10G) 1))
(assert (<= (str.len var10H) 1))
(assert (<= (str.len var10I) 1))
(assert (<= (str.len var10J) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= (str.++ preG (str.++ stem10 sufG)) (str.++ unch110G (str.++ ch10G unch210G))))
(assert (= (str.++ preH (str.++ stem10 sufH)) (str.++ unch110H (str.++ ch10H unch210H))))
(assert (= (str.++ preI (str.++ stem10 sufI)) (str.++ unch110I (str.++ ch10I unch210I))))
(assert (= (str.++ preJ (str.++ stem10 sufJ)) (str.++ unch110J (str.++ ch10J unch210J))))
(assert (= "holub" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "holubam" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "holuboOi" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= "holuXi" (str.++ unch110D (str.++ var10D unch210D))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (= (ite (= ch10G var10G) 0 1) sc10G))
(assert (= (ite (= ch10H var10H) 0 1) sc10H))
(assert (= (ite (= ch10I var10I) 0 1) sc10I))
(assert (= (ite (= ch10J var10J) 0 1) sc10J))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= sc10G 1))
(assert (<= sc10H 1))
(assert (<= sc10I 1))
(assert (<= sc10J 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (<= (str.len var11G) 1))
(assert (<= (str.len var11H) 1))
(assert (<= (str.len var11I) 1))
(assert (<= (str.len var11J) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= (str.++ preG (str.++ stem11 sufG)) (str.++ unch111G (str.++ ch11G unch211G))))
(assert (= (str.++ preH (str.++ stem11 sufH)) (str.++ unch111H (str.++ ch11H unch211H))))
(assert (= (str.++ preI (str.++ stem11 sufI)) (str.++ unch111I (str.++ ch11I unch211I))))
(assert (= (str.++ preJ (str.++ stem11 sufJ)) (str.++ unch111J (str.++ ch11J unch211J))))
(assert (= "6in" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "6inam" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "6inoOi" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= "6i8i" (str.++ unch111D (str.++ var11D unch211D))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (= (ite (= ch11G var11G) 0 1) sc11G))
(assert (= (ite (= ch11H var11H) 0 1) sc11H))
(assert (= (ite (= ch11I var11I) 0 1) sc11I))
(assert (= (ite (= ch11J var11J) 0 1) sc11J))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= sc11G 1))
(assert (<= sc11H 1))
(assert (<= sc11I 1))
(assert (<= sc11J 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (<= (str.len var12G) 1))
(assert (<= (str.len var12H) 1))
(assert (<= (str.len var12I) 1))
(assert (<= (str.len var12J) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= (str.++ preG (str.++ stem12 sufG)) (str.++ unch112G (str.++ ch12G unch212G))))
(assert (= (str.++ preH (str.++ stem12 sufH)) (str.++ unch112H (str.++ ch12H unch212H))))
(assert (= (str.++ preI (str.++ stem12 sufI)) (str.++ unch112I (str.++ ch12I unch212I))))
(assert (= (str.++ preJ (str.++ stem12 sufJ)) (str.++ unch112J (str.++ ch12J unch212J))))
(assert (= "leXi4" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "lebe4am" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "lebedeOi" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= "lebe4i" (str.++ unch112D (str.++ var12D unch212D))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (= (ite (= ch12G var12G) 0 1) sc12G))
(assert (= (ite (= ch12H var12H) 0 1) sc12H))
(assert (= (ite (= ch12I var12I) 0 1) sc12I))
(assert (= (ite (= ch12J var12J) 0 1) sc12J))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= sc12G 1))
(assert (<= sc12H 1))
(assert (<= sc12I 1))
(assert (<= sc12J 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (<= (str.len var13G) 1))
(assert (<= (str.len var13H) 1))
(assert (<= (str.len var13I) 1))
(assert (<= (str.len var13J) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= (str.++ preG (str.++ stem13 sufG)) (str.++ unch113G (str.++ ch13G unch213G))))
(assert (= (str.++ preH (str.++ stem13 sufH)) (str.++ unch113H (str.++ ch13H unch213H))))
(assert (= (str.++ preI (str.++ stem13 sufI)) (str.++ unch113I (str.++ ch13I unch213I))))
(assert (= (str.++ preJ (str.++ stem13 sufJ)) (str.++ unch113J (str.++ ch13J unch213J))))
(assert (= "su6id" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "su6idam" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "su6idoOi" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= "su6idoOi" (str.++ unch113E (str.++ var13E unch213E))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (= (ite (= ch13G var13G) 0 1) sc13G))
(assert (= (ite (= ch13H var13H) 0 1) sc13H))
(assert (= (ite (= ch13I var13I) 0 1) sc13I))
(assert (= (ite (= ch13J var13J) 0 1) sc13J))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= sc13G 1))
(assert (<= sc13H 1))
(assert (<= sc13I 1))
(assert (<= sc13J 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (<= (str.len var14G) 1))
(assert (<= (str.len var14H) 1))
(assert (<= (str.len var14I) 1))
(assert (<= (str.len var14J) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= (str.++ preG (str.++ stem14 sufG)) (str.++ unch114G (str.++ ch14G unch214G))))
(assert (= (str.++ preH (str.++ stem14 sufH)) (str.++ unch114H (str.++ ch14H unch214H))))
(assert (= (str.++ preI (str.++ stem14 sufI)) (str.++ unch114I (str.++ ch14I unch214I))))
(assert (= (str.++ preJ (str.++ stem14 sufJ)) (str.++ unch114J (str.++ ch14J unch214J))))
(assert (= "EoloOik" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "EoloOikam" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "EoloOikoOi" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= "EoloOikoOi" (str.++ unch114E (str.++ var14E unch214E))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (= (ite (= ch14G var14G) 0 1) sc14G))
(assert (= (ite (= ch14H var14H) 0 1) sc14H))
(assert (= (ite (= ch14I var14I) 0 1) sc14I))
(assert (= (ite (= ch14J var14J) 0 1) sc14J))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= sc14G 1))
(assert (<= sc14H 1))
(assert (<= sc14I 1))
(assert (<= sc14J 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (<= (str.len var15G) 1))
(assert (<= (str.len var15H) 1))
(assert (<= (str.len var15I) 1))
(assert (<= (str.len var15J) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= (str.++ preG (str.++ stem15 sufG)) (str.++ unch115G (str.++ ch15G unch215G))))
(assert (= (str.++ preH (str.++ stem15 sufH)) (str.++ unch115H (str.++ ch15H unch215H))))
(assert (= (str.++ preI (str.++ stem15 sufI)) (str.++ unch115I (str.++ ch15I unch215I))))
(assert (= (str.++ preJ (str.++ stem15 sufJ)) (str.++ unch115J (str.++ ch15J unch215J))))
(assert (= "3id" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "ledam" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "ledoOi" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= "le4i" (str.++ unch115D (str.++ var15D unch215D))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (= (ite (= ch15G var15G) 0 1) sc15G))
(assert (= (ite (= ch15H var15H) 0 1) sc15H))
(assert (= (ite (= ch15I var15I) 0 1) sc15I))
(assert (= (ite (= ch15J var15J) 0 1) sc15J))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= sc15G 1))
(assert (<= sc15H 1))
(assert (<= sc15I 1))
(assert (<= sc15J 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (<= (str.len var16G) 1))
(assert (<= (str.len var16H) 1))
(assert (<= (str.len var16I) 1))
(assert (<= (str.len var16J) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= (str.++ preG (str.++ stem16 sufG)) (str.++ unch116G (str.++ ch16G unch216G))))
(assert (= (str.++ preH (str.++ stem16 sufH)) (str.++ unch116H (str.++ ch16H unch216H))))
(assert (= (str.++ preI (str.++ stem16 sufI)) (str.++ unch116I (str.++ ch16I unch216I))))
(assert (= (str.++ preJ (str.++ stem16 sufJ)) (str.++ unch116J (str.++ ch16J unch216J))))
(assert (= "bi3" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bo3am" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "boleOi" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= "bo3i" (str.++ unch116D (str.++ var16D unch216D))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (= (ite (= ch16G var16G) 0 1) sc16G))
(assert (= (ite (= ch16H var16H) 0 1) sc16H))
(assert (= (ite (= ch16I var16I) 0 1) sc16I))
(assert (= (ite (= ch16J var16J) 0 1) sc16J))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= sc16G 1))
(assert (<= sc16H 1))
(assert (<= sc16I 1))
(assert (<= sc16J 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (<= (str.len var17G) 1))
(assert (<= (str.len var17H) 1))
(assert (<= (str.len var17I) 1))
(assert (<= (str.len var17J) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= (str.++ preG (str.++ stem17 sufG)) (str.++ unch117G (str.++ ch17G unch217G))))
(assert (= (str.++ preH (str.++ stem17 sufH)) (str.++ unch117H (str.++ ch17H unch217H))))
(assert (= (str.++ preI (str.++ stem17 sufI)) (str.++ unch117I (str.++ ch17I unch217I))))
(assert (= (str.++ preJ (str.++ stem17 sufJ)) (str.++ unch117J (str.++ ch17J unch217J))))
(assert (= "riw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "rovam" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "rovoOi" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= "roOi" (str.++ unch117D (str.++ var17D unch217D))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (= (ite (= ch17G var17G) 0 1) sc17G))
(assert (= (ite (= ch17H var17H) 0 1) sc17H))
(assert (= (ite (= ch17I var17I) 0 1) sc17I))
(assert (= (ite (= ch17J var17J) 0 1) sc17J))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= sc17G 1))
(assert (<= sc17H 1))
(assert (<= sc17I 1))
(assert (<= sc17J 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (<= (str.len var18G) 1))
(assert (<= (str.len var18H) 1))
(assert (<= (str.len var18I) 1))
(assert (<= (str.len var18J) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= (str.++ preG (str.++ stem18 sufG)) (str.++ unch118G (str.++ ch18G unch218G))))
(assert (= (str.++ preH (str.++ stem18 sufH)) (str.++ unch118H (str.++ ch18H unch218H))))
(assert (= (str.++ preI (str.++ stem18 sufI)) (str.++ unch118I (str.++ ch18I unch218I))))
(assert (= (str.++ preJ (str.++ stem18 sufJ)) (str.++ unch118J (str.++ ch18J unch218J))))
(assert (= "stiw" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "stolam" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "stoloOi" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= "sto3i" (str.++ unch118D (str.++ var18D unch218D))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (= (ite (= ch18G var18G) 0 1) sc18G))
(assert (= (ite (= ch18H var18H) 0 1) sc18H))
(assert (= (ite (= ch18I var18I) 0 1) sc18I))
(assert (= (ite (= ch18J var18J) 0 1) sc18J))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= sc18G 1))
(assert (<= sc18H 1))
(assert (<= sc18I 1))
(assert (<= sc18J 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (<= (str.len var19G) 1))
(assert (<= (str.len var19H) 1))
(assert (<= (str.len var19I) 1))
(assert (<= (str.len var19J) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= (str.++ preG (str.++ stem19 sufG)) (str.++ unch119G (str.++ ch19G unch219G))))
(assert (= (str.++ preH (str.++ stem19 sufH)) (str.++ unch119H (str.++ ch19H unch219H))))
(assert (= (str.++ preI (str.++ stem19 sufI)) (str.++ unch119I (str.++ ch19I unch219I))))
(assert (= (str.++ preJ (str.++ stem19 sufJ)) (str.++ unch119J (str.++ ch19J unch219J))))
(assert (= "4id" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "4idam" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "4idoOi" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= "4idoOi" (str.++ unch119E (str.++ var19E unch219E))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (= (ite (= ch19G var19G) 0 1) sc19G))
(assert (= (ite (= ch19H var19H) 0 1) sc19H))
(assert (= (ite (= ch19I var19I) 0 1) sc19I))
(assert (= (ite (= ch19J var19J) 0 1) sc19J))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= sc19G 1))
(assert (<= sc19H 1))
(assert (<= sc19I 1))
(assert (<= sc19J 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (<= (str.len var20G) 1))
(assert (<= (str.len var20H) 1))
(assert (<= (str.len var20I) 1))
(assert (<= (str.len var20J) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= (str.++ preG (str.++ stem20 sufG)) (str.++ unch120G (str.++ ch20G unch220G))))
(assert (= (str.++ preH (str.++ stem20 sufH)) (str.++ unch120H (str.++ ch20H unch220H))))
(assert (= (str.++ preI (str.++ stem20 sufI)) (str.++ unch120I (str.++ ch20I unch220I))))
(assert (= (str.++ preJ (str.++ stem20 sufJ)) (str.++ unch120J (str.++ ch20J unch220J))))
(assert (= "3it" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "3otam" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "3otoOi" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= "3oZi" (str.++ unch120D (str.++ var20D unch220D))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (= (ite (= ch20G var20G) 0 1) sc20G))
(assert (= (ite (= ch20H var20H) 0 1) sc20H))
(assert (= (ite (= ch20I var20I) 0 1) sc20I))
(assert (= (ite (= ch20J var20J) 0 1) sc20J))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= sc20G 1))
(assert (<= sc20H 1))
(assert (<= sc20I 1))
(assert (<= sc20J 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (<= (str.len var21G) 1))
(assert (<= (str.len var21H) 1))
(assert (<= (str.len var21I) 1))
(assert (<= (str.len var21J) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= (str.++ preG (str.++ stem21 sufG)) (str.++ unch121G (str.++ ch21G unch221G))))
(assert (= (str.++ preH (str.++ stem21 sufH)) (str.++ unch121H (str.++ ch21H unch221H))))
(assert (= (str.++ preI (str.++ stem21 sufI)) (str.++ unch121I (str.++ ch21I unch221I))))
(assert (= (str.++ preJ (str.++ stem21 sufJ)) (str.++ unch121J (str.++ ch21J unch221J))))
(assert (= "mist" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "mostam" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "mostoOi" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= "mosZi" (str.++ unch121D (str.++ var21D unch221D))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (= (ite (= ch21G var21G) 0 1) sc21G))
(assert (= (ite (= ch21H var21H) 0 1) sc21H))
(assert (= (ite (= ch21I var21I) 0 1) sc21I))
(assert (= (ite (= ch21J var21J) 0 1) sc21J))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= sc21G 1))
(assert (<= sc21H 1))
(assert (<= sc21I 1))
(assert (<= sc21J 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (<= (str.len var22G) 1))
(assert (<= (str.len var22H) 1))
(assert (<= (str.len var22I) 1))
(assert (<= (str.len var22J) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= (str.++ preG (str.++ stem22 sufG)) (str.++ unch122G (str.++ ch22G unch222G))))
(assert (= (str.++ preH (str.++ stem22 sufH)) (str.++ unch122H (str.++ ch22H unch222H))))
(assert (= (str.++ preI (str.++ stem22 sufI)) (str.++ unch122I (str.++ ch22I unch222I))))
(assert (= (str.++ preJ (str.++ stem22 sufJ)) (str.++ unch122J (str.++ ch22J unch222J))))
(assert (= "veEir" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "veEoram" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "veEoroOi" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= "veEo9i" (str.++ unch122D (str.++ var22D unch222D))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (= (ite (= ch22G var22G) 0 1) sc22G))
(assert (= (ite (= ch22H var22H) 0 1) sc22H))
(assert (= (ite (= ch22I var22I) 0 1) sc22I))
(assert (= (ite (= ch22J var22J) 0 1) sc22J))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= sc22G 1))
(assert (<= sc22H 1))
(assert (<= sc22I 1))
(assert (<= sc22J 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (<= (str.len var23G) 1))
(assert (<= (str.len var23H) 1))
(assert (<= (str.len var23I) 1))
(assert (<= (str.len var23J) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= (str.++ preG (str.++ stem23 sufG)) (str.++ unch123G (str.++ ch23G unch223G))))
(assert (= (str.++ preH (str.++ stem23 sufH)) (str.++ unch123H (str.++ ch23H unch223H))))
(assert (= (str.++ preI (str.++ stem23 sufI)) (str.++ unch123I (str.++ ch23I unch223I))))
(assert (= (str.++ preJ (str.++ stem23 sufJ)) (str.++ unch123J (str.++ ch23J unch223J))))
(assert (= "Zilo" (str.++ unch123F (str.++ var23F unch223F))))
(assert (= "Zila" (str.++ unch123G (str.++ var23G unch223G))))
(assert (= "Zilu" (str.++ unch123H (str.++ var23H unch223H))))
(assert (= "Zi3i" (str.++ unch123I (str.++ var23I unch223I))))
(assert (= "Ziw" (str.++ unch123J (str.++ var23J unch223J))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (= (ite (= ch23G var23G) 0 1) sc23G))
(assert (= (ite (= ch23H var23H) 0 1) sc23H))
(assert (= (ite (= ch23I var23I) 0 1) sc23I))
(assert (= (ite (= ch23J var23J) 0 1) sc23J))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= sc23G 1))
(assert (<= sc23H 1))
(assert (<= sc23I 1))
(assert (<= sc23J 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (<= (str.len var24G) 1))
(assert (<= (str.len var24H) 1))
(assert (<= (str.len var24I) 1))
(assert (<= (str.len var24J) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= (str.++ preG (str.++ stem24 sufG)) (str.++ unch124G (str.++ ch24G unch224G))))
(assert (= (str.++ preH (str.++ stem24 sufH)) (str.++ unch124H (str.++ ch24H unch224H))))
(assert (= (str.++ preI (str.++ stem24 sufI)) (str.++ unch124I (str.++ ch24I unch224I))))
(assert (= (str.++ preJ (str.++ stem24 sufJ)) (str.++ unch124J (str.++ ch24J unch224J))))
(assert (= "koleso" (str.++ unch124F (str.++ var24F unch224F))))
(assert (= "kolesa" (str.++ unch124G (str.++ var24G unch224G))))
(assert (= "kolesu" (str.++ unch124H (str.++ var24H unch224H))))
(assert (= "kole6i" (str.++ unch124I (str.++ var24I unch224I))))
(assert (= "ko3is" (str.++ unch124J (str.++ var24J unch224J))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (= (ite (= ch24G var24G) 0 1) sc24G))
(assert (= (ite (= ch24H var24H) 0 1) sc24H))
(assert (= (ite (= ch24I var24I) 0 1) sc24I))
(assert (= (ite (= ch24J var24J) 0 1) sc24J))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= sc24G 1))
(assert (<= sc24H 1))
(assert (<= sc24I 1))
(assert (<= sc24J 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (<= (str.len var25G) 1))
(assert (<= (str.len var25H) 1))
(assert (<= (str.len var25I) 1))
(assert (<= (str.len var25J) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= (str.++ preG (str.++ stem25 sufG)) (str.++ unch125G (str.++ ch25G unch225G))))
(assert (= (str.++ preH (str.++ stem25 sufH)) (str.++ unch125H (str.++ ch25H unch225H))))
(assert (= (str.++ preI (str.++ stem25 sufI)) (str.++ unch125I (str.++ ch25I unch225I))))
(assert (= (str.++ preJ (str.++ stem25 sufJ)) (str.++ unch125J (str.++ ch25J unch225J))))
(assert (= "ozero" (str.++ unch125F (str.++ var25F unch225F))))
(assert (= "ozera" (str.++ unch125G (str.++ var25G unch225G))))
(assert (= "ozeru" (str.++ unch125H (str.++ var25H unch225H))))
(assert (= "oze9i" (str.++ unch125I (str.++ var25I unch225I))))
(assert (= "o1ir" (str.++ unch125J (str.++ var25J unch225J))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (= (ite (= ch25G var25G) 0 1) sc25G))
(assert (= (ite (= ch25H var25H) 0 1) sc25H))
(assert (= (ite (= ch25I var25I) 0 1) sc25I))
(assert (= (ite (= ch25J var25J) 0 1) sc25J))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= sc25G 1))
(assert (<= sc25H 1))
(assert (<= sc25I 1))
(assert (<= sc25J 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (<= (str.len var26G) 1))
(assert (<= (str.len var26H) 1))
(assert (<= (str.len var26I) 1))
(assert (<= (str.len var26J) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= (str.++ preG (str.++ stem26 sufG)) (str.++ unch126G (str.++ ch26G unch226G))))
(assert (= (str.++ preH (str.++ stem26 sufH)) (str.++ unch126H (str.++ ch26H unch226H))))
(assert (= (str.++ preI (str.++ stem26 sufI)) (str.++ unch126I (str.++ ch26I unch226I))))
(assert (= (str.++ preJ (str.++ stem26 sufJ)) (str.++ unch126J (str.++ ch26J unch226J))))
(assert (= "selo" (str.++ unch126F (str.++ var26F unch226F))))
(assert (= "sela" (str.++ unch126G (str.++ var26G unch226G))))
(assert (= "selu" (str.++ unch126H (str.++ var26H unch226H))))
(assert (= "se3i" (str.++ unch126I (str.++ var26I unch226I))))
(assert (= "6iw" (str.++ unch126J (str.++ var26J unch226J))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (= (ite (= ch26G var26G) 0 1) sc26G))
(assert (= (ite (= ch26H var26H) 0 1) sc26H))
(assert (= (ite (= ch26I var26I) 0 1) sc26I))
(assert (= (ite (= ch26J var26J) 0 1) sc26J))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= sc26G 1))
(assert (<= sc26H 1))
(assert (<= sc26I 1))
(assert (<= sc26J 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (<= (str.len var27G) 1))
(assert (<= (str.len var27H) 1))
(assert (<= (str.len var27I) 1))
(assert (<= (str.len var27J) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= (str.++ preG (str.++ stem27 sufG)) (str.++ unch127G (str.++ ch27G unch227G))))
(assert (= (str.++ preH (str.++ stem27 sufH)) (str.++ unch127H (str.++ ch27H unch227H))))
(assert (= (str.++ preI (str.++ stem27 sufI)) (str.++ unch127I (str.++ ch27I unch227I))))
(assert (= (str.++ preJ (str.++ stem27 sufJ)) (str.++ unch127J (str.++ ch27J unch227J))))
(assert (= "pole" (str.++ unch127F (str.++ var27F unch227F))))
(assert (= "po3a" (str.++ unch127G (str.++ var27G unch227G))))
(assert (= "po3u" (str.++ unch127H (str.++ var27H unch227H))))
(assert (= "po3i" (str.++ unch127I (str.++ var27I unch227I))))
(assert (= "pi3" (str.++ unch127J (str.++ var27J unch227J))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (= (ite (= ch27G var27G) 0 1) sc27G))
(assert (= (ite (= ch27H var27H) 0 1) sc27H))
(assert (= (ite (= ch27I var27I) 0 1) sc27I))
(assert (= (ite (= ch27J var27J) 0 1) sc27J))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= sc27G 1))
(assert (<= sc27H 1))
(assert (<= sc27I 1))
(assert (<= sc27J 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (<= (str.len var28G) 1))
(assert (<= (str.len var28H) 1))
(assert (<= (str.len var28I) 1))
(assert (<= (str.len var28J) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= (str.++ preG (str.++ stem28 sufG)) (str.++ unch128G (str.++ ch28G unch228G))))
(assert (= (str.++ preH (str.++ stem28 sufH)) (str.++ unch128H (str.++ ch28H unch228H))))
(assert (= (str.++ preI (str.++ stem28 sufI)) (str.++ unch128I (str.++ ch28I unch228I))))
(assert (= (str.++ preJ (str.++ stem28 sufJ)) (str.++ unch128J (str.++ ch28J unch228J))))
(assert (= "slovo" (str.++ unch128F (str.++ var28F unch228F))))
(assert (= "slova" (str.++ unch128G (str.++ var28G unch228G))))
(assert (= "slovu" (str.++ unch128H (str.++ var28H unch228H))))
(assert (= "sloOi" (str.++ unch128I (str.++ var28I unch228I))))
(assert (= "sliw" (str.++ unch128J (str.++ var28J unch228J))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (= (ite (= ch28G var28G) 0 1) sc28G))
(assert (= (ite (= ch28H var28H) 0 1) sc28H))
(assert (= (ite (= ch28I var28I) 0 1) sc28I))
(assert (= (ite (= ch28J var28J) 0 1) sc28J))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= sc28G 1))
(assert (<= sc28H 1))
(assert (<= sc28I 1))
(assert (<= sc28J 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (<= (str.len var29G) 1))
(assert (<= (str.len var29H) 1))
(assert (<= (str.len var29I) 1))
(assert (<= (str.len var29J) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= (str.++ preG (str.++ stem29 sufG)) (str.++ unch129G (str.++ ch29G unch229G))))
(assert (= (str.++ preH (str.++ stem29 sufH)) (str.++ unch129H (str.++ ch29H unch229H))))
(assert (= (str.++ preI (str.++ stem29 sufI)) (str.++ unch129I (str.++ ch29I unch229I))))
(assert (= (str.++ preJ (str.++ stem29 sufJ)) (str.++ unch129J (str.++ ch29J unch229J))))
(assert (= "more" (str.++ unch129F (str.++ var29F unch229F))))
(assert (= "mo9a" (str.++ unch129G (str.++ var29G unch229G))))
(assert (= "mo9u" (str.++ unch129H (str.++ var29H unch229H))))
(assert (= "mo9i" (str.++ unch129I (str.++ var29I unch229I))))
(assert (= "mi9" (str.++ unch129J (str.++ var29J unch229J))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (= (ite (= ch29G var29G) 0 1) sc29G))
(assert (= (ite (= ch29H var29H) 0 1) sc29H))
(assert (= (ite (= ch29I var29I) 0 1) sc29I))
(assert (= (ite (= ch29J var29J) 0 1) sc29J))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= sc29G 1))
(assert (<= sc29H 1))
(assert (<= sc29I 1))
(assert (<= sc29J 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      sc0I
      sc0J
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      sc1I
      sc1J
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      sc2I
      sc2J
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      sc3I
      sc3J
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      sc4I
      sc4J
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      sc5I
      sc5J
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H
      sc6I
      sc6J
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      sc7G
      sc7H
      sc7I
      sc7J
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      sc8G
      sc8H
      sc8I
      sc8J
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      sc9G
      sc9H
      sc9I
      sc9J
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      sc10G
      sc10H
      sc10I
      sc10J
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      sc11G
      sc11H
      sc11I
      sc11J
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      sc12G
      sc12H
      sc12I
      sc12J
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      sc13G
      sc13H
      sc13I
      sc13J
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      sc14G
      sc14H
      sc14I
      sc14J
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      sc15G
      sc15H
      sc15I
      sc15J
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      sc16G
      sc16H
      sc16I
      sc16J
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      sc17G
      sc17H
      sc17I
      sc17J
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      sc18G
      sc18H
      sc18I
      sc18J
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      sc19G
      sc19H
      sc19I
      sc19J
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      sc20G
      sc20H
      sc20I
      sc20J
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      sc21G
      sc21H
      sc21I
      sc21J
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      sc22G
      sc22H
      sc22I
      sc22J
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      sc23G
      sc23H
      sc23I
      sc23J
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      sc24G
      sc24H
      sc24I
      sc24J
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      sc25G
      sc25H
      sc25I
      sc25J
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      sc26G
      sc26H
      sc26I
      sc26J
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      sc27G
      sc27H
      sc27I
      sc27J
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      sc28G
      sc28H
      sc28I
      sc28J
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      sc29G
      sc29H
      sc29I
      sc29J)
   17))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun var0I () String)
(declare-fun var0J () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun unch20I () String)
(declare-fun ch0I () String)
(declare-fun unch10I () String)
(declare-fun sufI () String)
(declare-fun preI () String)
(declare-fun unch20J () String)
(declare-fun ch0J () String)
(declare-fun unch10J () String)
(declare-fun sufJ () String)
(declare-fun preJ () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun sc0I () Int)
(declare-fun sc0J () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun var1I () String)
(declare-fun var1J () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun unch21I () String)
(declare-fun ch1I () String)
(declare-fun unch11I () String)
(declare-fun unch21J () String)
(declare-fun ch1J () String)
(declare-fun unch11J () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun sc1I () Int)
(declare-fun sc1J () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun var2I () String)
(declare-fun var2J () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun unch22I () String)
(declare-fun ch2I () String)
(declare-fun unch12I () String)
(declare-fun unch22J () String)
(declare-fun ch2J () String)
(declare-fun unch12J () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun sc2I () Int)
(declare-fun sc2J () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun var3I () String)
(declare-fun var3J () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun unch23I () String)
(declare-fun ch3I () String)
(declare-fun unch13I () String)
(declare-fun unch23J () String)
(declare-fun ch3J () String)
(declare-fun unch13J () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun sc3I () Int)
(declare-fun sc3J () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun var4I () String)
(declare-fun var4J () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun unch24I () String)
(declare-fun ch4I () String)
(declare-fun unch14I () String)
(declare-fun unch24J () String)
(declare-fun ch4J () String)
(declare-fun unch14J () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun sc4I () Int)
(declare-fun sc4J () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun var5I () String)
(declare-fun var5J () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun unch25I () String)
(declare-fun ch5I () String)
(declare-fun unch15I () String)
(declare-fun unch25J () String)
(declare-fun ch5J () String)
(declare-fun unch15J () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun sc5I () Int)
(declare-fun sc5J () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun var6I () String)
(declare-fun var6J () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun unch26I () String)
(declare-fun ch6I () String)
(declare-fun unch16I () String)
(declare-fun unch26J () String)
(declare-fun ch6J () String)
(declare-fun unch16J () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(declare-fun sc6I () Int)
(declare-fun sc6J () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun var7G () String)
(declare-fun var7H () String)
(declare-fun var7I () String)
(declare-fun var7J () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun unch27G () String)
(declare-fun ch7G () String)
(declare-fun unch17G () String)
(declare-fun unch27H () String)
(declare-fun ch7H () String)
(declare-fun unch17H () String)
(declare-fun unch27I () String)
(declare-fun ch7I () String)
(declare-fun unch17I () String)
(declare-fun unch27J () String)
(declare-fun ch7J () String)
(declare-fun unch17J () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun sc7G () Int)
(declare-fun sc7H () Int)
(declare-fun sc7I () Int)
(declare-fun sc7J () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun var8G () String)
(declare-fun var8H () String)
(declare-fun var8I () String)
(declare-fun var8J () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun unch28G () String)
(declare-fun ch8G () String)
(declare-fun unch18G () String)
(declare-fun unch28H () String)
(declare-fun ch8H () String)
(declare-fun unch18H () String)
(declare-fun unch28I () String)
(declare-fun ch8I () String)
(declare-fun unch18I () String)
(declare-fun unch28J () String)
(declare-fun ch8J () String)
(declare-fun unch18J () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun sc8G () Int)
(declare-fun sc8H () Int)
(declare-fun sc8I () Int)
(declare-fun sc8J () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun var9G () String)
(declare-fun var9H () String)
(declare-fun var9I () String)
(declare-fun var9J () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun unch29G () String)
(declare-fun ch9G () String)
(declare-fun unch19G () String)
(declare-fun unch29H () String)
(declare-fun ch9H () String)
(declare-fun unch19H () String)
(declare-fun unch29I () String)
(declare-fun ch9I () String)
(declare-fun unch19I () String)
(declare-fun unch29J () String)
(declare-fun ch9J () String)
(declare-fun unch19J () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun sc9G () Int)
(declare-fun sc9H () Int)
(declare-fun sc9I () Int)
(declare-fun sc9J () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun var10G () String)
(declare-fun var10H () String)
(declare-fun var10I () String)
(declare-fun var10J () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun unch210G () String)
(declare-fun ch10G () String)
(declare-fun unch110G () String)
(declare-fun unch210H () String)
(declare-fun ch10H () String)
(declare-fun unch110H () String)
(declare-fun unch210I () String)
(declare-fun ch10I () String)
(declare-fun unch110I () String)
(declare-fun unch210J () String)
(declare-fun ch10J () String)
(declare-fun unch110J () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun sc10G () Int)
(declare-fun sc10H () Int)
(declare-fun sc10I () Int)
(declare-fun sc10J () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun var11G () String)
(declare-fun var11H () String)
(declare-fun var11I () String)
(declare-fun var11J () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun unch211G () String)
(declare-fun ch11G () String)
(declare-fun unch111G () String)
(declare-fun unch211H () String)
(declare-fun ch11H () String)
(declare-fun unch111H () String)
(declare-fun unch211I () String)
(declare-fun ch11I () String)
(declare-fun unch111I () String)
(declare-fun unch211J () String)
(declare-fun ch11J () String)
(declare-fun unch111J () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun sc11G () Int)
(declare-fun sc11H () Int)
(declare-fun sc11I () Int)
(declare-fun sc11J () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun var12G () String)
(declare-fun var12H () String)
(declare-fun var12I () String)
(declare-fun var12J () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun unch212G () String)
(declare-fun ch12G () String)
(declare-fun unch112G () String)
(declare-fun unch212H () String)
(declare-fun ch12H () String)
(declare-fun unch112H () String)
(declare-fun unch212I () String)
(declare-fun ch12I () String)
(declare-fun unch112I () String)
(declare-fun unch212J () String)
(declare-fun ch12J () String)
(declare-fun unch112J () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun sc12G () Int)
(declare-fun sc12H () Int)
(declare-fun sc12I () Int)
(declare-fun sc12J () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun var13G () String)
(declare-fun var13H () String)
(declare-fun var13I () String)
(declare-fun var13J () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun unch213G () String)
(declare-fun ch13G () String)
(declare-fun unch113G () String)
(declare-fun unch213H () String)
(declare-fun ch13H () String)
(declare-fun unch113H () String)
(declare-fun unch213I () String)
(declare-fun ch13I () String)
(declare-fun unch113I () String)
(declare-fun unch213J () String)
(declare-fun ch13J () String)
(declare-fun unch113J () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun sc13G () Int)
(declare-fun sc13H () Int)
(declare-fun sc13I () Int)
(declare-fun sc13J () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun var14G () String)
(declare-fun var14H () String)
(declare-fun var14I () String)
(declare-fun var14J () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun unch214G () String)
(declare-fun ch14G () String)
(declare-fun unch114G () String)
(declare-fun unch214H () String)
(declare-fun ch14H () String)
(declare-fun unch114H () String)
(declare-fun unch214I () String)
(declare-fun ch14I () String)
(declare-fun unch114I () String)
(declare-fun unch214J () String)
(declare-fun ch14J () String)
(declare-fun unch114J () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun sc14G () Int)
(declare-fun sc14H () Int)
(declare-fun sc14I () Int)
(declare-fun sc14J () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun var15G () String)
(declare-fun var15H () String)
(declare-fun var15I () String)
(declare-fun var15J () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun unch215G () String)
(declare-fun ch15G () String)
(declare-fun unch115G () String)
(declare-fun unch215H () String)
(declare-fun ch15H () String)
(declare-fun unch115H () String)
(declare-fun unch215I () String)
(declare-fun ch15I () String)
(declare-fun unch115I () String)
(declare-fun unch215J () String)
(declare-fun ch15J () String)
(declare-fun unch115J () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun sc15G () Int)
(declare-fun sc15H () Int)
(declare-fun sc15I () Int)
(declare-fun sc15J () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun var16G () String)
(declare-fun var16H () String)
(declare-fun var16I () String)
(declare-fun var16J () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun unch216G () String)
(declare-fun ch16G () String)
(declare-fun unch116G () String)
(declare-fun unch216H () String)
(declare-fun ch16H () String)
(declare-fun unch116H () String)
(declare-fun unch216I () String)
(declare-fun ch16I () String)
(declare-fun unch116I () String)
(declare-fun unch216J () String)
(declare-fun ch16J () String)
(declare-fun unch116J () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun sc16G () Int)
(declare-fun sc16H () Int)
(declare-fun sc16I () Int)
(declare-fun sc16J () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun var17G () String)
(declare-fun var17H () String)
(declare-fun var17I () String)
(declare-fun var17J () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun unch217G () String)
(declare-fun ch17G () String)
(declare-fun unch117G () String)
(declare-fun unch217H () String)
(declare-fun ch17H () String)
(declare-fun unch117H () String)
(declare-fun unch217I () String)
(declare-fun ch17I () String)
(declare-fun unch117I () String)
(declare-fun unch217J () String)
(declare-fun ch17J () String)
(declare-fun unch117J () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun sc17G () Int)
(declare-fun sc17H () Int)
(declare-fun sc17I () Int)
(declare-fun sc17J () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun var18G () String)
(declare-fun var18H () String)
(declare-fun var18I () String)
(declare-fun var18J () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun unch218G () String)
(declare-fun ch18G () String)
(declare-fun unch118G () String)
(declare-fun unch218H () String)
(declare-fun ch18H () String)
(declare-fun unch118H () String)
(declare-fun unch218I () String)
(declare-fun ch18I () String)
(declare-fun unch118I () String)
(declare-fun unch218J () String)
(declare-fun ch18J () String)
(declare-fun unch118J () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun sc18G () Int)
(declare-fun sc18H () Int)
(declare-fun sc18I () Int)
(declare-fun sc18J () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun var19G () String)
(declare-fun var19H () String)
(declare-fun var19I () String)
(declare-fun var19J () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun unch219G () String)
(declare-fun ch19G () String)
(declare-fun unch119G () String)
(declare-fun unch219H () String)
(declare-fun ch19H () String)
(declare-fun unch119H () String)
(declare-fun unch219I () String)
(declare-fun ch19I () String)
(declare-fun unch119I () String)
(declare-fun unch219J () String)
(declare-fun ch19J () String)
(declare-fun unch119J () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun sc19G () Int)
(declare-fun sc19H () Int)
(declare-fun sc19I () Int)
(declare-fun sc19J () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun var20G () String)
(declare-fun var20H () String)
(declare-fun var20I () String)
(declare-fun var20J () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun unch220G () String)
(declare-fun ch20G () String)
(declare-fun unch120G () String)
(declare-fun unch220H () String)
(declare-fun ch20H () String)
(declare-fun unch120H () String)
(declare-fun unch220I () String)
(declare-fun ch20I () String)
(declare-fun unch120I () String)
(declare-fun unch220J () String)
(declare-fun ch20J () String)
(declare-fun unch120J () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun sc20G () Int)
(declare-fun sc20H () Int)
(declare-fun sc20I () Int)
(declare-fun sc20J () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun var21G () String)
(declare-fun var21H () String)
(declare-fun var21I () String)
(declare-fun var21J () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun unch221G () String)
(declare-fun ch21G () String)
(declare-fun unch121G () String)
(declare-fun unch221H () String)
(declare-fun ch21H () String)
(declare-fun unch121H () String)
(declare-fun unch221I () String)
(declare-fun ch21I () String)
(declare-fun unch121I () String)
(declare-fun unch221J () String)
(declare-fun ch21J () String)
(declare-fun unch121J () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun sc21G () Int)
(declare-fun sc21H () Int)
(declare-fun sc21I () Int)
(declare-fun sc21J () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun var22G () String)
(declare-fun var22H () String)
(declare-fun var22I () String)
(declare-fun var22J () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun unch222G () String)
(declare-fun ch22G () String)
(declare-fun unch122G () String)
(declare-fun unch222H () String)
(declare-fun ch22H () String)
(declare-fun unch122H () String)
(declare-fun unch222I () String)
(declare-fun ch22I () String)
(declare-fun unch122I () String)
(declare-fun unch222J () String)
(declare-fun ch22J () String)
(declare-fun unch122J () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun sc22G () Int)
(declare-fun sc22H () Int)
(declare-fun sc22I () Int)
(declare-fun sc22J () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun var23G () String)
(declare-fun var23H () String)
(declare-fun var23I () String)
(declare-fun var23J () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun unch223G () String)
(declare-fun ch23G () String)
(declare-fun unch123G () String)
(declare-fun unch223H () String)
(declare-fun ch23H () String)
(declare-fun unch123H () String)
(declare-fun unch223I () String)
(declare-fun ch23I () String)
(declare-fun unch123I () String)
(declare-fun unch223J () String)
(declare-fun ch23J () String)
(declare-fun unch123J () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun sc23G () Int)
(declare-fun sc23H () Int)
(declare-fun sc23I () Int)
(declare-fun sc23J () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun var24G () String)
(declare-fun var24H () String)
(declare-fun var24I () String)
(declare-fun var24J () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun unch224G () String)
(declare-fun ch24G () String)
(declare-fun unch124G () String)
(declare-fun unch224H () String)
(declare-fun ch24H () String)
(declare-fun unch124H () String)
(declare-fun unch224I () String)
(declare-fun ch24I () String)
(declare-fun unch124I () String)
(declare-fun unch224J () String)
(declare-fun ch24J () String)
(declare-fun unch124J () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun sc24G () Int)
(declare-fun sc24H () Int)
(declare-fun sc24I () Int)
(declare-fun sc24J () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun var25G () String)
(declare-fun var25H () String)
(declare-fun var25I () String)
(declare-fun var25J () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun unch225G () String)
(declare-fun ch25G () String)
(declare-fun unch125G () String)
(declare-fun unch225H () String)
(declare-fun ch25H () String)
(declare-fun unch125H () String)
(declare-fun unch225I () String)
(declare-fun ch25I () String)
(declare-fun unch125I () String)
(declare-fun unch225J () String)
(declare-fun ch25J () String)
(declare-fun unch125J () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun sc25G () Int)
(declare-fun sc25H () Int)
(declare-fun sc25I () Int)
(declare-fun sc25J () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun var26G () String)
(declare-fun var26H () String)
(declare-fun var26I () String)
(declare-fun var26J () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun unch226G () String)
(declare-fun ch26G () String)
(declare-fun unch126G () String)
(declare-fun unch226H () String)
(declare-fun ch26H () String)
(declare-fun unch126H () String)
(declare-fun unch226I () String)
(declare-fun ch26I () String)
(declare-fun unch126I () String)
(declare-fun unch226J () String)
(declare-fun ch26J () String)
(declare-fun unch126J () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun sc26G () Int)
(declare-fun sc26H () Int)
(declare-fun sc26I () Int)
(declare-fun sc26J () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun var27G () String)
(declare-fun var27H () String)
(declare-fun var27I () String)
(declare-fun var27J () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun unch227G () String)
(declare-fun ch27G () String)
(declare-fun unch127G () String)
(declare-fun unch227H () String)
(declare-fun ch27H () String)
(declare-fun unch127H () String)
(declare-fun unch227I () String)
(declare-fun ch27I () String)
(declare-fun unch127I () String)
(declare-fun unch227J () String)
(declare-fun ch27J () String)
(declare-fun unch127J () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun sc27G () Int)
(declare-fun sc27H () Int)
(declare-fun sc27I () Int)
(declare-fun sc27J () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun var28G () String)
(declare-fun var28H () String)
(declare-fun var28I () String)
(declare-fun var28J () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun unch228G () String)
(declare-fun ch28G () String)
(declare-fun unch128G () String)
(declare-fun unch228H () String)
(declare-fun ch28H () String)
(declare-fun unch128H () String)
(declare-fun unch228I () String)
(declare-fun ch28I () String)
(declare-fun unch128I () String)
(declare-fun unch228J () String)
(declare-fun ch28J () String)
(declare-fun unch128J () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun sc28G () Int)
(declare-fun sc28H () Int)
(declare-fun sc28I () Int)
(declare-fun sc28J () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun var29G () String)
(declare-fun var29H () String)
(declare-fun var29I () String)
(declare-fun var29J () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun unch229G () String)
(declare-fun ch29G () String)
(declare-fun unch129G () String)
(declare-fun unch229H () String)
(declare-fun ch29H () String)
(declare-fun unch129H () String)
(declare-fun unch229I () String)
(declare-fun ch29I () String)
(declare-fun unch129I () String)
(declare-fun unch229J () String)
(declare-fun ch29J () String)
(declare-fun unch129J () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun sc29G () Int)
(declare-fun sc29H () Int)
(declare-fun sc29I () Int)
(declare-fun sc29J () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (<= (str.len var0I) 1))
(assert (<= (str.len var0J) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= (str.++ preI (str.++ stem0 sufI)) (str.++ unch10I (str.++ ch0I unch20I))))
(assert (= (str.++ preJ (str.++ stem0 sufJ)) (str.++ unch10J (str.++ ch0J unch20J))))
(assert (= "zub" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "zubam" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "zuboOi" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "zuXi" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (= (ite (= ch0I var0I) 0 1) sc0I))
(assert (= (ite (= ch0J var0J) 0 1) sc0J))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= sc0I 1))
(assert (<= sc0J 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (<= (str.len var1I) 1))
(assert (<= (str.len var1J) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= (str.++ preI (str.++ stem1 sufI)) (str.++ unch11I (str.++ ch1I unch21I))))
(assert (= (str.++ preJ (str.++ stem1 sufJ)) (str.++ unch11J (str.++ ch1J unch21J))))
(assert (= "sOit" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "sOitam" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "sOitoOi" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "sOiZi" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (= (ite (= ch1I var1I) 0 1) sc1I))
(assert (= (ite (= ch1J var1J) 0 1) sc1J))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= sc1I 1))
(assert (<= sc1J 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (<= (str.len var2I) 1))
(assert (<= (str.len var2J) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= (str.++ preI (str.++ stem2 sufI)) (str.++ unch12I (str.++ ch2I unch22I))))
(assert (= (str.++ preJ (str.++ stem2 sufJ)) (str.++ unch12J (str.++ ch2J unch22J))))
(assert (= "1aZ" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "1aZam" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "1ateOi" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "1ateOi" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (= (ite (= ch2I var2I) 0 1) sc2I))
(assert (= (ite (= ch2J var2J) 0 1) sc2J))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= sc2I 1))
(assert (<= sc2J 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (<= (str.len var3I) 1))
(assert (<= (str.len var3J) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= (str.++ preI (str.++ stem3 sufI)) (str.++ unch13I (str.++ ch3I unch23I))))
(assert (= (str.++ preJ (str.++ stem3 sufJ)) (str.++ unch13J (str.++ ch3J unch23J))))
(assert (= "ko2i3" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "koBe3am" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "koBeleOi" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "koBe3i" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (= (ite (= ch3I var3I) 0 1) sc3I))
(assert (= (ite (= ch3J var3J) 0 1) sc3J))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= sc3I 1))
(assert (<= sc3J 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (<= (str.len var4I) 1))
(assert (<= (str.len var4J) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= (str.++ preI (str.++ stem4 sufI)) (str.++ unch14I (str.++ ch4I unch24I))))
(assert (= (str.++ preJ (str.++ stem4 sufJ)) (str.++ unch14J (str.++ ch4J unch24J))))
(assert (= "zlo4ij" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "zlo4ijam" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "zlo4ijeOi" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "zlo4ijeOi" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (= (ite (= ch4I var4I) 0 1) sc4I))
(assert (= (ite (= ch4J var4J) 0 1) sc4J))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= sc4I 1))
(assert (<= sc4J 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (<= (str.len var5I) 1))
(assert (<= (str.len var5J) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= (str.++ preI (str.++ stem5 sufI)) (str.++ unch15I (str.++ ch5I unch25I))))
(assert (= (str.++ preJ (str.++ stem5 sufJ)) (str.++ unch15J (str.++ ch5J unch25J))))
(assert (= "5i6a7" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "5i6a7am" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "5i6aPeOi" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "5i6a7i" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (= (ite (= ch5I var5I) 0 1) sc5I))
(assert (= (ite (= ch5J var5J) 0 1) sc5J))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= sc5I 1))
(assert (<= sc5J 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (<= (str.len var6I) 1))
(assert (<= (str.len var6J) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= (str.++ preI (str.++ stem6 sufI)) (str.++ unch16I (str.++ ch6I unch26I))))
(assert (= (str.++ preJ (str.++ stem6 sufJ)) (str.++ unch16J (str.++ ch6J unch26J))))
(assert (= "korovaj" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "korovajam" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "korovajeOi" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "korovaji" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (= (ite (= ch6I var6I) 0 1) sc6I))
(assert (= (ite (= ch6J var6J) 0 1) sc6J))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (<= sc6I 1))
(assert (<= sc6J 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (<= (str.len var7G) 1))
(assert (<= (str.len var7H) 1))
(assert (<= (str.len var7I) 1))
(assert (<= (str.len var7J) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= (str.++ preG (str.++ stem7 sufG)) (str.++ unch17G (str.++ ch7G unch27G))))
(assert (= (str.++ preH (str.++ stem7 sufH)) (str.++ unch17H (str.++ ch7H unch27H))))
(assert (= (str.++ preI (str.++ stem7 sufI)) (str.++ unch17I (str.++ ch7I unch27I))))
(assert (= (str.++ preJ (str.++ stem7 sufJ)) (str.++ unch17J (str.++ ch7J unch27J))))
(assert (= "ka5i8" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "kame8am" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "kameneOi" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= "kame8i" (str.++ unch17D (str.++ var7D unch27D))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (= (ite (= ch7G var7G) 0 1) sc7G))
(assert (= (ite (= ch7H var7H) 0 1) sc7H))
(assert (= (ite (= ch7I var7I) 0 1) sc7I))
(assert (= (ite (= ch7J var7J) 0 1) sc7J))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= sc7G 1))
(assert (<= sc7H 1))
(assert (<= sc7I 1))
(assert (<= sc7J 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (<= (str.len var8G) 1))
(assert (<= (str.len var8H) 1))
(assert (<= (str.len var8I) 1))
(assert (<= (str.len var8J) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= (str.++ preG (str.++ stem8 sufG)) (str.++ unch18G (str.++ ch8G unch28G))))
(assert (= (str.++ preH (str.++ stem8 sufH)) (str.++ unch18H (str.++ ch8H unch28H))))
(assert (= (str.++ preI (str.++ stem8 sufI)) (str.++ unch18I (str.++ ch8I unch28I))))
(assert (= (str.++ preJ (str.++ stem8 sufJ)) (str.++ unch18J (str.++ ch8J unch28J))))
(assert (= "5i4" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "5i4am" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "5ideOi" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= "5i4i" (str.++ unch18D (str.++ var8D unch28D))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (= (ite (= ch8G var8G) 0 1) sc8G))
(assert (= (ite (= ch8H var8H) 0 1) sc8H))
(assert (= (ite (= ch8I var8I) 0 1) sc8I))
(assert (= (ite (= ch8J var8J) 0 1) sc8J))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= sc8G 1))
(assert (<= sc8H 1))
(assert (<= sc8I 1))
(assert (<= sc8J 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (<= (str.len var9G) 1))
(assert (<= (str.len var9H) 1))
(assert (<= (str.len var9I) 1))
(assert (<= (str.len var9J) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= (str.++ preG (str.++ stem9 sufG)) (str.++ unch19G (str.++ ch9G unch29G))))
(assert (= (str.++ preH (str.++ stem9 sufH)) (str.++ unch19H (str.++ ch9H unch29H))))
(assert (= (str.++ preI (str.++ stem9 sufI)) (str.++ unch19I (str.++ ch9I unch29I))))
(assert (= (str.++ preJ (str.++ stem9 sufJ)) (str.++ unch19J (str.++ ch9J unch29J))))
(assert (= "x3iw" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "x3ivam" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "x3ivoOi" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= "x3iOi" (str.++ unch19D (str.++ var9D unch29D))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (= (ite (= ch9G var9G) 0 1) sc9G))
(assert (= (ite (= ch9H var9H) 0 1) sc9H))
(assert (= (ite (= ch9I var9I) 0 1) sc9I))
(assert (= (ite (= ch9J var9J) 0 1) sc9J))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= sc9G 1))
(assert (<= sc9H 1))
(assert (<= sc9I 1))
(assert (<= sc9J 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (<= (str.len var10G) 1))
(assert (<= (str.len var10H) 1))
(assert (<= (str.len var10I) 1))
(assert (<= (str.len var10J) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= (str.++ preG (str.++ stem10 sufG)) (str.++ unch110G (str.++ ch10G unch210G))))
(assert (= (str.++ preH (str.++ stem10 sufH)) (str.++ unch110H (str.++ ch10H unch210H))))
(assert (= (str.++ preI (str.++ stem10 sufI)) (str.++ unch110I (str.++ ch10I unch210I))))
(assert (= (str.++ preJ (str.++ stem10 sufJ)) (str.++ unch110J (str.++ ch10J unch210J))))
(assert (= "holub" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "holubam" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "holuboOi" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= "holuXi" (str.++ unch110D (str.++ var10D unch210D))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (= (ite (= ch10G var10G) 0 1) sc10G))
(assert (= (ite (= ch10H var10H) 0 1) sc10H))
(assert (= (ite (= ch10I var10I) 0 1) sc10I))
(assert (= (ite (= ch10J var10J) 0 1) sc10J))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= sc10G 1))
(assert (<= sc10H 1))
(assert (<= sc10I 1))
(assert (<= sc10J 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (<= (str.len var11G) 1))
(assert (<= (str.len var11H) 1))
(assert (<= (str.len var11I) 1))
(assert (<= (str.len var11J) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= (str.++ preG (str.++ stem11 sufG)) (str.++ unch111G (str.++ ch11G unch211G))))
(assert (= (str.++ preH (str.++ stem11 sufH)) (str.++ unch111H (str.++ ch11H unch211H))))
(assert (= (str.++ preI (str.++ stem11 sufI)) (str.++ unch111I (str.++ ch11I unch211I))))
(assert (= (str.++ preJ (str.++ stem11 sufJ)) (str.++ unch111J (str.++ ch11J unch211J))))
(assert (= "6in" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "6inam" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "6inoOi" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= "6i8i" (str.++ unch111D (str.++ var11D unch211D))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (= (ite (= ch11G var11G) 0 1) sc11G))
(assert (= (ite (= ch11H var11H) 0 1) sc11H))
(assert (= (ite (= ch11I var11I) 0 1) sc11I))
(assert (= (ite (= ch11J var11J) 0 1) sc11J))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= sc11G 1))
(assert (<= sc11H 1))
(assert (<= sc11I 1))
(assert (<= sc11J 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (<= (str.len var12G) 1))
(assert (<= (str.len var12H) 1))
(assert (<= (str.len var12I) 1))
(assert (<= (str.len var12J) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= (str.++ preG (str.++ stem12 sufG)) (str.++ unch112G (str.++ ch12G unch212G))))
(assert (= (str.++ preH (str.++ stem12 sufH)) (str.++ unch112H (str.++ ch12H unch212H))))
(assert (= (str.++ preI (str.++ stem12 sufI)) (str.++ unch112I (str.++ ch12I unch212I))))
(assert (= (str.++ preJ (str.++ stem12 sufJ)) (str.++ unch112J (str.++ ch12J unch212J))))
(assert (= "leXi4" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "lebe4am" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "lebedeOi" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= "lebe4i" (str.++ unch112D (str.++ var12D unch212D))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (= (ite (= ch12G var12G) 0 1) sc12G))
(assert (= (ite (= ch12H var12H) 0 1) sc12H))
(assert (= (ite (= ch12I var12I) 0 1) sc12I))
(assert (= (ite (= ch12J var12J) 0 1) sc12J))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= sc12G 1))
(assert (<= sc12H 1))
(assert (<= sc12I 1))
(assert (<= sc12J 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (<= (str.len var13G) 1))
(assert (<= (str.len var13H) 1))
(assert (<= (str.len var13I) 1))
(assert (<= (str.len var13J) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= (str.++ preG (str.++ stem13 sufG)) (str.++ unch113G (str.++ ch13G unch213G))))
(assert (= (str.++ preH (str.++ stem13 sufH)) (str.++ unch113H (str.++ ch13H unch213H))))
(assert (= (str.++ preI (str.++ stem13 sufI)) (str.++ unch113I (str.++ ch13I unch213I))))
(assert (= (str.++ preJ (str.++ stem13 sufJ)) (str.++ unch113J (str.++ ch13J unch213J))))
(assert (= "su6id" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "su6idam" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "su6idoOi" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= "su6idoOi" (str.++ unch113E (str.++ var13E unch213E))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (= (ite (= ch13G var13G) 0 1) sc13G))
(assert (= (ite (= ch13H var13H) 0 1) sc13H))
(assert (= (ite (= ch13I var13I) 0 1) sc13I))
(assert (= (ite (= ch13J var13J) 0 1) sc13J))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= sc13G 1))
(assert (<= sc13H 1))
(assert (<= sc13I 1))
(assert (<= sc13J 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (<= (str.len var14G) 1))
(assert (<= (str.len var14H) 1))
(assert (<= (str.len var14I) 1))
(assert (<= (str.len var14J) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= (str.++ preG (str.++ stem14 sufG)) (str.++ unch114G (str.++ ch14G unch214G))))
(assert (= (str.++ preH (str.++ stem14 sufH)) (str.++ unch114H (str.++ ch14H unch214H))))
(assert (= (str.++ preI (str.++ stem14 sufI)) (str.++ unch114I (str.++ ch14I unch214I))))
(assert (= (str.++ preJ (str.++ stem14 sufJ)) (str.++ unch114J (str.++ ch14J unch214J))))
(assert (= "EoloOik" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "EoloOikam" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "EoloOikoOi" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= "EoloOikoOi" (str.++ unch114E (str.++ var14E unch214E))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (= (ite (= ch14G var14G) 0 1) sc14G))
(assert (= (ite (= ch14H var14H) 0 1) sc14H))
(assert (= (ite (= ch14I var14I) 0 1) sc14I))
(assert (= (ite (= ch14J var14J) 0 1) sc14J))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= sc14G 1))
(assert (<= sc14H 1))
(assert (<= sc14I 1))
(assert (<= sc14J 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (<= (str.len var15G) 1))
(assert (<= (str.len var15H) 1))
(assert (<= (str.len var15I) 1))
(assert (<= (str.len var15J) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= (str.++ preG (str.++ stem15 sufG)) (str.++ unch115G (str.++ ch15G unch215G))))
(assert (= (str.++ preH (str.++ stem15 sufH)) (str.++ unch115H (str.++ ch15H unch215H))))
(assert (= (str.++ preI (str.++ stem15 sufI)) (str.++ unch115I (str.++ ch15I unch215I))))
(assert (= (str.++ preJ (str.++ stem15 sufJ)) (str.++ unch115J (str.++ ch15J unch215J))))
(assert (= "3id" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "ledam" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "ledoOi" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= "le4i" (str.++ unch115D (str.++ var15D unch215D))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (= (ite (= ch15G var15G) 0 1) sc15G))
(assert (= (ite (= ch15H var15H) 0 1) sc15H))
(assert (= (ite (= ch15I var15I) 0 1) sc15I))
(assert (= (ite (= ch15J var15J) 0 1) sc15J))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= sc15G 1))
(assert (<= sc15H 1))
(assert (<= sc15I 1))
(assert (<= sc15J 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (<= (str.len var16G) 1))
(assert (<= (str.len var16H) 1))
(assert (<= (str.len var16I) 1))
(assert (<= (str.len var16J) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= (str.++ preG (str.++ stem16 sufG)) (str.++ unch116G (str.++ ch16G unch216G))))
(assert (= (str.++ preH (str.++ stem16 sufH)) (str.++ unch116H (str.++ ch16H unch216H))))
(assert (= (str.++ preI (str.++ stem16 sufI)) (str.++ unch116I (str.++ ch16I unch216I))))
(assert (= (str.++ preJ (str.++ stem16 sufJ)) (str.++ unch116J (str.++ ch16J unch216J))))
(assert (= "bi3" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bo3am" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "boleOi" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= "bo3i" (str.++ unch116D (str.++ var16D unch216D))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (= (ite (= ch16G var16G) 0 1) sc16G))
(assert (= (ite (= ch16H var16H) 0 1) sc16H))
(assert (= (ite (= ch16I var16I) 0 1) sc16I))
(assert (= (ite (= ch16J var16J) 0 1) sc16J))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= sc16G 1))
(assert (<= sc16H 1))
(assert (<= sc16I 1))
(assert (<= sc16J 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (<= (str.len var17G) 1))
(assert (<= (str.len var17H) 1))
(assert (<= (str.len var17I) 1))
(assert (<= (str.len var17J) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= (str.++ preG (str.++ stem17 sufG)) (str.++ unch117G (str.++ ch17G unch217G))))
(assert (= (str.++ preH (str.++ stem17 sufH)) (str.++ unch117H (str.++ ch17H unch217H))))
(assert (= (str.++ preI (str.++ stem17 sufI)) (str.++ unch117I (str.++ ch17I unch217I))))
(assert (= (str.++ preJ (str.++ stem17 sufJ)) (str.++ unch117J (str.++ ch17J unch217J))))
(assert (= "riw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "rovam" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "rovoOi" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= "roOi" (str.++ unch117D (str.++ var17D unch217D))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (= (ite (= ch17G var17G) 0 1) sc17G))
(assert (= (ite (= ch17H var17H) 0 1) sc17H))
(assert (= (ite (= ch17I var17I) 0 1) sc17I))
(assert (= (ite (= ch17J var17J) 0 1) sc17J))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= sc17G 1))
(assert (<= sc17H 1))
(assert (<= sc17I 1))
(assert (<= sc17J 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (<= (str.len var18G) 1))
(assert (<= (str.len var18H) 1))
(assert (<= (str.len var18I) 1))
(assert (<= (str.len var18J) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= (str.++ preG (str.++ stem18 sufG)) (str.++ unch118G (str.++ ch18G unch218G))))
(assert (= (str.++ preH (str.++ stem18 sufH)) (str.++ unch118H (str.++ ch18H unch218H))))
(assert (= (str.++ preI (str.++ stem18 sufI)) (str.++ unch118I (str.++ ch18I unch218I))))
(assert (= (str.++ preJ (str.++ stem18 sufJ)) (str.++ unch118J (str.++ ch18J unch218J))))
(assert (= "stiw" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "stolam" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "stoloOi" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= "sto3i" (str.++ unch118D (str.++ var18D unch218D))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (= (ite (= ch18G var18G) 0 1) sc18G))
(assert (= (ite (= ch18H var18H) 0 1) sc18H))
(assert (= (ite (= ch18I var18I) 0 1) sc18I))
(assert (= (ite (= ch18J var18J) 0 1) sc18J))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= sc18G 1))
(assert (<= sc18H 1))
(assert (<= sc18I 1))
(assert (<= sc18J 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (<= (str.len var19G) 1))
(assert (<= (str.len var19H) 1))
(assert (<= (str.len var19I) 1))
(assert (<= (str.len var19J) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= (str.++ preG (str.++ stem19 sufG)) (str.++ unch119G (str.++ ch19G unch219G))))
(assert (= (str.++ preH (str.++ stem19 sufH)) (str.++ unch119H (str.++ ch19H unch219H))))
(assert (= (str.++ preI (str.++ stem19 sufI)) (str.++ unch119I (str.++ ch19I unch219I))))
(assert (= (str.++ preJ (str.++ stem19 sufJ)) (str.++ unch119J (str.++ ch19J unch219J))))
(assert (= "4id" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "4idam" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "4idoOi" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= "4idoOi" (str.++ unch119E (str.++ var19E unch219E))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (= (ite (= ch19G var19G) 0 1) sc19G))
(assert (= (ite (= ch19H var19H) 0 1) sc19H))
(assert (= (ite (= ch19I var19I) 0 1) sc19I))
(assert (= (ite (= ch19J var19J) 0 1) sc19J))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= sc19G 1))
(assert (<= sc19H 1))
(assert (<= sc19I 1))
(assert (<= sc19J 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (<= (str.len var20G) 1))
(assert (<= (str.len var20H) 1))
(assert (<= (str.len var20I) 1))
(assert (<= (str.len var20J) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= (str.++ preG (str.++ stem20 sufG)) (str.++ unch120G (str.++ ch20G unch220G))))
(assert (= (str.++ preH (str.++ stem20 sufH)) (str.++ unch120H (str.++ ch20H unch220H))))
(assert (= (str.++ preI (str.++ stem20 sufI)) (str.++ unch120I (str.++ ch20I unch220I))))
(assert (= (str.++ preJ (str.++ stem20 sufJ)) (str.++ unch120J (str.++ ch20J unch220J))))
(assert (= "3it" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "3otam" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "3otoOi" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= "3oZi" (str.++ unch120D (str.++ var20D unch220D))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (= (ite (= ch20G var20G) 0 1) sc20G))
(assert (= (ite (= ch20H var20H) 0 1) sc20H))
(assert (= (ite (= ch20I var20I) 0 1) sc20I))
(assert (= (ite (= ch20J var20J) 0 1) sc20J))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= sc20G 1))
(assert (<= sc20H 1))
(assert (<= sc20I 1))
(assert (<= sc20J 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (<= (str.len var21G) 1))
(assert (<= (str.len var21H) 1))
(assert (<= (str.len var21I) 1))
(assert (<= (str.len var21J) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= (str.++ preG (str.++ stem21 sufG)) (str.++ unch121G (str.++ ch21G unch221G))))
(assert (= (str.++ preH (str.++ stem21 sufH)) (str.++ unch121H (str.++ ch21H unch221H))))
(assert (= (str.++ preI (str.++ stem21 sufI)) (str.++ unch121I (str.++ ch21I unch221I))))
(assert (= (str.++ preJ (str.++ stem21 sufJ)) (str.++ unch121J (str.++ ch21J unch221J))))
(assert (= "mist" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "mostam" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "mostoOi" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= "mosZi" (str.++ unch121D (str.++ var21D unch221D))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (= (ite (= ch21G var21G) 0 1) sc21G))
(assert (= (ite (= ch21H var21H) 0 1) sc21H))
(assert (= (ite (= ch21I var21I) 0 1) sc21I))
(assert (= (ite (= ch21J var21J) 0 1) sc21J))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= sc21G 1))
(assert (<= sc21H 1))
(assert (<= sc21I 1))
(assert (<= sc21J 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (<= (str.len var22G) 1))
(assert (<= (str.len var22H) 1))
(assert (<= (str.len var22I) 1))
(assert (<= (str.len var22J) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= (str.++ preG (str.++ stem22 sufG)) (str.++ unch122G (str.++ ch22G unch222G))))
(assert (= (str.++ preH (str.++ stem22 sufH)) (str.++ unch122H (str.++ ch22H unch222H))))
(assert (= (str.++ preI (str.++ stem22 sufI)) (str.++ unch122I (str.++ ch22I unch222I))))
(assert (= (str.++ preJ (str.++ stem22 sufJ)) (str.++ unch122J (str.++ ch22J unch222J))))
(assert (= "veEir" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "veEoram" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "veEoroOi" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= "veEo9i" (str.++ unch122D (str.++ var22D unch222D))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (= (ite (= ch22G var22G) 0 1) sc22G))
(assert (= (ite (= ch22H var22H) 0 1) sc22H))
(assert (= (ite (= ch22I var22I) 0 1) sc22I))
(assert (= (ite (= ch22J var22J) 0 1) sc22J))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= sc22G 1))
(assert (<= sc22H 1))
(assert (<= sc22I 1))
(assert (<= sc22J 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (<= (str.len var23G) 1))
(assert (<= (str.len var23H) 1))
(assert (<= (str.len var23I) 1))
(assert (<= (str.len var23J) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= (str.++ preG (str.++ stem23 sufG)) (str.++ unch123G (str.++ ch23G unch223G))))
(assert (= (str.++ preH (str.++ stem23 sufH)) (str.++ unch123H (str.++ ch23H unch223H))))
(assert (= (str.++ preI (str.++ stem23 sufI)) (str.++ unch123I (str.++ ch23I unch223I))))
(assert (= (str.++ preJ (str.++ stem23 sufJ)) (str.++ unch123J (str.++ ch23J unch223J))))
(assert (= "Zilo" (str.++ unch123F (str.++ var23F unch223F))))
(assert (= "Zila" (str.++ unch123G (str.++ var23G unch223G))))
(assert (= "Zilu" (str.++ unch123H (str.++ var23H unch223H))))
(assert (= "Zi3i" (str.++ unch123I (str.++ var23I unch223I))))
(assert (= "Ziw" (str.++ unch123J (str.++ var23J unch223J))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (= (ite (= ch23G var23G) 0 1) sc23G))
(assert (= (ite (= ch23H var23H) 0 1) sc23H))
(assert (= (ite (= ch23I var23I) 0 1) sc23I))
(assert (= (ite (= ch23J var23J) 0 1) sc23J))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= sc23G 1))
(assert (<= sc23H 1))
(assert (<= sc23I 1))
(assert (<= sc23J 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (<= (str.len var24G) 1))
(assert (<= (str.len var24H) 1))
(assert (<= (str.len var24I) 1))
(assert (<= (str.len var24J) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= (str.++ preG (str.++ stem24 sufG)) (str.++ unch124G (str.++ ch24G unch224G))))
(assert (= (str.++ preH (str.++ stem24 sufH)) (str.++ unch124H (str.++ ch24H unch224H))))
(assert (= (str.++ preI (str.++ stem24 sufI)) (str.++ unch124I (str.++ ch24I unch224I))))
(assert (= (str.++ preJ (str.++ stem24 sufJ)) (str.++ unch124J (str.++ ch24J unch224J))))
(assert (= "koleso" (str.++ unch124F (str.++ var24F unch224F))))
(assert (= "kolesa" (str.++ unch124G (str.++ var24G unch224G))))
(assert (= "kolesu" (str.++ unch124H (str.++ var24H unch224H))))
(assert (= "kole6i" (str.++ unch124I (str.++ var24I unch224I))))
(assert (= "ko3is" (str.++ unch124J (str.++ var24J unch224J))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (= (ite (= ch24G var24G) 0 1) sc24G))
(assert (= (ite (= ch24H var24H) 0 1) sc24H))
(assert (= (ite (= ch24I var24I) 0 1) sc24I))
(assert (= (ite (= ch24J var24J) 0 1) sc24J))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= sc24G 1))
(assert (<= sc24H 1))
(assert (<= sc24I 1))
(assert (<= sc24J 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (<= (str.len var25G) 1))
(assert (<= (str.len var25H) 1))
(assert (<= (str.len var25I) 1))
(assert (<= (str.len var25J) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= (str.++ preG (str.++ stem25 sufG)) (str.++ unch125G (str.++ ch25G unch225G))))
(assert (= (str.++ preH (str.++ stem25 sufH)) (str.++ unch125H (str.++ ch25H unch225H))))
(assert (= (str.++ preI (str.++ stem25 sufI)) (str.++ unch125I (str.++ ch25I unch225I))))
(assert (= (str.++ preJ (str.++ stem25 sufJ)) (str.++ unch125J (str.++ ch25J unch225J))))
(assert (= "ozero" (str.++ unch125F (str.++ var25F unch225F))))
(assert (= "ozera" (str.++ unch125G (str.++ var25G unch225G))))
(assert (= "ozeru" (str.++ unch125H (str.++ var25H unch225H))))
(assert (= "oze9i" (str.++ unch125I (str.++ var25I unch225I))))
(assert (= "o1ir" (str.++ unch125J (str.++ var25J unch225J))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (= (ite (= ch25G var25G) 0 1) sc25G))
(assert (= (ite (= ch25H var25H) 0 1) sc25H))
(assert (= (ite (= ch25I var25I) 0 1) sc25I))
(assert (= (ite (= ch25J var25J) 0 1) sc25J))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= sc25G 1))
(assert (<= sc25H 1))
(assert (<= sc25I 1))
(assert (<= sc25J 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (<= (str.len var26G) 1))
(assert (<= (str.len var26H) 1))
(assert (<= (str.len var26I) 1))
(assert (<= (str.len var26J) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= (str.++ preG (str.++ stem26 sufG)) (str.++ unch126G (str.++ ch26G unch226G))))
(assert (= (str.++ preH (str.++ stem26 sufH)) (str.++ unch126H (str.++ ch26H unch226H))))
(assert (= (str.++ preI (str.++ stem26 sufI)) (str.++ unch126I (str.++ ch26I unch226I))))
(assert (= (str.++ preJ (str.++ stem26 sufJ)) (str.++ unch126J (str.++ ch26J unch226J))))
(assert (= "selo" (str.++ unch126F (str.++ var26F unch226F))))
(assert (= "sela" (str.++ unch126G (str.++ var26G unch226G))))
(assert (= "selu" (str.++ unch126H (str.++ var26H unch226H))))
(assert (= "se3i" (str.++ unch126I (str.++ var26I unch226I))))
(assert (= "6iw" (str.++ unch126J (str.++ var26J unch226J))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (= (ite (= ch26G var26G) 0 1) sc26G))
(assert (= (ite (= ch26H var26H) 0 1) sc26H))
(assert (= (ite (= ch26I var26I) 0 1) sc26I))
(assert (= (ite (= ch26J var26J) 0 1) sc26J))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= sc26G 1))
(assert (<= sc26H 1))
(assert (<= sc26I 1))
(assert (<= sc26J 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (<= (str.len var27G) 1))
(assert (<= (str.len var27H) 1))
(assert (<= (str.len var27I) 1))
(assert (<= (str.len var27J) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= (str.++ preG (str.++ stem27 sufG)) (str.++ unch127G (str.++ ch27G unch227G))))
(assert (= (str.++ preH (str.++ stem27 sufH)) (str.++ unch127H (str.++ ch27H unch227H))))
(assert (= (str.++ preI (str.++ stem27 sufI)) (str.++ unch127I (str.++ ch27I unch227I))))
(assert (= (str.++ preJ (str.++ stem27 sufJ)) (str.++ unch127J (str.++ ch27J unch227J))))
(assert (= "pole" (str.++ unch127F (str.++ var27F unch227F))))
(assert (= "po3a" (str.++ unch127G (str.++ var27G unch227G))))
(assert (= "po3u" (str.++ unch127H (str.++ var27H unch227H))))
(assert (= "po3i" (str.++ unch127I (str.++ var27I unch227I))))
(assert (= "pi3" (str.++ unch127J (str.++ var27J unch227J))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (= (ite (= ch27G var27G) 0 1) sc27G))
(assert (= (ite (= ch27H var27H) 0 1) sc27H))
(assert (= (ite (= ch27I var27I) 0 1) sc27I))
(assert (= (ite (= ch27J var27J) 0 1) sc27J))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= sc27G 1))
(assert (<= sc27H 1))
(assert (<= sc27I 1))
(assert (<= sc27J 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (<= (str.len var28G) 1))
(assert (<= (str.len var28H) 1))
(assert (<= (str.len var28I) 1))
(assert (<= (str.len var28J) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= (str.++ preG (str.++ stem28 sufG)) (str.++ unch128G (str.++ ch28G unch228G))))
(assert (= (str.++ preH (str.++ stem28 sufH)) (str.++ unch128H (str.++ ch28H unch228H))))
(assert (= (str.++ preI (str.++ stem28 sufI)) (str.++ unch128I (str.++ ch28I unch228I))))
(assert (= (str.++ preJ (str.++ stem28 sufJ)) (str.++ unch128J (str.++ ch28J unch228J))))
(assert (= "slovo" (str.++ unch128F (str.++ var28F unch228F))))
(assert (= "slova" (str.++ unch128G (str.++ var28G unch228G))))
(assert (= "slovu" (str.++ unch128H (str.++ var28H unch228H))))
(assert (= "sloOi" (str.++ unch128I (str.++ var28I unch228I))))
(assert (= "sliw" (str.++ unch128J (str.++ var28J unch228J))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (= (ite (= ch28G var28G) 0 1) sc28G))
(assert (= (ite (= ch28H var28H) 0 1) sc28H))
(assert (= (ite (= ch28I var28I) 0 1) sc28I))
(assert (= (ite (= ch28J var28J) 0 1) sc28J))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= sc28G 1))
(assert (<= sc28H 1))
(assert (<= sc28I 1))
(assert (<= sc28J 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (<= (str.len var29G) 1))
(assert (<= (str.len var29H) 1))
(assert (<= (str.len var29I) 1))
(assert (<= (str.len var29J) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= (str.++ preG (str.++ stem29 sufG)) (str.++ unch129G (str.++ ch29G unch229G))))
(assert (= (str.++ preH (str.++ stem29 sufH)) (str.++ unch129H (str.++ ch29H unch229H))))
(assert (= (str.++ preI (str.++ stem29 sufI)) (str.++ unch129I (str.++ ch29I unch229I))))
(assert (= (str.++ preJ (str.++ stem29 sufJ)) (str.++ unch129J (str.++ ch29J unch229J))))
(assert (= "more" (str.++ unch129F (str.++ var29F unch229F))))
(assert (= "mo9a" (str.++ unch129G (str.++ var29G unch229G))))
(assert (= "mo9u" (str.++ unch129H (str.++ var29H unch229H))))
(assert (= "mo9i" (str.++ unch129I (str.++ var29I unch229I))))
(assert (= "mi9" (str.++ unch129J (str.++ var29J unch229J))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (= (ite (= ch29G var29G) 0 1) sc29G))
(assert (= (ite (= ch29H var29H) 0 1) sc29H))
(assert (= (ite (= ch29I var29I) 0 1) sc29I))
(assert (= (ite (= ch29J var29J) 0 1) sc29J))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= sc29G 1))
(assert (<= sc29H 1))
(assert (<= sc29I 1))
(assert (<= sc29J 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      sc0I
      sc0J
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      sc1I
      sc1J
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      sc2I
      sc2J
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      sc3I
      sc3J
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      sc4I
      sc4J
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      sc5I
      sc5J
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H
      sc6I
      sc6J
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      sc7G
      sc7H
      sc7I
      sc7J
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      sc8G
      sc8H
      sc8I
      sc8J
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      sc9G
      sc9H
      sc9I
      sc9J
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      sc10G
      sc10H
      sc10I
      sc10J
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      sc11G
      sc11H
      sc11I
      sc11J
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      sc12G
      sc12H
      sc12I
      sc12J
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      sc13G
      sc13H
      sc13I
      sc13J
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      sc14G
      sc14H
      sc14I
      sc14J
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      sc15G
      sc15H
      sc15I
      sc15J
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      sc16G
      sc16H
      sc16I
      sc16J
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      sc17G
      sc17H
      sc17I
      sc17J
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      sc18G
      sc18H
      sc18I
      sc18J
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      sc19G
      sc19H
      sc19I
      sc19J
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      sc20G
      sc20H
      sc20I
      sc20J
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      sc21G
      sc21H
      sc21I
      sc21J
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      sc22G
      sc22H
      sc22I
      sc22J
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      sc23G
      sc23H
      sc23I
      sc23J
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      sc24G
      sc24H
      sc24I
      sc24J
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      sc25G
      sc25H
      sc25I
      sc25J
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      sc26G
      sc26H
      sc26I
      sc26J
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      sc27G
      sc27H
      sc27I
      sc27J
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      sc28G
      sc28H
      sc28I
      sc28J
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      sc29G
      sc29H
      sc29I
      sc29J)
   18))

None
(declare-fun var0A () String)
(declare-fun var0B () String)
(declare-fun var0C () String)
(declare-fun var0D () String)
(declare-fun var0E () String)
(declare-fun var0F () String)
(declare-fun var0G () String)
(declare-fun var0H () String)
(declare-fun var0I () String)
(declare-fun var0J () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun unch20B () String)
(declare-fun ch0B () String)
(declare-fun unch10B () String)
(declare-fun sufB () String)
(declare-fun preB () String)
(declare-fun unch20C () String)
(declare-fun ch0C () String)
(declare-fun unch10C () String)
(declare-fun sufC () String)
(declare-fun preC () String)
(declare-fun unch20D () String)
(declare-fun ch0D () String)
(declare-fun unch10D () String)
(declare-fun sufD () String)
(declare-fun preD () String)
(declare-fun unch20E () String)
(declare-fun ch0E () String)
(declare-fun unch10E () String)
(declare-fun sufE () String)
(declare-fun preE () String)
(declare-fun unch20F () String)
(declare-fun ch0F () String)
(declare-fun unch10F () String)
(declare-fun sufF () String)
(declare-fun preF () String)
(declare-fun unch20G () String)
(declare-fun ch0G () String)
(declare-fun unch10G () String)
(declare-fun sufG () String)
(declare-fun preG () String)
(declare-fun unch20H () String)
(declare-fun ch0H () String)
(declare-fun unch10H () String)
(declare-fun sufH () String)
(declare-fun preH () String)
(declare-fun unch20I () String)
(declare-fun ch0I () String)
(declare-fun unch10I () String)
(declare-fun sufI () String)
(declare-fun preI () String)
(declare-fun unch20J () String)
(declare-fun ch0J () String)
(declare-fun unch10J () String)
(declare-fun sufJ () String)
(declare-fun preJ () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun sc0B () Int)
(declare-fun sc0C () Int)
(declare-fun sc0D () Int)
(declare-fun sc0E () Int)
(declare-fun sc0F () Int)
(declare-fun sc0G () Int)
(declare-fun sc0H () Int)
(declare-fun sc0I () Int)
(declare-fun sc0J () Int)
(declare-fun var1A () String)
(declare-fun var1B () String)
(declare-fun var1C () String)
(declare-fun var1D () String)
(declare-fun var1E () String)
(declare-fun var1F () String)
(declare-fun var1G () String)
(declare-fun var1H () String)
(declare-fun var1I () String)
(declare-fun var1J () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun unch21B () String)
(declare-fun ch1B () String)
(declare-fun unch11B () String)
(declare-fun unch21C () String)
(declare-fun ch1C () String)
(declare-fun unch11C () String)
(declare-fun unch21D () String)
(declare-fun ch1D () String)
(declare-fun unch11D () String)
(declare-fun unch21E () String)
(declare-fun ch1E () String)
(declare-fun unch11E () String)
(declare-fun unch21F () String)
(declare-fun ch1F () String)
(declare-fun unch11F () String)
(declare-fun unch21G () String)
(declare-fun ch1G () String)
(declare-fun unch11G () String)
(declare-fun unch21H () String)
(declare-fun ch1H () String)
(declare-fun unch11H () String)
(declare-fun unch21I () String)
(declare-fun ch1I () String)
(declare-fun unch11I () String)
(declare-fun unch21J () String)
(declare-fun ch1J () String)
(declare-fun unch11J () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun sc1B () Int)
(declare-fun sc1C () Int)
(declare-fun sc1D () Int)
(declare-fun sc1E () Int)
(declare-fun sc1F () Int)
(declare-fun sc1G () Int)
(declare-fun sc1H () Int)
(declare-fun sc1I () Int)
(declare-fun sc1J () Int)
(declare-fun var2A () String)
(declare-fun var2B () String)
(declare-fun var2C () String)
(declare-fun var2D () String)
(declare-fun var2E () String)
(declare-fun var2F () String)
(declare-fun var2G () String)
(declare-fun var2H () String)
(declare-fun var2I () String)
(declare-fun var2J () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun unch22B () String)
(declare-fun ch2B () String)
(declare-fun unch12B () String)
(declare-fun unch22C () String)
(declare-fun ch2C () String)
(declare-fun unch12C () String)
(declare-fun unch22D () String)
(declare-fun ch2D () String)
(declare-fun unch12D () String)
(declare-fun unch22E () String)
(declare-fun ch2E () String)
(declare-fun unch12E () String)
(declare-fun unch22F () String)
(declare-fun ch2F () String)
(declare-fun unch12F () String)
(declare-fun unch22G () String)
(declare-fun ch2G () String)
(declare-fun unch12G () String)
(declare-fun unch22H () String)
(declare-fun ch2H () String)
(declare-fun unch12H () String)
(declare-fun unch22I () String)
(declare-fun ch2I () String)
(declare-fun unch12I () String)
(declare-fun unch22J () String)
(declare-fun ch2J () String)
(declare-fun unch12J () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun sc2B () Int)
(declare-fun sc2C () Int)
(declare-fun sc2D () Int)
(declare-fun sc2E () Int)
(declare-fun sc2F () Int)
(declare-fun sc2G () Int)
(declare-fun sc2H () Int)
(declare-fun sc2I () Int)
(declare-fun sc2J () Int)
(declare-fun var3A () String)
(declare-fun var3B () String)
(declare-fun var3C () String)
(declare-fun var3D () String)
(declare-fun var3E () String)
(declare-fun var3F () String)
(declare-fun var3G () String)
(declare-fun var3H () String)
(declare-fun var3I () String)
(declare-fun var3J () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun unch23B () String)
(declare-fun ch3B () String)
(declare-fun unch13B () String)
(declare-fun unch23C () String)
(declare-fun ch3C () String)
(declare-fun unch13C () String)
(declare-fun unch23D () String)
(declare-fun ch3D () String)
(declare-fun unch13D () String)
(declare-fun unch23E () String)
(declare-fun ch3E () String)
(declare-fun unch13E () String)
(declare-fun unch23F () String)
(declare-fun ch3F () String)
(declare-fun unch13F () String)
(declare-fun unch23G () String)
(declare-fun ch3G () String)
(declare-fun unch13G () String)
(declare-fun unch23H () String)
(declare-fun ch3H () String)
(declare-fun unch13H () String)
(declare-fun unch23I () String)
(declare-fun ch3I () String)
(declare-fun unch13I () String)
(declare-fun unch23J () String)
(declare-fun ch3J () String)
(declare-fun unch13J () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun sc3B () Int)
(declare-fun sc3C () Int)
(declare-fun sc3D () Int)
(declare-fun sc3E () Int)
(declare-fun sc3F () Int)
(declare-fun sc3G () Int)
(declare-fun sc3H () Int)
(declare-fun sc3I () Int)
(declare-fun sc3J () Int)
(declare-fun var4A () String)
(declare-fun var4B () String)
(declare-fun var4C () String)
(declare-fun var4D () String)
(declare-fun var4E () String)
(declare-fun var4F () String)
(declare-fun var4G () String)
(declare-fun var4H () String)
(declare-fun var4I () String)
(declare-fun var4J () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun unch24B () String)
(declare-fun ch4B () String)
(declare-fun unch14B () String)
(declare-fun unch24C () String)
(declare-fun ch4C () String)
(declare-fun unch14C () String)
(declare-fun unch24D () String)
(declare-fun ch4D () String)
(declare-fun unch14D () String)
(declare-fun unch24E () String)
(declare-fun ch4E () String)
(declare-fun unch14E () String)
(declare-fun unch24F () String)
(declare-fun ch4F () String)
(declare-fun unch14F () String)
(declare-fun unch24G () String)
(declare-fun ch4G () String)
(declare-fun unch14G () String)
(declare-fun unch24H () String)
(declare-fun ch4H () String)
(declare-fun unch14H () String)
(declare-fun unch24I () String)
(declare-fun ch4I () String)
(declare-fun unch14I () String)
(declare-fun unch24J () String)
(declare-fun ch4J () String)
(declare-fun unch14J () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun sc4B () Int)
(declare-fun sc4C () Int)
(declare-fun sc4D () Int)
(declare-fun sc4E () Int)
(declare-fun sc4F () Int)
(declare-fun sc4G () Int)
(declare-fun sc4H () Int)
(declare-fun sc4I () Int)
(declare-fun sc4J () Int)
(declare-fun var5A () String)
(declare-fun var5B () String)
(declare-fun var5C () String)
(declare-fun var5D () String)
(declare-fun var5E () String)
(declare-fun var5F () String)
(declare-fun var5G () String)
(declare-fun var5H () String)
(declare-fun var5I () String)
(declare-fun var5J () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun unch25B () String)
(declare-fun ch5B () String)
(declare-fun unch15B () String)
(declare-fun unch25C () String)
(declare-fun ch5C () String)
(declare-fun unch15C () String)
(declare-fun unch25D () String)
(declare-fun ch5D () String)
(declare-fun unch15D () String)
(declare-fun unch25E () String)
(declare-fun ch5E () String)
(declare-fun unch15E () String)
(declare-fun unch25F () String)
(declare-fun ch5F () String)
(declare-fun unch15F () String)
(declare-fun unch25G () String)
(declare-fun ch5G () String)
(declare-fun unch15G () String)
(declare-fun unch25H () String)
(declare-fun ch5H () String)
(declare-fun unch15H () String)
(declare-fun unch25I () String)
(declare-fun ch5I () String)
(declare-fun unch15I () String)
(declare-fun unch25J () String)
(declare-fun ch5J () String)
(declare-fun unch15J () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun sc5B () Int)
(declare-fun sc5C () Int)
(declare-fun sc5D () Int)
(declare-fun sc5E () Int)
(declare-fun sc5F () Int)
(declare-fun sc5G () Int)
(declare-fun sc5H () Int)
(declare-fun sc5I () Int)
(declare-fun sc5J () Int)
(declare-fun var6A () String)
(declare-fun var6B () String)
(declare-fun var6C () String)
(declare-fun var6D () String)
(declare-fun var6E () String)
(declare-fun var6F () String)
(declare-fun var6G () String)
(declare-fun var6H () String)
(declare-fun var6I () String)
(declare-fun var6J () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun unch26B () String)
(declare-fun ch6B () String)
(declare-fun unch16B () String)
(declare-fun unch26C () String)
(declare-fun ch6C () String)
(declare-fun unch16C () String)
(declare-fun unch26D () String)
(declare-fun ch6D () String)
(declare-fun unch16D () String)
(declare-fun unch26E () String)
(declare-fun ch6E () String)
(declare-fun unch16E () String)
(declare-fun unch26F () String)
(declare-fun ch6F () String)
(declare-fun unch16F () String)
(declare-fun unch26G () String)
(declare-fun ch6G () String)
(declare-fun unch16G () String)
(declare-fun unch26H () String)
(declare-fun ch6H () String)
(declare-fun unch16H () String)
(declare-fun unch26I () String)
(declare-fun ch6I () String)
(declare-fun unch16I () String)
(declare-fun unch26J () String)
(declare-fun ch6J () String)
(declare-fun unch16J () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun sc6B () Int)
(declare-fun sc6C () Int)
(declare-fun sc6D () Int)
(declare-fun sc6E () Int)
(declare-fun sc6F () Int)
(declare-fun sc6G () Int)
(declare-fun sc6H () Int)
(declare-fun sc6I () Int)
(declare-fun sc6J () Int)
(declare-fun var7A () String)
(declare-fun var7B () String)
(declare-fun var7C () String)
(declare-fun var7D () String)
(declare-fun var7E () String)
(declare-fun var7F () String)
(declare-fun var7G () String)
(declare-fun var7H () String)
(declare-fun var7I () String)
(declare-fun var7J () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun unch27B () String)
(declare-fun ch7B () String)
(declare-fun unch17B () String)
(declare-fun unch27C () String)
(declare-fun ch7C () String)
(declare-fun unch17C () String)
(declare-fun unch27D () String)
(declare-fun ch7D () String)
(declare-fun unch17D () String)
(declare-fun unch27E () String)
(declare-fun ch7E () String)
(declare-fun unch17E () String)
(declare-fun unch27F () String)
(declare-fun ch7F () String)
(declare-fun unch17F () String)
(declare-fun unch27G () String)
(declare-fun ch7G () String)
(declare-fun unch17G () String)
(declare-fun unch27H () String)
(declare-fun ch7H () String)
(declare-fun unch17H () String)
(declare-fun unch27I () String)
(declare-fun ch7I () String)
(declare-fun unch17I () String)
(declare-fun unch27J () String)
(declare-fun ch7J () String)
(declare-fun unch17J () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun sc7B () Int)
(declare-fun sc7C () Int)
(declare-fun sc7D () Int)
(declare-fun sc7E () Int)
(declare-fun sc7F () Int)
(declare-fun sc7G () Int)
(declare-fun sc7H () Int)
(declare-fun sc7I () Int)
(declare-fun sc7J () Int)
(declare-fun var8A () String)
(declare-fun var8B () String)
(declare-fun var8C () String)
(declare-fun var8D () String)
(declare-fun var8E () String)
(declare-fun var8F () String)
(declare-fun var8G () String)
(declare-fun var8H () String)
(declare-fun var8I () String)
(declare-fun var8J () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun unch28B () String)
(declare-fun ch8B () String)
(declare-fun unch18B () String)
(declare-fun unch28C () String)
(declare-fun ch8C () String)
(declare-fun unch18C () String)
(declare-fun unch28D () String)
(declare-fun ch8D () String)
(declare-fun unch18D () String)
(declare-fun unch28E () String)
(declare-fun ch8E () String)
(declare-fun unch18E () String)
(declare-fun unch28F () String)
(declare-fun ch8F () String)
(declare-fun unch18F () String)
(declare-fun unch28G () String)
(declare-fun ch8G () String)
(declare-fun unch18G () String)
(declare-fun unch28H () String)
(declare-fun ch8H () String)
(declare-fun unch18H () String)
(declare-fun unch28I () String)
(declare-fun ch8I () String)
(declare-fun unch18I () String)
(declare-fun unch28J () String)
(declare-fun ch8J () String)
(declare-fun unch18J () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun sc8B () Int)
(declare-fun sc8C () Int)
(declare-fun sc8D () Int)
(declare-fun sc8E () Int)
(declare-fun sc8F () Int)
(declare-fun sc8G () Int)
(declare-fun sc8H () Int)
(declare-fun sc8I () Int)
(declare-fun sc8J () Int)
(declare-fun var9A () String)
(declare-fun var9B () String)
(declare-fun var9C () String)
(declare-fun var9D () String)
(declare-fun var9E () String)
(declare-fun var9F () String)
(declare-fun var9G () String)
(declare-fun var9H () String)
(declare-fun var9I () String)
(declare-fun var9J () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun unch29B () String)
(declare-fun ch9B () String)
(declare-fun unch19B () String)
(declare-fun unch29C () String)
(declare-fun ch9C () String)
(declare-fun unch19C () String)
(declare-fun unch29D () String)
(declare-fun ch9D () String)
(declare-fun unch19D () String)
(declare-fun unch29E () String)
(declare-fun ch9E () String)
(declare-fun unch19E () String)
(declare-fun unch29F () String)
(declare-fun ch9F () String)
(declare-fun unch19F () String)
(declare-fun unch29G () String)
(declare-fun ch9G () String)
(declare-fun unch19G () String)
(declare-fun unch29H () String)
(declare-fun ch9H () String)
(declare-fun unch19H () String)
(declare-fun unch29I () String)
(declare-fun ch9I () String)
(declare-fun unch19I () String)
(declare-fun unch29J () String)
(declare-fun ch9J () String)
(declare-fun unch19J () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun sc9B () Int)
(declare-fun sc9C () Int)
(declare-fun sc9D () Int)
(declare-fun sc9E () Int)
(declare-fun sc9F () Int)
(declare-fun sc9G () Int)
(declare-fun sc9H () Int)
(declare-fun sc9I () Int)
(declare-fun sc9J () Int)
(declare-fun var10A () String)
(declare-fun var10B () String)
(declare-fun var10C () String)
(declare-fun var10D () String)
(declare-fun var10E () String)
(declare-fun var10F () String)
(declare-fun var10G () String)
(declare-fun var10H () String)
(declare-fun var10I () String)
(declare-fun var10J () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun unch210B () String)
(declare-fun ch10B () String)
(declare-fun unch110B () String)
(declare-fun unch210C () String)
(declare-fun ch10C () String)
(declare-fun unch110C () String)
(declare-fun unch210D () String)
(declare-fun ch10D () String)
(declare-fun unch110D () String)
(declare-fun unch210E () String)
(declare-fun ch10E () String)
(declare-fun unch110E () String)
(declare-fun unch210F () String)
(declare-fun ch10F () String)
(declare-fun unch110F () String)
(declare-fun unch210G () String)
(declare-fun ch10G () String)
(declare-fun unch110G () String)
(declare-fun unch210H () String)
(declare-fun ch10H () String)
(declare-fun unch110H () String)
(declare-fun unch210I () String)
(declare-fun ch10I () String)
(declare-fun unch110I () String)
(declare-fun unch210J () String)
(declare-fun ch10J () String)
(declare-fun unch110J () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun sc10B () Int)
(declare-fun sc10C () Int)
(declare-fun sc10D () Int)
(declare-fun sc10E () Int)
(declare-fun sc10F () Int)
(declare-fun sc10G () Int)
(declare-fun sc10H () Int)
(declare-fun sc10I () Int)
(declare-fun sc10J () Int)
(declare-fun var11A () String)
(declare-fun var11B () String)
(declare-fun var11C () String)
(declare-fun var11D () String)
(declare-fun var11E () String)
(declare-fun var11F () String)
(declare-fun var11G () String)
(declare-fun var11H () String)
(declare-fun var11I () String)
(declare-fun var11J () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun unch211B () String)
(declare-fun ch11B () String)
(declare-fun unch111B () String)
(declare-fun unch211C () String)
(declare-fun ch11C () String)
(declare-fun unch111C () String)
(declare-fun unch211D () String)
(declare-fun ch11D () String)
(declare-fun unch111D () String)
(declare-fun unch211E () String)
(declare-fun ch11E () String)
(declare-fun unch111E () String)
(declare-fun unch211F () String)
(declare-fun ch11F () String)
(declare-fun unch111F () String)
(declare-fun unch211G () String)
(declare-fun ch11G () String)
(declare-fun unch111G () String)
(declare-fun unch211H () String)
(declare-fun ch11H () String)
(declare-fun unch111H () String)
(declare-fun unch211I () String)
(declare-fun ch11I () String)
(declare-fun unch111I () String)
(declare-fun unch211J () String)
(declare-fun ch11J () String)
(declare-fun unch111J () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun sc11B () Int)
(declare-fun sc11C () Int)
(declare-fun sc11D () Int)
(declare-fun sc11E () Int)
(declare-fun sc11F () Int)
(declare-fun sc11G () Int)
(declare-fun sc11H () Int)
(declare-fun sc11I () Int)
(declare-fun sc11J () Int)
(declare-fun var12A () String)
(declare-fun var12B () String)
(declare-fun var12C () String)
(declare-fun var12D () String)
(declare-fun var12E () String)
(declare-fun var12F () String)
(declare-fun var12G () String)
(declare-fun var12H () String)
(declare-fun var12I () String)
(declare-fun var12J () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun unch212B () String)
(declare-fun ch12B () String)
(declare-fun unch112B () String)
(declare-fun unch212C () String)
(declare-fun ch12C () String)
(declare-fun unch112C () String)
(declare-fun unch212D () String)
(declare-fun ch12D () String)
(declare-fun unch112D () String)
(declare-fun unch212E () String)
(declare-fun ch12E () String)
(declare-fun unch112E () String)
(declare-fun unch212F () String)
(declare-fun ch12F () String)
(declare-fun unch112F () String)
(declare-fun unch212G () String)
(declare-fun ch12G () String)
(declare-fun unch112G () String)
(declare-fun unch212H () String)
(declare-fun ch12H () String)
(declare-fun unch112H () String)
(declare-fun unch212I () String)
(declare-fun ch12I () String)
(declare-fun unch112I () String)
(declare-fun unch212J () String)
(declare-fun ch12J () String)
(declare-fun unch112J () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun sc12B () Int)
(declare-fun sc12C () Int)
(declare-fun sc12D () Int)
(declare-fun sc12E () Int)
(declare-fun sc12F () Int)
(declare-fun sc12G () Int)
(declare-fun sc12H () Int)
(declare-fun sc12I () Int)
(declare-fun sc12J () Int)
(declare-fun var13A () String)
(declare-fun var13B () String)
(declare-fun var13C () String)
(declare-fun var13D () String)
(declare-fun var13E () String)
(declare-fun var13F () String)
(declare-fun var13G () String)
(declare-fun var13H () String)
(declare-fun var13I () String)
(declare-fun var13J () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun unch213B () String)
(declare-fun ch13B () String)
(declare-fun unch113B () String)
(declare-fun unch213C () String)
(declare-fun ch13C () String)
(declare-fun unch113C () String)
(declare-fun unch213D () String)
(declare-fun ch13D () String)
(declare-fun unch113D () String)
(declare-fun unch213E () String)
(declare-fun ch13E () String)
(declare-fun unch113E () String)
(declare-fun unch213F () String)
(declare-fun ch13F () String)
(declare-fun unch113F () String)
(declare-fun unch213G () String)
(declare-fun ch13G () String)
(declare-fun unch113G () String)
(declare-fun unch213H () String)
(declare-fun ch13H () String)
(declare-fun unch113H () String)
(declare-fun unch213I () String)
(declare-fun ch13I () String)
(declare-fun unch113I () String)
(declare-fun unch213J () String)
(declare-fun ch13J () String)
(declare-fun unch113J () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun sc13B () Int)
(declare-fun sc13C () Int)
(declare-fun sc13D () Int)
(declare-fun sc13E () Int)
(declare-fun sc13F () Int)
(declare-fun sc13G () Int)
(declare-fun sc13H () Int)
(declare-fun sc13I () Int)
(declare-fun sc13J () Int)
(declare-fun var14A () String)
(declare-fun var14B () String)
(declare-fun var14C () String)
(declare-fun var14D () String)
(declare-fun var14E () String)
(declare-fun var14F () String)
(declare-fun var14G () String)
(declare-fun var14H () String)
(declare-fun var14I () String)
(declare-fun var14J () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun unch214B () String)
(declare-fun ch14B () String)
(declare-fun unch114B () String)
(declare-fun unch214C () String)
(declare-fun ch14C () String)
(declare-fun unch114C () String)
(declare-fun unch214D () String)
(declare-fun ch14D () String)
(declare-fun unch114D () String)
(declare-fun unch214E () String)
(declare-fun ch14E () String)
(declare-fun unch114E () String)
(declare-fun unch214F () String)
(declare-fun ch14F () String)
(declare-fun unch114F () String)
(declare-fun unch214G () String)
(declare-fun ch14G () String)
(declare-fun unch114G () String)
(declare-fun unch214H () String)
(declare-fun ch14H () String)
(declare-fun unch114H () String)
(declare-fun unch214I () String)
(declare-fun ch14I () String)
(declare-fun unch114I () String)
(declare-fun unch214J () String)
(declare-fun ch14J () String)
(declare-fun unch114J () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun sc14B () Int)
(declare-fun sc14C () Int)
(declare-fun sc14D () Int)
(declare-fun sc14E () Int)
(declare-fun sc14F () Int)
(declare-fun sc14G () Int)
(declare-fun sc14H () Int)
(declare-fun sc14I () Int)
(declare-fun sc14J () Int)
(declare-fun var15A () String)
(declare-fun var15B () String)
(declare-fun var15C () String)
(declare-fun var15D () String)
(declare-fun var15E () String)
(declare-fun var15F () String)
(declare-fun var15G () String)
(declare-fun var15H () String)
(declare-fun var15I () String)
(declare-fun var15J () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun unch215B () String)
(declare-fun ch15B () String)
(declare-fun unch115B () String)
(declare-fun unch215C () String)
(declare-fun ch15C () String)
(declare-fun unch115C () String)
(declare-fun unch215D () String)
(declare-fun ch15D () String)
(declare-fun unch115D () String)
(declare-fun unch215E () String)
(declare-fun ch15E () String)
(declare-fun unch115E () String)
(declare-fun unch215F () String)
(declare-fun ch15F () String)
(declare-fun unch115F () String)
(declare-fun unch215G () String)
(declare-fun ch15G () String)
(declare-fun unch115G () String)
(declare-fun unch215H () String)
(declare-fun ch15H () String)
(declare-fun unch115H () String)
(declare-fun unch215I () String)
(declare-fun ch15I () String)
(declare-fun unch115I () String)
(declare-fun unch215J () String)
(declare-fun ch15J () String)
(declare-fun unch115J () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun sc15B () Int)
(declare-fun sc15C () Int)
(declare-fun sc15D () Int)
(declare-fun sc15E () Int)
(declare-fun sc15F () Int)
(declare-fun sc15G () Int)
(declare-fun sc15H () Int)
(declare-fun sc15I () Int)
(declare-fun sc15J () Int)
(declare-fun var16A () String)
(declare-fun var16B () String)
(declare-fun var16C () String)
(declare-fun var16D () String)
(declare-fun var16E () String)
(declare-fun var16F () String)
(declare-fun var16G () String)
(declare-fun var16H () String)
(declare-fun var16I () String)
(declare-fun var16J () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun unch216B () String)
(declare-fun ch16B () String)
(declare-fun unch116B () String)
(declare-fun unch216C () String)
(declare-fun ch16C () String)
(declare-fun unch116C () String)
(declare-fun unch216D () String)
(declare-fun ch16D () String)
(declare-fun unch116D () String)
(declare-fun unch216E () String)
(declare-fun ch16E () String)
(declare-fun unch116E () String)
(declare-fun unch216F () String)
(declare-fun ch16F () String)
(declare-fun unch116F () String)
(declare-fun unch216G () String)
(declare-fun ch16G () String)
(declare-fun unch116G () String)
(declare-fun unch216H () String)
(declare-fun ch16H () String)
(declare-fun unch116H () String)
(declare-fun unch216I () String)
(declare-fun ch16I () String)
(declare-fun unch116I () String)
(declare-fun unch216J () String)
(declare-fun ch16J () String)
(declare-fun unch116J () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun sc16B () Int)
(declare-fun sc16C () Int)
(declare-fun sc16D () Int)
(declare-fun sc16E () Int)
(declare-fun sc16F () Int)
(declare-fun sc16G () Int)
(declare-fun sc16H () Int)
(declare-fun sc16I () Int)
(declare-fun sc16J () Int)
(declare-fun var17A () String)
(declare-fun var17B () String)
(declare-fun var17C () String)
(declare-fun var17D () String)
(declare-fun var17E () String)
(declare-fun var17F () String)
(declare-fun var17G () String)
(declare-fun var17H () String)
(declare-fun var17I () String)
(declare-fun var17J () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun unch217B () String)
(declare-fun ch17B () String)
(declare-fun unch117B () String)
(declare-fun unch217C () String)
(declare-fun ch17C () String)
(declare-fun unch117C () String)
(declare-fun unch217D () String)
(declare-fun ch17D () String)
(declare-fun unch117D () String)
(declare-fun unch217E () String)
(declare-fun ch17E () String)
(declare-fun unch117E () String)
(declare-fun unch217F () String)
(declare-fun ch17F () String)
(declare-fun unch117F () String)
(declare-fun unch217G () String)
(declare-fun ch17G () String)
(declare-fun unch117G () String)
(declare-fun unch217H () String)
(declare-fun ch17H () String)
(declare-fun unch117H () String)
(declare-fun unch217I () String)
(declare-fun ch17I () String)
(declare-fun unch117I () String)
(declare-fun unch217J () String)
(declare-fun ch17J () String)
(declare-fun unch117J () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun sc17B () Int)
(declare-fun sc17C () Int)
(declare-fun sc17D () Int)
(declare-fun sc17E () Int)
(declare-fun sc17F () Int)
(declare-fun sc17G () Int)
(declare-fun sc17H () Int)
(declare-fun sc17I () Int)
(declare-fun sc17J () Int)
(declare-fun var18A () String)
(declare-fun var18B () String)
(declare-fun var18C () String)
(declare-fun var18D () String)
(declare-fun var18E () String)
(declare-fun var18F () String)
(declare-fun var18G () String)
(declare-fun var18H () String)
(declare-fun var18I () String)
(declare-fun var18J () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun unch218B () String)
(declare-fun ch18B () String)
(declare-fun unch118B () String)
(declare-fun unch218C () String)
(declare-fun ch18C () String)
(declare-fun unch118C () String)
(declare-fun unch218D () String)
(declare-fun ch18D () String)
(declare-fun unch118D () String)
(declare-fun unch218E () String)
(declare-fun ch18E () String)
(declare-fun unch118E () String)
(declare-fun unch218F () String)
(declare-fun ch18F () String)
(declare-fun unch118F () String)
(declare-fun unch218G () String)
(declare-fun ch18G () String)
(declare-fun unch118G () String)
(declare-fun unch218H () String)
(declare-fun ch18H () String)
(declare-fun unch118H () String)
(declare-fun unch218I () String)
(declare-fun ch18I () String)
(declare-fun unch118I () String)
(declare-fun unch218J () String)
(declare-fun ch18J () String)
(declare-fun unch118J () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun sc18B () Int)
(declare-fun sc18C () Int)
(declare-fun sc18D () Int)
(declare-fun sc18E () Int)
(declare-fun sc18F () Int)
(declare-fun sc18G () Int)
(declare-fun sc18H () Int)
(declare-fun sc18I () Int)
(declare-fun sc18J () Int)
(declare-fun var19A () String)
(declare-fun var19B () String)
(declare-fun var19C () String)
(declare-fun var19D () String)
(declare-fun var19E () String)
(declare-fun var19F () String)
(declare-fun var19G () String)
(declare-fun var19H () String)
(declare-fun var19I () String)
(declare-fun var19J () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun unch219B () String)
(declare-fun ch19B () String)
(declare-fun unch119B () String)
(declare-fun unch219C () String)
(declare-fun ch19C () String)
(declare-fun unch119C () String)
(declare-fun unch219D () String)
(declare-fun ch19D () String)
(declare-fun unch119D () String)
(declare-fun unch219E () String)
(declare-fun ch19E () String)
(declare-fun unch119E () String)
(declare-fun unch219F () String)
(declare-fun ch19F () String)
(declare-fun unch119F () String)
(declare-fun unch219G () String)
(declare-fun ch19G () String)
(declare-fun unch119G () String)
(declare-fun unch219H () String)
(declare-fun ch19H () String)
(declare-fun unch119H () String)
(declare-fun unch219I () String)
(declare-fun ch19I () String)
(declare-fun unch119I () String)
(declare-fun unch219J () String)
(declare-fun ch19J () String)
(declare-fun unch119J () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun sc19B () Int)
(declare-fun sc19C () Int)
(declare-fun sc19D () Int)
(declare-fun sc19E () Int)
(declare-fun sc19F () Int)
(declare-fun sc19G () Int)
(declare-fun sc19H () Int)
(declare-fun sc19I () Int)
(declare-fun sc19J () Int)
(declare-fun var20A () String)
(declare-fun var20B () String)
(declare-fun var20C () String)
(declare-fun var20D () String)
(declare-fun var20E () String)
(declare-fun var20F () String)
(declare-fun var20G () String)
(declare-fun var20H () String)
(declare-fun var20I () String)
(declare-fun var20J () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun unch220B () String)
(declare-fun ch20B () String)
(declare-fun unch120B () String)
(declare-fun unch220C () String)
(declare-fun ch20C () String)
(declare-fun unch120C () String)
(declare-fun unch220D () String)
(declare-fun ch20D () String)
(declare-fun unch120D () String)
(declare-fun unch220E () String)
(declare-fun ch20E () String)
(declare-fun unch120E () String)
(declare-fun unch220F () String)
(declare-fun ch20F () String)
(declare-fun unch120F () String)
(declare-fun unch220G () String)
(declare-fun ch20G () String)
(declare-fun unch120G () String)
(declare-fun unch220H () String)
(declare-fun ch20H () String)
(declare-fun unch120H () String)
(declare-fun unch220I () String)
(declare-fun ch20I () String)
(declare-fun unch120I () String)
(declare-fun unch220J () String)
(declare-fun ch20J () String)
(declare-fun unch120J () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun sc20B () Int)
(declare-fun sc20C () Int)
(declare-fun sc20D () Int)
(declare-fun sc20E () Int)
(declare-fun sc20F () Int)
(declare-fun sc20G () Int)
(declare-fun sc20H () Int)
(declare-fun sc20I () Int)
(declare-fun sc20J () Int)
(declare-fun var21A () String)
(declare-fun var21B () String)
(declare-fun var21C () String)
(declare-fun var21D () String)
(declare-fun var21E () String)
(declare-fun var21F () String)
(declare-fun var21G () String)
(declare-fun var21H () String)
(declare-fun var21I () String)
(declare-fun var21J () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun unch221B () String)
(declare-fun ch21B () String)
(declare-fun unch121B () String)
(declare-fun unch221C () String)
(declare-fun ch21C () String)
(declare-fun unch121C () String)
(declare-fun unch221D () String)
(declare-fun ch21D () String)
(declare-fun unch121D () String)
(declare-fun unch221E () String)
(declare-fun ch21E () String)
(declare-fun unch121E () String)
(declare-fun unch221F () String)
(declare-fun ch21F () String)
(declare-fun unch121F () String)
(declare-fun unch221G () String)
(declare-fun ch21G () String)
(declare-fun unch121G () String)
(declare-fun unch221H () String)
(declare-fun ch21H () String)
(declare-fun unch121H () String)
(declare-fun unch221I () String)
(declare-fun ch21I () String)
(declare-fun unch121I () String)
(declare-fun unch221J () String)
(declare-fun ch21J () String)
(declare-fun unch121J () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun sc21B () Int)
(declare-fun sc21C () Int)
(declare-fun sc21D () Int)
(declare-fun sc21E () Int)
(declare-fun sc21F () Int)
(declare-fun sc21G () Int)
(declare-fun sc21H () Int)
(declare-fun sc21I () Int)
(declare-fun sc21J () Int)
(declare-fun var22A () String)
(declare-fun var22B () String)
(declare-fun var22C () String)
(declare-fun var22D () String)
(declare-fun var22E () String)
(declare-fun var22F () String)
(declare-fun var22G () String)
(declare-fun var22H () String)
(declare-fun var22I () String)
(declare-fun var22J () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun unch222B () String)
(declare-fun ch22B () String)
(declare-fun unch122B () String)
(declare-fun unch222C () String)
(declare-fun ch22C () String)
(declare-fun unch122C () String)
(declare-fun unch222D () String)
(declare-fun ch22D () String)
(declare-fun unch122D () String)
(declare-fun unch222E () String)
(declare-fun ch22E () String)
(declare-fun unch122E () String)
(declare-fun unch222F () String)
(declare-fun ch22F () String)
(declare-fun unch122F () String)
(declare-fun unch222G () String)
(declare-fun ch22G () String)
(declare-fun unch122G () String)
(declare-fun unch222H () String)
(declare-fun ch22H () String)
(declare-fun unch122H () String)
(declare-fun unch222I () String)
(declare-fun ch22I () String)
(declare-fun unch122I () String)
(declare-fun unch222J () String)
(declare-fun ch22J () String)
(declare-fun unch122J () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun sc22B () Int)
(declare-fun sc22C () Int)
(declare-fun sc22D () Int)
(declare-fun sc22E () Int)
(declare-fun sc22F () Int)
(declare-fun sc22G () Int)
(declare-fun sc22H () Int)
(declare-fun sc22I () Int)
(declare-fun sc22J () Int)
(declare-fun var23A () String)
(declare-fun var23B () String)
(declare-fun var23C () String)
(declare-fun var23D () String)
(declare-fun var23E () String)
(declare-fun var23F () String)
(declare-fun var23G () String)
(declare-fun var23H () String)
(declare-fun var23I () String)
(declare-fun var23J () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun unch223B () String)
(declare-fun ch23B () String)
(declare-fun unch123B () String)
(declare-fun unch223C () String)
(declare-fun ch23C () String)
(declare-fun unch123C () String)
(declare-fun unch223D () String)
(declare-fun ch23D () String)
(declare-fun unch123D () String)
(declare-fun unch223E () String)
(declare-fun ch23E () String)
(declare-fun unch123E () String)
(declare-fun unch223F () String)
(declare-fun ch23F () String)
(declare-fun unch123F () String)
(declare-fun unch223G () String)
(declare-fun ch23G () String)
(declare-fun unch123G () String)
(declare-fun unch223H () String)
(declare-fun ch23H () String)
(declare-fun unch123H () String)
(declare-fun unch223I () String)
(declare-fun ch23I () String)
(declare-fun unch123I () String)
(declare-fun unch223J () String)
(declare-fun ch23J () String)
(declare-fun unch123J () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun sc23B () Int)
(declare-fun sc23C () Int)
(declare-fun sc23D () Int)
(declare-fun sc23E () Int)
(declare-fun sc23F () Int)
(declare-fun sc23G () Int)
(declare-fun sc23H () Int)
(declare-fun sc23I () Int)
(declare-fun sc23J () Int)
(declare-fun var24A () String)
(declare-fun var24B () String)
(declare-fun var24C () String)
(declare-fun var24D () String)
(declare-fun var24E () String)
(declare-fun var24F () String)
(declare-fun var24G () String)
(declare-fun var24H () String)
(declare-fun var24I () String)
(declare-fun var24J () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun unch224B () String)
(declare-fun ch24B () String)
(declare-fun unch124B () String)
(declare-fun unch224C () String)
(declare-fun ch24C () String)
(declare-fun unch124C () String)
(declare-fun unch224D () String)
(declare-fun ch24D () String)
(declare-fun unch124D () String)
(declare-fun unch224E () String)
(declare-fun ch24E () String)
(declare-fun unch124E () String)
(declare-fun unch224F () String)
(declare-fun ch24F () String)
(declare-fun unch124F () String)
(declare-fun unch224G () String)
(declare-fun ch24G () String)
(declare-fun unch124G () String)
(declare-fun unch224H () String)
(declare-fun ch24H () String)
(declare-fun unch124H () String)
(declare-fun unch224I () String)
(declare-fun ch24I () String)
(declare-fun unch124I () String)
(declare-fun unch224J () String)
(declare-fun ch24J () String)
(declare-fun unch124J () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun sc24B () Int)
(declare-fun sc24C () Int)
(declare-fun sc24D () Int)
(declare-fun sc24E () Int)
(declare-fun sc24F () Int)
(declare-fun sc24G () Int)
(declare-fun sc24H () Int)
(declare-fun sc24I () Int)
(declare-fun sc24J () Int)
(declare-fun var25A () String)
(declare-fun var25B () String)
(declare-fun var25C () String)
(declare-fun var25D () String)
(declare-fun var25E () String)
(declare-fun var25F () String)
(declare-fun var25G () String)
(declare-fun var25H () String)
(declare-fun var25I () String)
(declare-fun var25J () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun unch225B () String)
(declare-fun ch25B () String)
(declare-fun unch125B () String)
(declare-fun unch225C () String)
(declare-fun ch25C () String)
(declare-fun unch125C () String)
(declare-fun unch225D () String)
(declare-fun ch25D () String)
(declare-fun unch125D () String)
(declare-fun unch225E () String)
(declare-fun ch25E () String)
(declare-fun unch125E () String)
(declare-fun unch225F () String)
(declare-fun ch25F () String)
(declare-fun unch125F () String)
(declare-fun unch225G () String)
(declare-fun ch25G () String)
(declare-fun unch125G () String)
(declare-fun unch225H () String)
(declare-fun ch25H () String)
(declare-fun unch125H () String)
(declare-fun unch225I () String)
(declare-fun ch25I () String)
(declare-fun unch125I () String)
(declare-fun unch225J () String)
(declare-fun ch25J () String)
(declare-fun unch125J () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun sc25B () Int)
(declare-fun sc25C () Int)
(declare-fun sc25D () Int)
(declare-fun sc25E () Int)
(declare-fun sc25F () Int)
(declare-fun sc25G () Int)
(declare-fun sc25H () Int)
(declare-fun sc25I () Int)
(declare-fun sc25J () Int)
(declare-fun var26A () String)
(declare-fun var26B () String)
(declare-fun var26C () String)
(declare-fun var26D () String)
(declare-fun var26E () String)
(declare-fun var26F () String)
(declare-fun var26G () String)
(declare-fun var26H () String)
(declare-fun var26I () String)
(declare-fun var26J () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun unch226B () String)
(declare-fun ch26B () String)
(declare-fun unch126B () String)
(declare-fun unch226C () String)
(declare-fun ch26C () String)
(declare-fun unch126C () String)
(declare-fun unch226D () String)
(declare-fun ch26D () String)
(declare-fun unch126D () String)
(declare-fun unch226E () String)
(declare-fun ch26E () String)
(declare-fun unch126E () String)
(declare-fun unch226F () String)
(declare-fun ch26F () String)
(declare-fun unch126F () String)
(declare-fun unch226G () String)
(declare-fun ch26G () String)
(declare-fun unch126G () String)
(declare-fun unch226H () String)
(declare-fun ch26H () String)
(declare-fun unch126H () String)
(declare-fun unch226I () String)
(declare-fun ch26I () String)
(declare-fun unch126I () String)
(declare-fun unch226J () String)
(declare-fun ch26J () String)
(declare-fun unch126J () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun sc26B () Int)
(declare-fun sc26C () Int)
(declare-fun sc26D () Int)
(declare-fun sc26E () Int)
(declare-fun sc26F () Int)
(declare-fun sc26G () Int)
(declare-fun sc26H () Int)
(declare-fun sc26I () Int)
(declare-fun sc26J () Int)
(declare-fun var27A () String)
(declare-fun var27B () String)
(declare-fun var27C () String)
(declare-fun var27D () String)
(declare-fun var27E () String)
(declare-fun var27F () String)
(declare-fun var27G () String)
(declare-fun var27H () String)
(declare-fun var27I () String)
(declare-fun var27J () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun unch227B () String)
(declare-fun ch27B () String)
(declare-fun unch127B () String)
(declare-fun unch227C () String)
(declare-fun ch27C () String)
(declare-fun unch127C () String)
(declare-fun unch227D () String)
(declare-fun ch27D () String)
(declare-fun unch127D () String)
(declare-fun unch227E () String)
(declare-fun ch27E () String)
(declare-fun unch127E () String)
(declare-fun unch227F () String)
(declare-fun ch27F () String)
(declare-fun unch127F () String)
(declare-fun unch227G () String)
(declare-fun ch27G () String)
(declare-fun unch127G () String)
(declare-fun unch227H () String)
(declare-fun ch27H () String)
(declare-fun unch127H () String)
(declare-fun unch227I () String)
(declare-fun ch27I () String)
(declare-fun unch127I () String)
(declare-fun unch227J () String)
(declare-fun ch27J () String)
(declare-fun unch127J () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun sc27B () Int)
(declare-fun sc27C () Int)
(declare-fun sc27D () Int)
(declare-fun sc27E () Int)
(declare-fun sc27F () Int)
(declare-fun sc27G () Int)
(declare-fun sc27H () Int)
(declare-fun sc27I () Int)
(declare-fun sc27J () Int)
(declare-fun var28A () String)
(declare-fun var28B () String)
(declare-fun var28C () String)
(declare-fun var28D () String)
(declare-fun var28E () String)
(declare-fun var28F () String)
(declare-fun var28G () String)
(declare-fun var28H () String)
(declare-fun var28I () String)
(declare-fun var28J () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun unch228B () String)
(declare-fun ch28B () String)
(declare-fun unch128B () String)
(declare-fun unch228C () String)
(declare-fun ch28C () String)
(declare-fun unch128C () String)
(declare-fun unch228D () String)
(declare-fun ch28D () String)
(declare-fun unch128D () String)
(declare-fun unch228E () String)
(declare-fun ch28E () String)
(declare-fun unch128E () String)
(declare-fun unch228F () String)
(declare-fun ch28F () String)
(declare-fun unch128F () String)
(declare-fun unch228G () String)
(declare-fun ch28G () String)
(declare-fun unch128G () String)
(declare-fun unch228H () String)
(declare-fun ch28H () String)
(declare-fun unch128H () String)
(declare-fun unch228I () String)
(declare-fun ch28I () String)
(declare-fun unch128I () String)
(declare-fun unch228J () String)
(declare-fun ch28J () String)
(declare-fun unch128J () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(declare-fun sc28B () Int)
(declare-fun sc28C () Int)
(declare-fun sc28D () Int)
(declare-fun sc28E () Int)
(declare-fun sc28F () Int)
(declare-fun sc28G () Int)
(declare-fun sc28H () Int)
(declare-fun sc28I () Int)
(declare-fun sc28J () Int)
(declare-fun var29A () String)
(declare-fun var29B () String)
(declare-fun var29C () String)
(declare-fun var29D () String)
(declare-fun var29E () String)
(declare-fun var29F () String)
(declare-fun var29G () String)
(declare-fun var29H () String)
(declare-fun var29I () String)
(declare-fun var29J () String)
(declare-fun unch229A () String)
(declare-fun ch29A () String)
(declare-fun unch129A () String)
(declare-fun stem29 () String)
(declare-fun unch229B () String)
(declare-fun ch29B () String)
(declare-fun unch129B () String)
(declare-fun unch229C () String)
(declare-fun ch29C () String)
(declare-fun unch129C () String)
(declare-fun unch229D () String)
(declare-fun ch29D () String)
(declare-fun unch129D () String)
(declare-fun unch229E () String)
(declare-fun ch29E () String)
(declare-fun unch129E () String)
(declare-fun unch229F () String)
(declare-fun ch29F () String)
(declare-fun unch129F () String)
(declare-fun unch229G () String)
(declare-fun ch29G () String)
(declare-fun unch129G () String)
(declare-fun unch229H () String)
(declare-fun ch29H () String)
(declare-fun unch129H () String)
(declare-fun unch229I () String)
(declare-fun ch29I () String)
(declare-fun unch129I () String)
(declare-fun unch229J () String)
(declare-fun ch29J () String)
(declare-fun unch129J () String)
(declare-fun l29 () Int)
(declare-fun sc29A () Int)
(declare-fun sc29B () Int)
(declare-fun sc29C () Int)
(declare-fun sc29D () Int)
(declare-fun sc29E () Int)
(declare-fun sc29F () Int)
(declare-fun sc29G () Int)
(declare-fun sc29H () Int)
(declare-fun sc29I () Int)
(declare-fun sc29J () Int)
(assert (<= (str.len var0A) 1))
(assert (<= (str.len var0B) 1))
(assert (<= (str.len var0C) 1))
(assert (<= (str.len var0D) 1))
(assert (<= (str.len var0E) 1))
(assert (<= (str.len var0F) 1))
(assert (<= (str.len var0G) 1))
(assert (<= (str.len var0H) 1))
(assert (<= (str.len var0I) 1))
(assert (<= (str.len var0J) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= (str.++ preB (str.++ stem0 sufB)) (str.++ unch10B (str.++ ch0B unch20B))))
(assert (= (str.++ preC (str.++ stem0 sufC)) (str.++ unch10C (str.++ ch0C unch20C))))
(assert (= (str.++ preD (str.++ stem0 sufD)) (str.++ unch10D (str.++ ch0D unch20D))))
(assert (= (str.++ preE (str.++ stem0 sufE)) (str.++ unch10E (str.++ ch0E unch20E))))
(assert (= (str.++ preF (str.++ stem0 sufF)) (str.++ unch10F (str.++ ch0F unch20F))))
(assert (= (str.++ preG (str.++ stem0 sufG)) (str.++ unch10G (str.++ ch0G unch20G))))
(assert (= (str.++ preH (str.++ stem0 sufH)) (str.++ unch10H (str.++ ch0H unch20H))))
(assert (= (str.++ preI (str.++ stem0 sufI)) (str.++ unch10I (str.++ ch0I unch20I))))
(assert (= (str.++ preJ (str.++ stem0 sufJ)) (str.++ unch10J (str.++ ch0J unch20J))))
(assert (= "zub" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= "zubam" (str.++ unch10B (str.++ var0B unch20B))))
(assert (= "zuboOi" (str.++ unch10C (str.++ var0C unch20C))))
(assert (= "zuXi" (str.++ unch10D (str.++ var0D unch20D))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (= (ite (= ch0B var0B) 0 1) sc0B))
(assert (= (ite (= ch0C var0C) 0 1) sc0C))
(assert (= (ite (= ch0D var0D) 0 1) sc0D))
(assert (= (ite (= ch0E var0E) 0 1) sc0E))
(assert (= (ite (= ch0F var0F) 0 1) sc0F))
(assert (= (ite (= ch0G var0G) 0 1) sc0G))
(assert (= (ite (= ch0H var0H) 0 1) sc0H))
(assert (= (ite (= ch0I var0I) 0 1) sc0I))
(assert (= (ite (= ch0J var0J) 0 1) sc0J))
(assert (<= sc0A 1))
(assert (<= sc0B 1))
(assert (<= sc0C 1))
(assert (<= sc0D 1))
(assert (<= sc0E 1))
(assert (<= sc0F 1))
(assert (<= sc0G 1))
(assert (<= sc0H 1))
(assert (<= sc0I 1))
(assert (<= sc0J 1))
(assert (<= (str.len var1A) 1))
(assert (<= (str.len var1B) 1))
(assert (<= (str.len var1C) 1))
(assert (<= (str.len var1D) 1))
(assert (<= (str.len var1E) 1))
(assert (<= (str.len var1F) 1))
(assert (<= (str.len var1G) 1))
(assert (<= (str.len var1H) 1))
(assert (<= (str.len var1I) 1))
(assert (<= (str.len var1J) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= (str.++ preB (str.++ stem1 sufB)) (str.++ unch11B (str.++ ch1B unch21B))))
(assert (= (str.++ preC (str.++ stem1 sufC)) (str.++ unch11C (str.++ ch1C unch21C))))
(assert (= (str.++ preD (str.++ stem1 sufD)) (str.++ unch11D (str.++ ch1D unch21D))))
(assert (= (str.++ preE (str.++ stem1 sufE)) (str.++ unch11E (str.++ ch1E unch21E))))
(assert (= (str.++ preF (str.++ stem1 sufF)) (str.++ unch11F (str.++ ch1F unch21F))))
(assert (= (str.++ preG (str.++ stem1 sufG)) (str.++ unch11G (str.++ ch1G unch21G))))
(assert (= (str.++ preH (str.++ stem1 sufH)) (str.++ unch11H (str.++ ch1H unch21H))))
(assert (= (str.++ preI (str.++ stem1 sufI)) (str.++ unch11I (str.++ ch1I unch21I))))
(assert (= (str.++ preJ (str.++ stem1 sufJ)) (str.++ unch11J (str.++ ch1J unch21J))))
(assert (= "sOit" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= "sOitam" (str.++ unch11B (str.++ var1B unch21B))))
(assert (= "sOitoOi" (str.++ unch11C (str.++ var1C unch21C))))
(assert (= "sOiZi" (str.++ unch11D (str.++ var1D unch21D))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (= (ite (= ch1B var1B) 0 1) sc1B))
(assert (= (ite (= ch1C var1C) 0 1) sc1C))
(assert (= (ite (= ch1D var1D) 0 1) sc1D))
(assert (= (ite (= ch1E var1E) 0 1) sc1E))
(assert (= (ite (= ch1F var1F) 0 1) sc1F))
(assert (= (ite (= ch1G var1G) 0 1) sc1G))
(assert (= (ite (= ch1H var1H) 0 1) sc1H))
(assert (= (ite (= ch1I var1I) 0 1) sc1I))
(assert (= (ite (= ch1J var1J) 0 1) sc1J))
(assert (<= sc1A 1))
(assert (<= sc1B 1))
(assert (<= sc1C 1))
(assert (<= sc1D 1))
(assert (<= sc1E 1))
(assert (<= sc1F 1))
(assert (<= sc1G 1))
(assert (<= sc1H 1))
(assert (<= sc1I 1))
(assert (<= sc1J 1))
(assert (<= (str.len var2A) 1))
(assert (<= (str.len var2B) 1))
(assert (<= (str.len var2C) 1))
(assert (<= (str.len var2D) 1))
(assert (<= (str.len var2E) 1))
(assert (<= (str.len var2F) 1))
(assert (<= (str.len var2G) 1))
(assert (<= (str.len var2H) 1))
(assert (<= (str.len var2I) 1))
(assert (<= (str.len var2J) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= (str.++ preB (str.++ stem2 sufB)) (str.++ unch12B (str.++ ch2B unch22B))))
(assert (= (str.++ preC (str.++ stem2 sufC)) (str.++ unch12C (str.++ ch2C unch22C))))
(assert (= (str.++ preD (str.++ stem2 sufD)) (str.++ unch12D (str.++ ch2D unch22D))))
(assert (= (str.++ preE (str.++ stem2 sufE)) (str.++ unch12E (str.++ ch2E unch22E))))
(assert (= (str.++ preF (str.++ stem2 sufF)) (str.++ unch12F (str.++ ch2F unch22F))))
(assert (= (str.++ preG (str.++ stem2 sufG)) (str.++ unch12G (str.++ ch2G unch22G))))
(assert (= (str.++ preH (str.++ stem2 sufH)) (str.++ unch12H (str.++ ch2H unch22H))))
(assert (= (str.++ preI (str.++ stem2 sufI)) (str.++ unch12I (str.++ ch2I unch22I))))
(assert (= (str.++ preJ (str.++ stem2 sufJ)) (str.++ unch12J (str.++ ch2J unch22J))))
(assert (= "1aZ" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= "1aZam" (str.++ unch12B (str.++ var2B unch22B))))
(assert (= "1ateOi" (str.++ unch12C (str.++ var2C unch22C))))
(assert (= "1ateOi" (str.++ unch12E (str.++ var2E unch22E))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (= (ite (= ch2B var2B) 0 1) sc2B))
(assert (= (ite (= ch2C var2C) 0 1) sc2C))
(assert (= (ite (= ch2D var2D) 0 1) sc2D))
(assert (= (ite (= ch2E var2E) 0 1) sc2E))
(assert (= (ite (= ch2F var2F) 0 1) sc2F))
(assert (= (ite (= ch2G var2G) 0 1) sc2G))
(assert (= (ite (= ch2H var2H) 0 1) sc2H))
(assert (= (ite (= ch2I var2I) 0 1) sc2I))
(assert (= (ite (= ch2J var2J) 0 1) sc2J))
(assert (<= sc2A 1))
(assert (<= sc2B 1))
(assert (<= sc2C 1))
(assert (<= sc2D 1))
(assert (<= sc2E 1))
(assert (<= sc2F 1))
(assert (<= sc2G 1))
(assert (<= sc2H 1))
(assert (<= sc2I 1))
(assert (<= sc2J 1))
(assert (<= (str.len var3A) 1))
(assert (<= (str.len var3B) 1))
(assert (<= (str.len var3C) 1))
(assert (<= (str.len var3D) 1))
(assert (<= (str.len var3E) 1))
(assert (<= (str.len var3F) 1))
(assert (<= (str.len var3G) 1))
(assert (<= (str.len var3H) 1))
(assert (<= (str.len var3I) 1))
(assert (<= (str.len var3J) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= (str.++ preB (str.++ stem3 sufB)) (str.++ unch13B (str.++ ch3B unch23B))))
(assert (= (str.++ preC (str.++ stem3 sufC)) (str.++ unch13C (str.++ ch3C unch23C))))
(assert (= (str.++ preD (str.++ stem3 sufD)) (str.++ unch13D (str.++ ch3D unch23D))))
(assert (= (str.++ preE (str.++ stem3 sufE)) (str.++ unch13E (str.++ ch3E unch23E))))
(assert (= (str.++ preF (str.++ stem3 sufF)) (str.++ unch13F (str.++ ch3F unch23F))))
(assert (= (str.++ preG (str.++ stem3 sufG)) (str.++ unch13G (str.++ ch3G unch23G))))
(assert (= (str.++ preH (str.++ stem3 sufH)) (str.++ unch13H (str.++ ch3H unch23H))))
(assert (= (str.++ preI (str.++ stem3 sufI)) (str.++ unch13I (str.++ ch3I unch23I))))
(assert (= (str.++ preJ (str.++ stem3 sufJ)) (str.++ unch13J (str.++ ch3J unch23J))))
(assert (= "ko2i3" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= "koBe3am" (str.++ unch13B (str.++ var3B unch23B))))
(assert (= "koBeleOi" (str.++ unch13C (str.++ var3C unch23C))))
(assert (= "koBe3i" (str.++ unch13D (str.++ var3D unch23D))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (= (ite (= ch3B var3B) 0 1) sc3B))
(assert (= (ite (= ch3C var3C) 0 1) sc3C))
(assert (= (ite (= ch3D var3D) 0 1) sc3D))
(assert (= (ite (= ch3E var3E) 0 1) sc3E))
(assert (= (ite (= ch3F var3F) 0 1) sc3F))
(assert (= (ite (= ch3G var3G) 0 1) sc3G))
(assert (= (ite (= ch3H var3H) 0 1) sc3H))
(assert (= (ite (= ch3I var3I) 0 1) sc3I))
(assert (= (ite (= ch3J var3J) 0 1) sc3J))
(assert (<= sc3A 1))
(assert (<= sc3B 1))
(assert (<= sc3C 1))
(assert (<= sc3D 1))
(assert (<= sc3E 1))
(assert (<= sc3F 1))
(assert (<= sc3G 1))
(assert (<= sc3H 1))
(assert (<= sc3I 1))
(assert (<= sc3J 1))
(assert (<= (str.len var4A) 1))
(assert (<= (str.len var4B) 1))
(assert (<= (str.len var4C) 1))
(assert (<= (str.len var4D) 1))
(assert (<= (str.len var4E) 1))
(assert (<= (str.len var4F) 1))
(assert (<= (str.len var4G) 1))
(assert (<= (str.len var4H) 1))
(assert (<= (str.len var4I) 1))
(assert (<= (str.len var4J) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= (str.++ preB (str.++ stem4 sufB)) (str.++ unch14B (str.++ ch4B unch24B))))
(assert (= (str.++ preC (str.++ stem4 sufC)) (str.++ unch14C (str.++ ch4C unch24C))))
(assert (= (str.++ preD (str.++ stem4 sufD)) (str.++ unch14D (str.++ ch4D unch24D))))
(assert (= (str.++ preE (str.++ stem4 sufE)) (str.++ unch14E (str.++ ch4E unch24E))))
(assert (= (str.++ preF (str.++ stem4 sufF)) (str.++ unch14F (str.++ ch4F unch24F))))
(assert (= (str.++ preG (str.++ stem4 sufG)) (str.++ unch14G (str.++ ch4G unch24G))))
(assert (= (str.++ preH (str.++ stem4 sufH)) (str.++ unch14H (str.++ ch4H unch24H))))
(assert (= (str.++ preI (str.++ stem4 sufI)) (str.++ unch14I (str.++ ch4I unch24I))))
(assert (= (str.++ preJ (str.++ stem4 sufJ)) (str.++ unch14J (str.++ ch4J unch24J))))
(assert (= "zlo4ij" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= "zlo4ijam" (str.++ unch14B (str.++ var4B unch24B))))
(assert (= "zlo4ijeOi" (str.++ unch14C (str.++ var4C unch24C))))
(assert (= "zlo4ijeOi" (str.++ unch14E (str.++ var4E unch24E))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (= (ite (= ch4B var4B) 0 1) sc4B))
(assert (= (ite (= ch4C var4C) 0 1) sc4C))
(assert (= (ite (= ch4D var4D) 0 1) sc4D))
(assert (= (ite (= ch4E var4E) 0 1) sc4E))
(assert (= (ite (= ch4F var4F) 0 1) sc4F))
(assert (= (ite (= ch4G var4G) 0 1) sc4G))
(assert (= (ite (= ch4H var4H) 0 1) sc4H))
(assert (= (ite (= ch4I var4I) 0 1) sc4I))
(assert (= (ite (= ch4J var4J) 0 1) sc4J))
(assert (<= sc4A 1))
(assert (<= sc4B 1))
(assert (<= sc4C 1))
(assert (<= sc4D 1))
(assert (<= sc4E 1))
(assert (<= sc4F 1))
(assert (<= sc4G 1))
(assert (<= sc4H 1))
(assert (<= sc4I 1))
(assert (<= sc4J 1))
(assert (<= (str.len var5A) 1))
(assert (<= (str.len var5B) 1))
(assert (<= (str.len var5C) 1))
(assert (<= (str.len var5D) 1))
(assert (<= (str.len var5E) 1))
(assert (<= (str.len var5F) 1))
(assert (<= (str.len var5G) 1))
(assert (<= (str.len var5H) 1))
(assert (<= (str.len var5I) 1))
(assert (<= (str.len var5J) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= (str.++ preB (str.++ stem5 sufB)) (str.++ unch15B (str.++ ch5B unch25B))))
(assert (= (str.++ preC (str.++ stem5 sufC)) (str.++ unch15C (str.++ ch5C unch25C))))
(assert (= (str.++ preD (str.++ stem5 sufD)) (str.++ unch15D (str.++ ch5D unch25D))))
(assert (= (str.++ preE (str.++ stem5 sufE)) (str.++ unch15E (str.++ ch5E unch25E))))
(assert (= (str.++ preF (str.++ stem5 sufF)) (str.++ unch15F (str.++ ch5F unch25F))))
(assert (= (str.++ preG (str.++ stem5 sufG)) (str.++ unch15G (str.++ ch5G unch25G))))
(assert (= (str.++ preH (str.++ stem5 sufH)) (str.++ unch15H (str.++ ch5H unch25H))))
(assert (= (str.++ preI (str.++ stem5 sufI)) (str.++ unch15I (str.++ ch5I unch25I))))
(assert (= (str.++ preJ (str.++ stem5 sufJ)) (str.++ unch15J (str.++ ch5J unch25J))))
(assert (= "5i6a7" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= "5i6a7am" (str.++ unch15B (str.++ var5B unch25B))))
(assert (= "5i6aPeOi" (str.++ unch15C (str.++ var5C unch25C))))
(assert (= "5i6a7i" (str.++ unch15D (str.++ var5D unch25D))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (= (ite (= ch5B var5B) 0 1) sc5B))
(assert (= (ite (= ch5C var5C) 0 1) sc5C))
(assert (= (ite (= ch5D var5D) 0 1) sc5D))
(assert (= (ite (= ch5E var5E) 0 1) sc5E))
(assert (= (ite (= ch5F var5F) 0 1) sc5F))
(assert (= (ite (= ch5G var5G) 0 1) sc5G))
(assert (= (ite (= ch5H var5H) 0 1) sc5H))
(assert (= (ite (= ch5I var5I) 0 1) sc5I))
(assert (= (ite (= ch5J var5J) 0 1) sc5J))
(assert (<= sc5A 1))
(assert (<= sc5B 1))
(assert (<= sc5C 1))
(assert (<= sc5D 1))
(assert (<= sc5E 1))
(assert (<= sc5F 1))
(assert (<= sc5G 1))
(assert (<= sc5H 1))
(assert (<= sc5I 1))
(assert (<= sc5J 1))
(assert (<= (str.len var6A) 1))
(assert (<= (str.len var6B) 1))
(assert (<= (str.len var6C) 1))
(assert (<= (str.len var6D) 1))
(assert (<= (str.len var6E) 1))
(assert (<= (str.len var6F) 1))
(assert (<= (str.len var6G) 1))
(assert (<= (str.len var6H) 1))
(assert (<= (str.len var6I) 1))
(assert (<= (str.len var6J) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= (str.++ preB (str.++ stem6 sufB)) (str.++ unch16B (str.++ ch6B unch26B))))
(assert (= (str.++ preC (str.++ stem6 sufC)) (str.++ unch16C (str.++ ch6C unch26C))))
(assert (= (str.++ preD (str.++ stem6 sufD)) (str.++ unch16D (str.++ ch6D unch26D))))
(assert (= (str.++ preE (str.++ stem6 sufE)) (str.++ unch16E (str.++ ch6E unch26E))))
(assert (= (str.++ preF (str.++ stem6 sufF)) (str.++ unch16F (str.++ ch6F unch26F))))
(assert (= (str.++ preG (str.++ stem6 sufG)) (str.++ unch16G (str.++ ch6G unch26G))))
(assert (= (str.++ preH (str.++ stem6 sufH)) (str.++ unch16H (str.++ ch6H unch26H))))
(assert (= (str.++ preI (str.++ stem6 sufI)) (str.++ unch16I (str.++ ch6I unch26I))))
(assert (= (str.++ preJ (str.++ stem6 sufJ)) (str.++ unch16J (str.++ ch6J unch26J))))
(assert (= "korovaj" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= "korovajam" (str.++ unch16B (str.++ var6B unch26B))))
(assert (= "korovajeOi" (str.++ unch16C (str.++ var6C unch26C))))
(assert (= "korovaji" (str.++ unch16D (str.++ var6D unch26D))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (= (ite (= ch6B var6B) 0 1) sc6B))
(assert (= (ite (= ch6C var6C) 0 1) sc6C))
(assert (= (ite (= ch6D var6D) 0 1) sc6D))
(assert (= (ite (= ch6E var6E) 0 1) sc6E))
(assert (= (ite (= ch6F var6F) 0 1) sc6F))
(assert (= (ite (= ch6G var6G) 0 1) sc6G))
(assert (= (ite (= ch6H var6H) 0 1) sc6H))
(assert (= (ite (= ch6I var6I) 0 1) sc6I))
(assert (= (ite (= ch6J var6J) 0 1) sc6J))
(assert (<= sc6A 1))
(assert (<= sc6B 1))
(assert (<= sc6C 1))
(assert (<= sc6D 1))
(assert (<= sc6E 1))
(assert (<= sc6F 1))
(assert (<= sc6G 1))
(assert (<= sc6H 1))
(assert (<= sc6I 1))
(assert (<= sc6J 1))
(assert (<= (str.len var7A) 1))
(assert (<= (str.len var7B) 1))
(assert (<= (str.len var7C) 1))
(assert (<= (str.len var7D) 1))
(assert (<= (str.len var7E) 1))
(assert (<= (str.len var7F) 1))
(assert (<= (str.len var7G) 1))
(assert (<= (str.len var7H) 1))
(assert (<= (str.len var7I) 1))
(assert (<= (str.len var7J) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= (str.++ preB (str.++ stem7 sufB)) (str.++ unch17B (str.++ ch7B unch27B))))
(assert (= (str.++ preC (str.++ stem7 sufC)) (str.++ unch17C (str.++ ch7C unch27C))))
(assert (= (str.++ preD (str.++ stem7 sufD)) (str.++ unch17D (str.++ ch7D unch27D))))
(assert (= (str.++ preE (str.++ stem7 sufE)) (str.++ unch17E (str.++ ch7E unch27E))))
(assert (= (str.++ preF (str.++ stem7 sufF)) (str.++ unch17F (str.++ ch7F unch27F))))
(assert (= (str.++ preG (str.++ stem7 sufG)) (str.++ unch17G (str.++ ch7G unch27G))))
(assert (= (str.++ preH (str.++ stem7 sufH)) (str.++ unch17H (str.++ ch7H unch27H))))
(assert (= (str.++ preI (str.++ stem7 sufI)) (str.++ unch17I (str.++ ch7I unch27I))))
(assert (= (str.++ preJ (str.++ stem7 sufJ)) (str.++ unch17J (str.++ ch7J unch27J))))
(assert (= "ka5i8" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= "kame8am" (str.++ unch17B (str.++ var7B unch27B))))
(assert (= "kameneOi" (str.++ unch17C (str.++ var7C unch27C))))
(assert (= "kame8i" (str.++ unch17D (str.++ var7D unch27D))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (= (ite (= ch7B var7B) 0 1) sc7B))
(assert (= (ite (= ch7C var7C) 0 1) sc7C))
(assert (= (ite (= ch7D var7D) 0 1) sc7D))
(assert (= (ite (= ch7E var7E) 0 1) sc7E))
(assert (= (ite (= ch7F var7F) 0 1) sc7F))
(assert (= (ite (= ch7G var7G) 0 1) sc7G))
(assert (= (ite (= ch7H var7H) 0 1) sc7H))
(assert (= (ite (= ch7I var7I) 0 1) sc7I))
(assert (= (ite (= ch7J var7J) 0 1) sc7J))
(assert (<= sc7A 1))
(assert (<= sc7B 1))
(assert (<= sc7C 1))
(assert (<= sc7D 1))
(assert (<= sc7E 1))
(assert (<= sc7F 1))
(assert (<= sc7G 1))
(assert (<= sc7H 1))
(assert (<= sc7I 1))
(assert (<= sc7J 1))
(assert (<= (str.len var8A) 1))
(assert (<= (str.len var8B) 1))
(assert (<= (str.len var8C) 1))
(assert (<= (str.len var8D) 1))
(assert (<= (str.len var8E) 1))
(assert (<= (str.len var8F) 1))
(assert (<= (str.len var8G) 1))
(assert (<= (str.len var8H) 1))
(assert (<= (str.len var8I) 1))
(assert (<= (str.len var8J) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= (str.++ preB (str.++ stem8 sufB)) (str.++ unch18B (str.++ ch8B unch28B))))
(assert (= (str.++ preC (str.++ stem8 sufC)) (str.++ unch18C (str.++ ch8C unch28C))))
(assert (= (str.++ preD (str.++ stem8 sufD)) (str.++ unch18D (str.++ ch8D unch28D))))
(assert (= (str.++ preE (str.++ stem8 sufE)) (str.++ unch18E (str.++ ch8E unch28E))))
(assert (= (str.++ preF (str.++ stem8 sufF)) (str.++ unch18F (str.++ ch8F unch28F))))
(assert (= (str.++ preG (str.++ stem8 sufG)) (str.++ unch18G (str.++ ch8G unch28G))))
(assert (= (str.++ preH (str.++ stem8 sufH)) (str.++ unch18H (str.++ ch8H unch28H))))
(assert (= (str.++ preI (str.++ stem8 sufI)) (str.++ unch18I (str.++ ch8I unch28I))))
(assert (= (str.++ preJ (str.++ stem8 sufJ)) (str.++ unch18J (str.++ ch8J unch28J))))
(assert (= "5i4" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= "5i4am" (str.++ unch18B (str.++ var8B unch28B))))
(assert (= "5ideOi" (str.++ unch18C (str.++ var8C unch28C))))
(assert (= "5i4i" (str.++ unch18D (str.++ var8D unch28D))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (= (ite (= ch8B var8B) 0 1) sc8B))
(assert (= (ite (= ch8C var8C) 0 1) sc8C))
(assert (= (ite (= ch8D var8D) 0 1) sc8D))
(assert (= (ite (= ch8E var8E) 0 1) sc8E))
(assert (= (ite (= ch8F var8F) 0 1) sc8F))
(assert (= (ite (= ch8G var8G) 0 1) sc8G))
(assert (= (ite (= ch8H var8H) 0 1) sc8H))
(assert (= (ite (= ch8I var8I) 0 1) sc8I))
(assert (= (ite (= ch8J var8J) 0 1) sc8J))
(assert (<= sc8A 1))
(assert (<= sc8B 1))
(assert (<= sc8C 1))
(assert (<= sc8D 1))
(assert (<= sc8E 1))
(assert (<= sc8F 1))
(assert (<= sc8G 1))
(assert (<= sc8H 1))
(assert (<= sc8I 1))
(assert (<= sc8J 1))
(assert (<= (str.len var9A) 1))
(assert (<= (str.len var9B) 1))
(assert (<= (str.len var9C) 1))
(assert (<= (str.len var9D) 1))
(assert (<= (str.len var9E) 1))
(assert (<= (str.len var9F) 1))
(assert (<= (str.len var9G) 1))
(assert (<= (str.len var9H) 1))
(assert (<= (str.len var9I) 1))
(assert (<= (str.len var9J) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= (str.++ preB (str.++ stem9 sufB)) (str.++ unch19B (str.++ ch9B unch29B))))
(assert (= (str.++ preC (str.++ stem9 sufC)) (str.++ unch19C (str.++ ch9C unch29C))))
(assert (= (str.++ preD (str.++ stem9 sufD)) (str.++ unch19D (str.++ ch9D unch29D))))
(assert (= (str.++ preE (str.++ stem9 sufE)) (str.++ unch19E (str.++ ch9E unch29E))))
(assert (= (str.++ preF (str.++ stem9 sufF)) (str.++ unch19F (str.++ ch9F unch29F))))
(assert (= (str.++ preG (str.++ stem9 sufG)) (str.++ unch19G (str.++ ch9G unch29G))))
(assert (= (str.++ preH (str.++ stem9 sufH)) (str.++ unch19H (str.++ ch9H unch29H))))
(assert (= (str.++ preI (str.++ stem9 sufI)) (str.++ unch19I (str.++ ch9I unch29I))))
(assert (= (str.++ preJ (str.++ stem9 sufJ)) (str.++ unch19J (str.++ ch9J unch29J))))
(assert (= "x3iw" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= "x3ivam" (str.++ unch19B (str.++ var9B unch29B))))
(assert (= "x3ivoOi" (str.++ unch19C (str.++ var9C unch29C))))
(assert (= "x3iOi" (str.++ unch19D (str.++ var9D unch29D))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (= (ite (= ch9B var9B) 0 1) sc9B))
(assert (= (ite (= ch9C var9C) 0 1) sc9C))
(assert (= (ite (= ch9D var9D) 0 1) sc9D))
(assert (= (ite (= ch9E var9E) 0 1) sc9E))
(assert (= (ite (= ch9F var9F) 0 1) sc9F))
(assert (= (ite (= ch9G var9G) 0 1) sc9G))
(assert (= (ite (= ch9H var9H) 0 1) sc9H))
(assert (= (ite (= ch9I var9I) 0 1) sc9I))
(assert (= (ite (= ch9J var9J) 0 1) sc9J))
(assert (<= sc9A 1))
(assert (<= sc9B 1))
(assert (<= sc9C 1))
(assert (<= sc9D 1))
(assert (<= sc9E 1))
(assert (<= sc9F 1))
(assert (<= sc9G 1))
(assert (<= sc9H 1))
(assert (<= sc9I 1))
(assert (<= sc9J 1))
(assert (<= (str.len var10A) 1))
(assert (<= (str.len var10B) 1))
(assert (<= (str.len var10C) 1))
(assert (<= (str.len var10D) 1))
(assert (<= (str.len var10E) 1))
(assert (<= (str.len var10F) 1))
(assert (<= (str.len var10G) 1))
(assert (<= (str.len var10H) 1))
(assert (<= (str.len var10I) 1))
(assert (<= (str.len var10J) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= (str.++ preB (str.++ stem10 sufB)) (str.++ unch110B (str.++ ch10B unch210B))))
(assert (= (str.++ preC (str.++ stem10 sufC)) (str.++ unch110C (str.++ ch10C unch210C))))
(assert (= (str.++ preD (str.++ stem10 sufD)) (str.++ unch110D (str.++ ch10D unch210D))))
(assert (= (str.++ preE (str.++ stem10 sufE)) (str.++ unch110E (str.++ ch10E unch210E))))
(assert (= (str.++ preF (str.++ stem10 sufF)) (str.++ unch110F (str.++ ch10F unch210F))))
(assert (= (str.++ preG (str.++ stem10 sufG)) (str.++ unch110G (str.++ ch10G unch210G))))
(assert (= (str.++ preH (str.++ stem10 sufH)) (str.++ unch110H (str.++ ch10H unch210H))))
(assert (= (str.++ preI (str.++ stem10 sufI)) (str.++ unch110I (str.++ ch10I unch210I))))
(assert (= (str.++ preJ (str.++ stem10 sufJ)) (str.++ unch110J (str.++ ch10J unch210J))))
(assert (= "holub" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= "holubam" (str.++ unch110B (str.++ var10B unch210B))))
(assert (= "holuboOi" (str.++ unch110C (str.++ var10C unch210C))))
(assert (= "holuXi" (str.++ unch110D (str.++ var10D unch210D))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (= (ite (= ch10B var10B) 0 1) sc10B))
(assert (= (ite (= ch10C var10C) 0 1) sc10C))
(assert (= (ite (= ch10D var10D) 0 1) sc10D))
(assert (= (ite (= ch10E var10E) 0 1) sc10E))
(assert (= (ite (= ch10F var10F) 0 1) sc10F))
(assert (= (ite (= ch10G var10G) 0 1) sc10G))
(assert (= (ite (= ch10H var10H) 0 1) sc10H))
(assert (= (ite (= ch10I var10I) 0 1) sc10I))
(assert (= (ite (= ch10J var10J) 0 1) sc10J))
(assert (<= sc10A 1))
(assert (<= sc10B 1))
(assert (<= sc10C 1))
(assert (<= sc10D 1))
(assert (<= sc10E 1))
(assert (<= sc10F 1))
(assert (<= sc10G 1))
(assert (<= sc10H 1))
(assert (<= sc10I 1))
(assert (<= sc10J 1))
(assert (<= (str.len var11A) 1))
(assert (<= (str.len var11B) 1))
(assert (<= (str.len var11C) 1))
(assert (<= (str.len var11D) 1))
(assert (<= (str.len var11E) 1))
(assert (<= (str.len var11F) 1))
(assert (<= (str.len var11G) 1))
(assert (<= (str.len var11H) 1))
(assert (<= (str.len var11I) 1))
(assert (<= (str.len var11J) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= (str.++ preB (str.++ stem11 sufB)) (str.++ unch111B (str.++ ch11B unch211B))))
(assert (= (str.++ preC (str.++ stem11 sufC)) (str.++ unch111C (str.++ ch11C unch211C))))
(assert (= (str.++ preD (str.++ stem11 sufD)) (str.++ unch111D (str.++ ch11D unch211D))))
(assert (= (str.++ preE (str.++ stem11 sufE)) (str.++ unch111E (str.++ ch11E unch211E))))
(assert (= (str.++ preF (str.++ stem11 sufF)) (str.++ unch111F (str.++ ch11F unch211F))))
(assert (= (str.++ preG (str.++ stem11 sufG)) (str.++ unch111G (str.++ ch11G unch211G))))
(assert (= (str.++ preH (str.++ stem11 sufH)) (str.++ unch111H (str.++ ch11H unch211H))))
(assert (= (str.++ preI (str.++ stem11 sufI)) (str.++ unch111I (str.++ ch11I unch211I))))
(assert (= (str.++ preJ (str.++ stem11 sufJ)) (str.++ unch111J (str.++ ch11J unch211J))))
(assert (= "6in" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= "6inam" (str.++ unch111B (str.++ var11B unch211B))))
(assert (= "6inoOi" (str.++ unch111C (str.++ var11C unch211C))))
(assert (= "6i8i" (str.++ unch111D (str.++ var11D unch211D))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (= (ite (= ch11B var11B) 0 1) sc11B))
(assert (= (ite (= ch11C var11C) 0 1) sc11C))
(assert (= (ite (= ch11D var11D) 0 1) sc11D))
(assert (= (ite (= ch11E var11E) 0 1) sc11E))
(assert (= (ite (= ch11F var11F) 0 1) sc11F))
(assert (= (ite (= ch11G var11G) 0 1) sc11G))
(assert (= (ite (= ch11H var11H) 0 1) sc11H))
(assert (= (ite (= ch11I var11I) 0 1) sc11I))
(assert (= (ite (= ch11J var11J) 0 1) sc11J))
(assert (<= sc11A 1))
(assert (<= sc11B 1))
(assert (<= sc11C 1))
(assert (<= sc11D 1))
(assert (<= sc11E 1))
(assert (<= sc11F 1))
(assert (<= sc11G 1))
(assert (<= sc11H 1))
(assert (<= sc11I 1))
(assert (<= sc11J 1))
(assert (<= (str.len var12A) 1))
(assert (<= (str.len var12B) 1))
(assert (<= (str.len var12C) 1))
(assert (<= (str.len var12D) 1))
(assert (<= (str.len var12E) 1))
(assert (<= (str.len var12F) 1))
(assert (<= (str.len var12G) 1))
(assert (<= (str.len var12H) 1))
(assert (<= (str.len var12I) 1))
(assert (<= (str.len var12J) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= (str.++ preB (str.++ stem12 sufB)) (str.++ unch112B (str.++ ch12B unch212B))))
(assert (= (str.++ preC (str.++ stem12 sufC)) (str.++ unch112C (str.++ ch12C unch212C))))
(assert (= (str.++ preD (str.++ stem12 sufD)) (str.++ unch112D (str.++ ch12D unch212D))))
(assert (= (str.++ preE (str.++ stem12 sufE)) (str.++ unch112E (str.++ ch12E unch212E))))
(assert (= (str.++ preF (str.++ stem12 sufF)) (str.++ unch112F (str.++ ch12F unch212F))))
(assert (= (str.++ preG (str.++ stem12 sufG)) (str.++ unch112G (str.++ ch12G unch212G))))
(assert (= (str.++ preH (str.++ stem12 sufH)) (str.++ unch112H (str.++ ch12H unch212H))))
(assert (= (str.++ preI (str.++ stem12 sufI)) (str.++ unch112I (str.++ ch12I unch212I))))
(assert (= (str.++ preJ (str.++ stem12 sufJ)) (str.++ unch112J (str.++ ch12J unch212J))))
(assert (= "leXi4" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= "lebe4am" (str.++ unch112B (str.++ var12B unch212B))))
(assert (= "lebedeOi" (str.++ unch112C (str.++ var12C unch212C))))
(assert (= "lebe4i" (str.++ unch112D (str.++ var12D unch212D))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (= (ite (= ch12B var12B) 0 1) sc12B))
(assert (= (ite (= ch12C var12C) 0 1) sc12C))
(assert (= (ite (= ch12D var12D) 0 1) sc12D))
(assert (= (ite (= ch12E var12E) 0 1) sc12E))
(assert (= (ite (= ch12F var12F) 0 1) sc12F))
(assert (= (ite (= ch12G var12G) 0 1) sc12G))
(assert (= (ite (= ch12H var12H) 0 1) sc12H))
(assert (= (ite (= ch12I var12I) 0 1) sc12I))
(assert (= (ite (= ch12J var12J) 0 1) sc12J))
(assert (<= sc12A 1))
(assert (<= sc12B 1))
(assert (<= sc12C 1))
(assert (<= sc12D 1))
(assert (<= sc12E 1))
(assert (<= sc12F 1))
(assert (<= sc12G 1))
(assert (<= sc12H 1))
(assert (<= sc12I 1))
(assert (<= sc12J 1))
(assert (<= (str.len var13A) 1))
(assert (<= (str.len var13B) 1))
(assert (<= (str.len var13C) 1))
(assert (<= (str.len var13D) 1))
(assert (<= (str.len var13E) 1))
(assert (<= (str.len var13F) 1))
(assert (<= (str.len var13G) 1))
(assert (<= (str.len var13H) 1))
(assert (<= (str.len var13I) 1))
(assert (<= (str.len var13J) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= (str.++ preB (str.++ stem13 sufB)) (str.++ unch113B (str.++ ch13B unch213B))))
(assert (= (str.++ preC (str.++ stem13 sufC)) (str.++ unch113C (str.++ ch13C unch213C))))
(assert (= (str.++ preD (str.++ stem13 sufD)) (str.++ unch113D (str.++ ch13D unch213D))))
(assert (= (str.++ preE (str.++ stem13 sufE)) (str.++ unch113E (str.++ ch13E unch213E))))
(assert (= (str.++ preF (str.++ stem13 sufF)) (str.++ unch113F (str.++ ch13F unch213F))))
(assert (= (str.++ preG (str.++ stem13 sufG)) (str.++ unch113G (str.++ ch13G unch213G))))
(assert (= (str.++ preH (str.++ stem13 sufH)) (str.++ unch113H (str.++ ch13H unch213H))))
(assert (= (str.++ preI (str.++ stem13 sufI)) (str.++ unch113I (str.++ ch13I unch213I))))
(assert (= (str.++ preJ (str.++ stem13 sufJ)) (str.++ unch113J (str.++ ch13J unch213J))))
(assert (= "su6id" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= "su6idam" (str.++ unch113B (str.++ var13B unch213B))))
(assert (= "su6idoOi" (str.++ unch113C (str.++ var13C unch213C))))
(assert (= "su6idoOi" (str.++ unch113E (str.++ var13E unch213E))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (= (ite (= ch13B var13B) 0 1) sc13B))
(assert (= (ite (= ch13C var13C) 0 1) sc13C))
(assert (= (ite (= ch13D var13D) 0 1) sc13D))
(assert (= (ite (= ch13E var13E) 0 1) sc13E))
(assert (= (ite (= ch13F var13F) 0 1) sc13F))
(assert (= (ite (= ch13G var13G) 0 1) sc13G))
(assert (= (ite (= ch13H var13H) 0 1) sc13H))
(assert (= (ite (= ch13I var13I) 0 1) sc13I))
(assert (= (ite (= ch13J var13J) 0 1) sc13J))
(assert (<= sc13A 1))
(assert (<= sc13B 1))
(assert (<= sc13C 1))
(assert (<= sc13D 1))
(assert (<= sc13E 1))
(assert (<= sc13F 1))
(assert (<= sc13G 1))
(assert (<= sc13H 1))
(assert (<= sc13I 1))
(assert (<= sc13J 1))
(assert (<= (str.len var14A) 1))
(assert (<= (str.len var14B) 1))
(assert (<= (str.len var14C) 1))
(assert (<= (str.len var14D) 1))
(assert (<= (str.len var14E) 1))
(assert (<= (str.len var14F) 1))
(assert (<= (str.len var14G) 1))
(assert (<= (str.len var14H) 1))
(assert (<= (str.len var14I) 1))
(assert (<= (str.len var14J) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= (str.++ preB (str.++ stem14 sufB)) (str.++ unch114B (str.++ ch14B unch214B))))
(assert (= (str.++ preC (str.++ stem14 sufC)) (str.++ unch114C (str.++ ch14C unch214C))))
(assert (= (str.++ preD (str.++ stem14 sufD)) (str.++ unch114D (str.++ ch14D unch214D))))
(assert (= (str.++ preE (str.++ stem14 sufE)) (str.++ unch114E (str.++ ch14E unch214E))))
(assert (= (str.++ preF (str.++ stem14 sufF)) (str.++ unch114F (str.++ ch14F unch214F))))
(assert (= (str.++ preG (str.++ stem14 sufG)) (str.++ unch114G (str.++ ch14G unch214G))))
(assert (= (str.++ preH (str.++ stem14 sufH)) (str.++ unch114H (str.++ ch14H unch214H))))
(assert (= (str.++ preI (str.++ stem14 sufI)) (str.++ unch114I (str.++ ch14I unch214I))))
(assert (= (str.++ preJ (str.++ stem14 sufJ)) (str.++ unch114J (str.++ ch14J unch214J))))
(assert (= "EoloOik" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= "EoloOikam" (str.++ unch114B (str.++ var14B unch214B))))
(assert (= "EoloOikoOi" (str.++ unch114C (str.++ var14C unch214C))))
(assert (= "EoloOikoOi" (str.++ unch114E (str.++ var14E unch214E))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (= (ite (= ch14B var14B) 0 1) sc14B))
(assert (= (ite (= ch14C var14C) 0 1) sc14C))
(assert (= (ite (= ch14D var14D) 0 1) sc14D))
(assert (= (ite (= ch14E var14E) 0 1) sc14E))
(assert (= (ite (= ch14F var14F) 0 1) sc14F))
(assert (= (ite (= ch14G var14G) 0 1) sc14G))
(assert (= (ite (= ch14H var14H) 0 1) sc14H))
(assert (= (ite (= ch14I var14I) 0 1) sc14I))
(assert (= (ite (= ch14J var14J) 0 1) sc14J))
(assert (<= sc14A 1))
(assert (<= sc14B 1))
(assert (<= sc14C 1))
(assert (<= sc14D 1))
(assert (<= sc14E 1))
(assert (<= sc14F 1))
(assert (<= sc14G 1))
(assert (<= sc14H 1))
(assert (<= sc14I 1))
(assert (<= sc14J 1))
(assert (<= (str.len var15A) 1))
(assert (<= (str.len var15B) 1))
(assert (<= (str.len var15C) 1))
(assert (<= (str.len var15D) 1))
(assert (<= (str.len var15E) 1))
(assert (<= (str.len var15F) 1))
(assert (<= (str.len var15G) 1))
(assert (<= (str.len var15H) 1))
(assert (<= (str.len var15I) 1))
(assert (<= (str.len var15J) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= (str.++ preB (str.++ stem15 sufB)) (str.++ unch115B (str.++ ch15B unch215B))))
(assert (= (str.++ preC (str.++ stem15 sufC)) (str.++ unch115C (str.++ ch15C unch215C))))
(assert (= (str.++ preD (str.++ stem15 sufD)) (str.++ unch115D (str.++ ch15D unch215D))))
(assert (= (str.++ preE (str.++ stem15 sufE)) (str.++ unch115E (str.++ ch15E unch215E))))
(assert (= (str.++ preF (str.++ stem15 sufF)) (str.++ unch115F (str.++ ch15F unch215F))))
(assert (= (str.++ preG (str.++ stem15 sufG)) (str.++ unch115G (str.++ ch15G unch215G))))
(assert (= (str.++ preH (str.++ stem15 sufH)) (str.++ unch115H (str.++ ch15H unch215H))))
(assert (= (str.++ preI (str.++ stem15 sufI)) (str.++ unch115I (str.++ ch15I unch215I))))
(assert (= (str.++ preJ (str.++ stem15 sufJ)) (str.++ unch115J (str.++ ch15J unch215J))))
(assert (= "3id" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= "ledam" (str.++ unch115B (str.++ var15B unch215B))))
(assert (= "ledoOi" (str.++ unch115C (str.++ var15C unch215C))))
(assert (= "le4i" (str.++ unch115D (str.++ var15D unch215D))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (= (ite (= ch15B var15B) 0 1) sc15B))
(assert (= (ite (= ch15C var15C) 0 1) sc15C))
(assert (= (ite (= ch15D var15D) 0 1) sc15D))
(assert (= (ite (= ch15E var15E) 0 1) sc15E))
(assert (= (ite (= ch15F var15F) 0 1) sc15F))
(assert (= (ite (= ch15G var15G) 0 1) sc15G))
(assert (= (ite (= ch15H var15H) 0 1) sc15H))
(assert (= (ite (= ch15I var15I) 0 1) sc15I))
(assert (= (ite (= ch15J var15J) 0 1) sc15J))
(assert (<= sc15A 1))
(assert (<= sc15B 1))
(assert (<= sc15C 1))
(assert (<= sc15D 1))
(assert (<= sc15E 1))
(assert (<= sc15F 1))
(assert (<= sc15G 1))
(assert (<= sc15H 1))
(assert (<= sc15I 1))
(assert (<= sc15J 1))
(assert (<= (str.len var16A) 1))
(assert (<= (str.len var16B) 1))
(assert (<= (str.len var16C) 1))
(assert (<= (str.len var16D) 1))
(assert (<= (str.len var16E) 1))
(assert (<= (str.len var16F) 1))
(assert (<= (str.len var16G) 1))
(assert (<= (str.len var16H) 1))
(assert (<= (str.len var16I) 1))
(assert (<= (str.len var16J) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= (str.++ preB (str.++ stem16 sufB)) (str.++ unch116B (str.++ ch16B unch216B))))
(assert (= (str.++ preC (str.++ stem16 sufC)) (str.++ unch116C (str.++ ch16C unch216C))))
(assert (= (str.++ preD (str.++ stem16 sufD)) (str.++ unch116D (str.++ ch16D unch216D))))
(assert (= (str.++ preE (str.++ stem16 sufE)) (str.++ unch116E (str.++ ch16E unch216E))))
(assert (= (str.++ preF (str.++ stem16 sufF)) (str.++ unch116F (str.++ ch16F unch216F))))
(assert (= (str.++ preG (str.++ stem16 sufG)) (str.++ unch116G (str.++ ch16G unch216G))))
(assert (= (str.++ preH (str.++ stem16 sufH)) (str.++ unch116H (str.++ ch16H unch216H))))
(assert (= (str.++ preI (str.++ stem16 sufI)) (str.++ unch116I (str.++ ch16I unch216I))))
(assert (= (str.++ preJ (str.++ stem16 sufJ)) (str.++ unch116J (str.++ ch16J unch216J))))
(assert (= "bi3" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= "bo3am" (str.++ unch116B (str.++ var16B unch216B))))
(assert (= "boleOi" (str.++ unch116C (str.++ var16C unch216C))))
(assert (= "bo3i" (str.++ unch116D (str.++ var16D unch216D))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (= (ite (= ch16B var16B) 0 1) sc16B))
(assert (= (ite (= ch16C var16C) 0 1) sc16C))
(assert (= (ite (= ch16D var16D) 0 1) sc16D))
(assert (= (ite (= ch16E var16E) 0 1) sc16E))
(assert (= (ite (= ch16F var16F) 0 1) sc16F))
(assert (= (ite (= ch16G var16G) 0 1) sc16G))
(assert (= (ite (= ch16H var16H) 0 1) sc16H))
(assert (= (ite (= ch16I var16I) 0 1) sc16I))
(assert (= (ite (= ch16J var16J) 0 1) sc16J))
(assert (<= sc16A 1))
(assert (<= sc16B 1))
(assert (<= sc16C 1))
(assert (<= sc16D 1))
(assert (<= sc16E 1))
(assert (<= sc16F 1))
(assert (<= sc16G 1))
(assert (<= sc16H 1))
(assert (<= sc16I 1))
(assert (<= sc16J 1))
(assert (<= (str.len var17A) 1))
(assert (<= (str.len var17B) 1))
(assert (<= (str.len var17C) 1))
(assert (<= (str.len var17D) 1))
(assert (<= (str.len var17E) 1))
(assert (<= (str.len var17F) 1))
(assert (<= (str.len var17G) 1))
(assert (<= (str.len var17H) 1))
(assert (<= (str.len var17I) 1))
(assert (<= (str.len var17J) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= (str.++ preB (str.++ stem17 sufB)) (str.++ unch117B (str.++ ch17B unch217B))))
(assert (= (str.++ preC (str.++ stem17 sufC)) (str.++ unch117C (str.++ ch17C unch217C))))
(assert (= (str.++ preD (str.++ stem17 sufD)) (str.++ unch117D (str.++ ch17D unch217D))))
(assert (= (str.++ preE (str.++ stem17 sufE)) (str.++ unch117E (str.++ ch17E unch217E))))
(assert (= (str.++ preF (str.++ stem17 sufF)) (str.++ unch117F (str.++ ch17F unch217F))))
(assert (= (str.++ preG (str.++ stem17 sufG)) (str.++ unch117G (str.++ ch17G unch217G))))
(assert (= (str.++ preH (str.++ stem17 sufH)) (str.++ unch117H (str.++ ch17H unch217H))))
(assert (= (str.++ preI (str.++ stem17 sufI)) (str.++ unch117I (str.++ ch17I unch217I))))
(assert (= (str.++ preJ (str.++ stem17 sufJ)) (str.++ unch117J (str.++ ch17J unch217J))))
(assert (= "riw" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= "rovam" (str.++ unch117B (str.++ var17B unch217B))))
(assert (= "rovoOi" (str.++ unch117C (str.++ var17C unch217C))))
(assert (= "roOi" (str.++ unch117D (str.++ var17D unch217D))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (= (ite (= ch17B var17B) 0 1) sc17B))
(assert (= (ite (= ch17C var17C) 0 1) sc17C))
(assert (= (ite (= ch17D var17D) 0 1) sc17D))
(assert (= (ite (= ch17E var17E) 0 1) sc17E))
(assert (= (ite (= ch17F var17F) 0 1) sc17F))
(assert (= (ite (= ch17G var17G) 0 1) sc17G))
(assert (= (ite (= ch17H var17H) 0 1) sc17H))
(assert (= (ite (= ch17I var17I) 0 1) sc17I))
(assert (= (ite (= ch17J var17J) 0 1) sc17J))
(assert (<= sc17A 1))
(assert (<= sc17B 1))
(assert (<= sc17C 1))
(assert (<= sc17D 1))
(assert (<= sc17E 1))
(assert (<= sc17F 1))
(assert (<= sc17G 1))
(assert (<= sc17H 1))
(assert (<= sc17I 1))
(assert (<= sc17J 1))
(assert (<= (str.len var18A) 1))
(assert (<= (str.len var18B) 1))
(assert (<= (str.len var18C) 1))
(assert (<= (str.len var18D) 1))
(assert (<= (str.len var18E) 1))
(assert (<= (str.len var18F) 1))
(assert (<= (str.len var18G) 1))
(assert (<= (str.len var18H) 1))
(assert (<= (str.len var18I) 1))
(assert (<= (str.len var18J) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= (str.++ preB (str.++ stem18 sufB)) (str.++ unch118B (str.++ ch18B unch218B))))
(assert (= (str.++ preC (str.++ stem18 sufC)) (str.++ unch118C (str.++ ch18C unch218C))))
(assert (= (str.++ preD (str.++ stem18 sufD)) (str.++ unch118D (str.++ ch18D unch218D))))
(assert (= (str.++ preE (str.++ stem18 sufE)) (str.++ unch118E (str.++ ch18E unch218E))))
(assert (= (str.++ preF (str.++ stem18 sufF)) (str.++ unch118F (str.++ ch18F unch218F))))
(assert (= (str.++ preG (str.++ stem18 sufG)) (str.++ unch118G (str.++ ch18G unch218G))))
(assert (= (str.++ preH (str.++ stem18 sufH)) (str.++ unch118H (str.++ ch18H unch218H))))
(assert (= (str.++ preI (str.++ stem18 sufI)) (str.++ unch118I (str.++ ch18I unch218I))))
(assert (= (str.++ preJ (str.++ stem18 sufJ)) (str.++ unch118J (str.++ ch18J unch218J))))
(assert (= "stiw" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= "stolam" (str.++ unch118B (str.++ var18B unch218B))))
(assert (= "stoloOi" (str.++ unch118C (str.++ var18C unch218C))))
(assert (= "sto3i" (str.++ unch118D (str.++ var18D unch218D))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (= (ite (= ch18B var18B) 0 1) sc18B))
(assert (= (ite (= ch18C var18C) 0 1) sc18C))
(assert (= (ite (= ch18D var18D) 0 1) sc18D))
(assert (= (ite (= ch18E var18E) 0 1) sc18E))
(assert (= (ite (= ch18F var18F) 0 1) sc18F))
(assert (= (ite (= ch18G var18G) 0 1) sc18G))
(assert (= (ite (= ch18H var18H) 0 1) sc18H))
(assert (= (ite (= ch18I var18I) 0 1) sc18I))
(assert (= (ite (= ch18J var18J) 0 1) sc18J))
(assert (<= sc18A 1))
(assert (<= sc18B 1))
(assert (<= sc18C 1))
(assert (<= sc18D 1))
(assert (<= sc18E 1))
(assert (<= sc18F 1))
(assert (<= sc18G 1))
(assert (<= sc18H 1))
(assert (<= sc18I 1))
(assert (<= sc18J 1))
(assert (<= (str.len var19A) 1))
(assert (<= (str.len var19B) 1))
(assert (<= (str.len var19C) 1))
(assert (<= (str.len var19D) 1))
(assert (<= (str.len var19E) 1))
(assert (<= (str.len var19F) 1))
(assert (<= (str.len var19G) 1))
(assert (<= (str.len var19H) 1))
(assert (<= (str.len var19I) 1))
(assert (<= (str.len var19J) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= (str.++ preB (str.++ stem19 sufB)) (str.++ unch119B (str.++ ch19B unch219B))))
(assert (= (str.++ preC (str.++ stem19 sufC)) (str.++ unch119C (str.++ ch19C unch219C))))
(assert (= (str.++ preD (str.++ stem19 sufD)) (str.++ unch119D (str.++ ch19D unch219D))))
(assert (= (str.++ preE (str.++ stem19 sufE)) (str.++ unch119E (str.++ ch19E unch219E))))
(assert (= (str.++ preF (str.++ stem19 sufF)) (str.++ unch119F (str.++ ch19F unch219F))))
(assert (= (str.++ preG (str.++ stem19 sufG)) (str.++ unch119G (str.++ ch19G unch219G))))
(assert (= (str.++ preH (str.++ stem19 sufH)) (str.++ unch119H (str.++ ch19H unch219H))))
(assert (= (str.++ preI (str.++ stem19 sufI)) (str.++ unch119I (str.++ ch19I unch219I))))
(assert (= (str.++ preJ (str.++ stem19 sufJ)) (str.++ unch119J (str.++ ch19J unch219J))))
(assert (= "4id" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= "4idam" (str.++ unch119B (str.++ var19B unch219B))))
(assert (= "4idoOi" (str.++ unch119C (str.++ var19C unch219C))))
(assert (= "4idoOi" (str.++ unch119E (str.++ var19E unch219E))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (= (ite (= ch19B var19B) 0 1) sc19B))
(assert (= (ite (= ch19C var19C) 0 1) sc19C))
(assert (= (ite (= ch19D var19D) 0 1) sc19D))
(assert (= (ite (= ch19E var19E) 0 1) sc19E))
(assert (= (ite (= ch19F var19F) 0 1) sc19F))
(assert (= (ite (= ch19G var19G) 0 1) sc19G))
(assert (= (ite (= ch19H var19H) 0 1) sc19H))
(assert (= (ite (= ch19I var19I) 0 1) sc19I))
(assert (= (ite (= ch19J var19J) 0 1) sc19J))
(assert (<= sc19A 1))
(assert (<= sc19B 1))
(assert (<= sc19C 1))
(assert (<= sc19D 1))
(assert (<= sc19E 1))
(assert (<= sc19F 1))
(assert (<= sc19G 1))
(assert (<= sc19H 1))
(assert (<= sc19I 1))
(assert (<= sc19J 1))
(assert (<= (str.len var20A) 1))
(assert (<= (str.len var20B) 1))
(assert (<= (str.len var20C) 1))
(assert (<= (str.len var20D) 1))
(assert (<= (str.len var20E) 1))
(assert (<= (str.len var20F) 1))
(assert (<= (str.len var20G) 1))
(assert (<= (str.len var20H) 1))
(assert (<= (str.len var20I) 1))
(assert (<= (str.len var20J) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= (str.++ preB (str.++ stem20 sufB)) (str.++ unch120B (str.++ ch20B unch220B))))
(assert (= (str.++ preC (str.++ stem20 sufC)) (str.++ unch120C (str.++ ch20C unch220C))))
(assert (= (str.++ preD (str.++ stem20 sufD)) (str.++ unch120D (str.++ ch20D unch220D))))
(assert (= (str.++ preE (str.++ stem20 sufE)) (str.++ unch120E (str.++ ch20E unch220E))))
(assert (= (str.++ preF (str.++ stem20 sufF)) (str.++ unch120F (str.++ ch20F unch220F))))
(assert (= (str.++ preG (str.++ stem20 sufG)) (str.++ unch120G (str.++ ch20G unch220G))))
(assert (= (str.++ preH (str.++ stem20 sufH)) (str.++ unch120H (str.++ ch20H unch220H))))
(assert (= (str.++ preI (str.++ stem20 sufI)) (str.++ unch120I (str.++ ch20I unch220I))))
(assert (= (str.++ preJ (str.++ stem20 sufJ)) (str.++ unch120J (str.++ ch20J unch220J))))
(assert (= "3it" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= "3otam" (str.++ unch120B (str.++ var20B unch220B))))
(assert (= "3otoOi" (str.++ unch120C (str.++ var20C unch220C))))
(assert (= "3oZi" (str.++ unch120D (str.++ var20D unch220D))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (= (ite (= ch20B var20B) 0 1) sc20B))
(assert (= (ite (= ch20C var20C) 0 1) sc20C))
(assert (= (ite (= ch20D var20D) 0 1) sc20D))
(assert (= (ite (= ch20E var20E) 0 1) sc20E))
(assert (= (ite (= ch20F var20F) 0 1) sc20F))
(assert (= (ite (= ch20G var20G) 0 1) sc20G))
(assert (= (ite (= ch20H var20H) 0 1) sc20H))
(assert (= (ite (= ch20I var20I) 0 1) sc20I))
(assert (= (ite (= ch20J var20J) 0 1) sc20J))
(assert (<= sc20A 1))
(assert (<= sc20B 1))
(assert (<= sc20C 1))
(assert (<= sc20D 1))
(assert (<= sc20E 1))
(assert (<= sc20F 1))
(assert (<= sc20G 1))
(assert (<= sc20H 1))
(assert (<= sc20I 1))
(assert (<= sc20J 1))
(assert (<= (str.len var21A) 1))
(assert (<= (str.len var21B) 1))
(assert (<= (str.len var21C) 1))
(assert (<= (str.len var21D) 1))
(assert (<= (str.len var21E) 1))
(assert (<= (str.len var21F) 1))
(assert (<= (str.len var21G) 1))
(assert (<= (str.len var21H) 1))
(assert (<= (str.len var21I) 1))
(assert (<= (str.len var21J) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= (str.++ preB (str.++ stem21 sufB)) (str.++ unch121B (str.++ ch21B unch221B))))
(assert (= (str.++ preC (str.++ stem21 sufC)) (str.++ unch121C (str.++ ch21C unch221C))))
(assert (= (str.++ preD (str.++ stem21 sufD)) (str.++ unch121D (str.++ ch21D unch221D))))
(assert (= (str.++ preE (str.++ stem21 sufE)) (str.++ unch121E (str.++ ch21E unch221E))))
(assert (= (str.++ preF (str.++ stem21 sufF)) (str.++ unch121F (str.++ ch21F unch221F))))
(assert (= (str.++ preG (str.++ stem21 sufG)) (str.++ unch121G (str.++ ch21G unch221G))))
(assert (= (str.++ preH (str.++ stem21 sufH)) (str.++ unch121H (str.++ ch21H unch221H))))
(assert (= (str.++ preI (str.++ stem21 sufI)) (str.++ unch121I (str.++ ch21I unch221I))))
(assert (= (str.++ preJ (str.++ stem21 sufJ)) (str.++ unch121J (str.++ ch21J unch221J))))
(assert (= "mist" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= "mostam" (str.++ unch121B (str.++ var21B unch221B))))
(assert (= "mostoOi" (str.++ unch121C (str.++ var21C unch221C))))
(assert (= "mosZi" (str.++ unch121D (str.++ var21D unch221D))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (= (ite (= ch21B var21B) 0 1) sc21B))
(assert (= (ite (= ch21C var21C) 0 1) sc21C))
(assert (= (ite (= ch21D var21D) 0 1) sc21D))
(assert (= (ite (= ch21E var21E) 0 1) sc21E))
(assert (= (ite (= ch21F var21F) 0 1) sc21F))
(assert (= (ite (= ch21G var21G) 0 1) sc21G))
(assert (= (ite (= ch21H var21H) 0 1) sc21H))
(assert (= (ite (= ch21I var21I) 0 1) sc21I))
(assert (= (ite (= ch21J var21J) 0 1) sc21J))
(assert (<= sc21A 1))
(assert (<= sc21B 1))
(assert (<= sc21C 1))
(assert (<= sc21D 1))
(assert (<= sc21E 1))
(assert (<= sc21F 1))
(assert (<= sc21G 1))
(assert (<= sc21H 1))
(assert (<= sc21I 1))
(assert (<= sc21J 1))
(assert (<= (str.len var22A) 1))
(assert (<= (str.len var22B) 1))
(assert (<= (str.len var22C) 1))
(assert (<= (str.len var22D) 1))
(assert (<= (str.len var22E) 1))
(assert (<= (str.len var22F) 1))
(assert (<= (str.len var22G) 1))
(assert (<= (str.len var22H) 1))
(assert (<= (str.len var22I) 1))
(assert (<= (str.len var22J) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= (str.++ preB (str.++ stem22 sufB)) (str.++ unch122B (str.++ ch22B unch222B))))
(assert (= (str.++ preC (str.++ stem22 sufC)) (str.++ unch122C (str.++ ch22C unch222C))))
(assert (= (str.++ preD (str.++ stem22 sufD)) (str.++ unch122D (str.++ ch22D unch222D))))
(assert (= (str.++ preE (str.++ stem22 sufE)) (str.++ unch122E (str.++ ch22E unch222E))))
(assert (= (str.++ preF (str.++ stem22 sufF)) (str.++ unch122F (str.++ ch22F unch222F))))
(assert (= (str.++ preG (str.++ stem22 sufG)) (str.++ unch122G (str.++ ch22G unch222G))))
(assert (= (str.++ preH (str.++ stem22 sufH)) (str.++ unch122H (str.++ ch22H unch222H))))
(assert (= (str.++ preI (str.++ stem22 sufI)) (str.++ unch122I (str.++ ch22I unch222I))))
(assert (= (str.++ preJ (str.++ stem22 sufJ)) (str.++ unch122J (str.++ ch22J unch222J))))
(assert (= "veEir" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= "veEoram" (str.++ unch122B (str.++ var22B unch222B))))
(assert (= "veEoroOi" (str.++ unch122C (str.++ var22C unch222C))))
(assert (= "veEo9i" (str.++ unch122D (str.++ var22D unch222D))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (= (ite (= ch22B var22B) 0 1) sc22B))
(assert (= (ite (= ch22C var22C) 0 1) sc22C))
(assert (= (ite (= ch22D var22D) 0 1) sc22D))
(assert (= (ite (= ch22E var22E) 0 1) sc22E))
(assert (= (ite (= ch22F var22F) 0 1) sc22F))
(assert (= (ite (= ch22G var22G) 0 1) sc22G))
(assert (= (ite (= ch22H var22H) 0 1) sc22H))
(assert (= (ite (= ch22I var22I) 0 1) sc22I))
(assert (= (ite (= ch22J var22J) 0 1) sc22J))
(assert (<= sc22A 1))
(assert (<= sc22B 1))
(assert (<= sc22C 1))
(assert (<= sc22D 1))
(assert (<= sc22E 1))
(assert (<= sc22F 1))
(assert (<= sc22G 1))
(assert (<= sc22H 1))
(assert (<= sc22I 1))
(assert (<= sc22J 1))
(assert (<= (str.len var23A) 1))
(assert (<= (str.len var23B) 1))
(assert (<= (str.len var23C) 1))
(assert (<= (str.len var23D) 1))
(assert (<= (str.len var23E) 1))
(assert (<= (str.len var23F) 1))
(assert (<= (str.len var23G) 1))
(assert (<= (str.len var23H) 1))
(assert (<= (str.len var23I) 1))
(assert (<= (str.len var23J) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= (str.++ preB (str.++ stem23 sufB)) (str.++ unch123B (str.++ ch23B unch223B))))
(assert (= (str.++ preC (str.++ stem23 sufC)) (str.++ unch123C (str.++ ch23C unch223C))))
(assert (= (str.++ preD (str.++ stem23 sufD)) (str.++ unch123D (str.++ ch23D unch223D))))
(assert (= (str.++ preE (str.++ stem23 sufE)) (str.++ unch123E (str.++ ch23E unch223E))))
(assert (= (str.++ preF (str.++ stem23 sufF)) (str.++ unch123F (str.++ ch23F unch223F))))
(assert (= (str.++ preG (str.++ stem23 sufG)) (str.++ unch123G (str.++ ch23G unch223G))))
(assert (= (str.++ preH (str.++ stem23 sufH)) (str.++ unch123H (str.++ ch23H unch223H))))
(assert (= (str.++ preI (str.++ stem23 sufI)) (str.++ unch123I (str.++ ch23I unch223I))))
(assert (= (str.++ preJ (str.++ stem23 sufJ)) (str.++ unch123J (str.++ ch23J unch223J))))
(assert (= "Zilo" (str.++ unch123F (str.++ var23F unch223F))))
(assert (= "Zila" (str.++ unch123G (str.++ var23G unch223G))))
(assert (= "Zilu" (str.++ unch123H (str.++ var23H unch223H))))
(assert (= "Zi3i" (str.++ unch123I (str.++ var23I unch223I))))
(assert (= "Ziw" (str.++ unch123J (str.++ var23J unch223J))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (= (ite (= ch23B var23B) 0 1) sc23B))
(assert (= (ite (= ch23C var23C) 0 1) sc23C))
(assert (= (ite (= ch23D var23D) 0 1) sc23D))
(assert (= (ite (= ch23E var23E) 0 1) sc23E))
(assert (= (ite (= ch23F var23F) 0 1) sc23F))
(assert (= (ite (= ch23G var23G) 0 1) sc23G))
(assert (= (ite (= ch23H var23H) 0 1) sc23H))
(assert (= (ite (= ch23I var23I) 0 1) sc23I))
(assert (= (ite (= ch23J var23J) 0 1) sc23J))
(assert (<= sc23A 1))
(assert (<= sc23B 1))
(assert (<= sc23C 1))
(assert (<= sc23D 1))
(assert (<= sc23E 1))
(assert (<= sc23F 1))
(assert (<= sc23G 1))
(assert (<= sc23H 1))
(assert (<= sc23I 1))
(assert (<= sc23J 1))
(assert (<= (str.len var24A) 1))
(assert (<= (str.len var24B) 1))
(assert (<= (str.len var24C) 1))
(assert (<= (str.len var24D) 1))
(assert (<= (str.len var24E) 1))
(assert (<= (str.len var24F) 1))
(assert (<= (str.len var24G) 1))
(assert (<= (str.len var24H) 1))
(assert (<= (str.len var24I) 1))
(assert (<= (str.len var24J) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= (str.++ preB (str.++ stem24 sufB)) (str.++ unch124B (str.++ ch24B unch224B))))
(assert (= (str.++ preC (str.++ stem24 sufC)) (str.++ unch124C (str.++ ch24C unch224C))))
(assert (= (str.++ preD (str.++ stem24 sufD)) (str.++ unch124D (str.++ ch24D unch224D))))
(assert (= (str.++ preE (str.++ stem24 sufE)) (str.++ unch124E (str.++ ch24E unch224E))))
(assert (= (str.++ preF (str.++ stem24 sufF)) (str.++ unch124F (str.++ ch24F unch224F))))
(assert (= (str.++ preG (str.++ stem24 sufG)) (str.++ unch124G (str.++ ch24G unch224G))))
(assert (= (str.++ preH (str.++ stem24 sufH)) (str.++ unch124H (str.++ ch24H unch224H))))
(assert (= (str.++ preI (str.++ stem24 sufI)) (str.++ unch124I (str.++ ch24I unch224I))))
(assert (= (str.++ preJ (str.++ stem24 sufJ)) (str.++ unch124J (str.++ ch24J unch224J))))
(assert (= "koleso" (str.++ unch124F (str.++ var24F unch224F))))
(assert (= "kolesa" (str.++ unch124G (str.++ var24G unch224G))))
(assert (= "kolesu" (str.++ unch124H (str.++ var24H unch224H))))
(assert (= "kole6i" (str.++ unch124I (str.++ var24I unch224I))))
(assert (= "ko3is" (str.++ unch124J (str.++ var24J unch224J))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (= (ite (= ch24B var24B) 0 1) sc24B))
(assert (= (ite (= ch24C var24C) 0 1) sc24C))
(assert (= (ite (= ch24D var24D) 0 1) sc24D))
(assert (= (ite (= ch24E var24E) 0 1) sc24E))
(assert (= (ite (= ch24F var24F) 0 1) sc24F))
(assert (= (ite (= ch24G var24G) 0 1) sc24G))
(assert (= (ite (= ch24H var24H) 0 1) sc24H))
(assert (= (ite (= ch24I var24I) 0 1) sc24I))
(assert (= (ite (= ch24J var24J) 0 1) sc24J))
(assert (<= sc24A 1))
(assert (<= sc24B 1))
(assert (<= sc24C 1))
(assert (<= sc24D 1))
(assert (<= sc24E 1))
(assert (<= sc24F 1))
(assert (<= sc24G 1))
(assert (<= sc24H 1))
(assert (<= sc24I 1))
(assert (<= sc24J 1))
(assert (<= (str.len var25A) 1))
(assert (<= (str.len var25B) 1))
(assert (<= (str.len var25C) 1))
(assert (<= (str.len var25D) 1))
(assert (<= (str.len var25E) 1))
(assert (<= (str.len var25F) 1))
(assert (<= (str.len var25G) 1))
(assert (<= (str.len var25H) 1))
(assert (<= (str.len var25I) 1))
(assert (<= (str.len var25J) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= (str.++ preB (str.++ stem25 sufB)) (str.++ unch125B (str.++ ch25B unch225B))))
(assert (= (str.++ preC (str.++ stem25 sufC)) (str.++ unch125C (str.++ ch25C unch225C))))
(assert (= (str.++ preD (str.++ stem25 sufD)) (str.++ unch125D (str.++ ch25D unch225D))))
(assert (= (str.++ preE (str.++ stem25 sufE)) (str.++ unch125E (str.++ ch25E unch225E))))
(assert (= (str.++ preF (str.++ stem25 sufF)) (str.++ unch125F (str.++ ch25F unch225F))))
(assert (= (str.++ preG (str.++ stem25 sufG)) (str.++ unch125G (str.++ ch25G unch225G))))
(assert (= (str.++ preH (str.++ stem25 sufH)) (str.++ unch125H (str.++ ch25H unch225H))))
(assert (= (str.++ preI (str.++ stem25 sufI)) (str.++ unch125I (str.++ ch25I unch225I))))
(assert (= (str.++ preJ (str.++ stem25 sufJ)) (str.++ unch125J (str.++ ch25J unch225J))))
(assert (= "ozero" (str.++ unch125F (str.++ var25F unch225F))))
(assert (= "ozera" (str.++ unch125G (str.++ var25G unch225G))))
(assert (= "ozeru" (str.++ unch125H (str.++ var25H unch225H))))
(assert (= "oze9i" (str.++ unch125I (str.++ var25I unch225I))))
(assert (= "o1ir" (str.++ unch125J (str.++ var25J unch225J))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (= (ite (= ch25B var25B) 0 1) sc25B))
(assert (= (ite (= ch25C var25C) 0 1) sc25C))
(assert (= (ite (= ch25D var25D) 0 1) sc25D))
(assert (= (ite (= ch25E var25E) 0 1) sc25E))
(assert (= (ite (= ch25F var25F) 0 1) sc25F))
(assert (= (ite (= ch25G var25G) 0 1) sc25G))
(assert (= (ite (= ch25H var25H) 0 1) sc25H))
(assert (= (ite (= ch25I var25I) 0 1) sc25I))
(assert (= (ite (= ch25J var25J) 0 1) sc25J))
(assert (<= sc25A 1))
(assert (<= sc25B 1))
(assert (<= sc25C 1))
(assert (<= sc25D 1))
(assert (<= sc25E 1))
(assert (<= sc25F 1))
(assert (<= sc25G 1))
(assert (<= sc25H 1))
(assert (<= sc25I 1))
(assert (<= sc25J 1))
(assert (<= (str.len var26A) 1))
(assert (<= (str.len var26B) 1))
(assert (<= (str.len var26C) 1))
(assert (<= (str.len var26D) 1))
(assert (<= (str.len var26E) 1))
(assert (<= (str.len var26F) 1))
(assert (<= (str.len var26G) 1))
(assert (<= (str.len var26H) 1))
(assert (<= (str.len var26I) 1))
(assert (<= (str.len var26J) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= (str.++ preB (str.++ stem26 sufB)) (str.++ unch126B (str.++ ch26B unch226B))))
(assert (= (str.++ preC (str.++ stem26 sufC)) (str.++ unch126C (str.++ ch26C unch226C))))
(assert (= (str.++ preD (str.++ stem26 sufD)) (str.++ unch126D (str.++ ch26D unch226D))))
(assert (= (str.++ preE (str.++ stem26 sufE)) (str.++ unch126E (str.++ ch26E unch226E))))
(assert (= (str.++ preF (str.++ stem26 sufF)) (str.++ unch126F (str.++ ch26F unch226F))))
(assert (= (str.++ preG (str.++ stem26 sufG)) (str.++ unch126G (str.++ ch26G unch226G))))
(assert (= (str.++ preH (str.++ stem26 sufH)) (str.++ unch126H (str.++ ch26H unch226H))))
(assert (= (str.++ preI (str.++ stem26 sufI)) (str.++ unch126I (str.++ ch26I unch226I))))
(assert (= (str.++ preJ (str.++ stem26 sufJ)) (str.++ unch126J (str.++ ch26J unch226J))))
(assert (= "selo" (str.++ unch126F (str.++ var26F unch226F))))
(assert (= "sela" (str.++ unch126G (str.++ var26G unch226G))))
(assert (= "selu" (str.++ unch126H (str.++ var26H unch226H))))
(assert (= "se3i" (str.++ unch126I (str.++ var26I unch226I))))
(assert (= "6iw" (str.++ unch126J (str.++ var26J unch226J))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (= (ite (= ch26B var26B) 0 1) sc26B))
(assert (= (ite (= ch26C var26C) 0 1) sc26C))
(assert (= (ite (= ch26D var26D) 0 1) sc26D))
(assert (= (ite (= ch26E var26E) 0 1) sc26E))
(assert (= (ite (= ch26F var26F) 0 1) sc26F))
(assert (= (ite (= ch26G var26G) 0 1) sc26G))
(assert (= (ite (= ch26H var26H) 0 1) sc26H))
(assert (= (ite (= ch26I var26I) 0 1) sc26I))
(assert (= (ite (= ch26J var26J) 0 1) sc26J))
(assert (<= sc26A 1))
(assert (<= sc26B 1))
(assert (<= sc26C 1))
(assert (<= sc26D 1))
(assert (<= sc26E 1))
(assert (<= sc26F 1))
(assert (<= sc26G 1))
(assert (<= sc26H 1))
(assert (<= sc26I 1))
(assert (<= sc26J 1))
(assert (<= (str.len var27A) 1))
(assert (<= (str.len var27B) 1))
(assert (<= (str.len var27C) 1))
(assert (<= (str.len var27D) 1))
(assert (<= (str.len var27E) 1))
(assert (<= (str.len var27F) 1))
(assert (<= (str.len var27G) 1))
(assert (<= (str.len var27H) 1))
(assert (<= (str.len var27I) 1))
(assert (<= (str.len var27J) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= (str.++ preB (str.++ stem27 sufB)) (str.++ unch127B (str.++ ch27B unch227B))))
(assert (= (str.++ preC (str.++ stem27 sufC)) (str.++ unch127C (str.++ ch27C unch227C))))
(assert (= (str.++ preD (str.++ stem27 sufD)) (str.++ unch127D (str.++ ch27D unch227D))))
(assert (= (str.++ preE (str.++ stem27 sufE)) (str.++ unch127E (str.++ ch27E unch227E))))
(assert (= (str.++ preF (str.++ stem27 sufF)) (str.++ unch127F (str.++ ch27F unch227F))))
(assert (= (str.++ preG (str.++ stem27 sufG)) (str.++ unch127G (str.++ ch27G unch227G))))
(assert (= (str.++ preH (str.++ stem27 sufH)) (str.++ unch127H (str.++ ch27H unch227H))))
(assert (= (str.++ preI (str.++ stem27 sufI)) (str.++ unch127I (str.++ ch27I unch227I))))
(assert (= (str.++ preJ (str.++ stem27 sufJ)) (str.++ unch127J (str.++ ch27J unch227J))))
(assert (= "pole" (str.++ unch127F (str.++ var27F unch227F))))
(assert (= "po3a" (str.++ unch127G (str.++ var27G unch227G))))
(assert (= "po3u" (str.++ unch127H (str.++ var27H unch227H))))
(assert (= "po3i" (str.++ unch127I (str.++ var27I unch227I))))
(assert (= "pi3" (str.++ unch127J (str.++ var27J unch227J))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (= (ite (= ch27B var27B) 0 1) sc27B))
(assert (= (ite (= ch27C var27C) 0 1) sc27C))
(assert (= (ite (= ch27D var27D) 0 1) sc27D))
(assert (= (ite (= ch27E var27E) 0 1) sc27E))
(assert (= (ite (= ch27F var27F) 0 1) sc27F))
(assert (= (ite (= ch27G var27G) 0 1) sc27G))
(assert (= (ite (= ch27H var27H) 0 1) sc27H))
(assert (= (ite (= ch27I var27I) 0 1) sc27I))
(assert (= (ite (= ch27J var27J) 0 1) sc27J))
(assert (<= sc27A 1))
(assert (<= sc27B 1))
(assert (<= sc27C 1))
(assert (<= sc27D 1))
(assert (<= sc27E 1))
(assert (<= sc27F 1))
(assert (<= sc27G 1))
(assert (<= sc27H 1))
(assert (<= sc27I 1))
(assert (<= sc27J 1))
(assert (<= (str.len var28A) 1))
(assert (<= (str.len var28B) 1))
(assert (<= (str.len var28C) 1))
(assert (<= (str.len var28D) 1))
(assert (<= (str.len var28E) 1))
(assert (<= (str.len var28F) 1))
(assert (<= (str.len var28G) 1))
(assert (<= (str.len var28H) 1))
(assert (<= (str.len var28I) 1))
(assert (<= (str.len var28J) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= (str.++ preB (str.++ stem28 sufB)) (str.++ unch128B (str.++ ch28B unch228B))))
(assert (= (str.++ preC (str.++ stem28 sufC)) (str.++ unch128C (str.++ ch28C unch228C))))
(assert (= (str.++ preD (str.++ stem28 sufD)) (str.++ unch128D (str.++ ch28D unch228D))))
(assert (= (str.++ preE (str.++ stem28 sufE)) (str.++ unch128E (str.++ ch28E unch228E))))
(assert (= (str.++ preF (str.++ stem28 sufF)) (str.++ unch128F (str.++ ch28F unch228F))))
(assert (= (str.++ preG (str.++ stem28 sufG)) (str.++ unch128G (str.++ ch28G unch228G))))
(assert (= (str.++ preH (str.++ stem28 sufH)) (str.++ unch128H (str.++ ch28H unch228H))))
(assert (= (str.++ preI (str.++ stem28 sufI)) (str.++ unch128I (str.++ ch28I unch228I))))
(assert (= (str.++ preJ (str.++ stem28 sufJ)) (str.++ unch128J (str.++ ch28J unch228J))))
(assert (= "slovo" (str.++ unch128F (str.++ var28F unch228F))))
(assert (= "slova" (str.++ unch128G (str.++ var28G unch228G))))
(assert (= "slovu" (str.++ unch128H (str.++ var28H unch228H))))
(assert (= "sloOi" (str.++ unch128I (str.++ var28I unch228I))))
(assert (= "sliw" (str.++ unch128J (str.++ var28J unch228J))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (= (ite (= ch28B var28B) 0 1) sc28B))
(assert (= (ite (= ch28C var28C) 0 1) sc28C))
(assert (= (ite (= ch28D var28D) 0 1) sc28D))
(assert (= (ite (= ch28E var28E) 0 1) sc28E))
(assert (= (ite (= ch28F var28F) 0 1) sc28F))
(assert (= (ite (= ch28G var28G) 0 1) sc28G))
(assert (= (ite (= ch28H var28H) 0 1) sc28H))
(assert (= (ite (= ch28I var28I) 0 1) sc28I))
(assert (= (ite (= ch28J var28J) 0 1) sc28J))
(assert (<= sc28A 1))
(assert (<= sc28B 1))
(assert (<= sc28C 1))
(assert (<= sc28D 1))
(assert (<= sc28E 1))
(assert (<= sc28F 1))
(assert (<= sc28G 1))
(assert (<= sc28H 1))
(assert (<= sc28I 1))
(assert (<= sc28J 1))
(assert (<= (str.len var29A) 1))
(assert (<= (str.len var29B) 1))
(assert (<= (str.len var29C) 1))
(assert (<= (str.len var29D) 1))
(assert (<= (str.len var29E) 1))
(assert (<= (str.len var29F) 1))
(assert (<= (str.len var29G) 1))
(assert (<= (str.len var29H) 1))
(assert (<= (str.len var29I) 1))
(assert (<= (str.len var29J) 1))
(assert (= (str.++ preA (str.++ stem29 sufA)) (str.++ unch129A (str.++ ch29A unch229A))))
(assert (= (str.++ preB (str.++ stem29 sufB)) (str.++ unch129B (str.++ ch29B unch229B))))
(assert (= (str.++ preC (str.++ stem29 sufC)) (str.++ unch129C (str.++ ch29C unch229C))))
(assert (= (str.++ preD (str.++ stem29 sufD)) (str.++ unch129D (str.++ ch29D unch229D))))
(assert (= (str.++ preE (str.++ stem29 sufE)) (str.++ unch129E (str.++ ch29E unch229E))))
(assert (= (str.++ preF (str.++ stem29 sufF)) (str.++ unch129F (str.++ ch29F unch229F))))
(assert (= (str.++ preG (str.++ stem29 sufG)) (str.++ unch129G (str.++ ch29G unch229G))))
(assert (= (str.++ preH (str.++ stem29 sufH)) (str.++ unch129H (str.++ ch29H unch229H))))
(assert (= (str.++ preI (str.++ stem29 sufI)) (str.++ unch129I (str.++ ch29I unch229I))))
(assert (= (str.++ preJ (str.++ stem29 sufJ)) (str.++ unch129J (str.++ ch29J unch229J))))
(assert (= "more" (str.++ unch129F (str.++ var29F unch229F))))
(assert (= "mo9a" (str.++ unch129G (str.++ var29G unch229G))))
(assert (= "mo9u" (str.++ unch129H (str.++ var29H unch229H))))
(assert (= "mo9i" (str.++ unch129I (str.++ var29I unch229I))))
(assert (= "mi9" (str.++ unch129J (str.++ var29J unch229J))))
(assert (= (str.len stem29) l29))
(assert (= (ite (= ch29A var29A) 0 1) sc29A))
(assert (= (ite (= ch29B var29B) 0 1) sc29B))
(assert (= (ite (= ch29C var29C) 0 1) sc29C))
(assert (= (ite (= ch29D var29D) 0 1) sc29D))
(assert (= (ite (= ch29E var29E) 0 1) sc29E))
(assert (= (ite (= ch29F var29F) 0 1) sc29F))
(assert (= (ite (= ch29G var29G) 0 1) sc29G))
(assert (= (ite (= ch29H var29H) 0 1) sc29H))
(assert (= (ite (= ch29I var29I) 0 1) sc29I))
(assert (= (ite (= ch29J var29J) 0 1) sc29J))
(assert (<= sc29A 1))
(assert (<= sc29B 1))
(assert (<= sc29C 1))
(assert (<= sc29D 1))
(assert (<= sc29E 1))
(assert (<= sc29F 1))
(assert (<= sc29G 1))
(assert (<= sc29H 1))
(assert (<= sc29I 1))
(assert (<= sc29J 1))
(assert (= (+ 0
      0
      sc0A
      sc0B
      sc0C
      sc0D
      sc0E
      sc0F
      sc0G
      sc0H
      sc0I
      sc0J
      0
      sc1A
      sc1B
      sc1C
      sc1D
      sc1E
      sc1F
      sc1G
      sc1H
      sc1I
      sc1J
      0
      sc2A
      sc2B
      sc2C
      sc2D
      sc2E
      sc2F
      sc2G
      sc2H
      sc2I
      sc2J
      0
      sc3A
      sc3B
      sc3C
      sc3D
      sc3E
      sc3F
      sc3G
      sc3H
      sc3I
      sc3J
      0
      sc4A
      sc4B
      sc4C
      sc4D
      sc4E
      sc4F
      sc4G
      sc4H
      sc4I
      sc4J
      0
      sc5A
      sc5B
      sc5C
      sc5D
      sc5E
      sc5F
      sc5G
      sc5H
      sc5I
      sc5J
      0
      sc6A
      sc6B
      sc6C
      sc6D
      sc6E
      sc6F
      sc6G
      sc6H
      sc6I
      sc6J
      0
      sc7A
      sc7B
      sc7C
      sc7D
      sc7E
      sc7F
      sc7G
      sc7H
      sc7I
      sc7J
      0
      sc8A
      sc8B
      sc8C
      sc8D
      sc8E
      sc8F
      sc8G
      sc8H
      sc8I
      sc8J
      0
      sc9A
      sc9B
      sc9C
      sc9D
      sc9E
      sc9F
      sc9G
      sc9H
      sc9I
      sc9J
      0
      sc10A
      sc10B
      sc10C
      sc10D
      sc10E
      sc10F
      sc10G
      sc10H
      sc10I
      sc10J
      0
      sc11A
      sc11B
      sc11C
      sc11D
      sc11E
      sc11F
      sc11G
      sc11H
      sc11I
      sc11J
      0
      sc12A
      sc12B
      sc12C
      sc12D
      sc12E
      sc12F
      sc12G
      sc12H
      sc12I
      sc12J
      0
      sc13A
      sc13B
      sc13C
      sc13D
      sc13E
      sc13F
      sc13G
      sc13H
      sc13I
      sc13J
      0
      sc14A
      sc14B
      sc14C
      sc14D
      sc14E
      sc14F
      sc14G
      sc14H
      sc14I
      sc14J
      0
      sc15A
      sc15B
      sc15C
      sc15D
      sc15E
      sc15F
      sc15G
      sc15H
      sc15I
      sc15J
      0
      sc16A
      sc16B
      sc16C
      sc16D
      sc16E
      sc16F
      sc16G
      sc16H
      sc16I
      sc16J
      0
      sc17A
      sc17B
      sc17C
      sc17D
      sc17E
      sc17F
      sc17G
      sc17H
      sc17I
      sc17J
      0
      sc18A
      sc18B
      sc18C
      sc18D
      sc18E
      sc18F
      sc18G
      sc18H
      sc18I
      sc18J
      0
      sc19A
      sc19B
      sc19C
      sc19D
      sc19E
      sc19F
      sc19G
      sc19H
      sc19I
      sc19J
      0
      sc20A
      sc20B
      sc20C
      sc20D
      sc20E
      sc20F
      sc20G
      sc20H
      sc20I
      sc20J
      0
      sc21A
      sc21B
      sc21C
      sc21D
      sc21E
      sc21F
      sc21G
      sc21H
      sc21I
      sc21J
      0
      sc22A
      sc22B
      sc22C
      sc22D
      sc22E
      sc22F
      sc22G
      sc22H
      sc22I
      sc22J
      0
      sc23A
      sc23B
      sc23C
      sc23D
      sc23E
      sc23F
      sc23G
      sc23H
      sc23I
      sc23J
      0
      sc24A
      sc24B
      sc24C
      sc24D
      sc24E
      sc24F
      sc24G
      sc24H
      sc24I
      sc24J
      0
      sc25A
      sc25B
      sc25C
      sc25D
      sc25E
      sc25F
      sc25G
      sc25H
      sc25I
      sc25J
      0
      sc26A
      sc26B
      sc26C
      sc26D
      sc26E
      sc26F
      sc26G
      sc26H
      sc26I
      sc26J
      0
      sc27A
      sc27B
      sc27C
      sc27D
      sc27E
      sc27F
      sc27G
      sc27H
      sc27I
      sc27J
      0
      sc28A
      sc28B
      sc28C
      sc28D
      sc28E
      sc28F
      sc28G
      sc28H
      sc28I
      sc28J
      0
      sc29A
      sc29B
      sc29C
      sc29D
      sc29E
      sc29F
      sc29G
      sc29H
      sc29I
      sc29J)
   19))
