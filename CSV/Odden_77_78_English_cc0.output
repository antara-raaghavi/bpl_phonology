[['kæps'], ['kæts'], ['kaks'], ['pruwfs'], ['kæbz'], ['kædz'], ['kaɡz'], ['hʊvz'], ['flijz'], ['plæwz'], ['pjṛez'], ['klæmz'], ['kænz'], ['karz'], ['ɡəlz'], ['slæps'], ['hɪts'], ['powks'], ['stæbz'], ['hajdz'], ['dɪɡz'], ['læfs'], ['pɪθs'], ['slæmz'], ['kænz'], ['hæŋz'], ['θrajvz'], ['bejðz'], ['flajz']]
kæps  >  ['k', 'Q', 'p', 's'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
kæts  >  ['k', 'Q', 't', 's'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
kaks  >  ['k', 'a', 'k', 's'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
pruwfs  >  ['p', 'r', 'u', 'w', 'f', 's'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
kæbz  >  ['k', 'Q', 'b', 'z'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
kædz  >  ['k', 'Q', 'd', 'z'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
kaɡz  >  ['k', 'a', 'g', 'z'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
hʊvz  >  ['h', 'N', 'v', 'z'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
flijz  >  ['f', 'l', 'i', 'j', 'z'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
plæwz  >  ['p', 'l', 'Q', 'w', 'z'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
pjṛez  >  ['p', 'j', 'O', 'e', 'z'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ṛ': 'O'}
klæmz  >  ['k', 'l', 'Q', 'm', 'z'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ṛ': 'O'}
kænz  >  ['k', 'Q', 'n', 'z'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ṛ': 'O'}
karz  >  ['k', 'a', 'r', 'z'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ṛ': 'O'}
ɡəlz  >  ['g', 'H', 'l', 'z'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ṛ': 'O'}
slæps  >  ['s', 'l', 'Q', 'p', 's'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ṛ': 'O'}
hɪts  >  ['h', 'X', 't', 's'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ṛ': 'O', 'ɪ': 'X'}
powks  >  ['p', 'o', 'w', 'k', 's'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ṛ': 'O', 'ɪ': 'X'}
stæbz  >  ['s', 't', 'Q', 'b', 'z'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ṛ': 'O', 'ɪ': 'X'}
hajdz  >  ['h', 'a', 'j', 'd', 'z'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ṛ': 'O', 'ɪ': 'X'}
dɪɡz  >  ['d', 'X', 'g', 'z'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ṛ': 'O', 'ɪ': 'X'}
læfs  >  ['l', 'Q', 'f', 's'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ṛ': 'O', 'ɪ': 'X'}
pɪθs  >  ['p', 'X', 'Z', 's'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ṛ': 'O', 'ɪ': 'X', 'θ': 'Z'}
slæmz  >  ['s', 'l', 'Q', 'm', 'z'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ṛ': 'O', 'ɪ': 'X', 'θ': 'Z'}
kænz  >  ['k', 'Q', 'n', 'z'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ṛ': 'O', 'ɪ': 'X', 'θ': 'Z'}
hæŋz  >  ['h', 'Q', 'K', 'z'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ṛ': 'O', 'ɪ': 'X', 'θ': 'Z'}
θrajvz  >  ['Z', 'r', 'a', 'j', 'v', 'z'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ṛ': 'O', 'ɪ': 'X', 'θ': 'Z'}
bejðz  >  ['b', 'e', 'j', '1', 'z'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ṛ': 'O', 'ɪ': 'X', 'θ': 'Z', 'ð': '1'}
flajz  >  ['f', 'l', 'a', 'j', 'z'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ṛ': 'O', 'ɪ': 'X', 'θ': 'Z', 'ð': '1'}
(declare-fun var0A () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun var1A () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun var2A () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun var3A () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun var4A () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun var5A () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun var6A () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun var7A () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun var8A () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun var9A () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun var10A () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun var11A () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun var12A () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun var13A () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun var14A () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun var15A () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun var16A () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun var17A () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun var18A () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun var19A () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun var20A () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun var21A () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun var22A () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun var23A () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun var24A () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun var25A () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun var26A () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun var27A () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun var28A () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(assert (<= (str.len var0A) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= "kQps" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (<= sc0A 1))
(assert (<= (str.len var1A) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= "kQts" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (<= sc1A 1))
(assert (<= (str.len var2A) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= "kaks" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (<= sc2A 1))
(assert (<= (str.len var3A) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= "pruwfs" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (<= sc3A 1))
(assert (<= (str.len var4A) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= "kQbz" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (<= sc4A 1))
(assert (<= (str.len var5A) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= "kQdz" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (<= sc5A 1))
(assert (<= (str.len var6A) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= "kagz" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (<= sc6A 1))
(assert (<= (str.len var7A) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= "hNvz" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (<= sc7A 1))
(assert (<= (str.len var8A) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= "flijz" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (<= sc8A 1))
(assert (<= (str.len var9A) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= "plQwz" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (<= sc9A 1))
(assert (<= (str.len var10A) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= "pjOez" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (<= sc10A 1))
(assert (<= (str.len var11A) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= "klQmz" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (<= sc11A 1))
(assert (<= (str.len var12A) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= "kQnz" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (<= sc12A 1))
(assert (<= (str.len var13A) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= "karz" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (<= sc13A 1))
(assert (<= (str.len var14A) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= "gHlz" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (<= sc14A 1))
(assert (<= (str.len var15A) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= "slQps" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (<= sc15A 1))
(assert (<= (str.len var16A) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= "hXts" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (<= sc16A 1))
(assert (<= (str.len var17A) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= "powks" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (<= sc17A 1))
(assert (<= (str.len var18A) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= "stQbz" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (<= sc18A 1))
(assert (<= (str.len var19A) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= "hajdz" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (<= sc19A 1))
(assert (<= (str.len var20A) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= "dXgz" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (<= sc20A 1))
(assert (<= (str.len var21A) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= "lQfs" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (<= sc21A 1))
(assert (<= (str.len var22A) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= "pXZs" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (<= sc22A 1))
(assert (<= (str.len var23A) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= "slQmz" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (<= sc23A 1))
(assert (<= (str.len var24A) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= "kQnz" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (<= sc24A 1))
(assert (<= (str.len var25A) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= "hQKz" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (<= sc25A 1))
(assert (<= (str.len var26A) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= "Zrajvz" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (<= sc26A 1))
(assert (<= (str.len var27A) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= "bej1z" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (<= sc27A 1))
(assert (<= (str.len var28A) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= "flajz" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (<= sc28A 1))
(assert (= (+ 0
      0
      sc0A
      0
      sc1A
      0
      sc2A
      0
      sc3A
      0
      sc4A
      0
      sc5A
      0
      sc6A
      0
      sc7A
      0
      sc8A
      0
      sc9A
      0
      sc10A
      0
      sc11A
      0
      sc12A
      0
      sc13A
      0
      sc14A
      0
      sc15A
      0
      sc16A
      0
      sc17A
      0
      sc18A
      0
      sc19A
      0
      sc20A
      0
      sc21A
      0
      sc22A
      0
      sc23A
      0
      sc24A
      0
      sc25A
      0
      sc26A
      0
      sc27A
      0
      sc28A)
   4))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A
      sc17A
      sc18A
      sc19A
      sc20A
      sc21A
      sc22A
      sc23A
      sc24A
      sc25A
      sc26A
      sc27A
      sc28A)
   0))

None
(declare-fun var0A () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun var1A () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun var2A () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun var3A () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun var4A () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun var5A () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun var6A () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun var7A () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun var8A () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun var9A () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun var10A () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun var11A () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun var12A () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun var13A () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun var14A () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun var15A () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun var16A () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun var17A () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun var18A () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun var19A () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun var20A () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun var21A () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun var22A () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun var23A () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun var24A () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun var25A () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun var26A () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun var27A () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun var28A () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(assert (<= (str.len var0A) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= "kQps" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (<= sc0A 1))
(assert (<= (str.len var1A) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= "kQts" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (<= sc1A 1))
(assert (<= (str.len var2A) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= "kaks" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (<= sc2A 1))
(assert (<= (str.len var3A) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= "pruwfs" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (<= sc3A 1))
(assert (<= (str.len var4A) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= "kQbz" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (<= sc4A 1))
(assert (<= (str.len var5A) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= "kQdz" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (<= sc5A 1))
(assert (<= (str.len var6A) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= "kagz" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (<= sc6A 1))
(assert (<= (str.len var7A) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= "hNvz" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (<= sc7A 1))
(assert (<= (str.len var8A) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= "flijz" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (<= sc8A 1))
(assert (<= (str.len var9A) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= "plQwz" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (<= sc9A 1))
(assert (<= (str.len var10A) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= "pjOez" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (<= sc10A 1))
(assert (<= (str.len var11A) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= "klQmz" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (<= sc11A 1))
(assert (<= (str.len var12A) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= "kQnz" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (<= sc12A 1))
(assert (<= (str.len var13A) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= "karz" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (<= sc13A 1))
(assert (<= (str.len var14A) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= "gHlz" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (<= sc14A 1))
(assert (<= (str.len var15A) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= "slQps" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (<= sc15A 1))
(assert (<= (str.len var16A) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= "hXts" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (<= sc16A 1))
(assert (<= (str.len var17A) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= "powks" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (<= sc17A 1))
(assert (<= (str.len var18A) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= "stQbz" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (<= sc18A 1))
(assert (<= (str.len var19A) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= "hajdz" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (<= sc19A 1))
(assert (<= (str.len var20A) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= "dXgz" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (<= sc20A 1))
(assert (<= (str.len var21A) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= "lQfs" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (<= sc21A 1))
(assert (<= (str.len var22A) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= "pXZs" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (<= sc22A 1))
(assert (<= (str.len var23A) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= "slQmz" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (<= sc23A 1))
(assert (<= (str.len var24A) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= "kQnz" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (<= sc24A 1))
(assert (<= (str.len var25A) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= "hQKz" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (<= sc25A 1))
(assert (<= (str.len var26A) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= "Zrajvz" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (<= sc26A 1))
(assert (<= (str.len var27A) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= "bej1z" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (<= sc27A 1))
(assert (<= (str.len var28A) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= "flajz" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (<= sc28A 1))
(assert (= (+ 0
      0
      sc0A
      0
      sc1A
      0
      sc2A
      0
      sc3A
      0
      sc4A
      0
      sc5A
      0
      sc6A
      0
      sc7A
      0
      sc8A
      0
      sc9A
      0
      sc10A
      0
      sc11A
      0
      sc12A
      0
      sc13A
      0
      sc14A
      0
      sc15A
      0
      sc16A
      0
      sc17A
      0
      sc18A
      0
      sc19A
      0
      sc20A
      0
      sc21A
      0
      sc22A
      0
      sc23A
      0
      sc24A
      0
      sc25A
      0
      sc26A
      0
      sc27A
      0
      sc28A)
   5))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A
      sc17A
      sc18A
      sc19A
      sc20A
      sc21A
      sc22A
      sc23A
      sc24A
      sc25A
      sc26A
      sc27A
      sc28A)
   0))

None
(declare-fun var0A () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun var1A () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun var2A () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun var3A () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun var4A () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun var5A () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun var6A () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun var7A () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun var8A () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun var9A () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun var10A () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun var11A () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun var12A () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun var13A () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun var14A () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun var15A () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun var16A () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun var17A () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun var18A () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun var19A () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun var20A () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun var21A () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun var22A () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun var23A () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun var24A () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun var25A () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun var26A () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun var27A () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun var28A () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(assert (<= (str.len var0A) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= "kQps" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (<= sc0A 1))
(assert (<= (str.len var1A) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= "kQts" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (<= sc1A 1))
(assert (<= (str.len var2A) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= "kaks" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (<= sc2A 1))
(assert (<= (str.len var3A) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= "pruwfs" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (<= sc3A 1))
(assert (<= (str.len var4A) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= "kQbz" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (<= sc4A 1))
(assert (<= (str.len var5A) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= "kQdz" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (<= sc5A 1))
(assert (<= (str.len var6A) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= "kagz" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (<= sc6A 1))
(assert (<= (str.len var7A) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= "hNvz" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (<= sc7A 1))
(assert (<= (str.len var8A) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= "flijz" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (<= sc8A 1))
(assert (<= (str.len var9A) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= "plQwz" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (<= sc9A 1))
(assert (<= (str.len var10A) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= "pjOez" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (<= sc10A 1))
(assert (<= (str.len var11A) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= "klQmz" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (<= sc11A 1))
(assert (<= (str.len var12A) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= "kQnz" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (<= sc12A 1))
(assert (<= (str.len var13A) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= "karz" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (<= sc13A 1))
(assert (<= (str.len var14A) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= "gHlz" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (<= sc14A 1))
(assert (<= (str.len var15A) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= "slQps" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (<= sc15A 1))
(assert (<= (str.len var16A) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= "hXts" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (<= sc16A 1))
(assert (<= (str.len var17A) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= "powks" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (<= sc17A 1))
(assert (<= (str.len var18A) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= "stQbz" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (<= sc18A 1))
(assert (<= (str.len var19A) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= "hajdz" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (<= sc19A 1))
(assert (<= (str.len var20A) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= "dXgz" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (<= sc20A 1))
(assert (<= (str.len var21A) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= "lQfs" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (<= sc21A 1))
(assert (<= (str.len var22A) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= "pXZs" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (<= sc22A 1))
(assert (<= (str.len var23A) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= "slQmz" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (<= sc23A 1))
(assert (<= (str.len var24A) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= "kQnz" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (<= sc24A 1))
(assert (<= (str.len var25A) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= "hQKz" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (<= sc25A 1))
(assert (<= (str.len var26A) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= "Zrajvz" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (<= sc26A 1))
(assert (<= (str.len var27A) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= "bej1z" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (<= sc27A 1))
(assert (<= (str.len var28A) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= "flajz" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (<= sc28A 1))
(assert (= (+ 0
      0
      sc0A
      0
      sc1A
      0
      sc2A
      0
      sc3A
      0
      sc4A
      0
      sc5A
      0
      sc6A
      0
      sc7A
      0
      sc8A
      0
      sc9A
      0
      sc10A
      0
      sc11A
      0
      sc12A
      0
      sc13A
      0
      sc14A
      0
      sc15A
      0
      sc16A
      0
      sc17A
      0
      sc18A
      0
      sc19A
      0
      sc20A
      0
      sc21A
      0
      sc22A
      0
      sc23A
      0
      sc24A
      0
      sc25A
      0
      sc26A
      0
      sc27A
      0
      sc28A)
   6))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A
      sc17A
      sc18A
      sc19A
      sc20A
      sc21A
      sc22A
      sc23A
      sc24A
      sc25A
      sc26A
      sc27A
      sc28A)
   0))

None
(declare-fun var0A () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun var1A () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun var2A () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun var3A () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun var4A () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun var5A () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun var6A () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun var7A () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun var8A () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun var9A () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun var10A () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun var11A () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun var12A () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun var13A () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun var14A () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun var15A () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun var16A () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun var17A () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun var18A () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun var19A () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun var20A () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun var21A () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun var22A () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun var23A () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun var24A () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun var25A () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun var26A () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun var27A () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun var28A () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(assert (<= (str.len var0A) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= "kQps" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (<= sc0A 1))
(assert (<= (str.len var1A) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= "kQts" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (<= sc1A 1))
(assert (<= (str.len var2A) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= "kaks" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (<= sc2A 1))
(assert (<= (str.len var3A) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= "pruwfs" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (<= sc3A 1))
(assert (<= (str.len var4A) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= "kQbz" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (<= sc4A 1))
(assert (<= (str.len var5A) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= "kQdz" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (<= sc5A 1))
(assert (<= (str.len var6A) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= "kagz" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (<= sc6A 1))
(assert (<= (str.len var7A) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= "hNvz" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (<= sc7A 1))
(assert (<= (str.len var8A) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= "flijz" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (<= sc8A 1))
(assert (<= (str.len var9A) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= "plQwz" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (<= sc9A 1))
(assert (<= (str.len var10A) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= "pjOez" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (<= sc10A 1))
(assert (<= (str.len var11A) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= "klQmz" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (<= sc11A 1))
(assert (<= (str.len var12A) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= "kQnz" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (<= sc12A 1))
(assert (<= (str.len var13A) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= "karz" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (<= sc13A 1))
(assert (<= (str.len var14A) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= "gHlz" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (<= sc14A 1))
(assert (<= (str.len var15A) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= "slQps" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (<= sc15A 1))
(assert (<= (str.len var16A) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= "hXts" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (<= sc16A 1))
(assert (<= (str.len var17A) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= "powks" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (<= sc17A 1))
(assert (<= (str.len var18A) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= "stQbz" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (<= sc18A 1))
(assert (<= (str.len var19A) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= "hajdz" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (<= sc19A 1))
(assert (<= (str.len var20A) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= "dXgz" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (<= sc20A 1))
(assert (<= (str.len var21A) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= "lQfs" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (<= sc21A 1))
(assert (<= (str.len var22A) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= "pXZs" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (<= sc22A 1))
(assert (<= (str.len var23A) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= "slQmz" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (<= sc23A 1))
(assert (<= (str.len var24A) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= "kQnz" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (<= sc24A 1))
(assert (<= (str.len var25A) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= "hQKz" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (<= sc25A 1))
(assert (<= (str.len var26A) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= "Zrajvz" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (<= sc26A 1))
(assert (<= (str.len var27A) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= "bej1z" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (<= sc27A 1))
(assert (<= (str.len var28A) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= "flajz" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (<= sc28A 1))
(assert (= (+ 0
      0
      sc0A
      0
      sc1A
      0
      sc2A
      0
      sc3A
      0
      sc4A
      0
      sc5A
      0
      sc6A
      0
      sc7A
      0
      sc8A
      0
      sc9A
      0
      sc10A
      0
      sc11A
      0
      sc12A
      0
      sc13A
      0
      sc14A
      0
      sc15A
      0
      sc16A
      0
      sc17A
      0
      sc18A
      0
      sc19A
      0
      sc20A
      0
      sc21A
      0
      sc22A
      0
      sc23A
      0
      sc24A
      0
      sc25A
      0
      sc26A
      0
      sc27A
      0
      sc28A)
   7))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A
      sc17A
      sc18A
      sc19A
      sc20A
      sc21A
      sc22A
      sc23A
      sc24A
      sc25A
      sc26A
      sc27A
      sc28A)
   0))

None
(declare-fun var0A () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun var1A () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun var2A () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun var3A () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun var4A () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun var5A () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun var6A () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun var7A () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun var8A () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun var9A () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun var10A () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun var11A () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun var12A () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun var13A () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun var14A () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun var15A () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun var16A () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun var17A () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun var18A () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun var19A () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun var20A () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun var21A () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun var22A () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun var23A () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun var24A () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun var25A () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun var26A () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun var27A () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun var28A () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(assert (<= (str.len var0A) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= "kQps" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (<= sc0A 1))
(assert (<= (str.len var1A) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= "kQts" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (<= sc1A 1))
(assert (<= (str.len var2A) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= "kaks" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (<= sc2A 1))
(assert (<= (str.len var3A) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= "pruwfs" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (<= sc3A 1))
(assert (<= (str.len var4A) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= "kQbz" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (<= sc4A 1))
(assert (<= (str.len var5A) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= "kQdz" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (<= sc5A 1))
(assert (<= (str.len var6A) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= "kagz" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (<= sc6A 1))
(assert (<= (str.len var7A) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= "hNvz" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (<= sc7A 1))
(assert (<= (str.len var8A) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= "flijz" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (<= sc8A 1))
(assert (<= (str.len var9A) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= "plQwz" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (<= sc9A 1))
(assert (<= (str.len var10A) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= "pjOez" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (<= sc10A 1))
(assert (<= (str.len var11A) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= "klQmz" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (<= sc11A 1))
(assert (<= (str.len var12A) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= "kQnz" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (<= sc12A 1))
(assert (<= (str.len var13A) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= "karz" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (<= sc13A 1))
(assert (<= (str.len var14A) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= "gHlz" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (<= sc14A 1))
(assert (<= (str.len var15A) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= "slQps" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (<= sc15A 1))
(assert (<= (str.len var16A) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= "hXts" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (<= sc16A 1))
(assert (<= (str.len var17A) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= "powks" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (<= sc17A 1))
(assert (<= (str.len var18A) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= "stQbz" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (<= sc18A 1))
(assert (<= (str.len var19A) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= "hajdz" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (<= sc19A 1))
(assert (<= (str.len var20A) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= "dXgz" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (<= sc20A 1))
(assert (<= (str.len var21A) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= "lQfs" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (<= sc21A 1))
(assert (<= (str.len var22A) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= "pXZs" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (<= sc22A 1))
(assert (<= (str.len var23A) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= "slQmz" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (<= sc23A 1))
(assert (<= (str.len var24A) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= "kQnz" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (<= sc24A 1))
(assert (<= (str.len var25A) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= "hQKz" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (<= sc25A 1))
(assert (<= (str.len var26A) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= "Zrajvz" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (<= sc26A 1))
(assert (<= (str.len var27A) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= "bej1z" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (<= sc27A 1))
(assert (<= (str.len var28A) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= "flajz" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (<= sc28A 1))
(assert (= (+ 0
      0
      sc0A
      0
      sc1A
      0
      sc2A
      0
      sc3A
      0
      sc4A
      0
      sc5A
      0
      sc6A
      0
      sc7A
      0
      sc8A
      0
      sc9A
      0
      sc10A
      0
      sc11A
      0
      sc12A
      0
      sc13A
      0
      sc14A
      0
      sc15A
      0
      sc16A
      0
      sc17A
      0
      sc18A
      0
      sc19A
      0
      sc20A
      0
      sc21A
      0
      sc22A
      0
      sc23A
      0
      sc24A
      0
      sc25A
      0
      sc26A
      0
      sc27A
      0
      sc28A)
   8))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A
      sc17A
      sc18A
      sc19A
      sc20A
      sc21A
      sc22A
      sc23A
      sc24A
      sc25A
      sc26A
      sc27A
      sc28A)
   0))

None
(declare-fun var0A () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun var1A () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun var2A () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun var3A () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun var4A () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun var5A () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun var6A () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun var7A () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun var8A () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun var9A () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun var10A () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun var11A () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun var12A () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun var13A () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun var14A () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun var15A () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun var16A () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun var17A () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun var18A () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun var19A () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun var20A () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun var21A () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun var22A () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun var23A () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun var24A () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun var25A () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun var26A () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun var27A () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun var28A () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(assert (<= (str.len var0A) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= "kQps" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (<= sc0A 1))
(assert (<= (str.len var1A) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= "kQts" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (<= sc1A 1))
(assert (<= (str.len var2A) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= "kaks" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (<= sc2A 1))
(assert (<= (str.len var3A) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= "pruwfs" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (<= sc3A 1))
(assert (<= (str.len var4A) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= "kQbz" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (<= sc4A 1))
(assert (<= (str.len var5A) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= "kQdz" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (<= sc5A 1))
(assert (<= (str.len var6A) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= "kagz" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (<= sc6A 1))
(assert (<= (str.len var7A) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= "hNvz" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (<= sc7A 1))
(assert (<= (str.len var8A) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= "flijz" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (<= sc8A 1))
(assert (<= (str.len var9A) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= "plQwz" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (<= sc9A 1))
(assert (<= (str.len var10A) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= "pjOez" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (<= sc10A 1))
(assert (<= (str.len var11A) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= "klQmz" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (<= sc11A 1))
(assert (<= (str.len var12A) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= "kQnz" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (<= sc12A 1))
(assert (<= (str.len var13A) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= "karz" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (<= sc13A 1))
(assert (<= (str.len var14A) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= "gHlz" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (<= sc14A 1))
(assert (<= (str.len var15A) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= "slQps" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (<= sc15A 1))
(assert (<= (str.len var16A) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= "hXts" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (<= sc16A 1))
(assert (<= (str.len var17A) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= "powks" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (<= sc17A 1))
(assert (<= (str.len var18A) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= "stQbz" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (<= sc18A 1))
(assert (<= (str.len var19A) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= "hajdz" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (<= sc19A 1))
(assert (<= (str.len var20A) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= "dXgz" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (<= sc20A 1))
(assert (<= (str.len var21A) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= "lQfs" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (<= sc21A 1))
(assert (<= (str.len var22A) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= "pXZs" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (<= sc22A 1))
(assert (<= (str.len var23A) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= "slQmz" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (<= sc23A 1))
(assert (<= (str.len var24A) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= "kQnz" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (<= sc24A 1))
(assert (<= (str.len var25A) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= "hQKz" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (<= sc25A 1))
(assert (<= (str.len var26A) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= "Zrajvz" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (<= sc26A 1))
(assert (<= (str.len var27A) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= "bej1z" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (<= sc27A 1))
(assert (<= (str.len var28A) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= "flajz" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (<= sc28A 1))
(assert (= (+ 0
      0
      sc0A
      0
      sc1A
      0
      sc2A
      0
      sc3A
      0
      sc4A
      0
      sc5A
      0
      sc6A
      0
      sc7A
      0
      sc8A
      0
      sc9A
      0
      sc10A
      0
      sc11A
      0
      sc12A
      0
      sc13A
      0
      sc14A
      0
      sc15A
      0
      sc16A
      0
      sc17A
      0
      sc18A
      0
      sc19A
      0
      sc20A
      0
      sc21A
      0
      sc22A
      0
      sc23A
      0
      sc24A
      0
      sc25A
      0
      sc26A
      0
      sc27A
      0
      sc28A)
   9))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A
      sc17A
      sc18A
      sc19A
      sc20A
      sc21A
      sc22A
      sc23A
      sc24A
      sc25A
      sc26A
      sc27A
      sc28A)
   0))

None
(declare-fun var0A () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun var1A () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun var2A () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun var3A () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun var4A () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun var5A () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun var6A () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun var7A () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun var8A () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun var9A () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun var10A () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun var11A () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun var12A () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun var13A () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun var14A () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun var15A () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun var16A () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun var17A () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun var18A () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun var19A () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun var20A () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun var21A () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun var22A () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun var23A () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun var24A () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun var25A () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun var26A () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun var27A () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun var28A () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(assert (<= (str.len var0A) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= "kQps" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (<= sc0A 1))
(assert (<= (str.len var1A) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= "kQts" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (<= sc1A 1))
(assert (<= (str.len var2A) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= "kaks" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (<= sc2A 1))
(assert (<= (str.len var3A) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= "pruwfs" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (<= sc3A 1))
(assert (<= (str.len var4A) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= "kQbz" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (<= sc4A 1))
(assert (<= (str.len var5A) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= "kQdz" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (<= sc5A 1))
(assert (<= (str.len var6A) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= "kagz" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (<= sc6A 1))
(assert (<= (str.len var7A) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= "hNvz" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (<= sc7A 1))
(assert (<= (str.len var8A) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= "flijz" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (<= sc8A 1))
(assert (<= (str.len var9A) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= "plQwz" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (<= sc9A 1))
(assert (<= (str.len var10A) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= "pjOez" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (<= sc10A 1))
(assert (<= (str.len var11A) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= "klQmz" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (<= sc11A 1))
(assert (<= (str.len var12A) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= "kQnz" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (<= sc12A 1))
(assert (<= (str.len var13A) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= "karz" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (<= sc13A 1))
(assert (<= (str.len var14A) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= "gHlz" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (<= sc14A 1))
(assert (<= (str.len var15A) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= "slQps" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (<= sc15A 1))
(assert (<= (str.len var16A) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= "hXts" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (<= sc16A 1))
(assert (<= (str.len var17A) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= "powks" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (<= sc17A 1))
(assert (<= (str.len var18A) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= "stQbz" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (<= sc18A 1))
(assert (<= (str.len var19A) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= "hajdz" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (<= sc19A 1))
(assert (<= (str.len var20A) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= "dXgz" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (<= sc20A 1))
(assert (<= (str.len var21A) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= "lQfs" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (<= sc21A 1))
(assert (<= (str.len var22A) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= "pXZs" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (<= sc22A 1))
(assert (<= (str.len var23A) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= "slQmz" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (<= sc23A 1))
(assert (<= (str.len var24A) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= "kQnz" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (<= sc24A 1))
(assert (<= (str.len var25A) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= "hQKz" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (<= sc25A 1))
(assert (<= (str.len var26A) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= "Zrajvz" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (<= sc26A 1))
(assert (<= (str.len var27A) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= "bej1z" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (<= sc27A 1))
(assert (<= (str.len var28A) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= "flajz" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (<= sc28A 1))
(assert (= (+ 0
      0
      sc0A
      0
      sc1A
      0
      sc2A
      0
      sc3A
      0
      sc4A
      0
      sc5A
      0
      sc6A
      0
      sc7A
      0
      sc8A
      0
      sc9A
      0
      sc10A
      0
      sc11A
      0
      sc12A
      0
      sc13A
      0
      sc14A
      0
      sc15A
      0
      sc16A
      0
      sc17A
      0
      sc18A
      0
      sc19A
      0
      sc20A
      0
      sc21A
      0
      sc22A
      0
      sc23A
      0
      sc24A
      0
      sc25A
      0
      sc26A
      0
      sc27A
      0
      sc28A)
   10))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A
      sc17A
      sc18A
      sc19A
      sc20A
      sc21A
      sc22A
      sc23A
      sc24A
      sc25A
      sc26A
      sc27A
      sc28A)
   0))

None
(declare-fun var0A () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun var1A () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun var2A () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun var3A () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun var4A () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun var5A () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun var6A () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun var7A () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun var8A () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun var9A () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun var10A () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun var11A () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun var12A () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun var13A () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun var14A () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun var15A () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun var16A () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun var17A () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun var18A () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun var19A () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun var20A () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun var21A () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun var22A () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun var23A () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun var24A () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun var25A () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun var26A () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun var27A () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun var28A () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(assert (<= (str.len var0A) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= "kQps" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (<= sc0A 1))
(assert (<= (str.len var1A) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= "kQts" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (<= sc1A 1))
(assert (<= (str.len var2A) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= "kaks" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (<= sc2A 1))
(assert (<= (str.len var3A) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= "pruwfs" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (<= sc3A 1))
(assert (<= (str.len var4A) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= "kQbz" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (<= sc4A 1))
(assert (<= (str.len var5A) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= "kQdz" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (<= sc5A 1))
(assert (<= (str.len var6A) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= "kagz" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (<= sc6A 1))
(assert (<= (str.len var7A) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= "hNvz" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (<= sc7A 1))
(assert (<= (str.len var8A) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= "flijz" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (<= sc8A 1))
(assert (<= (str.len var9A) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= "plQwz" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (<= sc9A 1))
(assert (<= (str.len var10A) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= "pjOez" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (<= sc10A 1))
(assert (<= (str.len var11A) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= "klQmz" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (<= sc11A 1))
(assert (<= (str.len var12A) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= "kQnz" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (<= sc12A 1))
(assert (<= (str.len var13A) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= "karz" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (<= sc13A 1))
(assert (<= (str.len var14A) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= "gHlz" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (<= sc14A 1))
(assert (<= (str.len var15A) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= "slQps" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (<= sc15A 1))
(assert (<= (str.len var16A) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= "hXts" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (<= sc16A 1))
(assert (<= (str.len var17A) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= "powks" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (<= sc17A 1))
(assert (<= (str.len var18A) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= "stQbz" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (<= sc18A 1))
(assert (<= (str.len var19A) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= "hajdz" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (<= sc19A 1))
(assert (<= (str.len var20A) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= "dXgz" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (<= sc20A 1))
(assert (<= (str.len var21A) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= "lQfs" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (<= sc21A 1))
(assert (<= (str.len var22A) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= "pXZs" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (<= sc22A 1))
(assert (<= (str.len var23A) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= "slQmz" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (<= sc23A 1))
(assert (<= (str.len var24A) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= "kQnz" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (<= sc24A 1))
(assert (<= (str.len var25A) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= "hQKz" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (<= sc25A 1))
(assert (<= (str.len var26A) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= "Zrajvz" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (<= sc26A 1))
(assert (<= (str.len var27A) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= "bej1z" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (<= sc27A 1))
(assert (<= (str.len var28A) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= "flajz" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (<= sc28A 1))
(assert (= (+ 0
      0
      sc0A
      0
      sc1A
      0
      sc2A
      0
      sc3A
      0
      sc4A
      0
      sc5A
      0
      sc6A
      0
      sc7A
      0
      sc8A
      0
      sc9A
      0
      sc10A
      0
      sc11A
      0
      sc12A
      0
      sc13A
      0
      sc14A
      0
      sc15A
      0
      sc16A
      0
      sc17A
      0
      sc18A
      0
      sc19A
      0
      sc20A
      0
      sc21A
      0
      sc22A
      0
      sc23A
      0
      sc24A
      0
      sc25A
      0
      sc26A
      0
      sc27A
      0
      sc28A)
   11))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A
      sc17A
      sc18A
      sc19A
      sc20A
      sc21A
      sc22A
      sc23A
      sc24A
      sc25A
      sc26A
      sc27A
      sc28A)
   0))

None
(declare-fun var0A () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun var1A () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun var2A () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun var3A () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun var4A () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun var5A () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun var6A () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun var7A () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun var8A () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun var9A () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun var10A () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun var11A () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun var12A () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun var13A () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun var14A () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun var15A () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun var16A () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun var17A () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun var18A () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun var19A () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun var20A () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun var21A () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun var22A () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun var23A () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun var24A () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun var25A () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun var26A () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun var27A () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun var28A () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(assert (<= (str.len var0A) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= "kQps" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (<= sc0A 1))
(assert (<= (str.len var1A) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= "kQts" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (<= sc1A 1))
(assert (<= (str.len var2A) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= "kaks" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (<= sc2A 1))
(assert (<= (str.len var3A) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= "pruwfs" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (<= sc3A 1))
(assert (<= (str.len var4A) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= "kQbz" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (<= sc4A 1))
(assert (<= (str.len var5A) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= "kQdz" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (<= sc5A 1))
(assert (<= (str.len var6A) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= "kagz" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (<= sc6A 1))
(assert (<= (str.len var7A) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= "hNvz" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (<= sc7A 1))
(assert (<= (str.len var8A) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= "flijz" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (<= sc8A 1))
(assert (<= (str.len var9A) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= "plQwz" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (<= sc9A 1))
(assert (<= (str.len var10A) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= "pjOez" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (<= sc10A 1))
(assert (<= (str.len var11A) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= "klQmz" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (<= sc11A 1))
(assert (<= (str.len var12A) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= "kQnz" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (<= sc12A 1))
(assert (<= (str.len var13A) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= "karz" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (<= sc13A 1))
(assert (<= (str.len var14A) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= "gHlz" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (<= sc14A 1))
(assert (<= (str.len var15A) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= "slQps" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (<= sc15A 1))
(assert (<= (str.len var16A) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= "hXts" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (<= sc16A 1))
(assert (<= (str.len var17A) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= "powks" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (<= sc17A 1))
(assert (<= (str.len var18A) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= "stQbz" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (<= sc18A 1))
(assert (<= (str.len var19A) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= "hajdz" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (<= sc19A 1))
(assert (<= (str.len var20A) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= "dXgz" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (<= sc20A 1))
(assert (<= (str.len var21A) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= "lQfs" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (<= sc21A 1))
(assert (<= (str.len var22A) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= "pXZs" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (<= sc22A 1))
(assert (<= (str.len var23A) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= "slQmz" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (<= sc23A 1))
(assert (<= (str.len var24A) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= "kQnz" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (<= sc24A 1))
(assert (<= (str.len var25A) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= "hQKz" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (<= sc25A 1))
(assert (<= (str.len var26A) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= "Zrajvz" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (<= sc26A 1))
(assert (<= (str.len var27A) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= "bej1z" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (<= sc27A 1))
(assert (<= (str.len var28A) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= "flajz" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (<= sc28A 1))
(assert (= (+ 0
      0
      sc0A
      0
      sc1A
      0
      sc2A
      0
      sc3A
      0
      sc4A
      0
      sc5A
      0
      sc6A
      0
      sc7A
      0
      sc8A
      0
      sc9A
      0
      sc10A
      0
      sc11A
      0
      sc12A
      0
      sc13A
      0
      sc14A
      0
      sc15A
      0
      sc16A
      0
      sc17A
      0
      sc18A
      0
      sc19A
      0
      sc20A
      0
      sc21A
      0
      sc22A
      0
      sc23A
      0
      sc24A
      0
      sc25A
      0
      sc26A
      0
      sc27A
      0
      sc28A)
   12))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A
      sc17A
      sc18A
      sc19A
      sc20A
      sc21A
      sc22A
      sc23A
      sc24A
      sc25A
      sc26A
      sc27A
      sc28A)
   0))

None
(declare-fun var0A () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun var1A () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun var2A () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun var3A () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun var4A () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun var5A () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun var6A () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun var7A () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun var8A () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun var9A () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun var10A () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun var11A () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun var12A () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun var13A () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun var14A () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun var15A () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun var16A () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun var17A () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun var18A () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun var19A () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun var20A () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun var21A () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun var22A () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun var23A () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun var24A () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun var25A () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun var26A () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun var27A () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun var28A () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(assert (<= (str.len var0A) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= "kQps" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (<= sc0A 1))
(assert (<= (str.len var1A) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= "kQts" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (<= sc1A 1))
(assert (<= (str.len var2A) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= "kaks" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (<= sc2A 1))
(assert (<= (str.len var3A) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= "pruwfs" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (<= sc3A 1))
(assert (<= (str.len var4A) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= "kQbz" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (<= sc4A 1))
(assert (<= (str.len var5A) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= "kQdz" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (<= sc5A 1))
(assert (<= (str.len var6A) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= "kagz" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (<= sc6A 1))
(assert (<= (str.len var7A) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= "hNvz" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (<= sc7A 1))
(assert (<= (str.len var8A) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= "flijz" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (<= sc8A 1))
(assert (<= (str.len var9A) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= "plQwz" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (<= sc9A 1))
(assert (<= (str.len var10A) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= "pjOez" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (<= sc10A 1))
(assert (<= (str.len var11A) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= "klQmz" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (<= sc11A 1))
(assert (<= (str.len var12A) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= "kQnz" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (<= sc12A 1))
(assert (<= (str.len var13A) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= "karz" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (<= sc13A 1))
(assert (<= (str.len var14A) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= "gHlz" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (<= sc14A 1))
(assert (<= (str.len var15A) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= "slQps" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (<= sc15A 1))
(assert (<= (str.len var16A) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= "hXts" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (<= sc16A 1))
(assert (<= (str.len var17A) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= "powks" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (<= sc17A 1))
(assert (<= (str.len var18A) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= "stQbz" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (<= sc18A 1))
(assert (<= (str.len var19A) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= "hajdz" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (<= sc19A 1))
(assert (<= (str.len var20A) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= "dXgz" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (<= sc20A 1))
(assert (<= (str.len var21A) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= "lQfs" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (<= sc21A 1))
(assert (<= (str.len var22A) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= "pXZs" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (<= sc22A 1))
(assert (<= (str.len var23A) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= "slQmz" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (<= sc23A 1))
(assert (<= (str.len var24A) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= "kQnz" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (<= sc24A 1))
(assert (<= (str.len var25A) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= "hQKz" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (<= sc25A 1))
(assert (<= (str.len var26A) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= "Zrajvz" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (<= sc26A 1))
(assert (<= (str.len var27A) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= "bej1z" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (<= sc27A 1))
(assert (<= (str.len var28A) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= "flajz" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (<= sc28A 1))
(assert (= (+ 0
      0
      sc0A
      0
      sc1A
      0
      sc2A
      0
      sc3A
      0
      sc4A
      0
      sc5A
      0
      sc6A
      0
      sc7A
      0
      sc8A
      0
      sc9A
      0
      sc10A
      0
      sc11A
      0
      sc12A
      0
      sc13A
      0
      sc14A
      0
      sc15A
      0
      sc16A
      0
      sc17A
      0
      sc18A
      0
      sc19A
      0
      sc20A
      0
      sc21A
      0
      sc22A
      0
      sc23A
      0
      sc24A
      0
      sc25A
      0
      sc26A
      0
      sc27A
      0
      sc28A)
   13))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A
      sc17A
      sc18A
      sc19A
      sc20A
      sc21A
      sc22A
      sc23A
      sc24A
      sc25A
      sc26A
      sc27A
      sc28A)
   0))

None
(declare-fun var0A () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun var1A () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun var2A () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun var3A () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun var4A () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun var5A () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun var6A () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun var7A () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun var8A () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun var9A () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun var10A () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun var11A () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun var12A () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun var13A () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun var14A () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun var15A () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun var16A () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun var17A () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun var18A () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun var19A () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun var20A () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun var21A () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun var22A () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun var23A () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun var24A () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun var25A () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun var26A () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun var27A () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun var28A () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(assert (<= (str.len var0A) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= "kQps" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (<= sc0A 1))
(assert (<= (str.len var1A) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= "kQts" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (<= sc1A 1))
(assert (<= (str.len var2A) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= "kaks" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (<= sc2A 1))
(assert (<= (str.len var3A) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= "pruwfs" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (<= sc3A 1))
(assert (<= (str.len var4A) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= "kQbz" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (<= sc4A 1))
(assert (<= (str.len var5A) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= "kQdz" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (<= sc5A 1))
(assert (<= (str.len var6A) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= "kagz" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (<= sc6A 1))
(assert (<= (str.len var7A) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= "hNvz" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (<= sc7A 1))
(assert (<= (str.len var8A) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= "flijz" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (<= sc8A 1))
(assert (<= (str.len var9A) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= "plQwz" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (<= sc9A 1))
(assert (<= (str.len var10A) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= "pjOez" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (<= sc10A 1))
(assert (<= (str.len var11A) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= "klQmz" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (<= sc11A 1))
(assert (<= (str.len var12A) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= "kQnz" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (<= sc12A 1))
(assert (<= (str.len var13A) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= "karz" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (<= sc13A 1))
(assert (<= (str.len var14A) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= "gHlz" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (<= sc14A 1))
(assert (<= (str.len var15A) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= "slQps" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (<= sc15A 1))
(assert (<= (str.len var16A) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= "hXts" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (<= sc16A 1))
(assert (<= (str.len var17A) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= "powks" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (<= sc17A 1))
(assert (<= (str.len var18A) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= "stQbz" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (<= sc18A 1))
(assert (<= (str.len var19A) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= "hajdz" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (<= sc19A 1))
(assert (<= (str.len var20A) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= "dXgz" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (<= sc20A 1))
(assert (<= (str.len var21A) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= "lQfs" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (<= sc21A 1))
(assert (<= (str.len var22A) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= "pXZs" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (<= sc22A 1))
(assert (<= (str.len var23A) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= "slQmz" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (<= sc23A 1))
(assert (<= (str.len var24A) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= "kQnz" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (<= sc24A 1))
(assert (<= (str.len var25A) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= "hQKz" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (<= sc25A 1))
(assert (<= (str.len var26A) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= "Zrajvz" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (<= sc26A 1))
(assert (<= (str.len var27A) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= "bej1z" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (<= sc27A 1))
(assert (<= (str.len var28A) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= "flajz" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (<= sc28A 1))
(assert (= (+ 0
      0
      sc0A
      0
      sc1A
      0
      sc2A
      0
      sc3A
      0
      sc4A
      0
      sc5A
      0
      sc6A
      0
      sc7A
      0
      sc8A
      0
      sc9A
      0
      sc10A
      0
      sc11A
      0
      sc12A
      0
      sc13A
      0
      sc14A
      0
      sc15A
      0
      sc16A
      0
      sc17A
      0
      sc18A
      0
      sc19A
      0
      sc20A
      0
      sc21A
      0
      sc22A
      0
      sc23A
      0
      sc24A
      0
      sc25A
      0
      sc26A
      0
      sc27A
      0
      sc28A)
   14))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A
      sc17A
      sc18A
      sc19A
      sc20A
      sc21A
      sc22A
      sc23A
      sc24A
      sc25A
      sc26A
      sc27A
      sc28A)
   0))

None
(declare-fun var0A () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun var1A () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun var2A () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun var3A () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun var4A () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun var5A () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun var6A () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun var7A () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun var8A () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun var9A () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun var10A () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun var11A () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun var12A () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun var13A () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun var14A () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun var15A () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun var16A () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun var17A () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun var18A () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun var19A () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun var20A () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun var21A () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun var22A () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun var23A () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun var24A () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun var25A () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun var26A () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun var27A () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun var28A () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(assert (<= (str.len var0A) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= "kQps" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (<= sc0A 1))
(assert (<= (str.len var1A) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= "kQts" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (<= sc1A 1))
(assert (<= (str.len var2A) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= "kaks" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (<= sc2A 1))
(assert (<= (str.len var3A) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= "pruwfs" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (<= sc3A 1))
(assert (<= (str.len var4A) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= "kQbz" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (<= sc4A 1))
(assert (<= (str.len var5A) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= "kQdz" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (<= sc5A 1))
(assert (<= (str.len var6A) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= "kagz" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (<= sc6A 1))
(assert (<= (str.len var7A) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= "hNvz" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (<= sc7A 1))
(assert (<= (str.len var8A) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= "flijz" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (<= sc8A 1))
(assert (<= (str.len var9A) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= "plQwz" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (<= sc9A 1))
(assert (<= (str.len var10A) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= "pjOez" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (<= sc10A 1))
(assert (<= (str.len var11A) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= "klQmz" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (<= sc11A 1))
(assert (<= (str.len var12A) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= "kQnz" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (<= sc12A 1))
(assert (<= (str.len var13A) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= "karz" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (<= sc13A 1))
(assert (<= (str.len var14A) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= "gHlz" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (<= sc14A 1))
(assert (<= (str.len var15A) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= "slQps" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (<= sc15A 1))
(assert (<= (str.len var16A) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= "hXts" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (<= sc16A 1))
(assert (<= (str.len var17A) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= "powks" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (<= sc17A 1))
(assert (<= (str.len var18A) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= "stQbz" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (<= sc18A 1))
(assert (<= (str.len var19A) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= "hajdz" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (<= sc19A 1))
(assert (<= (str.len var20A) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= "dXgz" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (<= sc20A 1))
(assert (<= (str.len var21A) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= "lQfs" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (<= sc21A 1))
(assert (<= (str.len var22A) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= "pXZs" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (<= sc22A 1))
(assert (<= (str.len var23A) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= "slQmz" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (<= sc23A 1))
(assert (<= (str.len var24A) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= "kQnz" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (<= sc24A 1))
(assert (<= (str.len var25A) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= "hQKz" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (<= sc25A 1))
(assert (<= (str.len var26A) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= "Zrajvz" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (<= sc26A 1))
(assert (<= (str.len var27A) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= "bej1z" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (<= sc27A 1))
(assert (<= (str.len var28A) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= "flajz" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (<= sc28A 1))
(assert (= (+ 0
      0
      sc0A
      0
      sc1A
      0
      sc2A
      0
      sc3A
      0
      sc4A
      0
      sc5A
      0
      sc6A
      0
      sc7A
      0
      sc8A
      0
      sc9A
      0
      sc10A
      0
      sc11A
      0
      sc12A
      0
      sc13A
      0
      sc14A
      0
      sc15A
      0
      sc16A
      0
      sc17A
      0
      sc18A
      0
      sc19A
      0
      sc20A
      0
      sc21A
      0
      sc22A
      0
      sc23A
      0
      sc24A
      0
      sc25A
      0
      sc26A
      0
      sc27A
      0
      sc28A)
   15))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A
      sc17A
      sc18A
      sc19A
      sc20A
      sc21A
      sc22A
      sc23A
      sc24A
      sc25A
      sc26A
      sc27A
      sc28A)
   0))

None
(declare-fun var0A () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun var1A () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun var2A () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun var3A () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun var4A () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun var5A () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun var6A () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun var7A () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun var8A () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun var9A () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun var10A () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun var11A () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun var12A () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun var13A () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun var14A () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun var15A () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun var16A () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun var17A () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun var18A () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun var19A () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun var20A () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun var21A () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun var22A () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun var23A () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun var24A () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun var25A () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun var26A () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun var27A () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun var28A () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(assert (<= (str.len var0A) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= "kQps" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (<= sc0A 1))
(assert (<= (str.len var1A) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= "kQts" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (<= sc1A 1))
(assert (<= (str.len var2A) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= "kaks" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (<= sc2A 1))
(assert (<= (str.len var3A) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= "pruwfs" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (<= sc3A 1))
(assert (<= (str.len var4A) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= "kQbz" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (<= sc4A 1))
(assert (<= (str.len var5A) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= "kQdz" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (<= sc5A 1))
(assert (<= (str.len var6A) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= "kagz" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (<= sc6A 1))
(assert (<= (str.len var7A) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= "hNvz" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (<= sc7A 1))
(assert (<= (str.len var8A) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= "flijz" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (<= sc8A 1))
(assert (<= (str.len var9A) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= "plQwz" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (<= sc9A 1))
(assert (<= (str.len var10A) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= "pjOez" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (<= sc10A 1))
(assert (<= (str.len var11A) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= "klQmz" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (<= sc11A 1))
(assert (<= (str.len var12A) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= "kQnz" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (<= sc12A 1))
(assert (<= (str.len var13A) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= "karz" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (<= sc13A 1))
(assert (<= (str.len var14A) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= "gHlz" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (<= sc14A 1))
(assert (<= (str.len var15A) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= "slQps" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (<= sc15A 1))
(assert (<= (str.len var16A) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= "hXts" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (<= sc16A 1))
(assert (<= (str.len var17A) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= "powks" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (<= sc17A 1))
(assert (<= (str.len var18A) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= "stQbz" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (<= sc18A 1))
(assert (<= (str.len var19A) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= "hajdz" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (<= sc19A 1))
(assert (<= (str.len var20A) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= "dXgz" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (<= sc20A 1))
(assert (<= (str.len var21A) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= "lQfs" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (<= sc21A 1))
(assert (<= (str.len var22A) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= "pXZs" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (<= sc22A 1))
(assert (<= (str.len var23A) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= "slQmz" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (<= sc23A 1))
(assert (<= (str.len var24A) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= "kQnz" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (<= sc24A 1))
(assert (<= (str.len var25A) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= "hQKz" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (<= sc25A 1))
(assert (<= (str.len var26A) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= "Zrajvz" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (<= sc26A 1))
(assert (<= (str.len var27A) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= "bej1z" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (<= sc27A 1))
(assert (<= (str.len var28A) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= "flajz" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (<= sc28A 1))
(assert (= (+ 0
      0
      sc0A
      0
      sc1A
      0
      sc2A
      0
      sc3A
      0
      sc4A
      0
      sc5A
      0
      sc6A
      0
      sc7A
      0
      sc8A
      0
      sc9A
      0
      sc10A
      0
      sc11A
      0
      sc12A
      0
      sc13A
      0
      sc14A
      0
      sc15A
      0
      sc16A
      0
      sc17A
      0
      sc18A
      0
      sc19A
      0
      sc20A
      0
      sc21A
      0
      sc22A
      0
      sc23A
      0
      sc24A
      0
      sc25A
      0
      sc26A
      0
      sc27A
      0
      sc28A)
   16))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A
      sc17A
      sc18A
      sc19A
      sc20A
      sc21A
      sc22A
      sc23A
      sc24A
      sc25A
      sc26A
      sc27A
      sc28A)
   0))

None
(declare-fun var0A () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun var1A () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun var2A () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun var3A () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun var4A () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun var5A () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun var6A () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun var7A () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun var8A () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun var9A () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun var10A () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun var11A () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun var12A () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun var13A () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun var14A () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun var15A () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun var16A () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun var17A () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun var18A () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun var19A () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun var20A () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun var21A () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun var22A () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun var23A () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun var24A () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun var25A () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun var26A () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun var27A () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun var28A () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(assert (<= (str.len var0A) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= "kQps" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (<= sc0A 1))
(assert (<= (str.len var1A) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= "kQts" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (<= sc1A 1))
(assert (<= (str.len var2A) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= "kaks" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (<= sc2A 1))
(assert (<= (str.len var3A) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= "pruwfs" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (<= sc3A 1))
(assert (<= (str.len var4A) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= "kQbz" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (<= sc4A 1))
(assert (<= (str.len var5A) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= "kQdz" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (<= sc5A 1))
(assert (<= (str.len var6A) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= "kagz" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (<= sc6A 1))
(assert (<= (str.len var7A) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= "hNvz" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (<= sc7A 1))
(assert (<= (str.len var8A) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= "flijz" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (<= sc8A 1))
(assert (<= (str.len var9A) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= "plQwz" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (<= sc9A 1))
(assert (<= (str.len var10A) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= "pjOez" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (<= sc10A 1))
(assert (<= (str.len var11A) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= "klQmz" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (<= sc11A 1))
(assert (<= (str.len var12A) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= "kQnz" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (<= sc12A 1))
(assert (<= (str.len var13A) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= "karz" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (<= sc13A 1))
(assert (<= (str.len var14A) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= "gHlz" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (<= sc14A 1))
(assert (<= (str.len var15A) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= "slQps" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (<= sc15A 1))
(assert (<= (str.len var16A) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= "hXts" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (<= sc16A 1))
(assert (<= (str.len var17A) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= "powks" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (<= sc17A 1))
(assert (<= (str.len var18A) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= "stQbz" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (<= sc18A 1))
(assert (<= (str.len var19A) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= "hajdz" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (<= sc19A 1))
(assert (<= (str.len var20A) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= "dXgz" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (<= sc20A 1))
(assert (<= (str.len var21A) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= "lQfs" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (<= sc21A 1))
(assert (<= (str.len var22A) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= "pXZs" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (<= sc22A 1))
(assert (<= (str.len var23A) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= "slQmz" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (<= sc23A 1))
(assert (<= (str.len var24A) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= "kQnz" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (<= sc24A 1))
(assert (<= (str.len var25A) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= "hQKz" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (<= sc25A 1))
(assert (<= (str.len var26A) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= "Zrajvz" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (<= sc26A 1))
(assert (<= (str.len var27A) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= "bej1z" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (<= sc27A 1))
(assert (<= (str.len var28A) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= "flajz" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (<= sc28A 1))
(assert (= (+ 0
      0
      sc0A
      0
      sc1A
      0
      sc2A
      0
      sc3A
      0
      sc4A
      0
      sc5A
      0
      sc6A
      0
      sc7A
      0
      sc8A
      0
      sc9A
      0
      sc10A
      0
      sc11A
      0
      sc12A
      0
      sc13A
      0
      sc14A
      0
      sc15A
      0
      sc16A
      0
      sc17A
      0
      sc18A
      0
      sc19A
      0
      sc20A
      0
      sc21A
      0
      sc22A
      0
      sc23A
      0
      sc24A
      0
      sc25A
      0
      sc26A
      0
      sc27A
      0
      sc28A)
   17))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A
      sc17A
      sc18A
      sc19A
      sc20A
      sc21A
      sc22A
      sc23A
      sc24A
      sc25A
      sc26A
      sc27A
      sc28A)
   0))

None
(declare-fun var0A () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun var1A () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun var2A () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun var3A () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun var4A () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun var5A () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun var6A () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun var7A () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun var8A () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun var9A () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun var10A () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun var11A () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun var12A () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun var13A () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun var14A () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun var15A () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun var16A () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun var17A () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun var18A () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun var19A () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun var20A () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun var21A () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun var22A () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun var23A () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun var24A () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun var25A () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun var26A () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun var27A () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun var28A () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(assert (<= (str.len var0A) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= "kQps" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (<= sc0A 1))
(assert (<= (str.len var1A) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= "kQts" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (<= sc1A 1))
(assert (<= (str.len var2A) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= "kaks" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (<= sc2A 1))
(assert (<= (str.len var3A) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= "pruwfs" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (<= sc3A 1))
(assert (<= (str.len var4A) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= "kQbz" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (<= sc4A 1))
(assert (<= (str.len var5A) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= "kQdz" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (<= sc5A 1))
(assert (<= (str.len var6A) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= "kagz" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (<= sc6A 1))
(assert (<= (str.len var7A) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= "hNvz" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (<= sc7A 1))
(assert (<= (str.len var8A) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= "flijz" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (<= sc8A 1))
(assert (<= (str.len var9A) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= "plQwz" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (<= sc9A 1))
(assert (<= (str.len var10A) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= "pjOez" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (<= sc10A 1))
(assert (<= (str.len var11A) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= "klQmz" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (<= sc11A 1))
(assert (<= (str.len var12A) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= "kQnz" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (<= sc12A 1))
(assert (<= (str.len var13A) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= "karz" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (<= sc13A 1))
(assert (<= (str.len var14A) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= "gHlz" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (<= sc14A 1))
(assert (<= (str.len var15A) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= "slQps" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (<= sc15A 1))
(assert (<= (str.len var16A) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= "hXts" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (<= sc16A 1))
(assert (<= (str.len var17A) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= "powks" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (<= sc17A 1))
(assert (<= (str.len var18A) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= "stQbz" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (<= sc18A 1))
(assert (<= (str.len var19A) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= "hajdz" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (<= sc19A 1))
(assert (<= (str.len var20A) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= "dXgz" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (<= sc20A 1))
(assert (<= (str.len var21A) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= "lQfs" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (<= sc21A 1))
(assert (<= (str.len var22A) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= "pXZs" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (<= sc22A 1))
(assert (<= (str.len var23A) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= "slQmz" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (<= sc23A 1))
(assert (<= (str.len var24A) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= "kQnz" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (<= sc24A 1))
(assert (<= (str.len var25A) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= "hQKz" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (<= sc25A 1))
(assert (<= (str.len var26A) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= "Zrajvz" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (<= sc26A 1))
(assert (<= (str.len var27A) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= "bej1z" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (<= sc27A 1))
(assert (<= (str.len var28A) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= "flajz" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (<= sc28A 1))
(assert (= (+ 0
      0
      sc0A
      0
      sc1A
      0
      sc2A
      0
      sc3A
      0
      sc4A
      0
      sc5A
      0
      sc6A
      0
      sc7A
      0
      sc8A
      0
      sc9A
      0
      sc10A
      0
      sc11A
      0
      sc12A
      0
      sc13A
      0
      sc14A
      0
      sc15A
      0
      sc16A
      0
      sc17A
      0
      sc18A
      0
      sc19A
      0
      sc20A
      0
      sc21A
      0
      sc22A
      0
      sc23A
      0
      sc24A
      0
      sc25A
      0
      sc26A
      0
      sc27A
      0
      sc28A)
   18))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A
      sc17A
      sc18A
      sc19A
      sc20A
      sc21A
      sc22A
      sc23A
      sc24A
      sc25A
      sc26A
      sc27A
      sc28A)
   0))

None
(declare-fun var0A () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun var1A () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun var2A () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun var3A () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun var4A () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun var5A () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun var6A () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun var7A () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun var8A () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun var9A () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun var10A () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun var11A () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun var12A () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun var13A () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun var14A () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun var15A () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun var16A () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(declare-fun var17A () String)
(declare-fun unch217A () String)
(declare-fun ch17A () String)
(declare-fun unch117A () String)
(declare-fun stem17 () String)
(declare-fun l17 () Int)
(declare-fun sc17A () Int)
(declare-fun var18A () String)
(declare-fun unch218A () String)
(declare-fun ch18A () String)
(declare-fun unch118A () String)
(declare-fun stem18 () String)
(declare-fun l18 () Int)
(declare-fun sc18A () Int)
(declare-fun var19A () String)
(declare-fun unch219A () String)
(declare-fun ch19A () String)
(declare-fun unch119A () String)
(declare-fun stem19 () String)
(declare-fun l19 () Int)
(declare-fun sc19A () Int)
(declare-fun var20A () String)
(declare-fun unch220A () String)
(declare-fun ch20A () String)
(declare-fun unch120A () String)
(declare-fun stem20 () String)
(declare-fun l20 () Int)
(declare-fun sc20A () Int)
(declare-fun var21A () String)
(declare-fun unch221A () String)
(declare-fun ch21A () String)
(declare-fun unch121A () String)
(declare-fun stem21 () String)
(declare-fun l21 () Int)
(declare-fun sc21A () Int)
(declare-fun var22A () String)
(declare-fun unch222A () String)
(declare-fun ch22A () String)
(declare-fun unch122A () String)
(declare-fun stem22 () String)
(declare-fun l22 () Int)
(declare-fun sc22A () Int)
(declare-fun var23A () String)
(declare-fun unch223A () String)
(declare-fun ch23A () String)
(declare-fun unch123A () String)
(declare-fun stem23 () String)
(declare-fun l23 () Int)
(declare-fun sc23A () Int)
(declare-fun var24A () String)
(declare-fun unch224A () String)
(declare-fun ch24A () String)
(declare-fun unch124A () String)
(declare-fun stem24 () String)
(declare-fun l24 () Int)
(declare-fun sc24A () Int)
(declare-fun var25A () String)
(declare-fun unch225A () String)
(declare-fun ch25A () String)
(declare-fun unch125A () String)
(declare-fun stem25 () String)
(declare-fun l25 () Int)
(declare-fun sc25A () Int)
(declare-fun var26A () String)
(declare-fun unch226A () String)
(declare-fun ch26A () String)
(declare-fun unch126A () String)
(declare-fun stem26 () String)
(declare-fun l26 () Int)
(declare-fun sc26A () Int)
(declare-fun var27A () String)
(declare-fun unch227A () String)
(declare-fun ch27A () String)
(declare-fun unch127A () String)
(declare-fun stem27 () String)
(declare-fun l27 () Int)
(declare-fun sc27A () Int)
(declare-fun var28A () String)
(declare-fun unch228A () String)
(declare-fun ch28A () String)
(declare-fun unch128A () String)
(declare-fun stem28 () String)
(declare-fun l28 () Int)
(declare-fun sc28A () Int)
(assert (<= (str.len var0A) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= "kQps" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (<= sc0A 1))
(assert (<= (str.len var1A) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= "kQts" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (<= sc1A 1))
(assert (<= (str.len var2A) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= "kaks" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (<= sc2A 1))
(assert (<= (str.len var3A) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= "pruwfs" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (<= sc3A 1))
(assert (<= (str.len var4A) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= "kQbz" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (<= sc4A 1))
(assert (<= (str.len var5A) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= "kQdz" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (<= sc5A 1))
(assert (<= (str.len var6A) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= "kagz" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (<= sc6A 1))
(assert (<= (str.len var7A) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= "hNvz" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (<= sc7A 1))
(assert (<= (str.len var8A) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= "flijz" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (<= sc8A 1))
(assert (<= (str.len var9A) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= "plQwz" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (<= sc9A 1))
(assert (<= (str.len var10A) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= "pjOez" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (<= sc10A 1))
(assert (<= (str.len var11A) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= "klQmz" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (<= sc11A 1))
(assert (<= (str.len var12A) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= "kQnz" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (<= sc12A 1))
(assert (<= (str.len var13A) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= "karz" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (<= sc13A 1))
(assert (<= (str.len var14A) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= "gHlz" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (<= sc14A 1))
(assert (<= (str.len var15A) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= "slQps" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (<= sc15A 1))
(assert (<= (str.len var16A) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= "hXts" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (<= sc16A 1))
(assert (<= (str.len var17A) 1))
(assert (= (str.++ preA (str.++ stem17 sufA)) (str.++ unch117A (str.++ ch17A unch217A))))
(assert (= "powks" (str.++ unch117A (str.++ var17A unch217A))))
(assert (= (str.len stem17) l17))
(assert (= (ite (= ch17A var17A) 0 1) sc17A))
(assert (<= sc17A 1))
(assert (<= (str.len var18A) 1))
(assert (= (str.++ preA (str.++ stem18 sufA)) (str.++ unch118A (str.++ ch18A unch218A))))
(assert (= "stQbz" (str.++ unch118A (str.++ var18A unch218A))))
(assert (= (str.len stem18) l18))
(assert (= (ite (= ch18A var18A) 0 1) sc18A))
(assert (<= sc18A 1))
(assert (<= (str.len var19A) 1))
(assert (= (str.++ preA (str.++ stem19 sufA)) (str.++ unch119A (str.++ ch19A unch219A))))
(assert (= "hajdz" (str.++ unch119A (str.++ var19A unch219A))))
(assert (= (str.len stem19) l19))
(assert (= (ite (= ch19A var19A) 0 1) sc19A))
(assert (<= sc19A 1))
(assert (<= (str.len var20A) 1))
(assert (= (str.++ preA (str.++ stem20 sufA)) (str.++ unch120A (str.++ ch20A unch220A))))
(assert (= "dXgz" (str.++ unch120A (str.++ var20A unch220A))))
(assert (= (str.len stem20) l20))
(assert (= (ite (= ch20A var20A) 0 1) sc20A))
(assert (<= sc20A 1))
(assert (<= (str.len var21A) 1))
(assert (= (str.++ preA (str.++ stem21 sufA)) (str.++ unch121A (str.++ ch21A unch221A))))
(assert (= "lQfs" (str.++ unch121A (str.++ var21A unch221A))))
(assert (= (str.len stem21) l21))
(assert (= (ite (= ch21A var21A) 0 1) sc21A))
(assert (<= sc21A 1))
(assert (<= (str.len var22A) 1))
(assert (= (str.++ preA (str.++ stem22 sufA)) (str.++ unch122A (str.++ ch22A unch222A))))
(assert (= "pXZs" (str.++ unch122A (str.++ var22A unch222A))))
(assert (= (str.len stem22) l22))
(assert (= (ite (= ch22A var22A) 0 1) sc22A))
(assert (<= sc22A 1))
(assert (<= (str.len var23A) 1))
(assert (= (str.++ preA (str.++ stem23 sufA)) (str.++ unch123A (str.++ ch23A unch223A))))
(assert (= "slQmz" (str.++ unch123A (str.++ var23A unch223A))))
(assert (= (str.len stem23) l23))
(assert (= (ite (= ch23A var23A) 0 1) sc23A))
(assert (<= sc23A 1))
(assert (<= (str.len var24A) 1))
(assert (= (str.++ preA (str.++ stem24 sufA)) (str.++ unch124A (str.++ ch24A unch224A))))
(assert (= "kQnz" (str.++ unch124A (str.++ var24A unch224A))))
(assert (= (str.len stem24) l24))
(assert (= (ite (= ch24A var24A) 0 1) sc24A))
(assert (<= sc24A 1))
(assert (<= (str.len var25A) 1))
(assert (= (str.++ preA (str.++ stem25 sufA)) (str.++ unch125A (str.++ ch25A unch225A))))
(assert (= "hQKz" (str.++ unch125A (str.++ var25A unch225A))))
(assert (= (str.len stem25) l25))
(assert (= (ite (= ch25A var25A) 0 1) sc25A))
(assert (<= sc25A 1))
(assert (<= (str.len var26A) 1))
(assert (= (str.++ preA (str.++ stem26 sufA)) (str.++ unch126A (str.++ ch26A unch226A))))
(assert (= "Zrajvz" (str.++ unch126A (str.++ var26A unch226A))))
(assert (= (str.len stem26) l26))
(assert (= (ite (= ch26A var26A) 0 1) sc26A))
(assert (<= sc26A 1))
(assert (<= (str.len var27A) 1))
(assert (= (str.++ preA (str.++ stem27 sufA)) (str.++ unch127A (str.++ ch27A unch227A))))
(assert (= "bej1z" (str.++ unch127A (str.++ var27A unch227A))))
(assert (= (str.len stem27) l27))
(assert (= (ite (= ch27A var27A) 0 1) sc27A))
(assert (<= sc27A 1))
(assert (<= (str.len var28A) 1))
(assert (= (str.++ preA (str.++ stem28 sufA)) (str.++ unch128A (str.++ ch28A unch228A))))
(assert (= "flajz" (str.++ unch128A (str.++ var28A unch228A))))
(assert (= (str.len stem28) l28))
(assert (= (ite (= ch28A var28A) 0 1) sc28A))
(assert (<= sc28A 1))
(assert (= (+ 0
      0
      sc0A
      0
      sc1A
      0
      sc2A
      0
      sc3A
      0
      sc4A
      0
      sc5A
      0
      sc6A
      0
      sc7A
      0
      sc8A
      0
      sc9A
      0
      sc10A
      0
      sc11A
      0
      sc12A
      0
      sc13A
      0
      sc14A
      0
      sc15A
      0
      sc16A
      0
      sc17A
      0
      sc18A
      0
      sc19A
      0
      sc20A
      0
      sc21A
      0
      sc22A
      0
      sc23A
      0
      sc24A
      0
      sc25A
      0
      sc26A
      0
      sc27A
      0
      sc28A)
   19))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A
      sc17A
      sc18A
      sc19A
      sc20A
      sc21A
      sc22A
      sc23A
      sc24A
      sc25A
      sc26A
      sc27A
      sc28A)
   0))

None
5.35user 0.30system 0:05.67elapsed 99%CPU (0avgtext+0avgdata 42528maxresident)k
0inputs+496outputs (0major+6260minor)pagefaults 0swaps
