[['klaptə'], ['krabdə'], ['rɛdə'], ['vɪstə'], ['razdə'], ['zɛtə'], ['maftə'], ['klovdə'], ['lɛɣdə'], ['laxtə'], ['rumdə'], ['zundə'], ['meŋdə'], ['rurdə'], ['rɔldə'], ['ajdə'], ['skidə']]
klaptə  >  ['k', 'l', 'a', 'p', 't', 'H'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
krabdə  >  ['k', 'r', 'a', 'b', 'd', 'H'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
rɛdə  >  ['r', 'G', 'd', 'H'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g'}
vɪstə  >  ['v', 'O', 's', 't', 'H'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɪ': 'O'}
razdə  >  ['r', 'a', 'z', 'd', 'H'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɪ': 'O'}
zɛtə  >  ['z', 'G', 't', 'H'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɪ': 'O'}
maftə  >  ['m', 'a', 'f', 't', 'H'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɪ': 'O'}
klovdə  >  ['k', 'l', 'o', 'v', 'd', 'H'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɪ': 'O'}
lɛɣdə  >  ['l', 'G', 'X', 'd', 'H'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɪ': 'O', 'ɣ': 'X'}
laxtə  >  ['l', 'a', 'x', 't', 'H'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɪ': 'O', 'ɣ': 'X'}
rumdə  >  ['r', 'u', 'm', 'd', 'H'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɪ': 'O', 'ɣ': 'X'}
zundə  >  ['z', 'u', 'n', 'd', 'H'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɪ': 'O', 'ɣ': 'X'}
meŋdə  >  ['m', 'e', 'K', 'd', 'H'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɪ': 'O', 'ɣ': 'X'}
rurdə  >  ['r', 'u', 'r', 'd', 'H'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɪ': 'O', 'ɣ': 'X'}
rɔldə  >  ['r', 'Z', 'l', 'd', 'H'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɪ': 'O', 'ɣ': 'X', 'ɔ': 'Z'}
ajdə  >  ['a', 'j', 'd', 'H'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɪ': 'O', 'ɣ': 'X', 'ɔ': 'Z'}
skidə  >  ['s', 'k', 'i', 'd', 'H'] {'ø': 'A', 'ʃ': 'B', 'ɯ': 'C', 'ʤ': 'D', 'ʧ': 'E', 'ː': 'F', 'ɛ': 'G', 'ə': 'H', 'ɑ': 'I', 'œ': 'J', 'ŋ': 'K', 'ʋ': 'L', 'ʌ': 'M', 'ʊ': 'N', 'ʦ': 'P', 'æ': 'Q', 'ʣ': 'R', 'ʈ': 'S', 'ɖ': 'T', 'ʒ': 'U', 'ɱ': 'V', 'ɩ': 'W', 'ɲ': 'Y', 'ɡ': 'g', 'ɪ': 'O', 'ɣ': 'X', 'ɔ': 'Z'}
(declare-fun var0A () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun var1A () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun var2A () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun var3A () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun var4A () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun var5A () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun var6A () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun var7A () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun var8A () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun var9A () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun var10A () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun var11A () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun var12A () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun var13A () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun var14A () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun var15A () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun var16A () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(assert (<= (str.len var0A) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= "klaptH" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (<= sc0A 1))
(assert (<= (str.len var1A) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= "krabdH" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (<= sc1A 1))
(assert (<= (str.len var2A) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= "rGdH" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (<= sc2A 1))
(assert (<= (str.len var3A) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= "vOstH" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (<= sc3A 1))
(assert (<= (str.len var4A) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= "razdH" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (<= sc4A 1))
(assert (<= (str.len var5A) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= "zGtH" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (<= sc5A 1))
(assert (<= (str.len var6A) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= "maftH" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (<= sc6A 1))
(assert (<= (str.len var7A) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= "klovdH" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (<= sc7A 1))
(assert (<= (str.len var8A) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= "lGXdH" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (<= sc8A 1))
(assert (<= (str.len var9A) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= "laxtH" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (<= sc9A 1))
(assert (<= (str.len var10A) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= "rumdH" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (<= sc10A 1))
(assert (<= (str.len var11A) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= "zundH" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (<= sc11A 1))
(assert (<= (str.len var12A) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= "meKdH" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (<= sc12A 1))
(assert (<= (str.len var13A) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= "rurdH" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (<= sc13A 1))
(assert (<= (str.len var14A) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= "rZldH" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (<= sc14A 1))
(assert (<= (str.len var15A) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= "ajdH" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (<= sc15A 1))
(assert (<= (str.len var16A) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= "skidH" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (<= sc16A 1))
(assert (= (+ 0
      0
      sc0A
      0
      sc1A
      0
      sc2A
      0
      sc3A
      0
      sc4A
      0
      sc5A
      0
      sc6A
      0
      sc7A
      0
      sc8A
      0
      sc9A
      0
      sc10A
      0
      sc11A
      0
      sc12A
      0
      sc13A
      0
      sc14A
      0
      sc15A
      0
      sc16A)
   4))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A)
   0))

None
(declare-fun var0A () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun var1A () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun var2A () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun var3A () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun var4A () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun var5A () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun var6A () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun var7A () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun var8A () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun var9A () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun var10A () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun var11A () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun var12A () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun var13A () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun var14A () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun var15A () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun var16A () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(assert (<= (str.len var0A) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= "klaptH" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (<= sc0A 1))
(assert (<= (str.len var1A) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= "krabdH" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (<= sc1A 1))
(assert (<= (str.len var2A) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= "rGdH" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (<= sc2A 1))
(assert (<= (str.len var3A) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= "vOstH" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (<= sc3A 1))
(assert (<= (str.len var4A) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= "razdH" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (<= sc4A 1))
(assert (<= (str.len var5A) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= "zGtH" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (<= sc5A 1))
(assert (<= (str.len var6A) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= "maftH" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (<= sc6A 1))
(assert (<= (str.len var7A) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= "klovdH" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (<= sc7A 1))
(assert (<= (str.len var8A) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= "lGXdH" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (<= sc8A 1))
(assert (<= (str.len var9A) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= "laxtH" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (<= sc9A 1))
(assert (<= (str.len var10A) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= "rumdH" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (<= sc10A 1))
(assert (<= (str.len var11A) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= "zundH" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (<= sc11A 1))
(assert (<= (str.len var12A) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= "meKdH" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (<= sc12A 1))
(assert (<= (str.len var13A) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= "rurdH" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (<= sc13A 1))
(assert (<= (str.len var14A) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= "rZldH" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (<= sc14A 1))
(assert (<= (str.len var15A) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= "ajdH" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (<= sc15A 1))
(assert (<= (str.len var16A) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= "skidH" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (<= sc16A 1))
(assert (= (+ 0
      0
      sc0A
      0
      sc1A
      0
      sc2A
      0
      sc3A
      0
      sc4A
      0
      sc5A
      0
      sc6A
      0
      sc7A
      0
      sc8A
      0
      sc9A
      0
      sc10A
      0
      sc11A
      0
      sc12A
      0
      sc13A
      0
      sc14A
      0
      sc15A
      0
      sc16A)
   5))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A)
   0))

None
(declare-fun var0A () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun var1A () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun var2A () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun var3A () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun var4A () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun var5A () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun var6A () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun var7A () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun var8A () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun var9A () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun var10A () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun var11A () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun var12A () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun var13A () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun var14A () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun var15A () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun var16A () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(assert (<= (str.len var0A) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= "klaptH" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (<= sc0A 1))
(assert (<= (str.len var1A) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= "krabdH" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (<= sc1A 1))
(assert (<= (str.len var2A) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= "rGdH" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (<= sc2A 1))
(assert (<= (str.len var3A) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= "vOstH" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (<= sc3A 1))
(assert (<= (str.len var4A) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= "razdH" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (<= sc4A 1))
(assert (<= (str.len var5A) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= "zGtH" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (<= sc5A 1))
(assert (<= (str.len var6A) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= "maftH" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (<= sc6A 1))
(assert (<= (str.len var7A) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= "klovdH" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (<= sc7A 1))
(assert (<= (str.len var8A) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= "lGXdH" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (<= sc8A 1))
(assert (<= (str.len var9A) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= "laxtH" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (<= sc9A 1))
(assert (<= (str.len var10A) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= "rumdH" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (<= sc10A 1))
(assert (<= (str.len var11A) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= "zundH" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (<= sc11A 1))
(assert (<= (str.len var12A) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= "meKdH" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (<= sc12A 1))
(assert (<= (str.len var13A) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= "rurdH" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (<= sc13A 1))
(assert (<= (str.len var14A) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= "rZldH" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (<= sc14A 1))
(assert (<= (str.len var15A) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= "ajdH" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (<= sc15A 1))
(assert (<= (str.len var16A) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= "skidH" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (<= sc16A 1))
(assert (= (+ 0
      0
      sc0A
      0
      sc1A
      0
      sc2A
      0
      sc3A
      0
      sc4A
      0
      sc5A
      0
      sc6A
      0
      sc7A
      0
      sc8A
      0
      sc9A
      0
      sc10A
      0
      sc11A
      0
      sc12A
      0
      sc13A
      0
      sc14A
      0
      sc15A
      0
      sc16A)
   6))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A)
   0))

None
(declare-fun var0A () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun var1A () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun var2A () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun var3A () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun var4A () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun var5A () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun var6A () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun var7A () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun var8A () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun var9A () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun var10A () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun var11A () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun var12A () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun var13A () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun var14A () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun var15A () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun var16A () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(assert (<= (str.len var0A) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= "klaptH" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (<= sc0A 1))
(assert (<= (str.len var1A) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= "krabdH" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (<= sc1A 1))
(assert (<= (str.len var2A) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= "rGdH" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (<= sc2A 1))
(assert (<= (str.len var3A) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= "vOstH" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (<= sc3A 1))
(assert (<= (str.len var4A) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= "razdH" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (<= sc4A 1))
(assert (<= (str.len var5A) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= "zGtH" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (<= sc5A 1))
(assert (<= (str.len var6A) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= "maftH" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (<= sc6A 1))
(assert (<= (str.len var7A) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= "klovdH" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (<= sc7A 1))
(assert (<= (str.len var8A) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= "lGXdH" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (<= sc8A 1))
(assert (<= (str.len var9A) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= "laxtH" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (<= sc9A 1))
(assert (<= (str.len var10A) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= "rumdH" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (<= sc10A 1))
(assert (<= (str.len var11A) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= "zundH" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (<= sc11A 1))
(assert (<= (str.len var12A) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= "meKdH" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (<= sc12A 1))
(assert (<= (str.len var13A) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= "rurdH" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (<= sc13A 1))
(assert (<= (str.len var14A) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= "rZldH" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (<= sc14A 1))
(assert (<= (str.len var15A) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= "ajdH" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (<= sc15A 1))
(assert (<= (str.len var16A) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= "skidH" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (<= sc16A 1))
(assert (= (+ 0
      0
      sc0A
      0
      sc1A
      0
      sc2A
      0
      sc3A
      0
      sc4A
      0
      sc5A
      0
      sc6A
      0
      sc7A
      0
      sc8A
      0
      sc9A
      0
      sc10A
      0
      sc11A
      0
      sc12A
      0
      sc13A
      0
      sc14A
      0
      sc15A
      0
      sc16A)
   7))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A)
   0))

None
(declare-fun var0A () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun var1A () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun var2A () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun var3A () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun var4A () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun var5A () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun var6A () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun var7A () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun var8A () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun var9A () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun var10A () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun var11A () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun var12A () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun var13A () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun var14A () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun var15A () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun var16A () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(assert (<= (str.len var0A) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= "klaptH" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (<= sc0A 1))
(assert (<= (str.len var1A) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= "krabdH" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (<= sc1A 1))
(assert (<= (str.len var2A) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= "rGdH" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (<= sc2A 1))
(assert (<= (str.len var3A) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= "vOstH" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (<= sc3A 1))
(assert (<= (str.len var4A) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= "razdH" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (<= sc4A 1))
(assert (<= (str.len var5A) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= "zGtH" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (<= sc5A 1))
(assert (<= (str.len var6A) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= "maftH" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (<= sc6A 1))
(assert (<= (str.len var7A) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= "klovdH" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (<= sc7A 1))
(assert (<= (str.len var8A) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= "lGXdH" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (<= sc8A 1))
(assert (<= (str.len var9A) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= "laxtH" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (<= sc9A 1))
(assert (<= (str.len var10A) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= "rumdH" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (<= sc10A 1))
(assert (<= (str.len var11A) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= "zundH" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (<= sc11A 1))
(assert (<= (str.len var12A) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= "meKdH" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (<= sc12A 1))
(assert (<= (str.len var13A) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= "rurdH" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (<= sc13A 1))
(assert (<= (str.len var14A) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= "rZldH" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (<= sc14A 1))
(assert (<= (str.len var15A) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= "ajdH" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (<= sc15A 1))
(assert (<= (str.len var16A) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= "skidH" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (<= sc16A 1))
(assert (= (+ 0
      0
      sc0A
      0
      sc1A
      0
      sc2A
      0
      sc3A
      0
      sc4A
      0
      sc5A
      0
      sc6A
      0
      sc7A
      0
      sc8A
      0
      sc9A
      0
      sc10A
      0
      sc11A
      0
      sc12A
      0
      sc13A
      0
      sc14A
      0
      sc15A
      0
      sc16A)
   8))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A)
   0))

None
(declare-fun var0A () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun var1A () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun var2A () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun var3A () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun var4A () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun var5A () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun var6A () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun var7A () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun var8A () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun var9A () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun var10A () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun var11A () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun var12A () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun var13A () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun var14A () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun var15A () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun var16A () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(assert (<= (str.len var0A) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= "klaptH" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (<= sc0A 1))
(assert (<= (str.len var1A) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= "krabdH" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (<= sc1A 1))
(assert (<= (str.len var2A) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= "rGdH" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (<= sc2A 1))
(assert (<= (str.len var3A) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= "vOstH" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (<= sc3A 1))
(assert (<= (str.len var4A) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= "razdH" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (<= sc4A 1))
(assert (<= (str.len var5A) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= "zGtH" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (<= sc5A 1))
(assert (<= (str.len var6A) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= "maftH" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (<= sc6A 1))
(assert (<= (str.len var7A) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= "klovdH" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (<= sc7A 1))
(assert (<= (str.len var8A) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= "lGXdH" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (<= sc8A 1))
(assert (<= (str.len var9A) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= "laxtH" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (<= sc9A 1))
(assert (<= (str.len var10A) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= "rumdH" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (<= sc10A 1))
(assert (<= (str.len var11A) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= "zundH" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (<= sc11A 1))
(assert (<= (str.len var12A) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= "meKdH" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (<= sc12A 1))
(assert (<= (str.len var13A) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= "rurdH" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (<= sc13A 1))
(assert (<= (str.len var14A) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= "rZldH" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (<= sc14A 1))
(assert (<= (str.len var15A) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= "ajdH" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (<= sc15A 1))
(assert (<= (str.len var16A) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= "skidH" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (<= sc16A 1))
(assert (= (+ 0
      0
      sc0A
      0
      sc1A
      0
      sc2A
      0
      sc3A
      0
      sc4A
      0
      sc5A
      0
      sc6A
      0
      sc7A
      0
      sc8A
      0
      sc9A
      0
      sc10A
      0
      sc11A
      0
      sc12A
      0
      sc13A
      0
      sc14A
      0
      sc15A
      0
      sc16A)
   9))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A)
   0))

None
(declare-fun var0A () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun var1A () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun var2A () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun var3A () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun var4A () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun var5A () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun var6A () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun var7A () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun var8A () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun var9A () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun var10A () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun var11A () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun var12A () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun var13A () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun var14A () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun var15A () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun var16A () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(assert (<= (str.len var0A) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= "klaptH" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (<= sc0A 1))
(assert (<= (str.len var1A) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= "krabdH" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (<= sc1A 1))
(assert (<= (str.len var2A) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= "rGdH" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (<= sc2A 1))
(assert (<= (str.len var3A) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= "vOstH" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (<= sc3A 1))
(assert (<= (str.len var4A) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= "razdH" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (<= sc4A 1))
(assert (<= (str.len var5A) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= "zGtH" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (<= sc5A 1))
(assert (<= (str.len var6A) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= "maftH" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (<= sc6A 1))
(assert (<= (str.len var7A) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= "klovdH" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (<= sc7A 1))
(assert (<= (str.len var8A) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= "lGXdH" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (<= sc8A 1))
(assert (<= (str.len var9A) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= "laxtH" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (<= sc9A 1))
(assert (<= (str.len var10A) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= "rumdH" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (<= sc10A 1))
(assert (<= (str.len var11A) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= "zundH" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (<= sc11A 1))
(assert (<= (str.len var12A) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= "meKdH" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (<= sc12A 1))
(assert (<= (str.len var13A) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= "rurdH" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (<= sc13A 1))
(assert (<= (str.len var14A) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= "rZldH" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (<= sc14A 1))
(assert (<= (str.len var15A) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= "ajdH" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (<= sc15A 1))
(assert (<= (str.len var16A) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= "skidH" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (<= sc16A 1))
(assert (= (+ 0
      0
      sc0A
      0
      sc1A
      0
      sc2A
      0
      sc3A
      0
      sc4A
      0
      sc5A
      0
      sc6A
      0
      sc7A
      0
      sc8A
      0
      sc9A
      0
      sc10A
      0
      sc11A
      0
      sc12A
      0
      sc13A
      0
      sc14A
      0
      sc15A
      0
      sc16A)
   10))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A)
   0))

None
(declare-fun var0A () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun var1A () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun var2A () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun var3A () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun var4A () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun var5A () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun var6A () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun var7A () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun var8A () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun var9A () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun var10A () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun var11A () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun var12A () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun var13A () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun var14A () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun var15A () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun var16A () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(assert (<= (str.len var0A) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= "klaptH" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (<= sc0A 1))
(assert (<= (str.len var1A) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= "krabdH" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (<= sc1A 1))
(assert (<= (str.len var2A) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= "rGdH" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (<= sc2A 1))
(assert (<= (str.len var3A) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= "vOstH" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (<= sc3A 1))
(assert (<= (str.len var4A) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= "razdH" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (<= sc4A 1))
(assert (<= (str.len var5A) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= "zGtH" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (<= sc5A 1))
(assert (<= (str.len var6A) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= "maftH" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (<= sc6A 1))
(assert (<= (str.len var7A) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= "klovdH" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (<= sc7A 1))
(assert (<= (str.len var8A) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= "lGXdH" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (<= sc8A 1))
(assert (<= (str.len var9A) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= "laxtH" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (<= sc9A 1))
(assert (<= (str.len var10A) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= "rumdH" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (<= sc10A 1))
(assert (<= (str.len var11A) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= "zundH" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (<= sc11A 1))
(assert (<= (str.len var12A) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= "meKdH" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (<= sc12A 1))
(assert (<= (str.len var13A) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= "rurdH" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (<= sc13A 1))
(assert (<= (str.len var14A) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= "rZldH" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (<= sc14A 1))
(assert (<= (str.len var15A) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= "ajdH" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (<= sc15A 1))
(assert (<= (str.len var16A) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= "skidH" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (<= sc16A 1))
(assert (= (+ 0
      0
      sc0A
      0
      sc1A
      0
      sc2A
      0
      sc3A
      0
      sc4A
      0
      sc5A
      0
      sc6A
      0
      sc7A
      0
      sc8A
      0
      sc9A
      0
      sc10A
      0
      sc11A
      0
      sc12A
      0
      sc13A
      0
      sc14A
      0
      sc15A
      0
      sc16A)
   11))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A)
   0))

None
(declare-fun var0A () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun var1A () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun var2A () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun var3A () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun var4A () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun var5A () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun var6A () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun var7A () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun var8A () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun var9A () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun var10A () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun var11A () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun var12A () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun var13A () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun var14A () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun var15A () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun var16A () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(assert (<= (str.len var0A) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= "klaptH" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (<= sc0A 1))
(assert (<= (str.len var1A) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= "krabdH" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (<= sc1A 1))
(assert (<= (str.len var2A) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= "rGdH" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (<= sc2A 1))
(assert (<= (str.len var3A) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= "vOstH" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (<= sc3A 1))
(assert (<= (str.len var4A) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= "razdH" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (<= sc4A 1))
(assert (<= (str.len var5A) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= "zGtH" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (<= sc5A 1))
(assert (<= (str.len var6A) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= "maftH" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (<= sc6A 1))
(assert (<= (str.len var7A) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= "klovdH" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (<= sc7A 1))
(assert (<= (str.len var8A) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= "lGXdH" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (<= sc8A 1))
(assert (<= (str.len var9A) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= "laxtH" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (<= sc9A 1))
(assert (<= (str.len var10A) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= "rumdH" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (<= sc10A 1))
(assert (<= (str.len var11A) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= "zundH" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (<= sc11A 1))
(assert (<= (str.len var12A) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= "meKdH" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (<= sc12A 1))
(assert (<= (str.len var13A) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= "rurdH" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (<= sc13A 1))
(assert (<= (str.len var14A) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= "rZldH" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (<= sc14A 1))
(assert (<= (str.len var15A) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= "ajdH" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (<= sc15A 1))
(assert (<= (str.len var16A) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= "skidH" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (<= sc16A 1))
(assert (= (+ 0
      0
      sc0A
      0
      sc1A
      0
      sc2A
      0
      sc3A
      0
      sc4A
      0
      sc5A
      0
      sc6A
      0
      sc7A
      0
      sc8A
      0
      sc9A
      0
      sc10A
      0
      sc11A
      0
      sc12A
      0
      sc13A
      0
      sc14A
      0
      sc15A
      0
      sc16A)
   12))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A)
   0))

None
(declare-fun var0A () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun var1A () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun var2A () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun var3A () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun var4A () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun var5A () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun var6A () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun var7A () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun var8A () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun var9A () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun var10A () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun var11A () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun var12A () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun var13A () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun var14A () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun var15A () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun var16A () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(assert (<= (str.len var0A) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= "klaptH" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (<= sc0A 1))
(assert (<= (str.len var1A) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= "krabdH" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (<= sc1A 1))
(assert (<= (str.len var2A) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= "rGdH" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (<= sc2A 1))
(assert (<= (str.len var3A) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= "vOstH" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (<= sc3A 1))
(assert (<= (str.len var4A) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= "razdH" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (<= sc4A 1))
(assert (<= (str.len var5A) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= "zGtH" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (<= sc5A 1))
(assert (<= (str.len var6A) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= "maftH" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (<= sc6A 1))
(assert (<= (str.len var7A) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= "klovdH" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (<= sc7A 1))
(assert (<= (str.len var8A) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= "lGXdH" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (<= sc8A 1))
(assert (<= (str.len var9A) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= "laxtH" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (<= sc9A 1))
(assert (<= (str.len var10A) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= "rumdH" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (<= sc10A 1))
(assert (<= (str.len var11A) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= "zundH" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (<= sc11A 1))
(assert (<= (str.len var12A) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= "meKdH" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (<= sc12A 1))
(assert (<= (str.len var13A) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= "rurdH" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (<= sc13A 1))
(assert (<= (str.len var14A) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= "rZldH" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (<= sc14A 1))
(assert (<= (str.len var15A) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= "ajdH" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (<= sc15A 1))
(assert (<= (str.len var16A) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= "skidH" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (<= sc16A 1))
(assert (= (+ 0
      0
      sc0A
      0
      sc1A
      0
      sc2A
      0
      sc3A
      0
      sc4A
      0
      sc5A
      0
      sc6A
      0
      sc7A
      0
      sc8A
      0
      sc9A
      0
      sc10A
      0
      sc11A
      0
      sc12A
      0
      sc13A
      0
      sc14A
      0
      sc15A
      0
      sc16A)
   13))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A)
   0))

None
(declare-fun var0A () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun var1A () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun var2A () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun var3A () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun var4A () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun var5A () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun var6A () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun var7A () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun var8A () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun var9A () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun var10A () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun var11A () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun var12A () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun var13A () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun var14A () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun var15A () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun var16A () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(assert (<= (str.len var0A) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= "klaptH" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (<= sc0A 1))
(assert (<= (str.len var1A) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= "krabdH" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (<= sc1A 1))
(assert (<= (str.len var2A) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= "rGdH" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (<= sc2A 1))
(assert (<= (str.len var3A) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= "vOstH" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (<= sc3A 1))
(assert (<= (str.len var4A) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= "razdH" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (<= sc4A 1))
(assert (<= (str.len var5A) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= "zGtH" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (<= sc5A 1))
(assert (<= (str.len var6A) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= "maftH" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (<= sc6A 1))
(assert (<= (str.len var7A) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= "klovdH" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (<= sc7A 1))
(assert (<= (str.len var8A) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= "lGXdH" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (<= sc8A 1))
(assert (<= (str.len var9A) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= "laxtH" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (<= sc9A 1))
(assert (<= (str.len var10A) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= "rumdH" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (<= sc10A 1))
(assert (<= (str.len var11A) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= "zundH" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (<= sc11A 1))
(assert (<= (str.len var12A) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= "meKdH" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (<= sc12A 1))
(assert (<= (str.len var13A) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= "rurdH" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (<= sc13A 1))
(assert (<= (str.len var14A) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= "rZldH" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (<= sc14A 1))
(assert (<= (str.len var15A) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= "ajdH" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (<= sc15A 1))
(assert (<= (str.len var16A) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= "skidH" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (<= sc16A 1))
(assert (= (+ 0
      0
      sc0A
      0
      sc1A
      0
      sc2A
      0
      sc3A
      0
      sc4A
      0
      sc5A
      0
      sc6A
      0
      sc7A
      0
      sc8A
      0
      sc9A
      0
      sc10A
      0
      sc11A
      0
      sc12A
      0
      sc13A
      0
      sc14A
      0
      sc15A
      0
      sc16A)
   14))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A)
   0))

None
(declare-fun var0A () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun var1A () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun var2A () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun var3A () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun var4A () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun var5A () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun var6A () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun var7A () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun var8A () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun var9A () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun var10A () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun var11A () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun var12A () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun var13A () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun var14A () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun var15A () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun var16A () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(assert (<= (str.len var0A) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= "klaptH" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (<= sc0A 1))
(assert (<= (str.len var1A) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= "krabdH" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (<= sc1A 1))
(assert (<= (str.len var2A) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= "rGdH" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (<= sc2A 1))
(assert (<= (str.len var3A) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= "vOstH" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (<= sc3A 1))
(assert (<= (str.len var4A) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= "razdH" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (<= sc4A 1))
(assert (<= (str.len var5A) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= "zGtH" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (<= sc5A 1))
(assert (<= (str.len var6A) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= "maftH" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (<= sc6A 1))
(assert (<= (str.len var7A) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= "klovdH" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (<= sc7A 1))
(assert (<= (str.len var8A) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= "lGXdH" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (<= sc8A 1))
(assert (<= (str.len var9A) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= "laxtH" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (<= sc9A 1))
(assert (<= (str.len var10A) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= "rumdH" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (<= sc10A 1))
(assert (<= (str.len var11A) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= "zundH" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (<= sc11A 1))
(assert (<= (str.len var12A) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= "meKdH" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (<= sc12A 1))
(assert (<= (str.len var13A) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= "rurdH" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (<= sc13A 1))
(assert (<= (str.len var14A) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= "rZldH" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (<= sc14A 1))
(assert (<= (str.len var15A) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= "ajdH" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (<= sc15A 1))
(assert (<= (str.len var16A) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= "skidH" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (<= sc16A 1))
(assert (= (+ 0
      0
      sc0A
      0
      sc1A
      0
      sc2A
      0
      sc3A
      0
      sc4A
      0
      sc5A
      0
      sc6A
      0
      sc7A
      0
      sc8A
      0
      sc9A
      0
      sc10A
      0
      sc11A
      0
      sc12A
      0
      sc13A
      0
      sc14A
      0
      sc15A
      0
      sc16A)
   15))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A)
   0))

None
(declare-fun var0A () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun var1A () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun var2A () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun var3A () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun var4A () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun var5A () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun var6A () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun var7A () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun var8A () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun var9A () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun var10A () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun var11A () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun var12A () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun var13A () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun var14A () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun var15A () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun var16A () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(assert (<= (str.len var0A) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= "klaptH" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (<= sc0A 1))
(assert (<= (str.len var1A) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= "krabdH" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (<= sc1A 1))
(assert (<= (str.len var2A) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= "rGdH" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (<= sc2A 1))
(assert (<= (str.len var3A) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= "vOstH" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (<= sc3A 1))
(assert (<= (str.len var4A) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= "razdH" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (<= sc4A 1))
(assert (<= (str.len var5A) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= "zGtH" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (<= sc5A 1))
(assert (<= (str.len var6A) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= "maftH" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (<= sc6A 1))
(assert (<= (str.len var7A) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= "klovdH" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (<= sc7A 1))
(assert (<= (str.len var8A) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= "lGXdH" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (<= sc8A 1))
(assert (<= (str.len var9A) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= "laxtH" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (<= sc9A 1))
(assert (<= (str.len var10A) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= "rumdH" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (<= sc10A 1))
(assert (<= (str.len var11A) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= "zundH" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (<= sc11A 1))
(assert (<= (str.len var12A) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= "meKdH" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (<= sc12A 1))
(assert (<= (str.len var13A) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= "rurdH" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (<= sc13A 1))
(assert (<= (str.len var14A) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= "rZldH" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (<= sc14A 1))
(assert (<= (str.len var15A) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= "ajdH" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (<= sc15A 1))
(assert (<= (str.len var16A) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= "skidH" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (<= sc16A 1))
(assert (= (+ 0
      0
      sc0A
      0
      sc1A
      0
      sc2A
      0
      sc3A
      0
      sc4A
      0
      sc5A
      0
      sc6A
      0
      sc7A
      0
      sc8A
      0
      sc9A
      0
      sc10A
      0
      sc11A
      0
      sc12A
      0
      sc13A
      0
      sc14A
      0
      sc15A
      0
      sc16A)
   16))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A)
   0))

None
(declare-fun var0A () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun var1A () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun var2A () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun var3A () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun var4A () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun var5A () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun var6A () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun var7A () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun var8A () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun var9A () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun var10A () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun var11A () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun var12A () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun var13A () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun var14A () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun var15A () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun var16A () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(assert (<= (str.len var0A) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= "klaptH" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (<= sc0A 1))
(assert (<= (str.len var1A) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= "krabdH" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (<= sc1A 1))
(assert (<= (str.len var2A) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= "rGdH" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (<= sc2A 1))
(assert (<= (str.len var3A) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= "vOstH" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (<= sc3A 1))
(assert (<= (str.len var4A) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= "razdH" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (<= sc4A 1))
(assert (<= (str.len var5A) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= "zGtH" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (<= sc5A 1))
(assert (<= (str.len var6A) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= "maftH" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (<= sc6A 1))
(assert (<= (str.len var7A) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= "klovdH" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (<= sc7A 1))
(assert (<= (str.len var8A) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= "lGXdH" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (<= sc8A 1))
(assert (<= (str.len var9A) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= "laxtH" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (<= sc9A 1))
(assert (<= (str.len var10A) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= "rumdH" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (<= sc10A 1))
(assert (<= (str.len var11A) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= "zundH" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (<= sc11A 1))
(assert (<= (str.len var12A) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= "meKdH" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (<= sc12A 1))
(assert (<= (str.len var13A) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= "rurdH" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (<= sc13A 1))
(assert (<= (str.len var14A) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= "rZldH" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (<= sc14A 1))
(assert (<= (str.len var15A) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= "ajdH" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (<= sc15A 1))
(assert (<= (str.len var16A) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= "skidH" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (<= sc16A 1))
(assert (= (+ 0
      0
      sc0A
      0
      sc1A
      0
      sc2A
      0
      sc3A
      0
      sc4A
      0
      sc5A
      0
      sc6A
      0
      sc7A
      0
      sc8A
      0
      sc9A
      0
      sc10A
      0
      sc11A
      0
      sc12A
      0
      sc13A
      0
      sc14A
      0
      sc15A
      0
      sc16A)
   17))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A)
   0))

None
(declare-fun var0A () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun var1A () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun var2A () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun var3A () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun var4A () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun var5A () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun var6A () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun var7A () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun var8A () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun var9A () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun var10A () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun var11A () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun var12A () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun var13A () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun var14A () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun var15A () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun var16A () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(assert (<= (str.len var0A) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= "klaptH" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (<= sc0A 1))
(assert (<= (str.len var1A) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= "krabdH" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (<= sc1A 1))
(assert (<= (str.len var2A) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= "rGdH" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (<= sc2A 1))
(assert (<= (str.len var3A) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= "vOstH" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (<= sc3A 1))
(assert (<= (str.len var4A) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= "razdH" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (<= sc4A 1))
(assert (<= (str.len var5A) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= "zGtH" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (<= sc5A 1))
(assert (<= (str.len var6A) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= "maftH" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (<= sc6A 1))
(assert (<= (str.len var7A) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= "klovdH" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (<= sc7A 1))
(assert (<= (str.len var8A) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= "lGXdH" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (<= sc8A 1))
(assert (<= (str.len var9A) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= "laxtH" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (<= sc9A 1))
(assert (<= (str.len var10A) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= "rumdH" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (<= sc10A 1))
(assert (<= (str.len var11A) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= "zundH" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (<= sc11A 1))
(assert (<= (str.len var12A) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= "meKdH" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (<= sc12A 1))
(assert (<= (str.len var13A) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= "rurdH" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (<= sc13A 1))
(assert (<= (str.len var14A) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= "rZldH" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (<= sc14A 1))
(assert (<= (str.len var15A) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= "ajdH" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (<= sc15A 1))
(assert (<= (str.len var16A) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= "skidH" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (<= sc16A 1))
(assert (= (+ 0
      0
      sc0A
      0
      sc1A
      0
      sc2A
      0
      sc3A
      0
      sc4A
      0
      sc5A
      0
      sc6A
      0
      sc7A
      0
      sc8A
      0
      sc9A
      0
      sc10A
      0
      sc11A
      0
      sc12A
      0
      sc13A
      0
      sc14A
      0
      sc15A
      0
      sc16A)
   18))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A)
   0))

None
(declare-fun var0A () String)
(declare-fun unch20A () String)
(declare-fun ch0A () String)
(declare-fun unch10A () String)
(declare-fun sufA () String)
(declare-fun stem0 () String)
(declare-fun preA () String)
(declare-fun l0 () Int)
(declare-fun sc0A () Int)
(declare-fun var1A () String)
(declare-fun unch21A () String)
(declare-fun ch1A () String)
(declare-fun unch11A () String)
(declare-fun stem1 () String)
(declare-fun l1 () Int)
(declare-fun sc1A () Int)
(declare-fun var2A () String)
(declare-fun unch22A () String)
(declare-fun ch2A () String)
(declare-fun unch12A () String)
(declare-fun stem2 () String)
(declare-fun l2 () Int)
(declare-fun sc2A () Int)
(declare-fun var3A () String)
(declare-fun unch23A () String)
(declare-fun ch3A () String)
(declare-fun unch13A () String)
(declare-fun stem3 () String)
(declare-fun l3 () Int)
(declare-fun sc3A () Int)
(declare-fun var4A () String)
(declare-fun unch24A () String)
(declare-fun ch4A () String)
(declare-fun unch14A () String)
(declare-fun stem4 () String)
(declare-fun l4 () Int)
(declare-fun sc4A () Int)
(declare-fun var5A () String)
(declare-fun unch25A () String)
(declare-fun ch5A () String)
(declare-fun unch15A () String)
(declare-fun stem5 () String)
(declare-fun l5 () Int)
(declare-fun sc5A () Int)
(declare-fun var6A () String)
(declare-fun unch26A () String)
(declare-fun ch6A () String)
(declare-fun unch16A () String)
(declare-fun stem6 () String)
(declare-fun l6 () Int)
(declare-fun sc6A () Int)
(declare-fun var7A () String)
(declare-fun unch27A () String)
(declare-fun ch7A () String)
(declare-fun unch17A () String)
(declare-fun stem7 () String)
(declare-fun l7 () Int)
(declare-fun sc7A () Int)
(declare-fun var8A () String)
(declare-fun unch28A () String)
(declare-fun ch8A () String)
(declare-fun unch18A () String)
(declare-fun stem8 () String)
(declare-fun l8 () Int)
(declare-fun sc8A () Int)
(declare-fun var9A () String)
(declare-fun unch29A () String)
(declare-fun ch9A () String)
(declare-fun unch19A () String)
(declare-fun stem9 () String)
(declare-fun l9 () Int)
(declare-fun sc9A () Int)
(declare-fun var10A () String)
(declare-fun unch210A () String)
(declare-fun ch10A () String)
(declare-fun unch110A () String)
(declare-fun stem10 () String)
(declare-fun l10 () Int)
(declare-fun sc10A () Int)
(declare-fun var11A () String)
(declare-fun unch211A () String)
(declare-fun ch11A () String)
(declare-fun unch111A () String)
(declare-fun stem11 () String)
(declare-fun l11 () Int)
(declare-fun sc11A () Int)
(declare-fun var12A () String)
(declare-fun unch212A () String)
(declare-fun ch12A () String)
(declare-fun unch112A () String)
(declare-fun stem12 () String)
(declare-fun l12 () Int)
(declare-fun sc12A () Int)
(declare-fun var13A () String)
(declare-fun unch213A () String)
(declare-fun ch13A () String)
(declare-fun unch113A () String)
(declare-fun stem13 () String)
(declare-fun l13 () Int)
(declare-fun sc13A () Int)
(declare-fun var14A () String)
(declare-fun unch214A () String)
(declare-fun ch14A () String)
(declare-fun unch114A () String)
(declare-fun stem14 () String)
(declare-fun l14 () Int)
(declare-fun sc14A () Int)
(declare-fun var15A () String)
(declare-fun unch215A () String)
(declare-fun ch15A () String)
(declare-fun unch115A () String)
(declare-fun stem15 () String)
(declare-fun l15 () Int)
(declare-fun sc15A () Int)
(declare-fun var16A () String)
(declare-fun unch216A () String)
(declare-fun ch16A () String)
(declare-fun unch116A () String)
(declare-fun stem16 () String)
(declare-fun l16 () Int)
(declare-fun sc16A () Int)
(assert (<= (str.len var0A) 1))
(assert (= (str.++ preA (str.++ stem0 sufA)) (str.++ unch10A (str.++ ch0A unch20A))))
(assert (= "klaptH" (str.++ unch10A (str.++ var0A unch20A))))
(assert (= (str.len stem0) l0))
(assert (= (ite (= ch0A var0A) 0 1) sc0A))
(assert (<= sc0A 1))
(assert (<= (str.len var1A) 1))
(assert (= (str.++ preA (str.++ stem1 sufA)) (str.++ unch11A (str.++ ch1A unch21A))))
(assert (= "krabdH" (str.++ unch11A (str.++ var1A unch21A))))
(assert (= (str.len stem1) l1))
(assert (= (ite (= ch1A var1A) 0 1) sc1A))
(assert (<= sc1A 1))
(assert (<= (str.len var2A) 1))
(assert (= (str.++ preA (str.++ stem2 sufA)) (str.++ unch12A (str.++ ch2A unch22A))))
(assert (= "rGdH" (str.++ unch12A (str.++ var2A unch22A))))
(assert (= (str.len stem2) l2))
(assert (= (ite (= ch2A var2A) 0 1) sc2A))
(assert (<= sc2A 1))
(assert (<= (str.len var3A) 1))
(assert (= (str.++ preA (str.++ stem3 sufA)) (str.++ unch13A (str.++ ch3A unch23A))))
(assert (= "vOstH" (str.++ unch13A (str.++ var3A unch23A))))
(assert (= (str.len stem3) l3))
(assert (= (ite (= ch3A var3A) 0 1) sc3A))
(assert (<= sc3A 1))
(assert (<= (str.len var4A) 1))
(assert (= (str.++ preA (str.++ stem4 sufA)) (str.++ unch14A (str.++ ch4A unch24A))))
(assert (= "razdH" (str.++ unch14A (str.++ var4A unch24A))))
(assert (= (str.len stem4) l4))
(assert (= (ite (= ch4A var4A) 0 1) sc4A))
(assert (<= sc4A 1))
(assert (<= (str.len var5A) 1))
(assert (= (str.++ preA (str.++ stem5 sufA)) (str.++ unch15A (str.++ ch5A unch25A))))
(assert (= "zGtH" (str.++ unch15A (str.++ var5A unch25A))))
(assert (= (str.len stem5) l5))
(assert (= (ite (= ch5A var5A) 0 1) sc5A))
(assert (<= sc5A 1))
(assert (<= (str.len var6A) 1))
(assert (= (str.++ preA (str.++ stem6 sufA)) (str.++ unch16A (str.++ ch6A unch26A))))
(assert (= "maftH" (str.++ unch16A (str.++ var6A unch26A))))
(assert (= (str.len stem6) l6))
(assert (= (ite (= ch6A var6A) 0 1) sc6A))
(assert (<= sc6A 1))
(assert (<= (str.len var7A) 1))
(assert (= (str.++ preA (str.++ stem7 sufA)) (str.++ unch17A (str.++ ch7A unch27A))))
(assert (= "klovdH" (str.++ unch17A (str.++ var7A unch27A))))
(assert (= (str.len stem7) l7))
(assert (= (ite (= ch7A var7A) 0 1) sc7A))
(assert (<= sc7A 1))
(assert (<= (str.len var8A) 1))
(assert (= (str.++ preA (str.++ stem8 sufA)) (str.++ unch18A (str.++ ch8A unch28A))))
(assert (= "lGXdH" (str.++ unch18A (str.++ var8A unch28A))))
(assert (= (str.len stem8) l8))
(assert (= (ite (= ch8A var8A) 0 1) sc8A))
(assert (<= sc8A 1))
(assert (<= (str.len var9A) 1))
(assert (= (str.++ preA (str.++ stem9 sufA)) (str.++ unch19A (str.++ ch9A unch29A))))
(assert (= "laxtH" (str.++ unch19A (str.++ var9A unch29A))))
(assert (= (str.len stem9) l9))
(assert (= (ite (= ch9A var9A) 0 1) sc9A))
(assert (<= sc9A 1))
(assert (<= (str.len var10A) 1))
(assert (= (str.++ preA (str.++ stem10 sufA)) (str.++ unch110A (str.++ ch10A unch210A))))
(assert (= "rumdH" (str.++ unch110A (str.++ var10A unch210A))))
(assert (= (str.len stem10) l10))
(assert (= (ite (= ch10A var10A) 0 1) sc10A))
(assert (<= sc10A 1))
(assert (<= (str.len var11A) 1))
(assert (= (str.++ preA (str.++ stem11 sufA)) (str.++ unch111A (str.++ ch11A unch211A))))
(assert (= "zundH" (str.++ unch111A (str.++ var11A unch211A))))
(assert (= (str.len stem11) l11))
(assert (= (ite (= ch11A var11A) 0 1) sc11A))
(assert (<= sc11A 1))
(assert (<= (str.len var12A) 1))
(assert (= (str.++ preA (str.++ stem12 sufA)) (str.++ unch112A (str.++ ch12A unch212A))))
(assert (= "meKdH" (str.++ unch112A (str.++ var12A unch212A))))
(assert (= (str.len stem12) l12))
(assert (= (ite (= ch12A var12A) 0 1) sc12A))
(assert (<= sc12A 1))
(assert (<= (str.len var13A) 1))
(assert (= (str.++ preA (str.++ stem13 sufA)) (str.++ unch113A (str.++ ch13A unch213A))))
(assert (= "rurdH" (str.++ unch113A (str.++ var13A unch213A))))
(assert (= (str.len stem13) l13))
(assert (= (ite (= ch13A var13A) 0 1) sc13A))
(assert (<= sc13A 1))
(assert (<= (str.len var14A) 1))
(assert (= (str.++ preA (str.++ stem14 sufA)) (str.++ unch114A (str.++ ch14A unch214A))))
(assert (= "rZldH" (str.++ unch114A (str.++ var14A unch214A))))
(assert (= (str.len stem14) l14))
(assert (= (ite (= ch14A var14A) 0 1) sc14A))
(assert (<= sc14A 1))
(assert (<= (str.len var15A) 1))
(assert (= (str.++ preA (str.++ stem15 sufA)) (str.++ unch115A (str.++ ch15A unch215A))))
(assert (= "ajdH" (str.++ unch115A (str.++ var15A unch215A))))
(assert (= (str.len stem15) l15))
(assert (= (ite (= ch15A var15A) 0 1) sc15A))
(assert (<= sc15A 1))
(assert (<= (str.len var16A) 1))
(assert (= (str.++ preA (str.++ stem16 sufA)) (str.++ unch116A (str.++ ch16A unch216A))))
(assert (= "skidH" (str.++ unch116A (str.++ var16A unch216A))))
(assert (= (str.len stem16) l16))
(assert (= (ite (= ch16A var16A) 0 1) sc16A))
(assert (<= sc16A 1))
(assert (= (+ 0
      0
      sc0A
      0
      sc1A
      0
      sc2A
      0
      sc3A
      0
      sc4A
      0
      sc5A
      0
      sc6A
      0
      sc7A
      0
      sc8A
      0
      sc9A
      0
      sc10A
      0
      sc11A
      0
      sc12A
      0
      sc13A
      0
      sc14A
      0
      sc15A
      0
      sc16A)
   19))
(assert (= (+ 0
      sc0A
      sc1A
      sc2A
      sc3A
      sc4A
      sc5A
      sc6A
      sc7A
      sc8A
      sc9A
      sc10A
      sc11A
      sc12A
      sc13A
      sc14A
      sc15A
      sc16A)
   0))

None
3.74user 0.02system 0:03.77elapsed 99%CPU (0avgtext+0avgdata 42920maxresident)k
0inputs+296outputs (0major+6210minor)pagefaults 0swaps
